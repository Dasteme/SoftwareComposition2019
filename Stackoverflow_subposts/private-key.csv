post_link,title,body_question,body_answer,viewcount,tags,score,score_answer,answercount,LastActivityDate,AcceptedAnswerId,CommentCount,FavoriteCount,LastEditorUserId,LastEditorDisplayName,LastEditDate,CreationDate,ClosedDate
"13732826","Convert .pem to .crt and .key","<p>Can anyone tell me the correct way/command to extract/convert the certificate <code>.crt</code> and private key <code>.key</code> files from a <code>.pem</code> file? I just read they are interchangable, but not how.</p>
","<p>I was able to convert pem to crt using this:</p>

<pre><code>openssl x509 -outform der -in your-cert.pem -out your-cert.crt
</code></pre>
","585219","<ssl><certificate><private-key>","312","439","5","2019-11-08 10:13:21","14484363","2","149","","","","2012-12-05 21:30:54",""
"13732826","Convert .pem to .crt and .key","<p>Can anyone tell me the correct way/command to extract/convert the certificate <code>.crt</code> and private key <code>.key</code> files from a <code>.pem</code> file? I just read they are interchangable, but not how.</p>
","<p><strong>Converting Using OpenSSL</strong></p>

<p>These commands allow you to convert certificates and keys to different formats to make them compatible with specific types of servers or software.</p>

<ul>
<li><p>Convert a DER file (.crt .cer .der) to PEM</p>

<pre><code>openssl x509 -inform der -in certificate.cer -out certificate.pem
</code></pre></li>
<li><p>Convert a PEM file to DER</p>

<pre><code>openssl x509 -outform der -in certificate.pem -out certificate.der
</code></pre></li>
<li><p>Convert a PKCS#12 file (.pfx .p12) containing a private key and certificates to PEM</p>

<pre><code>openssl pkcs12 -in keyStore.pfx -out keyStore.pem -nodes

You can add -nocerts to only output the private key or add -nokeys to only output the certificates.
</code></pre></li>
<li><p>Convert a PEM certificate file and a private key to PKCS#12 (.pfx .p12)</p>

<pre><code>openssl pkcs12 -export -out certificate.pfx -inkey privateKey.key -in certificate.crt -certfile CACert.crt
</code></pre></li>
<li><p>Convert PEM to CRT (.CRT file)</p>

<pre><code>openssl x509 -outform der -in certificate.pem -out certificate.crt
</code></pre></li>
</ul>

<p><strong>OpenSSL Convert PEM</strong></p>

<ul>
<li><p>Convert PEM to DER</p>

<pre><code>openssl x509 -outform der -in certificate.pem -out certificate.der
</code></pre></li>
<li><p>Convert PEM to P7B</p>

<pre><code>openssl crl2pkcs7 -nocrl -certfile certificate.cer -out certificate.p7b -certfile CACert.cer
</code></pre></li>
<li><p>Convert PEM to PFX</p>

<pre><code>openssl pkcs12 -export -out certificate.pfx -inkey privateKey.key -in certificate.crt -certfile CACert.crt
</code></pre></li>
</ul>

<p><strong>OpenSSL Convert DER</strong></p>

<ul>
<li><p>Convert DER to PEM</p>

<pre><code>openssl x509 -inform der -in certificate.cer -out certificate.pem
</code></pre></li>
</ul>

<p><strong>OpenSSL Convert P7B</strong></p>

<ul>
<li><p>Convert P7B to PEM</p>

<pre><code>openssl pkcs7 -print_certs -in certificate.p7b -out certificate.cer
</code></pre></li>
<li><p>Convert P7B to PFX</p>

<pre><code>openssl pkcs7 -print_certs -in certificate.p7b -out certificate.cer

openssl pkcs12 -export -in certificate.cer -inkey privateKey.key -out certificate.pfx -certfile CACert.cer
</code></pre></li>
</ul>

<p><strong>OpenSSL Convert PFX</strong></p>

<ul>
<li><p>Convert PFX to PEM</p>

<pre><code>openssl pkcs12 -in certificate.pfx -out certificate.cer -nodes
</code></pre></li>
</ul>

<p><strong>Generate rsa keys by OpenSSL</strong></p>

<ul>
<li><p>Using OpenSSL on the command line you’d first need to generate a public and private key, you should password protect this file using the -passout argument, there are many different forms that this argument can take so consult the OpenSSL documentation about that.</p>

<pre><code>openssl genrsa -out private.pem 1024
</code></pre></li>
<li><p>This creates a key file called private.pem that uses 1024 bits. This file actually have both the private and public keys, so you should extract the public one from this file:</p>

<pre><code>openssl rsa -in private.pem -out public.pem -outform PEM -pubout

or

openssl rsa -in private.pem -pubout &gt; public.pem

or

openssl rsa -in private.pem -pubout -out public.pem
</code></pre>

<blockquote>
  <p>You’ll now have public.pem containing just your public key, you can freely share this with 3rd parties.
  You can test it all by just encrypting something yourself using your public key and then decrypting using your private key, first we need a bit of data to encrypt:</p>
</blockquote></li>
<li><p>Example file :</p>

<pre><code>echo 'too many secrets' &gt; file.txt
</code></pre></li>
<li><p>You now have some data in file.txt, lets encrypt it using OpenSSL and
the public key:</p>

<pre><code>openssl rsautl -encrypt -inkey public.pem -pubin -in file.txt -out file.ssl
</code></pre></li>
<li><p>This creates an encrypted version of file.txt calling it file.ssl, if
you look at this file it’s just binary junk, nothing very useful to
anyone. Now you can unencrypt it using the private key:</p>

<pre><code>openssl rsautl -decrypt -inkey private.pem -in file.ssl -out decrypted.txt
</code></pre></li>
<li><p>You will now have an unencrypted file in decrypted.txt:</p>

<pre><code>cat decrypted.txt
|output -&gt; too many secrets
</code></pre></li>
</ul>

<p><strong>RSA TOOLS Options in OpenSSL</strong></p>

<ul>
<li><p><strong>NAME</strong></p>

<blockquote>
  <p>rsa - RSA key processing tool</p>
</blockquote></li>
<li><p><strong>SYNOPSIS</strong></p>

<blockquote>
  <p>openssl rsa [-help] [-inform PEM|NET|DER] [-outform PEM|NET|DER] [-in filename] [-passin arg] [-out filename] [-passout arg] [-aes128] [-aes192] [-aes256] [-camellia128] [-camellia192] [-camellia256] [-des] [-des3] [-idea] [-text] [-noout] [-modulus] [-check] [-pubin] [-pubout] [-RSAPublicKey_in] [-RSAPublicKey_out] [-engine id]</p>
</blockquote></li>
<li><p><strong>DESCRIPTION</strong></p>

<blockquote>
  <p>The rsa command processes RSA keys. They can be converted between various forms and their components printed out. Note this command uses the traditional SSLeay compatible format for private key encryption: newer applications should use the more secure PKCS#8 format using the pkcs8 utility.</p>
</blockquote></li>
<li><p><strong>COMMAND OPTIONS</strong></p>

<pre><code>-help
</code></pre>

<blockquote>
  <p>Print out a usage message.</p>
</blockquote>

<pre><code>-inform DER|NET|PEM
</code></pre>

<blockquote>
  <p>This specifies the input format. The DER option uses an ASN1 DER encoded form compatible with the PKCS#1 RSAPrivateKey or SubjectPublicKeyInfo format. The PEM form is the default format: it consists of the DER format base64 encoded with additional header and footer lines. On input PKCS#8 format private keys are also accepted. The NET form is a format is described in the NOTES section.</p>
</blockquote>

<pre><code>-outform DER|NET|PEM
</code></pre>

<blockquote>
  <p>This specifies the output format, the options have the same meaning as the -inform option.</p>
</blockquote>

<pre><code>-in filename
</code></pre>

<blockquote>
  <p>This specifies the input filename to read a key from or standard input if this option is not specified. If the key is encrypted a pass phrase will be prompted for.</p>
</blockquote>

<pre><code>-passin arg
</code></pre>

<blockquote>
  <p>the input file password source. For more information about the format of arg see the PASS PHRASE ARGUMENTS section in openssl.</p>
</blockquote>

<pre><code>-out filename
</code></pre>

<blockquote>
  <p>This specifies the output filename to write a key to or standard output if this option is not specified. If any encryption options are set then a pass phrase will be prompted for. The output filename should not be the same as the input filename.</p>
</blockquote>

<pre><code>-passout password
</code></pre>

<blockquote>
  <p>the output file password source. For more information about the format of arg see the PASS PHRASE ARGUMENTS section in openssl.</p>
</blockquote>

<pre><code>-aes128|-aes192|-aes256|-camellia128|-camellia192|-camellia256|-des|-des3|-idea
</code></pre>

<blockquote>
  <p>These options encrypt the private key with the specified cipher before outputting it. A pass phrase is prompted for. If none of these options is specified the key is written in plain text. This means that using the rsa utility to read in an encrypted key with no encryption option can be used to remove the pass phrase from a key, or by setting the encryption options it can be use to add or change the pass phrase. These options can only be used with PEM format output files.</p>
</blockquote>

<pre><code>-text
</code></pre>

<blockquote>
  <p>prints out the various public or private key components in plain text in addition to the encoded version.</p>
</blockquote>

<pre><code>-noout
</code></pre>

<blockquote>
  <p>this option prevents output of the encoded version of the key.</p>
</blockquote>

<pre><code>-modulus
</code></pre>

<blockquote>
  <p>this option prints out the value of the modulus of the key.</p>
</blockquote>

<pre><code>-check
</code></pre>

<blockquote>
  <p>this option checks the consistency of an RSA private key.</p>
</blockquote>

<pre><code>-pubin
</code></pre>

<blockquote>
  <p>by default a private key is read from the input file: with this option a public key is read instead.</p>
</blockquote>

<pre><code>-pubout
</code></pre>

<blockquote>
  <p>by default a private key is output: with this option a public key will be output instead. This option is automatically set if the input is a public key.</p>
</blockquote>

<pre><code>-RSAPublicKey_in, -RSAPublicKey_out
</code></pre>

<blockquote>
  <p>like -pubin and -pubout except RSAPublicKey format is used instead.</p>
</blockquote>

<pre><code>-engine id
</code></pre>

<blockquote>
  <p>specifying an engine (by its unique id string) will cause rsa to attempt to obtain a functional reference to the specified engine, thus initialising it if needed. The engine will then be set as the default for all available algorithms.</p>
</blockquote></li>
<li><p><strong>NOTES</strong></p>

<p>The PEM private key format uses the header and footer lines:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----

-----END RSA PRIVATE KEY-----
</code></pre>

<p>The PEM public key format uses the header and footer lines:</p>

<pre><code>-----BEGIN PUBLIC KEY-----

-----END PUBLIC KEY-----
</code></pre>

<p>The PEM RSAPublicKey format uses the header and footer lines:</p>

<pre><code>-----BEGIN RSA PUBLIC KEY-----

-----END RSA PUBLIC KEY-----
</code></pre>

<blockquote>
  <p>The NET form is a format compatible with older Netscape servers and Microsoft IIS .key files, this uses unsalted RC4 for its encryption. It is not very secure and so should only be used when necessary.</p>
  
  <p>Some newer version of IIS have additional data in the exported .key files. To use these with the utility, view the file with a binary editor and look for the string ""private-key"", then trace back to the byte sequence 0x30, 0x82 (this is an ASN1 SEQUENCE). Copy all the data from this point onwards to another file and use that as the input to the rsa utility with the -inform NET option.</p>
</blockquote>

<p><strong>EXAMPLES</strong></p>

<p>To remove the pass phrase on an RSA private key:</p>

<pre><code> openssl rsa -in key.pem -out keyout.pem
</code></pre>

<p>To encrypt a private key using triple DES:</p>

<pre><code> openssl rsa -in key.pem -des3 -out keyout.pem
</code></pre>

<p>To convert a private key from PEM to DER format:</p>

<pre><code>  openssl rsa -in key.pem -outform DER -out keyout.der
</code></pre>

<p>To print out the components of a private key to standard output:</p>

<pre><code>  openssl rsa -in key.pem -text -noout
</code></pre>

<p>To just output the public part of a private key:</p>

<pre><code>  openssl rsa -in key.pem -pubout -out pubkey.pem
</code></pre>

<p>Output the public part of a private key in RSAPublicKey format:</p>

<pre><code>  openssl rsa -in key.pem -RSAPublicKey_out -out pubkey.pem
</code></pre></li>
</ul>
","585219","<ssl><certificate><private-key>","312","333","5","2019-11-08 10:13:21","14484363","2","149","","","","2012-12-05 21:30:54",""
"13732826","Convert .pem to .crt and .key","<p>Can anyone tell me the correct way/command to extract/convert the certificate <code>.crt</code> and private key <code>.key</code> files from a <code>.pem</code> file? I just read they are interchangable, but not how.</p>
","<p>To extract the key and cert from a pem file:</p>

<h3>Extract key</h3>

<pre><code>openssl pkey -in foo.pem -out foo.key
</code></pre>

<p>Another method of extracting the key...</p>

<pre><code>openssl rsa -in foo.pem -out foo.key
</code></pre>

<h3>Extract all the certs, including the CA Chain</h3>

<pre><code>openssl crl2pkcs7 -nocrl -certfile foo.pem | openssl pkcs7 -print_certs -out foo.cert
</code></pre>

<h3>Extract the textually first cert as DER</h3>

<pre><code>openssl x509 -in foo.pem -outform DER -out first-cert.der
</code></pre>
","585219","<ssl><certificate><private-key>","312","35","5","2019-11-08 10:13:21","14484363","2","149","","","","2012-12-05 21:30:54",""
"13732826","Convert .pem to .crt and .key","<p>Can anyone tell me the correct way/command to extract/convert the certificate <code>.crt</code> and private key <code>.key</code> files from a <code>.pem</code> file? I just read they are interchangable, but not how.</p>
","<p>A .crt stores the certificate..  in pem format.  So a .pem, while it can also have other things like a csr (Certificate signing request), a private key, a public key, or other certs, when it is storing just a cert, is the same thing as a .crt.</p>

<p>A pem is a base 64 encoded file with a header and a footer between each section.</p>

<p>To extract a particular section, a perl script such as the following is totally valid, but feel free to use some of the openssl commands.</p>

<pre><code> perl -ne ""\$n++ if /BEGIN/; print if \$n == 1 &amp;&amp; /BEGIN/.../END/;"" mydomain.pem
</code></pre>

<p>where ==1 can be changed to which ever section you need.  Obviously if you know exactly the header and footer you require and there is only one of those in the file (usually the case if you keep just the cert and the key in there), you can simplify it:</p>

<pre><code> perl -ne ""print if /^-----BEGIN CERTIFICATE-----\$/.../END/;"" mydomain.pem
</code></pre>
","585219","<ssl><certificate><private-key>","312","2","5","2019-11-08 10:13:21","14484363","2","149","","","","2012-12-05 21:30:54",""
"13732826","Convert .pem to .crt and .key","<p>Can anyone tell me the correct way/command to extract/convert the certificate <code>.crt</code> and private key <code>.key</code> files from a <code>.pem</code> file? I just read they are interchangable, but not how.</p>
","<p>If you asked this question because you're using <code>mkcert</code> then the trick is that the <code>.pem</code> file is the cert and the <code>-key.pem</code> file is the key.</p>

<p>(You don't need to convert, just run <code>mkcert yourdomain.dev otherdomain.dev</code> )</p>
","585219","<ssl><certificate><private-key>","312","-1","5","2019-11-08 10:13:21","14484363","2","149","","","","2012-12-05 21:30:54",""
"18460035","Unable to load Private Key. (PEM routines:PEM_read_bio:no start line:pem_lib.c:648:Expecting: ANY PRIVATE KEY)","<p>I have a .key file which is PEM formatted private key file. I didn't make this file but I got this from somewhere.</p>

<p>I wanted to see its MD5 hash with openssl tool like below command.</p>

<pre><code>openssl rsa -in server.key -modulus -noout
</code></pre>

<p>But this generates below error.</p>

<pre><code>unable to load Private Key
13440:error:0906D06C:PEM routines:PEM_read_bio:no start line:.\crypto\pem\pem_lib.c:648:Expecting: ANY PRIVATE KEY
</code></pre>

<p>Here's some asn1parse of the .key file.</p>

<pre><code>openssl asn1parse -in server.key
0:d=0  hl=4 l= 603 cons: SEQUENCE
4:d=1  hl=2 l=   1 prim: INTEGER           :00
7:d=1  hl=3 l= 129 prim: INTEGER           :C141201603899993919CBAA56985E9C7
C6A2AF713A02F5FE88D38CEFBED9304599689280B84B0AB577A9719CA20DDA1246A894AF397A2C57
EE5A582B036CC367E3667454DCD82DBDBF187C35FE39F61C71B517DDDF576F5471B4EC2E045E0F9D
619F5616C4E832F00CBD0DBF41B4BA3CBC4B4B603AE1FE61965917DA732E0DEF
139:d=1  hl=2 l=   3 prim: INTEGER           :010001
144:d=1  hl=3 l= 128 prim: INTEGER           :1687B9AE67562CEDEBDD7A531B84CDB7
093CE138519B93C34B7F626076FF0A262B16EA71904ACB6251A39307C04ADE202055BA13DD9F1539
6123EE408183361A9BC08B9413FA360EA928E48CC3F52B33ACF2980758F02BA2139F652F30A257C2
2E45D7C25835FC4D22B9ECECC12AB632318D4F47E1EBDAD9781B96BCFF03A2D1

 ...
</code></pre>

<p>Is there anything more I can try?</p>
","<pre><code>&gt; I have a .key file which is PEM formatted private key file.
&gt; ...
&gt; Here's some asn1parse of the .key file...
</code></pre>

<p>That it appears OK with <code>asn1parse</code> leads me to believe its <em>not</em> PEM encoded.</p>

<hr>

<blockquote>
  <p>Is there anything more I can try?</p>
</blockquote>

<p>Because it appears to be ASN.1, try:</p>

<pre><code>$ openssl rsa -in server.key -inform DER -modulus -noout
</code></pre>

<p>Notice the <code>-inform DER</code> to switch between encodings.</p>
","176473","<openssl><private-key>","64","6","8","2019-08-10 22:55:38","","2","13","608639","","2014-09-20 08:29:31","2013-08-27 07:58:17",""
"18460035","Unable to load Private Key. (PEM routines:PEM_read_bio:no start line:pem_lib.c:648:Expecting: ANY PRIVATE KEY)","<p>I have a .key file which is PEM formatted private key file. I didn't make this file but I got this from somewhere.</p>

<p>I wanted to see its MD5 hash with openssl tool like below command.</p>

<pre><code>openssl rsa -in server.key -modulus -noout
</code></pre>

<p>But this generates below error.</p>

<pre><code>unable to load Private Key
13440:error:0906D06C:PEM routines:PEM_read_bio:no start line:.\crypto\pem\pem_lib.c:648:Expecting: ANY PRIVATE KEY
</code></pre>

<p>Here's some asn1parse of the .key file.</p>

<pre><code>openssl asn1parse -in server.key
0:d=0  hl=4 l= 603 cons: SEQUENCE
4:d=1  hl=2 l=   1 prim: INTEGER           :00
7:d=1  hl=3 l= 129 prim: INTEGER           :C141201603899993919CBAA56985E9C7
C6A2AF713A02F5FE88D38CEFBED9304599689280B84B0AB577A9719CA20DDA1246A894AF397A2C57
EE5A582B036CC367E3667454DCD82DBDBF187C35FE39F61C71B517DDDF576F5471B4EC2E045E0F9D
619F5616C4E832F00CBD0DBF41B4BA3CBC4B4B603AE1FE61965917DA732E0DEF
139:d=1  hl=2 l=   3 prim: INTEGER           :010001
144:d=1  hl=3 l= 128 prim: INTEGER           :1687B9AE67562CEDEBDD7A531B84CDB7
093CE138519B93C34B7F626076FF0A262B16EA71904ACB6251A39307C04ADE202055BA13DD9F1539
6123EE408183361A9BC08B9413FA360EA928E48CC3F52B33ACF2980758F02BA2139F652F30A257C2
2E45D7C25835FC4D22B9ECECC12AB632318D4F47E1EBDAD9781B96BCFF03A2D1

 ...
</code></pre>

<p>Is there anything more I can try?</p>
","<p>I changed the header and footer of the PEM file to </p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
</code></pre>

<p>and</p>

<pre><code>-----END RSA PRIVATE KEY-----
</code></pre>

<p>Finally, it works!</p>
","176473","<openssl><private-key>","64","41","8","2019-08-10 22:55:38","","2","13","608639","","2014-09-20 08:29:31","2013-08-27 07:58:17",""
"18460035","Unable to load Private Key. (PEM routines:PEM_read_bio:no start line:pem_lib.c:648:Expecting: ANY PRIVATE KEY)","<p>I have a .key file which is PEM formatted private key file. I didn't make this file but I got this from somewhere.</p>

<p>I wanted to see its MD5 hash with openssl tool like below command.</p>

<pre><code>openssl rsa -in server.key -modulus -noout
</code></pre>

<p>But this generates below error.</p>

<pre><code>unable to load Private Key
13440:error:0906D06C:PEM routines:PEM_read_bio:no start line:.\crypto\pem\pem_lib.c:648:Expecting: ANY PRIVATE KEY
</code></pre>

<p>Here's some asn1parse of the .key file.</p>

<pre><code>openssl asn1parse -in server.key
0:d=0  hl=4 l= 603 cons: SEQUENCE
4:d=1  hl=2 l=   1 prim: INTEGER           :00
7:d=1  hl=3 l= 129 prim: INTEGER           :C141201603899993919CBAA56985E9C7
C6A2AF713A02F5FE88D38CEFBED9304599689280B84B0AB577A9719CA20DDA1246A894AF397A2C57
EE5A582B036CC367E3667454DCD82DBDBF187C35FE39F61C71B517DDDF576F5471B4EC2E045E0F9D
619F5616C4E832F00CBD0DBF41B4BA3CBC4B4B603AE1FE61965917DA732E0DEF
139:d=1  hl=2 l=   3 prim: INTEGER           :010001
144:d=1  hl=3 l= 128 prim: INTEGER           :1687B9AE67562CEDEBDD7A531B84CDB7
093CE138519B93C34B7F626076FF0A262B16EA71904ACB6251A39307C04ADE202055BA13DD9F1539
6123EE408183361A9BC08B9413FA360EA928E48CC3F52B33ACF2980758F02BA2139F652F30A257C2
2E45D7C25835FC4D22B9ECECC12AB632318D4F47E1EBDAD9781B96BCFF03A2D1

 ...
</code></pre>

<p>Is there anything more I can try?</p>
","<p>Remove any whitespace at the start of the .key file.</p>
","176473","<openssl><private-key>","64","5","8","2019-08-10 22:55:38","","2","13","608639","","2014-09-20 08:29:31","2013-08-27 07:58:17",""
"18460035","Unable to load Private Key. (PEM routines:PEM_read_bio:no start line:pem_lib.c:648:Expecting: ANY PRIVATE KEY)","<p>I have a .key file which is PEM formatted private key file. I didn't make this file but I got this from somewhere.</p>

<p>I wanted to see its MD5 hash with openssl tool like below command.</p>

<pre><code>openssl rsa -in server.key -modulus -noout
</code></pre>

<p>But this generates below error.</p>

<pre><code>unable to load Private Key
13440:error:0906D06C:PEM routines:PEM_read_bio:no start line:.\crypto\pem\pem_lib.c:648:Expecting: ANY PRIVATE KEY
</code></pre>

<p>Here's some asn1parse of the .key file.</p>

<pre><code>openssl asn1parse -in server.key
0:d=0  hl=4 l= 603 cons: SEQUENCE
4:d=1  hl=2 l=   1 prim: INTEGER           :00
7:d=1  hl=3 l= 129 prim: INTEGER           :C141201603899993919CBAA56985E9C7
C6A2AF713A02F5FE88D38CEFBED9304599689280B84B0AB577A9719CA20DDA1246A894AF397A2C57
EE5A582B036CC367E3667454DCD82DBDBF187C35FE39F61C71B517DDDF576F5471B4EC2E045E0F9D
619F5616C4E832F00CBD0DBF41B4BA3CBC4B4B603AE1FE61965917DA732E0DEF
139:d=1  hl=2 l=   3 prim: INTEGER           :010001
144:d=1  hl=3 l= 128 prim: INTEGER           :1687B9AE67562CEDEBDD7A531B84CDB7
093CE138519B93C34B7F626076FF0A262B16EA71904ACB6251A39307C04ADE202055BA13DD9F1539
6123EE408183361A9BC08B9413FA360EA928E48CC3F52B33ACF2980758F02BA2139F652F30A257C2
2E45D7C25835FC4D22B9ECECC12AB632318D4F47E1EBDAD9781B96BCFF03A2D1

 ...
</code></pre>

<p>Is there anything more I can try?</p>
","<h1>Create CA certificate</h1>

<pre><code>c:\mycert&gt;openssl genrsa -out privateKey.pem 4096
c:\mycert&gt;openssl req -new -x509 -nodes -days 3600 -key privateKey.pem -out caKey.pem
</code></pre>
","176473","<openssl><private-key>","64","3","8","2019-08-10 22:55:38","","2","13","608639","","2014-09-20 08:29:31","2013-08-27 07:58:17",""
"18460035","Unable to load Private Key. (PEM routines:PEM_read_bio:no start line:pem_lib.c:648:Expecting: ANY PRIVATE KEY)","<p>I have a .key file which is PEM formatted private key file. I didn't make this file but I got this from somewhere.</p>

<p>I wanted to see its MD5 hash with openssl tool like below command.</p>

<pre><code>openssl rsa -in server.key -modulus -noout
</code></pre>

<p>But this generates below error.</p>

<pre><code>unable to load Private Key
13440:error:0906D06C:PEM routines:PEM_read_bio:no start line:.\crypto\pem\pem_lib.c:648:Expecting: ANY PRIVATE KEY
</code></pre>

<p>Here's some asn1parse of the .key file.</p>

<pre><code>openssl asn1parse -in server.key
0:d=0  hl=4 l= 603 cons: SEQUENCE
4:d=1  hl=2 l=   1 prim: INTEGER           :00
7:d=1  hl=3 l= 129 prim: INTEGER           :C141201603899993919CBAA56985E9C7
C6A2AF713A02F5FE88D38CEFBED9304599689280B84B0AB577A9719CA20DDA1246A894AF397A2C57
EE5A582B036CC367E3667454DCD82DBDBF187C35FE39F61C71B517DDDF576F5471B4EC2E045E0F9D
619F5616C4E832F00CBD0DBF41B4BA3CBC4B4B603AE1FE61965917DA732E0DEF
139:d=1  hl=2 l=   3 prim: INTEGER           :010001
144:d=1  hl=3 l= 128 prim: INTEGER           :1687B9AE67562CEDEBDD7A531B84CDB7
093CE138519B93C34B7F626076FF0A262B16EA71904ACB6251A39307C04ADE202055BA13DD9F1539
6123EE408183361A9BC08B9413FA360EA928E48CC3F52B33ACF2980758F02BA2139F652F30A257C2
2E45D7C25835FC4D22B9ECECC12AB632318D4F47E1EBDAD9781B96BCFF03A2D1

 ...
</code></pre>

<p>Is there anything more I can try?</p>
","<p>I'm on Windows 10 and I saved my key with <strong>Windows1252</strong> encoding and it worked for me. On another StackOverflow question some people were fixing this with <strong>UTF-8 with BOM</strong>.</p>

<p>In other words, it may be the file encoding.</p>
","176473","<openssl><private-key>","64","2","8","2019-08-10 22:55:38","","2","13","608639","","2014-09-20 08:29:31","2013-08-27 07:58:17",""
"18460035","Unable to load Private Key. (PEM routines:PEM_read_bio:no start line:pem_lib.c:648:Expecting: ANY PRIVATE KEY)","<p>I have a .key file which is PEM formatted private key file. I didn't make this file but I got this from somewhere.</p>

<p>I wanted to see its MD5 hash with openssl tool like below command.</p>

<pre><code>openssl rsa -in server.key -modulus -noout
</code></pre>

<p>But this generates below error.</p>

<pre><code>unable to load Private Key
13440:error:0906D06C:PEM routines:PEM_read_bio:no start line:.\crypto\pem\pem_lib.c:648:Expecting: ANY PRIVATE KEY
</code></pre>

<p>Here's some asn1parse of the .key file.</p>

<pre><code>openssl asn1parse -in server.key
0:d=0  hl=4 l= 603 cons: SEQUENCE
4:d=1  hl=2 l=   1 prim: INTEGER           :00
7:d=1  hl=3 l= 129 prim: INTEGER           :C141201603899993919CBAA56985E9C7
C6A2AF713A02F5FE88D38CEFBED9304599689280B84B0AB577A9719CA20DDA1246A894AF397A2C57
EE5A582B036CC367E3667454DCD82DBDBF187C35FE39F61C71B517DDDF576F5471B4EC2E045E0F9D
619F5616C4E832F00CBD0DBF41B4BA3CBC4B4B603AE1FE61965917DA732E0DEF
139:d=1  hl=2 l=   3 prim: INTEGER           :010001
144:d=1  hl=3 l= 128 prim: INTEGER           :1687B9AE67562CEDEBDD7A531B84CDB7
093CE138519B93C34B7F626076FF0A262B16EA71904ACB6251A39307C04ADE202055BA13DD9F1539
6123EE408183361A9BC08B9413FA360EA928E48CC3F52B33ACF2980758F02BA2139F652F30A257C2
2E45D7C25835FC4D22B9ECECC12AB632318D4F47E1EBDAD9781B96BCFF03A2D1

 ...
</code></pre>

<p>Is there anything more I can try?</p>
","<p>Why not using cetificate bot</p>

<blockquote>
  <p>yum install epel-release</p>
  
  <p>yum install certbot-nginx</p>
</blockquote>

<p>Obtaining a Certificate</p>

<blockquote>
  <p>certbot --nginx -d example.com -d www.example.com</p>
</blockquote>
","176473","<openssl><private-key>","64","-2","8","2019-08-10 22:55:38","","2","13","608639","","2014-09-20 08:29:31","2013-08-27 07:58:17",""
"18460035","Unable to load Private Key. (PEM routines:PEM_read_bio:no start line:pem_lib.c:648:Expecting: ANY PRIVATE KEY)","<p>I have a .key file which is PEM formatted private key file. I didn't make this file but I got this from somewhere.</p>

<p>I wanted to see its MD5 hash with openssl tool like below command.</p>

<pre><code>openssl rsa -in server.key -modulus -noout
</code></pre>

<p>But this generates below error.</p>

<pre><code>unable to load Private Key
13440:error:0906D06C:PEM routines:PEM_read_bio:no start line:.\crypto\pem\pem_lib.c:648:Expecting: ANY PRIVATE KEY
</code></pre>

<p>Here's some asn1parse of the .key file.</p>

<pre><code>openssl asn1parse -in server.key
0:d=0  hl=4 l= 603 cons: SEQUENCE
4:d=1  hl=2 l=   1 prim: INTEGER           :00
7:d=1  hl=3 l= 129 prim: INTEGER           :C141201603899993919CBAA56985E9C7
C6A2AF713A02F5FE88D38CEFBED9304599689280B84B0AB577A9719CA20DDA1246A894AF397A2C57
EE5A582B036CC367E3667454DCD82DBDBF187C35FE39F61C71B517DDDF576F5471B4EC2E045E0F9D
619F5616C4E832F00CBD0DBF41B4BA3CBC4B4B603AE1FE61965917DA732E0DEF
139:d=1  hl=2 l=   3 prim: INTEGER           :010001
144:d=1  hl=3 l= 128 prim: INTEGER           :1687B9AE67562CEDEBDD7A531B84CDB7
093CE138519B93C34B7F626076FF0A262B16EA71904ACB6251A39307C04ADE202055BA13DD9F1539
6123EE408183361A9BC08B9413FA360EA928E48CC3F52B33ACF2980758F02BA2139F652F30A257C2
2E45D7C25835FC4D22B9ECECC12AB632318D4F47E1EBDAD9781B96BCFF03A2D1

 ...
</code></pre>

<p>Is there anything more I can try?</p>
","<p>your .key file contains illegal characters. you can check .key file like this:</p>

<pre><code># file server.key
</code></pre>

<p>output ""server.key: UTF-8 Unicode (with BOM) text"" means it is a plain text, not a key file. The correct output should be ""server.key: PEM RSA private key"".</p>

<p>use below command to remove illegal characters:</p>

<pre><code># tail -c +4 server.key &gt; new_server.key
</code></pre>

<p>The new_server.key should be correct.</p>

<p>For more detail, you can click <a href=""https://blog.assarbad.net/20120920/ssl-error-with-a-newly-signed-cert/"" rel=""noreferrer"">here</a>, thanks for the post.</p>
","176473","<openssl><private-key>","64","14","8","2019-08-10 22:55:38","","2","13","608639","","2014-09-20 08:29:31","2013-08-27 07:58:17",""
"18460035","Unable to load Private Key. (PEM routines:PEM_read_bio:no start line:pem_lib.c:648:Expecting: ANY PRIVATE KEY)","<p>I have a .key file which is PEM formatted private key file. I didn't make this file but I got this from somewhere.</p>

<p>I wanted to see its MD5 hash with openssl tool like below command.</p>

<pre><code>openssl rsa -in server.key -modulus -noout
</code></pre>

<p>But this generates below error.</p>

<pre><code>unable to load Private Key
13440:error:0906D06C:PEM routines:PEM_read_bio:no start line:.\crypto\pem\pem_lib.c:648:Expecting: ANY PRIVATE KEY
</code></pre>

<p>Here's some asn1parse of the .key file.</p>

<pre><code>openssl asn1parse -in server.key
0:d=0  hl=4 l= 603 cons: SEQUENCE
4:d=1  hl=2 l=   1 prim: INTEGER           :00
7:d=1  hl=3 l= 129 prim: INTEGER           :C141201603899993919CBAA56985E9C7
C6A2AF713A02F5FE88D38CEFBED9304599689280B84B0AB577A9719CA20DDA1246A894AF397A2C57
EE5A582B036CC367E3667454DCD82DBDBF187C35FE39F61C71B517DDDF576F5471B4EC2E045E0F9D
619F5616C4E832F00CBD0DBF41B4BA3CBC4B4B603AE1FE61965917DA732E0DEF
139:d=1  hl=2 l=   3 prim: INTEGER           :010001
144:d=1  hl=3 l= 128 prim: INTEGER           :1687B9AE67562CEDEBDD7A531B84CDB7
093CE138519B93C34B7F626076FF0A262B16EA71904ACB6251A39307C04ADE202055BA13DD9F1539
6123EE408183361A9BC08B9413FA360EA928E48CC3F52B33ACF2980758F02BA2139F652F30A257C2
2E45D7C25835FC4D22B9ECECC12AB632318D4F47E1EBDAD9781B96BCFF03A2D1

 ...
</code></pre>

<p>Is there anything more I can try?</p>
","<p>Open the key file in Notepad++ and verify the encoding.  If it says UTF-8-BOM then change it to UTF-8.  Save the file and try again.</p>
","176473","<openssl><private-key>","64","23","8","2019-08-10 22:55:38","","2","13","608639","","2014-09-20 08:29:31","2013-08-27 07:58:17",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>Make sure your first network interface is NAT. The other second network interface can be anything you want when you're building box. Don't forget the Vagrant user, as discussed in the Google thread. </p>

<p>Good luck. </p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","2","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p><strong>For general information:</strong> by default to ssh-connect you may simply use</p>

<p>user: <code>vagrant</code> password: <code>vagrant</code></p>

<p><a href=""https://www.vagrantup.com/docs/boxes/base.html#quot-vagrant-quot-user"" rel=""noreferrer"">https://www.vagrantup.com/docs/boxes/base.html#quot-vagrant-quot-user</a></p>

<p><strong>First, try:</strong> to see what vagrant <code>insecure_private_key</code> is in your machine config</p>

<pre><code>$ vagrant ssh-config
</code></pre>

<p>Example:</p>

<pre><code>$ vagrant ssh-config
Host default
  HostName 127.0.0.1
  User vagrant
  Port 2222
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  IdentityFile C:/Users/konst/.vagrant.d/insecure_private_key
  IdentitiesOnly yes
  LogLevel FATAL
</code></pre>

<p><a href=""http://docs.vagrantup.com/v2/cli/ssh_config.html"" rel=""noreferrer"">http://docs.vagrantup.com/v2/cli/ssh_config.html</a></p>

<p><strong>Second, do:</strong>
Change the contents of file <code>insecure_private_key</code> with the contents of your personal system <em>private key</em></p>

<p><strong>Or use:</strong>
Add it to the Vagrantfile:</p>

<pre><code>Vagrant.configure(""2"") do |config|
  config.ssh.private_key_path = ""~/.ssh/id_rsa""
  config.ssh.forward_agent = true
end
</code></pre>

<ol>
<li><code>config.ssh.private_key_path</code> is your local private key</li>
<li>Your private key must be available to the local ssh-agent. You can check with <code>ssh-add -L</code>. If it's not listed, add it with <code>ssh-add ~/.ssh/id_rsa</code></li>
<li>Don't forget to add your public key to <code>~/.ssh/authorized_keys</code> on the Vagrant VM. You can do it by copy-and-pasting or using a tool like <a href=""http://linux.die.net/man/1/ssh-copy-id"" rel=""noreferrer"">ssh-copy-id</a> (user: <code>root</code> password: <code>vagrant</code> port: 2222) <code>ssh-copy-id '-p 2222 root@127.0.0.1'</code></li>
</ol>

<p><strong>If still does not work try this:</strong></p>

<ol>
<li><p>Remove <code>insecure_private_key</code> file from <code>c:\Users\USERNAME\.vagrant.d\insecure_private_key</code></p></li>
<li><p>Run <code>vagrant up</code> (vagrant will be generate a new <code>insecure_private_key</code> file)</p></li>
</ol>

<p><strong>In other cases, it is helpful to just set <a href=""http://docs.vagrantup.com/v2/vagrantfile/ssh_settings.html"" rel=""noreferrer"">forward_agent</a> in</strong> <code>Vagrantfile</code>:</p>

<pre><code>Vagrant::Config.run do |config|
   config.ssh.forward_agent = true
end
</code></pre>

<p><strong>Useful:</strong></p>

<p>Configurating <strong>git</strong> may be with <a href=""http://git-scm.com"" rel=""noreferrer"">git-scm.com</a></p>

<p>After setup this program and creating personal system <em>private key</em> will be in yours profile path: <code>c:\users\USERNAME\.ssh\id_rsa.pub</code></p>

<p><strong>PS:</strong> Finally - suggest you look at <a href=""https://msdn.microsoft.com/en-us/commandline/wsl/install_guide"" rel=""noreferrer"">Ubuntu on Windows 10</a></p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","163","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>Problem I was getting the ssh authentication errors, on a box I provisioned. The original was working ok.</p>

<p>The problem for me was I was missing a private key in <code>.vagrant/machines/default/virtualbox/private_key</code>. I copied the private key from the same relative location from the original box and Viola!</p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","8","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>for me, this was resolved by changing the permissions on .ssh folder in vagrant home directort (i.e. ""~vagrant/.ssh""). I think I messed up the permissions when I was setting up ssh keys for my application.</p>

<p>It seems that 'authorized_keys' file must be 'rw' only for 'vagrant' user so ""chmod 600 authorized_keys""; the same goes for the directory itself and its parent:</p>

<p>so:</p>

<pre><code>chmod 600 authorized_keys
chmod 700 .
chmod 700 ..
</code></pre>

<p>It was only after I had <em>all</em> these permissions restored that vagrant ssh started to work again.</p>

<p>I think it's something to do with ssh security. It refuses to recognise certificates if they are any way accessible beyond the current user, so vagrants attempts to login are thus rejected.</p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","4","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>This can also happen if you're trying to force your VM to use a root user by default for SSH....</p>

<p>For example, a config like so in your Vagrantfile may cause this failure:</p>

<pre><code>config.ssh.username = 'root'
config.ssh.password = 'vagrant'
config.ssh.insert_key = 'true'
</code></pre>

<p>Solution: Comment out those lines and try again!</p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","10","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>None of the above worked for me. Somehow the box had the wrong public key added in the vagrant user <em>authorised_keys</em> file. </p>

<p>If you can still ssh on the box with the vagrant password (password is vagrant),  i.e.</p>

<pre><code>ssh vagrant@localhost -p 2222
</code></pre>

<p>then copy the public key content from <a href=""https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub"">https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub</a> to the authorised_keys file with the following command</p>

<pre><code>echo ""ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key"" &gt; .ssh/authorized_keys
</code></pre>

<p>When done exit the VM and try vagrant ssh again. It should work now.</p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","82","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>If you are using default SSH setup in your VagrantFile and started seeing SSH authentication errors after re-associating your VM box due to crash, try replacing public key in your vagrant machine.</p>

<p>Vagrant replaces public key associated with insecure private key pair at each log out due to security reasons. If you didn't properly shut down your machine, public/private key pair can go out of sync, causing SSH authentication error.</p>

<p>To resolve this issue, simply load up the current insecure private key and then copy the public key pair into your VM's authorized_keys file.</p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","4","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>Run the following commands in guest machine/VM:</p>

<pre><code>wget https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub -O ~/.ssh/authorized_keys
chmod 700 ~/.ssh
chmod 600 ~/.ssh/authorized_keys
chown -R vagrant:vagrant ~/.ssh
</code></pre>

<p>Then do vagrant halt. This will remove and regenerate your private keys.</p>

<p>(These steps assume you have already created or already have the ~/.ssh/ and ~/.ssh/authorized_keys directories under your home folder.)</p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","41","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>I have started the machine, then:</p>

<p><code>vagrant ssh-config</code></p>

<p>I've gotten the following:</p>

<p><code>
Host default
  HostName 127.0.0.1
  User vagrant
  Port 2222
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  IdentityFile /Users/my-user-name/Documents/PHP-Projects/my-php-project/puphpet/files/dot/ssh/id_rsa
  IdentityFile /Users/my-user-name/.vagrant.d/insecure_private_key
  IdentitiesOnly yes
  LogLevel FATAL
</code></p>

<p>Then I've ran</p>

<p><code>
cat ~/.ssh/id_rsa &gt; /Users/my-user-name/Documents/PHP-Projects/my-php-project/puphpet/files/dot/ssh/id_rsa
</code></p>

<p>Machine booted from here on</p>

<ul>
<li>El Capitan 10.11.1 Beta (15B38b) </li>
<li>Virtual Box 5.0.8 r103449 </li>
<li>Vagrant 1.7.4</li>
</ul>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","0","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>Between all of the responses here, there are lots of good things to try. For completeness, if you</p>

<p><code>ssh vagrant@localhost -p 2222</code></p>

<p>as @Bizmate suggests, and it fails, be sure you have </p>

<p><code>AllowUsers vagrant</code></p>

<p>in the <code>/etc/ssh/sshd_config</code> of your guest/vagrant machine.</p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","0","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>I have found a way around the mess with the keys on Win 8.2 where I did not succeed with any of the methods mentioned here. It may be interesting that exactly the same combination of VirtualBox, Vagrant, and the box run on Win 7 Ultimate without any problems.</p>

<p>I switched to the password authentication by adding the following commands in Vagrantfile:</p>

<pre><code>config.ssh.password = ""vagrant""
config.ssh.insert_key = false
</code></pre>

<p>Note that I'm not sure that this is the only changes required because I already did:</p>

<ol>
<li><p>I generated a new RSA key pair and changed authorized_keys file accordingly (all in the virtual machine, see the suggestions above and elsewhere)</p></li>
<li><p>I copied the private key to the same directory where Vagrantfile resides and added </p>

<pre><code> config.ssh.private_key_path = ""./id_rsa""
</code></pre></li>
</ol>

<p>But I believe that these changes were irrelevant. I spent a plenty of time trying, so I did not change the working configuration by obvious reasons :)</p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","6","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>I am using Vagrant with a Puphpet setup from May 2015 and had this problem. It appears that the configuration that was generated didn't handle Vagrant 1.7.4 (or maybe a bit earlier?) behavior of regenerating ssh keys if it detects an insecure key.</p>

<p>I solved it by adding the following in my Puphpet generated Vagrantfile (local setup) inside the ""if File.file?(customKey)"" clause:</p>

<pre><code>config.ssh.insert_key = false
</code></pre>

<p><a href=""https://github.com/puphpet/puphpet/commit/bf324b618ee43596f099925fee4c585d6f6a493f"" rel=""nofollow"">Reference commit</a></p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","0","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>This the all correct steps that I followed for fix this bellow issue occurred when vagrant up command run.</p>

<p>These are the steps that I followed </p>

<ol>
<li>create a folder. e.g F:\projects</li>
<li>Open this folder in git bash and run this command 
   ssh-keygen -t rsa -b 4096 -C ""your_email@example.com"" (put a valid email address)</li>
<li>Then generating key pair in two separate files in the project folder. e.g  project(private key file), project.pub (public key file)</li>
<li>Go to this location C:\Users\acer.vagrant.d and find file
insecure_private_key</li>
<li>Get backup of the file and copy the content of newly created private key and paste it in insecure_private_key file. Then copy insecure_private_key and paste it in this location too.</li>
<li>Now vagrant up in your project location. after generating above issue type vagrant ssh and go inside giving username, password. (in default username and password is set as vagrant)</li>
<li>Go inside to this location  cd /home/vagrant/.ssh and type mv authorized_keys authorized_keys_bk</li>
<li>Then type ls -al and type vi authorized_keys for open authorized_keys file vi editor.</li>
<li>Open generated public key from notepad++ (project.pub) and copy content
Then press i on git bash to enable insert mode on vi editor and right click and paste. After press escape to get out from insert mode</li>
<li>:wq! for save the file and type ls -al</li>
<li>Then permissions are set like bellow no need to change
  drwx------. 2 vagrant vagrant 4096 Feb 13 15:33 .
drwx------. 4 vagrant vagrant 4096 Feb 13 14:04 ..
-rw-------. 1 vagrant vagrant  743 Feb 13 14:26 authorized_keys
-rw-------. 1 root    root     409 Feb 13 13:57 authorized_keys_bk
-rw-------. 1 vagrant vagrant  409 Jan  2 23:09 authorized_keys_originial
Otherwise type chmod 600 authorized_keys and type this command too chown vagrant:vagrant authorized_keys</li>
<li>Finally run the vagrant halt and vagrant up again. </li>
</ol>

<p>************************THIS IS WORK FINE FOR ME*******************************</p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","0","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>First of all you should remove the autogenerated insecure_private_key file, then regenerate this file by typing</p>

<pre><code>vagrant ssh-config
</code></pre>

<p>then </p>

<pre><code>vagrant halt
vagrant up
</code></pre>

<p>It should work</p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","1","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>also could not get beyond:</p>

<p>default: SSH auth method: private key</p>

<p>When I used the VirtualBox GUI, it told me there was an OS processor mismatch.</p>

<p>To get vagrant up progressing further, in the BIOS settings I had to counter-intuitively:</p>

<p>Disable: Virtualisation</p>

<p>Enable: VT-X</p>

<p>Try toggling these setting in your BIOS.</p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","1","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>This has happened to me several times and the way I solved it was :</p>

<ol>
<li><p>Check and make sure your Vagrantfile has the correct private key path :</p>

<p>config.ssh.private_key_path = ""/home/razvan/.ssh/id_rsa""</p></li>
<li><p>Execute  > vagrant ssh command in a linux terminal</p></li>
<li><p>On your vagrant machine go to </p>

<p>cd /home/vagrant/.ssh</p></li>
</ol>

<p>and check if the ssh key in the authorized_keys file is the same as the one you have on your local machine in ~/.ssh/id_rsa.pub. If not replace the one from your <strong>vagrant</strong> authorized_keys with the one on your <strong>local machine</strong> found in ~/.ssh/id_rsa.pub.</p>

<ol start=""4"">
<li><p>Reload Vagrant :</p>

<p>vagrant reload</p></li>
</ol>

<p>Hope this helps someone else. Cheers!</p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","3","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>Just for those people that have been idiots like me, or have had something odd happen to their vagrant machine. This error can also occur when you changed the permissions of the vagrant user's home directory (deliberately or by accident).</p>

<p>You can log in instead (as described in other posts) using the password ('vagrant') and then run the following command to fix the permissions.</p>

<p><code>sudo chown -R vagrant:vagrant /home/vagrant</code></p>

<p>Then you should be able to log in again without entering the password.</p>

<p><strong>TL;DR: The permissions on your vagrant home folder are wrong.</strong></p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","0","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>In my experience, this has been a surprisingly frequent problem with new vagrant machines. By far the easiest way to solve it, instead of altering the configuration itself, has been creating the required ssh keys manually on the client, then using the private key on the host.</p>

<ol>
<li>Log in to vagrant machine: <code>vagrant ssh</code>, use default password <code>vagrant</code>.</li>
<li>Create ssh keys: for example, <code>ssh-keygen -t rsa -b 4096 -C ""vagrant""</code> (<a href=""https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/"" rel=""noreferrer"">as adviced by GitHub's relevant guide</a>).</li>
<li>Rename the public key file (by default id_rsa.pub), overriding the old one: <code>mv .ssh/id_rsa.pub .ssh/authorized_keys</code>.</li>
<li>Reload ssh service in case needed: <code>sudo service ssh reload</code>.</li>
<li>Copy the private key file (by default id_rsa) to the host machine: for instance, use a fine combination of cat and clipboard, <code>cat .ssh/id_rsa</code>, paint and copy (better ways must exist, go invent one!).</li>
<li>Logout from the vagrant machine: <code>logout</code>.</li>
<li>Find the current private key used by vagrant by looking at its configuration: <code>vagrant ssh-config</code> (look for instance ÌdentityFile ""/[...]/private_key"".</li>
<li>Replace the current private key with the one you created at the host machine: for example, <code>nano /[...]/private_key</code> and paste from the clipboard, if all else fails. (<strong><em>Note</strong>, however, that if your private_key is not project specific but shared by multiple vagrant machines, you better configure the path yourself in order to not break other perfectly working machines! Changing the path is as simple as adding a line <code>config.ssh.private_key_path = ""path/to/private_key""</code> into the Vagrantfile.</em>) Furthermore, if you are using <a href=""https://puphpet.com"" rel=""noreferrer"">PuPHPet</a> generated machine, you can store your private key to file <code>puphpet/files/dot/ssh/id_rsa</code> and it will be added to Vagrantfile's ssh config automatically.</li>
<li>Test the setup: <code>vagrant ssh</code> should now work.</li>
</ol>

<p>Should that be the case, congratulate yourself, <code>logout</code>, run <code>vagrant provision</code> if needed and carry on with the meaningful task at hand.</p>

<p>If you still face problems, it may come handy to add verbose flag to ssh command to ease debugging. You can pass that (or any other option, for that matter) after double dash. For example, typing <code>vagrant ssh -- -v</code>. Feel free to add as many v's as you need, each will give you more information.</p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","20","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>Simple:</p>

<pre><code>homestead destroy
homestead up
</code></pre>

<p>Edit (Not as simple as first thought):</p>

<p>The issue was that new versions of homestead use <code>php7.0</code> and some other stuff. To avoid this mess up make sure you set the <code>verison</code> in <code>Homestead.yml</code>:</p>

<pre><code>version: ""0""
</code></pre>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","0","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>If you experience this issue on vagrant 1.8.5, then check out this thread on github: </p>

<p><a href=""https://github.com/mitchellh/vagrant/issues/7610"" rel=""noreferrer"">https://github.com/mitchellh/vagrant/issues/7610</a></p>

<p>It's caused basically by a permission issue, the workaround is just </p>

<pre><code>vagrant ssh 
password: vagrant 
chmod 0600 ~/.ssh/authorized_keys
exit
</code></pre>

<p>then</p>

<pre><code>vagrant reload 
</code></pre>

<p>FYI: this issue only affects CentOS, Ubuntu works fine. </p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","48","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>I solved this problem by running commands on windows 7 CMD as given in this here is the link last post on this thread,</p>

<p><a href=""https://github.com/mitchellh/vagrant/issues/6744"" rel=""nofollow"">https://github.com/mitchellh/vagrant/issues/6744</a></p>

<pre><code>Some commands that will reinitialize various network states:
Reset WINSOCK entries to installation defaults : netsh winsock reset catalog
Reset TCP/IP stack to installation defaults : netsh int ip reset reset.log
Flush DNS resolver cache : ipconfig /flushdns
Renew DNS client registration and refresh DHCP leases : ipconfig /registerdns
Flush routing table : route /f
</code></pre>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","0","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>Mac Solution:</p>

<ol>
<li><p>Added local ssh id_rsa key to vagrant private key</p>

<p>vi /Users//.vagrant/machines/default/virtualbox/private_key</p>

<p>/Users//.ssh/id_rsa</p></li>
<li><p>copied public key /Users//.ssh/id_rsa.pub on vagrant box authorized_keys</p></li>
</ol>

<p><code>ssh vagrant@localhost -p 2222</code> (password: vagrant)
<code>ls -la</code>
<code>cd .ssh</code></p>

<ol start=""3"">
<li><p><code>chmod 0600 ~/.ssh/authorized_keys</code></p></li>
<li><p><code>vagrant reload</code></p></li>
</ol>

<p>Problem resolved.</p>

<p>Thanks to </p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","2","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>I resolved the issue in the following manner.
1.  Create new SSH key using Git Bash</p>

<pre><code>$ ssh-keygen -t rsa -b 4096 -C ""vagrant@localhost""
# Creates a new ssh key, using the provided email as a label
Generating public/private rsa key pair.
</code></pre>

<ol start=""2"">
<li><p>When you're prompted to ""Enter a file in which to save the key,"" press Enter. This accepts the default file location.</p>

<p>Enter a file in which to save the key (/Users/[you]/.ssh/id_rsa): [Press enter]</p></li>
<li><p>At the prompt, type a secure passphrase. You can leave empty and press enter if you do not need a passphrase.</p>

<p>Enter a file in which to save the key (/Users/[you]/.ssh/id_rsa): [Press enter]</p></li>
<li><p>To connect to your Vagrant VM type following command</p>

<p>ssh vagrant@localhost -p 2222</p></li>
</ol>

<p>When you get following message type “yes” and press enter.</p>

<pre><code>The authenticity of host 'github.com (192.30.252.1)' can't be established.
RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)?
</code></pre>

<ol start=""5"">
<li><p>Now to establish a SSH connection type : $ vagrant ssh</p></li>
<li><p>Copy the host public key into authorized_keys file in Vagrant VM. For that, go to “Users/[you]/.ssh” folder and copy the content in id_rsa.pub file in host machine and past into “~/.ssh/authorized_keys” file in Vagrant VM.</p></li>
<li>Change permission on SSH folder and authorized_keys file in Vagrant VM</li>
<li>Restart vagrant with : $ vagrant reload</li>
</ol>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","1","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>This might be the last answer in the list but this worked for me and I did not find this answer anywhere, I found it my self after 2 days of researches so you've better try this if nothing else worked for you until now.</p>

<p>In my case the problem came from my VirtualBox. I don't know for what reason an option was disabled and it should have been enabled.</p>

<p><a href=""https://i.stack.imgur.com/fghJK.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/fghJK.png"" alt=""enter image description here""></a></p>

<p>As you can see in the image, there were some network problems with my VirtualBox and what I had to do in order to fix this problem was to select my machine, press on settings, network tab and after that make sure that the option Cable Connected was selected. In my case this option was not selected and I it failed at this step:</p>

<pre><code>default: SSH address: 127.0.0.1:2222
default: SSH username: vagrant
default: SSH auth method: private key
</code></pre>

<p>First I thought that the port is already in use, after that I reinstalled Vagrant and I also tried other things but none of them worked for me.</p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","3","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>Been beating my head on this for the last couple of days on a repackaged base box. (Mac OS X, El Capitan)</p>

<p>Following @Radek 's procedure I did 'vagrant ssh-config' on the source box and got:</p>

<pre><code>...
/Users/Shared/dev/&lt;source-box-name&gt;/.vagrant/machines/default/virtualbox/private_key
...
</code></pre>

<p>On the new copy, that command gave me:</p>

<pre><code>...
IdentityFile /Users/&lt;username&gt;/.vagrant.d/insecure_private_key
...
</code></pre>

<p>So, I just added this line in the new copy:</p>

<pre><code>...
config.ssh.private_key_path = ""/Users/Shared/dev/&lt;source-box-name&gt;/.vagrant/machines/default/virtualbox/private_key""
...
</code></pre>

<p>Not perfect, but I can get on with my life.</p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","0","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>Another simple solution, in windows, go to the file Homestead/Vagrantfile and add these lines to connect with a username/password instead of a private key:</p>

<pre><code>config.ssh.username = ""vagrant""  
config.ssh.password = ""vagrant""  
config.ssh.insert_key = false 
</code></pre>

<p>So, finally part of the file will look like this :</p>

<pre><code>if File.exists? homesteadYamlPath then
    settings = YAML::load(File.read(homesteadYamlPath))
elsif File.exists? homesteadJsonPath then
    settings = JSON.parse(File.read(homesteadJsonPath))
end

config.ssh.username = ""vagrant""  
config.ssh.password = ""vagrant""  
config.ssh.insert_key = false 

Homestead.configure(config, settings)

if File.exists? afterScriptPath then
    config.vm.provision ""shell"", path: afterScriptPath, privileged: false
end
</code></pre>

<p>Hope this help ..</p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","0","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<h3>1. Locate the private key in the host:</h3>

<pre class=""lang-js prettyprint-override""><code>vagrant ssh-config
#
</code></pre>

<p>Output:</p>

<pre class=""lang-js prettyprint-override""><code>Host default
  ...
  Port 2222
  ...
  IdentityFile /home/me/.vagrant.d/[...]/virtualbox/vagrant_private_key
  ...
</code></pre>

<h3>2. Store the private key path and the port number in variables:</h3>

<p>Use these two commands with the output from above:</p>

<pre class=""lang-js prettyprint-override""><code>pk=""/home/me/.vagrant.d/.../virtualbox/vagrant_private_key""
port=2222
#
</code></pre>

<h3>3. Generate a public key and upload it to the guest machine:</h3>

<p>Copy/pasta, no changes needed:</p>

<pre class=""lang-shell prettyprint-override""><code>ssh-keygen -y -f $pk &gt; authorized_keys
scp -P $port authorized_keys vagrant@localhost:~/.ssh/
vagrant ssh -c ""chmod 600 ~/.ssh/authorized_keys""
rm authorized_keys
#
</code></pre>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","3","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p><strong>Unable to run vagrant up because it gets stuck and times out?</strong></p>

<p>I recently had a ""water in laptop incident"" and had to migrate to a new one(on a MAC by the way).</p>

<p>I successfully got all my projects up and running beside the one, which was using vagrant.</p>

<pre><code>$ vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: hostonly
==&gt; default: Forwarding ports...
    default: 8000 (guest) =&gt; 8877 (host) (adapter 1)
    default: 8001 (guest) =&gt; 8878 (host) (adapter 1)
    default: 8080 (guest) =&gt; 7777 (host) (adapter 1)
    default: 5432 (guest) =&gt; 2345 (host) (adapter 1)
    default: 5000 (guest) =&gt; 8855 (host) (adapter 1)
    default: 22 (guest) =&gt; 2222 (host) (adapter 1)
==&gt; default: Running 'pre-boot' VM customizations...
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Warning: Authentication failure. Retrying...
    default: Warning: Authentication failure. Retrying...
    default: Warning: Authentication failure. Retrying...
</code></pre>

<p>It couldn't authenticate, retried again and again and eventually gave up.</p>

<p>**This is how I got it back in shape in 3 steps: **</p>

<p>1 - Find the IdentityFile used by vagrant:
$ <code>vagrant ssh-config</code></p>

<pre><code>Host default
  HostName 127.0.0.1
  User vagrant
  Port 2222
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  IdentityFile /Users/ned/.vagrant.d/insecure_private_key
  IdentitiesOnly yes
  LogLevel FATAL
</code></pre>

<p>2 - Check the public key in the IdentityFile:
$ <code>ssh-keygen -y -f /Users/&lt;user-name&gt;/.vagrant.d/insecure_private_key</code>
<em>Replace <code>'&lt;user-name&gt;'</code> with your user.</em>
It'll look something like this:</p>

<pre><code>ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAA...9gE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ==
</code></pre>

<p>3 - Log in to the vagrant machine with the password ""vagrant"":
$ <code>ssh -p 2222 -o UserKnownHostsFile=/dev/null vagrant@127.0.0.1</code></p>

<pre><code>The authenticity of host '[127.0.0.1]:2222 ([127.0.0.1]:2222)' can't be established.
RSA key fingerprint is dc:48:73:c3:18:e4:9d:34:a2:7d:4b:20:6a:e7:3d:3e.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '[127.0.0.1]:2222' (RSA) to the list of known hosts.
vagrant@127.0.0.1's password: vagrant
Welcome to Ubuntu 16.04.1 LTS (GNU/Linux 4.4.0-31-generic x86_64)
...
</code></pre>

<p>4 - Add the public key to the authorized_keys file.
$ <code>echo ""ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAA...9gE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ=="" &gt; /home/vagrant/.ssh/authorized_keys
ssh-rsa</code></p>

<p>5 - Exit (crtl + d) and stop the vagrant container and the bring it back up.
$ <code>vagrant halt</code>
$ <code>vagrant up</code></p>

<p>Hopefully you will have your arms in the air now... </p>

<p>I got this, with just a minor amend, from Ned Batchelders <a href=""https://openedx.atlassian.net/wiki/spaces/OXA/pages/157802739/Vagrant+is+stuck+Authentication+failure.+Retrying..."" rel=""nofollow noreferrer"">article</a> - Ned you are a champ!!</p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","3","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"22922891","Vagrant ssh authentication failure","<p>The problem with ssh authentication:</p>

<pre><code>==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: bridged
==&gt; default: Forwarding ports...
    default: 22 =&gt; 2222 (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Connection timeout. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
    default: Error: Authentication failure. Retrying...
</code></pre>

<p>I can <code>Ctrl+C</code> out of the authentication loop and then successfully ssh in manually.</p>

<p>I performed the following steps on the guest box:</p>

<ul>
<li><p>Enabled <code>Remote Login</code> for <code>All Users</code>.</p></li>
<li><p>Created the <code>~/.ssh</code> directory with <code>0700</code> permissions.</p></li>
<li><p>Created the <code>~/.ssh/authorized_keys</code> file with <code>0600</code> permissions.</p></li>
<li><p>Pasted <a href=""https://github.com/mitchellh/vagrant/blob/master/keys/vagrant.pub"" rel=""noreferrer"">this public key</a>
into <code>~/.ssh/authorized_keys</code></p></li>
</ul>

<p>I've also tried using a private (hostonly) network instead of the public (bridged) network, using this line in the Vagrantfile:</p>

<p><code>config.vm.network ""private_network"", ip: ""172.16.177.7""</code></p>

<p>I get the same output (except <code>Adapter 2: hostonly</code>) but then cannot ssh in manually.</p>

<p>I also tried <code>config.vm.network ""private_network"", ip: ""10.0.0.100""</code>.</p>

<p>I also tried setting <code>config.ssh.password</code> in the Vagrantfile. This does output <code>SSH auth method: password</code> but still doesn't authenticate.</p>

<p>And I also tried rebuilding the box and rechecking all the above.</p>

<p>It looks like <a href=""https://groups.google.com/forum/#!topic/vagrant-up/HKL0FXR6QmE"" rel=""noreferrer"">others have had success with this configuration</a>, so there must be something I'm doing wrong.</p>

<p>I <a href=""https://stackoverflow.com/questions/22575261/vagrant-stuck-connection-timeout-retrying"">found this thread</a> and enabled the GUI, but that doesn't help.</p>
","<p>I tried this on my VM machine</p>

<p>change the permissions /home/vagrant (did a chmod 700 on it) </p>

<p>now i can ssh directly into my boxes</p>
","163990","<ssh><vagrant><virtualbox><private-key><vagrantfile>","140","0","29","2019-07-27 11:58:37","22925947","0","66","-1","","2017-05-23 10:31:29","2014-04-07 20:53:35",""
"5587513","How to Export Private / Secret ASC Key to Decrypt GPG Files","<p>Background: My boss has tried exporting an ASC key to me with public and private parts but whenever I get the file the private part never loads up and it won't decrypt any files.</p>

<p>We have tried Exporting the ASC Key using: </p>

<ul>
<li>Windows Application Kleopatra 2.1 (included in gpg4win)</li>
<li><p>Windows Application GNU Privacy Assistant (included in gpg4win) </p>

<pre><code>        Error: ""Decryption failed. Secret Key Not available."" 
</code></pre></li>
</ul>

<p>How do you properly export a secret or private asc key to decrypt gpg files? </p>
","<p>I think you had not yet import the private key as the message error said, To import public/private key from gnupg:</p>

<pre><code>gpg --import mypub_key
gpg --allow-secret-key-import --import myprv_key
</code></pre>
","160768","<encryption><gnu><gnupg><private-key>","83","9","7","2019-11-08 05:39:27","5588513","0","48","712334","","2019-11-08 05:39:27","2011-04-07 20:53:24",""
"5587513","How to Export Private / Secret ASC Key to Decrypt GPG Files","<p>Background: My boss has tried exporting an ASC key to me with public and private parts but whenever I get the file the private part never loads up and it won't decrypt any files.</p>

<p>We have tried Exporting the ASC Key using: </p>

<ul>
<li>Windows Application Kleopatra 2.1 (included in gpg4win)</li>
<li><p>Windows Application GNU Privacy Assistant (included in gpg4win) </p>

<pre><code>        Error: ""Decryption failed. Secret Key Not available."" 
</code></pre></li>
</ul>

<p>How do you properly export a secret or private asc key to decrypt gpg files? </p>
","<p>You can export the private key with the <a href=""http://www.gnupg.org/download/"" rel=""noreferrer"">command-line tool from GPG</a>. It works on the Windows-shell. Use the following command:</p>

<pre><code>gpg --export-secret-keys
</code></pre>

<p>A normal export with <code>--export</code> will not include any private keys, therefore you have to use <code>--export-secret-keys</code>.</p>

<p>Edit:</p>

<p>To sum up the information given in my comments, this is the command that allows you to export a specific key with the ID 1234ABCD to the file secret.asc:</p>

<pre><code>gpg --export-secret-keys --armor 1234ABCD &gt; secret.asc
</code></pre>

<p>You can find the ID that you need using the following command. The ID is the second part of the second column:</p>

<pre><code>gpg --list-keys
</code></pre>

<p>To Export just 1 specific secret key instead of all of them:</p>

<pre><code>gpg --export-secret-keys keyIDNumber &gt; exportedKeyFilename.asc
</code></pre>

<p>keyIDNumber is the number of the key id for the desired key you are trying to export.</p>
","160768","<encryption><gnu><gnupg><private-key>","83","178","7","2019-11-08 05:39:27","5588513","0","48","712334","","2019-11-08 05:39:27","2011-04-07 20:53:24",""
"5587513","How to Export Private / Secret ASC Key to Decrypt GPG Files","<p>Background: My boss has tried exporting an ASC key to me with public and private parts but whenever I get the file the private part never loads up and it won't decrypt any files.</p>

<p>We have tried Exporting the ASC Key using: </p>

<ul>
<li>Windows Application Kleopatra 2.1 (included in gpg4win)</li>
<li><p>Windows Application GNU Privacy Assistant (included in gpg4win) </p>

<pre><code>        Error: ""Decryption failed. Secret Key Not available."" 
</code></pre></li>
</ul>

<p>How do you properly export a secret or private asc key to decrypt gpg files? </p>
","<p>this ended up working for me:     </p>

<pre><code>   gpg -a --export-secret-keys &gt; exportedKeyFilename.asc 
</code></pre>

<p>you can name keyfilename.asc by any name as long as you keep on the .asc extension.<br>
this command copies all secret-keys on a user's computer to keyfilename.asc in the working directory of where the command was called. </p>

<p>To Export just 1 specific secret key instead of all of them:</p>

<pre><code>   gpg -a --export-secret-keys keyIDNumber &gt; exportedKeyFilename.asc
</code></pre>

<p>keyIDNumber is the number of the key id for the desired key you are trying to export. </p>
","160768","<encryption><gnu><gnupg><private-key>","83","6","7","2019-11-08 05:39:27","5588513","0","48","712334","","2019-11-08 05:39:27","2011-04-07 20:53:24",""
"5587513","How to Export Private / Secret ASC Key to Decrypt GPG Files","<p>Background: My boss has tried exporting an ASC key to me with public and private parts but whenever I get the file the private part never loads up and it won't decrypt any files.</p>

<p>We have tried Exporting the ASC Key using: </p>

<ul>
<li>Windows Application Kleopatra 2.1 (included in gpg4win)</li>
<li><p>Windows Application GNU Privacy Assistant (included in gpg4win) </p>

<pre><code>        Error: ""Decryption failed. Secret Key Not available."" 
</code></pre></li>
</ul>

<p>How do you properly export a secret or private asc key to decrypt gpg files? </p>
","<p>All the above replies are correct, but might be missing one crucial step, you need to edit the imported key and ""ultimately trust"" that key</p>

<pre><code>gpg --edit-key (keyIDNumber)
gpg&gt; trust

Please decide how far you trust this user to correctly verify other users' keys
(by looking at passports, checking fingerprints from different sources, etc.)

  1 = I don't know or won't say
  2 = I do NOT trust
  3 = I trust marginally
  4 = I trust fully
  5 = I trust ultimately
  m = back to the main menu
</code></pre>

<p>and select 5 to enable that imported private key as one of your keys</p>
","160768","<encryption><gnu><gnupg><private-key>","83","31","7","2019-11-08 05:39:27","5588513","0","48","712334","","2019-11-08 05:39:27","2011-04-07 20:53:24",""
"5587513","How to Export Private / Secret ASC Key to Decrypt GPG Files","<p>Background: My boss has tried exporting an ASC key to me with public and private parts but whenever I get the file the private part never loads up and it won't decrypt any files.</p>

<p>We have tried Exporting the ASC Key using: </p>

<ul>
<li>Windows Application Kleopatra 2.1 (included in gpg4win)</li>
<li><p>Windows Application GNU Privacy Assistant (included in gpg4win) </p>

<pre><code>        Error: ""Decryption failed. Secret Key Not available."" 
</code></pre></li>
</ul>

<p>How do you properly export a secret or private asc key to decrypt gpg files? </p>
","<p>See the treatment by Dark Otter</p>

<p><a href=""https://montemazuma.wordpress.com/2010/03/01/moving-a-gpg-key-privately/"" rel=""nofollow noreferrer"">https://montemazuma.wordpress.com/2010/03/01/moving-a-gpg-key-privately/</a></p>

<p>If the site is down use reference the archive.org backup:</p>

<p><a href=""https://web.archive.org/web/20170518155052/https://montemazuma.wordpress.com/2010/03/01/moving-a-gpg-key-privately/"" rel=""nofollow noreferrer"">https://web.archive.org/web/20170518155052/https://montemazuma.wordpress.com/2010/03/01/moving-a-gpg-key-privately/</a></p>

<p>which includes a reasonably secure way to transfer keys. You could put that recommendation into shell-scripts shown below for repeated use.</p>

<p>First get the KEYID you want from the list shown by</p>

<pre><code>$ gpg -K
</code></pre>

<p>From the resulting list note the KEYID (the 8 hexadecimals following sec) you need for transfer.</p>

<p>Then envoke the tested shell scipts ""export_private_key"" on the first account and generate your pubkey.gpg + keys.asc. Subsequently invoke on the second account ""import_private_key"". Here is their content shown with cat (copy &amp; paste content):</p>

<pre><code>$ cat export_private_key 
gpg -K
echo ""select private key""
read KEYID
gpg --output pubkey.gpg --export $KEYID
echo REMEMBER THE COMING PASS-PHRASE
gpg --output - --export-secret-key $KEYID | \
   cat pubkey.gpg - | \
   gpg --armor --output keys.asc --symmetric --cipher-algo AES256
ls -l pubkey.gpg keys.asc
####################  E X P O R T _ P R I V A T E _ K E Y  #####################
</code></pre>

<p>Now tranfer by some means the ""pubkey.gpg"" (if needed) and the private ""keys.asc"" to the second account and envoke the below-shown program.</p>

<pre><code>$ cat import_private_key 
gpg --no-use-agent --output - keys.asc | gpg --import
###################  I M P O R T _ P R I V A T E _ K E Y  ######################
</code></pre>

<p>In Otter's spirit ""And that, should be, that"".</p>
","160768","<encryption><gnu><gnupg><private-key>","83","18","7","2019-11-08 05:39:27","5588513","0","48","712334","","2019-11-08 05:39:27","2011-04-07 20:53:24",""
"5587513","How to Export Private / Secret ASC Key to Decrypt GPG Files","<p>Background: My boss has tried exporting an ASC key to me with public and private parts but whenever I get the file the private part never loads up and it won't decrypt any files.</p>

<p>We have tried Exporting the ASC Key using: </p>

<ul>
<li>Windows Application Kleopatra 2.1 (included in gpg4win)</li>
<li><p>Windows Application GNU Privacy Assistant (included in gpg4win) </p>

<pre><code>        Error: ""Decryption failed. Secret Key Not available."" 
</code></pre></li>
</ul>

<p>How do you properly export a secret or private asc key to decrypt gpg files? </p>
","<p>Similar to @Wolfram J's answer, here is a method to encrypt your private key <a href=""https://en.wikipedia.org/wiki/Symmetric-key_algorithm"" rel=""nofollow noreferrer"">with a passphrase</a>:</p>

<pre><code>gpg --output - --armor --export $KEYID | \
    gpg --output private_key.asc --armor --symmetric --cipher-algo AES256
</code></pre>

<p>And a corresponding method to decrypt:</p>

<pre><code>gpg private_key.asc
</code></pre>
","160768","<encryption><gnu><gnupg><private-key>","83","4","7","2019-11-08 05:39:27","5588513","0","48","712334","","2019-11-08 05:39:27","2011-04-07 20:53:24",""
"5587513","How to Export Private / Secret ASC Key to Decrypt GPG Files","<p>Background: My boss has tried exporting an ASC key to me with public and private parts but whenever I get the file the private part never loads up and it won't decrypt any files.</p>

<p>We have tried Exporting the ASC Key using: </p>

<ul>
<li>Windows Application Kleopatra 2.1 (included in gpg4win)</li>
<li><p>Windows Application GNU Privacy Assistant (included in gpg4win) </p>

<pre><code>        Error: ""Decryption failed. Secret Key Not available."" 
</code></pre></li>
</ul>

<p>How do you properly export a secret or private asc key to decrypt gpg files? </p>
","<p>1.Export a Secret Key (this is what your boss should have done for you)</p>

<pre><code>gpg --export-secret-keys yourKeyName &gt; privateKey.asc
</code></pre>

<p>2.Import Secret Key (import your privateKey)</p>

<pre><code>gpg --import privateKey.asc
</code></pre>

<p>3.Not done yet, you still need to ultimately trust a key.
You will need to make sure that you also ultimately trust a key.</p>

<pre><code>gpg --edit-key yourKeyName
</code></pre>

<p>Enter trust, 5, y, and then quit</p>

<p>Source: <a href=""https://medium.com/@GalarnykMichael/public-key-asymmetric-cryptography-using-gpg-5a8d914c9bca"" rel=""nofollow noreferrer"">https://medium.com/@GalarnykMichael/public-key-asymmetric-cryptography-using-gpg-5a8d914c9bca</a></p>
","160768","<encryption><gnu><gnupg><private-key>","83","3","7","2019-11-08 05:39:27","5588513","0","48","712334","","2019-11-08 05:39:27","2011-04-07 20:53:24",""
"20065304","Differences between ""BEGIN RSA PRIVATE KEY"" and ""BEGIN PRIVATE KEY""","<p>Hi I was writing a program that imports private keys from a <code>.pem</code> file and create a private key object to use it later..
the problem I have faced is that some <code>pem</code> files header begin with </p>

<pre><code>-----BEGIN PRIVATE KEY-----
</code></pre>

<p>while others begin with</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
</code></pre>

<p>through my search I knew that the first ones are <code>PKCS#8</code> formatted but I couldn't know what format does the other one belongs to.</p>
","<p>See <a href=""https://polarssl.org/kb/cryptography/asn1-key-structures-in-der-and-pem"">https://polarssl.org/kb/cryptography/asn1-key-structures-in-der-and-pem</a> (search the page for ""BEGIN RSA PRIVATE KEY"") (<a href=""https://web.archive.org/web/20140819203300/https://polarssl.org/kb/cryptography/asn1-key-structures-in-der-and-pem"">archive link</a> for posterity, just in case).</p>

<p><code>BEGIN RSA PRIVATE KEY</code> is PKCS#1 and is just an RSA key. It is essentially just the key object from PKCS#8, but without the version or algorithm identifier in front. <code>BEGIN PRIVATE KEY</code> is PKCS#8 and indicates that the key type is included in the key data itself. From the link:</p>

<blockquote>
  <p>The unencrypted PKCS#8 encoded data starts and ends with the tags:</p>

<pre><code>-----BEGIN PRIVATE KEY-----
BASE64 ENCODED DATA
-----END PRIVATE KEY-----
</code></pre>
  
  <p>Within the base64 encoded data the following DER structure is present:</p>

<pre><code>PrivateKeyInfo ::= SEQUENCE {
  version         Version,
  algorithm       AlgorithmIdentifier,
  PrivateKey      BIT STRING
}

AlgorithmIdentifier ::= SEQUENCE {
  algorithm       OBJECT IDENTIFIER,
  parameters      ANY DEFINED BY algorithm OPTIONAL
}
</code></pre>
  
  <p>So for an RSA private key, the OID is 1.2.840.113549.1.1.1 and there is a RSAPrivateKey as the PrivateKey key data bitstring.</p>
</blockquote>

<p>As opposed to <code>BEGIN RSA PRIVATE KEY</code>, which always specifies an RSA key and therefore doesn't include a key type OID. <code>BEGIN RSA PRIVATE KEY</code> is <code>PKCS#1</code>:</p>

<blockquote>
  <p>RSA Private Key file (PKCS#1)</p>
  
  <p>The RSA private key PEM file is specific for RSA keys.</p>
  
  <p>It starts and ends with the tags:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
BASE64 ENCODED DATA
-----END RSA PRIVATE KEY-----
</code></pre>
  
  <p>Within the base64 encoded data the following DER structure is present:</p>

<pre><code>RSAPrivateKey ::= SEQUENCE {
  version           Version,
  modulus           INTEGER,  -- n
  publicExponent    INTEGER,  -- e
  privateExponent   INTEGER,  -- d
  prime1            INTEGER,  -- p
  prime2            INTEGER,  -- q
  exponent1         INTEGER,  -- d mod (p1)
  exponent2         INTEGER,  -- d mod (q-1)
  coefficient       INTEGER,  -- (inverse of q) mod p
  otherPrimeInfos   OtherPrimeInfos OPTIONAL
}
</code></pre>
</blockquote>
","111113","<openssl><rsa><private-key><pem>","127","154","2","2018-10-14 16:57:29","20065522","0","37","608639","","2018-02-15 03:35:52","2013-11-19 07:08:02",""
"20065304","Differences between ""BEGIN RSA PRIVATE KEY"" and ""BEGIN PRIVATE KEY""","<p>Hi I was writing a program that imports private keys from a <code>.pem</code> file and create a private key object to use it later..
the problem I have faced is that some <code>pem</code> files header begin with </p>

<pre><code>-----BEGIN PRIVATE KEY-----
</code></pre>

<p>while others begin with</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
</code></pre>

<p>through my search I knew that the first ones are <code>PKCS#8</code> formatted but I couldn't know what format does the other one belongs to.</p>
","<p>Have a look at <a href=""https://git.openssl.org/?p=openssl.git;a=blob;f=include/openssl/pem.h;hb=HEAD"" rel=""noreferrer""><code>&lt;openssl/pem.h&gt;</code></a>. It gives possible BEGIN markers.</p>

<p>Copying the content from the above link for quick reference: </p>

<pre><code>#define PEM_STRING_X509_OLD ""X509 CERTIFICATE""
#define PEM_STRING_X509     ""CERTIFICATE""
#define PEM_STRING_X509_PAIR    ""CERTIFICATE PAIR""
#define PEM_STRING_X509_TRUSTED ""TRUSTED CERTIFICATE""
#define PEM_STRING_X509_REQ_OLD ""NEW CERTIFICATE REQUEST""
#define PEM_STRING_X509_REQ ""CERTIFICATE REQUEST""
#define PEM_STRING_X509_CRL ""X509 CRL""
#define PEM_STRING_EVP_PKEY ""ANY PRIVATE KEY""
#define PEM_STRING_PUBLIC   ""PUBLIC KEY""
#define PEM_STRING_RSA      ""RSA PRIVATE KEY""
#define PEM_STRING_RSA_PUBLIC   ""RSA PUBLIC KEY""
#define PEM_STRING_DSA      ""DSA PRIVATE KEY""
#define PEM_STRING_DSA_PUBLIC   ""DSA PUBLIC KEY""
#define PEM_STRING_PKCS7    ""PKCS7""
#define PEM_STRING_PKCS7_SIGNED ""PKCS #7 SIGNED DATA""
#define PEM_STRING_PKCS8    ""ENCRYPTED PRIVATE KEY""
#define PEM_STRING_PKCS8INF ""PRIVATE KEY""
#define PEM_STRING_DHPARAMS ""DH PARAMETERS""
#define PEM_STRING_DHXPARAMS    ""X9.42 DH PARAMETERS""
#define PEM_STRING_SSL_SESSION  ""SSL SESSION PARAMETERS""
#define PEM_STRING_DSAPARAMS    ""DSA PARAMETERS""
#define PEM_STRING_ECDSA_PUBLIC ""ECDSA PUBLIC KEY""
#define PEM_STRING_ECPARAMETERS ""EC PARAMETERS""
#define PEM_STRING_ECPRIVATEKEY ""EC PRIVATE KEY""
#define PEM_STRING_PARAMETERS   ""PARAMETERS""
#define PEM_STRING_CMS      ""CMS""
</code></pre>
","111113","<openssl><rsa><private-key><pem>","127","20","2","2018-10-14 16:57:29","20065522","0","37","608639","","2018-02-15 03:35:52","2013-11-19 07:08:02",""
"31630544","Can't get private key with openssl (no start line:pem_lib.c:703:Expecting: ANY PRIVATE KEY)","<p>I have a .key file, when I do</p>

<p><code>openssl rsa -text -in file.key</code></p>

<p>I get</p>

<pre><code>unable to load Private Key
140000419358368:error:0906D06C:PEM routines:PEM_read_bio:no start line:pem_lib.c:703:Expecting: ANY PRIVATE KEY
</code></pre>

<hr>

<p>Also I have a .cer file and when I do </p>

<p><code>openssl x509 -text -in file.cer</code></p>

<p>I get </p>

<pre><code>unable to load certificate
140387178489504:error:0906D06C:PEM routines:PEM_read_bio:no start line:pem_lib.c:703:Expecting: TRUSTED CERTIFICATE
</code></pre>

<hr>

<p>But if as pointed <a href=""https://stackoverflow.com/a/20837236/3080244"">here</a> I run the command like:</p>

<p><code>openssl x509 -text -inform DER -in file.cer</code></p>

<p>I get</p>

<pre><code>Certificate:
    Data:
        Version: 3 (0x2)
        Some more information
        ...
-----BEGIN CERTIFICATE-----
MIIEdDCCA1ygAwIBAgIUMjAwMDEwMDAwMDAxMDAwMDU4NjcwDQYJKoZIhvcNAQEF
...
-----END CERTIFICATE-----
</code></pre>

<p>But that doesn't seem to work with the key, because when I run</p>

<p><code>openssl rsa -text -inform DER -in aaa010101aaa__csd_10.key</code></p>

<p>I get </p>

<pre><code>unable to load Private Key
140004844304032:error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag:tasn_dec.c:1337:
140004844304032:error:0D06C03A:asn1 encoding routines:ASN1_D2I_EX_PRIMITIVE:nested asn1 error:tasn_dec.c:849:
140004844304032:error:0D08303A:asn1 encoding routines:ASN1_TEMPLATE_NOEXP_D2I:nested asn1 error:tasn_dec.c:769:Field=version, Type=RSA
140004844304032:error:04093004:rsa routines:OLD_RSA_PRIV_DECODE:RSA lib:rsa_ameth.c:115:
140004844304032:error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag:tasn_dec.c:1337:
140004844304032:error:0D06C03A:asn1 encoding routines:ASN1_D2I_EX_PRIMITIVE:nested asn1 error:tasn_dec.c:849:
140004844304032:error:0D08303A:asn1 encoding routines:ASN1_TEMPLATE_NOEXP_D2I:nested asn1 error:tasn_dec.c:769:Field=version, Type=PKCS8_PRIV_KEY_INFO
</code></pre>

<p><strong>How can I get the private key and its certificate?</strong></p>
","<p>It looks like you have a certificate in <code>DER</code> format instead of <code>PEM</code>.  This is why it works correctly when you provide the <code>-inform PEM</code> command line argument (which tells openssl what input format to expect).</p>

<p>It's likely that your private key is using the same encoding. It looks as if the <code>openssl rsa</code> command also accepts a <code>-inform</code> argument, so try:</p>

<pre><code>openssl rsa -text -in file.key -inform DER
</code></pre>

<p>A <code>PEM</code> encoded file is a plain-text encoding that looks something like:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
MIGrAgEAAiEA0tlSKz5Iauj6ud3helAf5GguXeLUeFFTgHrpC3b2O20CAwEAAQIh
ALeEtAIzebCkC+bO+rwNFVORb0bA9xN2n5dyTw/Ba285AhEA9FFDtx4VAxMVB2GU
QfJ/2wIRANzuXKda/nRXIyRw1ArE2FcCECYhGKRXeYgFTl7ch7rTEckCEQDTMShw
8pL7M7DsTM7l3HXRAhAhIMYKQawc+Y7MNE4kQWYe
-----END RSA PRIVATE KEY-----
</code></pre>

<p>While <code>DER</code> is a binary encoding format.</p>

<p><strong>Update</strong></p>

<p>Sometimes keys are distributed in PKCS#8 format (which can be either PEM or DER encoded).  Try this and see what you get:</p>

<pre><code>openssl pkcs8 -in file.key -inform der
</code></pre>
","98185","<linux><openssl><ssl-certificate><private-key>","25","13","4","2018-09-28 21:36:15","31631728","0","2","-1","","2017-05-23 11:46:19","2015-07-25 19:56:38",""
"31630544","Can't get private key with openssl (no start line:pem_lib.c:703:Expecting: ANY PRIVATE KEY)","<p>I have a .key file, when I do</p>

<p><code>openssl rsa -text -in file.key</code></p>

<p>I get</p>

<pre><code>unable to load Private Key
140000419358368:error:0906D06C:PEM routines:PEM_read_bio:no start line:pem_lib.c:703:Expecting: ANY PRIVATE KEY
</code></pre>

<hr>

<p>Also I have a .cer file and when I do </p>

<p><code>openssl x509 -text -in file.cer</code></p>

<p>I get </p>

<pre><code>unable to load certificate
140387178489504:error:0906D06C:PEM routines:PEM_read_bio:no start line:pem_lib.c:703:Expecting: TRUSTED CERTIFICATE
</code></pre>

<hr>

<p>But if as pointed <a href=""https://stackoverflow.com/a/20837236/3080244"">here</a> I run the command like:</p>

<p><code>openssl x509 -text -inform DER -in file.cer</code></p>

<p>I get</p>

<pre><code>Certificate:
    Data:
        Version: 3 (0x2)
        Some more information
        ...
-----BEGIN CERTIFICATE-----
MIIEdDCCA1ygAwIBAgIUMjAwMDEwMDAwMDAxMDAwMDU4NjcwDQYJKoZIhvcNAQEF
...
-----END CERTIFICATE-----
</code></pre>

<p>But that doesn't seem to work with the key, because when I run</p>

<p><code>openssl rsa -text -inform DER -in aaa010101aaa__csd_10.key</code></p>

<p>I get </p>

<pre><code>unable to load Private Key
140004844304032:error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag:tasn_dec.c:1337:
140004844304032:error:0D06C03A:asn1 encoding routines:ASN1_D2I_EX_PRIMITIVE:nested asn1 error:tasn_dec.c:849:
140004844304032:error:0D08303A:asn1 encoding routines:ASN1_TEMPLATE_NOEXP_D2I:nested asn1 error:tasn_dec.c:769:Field=version, Type=RSA
140004844304032:error:04093004:rsa routines:OLD_RSA_PRIV_DECODE:RSA lib:rsa_ameth.c:115:
140004844304032:error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag:tasn_dec.c:1337:
140004844304032:error:0D06C03A:asn1 encoding routines:ASN1_D2I_EX_PRIMITIVE:nested asn1 error:tasn_dec.c:849:
140004844304032:error:0D08303A:asn1 encoding routines:ASN1_TEMPLATE_NOEXP_D2I:nested asn1 error:tasn_dec.c:769:Field=version, Type=PKCS8_PRIV_KEY_INFO
</code></pre>

<p><strong>How can I get the private key and its certificate?</strong></p>
","<p>My two cents:
came across the same error message in RHEL7.3 while running the openssl command with root CA certificate. The reason being, while downloading the certificate from AD server, Encoding was selected as DER instead of Base64. Once the proper version of encoding was selected for the new certificate download, error was resolved </p>

<p>Hope this helps for new users :-) </p>
","98185","<linux><openssl><ssl-certificate><private-key>","25","1","4","2018-09-28 21:36:15","31631728","0","2","-1","","2017-05-23 11:46:19","2015-07-25 19:56:38",""
"31630544","Can't get private key with openssl (no start line:pem_lib.c:703:Expecting: ANY PRIVATE KEY)","<p>I have a .key file, when I do</p>

<p><code>openssl rsa -text -in file.key</code></p>

<p>I get</p>

<pre><code>unable to load Private Key
140000419358368:error:0906D06C:PEM routines:PEM_read_bio:no start line:pem_lib.c:703:Expecting: ANY PRIVATE KEY
</code></pre>

<hr>

<p>Also I have a .cer file and when I do </p>

<p><code>openssl x509 -text -in file.cer</code></p>

<p>I get </p>

<pre><code>unable to load certificate
140387178489504:error:0906D06C:PEM routines:PEM_read_bio:no start line:pem_lib.c:703:Expecting: TRUSTED CERTIFICATE
</code></pre>

<hr>

<p>But if as pointed <a href=""https://stackoverflow.com/a/20837236/3080244"">here</a> I run the command like:</p>

<p><code>openssl x509 -text -inform DER -in file.cer</code></p>

<p>I get</p>

<pre><code>Certificate:
    Data:
        Version: 3 (0x2)
        Some more information
        ...
-----BEGIN CERTIFICATE-----
MIIEdDCCA1ygAwIBAgIUMjAwMDEwMDAwMDAxMDAwMDU4NjcwDQYJKoZIhvcNAQEF
...
-----END CERTIFICATE-----
</code></pre>

<p>But that doesn't seem to work with the key, because when I run</p>

<p><code>openssl rsa -text -inform DER -in aaa010101aaa__csd_10.key</code></p>

<p>I get </p>

<pre><code>unable to load Private Key
140004844304032:error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag:tasn_dec.c:1337:
140004844304032:error:0D06C03A:asn1 encoding routines:ASN1_D2I_EX_PRIMITIVE:nested asn1 error:tasn_dec.c:849:
140004844304032:error:0D08303A:asn1 encoding routines:ASN1_TEMPLATE_NOEXP_D2I:nested asn1 error:tasn_dec.c:769:Field=version, Type=RSA
140004844304032:error:04093004:rsa routines:OLD_RSA_PRIV_DECODE:RSA lib:rsa_ameth.c:115:
140004844304032:error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag:tasn_dec.c:1337:
140004844304032:error:0D06C03A:asn1 encoding routines:ASN1_D2I_EX_PRIMITIVE:nested asn1 error:tasn_dec.c:849:
140004844304032:error:0D08303A:asn1 encoding routines:ASN1_TEMPLATE_NOEXP_D2I:nested asn1 error:tasn_dec.c:769:Field=version, Type=PKCS8_PRIV_KEY_INFO
</code></pre>

<p><strong>How can I get the private key and its certificate?</strong></p>
","<p>On my execution of <code>openssl pkcs12 -export -out cacert.pkcs12 -in testca/cacert.pem</code>, I received the following message:</p>

<blockquote>
  <p>unable to load private key 140707250050712:error:0906D06C:PEM
  routines:PEM_read_bio:no start line:pem_lib.c:701:Expecting: ANY
  PRIVATE KEY`</p>
</blockquote>

<p>Got this solved by providing the key file along with the command. The switch is <code>-inkey inkeyfile.pem</code></p>
","98185","<linux><openssl><ssl-certificate><private-key>","25","3","4","2018-09-28 21:36:15","31631728","0","2","-1","","2017-05-23 11:46:19","2015-07-25 19:56:38",""
"31630544","Can't get private key with openssl (no start line:pem_lib.c:703:Expecting: ANY PRIVATE KEY)","<p>I have a .key file, when I do</p>

<p><code>openssl rsa -text -in file.key</code></p>

<p>I get</p>

<pre><code>unable to load Private Key
140000419358368:error:0906D06C:PEM routines:PEM_read_bio:no start line:pem_lib.c:703:Expecting: ANY PRIVATE KEY
</code></pre>

<hr>

<p>Also I have a .cer file and when I do </p>

<p><code>openssl x509 -text -in file.cer</code></p>

<p>I get </p>

<pre><code>unable to load certificate
140387178489504:error:0906D06C:PEM routines:PEM_read_bio:no start line:pem_lib.c:703:Expecting: TRUSTED CERTIFICATE
</code></pre>

<hr>

<p>But if as pointed <a href=""https://stackoverflow.com/a/20837236/3080244"">here</a> I run the command like:</p>

<p><code>openssl x509 -text -inform DER -in file.cer</code></p>

<p>I get</p>

<pre><code>Certificate:
    Data:
        Version: 3 (0x2)
        Some more information
        ...
-----BEGIN CERTIFICATE-----
MIIEdDCCA1ygAwIBAgIUMjAwMDEwMDAwMDAxMDAwMDU4NjcwDQYJKoZIhvcNAQEF
...
-----END CERTIFICATE-----
</code></pre>

<p>But that doesn't seem to work with the key, because when I run</p>

<p><code>openssl rsa -text -inform DER -in aaa010101aaa__csd_10.key</code></p>

<p>I get </p>

<pre><code>unable to load Private Key
140004844304032:error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag:tasn_dec.c:1337:
140004844304032:error:0D06C03A:asn1 encoding routines:ASN1_D2I_EX_PRIMITIVE:nested asn1 error:tasn_dec.c:849:
140004844304032:error:0D08303A:asn1 encoding routines:ASN1_TEMPLATE_NOEXP_D2I:nested asn1 error:tasn_dec.c:769:Field=version, Type=RSA
140004844304032:error:04093004:rsa routines:OLD_RSA_PRIV_DECODE:RSA lib:rsa_ameth.c:115:
140004844304032:error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag:tasn_dec.c:1337:
140004844304032:error:0D06C03A:asn1 encoding routines:ASN1_D2I_EX_PRIMITIVE:nested asn1 error:tasn_dec.c:849:
140004844304032:error:0D08303A:asn1 encoding routines:ASN1_TEMPLATE_NOEXP_D2I:nested asn1 error:tasn_dec.c:769:Field=version, Type=PKCS8_PRIV_KEY_INFO
</code></pre>

<p><strong>How can I get the private key and its certificate?</strong></p>
","<p>I ran into the 'Expecting: ANY PRIVATE KEY' error when using openssl on Windows (Ubuntu Bash and Git Bash had the same issue).</p>

<p>The cause of the problem was that I'd saved the key and certificate files in Notepad using UTF8. Resaving both files in ANSI format solved the problem.</p>
","98185","<linux><openssl><ssl-certificate><private-key>","25","12","4","2018-09-28 21:36:15","31631728","0","2","-1","","2017-05-23 11:46:19","2015-07-25 19:56:38",""
"7260","How do I setup Public-Key Authentication?","<p>How do I setup Public-Key Authentication for SSH?</p>
","<p>For windows <a href=""http://the.earth.li/~sgtatham/putty/0.53b/htmldoc/Chapter8.html"" rel=""noreferrer"">this</a> is a good introduction and guide</p>

<p>Here are some good ssh-agents for systems other than linux.</p>

<ul>
<li>Windows - <a href=""http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html"" rel=""noreferrer"">pageant</a></li>
<li>OS X - <a href=""http://www.askbjoernhansen.com/2005/01/07/sshkeychain_ssh.html"" rel=""noreferrer"">SSHKeychain</a></li>
</ul>
","95560","<linux><ssh><private-key><public-key>","59","5","2","2017-03-28 21:33:55","9095","0","23","2838606","","2017-03-28 21:33:55","2008-08-10 17:50:11","2013-05-03 17:43:56"
"7260","How do I setup Public-Key Authentication?","<p>How do I setup Public-Key Authentication for SSH?</p>
","<p>If you have SSH installed, you should be able to run..</p>

<pre><code>ssh-keygen
</code></pre>

<p>Then go through the steps, you'll have two files, <code>id_rsa</code> and <code>id_rsa.pub</code> (the first is your private key, the second is your public key - the one you copy to remote machines)</p>

<p>Then, connect to the remote machine you want to login to, to the file <code>~/.ssh/authorized_keys</code> add the contents of your that <code>id_rsa.pub</code> file.</p>

<p>Oh, and <code>chmod 600</code> all the <code>id_rsa*</code> files (both locally and remote), so no other users can read them:</p>

<pre><code>chmod 600 ~/.ssh/id_rsa*
</code></pre>

<p>Similarly, ensure the remote <code>~/.ssh/authorized_keys</code> file is <code>chmod 600</code> also:</p>

<pre><code>chmod 600 ~/.ssh/authorized_keys
</code></pre>

<p>Then, when you do <code>ssh remote.machine</code>, it should ask you for the key's password, not the remote machine.</p>

<hr>

<p>To make it nicer to use, you can use <code>ssh-agent</code> to hold the decrypted keys in memory - this means you don't have to type your keypair's password every single time. To launch the agent, you run (including the back-tick quotes, which eval the output of the <code>ssh-agent</code> command)</p>

<pre><code>`ssh-agent`
</code></pre>

<p>On some distros, ssh-agent is started automatically. If you run <code>echo $SSH_AUTH_SOCK</code> and it shows a path (probably in /tmp/) it's already setup, so you can skip the previous command.</p>

<p>Then to add your key, you do</p>

<pre><code>ssh-add ~/.ssh/id_rsa
</code></pre>

<p>and enter your passphrase. It's stored until you remove it (using the <code>ssh-add -D</code> command, which removes all keys from the agent)</p>
","95560","<linux><ssh><private-key><public-key>","59","101","2","2017-03-28 21:33:55","9095","0","23","2838606","","2017-03-28 21:33:55","2008-08-10 17:50:11","2013-05-03 17:43:56"
"688809","How to create a private key for iPhone Distribution Certificate?","<p>In iPhone Developer Program Portal, there's a video to demonstrate how to create a development certificate and assign a private key </p>

<p>Now I have finished the development process and starting to distribute</p>

<p>I have created a ""Distribution Certificate"", but how do I assign a private key to this certificate?</p>

<p>As it got the ""CodeSign error: code signing identity '...' does not match any code-signing certificate in your keychain"" when compiles</p>

<p>It will be glad to let me now if I need to assign a private key to the distribution cert and how.</p>

<p>Please be noticed that I am NOT talking about development certificate here, thanks.</p>
","<p><a href=""http://developer.apple.com/iphone/manage/distribution/index.action"" rel=""nofollow noreferrer"">Read the <em>Obtaining your iPhone Distribution Certificate</em> section of the Apple Developer Connection iPhone site</a>. This explains step-by-step what you will need to do, in the correct order.</p>

<p><strong>EDIT</strong>: The current link appears to be: <a href=""https://developer.apple.com/library/watchos/documentation/IDEs/Conceptual/AppDistributionGuide/MaintainingCertificates/MaintainingCertificates.html#//apple_ref/doc/uid/TP40012582-CH31-SW1"" rel=""nofollow noreferrer"">https://developer.apple.com/library/watchos/documentation/IDEs/Conceptual/AppDistributionGuide/MaintainingCertificates/MaintainingCertificates.html#//apple_ref/doc/uid/TP40012582-CH31-SW1</a></p>

<blockquote>
  <p>Before you can code sign your app, you create your development certificate and later, a distribution certificate to upload your app to iTunes Connect. You can create all the types of certificates and signing identities you need using Xcode. Xcode creates, downloads, and installs your signing identities for you.</p>
  
  <p>All team members can create their own development certificate. Only a team agent or admin can create a distribution certificate. Only a team agent can create a Developer ID certificate. If you have an organization membership, read Managing Your Team in Member Center for a description of team roles and tasks that team agents perform on behalf of team members.</p>
  
  <p>Xcode creates your development certificate for you when you need it. For example, when you assign your project to a team or create the team provisioning profile, as described in Configuring Identity and Team Settings, Xcode creates your development certificate and adds it to the team provisioning profile. Because of this, you typically create distribution certificates using the Xcode Preferences window.</p>
  
  <p><strong>To create a signing identity</strong></p>
  
  <ol>
  <li><p>In the Xcode Preferences window, click Accounts.</p></li>
  <li><p>Select the team you want to use, and click View Details.</p></li>
  <li><p>In the dialog that appears, click the Create button in the row of the type of certificate you want to create.</p>
  
  <p>If the Create button is disabled, you are not allowed to create that type of signing identity. For a description of each type of certificate, refer to Table 14-2.</p>
  
  <p>After the signing identity is created, the Create button disappears. </p></li>
  <li><p>To return to Accounts preferences, click Done.</p></li>
  </ol>
</blockquote>
","91103","<iphone><certificate><distribution><private-key>","15","4","4","2016-11-29 04:51:59","688822","0","9","","","","2009-03-27 07:20:26",""
"688809","How to create a private key for iPhone Distribution Certificate?","<p>In iPhone Developer Program Portal, there's a video to demonstrate how to create a development certificate and assign a private key </p>

<p>Now I have finished the development process and starting to distribute</p>

<p>I have created a ""Distribution Certificate"", but how do I assign a private key to this certificate?</p>

<p>As it got the ""CodeSign error: code signing identity '...' does not match any code-signing certificate in your keychain"" when compiles</p>

<p>It will be glad to let me now if I need to assign a private key to the distribution cert and how.</p>

<p>Please be noticed that I am NOT talking about development certificate here, thanks.</p>
","<p>For me - restarting Xcode solved both these issues.<br>
Everything was obviously setup correctly somewhere, but needed to be flushed/synced.</p>
","91103","<iphone><certificate><distribution><private-key>","15","0","4","2016-11-29 04:51:59","688822","0","9","","","","2009-03-27 07:20:26",""
"688809","How to create a private key for iPhone Distribution Certificate?","<p>In iPhone Developer Program Portal, there's a video to demonstrate how to create a development certificate and assign a private key </p>

<p>Now I have finished the development process and starting to distribute</p>

<p>I have created a ""Distribution Certificate"", but how do I assign a private key to this certificate?</p>

<p>As it got the ""CodeSign error: code signing identity '...' does not match any code-signing certificate in your keychain"" when compiles</p>

<p>It will be glad to let me now if I need to assign a private key to the distribution cert and how.</p>

<p>Please be noticed that I am NOT talking about development certificate here, thanks.</p>
","<p>As no one has updated or answered this question since Nathan pointed out the original answer link is unavailable (Point number one on posting on stackoverflow ""Please be sure to <em>answer the question</em>"") here is an answer from my experiance, hope it helps someone:</p>

<p>For this specific question (Dev/Distribution cert installed but no private key) the answer is a choice of 2 alternatives:</p>

<p><strong>1. Create a new certificate identity via the apple devloper portal</strong>
In this case you'll need to log into the apple developer portal and use the assistant, as part of this you will need to create and upload a CSR (Certificate Signing Request) which will also create the public and private keys on the machine. Apple sign the request and voila, a signed public/private certificate pair : <a href=""https://appmakr.zendesk.com/entries/175966-how-to-create-and-upload-your-private-key-p12-into-your-appmakr-developer-account"" rel=""noreferrer"">Reference</a></p>

<p><strong>2. Export the private key from the machine originally used to create the Certificate</strong>
This case is when your signing with an identity previously created, probably on an old machine or if (as in my case) your developing for a client that has their ID's already created. If you can't access the machine originally used to create the certificate identity you'll have to create a new identity as per the guide/assistant.</p>

<p>To do this, you will need to export your private key (a .p12 file), or public/private key pair via Keychain Access, and install the private key or key pair to the machine your developing on. Here's a <a href=""https://stackoverflow.com/questions/1861360/two-macs-one-iphone-developer-license-possible"">guide</a> I found on stackoverflow.</p>

<p>Ref: <a href=""http://iphonedevsdk.com/forum/iphone-sdk-development/11498-problems-exporting-importing-p12-private-key-for-developing-on-another-mac.html"" rel=""noreferrer"">http://iphonedevsdk.com/forum/iphone-sdk-development/11498-problems-exporting-importing-p12-private-key-for-developing-on-another-mac.html</a></p>

<p>PS> Be warned, I am performing the latter option right now, and while evidence suggests this will work, it is untested by me as of yet, If if doesn't work I will re-reply!</p>
","91103","<iphone><certificate><distribution><private-key>","15","36","4","2016-11-29 04:51:59","688822","0","9","","","","2009-03-27 07:20:26",""
"688809","How to create a private key for iPhone Distribution Certificate?","<p>In iPhone Developer Program Portal, there's a video to demonstrate how to create a development certificate and assign a private key </p>

<p>Now I have finished the development process and starting to distribute</p>

<p>I have created a ""Distribution Certificate"", but how do I assign a private key to this certificate?</p>

<p>As it got the ""CodeSign error: code signing identity '...' does not match any code-signing certificate in your keychain"" when compiles</p>

<p>It will be glad to let me now if I need to assign a private key to the distribution cert and how.</p>

<p>Please be noticed that I am NOT talking about development certificate here, thanks.</p>
","<p>If you hover over the image and click the small red delete icon, then save this.  Navigate away and come back to this page you will be able to add the icon again.</p>
","91103","<iphone><certificate><distribution><private-key>","15","0","4","2016-11-29 04:51:59","688822","0","9","","","","2009-03-27 07:20:26",""
"6602422","Access denied when creating keystore for Android app","<p>I am trying to sign my Android app so I can release it in Market. When I generate the keystore, I get an access denied error. How do I fix this?</p>

<p><img src=""https://i.stack.imgur.com/c1PUb.png"" alt=""android keystore selection""></p>

<p>This is what I've been trying to do:</p>

<ol>
<li>Right click project in Eclipse Helios.</li>
<li>Android Tools > Export Signed Application Package.</li>
<li>Click next.</li>
<li>I check ""Create new keystore"" and realize it does nothing to help me. It still asks for the location of keystore. So I decide to do it the hard way.</li>
<li>Turned off read-only access on <code>C:\Program Files\Java\jdk1.6.0_25\bin</code> and granted the <code>CREATOR OWNER</code> group full control of the folder.</li>
<li>Open command line on Windows 7 64-bit.</li>
<li>Traverse to <code>C:\Program Files\Java\jdk1.6.0_25\bin</code>.</li>
<li>Run keytool.</li>
<li>Got an access denied error.</li>
</ol>

<p>.</p>

<pre><code>C:\Program Files\Java\jdk1.6.0_25\bin&gt;keytool -genkey -v -alias company -keyalg R
SA -keysize 2048 -validity 10000 -keystore company.keystore
Enter keystore password:
Re-enter new password:
What is your first and last name?
  [Unknown]:  John Smith
What is the name of your organizational unit?
  [Unknown]:  Android
What is the name of your organization?
  [Unknown]:  Company
What is the name of your City or Locality?
  [Unknown]:  Albany
What is the name of your State or Province?
  [Unknown]:  NY
What is the two-letter country code for this unit?
  [Unknown]:  US
Is CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US correct?
  [no]:  yes

Generating 2,048 bit RSA key pair and self-signed certificate (SHA1withRSA) with
 a validity of 10,000 days
        for: CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US
Enter key password for &lt;veetle&gt;
        (RETURN if same as keystore password):
Re-enter new password:
[Storing company.keystore]
keytool error: java.io.FileNotFoundException: veetle.keystore (Access is denied)

java.io.FileNotFoundException: veetle.keystore (Access is denied)
        at java.io.FileOutputStream.open(Native Method)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:194)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:84)
        at sun.security.tools.KeyTool.doCommands(KeyTool.java:902)
        at sun.security.tools.KeyTool.run(KeyTool.java:172)
        at sun.security.tools.KeyTool.main(KeyTool.java:166)
</code></pre>

<h1>Edit:</h1>

<p>Everytime I check the folder permissions, I see that it has reverted back to read-only. There were no errors whenever I turned off read-only.</p>
","<p>It does help you. You have to specify the location of the file that <strong>will</strong> be  generated. For example specify <strong>C:\Documents and Settings\loginname\market.keystore</strong></p>
","60007","<android><keytool><private-key>","20","34","13","2019-11-01 08:08:18","6602482","1","9","459987","","2011-07-06 20:26:39","2011-07-06 20:18:50",""
"6602422","Access denied when creating keystore for Android app","<p>I am trying to sign my Android app so I can release it in Market. When I generate the keystore, I get an access denied error. How do I fix this?</p>

<p><img src=""https://i.stack.imgur.com/c1PUb.png"" alt=""android keystore selection""></p>

<p>This is what I've been trying to do:</p>

<ol>
<li>Right click project in Eclipse Helios.</li>
<li>Android Tools > Export Signed Application Package.</li>
<li>Click next.</li>
<li>I check ""Create new keystore"" and realize it does nothing to help me. It still asks for the location of keystore. So I decide to do it the hard way.</li>
<li>Turned off read-only access on <code>C:\Program Files\Java\jdk1.6.0_25\bin</code> and granted the <code>CREATOR OWNER</code> group full control of the folder.</li>
<li>Open command line on Windows 7 64-bit.</li>
<li>Traverse to <code>C:\Program Files\Java\jdk1.6.0_25\bin</code>.</li>
<li>Run keytool.</li>
<li>Got an access denied error.</li>
</ol>

<p>.</p>

<pre><code>C:\Program Files\Java\jdk1.6.0_25\bin&gt;keytool -genkey -v -alias company -keyalg R
SA -keysize 2048 -validity 10000 -keystore company.keystore
Enter keystore password:
Re-enter new password:
What is your first and last name?
  [Unknown]:  John Smith
What is the name of your organizational unit?
  [Unknown]:  Android
What is the name of your organization?
  [Unknown]:  Company
What is the name of your City or Locality?
  [Unknown]:  Albany
What is the name of your State or Province?
  [Unknown]:  NY
What is the two-letter country code for this unit?
  [Unknown]:  US
Is CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US correct?
  [no]:  yes

Generating 2,048 bit RSA key pair and self-signed certificate (SHA1withRSA) with
 a validity of 10,000 days
        for: CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US
Enter key password for &lt;veetle&gt;
        (RETURN if same as keystore password):
Re-enter new password:
[Storing company.keystore]
keytool error: java.io.FileNotFoundException: veetle.keystore (Access is denied)

java.io.FileNotFoundException: veetle.keystore (Access is denied)
        at java.io.FileOutputStream.open(Native Method)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:194)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:84)
        at sun.security.tools.KeyTool.doCommands(KeyTool.java:902)
        at sun.security.tools.KeyTool.run(KeyTool.java:172)
        at sun.security.tools.KeyTool.main(KeyTool.java:166)
</code></pre>

<h1>Edit:</h1>

<p>Everytime I check the folder permissions, I see that it has reverted back to read-only. There were no errors whenever I turned off read-only.</p>
","<p>The keystore that the Android SDK needs access to is not the same of the JDK. You can simply use the ""create new keystore"" option of the Android wizard and choose any folder you have write access to: the wizard will create there a new keystore. You don't need to use keytool form JDK.</p>
","60007","<android><keytool><private-key>","20","8","13","2019-11-01 08:08:18","6602482","1","9","459987","","2011-07-06 20:26:39","2011-07-06 20:18:50",""
"6602422","Access denied when creating keystore for Android app","<p>I am trying to sign my Android app so I can release it in Market. When I generate the keystore, I get an access denied error. How do I fix this?</p>

<p><img src=""https://i.stack.imgur.com/c1PUb.png"" alt=""android keystore selection""></p>

<p>This is what I've been trying to do:</p>

<ol>
<li>Right click project in Eclipse Helios.</li>
<li>Android Tools > Export Signed Application Package.</li>
<li>Click next.</li>
<li>I check ""Create new keystore"" and realize it does nothing to help me. It still asks for the location of keystore. So I decide to do it the hard way.</li>
<li>Turned off read-only access on <code>C:\Program Files\Java\jdk1.6.0_25\bin</code> and granted the <code>CREATOR OWNER</code> group full control of the folder.</li>
<li>Open command line on Windows 7 64-bit.</li>
<li>Traverse to <code>C:\Program Files\Java\jdk1.6.0_25\bin</code>.</li>
<li>Run keytool.</li>
<li>Got an access denied error.</li>
</ol>

<p>.</p>

<pre><code>C:\Program Files\Java\jdk1.6.0_25\bin&gt;keytool -genkey -v -alias company -keyalg R
SA -keysize 2048 -validity 10000 -keystore company.keystore
Enter keystore password:
Re-enter new password:
What is your first and last name?
  [Unknown]:  John Smith
What is the name of your organizational unit?
  [Unknown]:  Android
What is the name of your organization?
  [Unknown]:  Company
What is the name of your City or Locality?
  [Unknown]:  Albany
What is the name of your State or Province?
  [Unknown]:  NY
What is the two-letter country code for this unit?
  [Unknown]:  US
Is CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US correct?
  [no]:  yes

Generating 2,048 bit RSA key pair and self-signed certificate (SHA1withRSA) with
 a validity of 10,000 days
        for: CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US
Enter key password for &lt;veetle&gt;
        (RETURN if same as keystore password):
Re-enter new password:
[Storing company.keystore]
keytool error: java.io.FileNotFoundException: veetle.keystore (Access is denied)

java.io.FileNotFoundException: veetle.keystore (Access is denied)
        at java.io.FileOutputStream.open(Native Method)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:194)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:84)
        at sun.security.tools.KeyTool.doCommands(KeyTool.java:902)
        at sun.security.tools.KeyTool.run(KeyTool.java:172)
        at sun.security.tools.KeyTool.main(KeyTool.java:166)
</code></pre>

<h1>Edit:</h1>

<p>Everytime I check the folder permissions, I see that it has reverted back to read-only. There were no errors whenever I turned off read-only.</p>
","<p>I had the same problem. You need to define your JAVA_HOME environment variable.</p>

<p>Read the ""Basic Setup for signing"" paragraph of this link : <a href=""http://developer.android.com/guide/publishing/app-signing.html#setup"" rel=""nofollow"">http://developer.android.com/guide/publishing/app-signing.html#setup</a></p>

<p>It says:</p>

<blockquote>
  <p>Before you begin, make sure that the Keytool utility and Jarsigner utility are available to the SDK build tools. Both of these tools are available in the JDK. In most cases, you can tell the SDK build tools how to find these utilities by setting your JAVA_HOME environment variable so it references a suitable JDK. Alternatively, you can add the JDK version of Keytool and Jarsigner to your PATH variable.</p>
  
  <p>If you are developing on a version of Linux that originally came with GNU Compiler for Java, make sure that the system is using the JDK version of Keytool, rather than the gcj version. If Keytool is already in your PATH, it might be pointing to a symlink at /usr/bin/keytool. In this case, check the symlink target to be sure it points to the Keytool in the JDK.</p>
</blockquote>
","60007","<android><keytool><private-key>","20","1","13","2019-11-01 08:08:18","6602482","1","9","459987","","2011-07-06 20:26:39","2011-07-06 20:18:50",""
"6602422","Access denied when creating keystore for Android app","<p>I am trying to sign my Android app so I can release it in Market. When I generate the keystore, I get an access denied error. How do I fix this?</p>

<p><img src=""https://i.stack.imgur.com/c1PUb.png"" alt=""android keystore selection""></p>

<p>This is what I've been trying to do:</p>

<ol>
<li>Right click project in Eclipse Helios.</li>
<li>Android Tools > Export Signed Application Package.</li>
<li>Click next.</li>
<li>I check ""Create new keystore"" and realize it does nothing to help me. It still asks for the location of keystore. So I decide to do it the hard way.</li>
<li>Turned off read-only access on <code>C:\Program Files\Java\jdk1.6.0_25\bin</code> and granted the <code>CREATOR OWNER</code> group full control of the folder.</li>
<li>Open command line on Windows 7 64-bit.</li>
<li>Traverse to <code>C:\Program Files\Java\jdk1.6.0_25\bin</code>.</li>
<li>Run keytool.</li>
<li>Got an access denied error.</li>
</ol>

<p>.</p>

<pre><code>C:\Program Files\Java\jdk1.6.0_25\bin&gt;keytool -genkey -v -alias company -keyalg R
SA -keysize 2048 -validity 10000 -keystore company.keystore
Enter keystore password:
Re-enter new password:
What is your first and last name?
  [Unknown]:  John Smith
What is the name of your organizational unit?
  [Unknown]:  Android
What is the name of your organization?
  [Unknown]:  Company
What is the name of your City or Locality?
  [Unknown]:  Albany
What is the name of your State or Province?
  [Unknown]:  NY
What is the two-letter country code for this unit?
  [Unknown]:  US
Is CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US correct?
  [no]:  yes

Generating 2,048 bit RSA key pair and self-signed certificate (SHA1withRSA) with
 a validity of 10,000 days
        for: CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US
Enter key password for &lt;veetle&gt;
        (RETURN if same as keystore password):
Re-enter new password:
[Storing company.keystore]
keytool error: java.io.FileNotFoundException: veetle.keystore (Access is denied)

java.io.FileNotFoundException: veetle.keystore (Access is denied)
        at java.io.FileOutputStream.open(Native Method)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:194)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:84)
        at sun.security.tools.KeyTool.doCommands(KeyTool.java:902)
        at sun.security.tools.KeyTool.run(KeyTool.java:172)
        at sun.security.tools.KeyTool.main(KeyTool.java:166)
</code></pre>

<h1>Edit:</h1>

<p>Everytime I check the folder permissions, I see that it has reverted back to read-only. There were no errors whenever I turned off read-only.</p>
","<p>If you are using <strong>Windows 7</strong>, make sure you are running eclipse as an administrator.</p>
","60007","<android><keytool><private-key>","20","0","13","2019-11-01 08:08:18","6602482","1","9","459987","","2011-07-06 20:26:39","2011-07-06 20:18:50",""
"6602422","Access denied when creating keystore for Android app","<p>I am trying to sign my Android app so I can release it in Market. When I generate the keystore, I get an access denied error. How do I fix this?</p>

<p><img src=""https://i.stack.imgur.com/c1PUb.png"" alt=""android keystore selection""></p>

<p>This is what I've been trying to do:</p>

<ol>
<li>Right click project in Eclipse Helios.</li>
<li>Android Tools > Export Signed Application Package.</li>
<li>Click next.</li>
<li>I check ""Create new keystore"" and realize it does nothing to help me. It still asks for the location of keystore. So I decide to do it the hard way.</li>
<li>Turned off read-only access on <code>C:\Program Files\Java\jdk1.6.0_25\bin</code> and granted the <code>CREATOR OWNER</code> group full control of the folder.</li>
<li>Open command line on Windows 7 64-bit.</li>
<li>Traverse to <code>C:\Program Files\Java\jdk1.6.0_25\bin</code>.</li>
<li>Run keytool.</li>
<li>Got an access denied error.</li>
</ol>

<p>.</p>

<pre><code>C:\Program Files\Java\jdk1.6.0_25\bin&gt;keytool -genkey -v -alias company -keyalg R
SA -keysize 2048 -validity 10000 -keystore company.keystore
Enter keystore password:
Re-enter new password:
What is your first and last name?
  [Unknown]:  John Smith
What is the name of your organizational unit?
  [Unknown]:  Android
What is the name of your organization?
  [Unknown]:  Company
What is the name of your City or Locality?
  [Unknown]:  Albany
What is the name of your State or Province?
  [Unknown]:  NY
What is the two-letter country code for this unit?
  [Unknown]:  US
Is CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US correct?
  [no]:  yes

Generating 2,048 bit RSA key pair and self-signed certificate (SHA1withRSA) with
 a validity of 10,000 days
        for: CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US
Enter key password for &lt;veetle&gt;
        (RETURN if same as keystore password):
Re-enter new password:
[Storing company.keystore]
keytool error: java.io.FileNotFoundException: veetle.keystore (Access is denied)

java.io.FileNotFoundException: veetle.keystore (Access is denied)
        at java.io.FileOutputStream.open(Native Method)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:194)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:84)
        at sun.security.tools.KeyTool.doCommands(KeyTool.java:902)
        at sun.security.tools.KeyTool.run(KeyTool.java:172)
        at sun.security.tools.KeyTool.main(KeyTool.java:166)
</code></pre>

<h1>Edit:</h1>

<p>Everytime I check the folder permissions, I see that it has reverted back to read-only. There were no errors whenever I turned off read-only.</p>
","<p>Fixing the problem on win7 (yuk) without Eclipse:
i have the environment variable JAVA_HOME set to ..../JDK1.7.0_03 (android programmed from GLbasic), and i did only 2 things to fix the problem:
1) in the folder ..../Java/JDK1.7.0_03 i removed the ""read-only"" permission of the /bin sub-folder, which contains keytool.exe.
2) i opened the console ""as administrator"" (although it's the only account on my win7).
then you do cd...JDK / bin, run again keytool.exe, and you get the file nickname.keystore auto-generated in JDK / bin.
Once everything is done you could re-assign the ""read-only"" permission.
Good luck!</p>
","60007","<android><keytool><private-key>","20","1","13","2019-11-01 08:08:18","6602482","1","9","459987","","2011-07-06 20:26:39","2011-07-06 20:18:50",""
"6602422","Access denied when creating keystore for Android app","<p>I am trying to sign my Android app so I can release it in Market. When I generate the keystore, I get an access denied error. How do I fix this?</p>

<p><img src=""https://i.stack.imgur.com/c1PUb.png"" alt=""android keystore selection""></p>

<p>This is what I've been trying to do:</p>

<ol>
<li>Right click project in Eclipse Helios.</li>
<li>Android Tools > Export Signed Application Package.</li>
<li>Click next.</li>
<li>I check ""Create new keystore"" and realize it does nothing to help me. It still asks for the location of keystore. So I decide to do it the hard way.</li>
<li>Turned off read-only access on <code>C:\Program Files\Java\jdk1.6.0_25\bin</code> and granted the <code>CREATOR OWNER</code> group full control of the folder.</li>
<li>Open command line on Windows 7 64-bit.</li>
<li>Traverse to <code>C:\Program Files\Java\jdk1.6.0_25\bin</code>.</li>
<li>Run keytool.</li>
<li>Got an access denied error.</li>
</ol>

<p>.</p>

<pre><code>C:\Program Files\Java\jdk1.6.0_25\bin&gt;keytool -genkey -v -alias company -keyalg R
SA -keysize 2048 -validity 10000 -keystore company.keystore
Enter keystore password:
Re-enter new password:
What is your first and last name?
  [Unknown]:  John Smith
What is the name of your organizational unit?
  [Unknown]:  Android
What is the name of your organization?
  [Unknown]:  Company
What is the name of your City or Locality?
  [Unknown]:  Albany
What is the name of your State or Province?
  [Unknown]:  NY
What is the two-letter country code for this unit?
  [Unknown]:  US
Is CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US correct?
  [no]:  yes

Generating 2,048 bit RSA key pair and self-signed certificate (SHA1withRSA) with
 a validity of 10,000 days
        for: CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US
Enter key password for &lt;veetle&gt;
        (RETURN if same as keystore password):
Re-enter new password:
[Storing company.keystore]
keytool error: java.io.FileNotFoundException: veetle.keystore (Access is denied)

java.io.FileNotFoundException: veetle.keystore (Access is denied)
        at java.io.FileOutputStream.open(Native Method)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:194)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:84)
        at sun.security.tools.KeyTool.doCommands(KeyTool.java:902)
        at sun.security.tools.KeyTool.run(KeyTool.java:172)
        at sun.security.tools.KeyTool.main(KeyTool.java:166)
</code></pre>

<h1>Edit:</h1>

<p>Everytime I check the folder permissions, I see that it has reverted back to read-only. There were no errors whenever I turned off read-only.</p>
","<p>chagning read only on windows 7 helped me. don't forget the default password ""changeit""</p>
","60007","<android><keytool><private-key>","20","0","13","2019-11-01 08:08:18","6602482","1","9","459987","","2011-07-06 20:26:39","2011-07-06 20:18:50",""
"6602422","Access denied when creating keystore for Android app","<p>I am trying to sign my Android app so I can release it in Market. When I generate the keystore, I get an access denied error. How do I fix this?</p>

<p><img src=""https://i.stack.imgur.com/c1PUb.png"" alt=""android keystore selection""></p>

<p>This is what I've been trying to do:</p>

<ol>
<li>Right click project in Eclipse Helios.</li>
<li>Android Tools > Export Signed Application Package.</li>
<li>Click next.</li>
<li>I check ""Create new keystore"" and realize it does nothing to help me. It still asks for the location of keystore. So I decide to do it the hard way.</li>
<li>Turned off read-only access on <code>C:\Program Files\Java\jdk1.6.0_25\bin</code> and granted the <code>CREATOR OWNER</code> group full control of the folder.</li>
<li>Open command line on Windows 7 64-bit.</li>
<li>Traverse to <code>C:\Program Files\Java\jdk1.6.0_25\bin</code>.</li>
<li>Run keytool.</li>
<li>Got an access denied error.</li>
</ol>

<p>.</p>

<pre><code>C:\Program Files\Java\jdk1.6.0_25\bin&gt;keytool -genkey -v -alias company -keyalg R
SA -keysize 2048 -validity 10000 -keystore company.keystore
Enter keystore password:
Re-enter new password:
What is your first and last name?
  [Unknown]:  John Smith
What is the name of your organizational unit?
  [Unknown]:  Android
What is the name of your organization?
  [Unknown]:  Company
What is the name of your City or Locality?
  [Unknown]:  Albany
What is the name of your State or Province?
  [Unknown]:  NY
What is the two-letter country code for this unit?
  [Unknown]:  US
Is CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US correct?
  [no]:  yes

Generating 2,048 bit RSA key pair and self-signed certificate (SHA1withRSA) with
 a validity of 10,000 days
        for: CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US
Enter key password for &lt;veetle&gt;
        (RETURN if same as keystore password):
Re-enter new password:
[Storing company.keystore]
keytool error: java.io.FileNotFoundException: veetle.keystore (Access is denied)

java.io.FileNotFoundException: veetle.keystore (Access is denied)
        at java.io.FileOutputStream.open(Native Method)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:194)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:84)
        at sun.security.tools.KeyTool.doCommands(KeyTool.java:902)
        at sun.security.tools.KeyTool.run(KeyTool.java:172)
        at sun.security.tools.KeyTool.main(KeyTool.java:166)
</code></pre>

<h1>Edit:</h1>

<p>Everytime I check the folder permissions, I see that it has reverted back to read-only. There were no errors whenever I turned off read-only.</p>
","<p>Below steps worked for me:</p>

<ol>
<li><p>Run command prompt as administrator</p></li>
<li><p>Unchecked the read only options in <code>C:\Program Files\Java\jdk1.6.0_25\bin</code> <em>This may not be required</em></p></li>
<li><p><code>keytool -genkey -v -keystore d:\my_private_key.keystore -alias my_key_alias -keyalg RSA -keysize 2048 -validity 10000</code></p></li>
</ol>

<p>Tell it to create it in drive <code>D:</code>.</p>
","60007","<android><keytool><private-key>","20","51","13","2019-11-01 08:08:18","6602482","1","9","459987","","2011-07-06 20:26:39","2011-07-06 20:18:50",""
"6602422","Access denied when creating keystore for Android app","<p>I am trying to sign my Android app so I can release it in Market. When I generate the keystore, I get an access denied error. How do I fix this?</p>

<p><img src=""https://i.stack.imgur.com/c1PUb.png"" alt=""android keystore selection""></p>

<p>This is what I've been trying to do:</p>

<ol>
<li>Right click project in Eclipse Helios.</li>
<li>Android Tools > Export Signed Application Package.</li>
<li>Click next.</li>
<li>I check ""Create new keystore"" and realize it does nothing to help me. It still asks for the location of keystore. So I decide to do it the hard way.</li>
<li>Turned off read-only access on <code>C:\Program Files\Java\jdk1.6.0_25\bin</code> and granted the <code>CREATOR OWNER</code> group full control of the folder.</li>
<li>Open command line on Windows 7 64-bit.</li>
<li>Traverse to <code>C:\Program Files\Java\jdk1.6.0_25\bin</code>.</li>
<li>Run keytool.</li>
<li>Got an access denied error.</li>
</ol>

<p>.</p>

<pre><code>C:\Program Files\Java\jdk1.6.0_25\bin&gt;keytool -genkey -v -alias company -keyalg R
SA -keysize 2048 -validity 10000 -keystore company.keystore
Enter keystore password:
Re-enter new password:
What is your first and last name?
  [Unknown]:  John Smith
What is the name of your organizational unit?
  [Unknown]:  Android
What is the name of your organization?
  [Unknown]:  Company
What is the name of your City or Locality?
  [Unknown]:  Albany
What is the name of your State or Province?
  [Unknown]:  NY
What is the two-letter country code for this unit?
  [Unknown]:  US
Is CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US correct?
  [no]:  yes

Generating 2,048 bit RSA key pair and self-signed certificate (SHA1withRSA) with
 a validity of 10,000 days
        for: CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US
Enter key password for &lt;veetle&gt;
        (RETURN if same as keystore password):
Re-enter new password:
[Storing company.keystore]
keytool error: java.io.FileNotFoundException: veetle.keystore (Access is denied)

java.io.FileNotFoundException: veetle.keystore (Access is denied)
        at java.io.FileOutputStream.open(Native Method)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:194)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:84)
        at sun.security.tools.KeyTool.doCommands(KeyTool.java:902)
        at sun.security.tools.KeyTool.run(KeyTool.java:172)
        at sun.security.tools.KeyTool.main(KeyTool.java:166)
</code></pre>

<h1>Edit:</h1>

<p>Everytime I check the folder permissions, I see that it has reverted back to read-only. There were no errors whenever I turned off read-only.</p>
","<p>Make sure there is no other keystore file at this location C:\Program Files\Java\jdk1.6.0_25\bin. If there is, keep it somewhere else and try the command again:</p>

<p>keytool -genkey -v -keystore d:\my_private_key.keystore -alias my_key_alias -keyalg RSA -keysize 2048 -validity 10000 </p>
","60007","<android><keytool><private-key>","20","0","13","2019-11-01 08:08:18","6602482","1","9","459987","","2011-07-06 20:26:39","2011-07-06 20:18:50",""
"6602422","Access denied when creating keystore for Android app","<p>I am trying to sign my Android app so I can release it in Market. When I generate the keystore, I get an access denied error. How do I fix this?</p>

<p><img src=""https://i.stack.imgur.com/c1PUb.png"" alt=""android keystore selection""></p>

<p>This is what I've been trying to do:</p>

<ol>
<li>Right click project in Eclipse Helios.</li>
<li>Android Tools > Export Signed Application Package.</li>
<li>Click next.</li>
<li>I check ""Create new keystore"" and realize it does nothing to help me. It still asks for the location of keystore. So I decide to do it the hard way.</li>
<li>Turned off read-only access on <code>C:\Program Files\Java\jdk1.6.0_25\bin</code> and granted the <code>CREATOR OWNER</code> group full control of the folder.</li>
<li>Open command line on Windows 7 64-bit.</li>
<li>Traverse to <code>C:\Program Files\Java\jdk1.6.0_25\bin</code>.</li>
<li>Run keytool.</li>
<li>Got an access denied error.</li>
</ol>

<p>.</p>

<pre><code>C:\Program Files\Java\jdk1.6.0_25\bin&gt;keytool -genkey -v -alias company -keyalg R
SA -keysize 2048 -validity 10000 -keystore company.keystore
Enter keystore password:
Re-enter new password:
What is your first and last name?
  [Unknown]:  John Smith
What is the name of your organizational unit?
  [Unknown]:  Android
What is the name of your organization?
  [Unknown]:  Company
What is the name of your City or Locality?
  [Unknown]:  Albany
What is the name of your State or Province?
  [Unknown]:  NY
What is the two-letter country code for this unit?
  [Unknown]:  US
Is CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US correct?
  [no]:  yes

Generating 2,048 bit RSA key pair and self-signed certificate (SHA1withRSA) with
 a validity of 10,000 days
        for: CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US
Enter key password for &lt;veetle&gt;
        (RETURN if same as keystore password):
Re-enter new password:
[Storing company.keystore]
keytool error: java.io.FileNotFoundException: veetle.keystore (Access is denied)

java.io.FileNotFoundException: veetle.keystore (Access is denied)
        at java.io.FileOutputStream.open(Native Method)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:194)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:84)
        at sun.security.tools.KeyTool.doCommands(KeyTool.java:902)
        at sun.security.tools.KeyTool.run(KeyTool.java:172)
        at sun.security.tools.KeyTool.main(KeyTool.java:166)
</code></pre>

<h1>Edit:</h1>

<p>Everytime I check the folder permissions, I see that it has reverted back to read-only. There were no errors whenever I turned off read-only.</p>
","<p>Seems that it's easier to accomplish it in command line via <strong>keytool</strong> and the latest <strong>genkeypair</strong> approach. I finished up with the following:</p>

<pre><code>keytool -genkeypair -keystore ~/.android/release.keystore -alias &lt;my_alias&gt; -storepass &lt;my_cert_pass&gt; -keyalg RSA
</code></pre>

<p>Then I got a set of questions regarding name, organization, location and password for my alias and that was it!</p>
","60007","<android><keytool><private-key>","20","0","13","2019-11-01 08:08:18","6602482","1","9","459987","","2011-07-06 20:26:39","2011-07-06 20:18:50",""
"6602422","Access denied when creating keystore for Android app","<p>I am trying to sign my Android app so I can release it in Market. When I generate the keystore, I get an access denied error. How do I fix this?</p>

<p><img src=""https://i.stack.imgur.com/c1PUb.png"" alt=""android keystore selection""></p>

<p>This is what I've been trying to do:</p>

<ol>
<li>Right click project in Eclipse Helios.</li>
<li>Android Tools > Export Signed Application Package.</li>
<li>Click next.</li>
<li>I check ""Create new keystore"" and realize it does nothing to help me. It still asks for the location of keystore. So I decide to do it the hard way.</li>
<li>Turned off read-only access on <code>C:\Program Files\Java\jdk1.6.0_25\bin</code> and granted the <code>CREATOR OWNER</code> group full control of the folder.</li>
<li>Open command line on Windows 7 64-bit.</li>
<li>Traverse to <code>C:\Program Files\Java\jdk1.6.0_25\bin</code>.</li>
<li>Run keytool.</li>
<li>Got an access denied error.</li>
</ol>

<p>.</p>

<pre><code>C:\Program Files\Java\jdk1.6.0_25\bin&gt;keytool -genkey -v -alias company -keyalg R
SA -keysize 2048 -validity 10000 -keystore company.keystore
Enter keystore password:
Re-enter new password:
What is your first and last name?
  [Unknown]:  John Smith
What is the name of your organizational unit?
  [Unknown]:  Android
What is the name of your organization?
  [Unknown]:  Company
What is the name of your City or Locality?
  [Unknown]:  Albany
What is the name of your State or Province?
  [Unknown]:  NY
What is the two-letter country code for this unit?
  [Unknown]:  US
Is CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US correct?
  [no]:  yes

Generating 2,048 bit RSA key pair and self-signed certificate (SHA1withRSA) with
 a validity of 10,000 days
        for: CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US
Enter key password for &lt;veetle&gt;
        (RETURN if same as keystore password):
Re-enter new password:
[Storing company.keystore]
keytool error: java.io.FileNotFoundException: veetle.keystore (Access is denied)

java.io.FileNotFoundException: veetle.keystore (Access is denied)
        at java.io.FileOutputStream.open(Native Method)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:194)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:84)
        at sun.security.tools.KeyTool.doCommands(KeyTool.java:902)
        at sun.security.tools.KeyTool.run(KeyTool.java:172)
        at sun.security.tools.KeyTool.main(KeyTool.java:166)
</code></pre>

<h1>Edit:</h1>

<p>Everytime I check the folder permissions, I see that it has reverted back to read-only. There were no errors whenever I turned off read-only.</p>
","<p>opening Command Prompt as a Administrator helped me.(For Windows 8.1)</p>
","60007","<android><keytool><private-key>","20","1","13","2019-11-01 08:08:18","6602482","1","9","459987","","2011-07-06 20:26:39","2011-07-06 20:18:50",""
"6602422","Access denied when creating keystore for Android app","<p>I am trying to sign my Android app so I can release it in Market. When I generate the keystore, I get an access denied error. How do I fix this?</p>

<p><img src=""https://i.stack.imgur.com/c1PUb.png"" alt=""android keystore selection""></p>

<p>This is what I've been trying to do:</p>

<ol>
<li>Right click project in Eclipse Helios.</li>
<li>Android Tools > Export Signed Application Package.</li>
<li>Click next.</li>
<li>I check ""Create new keystore"" and realize it does nothing to help me. It still asks for the location of keystore. So I decide to do it the hard way.</li>
<li>Turned off read-only access on <code>C:\Program Files\Java\jdk1.6.0_25\bin</code> and granted the <code>CREATOR OWNER</code> group full control of the folder.</li>
<li>Open command line on Windows 7 64-bit.</li>
<li>Traverse to <code>C:\Program Files\Java\jdk1.6.0_25\bin</code>.</li>
<li>Run keytool.</li>
<li>Got an access denied error.</li>
</ol>

<p>.</p>

<pre><code>C:\Program Files\Java\jdk1.6.0_25\bin&gt;keytool -genkey -v -alias company -keyalg R
SA -keysize 2048 -validity 10000 -keystore company.keystore
Enter keystore password:
Re-enter new password:
What is your first and last name?
  [Unknown]:  John Smith
What is the name of your organizational unit?
  [Unknown]:  Android
What is the name of your organization?
  [Unknown]:  Company
What is the name of your City or Locality?
  [Unknown]:  Albany
What is the name of your State or Province?
  [Unknown]:  NY
What is the two-letter country code for this unit?
  [Unknown]:  US
Is CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US correct?
  [no]:  yes

Generating 2,048 bit RSA key pair and self-signed certificate (SHA1withRSA) with
 a validity of 10,000 days
        for: CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US
Enter key password for &lt;veetle&gt;
        (RETURN if same as keystore password):
Re-enter new password:
[Storing company.keystore]
keytool error: java.io.FileNotFoundException: veetle.keystore (Access is denied)

java.io.FileNotFoundException: veetle.keystore (Access is denied)
        at java.io.FileOutputStream.open(Native Method)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:194)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:84)
        at sun.security.tools.KeyTool.doCommands(KeyTool.java:902)
        at sun.security.tools.KeyTool.run(KeyTool.java:172)
        at sun.security.tools.KeyTool.main(KeyTool.java:166)
</code></pre>

<h1>Edit:</h1>

<p>Everytime I check the folder permissions, I see that it has reverted back to read-only. There were no errors whenever I turned off read-only.</p>
","<p>Running eclipse as administrator solve the problem, then type the following:</p>

<pre><code>keytool -genkey -v -keystore NAME-mobileapps.keystore -alias NAMEmobileapps -keyalg RSA -keysize 2048 -validity 10000
</code></pre>

<p>Hope it help?</p>
","60007","<android><keytool><private-key>","20","0","13","2019-11-01 08:08:18","6602482","1","9","459987","","2011-07-06 20:26:39","2011-07-06 20:18:50",""
"6602422","Access denied when creating keystore for Android app","<p>I am trying to sign my Android app so I can release it in Market. When I generate the keystore, I get an access denied error. How do I fix this?</p>

<p><img src=""https://i.stack.imgur.com/c1PUb.png"" alt=""android keystore selection""></p>

<p>This is what I've been trying to do:</p>

<ol>
<li>Right click project in Eclipse Helios.</li>
<li>Android Tools > Export Signed Application Package.</li>
<li>Click next.</li>
<li>I check ""Create new keystore"" and realize it does nothing to help me. It still asks for the location of keystore. So I decide to do it the hard way.</li>
<li>Turned off read-only access on <code>C:\Program Files\Java\jdk1.6.0_25\bin</code> and granted the <code>CREATOR OWNER</code> group full control of the folder.</li>
<li>Open command line on Windows 7 64-bit.</li>
<li>Traverse to <code>C:\Program Files\Java\jdk1.6.0_25\bin</code>.</li>
<li>Run keytool.</li>
<li>Got an access denied error.</li>
</ol>

<p>.</p>

<pre><code>C:\Program Files\Java\jdk1.6.0_25\bin&gt;keytool -genkey -v -alias company -keyalg R
SA -keysize 2048 -validity 10000 -keystore company.keystore
Enter keystore password:
Re-enter new password:
What is your first and last name?
  [Unknown]:  John Smith
What is the name of your organizational unit?
  [Unknown]:  Android
What is the name of your organization?
  [Unknown]:  Company
What is the name of your City or Locality?
  [Unknown]:  Albany
What is the name of your State or Province?
  [Unknown]:  NY
What is the two-letter country code for this unit?
  [Unknown]:  US
Is CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US correct?
  [no]:  yes

Generating 2,048 bit RSA key pair and self-signed certificate (SHA1withRSA) with
 a validity of 10,000 days
        for: CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US
Enter key password for &lt;veetle&gt;
        (RETURN if same as keystore password):
Re-enter new password:
[Storing company.keystore]
keytool error: java.io.FileNotFoundException: veetle.keystore (Access is denied)

java.io.FileNotFoundException: veetle.keystore (Access is denied)
        at java.io.FileOutputStream.open(Native Method)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:194)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:84)
        at sun.security.tools.KeyTool.doCommands(KeyTool.java:902)
        at sun.security.tools.KeyTool.run(KeyTool.java:172)
        at sun.security.tools.KeyTool.main(KeyTool.java:166)
</code></pre>

<h1>Edit:</h1>

<p>Everytime I check the folder permissions, I see that it has reverted back to read-only. There were no errors whenever I turned off read-only.</p>
","<p>Access denied because you are not an admin. </p>

<p>Simply open the cmd prompt as an administrator - that  worked for me.</p>
","60007","<android><keytool><private-key>","20","5","13","2019-11-01 08:08:18","6602482","1","9","459987","","2011-07-06 20:26:39","2011-07-06 20:18:50",""
"6602422","Access denied when creating keystore for Android app","<p>I am trying to sign my Android app so I can release it in Market. When I generate the keystore, I get an access denied error. How do I fix this?</p>

<p><img src=""https://i.stack.imgur.com/c1PUb.png"" alt=""android keystore selection""></p>

<p>This is what I've been trying to do:</p>

<ol>
<li>Right click project in Eclipse Helios.</li>
<li>Android Tools > Export Signed Application Package.</li>
<li>Click next.</li>
<li>I check ""Create new keystore"" and realize it does nothing to help me. It still asks for the location of keystore. So I decide to do it the hard way.</li>
<li>Turned off read-only access on <code>C:\Program Files\Java\jdk1.6.0_25\bin</code> and granted the <code>CREATOR OWNER</code> group full control of the folder.</li>
<li>Open command line on Windows 7 64-bit.</li>
<li>Traverse to <code>C:\Program Files\Java\jdk1.6.0_25\bin</code>.</li>
<li>Run keytool.</li>
<li>Got an access denied error.</li>
</ol>

<p>.</p>

<pre><code>C:\Program Files\Java\jdk1.6.0_25\bin&gt;keytool -genkey -v -alias company -keyalg R
SA -keysize 2048 -validity 10000 -keystore company.keystore
Enter keystore password:
Re-enter new password:
What is your first and last name?
  [Unknown]:  John Smith
What is the name of your organizational unit?
  [Unknown]:  Android
What is the name of your organization?
  [Unknown]:  Company
What is the name of your City or Locality?
  [Unknown]:  Albany
What is the name of your State or Province?
  [Unknown]:  NY
What is the two-letter country code for this unit?
  [Unknown]:  US
Is CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US correct?
  [no]:  yes

Generating 2,048 bit RSA key pair and self-signed certificate (SHA1withRSA) with
 a validity of 10,000 days
        for: CN=John Smith, OU=Android, O=Company, L=Albany, ST=NY, C=US
Enter key password for &lt;veetle&gt;
        (RETURN if same as keystore password):
Re-enter new password:
[Storing company.keystore]
keytool error: java.io.FileNotFoundException: veetle.keystore (Access is denied)

java.io.FileNotFoundException: veetle.keystore (Access is denied)
        at java.io.FileOutputStream.open(Native Method)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:194)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:84)
        at sun.security.tools.KeyTool.doCommands(KeyTool.java:902)
        at sun.security.tools.KeyTool.run(KeyTool.java:172)
        at sun.security.tools.KeyTool.main(KeyTool.java:166)
</code></pre>

<h1>Edit:</h1>

<p>Everytime I check the folder permissions, I see that it has reverted back to read-only. There were no errors whenever I turned off read-only.</p>
","<p>If you are on Mac, Add <em>""sudo""</em> at the beginning of your command <em>""keytool -genkey -v -keystore my-release-key.keystore -alias my-key-alias -keyalg RSA -keysize 2048 -validity 10000""</em></p>
","60007","<android><keytool><private-key>","20","0","13","2019-11-01 08:08:18","6602482","1","9","459987","","2011-07-06 20:26:39","2011-07-06 20:18:50",""
"18257185","How does a public key verify a signature?","<p>I am trying to get a better grapple on how public/private keys work. I understand that a sender may add a digital signature to a document using his/her private key to essentially obtain a hash of the document, but what I do not understand is how the public key can be used to verify that signature. </p>

<p>My understanding was that public keys encrypt, private keys decrypt... can anyone help me understand? </p>
","<p>Your understanding of ""public keys encrypt, private keys decrypt"" is correct...  for data/message ENCRYPTION.  For digital signatures, it is the reverse.  With a digital signature, you are trying to prove that the document signed by you came from you.  To do that, you need to use something that only YOU have:  your private key.</p>

<p>A digital signature in its simplest description is a hash (SHA1, MD5, etc.) of the data (file, message, etc.) that is subsequently encrypted with the signer's private key.  Since that is something only the signer has (or should have) that is where the trust comes from.  EVERYONE has (or should have) access to the signer's public key.   </p>

<p>So, to validate a digital signature, the recipient </p>

<ol>
<li>Calculates a hash of the same data (file, message, etc.),</li>
<li>Decrypts the digital signature using the sender's PUBLIC key, and </li>
<li>Compares the 2 hash values.    </li>
</ol>

<p>If they match, the signature is considered valid.  If they don't match, it either means that a different key was used to sign it, or that the data has been altered (either intentionally or unintentionally).</p>

<p>Hope that helps!</p>
","59332","<digital-signature><public-key-encryption><private-key><public-key><pki>","139","175","4","2019-07-18 08:06:18","","2","57","63550","","2018-08-10 23:12:20","2013-08-15 16:29:20",""
"18257185","How does a public key verify a signature?","<p>I am trying to get a better grapple on how public/private keys work. I understand that a sender may add a digital signature to a document using his/her private key to essentially obtain a hash of the document, but what I do not understand is how the public key can be used to verify that signature. </p>

<p>My understanding was that public keys encrypt, private keys decrypt... can anyone help me understand? </p>
","<p>The keys work inversely:</p>

<blockquote>
  <p>Public key encrypts, private key decrypts (encrypting):</p>
</blockquote>

<pre><code>openssl rsautl -encrypt -inkey public.pem -pubin -in message.txt -out message.ssl
openssl rsautl -decrypt -inkey private.pem       -in message.ssl -out message.txt
</code></pre>

<blockquote>
  <p>Private key encrypts, public key decrypts (signing):</p>
</blockquote>

<pre><code>openssl rsautl -sign -inkey private.pem       -in message.txt -out message.ssl
openssl rsautl       -inkey public.pem -pubin -in message.ssl -out message.txt
</code></pre>

<p>Below is an example script to test this whole flow with <code>openssl</code>.</p>

<pre><code>#!/bin/sh
# Create message to be encrypted
echo ""Creating message file""
echo ""---------------------""
echo ""My secret message"" &gt; message.txt
echo ""done\n""

# Create asymmetric keypair
echo ""Creating asymmetric key pair""
echo ""----------------------------""
openssl genrsa -out private.pem 1024
openssl rsa -in private.pem -out public.pem -pubout
echo ""done\n""

# Encrypt with public &amp; decrypt with private
echo ""Public key encrypts and private key decrypts""
echo ""--------------------------------------------""
openssl rsautl -encrypt -inkey public.pem -pubin -in message.txt         -out message_enc_pub.ssl
openssl rsautl -decrypt -inkey private.pem       -in message_enc_pub.ssl -out message_pub.txt
xxd message_enc_pub.ssl # Print the binary contents of the encrypted message
cat message_pub.txt # Print the decrypted message
echo ""done\n""

# Encrypt with private &amp; decrypt with public
echo ""Private key encrypts and public key decrypts""
echo ""--------------------------------------------""
openssl rsautl -sign    -inkey private.pem -in message.txt          -out message_enc_priv.ssl
openssl rsautl -inkey public.pem -pubin    -in message_enc_priv.ssl -out message_priv.txt
xxd message_enc_priv.ssl
cat message_priv.txt
echo ""done\n""
</code></pre>

<p>This script outputs the following:</p>

<pre><code>Creating message file
---------------------
done

Creating asymmetric key pair
----------------------------
Generating RSA private key, 1024 bit long modulus
...........++++++
....++++++
e is 65537 (0x10001)
writing RSA key
done

Public key encrypts and private key decrypts
--------------------------------------------
00000000: 31c0 f70d 7ed2 088d 9675 801c fb9b 4f95  1...~....u....O.
00000010: c936 8cd0 0cc4 9159 33c4 9625 d752 5b77  .6.....Y3..%.R[w
00000020: 5bfc 988d 19fe d790 b633 191f 50cf 1bf7  [........3..P...
00000030: 34c0 7788 efa2 4967 848f 99e2 a442 91b9  4.w...Ig.....B..
00000040: 5fc7 6c79 40ea d0bc 6cd4 3c9a 488e 9913  _.ly@...l.&lt;.H...
00000050: 387f f7d6 b8e6 5eba 0771 371c c4f0 8c7f  8.....^..q7.....
00000060: 8c87 39a9 0c4c 22ab 13ed c117 c718 92e6  ..9..L"".........
00000070: 3d5b 8534 7187 cc2d 2f94 0743 1fcb d890  =[.4q..-/..C....
My secret message
done

Private key encrypts and public key decrypts
--------------------------------------------
00000000: 6955 cdd0 66e4 3696 76e1 a328 ac67 4ca3  iU..f.6.v..(.gL.
00000010: d6bb 5896 b6fe 68f1 55f1 437a 831c fee9  ..X...h.U.Cz....
00000020: 133a a7e9 005b 3fc5 88f7 5210 cdbb 2cba  .:...[?...R...,.
00000030: 29f1 d52d 3131 a88b 78e5 333e 90cf 3531  )..-11..x.3&gt;..51
00000040: 08c3 3df8 b76e 41f2 a84a c7fb 0c5b c3b2  ..=..nA..J...[..
00000050: 9d3b ed4a b6ad 89bc 9ebc 9154 da48 6f2d  .;.J.......T.Ho-
00000060: 5d8e b686 635f b6a4 8774 a621 5558 7172  ]...c_...t.!UXqr
00000070: fbd3 0c35 df0f 6a16 aa84 f5da 5d5e 5336  ...5..j.....]^S6
My secret message
done
</code></pre>
","59332","<digital-signature><public-key-encryption><private-key><public-key><pki>","139","57","4","2019-07-18 08:06:18","","2","57","63550","","2018-08-10 23:12:20","2013-08-15 16:29:20",""
"18257185","How does a public key verify a signature?","<p>I am trying to get a better grapple on how public/private keys work. I understand that a sender may add a digital signature to a document using his/her private key to essentially obtain a hash of the document, but what I do not understand is how the public key can be used to verify that signature. </p>

<p>My understanding was that public keys encrypt, private keys decrypt... can anyone help me understand? </p>
","<p>Thought I'd provide a supplemental explanation for anyone looking for something more intuitively revealing.</p>

<p>A big part of this confusion arises from naming 'public keys' and 'private keys' as such because how these things actually work is directly at odds with how a 'key' is understood to be.</p>

<p>Take encryption for example. It could be thought of as working like so:</p>

<ul>
<li>The parties that want to be able to read the secret messages each keep a key
hidden (i.e. a private key)</li>
<li>The parties that want to be able to send secret messages all have the ability to obtain an unlocked locked (i.e. a public lock)</li>
<li>Then sending a secret message is as easy as locking it with an unlocked lock, but unlocking it afterwards can only be done with one of the hidden keys.</li>
</ul>

<p>This allows secret messages to be sent between parties, but from an intuitive standpoint here, 'public lock' is a more suitable name than 'public key'.</p>

<p>However, for sending digital signatures the roles are somewhat reversed:</p>

<ul>
<li>The party that wants to sign messages is the only one with access to the unlocked locks (i.e. a private lock)</li>
<li>The parties that want to verify the signature all have the ability to obtain a key (i.e. a public key)</li>
<li>Then what the signer does is create two identical messages: the one that anyone can read and one to accompany it, but which they lock with one of their private locks.</li>
<li><p>Then when the receiver gets the message, they can read it, and then use the public key to unlock the locked message and compare the two messages. If the messages are the same, then they know that:</p>

<ol>
<li><p>The unlocked message wasn't tampered with during travel and,</p></li>
<li><p>The message must have been from the person who has the matching lock to their public key.</p></li>
</ol></li>
<li><p>And finally, this entire system only works if anyone who wants to validate a signer's signature has an authoritative place to go to to get the matching key to the signer's locks. Otherwise, anyone can say ""Hey, here's the key to so-and-so's private lock"", send you a message pretending to be them but lock it with their private lock, you perform all the above steps and believe the message must actually be from the person you thought, but you're fooled because you were mislead as to the true owner of a public key.</p></li>
</ul>

<p>So long as there's a trust-worthy source for retrieving a signer's public key, you'll know who the rightful owner of a public key is, and will be able to validate their signature.</p>
","59332","<digital-signature><public-key-encryption><private-key><public-key><pki>","139","3","4","2019-07-18 08:06:18","","2","57","63550","","2018-08-10 23:12:20","2013-08-15 16:29:20",""
"18257185","How does a public key verify a signature?","<p>I am trying to get a better grapple on how public/private keys work. I understand that a sender may add a digital signature to a document using his/her private key to essentially obtain a hash of the document, but what I do not understand is how the public key can be used to verify that signature. </p>

<p>My understanding was that public keys encrypt, private keys decrypt... can anyone help me understand? </p>
","<p>The public key encrypts and only the private key can decrypt it, and the reverse is true. They both encrypt to different hashes but each key can decrypt the other's encryption. </p>

<p>There are a few different ways to verify that a message came from some expected sender. For example:</p>

<p>The sender sends:</p>

<ol>
<li><p>The message</p></li>
<li><p>The hash of the message encrypted with their private key</p></li>
</ol>

<p>The receiver:</p>

<ol start=""3"">
<li>Decrypts the signature (2) with the public key to obtain a message, supposedly the same message as (1) but we don't know yet. We now have two messages that we need to verify are identical. So to do this, we will encrypt them both with our public key and compare the two hashes. So we will ....</li>
<li>Encrypt the original message (1) with the public key to obtain a hash</li>
<li>Encrypt the decrypted message (3) to get a second hash and compare to (4) to verify that they are identical. </li>
</ol>

<p>If they aren't identical it means either the message was tampered with or it was signed with some other key and not the one we thought...</p>

<p>Another example would be for the sender to use a common hash that the receiver might know to use as well. For example:</p>

<p>The sender sends:</p>

<ol>
<li>A message </li>
<li>Takes a known hash of the message, then encrypts the hash with the private key</li>
</ol>

<p>The receiver:</p>

<ol start=""3"">
<li>Decrypts (2) and gets a hash value</li>
<li>Hashes the message (1) with the same hash used by the sender</li>
<li>Compares the two hashes to make sure they match</li>
</ol>

<p>This again ensures the message wasn't tampered with and it is from the expected sender. </p>
","59332","<digital-signature><public-key-encryption><private-key><public-key><pki>","139","9","4","2019-07-18 08:06:18","","2","57","63550","","2018-08-10 23:12:20","2013-08-15 16:29:20",""
"16480846","X.509: Private / Public Key","<p>We're trying to implement some functionality of a Web-Service from one of our partners. Now, the content which is beeing transmitted, should be encrypted with a public key, which we have to provide.</p>

<p>The security-specification says that the public-certificate has to be X.509 standard. Doesn't X.509 rely on the private / public key method? Because I only get one .pem file, containing a private key, and a certificate, but no public key, using the following command:</p>

<pre><code>openssl req -new -x509 -days 365 -nodes -out ./cert.pem -keyout ./cert.pem
</code></pre>

<p>Do I have to modify the command in order to create a private and a public key?</p>
","<p>Public key is stored inside of x.509 certificate.
Certificate binds identity information (common name, address, whatever else) to this public key.</p>
","59142","<openssl><x509><private-key><public-key>","29","12","3","2016-09-07 02:34:01","16481636","0","14","1340599","","2013-05-10 11:45:28","2013-05-10 11:03:56",""
"16480846","X.509: Private / Public Key","<p>We're trying to implement some functionality of a Web-Service from one of our partners. Now, the content which is beeing transmitted, should be encrypted with a public key, which we have to provide.</p>

<p>The security-specification says that the public-certificate has to be X.509 standard. Doesn't X.509 rely on the private / public key method? Because I only get one .pem file, containing a private key, and a certificate, but no public key, using the following command:</p>

<pre><code>openssl req -new -x509 -days 365 -nodes -out ./cert.pem -keyout ./cert.pem
</code></pre>

<p>Do I have to modify the command in order to create a private and a public key?</p>
","<p>The basics command line steps to generate a private and public key using OpenSSL are as follow</p>

<pre><code>openssl genrsa -out private.key 1024
openssl req -new -x509 -key private.key -out publickey.cer -days 365
openssl pkcs12 -export -out public_privatekey.pfx -inkey private.key -in publickey.cer
</code></pre>

<p>Step 1 – generates a private key</p>

<p>Step 2 – creates a X509 certificate (.cer file) containing your public key which you upload when registering your private application (or upgrading to a partner application).</p>

<p>Step 3 – Export your x509 certificate and private key to a pfx file. If your chosen wrapper library uses the .pem file to sign requests then this step is not required.</p>

<p>Hope that helps! <a href=""https://serverfault.com/a/9717/179158"">This answer explains</a> the different file extensions. </p>
","59142","<openssl><x509><private-key><public-key>","29","82","3","2016-09-07 02:34:01","16481636","0","14","1340599","","2013-05-10 11:45:28","2013-05-10 11:03:56",""
"16480846","X.509: Private / Public Key","<p>We're trying to implement some functionality of a Web-Service from one of our partners. Now, the content which is beeing transmitted, should be encrypted with a public key, which we have to provide.</p>

<p>The security-specification says that the public-certificate has to be X.509 standard. Doesn't X.509 rely on the private / public key method? Because I only get one .pem file, containing a private key, and a certificate, but no public key, using the following command:</p>

<pre><code>openssl req -new -x509 -days 365 -nodes -out ./cert.pem -keyout ./cert.pem
</code></pre>

<p>Do I have to modify the command in order to create a private and a public key?</p>
","<p>Create a private-public key pair. </p>

<pre><code>openssl req -x509 -newkey rsa:2048 -keyout private.key -out public.cert -days 365
</code></pre>

<p>Optionally, combine the pair into a single file.</p>

<pre><code>openssl pkcs12 -export -inkey private.key -in public.cert -out certificate.pfx
</code></pre>

<p>This results in the following files. </p>

<pre><code>private.key
certificate.pfx
public.cert
</code></pre>

<p>See also</p>

<ul>
<li><a href=""https://www.openssl.org/docs/manmaster/apps/req.html"" rel=""nofollow noreferrer"">https://www.openssl.org/docs/manmaster/apps/req.html</a></li>
<li><a href=""https://www.openssl.org/docs/manmaster/apps/pkcs12.html"" rel=""nofollow noreferrer"">https://www.openssl.org/docs/manmaster/apps/pkcs12.html</a></li>
<li><a href=""https://serverfault.com/questions/9708/what-is-a-pem-file-and-how-does-it-differ-from-other-openssl-generated-key-file"">https://serverfault.com/questions/9708/what-is-a-pem-file-and-how-does-it-differ-from-other-openssl-generated-key-file</a></li>
</ul>
","59142","<openssl><x509><private-key><public-key>","29","3","3","2016-09-07 02:34:01","16481636","0","14","1340599","","2013-05-10 11:45:28","2013-05-10 11:03:56",""
"5323778","Setting a custom path for git private SSH key on linux","<p>I'm trying to setup a git client on linux. I uploaded my private key to the machine, and I understand that I should put it in ~/.ssh, but I don't have access to that folder.</p>

<p>How can I tell git to look for the private key somewhere else?</p>
","<p>One option is to use <code>ssh-agent</code> and provide a file name to <code>ssh-add</code>.</p>

<p>For example:</p>

<pre><code>$ ssh-agent /bin/bash
$ ssh-add ~/mykeys/id_rsa
</code></pre>
","55622","<git><ssh><private-key>","31","42","5","2016-07-14 21:41:55","5323884","0","15","600500","","2011-03-16 11:21:23","2011-03-16 10:13:46",""
"5323778","Setting a custom path for git private SSH key on linux","<p>I'm trying to setup a git client on linux. I uploaded my private key to the machine, and I understand that I should put it in ~/.ssh, but I don't have access to that folder.</p>

<p>How can I tell git to look for the private key somewhere else?</p>
","<p>I would have said <strong>put the file name in <code>~/.ssh/config</code></strong>, but you likely would not have access to this file, too.</p>

<p>You can give <code>ssh</code> the private key to use with the <code>-i keyfile</code> option.</p>

<p>Now how to say git which options to pass to ssh?</p>

<p>The <a href=""https://git.wiki.kernel.org/index.php/GitTips#How_to_pass_ssh_options_in_git.3F"" rel=""nofollow noreferrer"">GitTips page</a> says create a wrapper script and point to it with the <code>GIT_SSH</code> environment variable.</p>

<p>It looks like you also can use the git configuration <code>core.gitProxy</code>, but I did not find a good example and <a href=""http://lists-archives.com/git/626090-core-gitproxy-and-non-git-protocols.html"" rel=""nofollow noreferrer"">some mailing list message</a> suggests it is only for the <code>git:</code> protocol.</p>
","55622","<git><ssh><private-key>","31","11","5","2016-07-14 21:41:55","5323884","0","15","600500","","2011-03-16 11:21:23","2011-03-16 10:13:46",""
"5323778","Setting a custom path for git private SSH key on linux","<p>I'm trying to setup a git client on linux. I uploaded my private key to the machine, and I understand that I should put it in ~/.ssh, but I don't have access to that folder.</p>

<p>How can I tell git to look for the private key somewhere else?</p>
","<p>You can achieve that using a <a href=""http://unixhelp.ed.ac.uk/CGI/man-cgi?ssh_config%205"" rel=""noreferrer"">ssh config file</a>.</p>

<p>First create a file inside your <code>~/.ssh</code> folder named <code>config</code>, you can use some command like the following</p>

<pre><code>$ nano ~/.ssh/config
</code></pre>

<p>Then, the content of the file should have the location of your key based on each host name. for example:</p>

<pre><code>Host github.com
 IdentityFile ~/myPublicKeyFolder/myGitHubFile
Host heroku.com
 IdentityFile ~/myPublicKeyFolder/myHerokuFile
</code></pre>

<p>So, when git tries to access each host it will follow the rules inside this config file based on the git host your trying to reach</p>
","55622","<git><ssh><private-key>","31","46","5","2016-07-14 21:41:55","5323884","0","15","600500","","2011-03-16 11:21:23","2011-03-16 10:13:46",""
"5323778","Setting a custom path for git private SSH key on linux","<p>I'm trying to setup a git client on linux. I uploaded my private key to the machine, and I understand that I should put it in ~/.ssh, but I don't have access to that folder.</p>

<p>How can I tell git to look for the private key somewhere else?</p>
","<p>For a project I am working on my app needs to spit out a shell script with all of the git commands to init/commit/push to an external repository. The ~/.ssh/config is off limits so I have my public/private keys in my app directory. I used vhallac's answer. This is what I had to do in my shell script to use my key:</p>

<pre><code>eval `/usr/bin/ssh-agent`
ssh-add /path/to/.ssh/id_rsa
</code></pre>

<p>hope this helps someone</p>
","55622","<git><ssh><private-key>","31","1","5","2016-07-14 21:41:55","5323884","0","15","600500","","2011-03-16 11:21:23","2011-03-16 10:13:46",""
"5323778","Setting a custom path for git private SSH key on linux","<p>I'm trying to setup a git client on linux. I uploaded my private key to the machine, and I understand that I should put it in ~/.ssh, but I don't have access to that folder.</p>

<p>How can I tell git to look for the private key somewhere else?</p>
","<p>Use ssh-agent</p>

<pre><code>ssh-agent bash -c 'ssh-add /home/me/my_private_key; git clone git@bitbucket.org:uname/test-git-repo.git'
</code></pre>
","55622","<git><ssh><private-key>","31","4","5","2016-07-14 21:41:55","5323884","0","15","600500","","2011-03-16 11:21:23","2011-03-16 10:13:46",""
"8194338","iPhone developer doesn't match any valid certificate (Xcode)","<p>Hi I've kind of been cornered by apple here, I submitted a technical support query, one of the free ones thats comes free when you pay into the developer program only to be told that they won't be in the office until after Thanksgiving, a problem I overlooked as I am from Ireland. I really need help on this as I've tried looking in forums and I've tried solutions that were given for similar problems but I still can't crack it.</p>

<p>The screenshot images can be seen on this page..
<a href=""http://www.heffernanwebservices.ie/blank.html"" rel=""nofollow noreferrer"">http://www.heffernanwebservices.ie/blank.html</a></p>

<p>Here it goes...</p>

<p>DESCRIPTION OF PROBLEM On trying to build my project ""Mulligan IRL"" in xcode i get the following error "" Code Sign error: The identity 'iPhone Developer: Cian Heffernan (8ELM27DL8F)' doesn't match any valid certificate/private key pair in the default keychain""</p>

<p>[Screenshot 1]</p>

<p>When I navigate to code signing in the build settings of the project i can see that when I click code signing identity for iphone developer or iphone distribution it has ""(no profiles currently match) beside them. I then headed to the keychain access window in utilities and look in certificates and find that both the developer and distribution certificates will not expire until next August and November. Next I headed to the organizer in xcode. I see in provisioning profiles I have 8 profiles there! I don't know why I have so many.(2nd attachment)</p>

<p>[Screenshot 2]</p>

<p>As you can see ONE of the iOS team provisioning profiles will expire in 11days so I just tried to renew that. When I try this I get an error:(3rd attachment)</p>

<p>[Screenshot 3]</p>

<p>I then head to the provisioning portal to see why it wasn't found but I can see the profile. (4th attachment)</p>

<p>[Screenshot 4]</p>

<p>I have no idea why I am getting this error. I would appreciate any help on the matter.</p>
","<p>This could be caused by not having the private key associated with your certificate in your keychain. You can verify this by going to Keychain Access and choosing ""Certificates"" from the ""Category"" area at the bottom left. If your developer certificate does not appear when filtering that way, you are missing the private key for it. </p>

<p>If this is the case, you'll have to add your private key to the keychain, or else just reject and re-issue your development certificate with a new private key (you can find steps for this in the provisioning portal.)</p>
","49345","<iphone><xcode><certificate><private-key>","15","7","5","2018-06-29 20:28:29","","0","6","8276474","","2018-06-29 20:28:29","2011-11-19 13:26:33",""
"8194338","iPhone developer doesn't match any valid certificate (Xcode)","<p>Hi I've kind of been cornered by apple here, I submitted a technical support query, one of the free ones thats comes free when you pay into the developer program only to be told that they won't be in the office until after Thanksgiving, a problem I overlooked as I am from Ireland. I really need help on this as I've tried looking in forums and I've tried solutions that were given for similar problems but I still can't crack it.</p>

<p>The screenshot images can be seen on this page..
<a href=""http://www.heffernanwebservices.ie/blank.html"" rel=""nofollow noreferrer"">http://www.heffernanwebservices.ie/blank.html</a></p>

<p>Here it goes...</p>

<p>DESCRIPTION OF PROBLEM On trying to build my project ""Mulligan IRL"" in xcode i get the following error "" Code Sign error: The identity 'iPhone Developer: Cian Heffernan (8ELM27DL8F)' doesn't match any valid certificate/private key pair in the default keychain""</p>

<p>[Screenshot 1]</p>

<p>When I navigate to code signing in the build settings of the project i can see that when I click code signing identity for iphone developer or iphone distribution it has ""(no profiles currently match) beside them. I then headed to the keychain access window in utilities and look in certificates and find that both the developer and distribution certificates will not expire until next August and November. Next I headed to the organizer in xcode. I see in provisioning profiles I have 8 profiles there! I don't know why I have so many.(2nd attachment)</p>

<p>[Screenshot 2]</p>

<p>As you can see ONE of the iOS team provisioning profiles will expire in 11days so I just tried to renew that. When I try this I get an error:(3rd attachment)</p>

<p>[Screenshot 3]</p>

<p>I then head to the provisioning portal to see why it wasn't found but I can see the profile. (4th attachment)</p>

<p>[Screenshot 4]</p>

<p>I have no idea why I am getting this error. I would appreciate any help on the matter.</p>
","<p>a useful link from <a href=""https://developer.apple.com/library/ios/#technotes/tn2250/_index.html#//apple_ref/doc/uid/DTS40009933-CH1-TNTAG6"" rel=""nofollow"">Apple</a> about the submission process. hope it helps</p>
","49345","<iphone><xcode><certificate><private-key>","15","0","5","2018-06-29 20:28:29","","0","6","8276474","","2018-06-29 20:28:29","2011-11-19 13:26:33",""
"8194338","iPhone developer doesn't match any valid certificate (Xcode)","<p>Hi I've kind of been cornered by apple here, I submitted a technical support query, one of the free ones thats comes free when you pay into the developer program only to be told that they won't be in the office until after Thanksgiving, a problem I overlooked as I am from Ireland. I really need help on this as I've tried looking in forums and I've tried solutions that were given for similar problems but I still can't crack it.</p>

<p>The screenshot images can be seen on this page..
<a href=""http://www.heffernanwebservices.ie/blank.html"" rel=""nofollow noreferrer"">http://www.heffernanwebservices.ie/blank.html</a></p>

<p>Here it goes...</p>

<p>DESCRIPTION OF PROBLEM On trying to build my project ""Mulligan IRL"" in xcode i get the following error "" Code Sign error: The identity 'iPhone Developer: Cian Heffernan (8ELM27DL8F)' doesn't match any valid certificate/private key pair in the default keychain""</p>

<p>[Screenshot 1]</p>

<p>When I navigate to code signing in the build settings of the project i can see that when I click code signing identity for iphone developer or iphone distribution it has ""(no profiles currently match) beside them. I then headed to the keychain access window in utilities and look in certificates and find that both the developer and distribution certificates will not expire until next August and November. Next I headed to the organizer in xcode. I see in provisioning profiles I have 8 profiles there! I don't know why I have so many.(2nd attachment)</p>

<p>[Screenshot 2]</p>

<p>As you can see ONE of the iOS team provisioning profiles will expire in 11days so I just tried to renew that. When I try this I get an error:(3rd attachment)</p>

<p>[Screenshot 3]</p>

<p>I then head to the provisioning portal to see why it wasn't found but I can see the profile. (4th attachment)</p>

<p>[Screenshot 4]</p>

<p>I have no idea why I am getting this error. I would appreciate any help on the matter.</p>
","<p>For certificate to be valid it needs to be associated in your Keychain with a private key. Find the ""iPhone Developer..."" certificate in your Keychain and see if it's got a private key associated with it. </p>

<p>This can occur when you develop on two or more computers. You need to export the certificate+private key pair from the computer where you generated the private key first. Then import it onto all computers you do development on. </p>

<p>See Apple's <a href=""https://developer.apple.com/legacy/library/technotes/tn2250/_index.html#//apple_ref/doc/uid/DTS40009933-CH1-TNTAG24"" rel=""nofollow noreferrer"">Transferring Your Identities</a> for more detailed info.</p>
","49345","<iphone><xcode><certificate><private-key>","15","14","5","2018-06-29 20:28:29","","0","6","8276474","","2018-06-29 20:28:29","2011-11-19 13:26:33",""
"8194338","iPhone developer doesn't match any valid certificate (Xcode)","<p>Hi I've kind of been cornered by apple here, I submitted a technical support query, one of the free ones thats comes free when you pay into the developer program only to be told that they won't be in the office until after Thanksgiving, a problem I overlooked as I am from Ireland. I really need help on this as I've tried looking in forums and I've tried solutions that were given for similar problems but I still can't crack it.</p>

<p>The screenshot images can be seen on this page..
<a href=""http://www.heffernanwebservices.ie/blank.html"" rel=""nofollow noreferrer"">http://www.heffernanwebservices.ie/blank.html</a></p>

<p>Here it goes...</p>

<p>DESCRIPTION OF PROBLEM On trying to build my project ""Mulligan IRL"" in xcode i get the following error "" Code Sign error: The identity 'iPhone Developer: Cian Heffernan (8ELM27DL8F)' doesn't match any valid certificate/private key pair in the default keychain""</p>

<p>[Screenshot 1]</p>

<p>When I navigate to code signing in the build settings of the project i can see that when I click code signing identity for iphone developer or iphone distribution it has ""(no profiles currently match) beside them. I then headed to the keychain access window in utilities and look in certificates and find that both the developer and distribution certificates will not expire until next August and November. Next I headed to the organizer in xcode. I see in provisioning profiles I have 8 profiles there! I don't know why I have so many.(2nd attachment)</p>

<p>[Screenshot 2]</p>

<p>As you can see ONE of the iOS team provisioning profiles will expire in 11days so I just tried to renew that. When I try this I get an error:(3rd attachment)</p>

<p>[Screenshot 3]</p>

<p>I then head to the provisioning portal to see why it wasn't found but I can see the profile. (4th attachment)</p>

<p>[Screenshot 4]</p>

<p>I have no idea why I am getting this error. I would appreciate any help on the matter.</p>
","<p>I was using AppCode, but for me simply adding a new Keychain via Keychain Access called <strong>iPhone Developer</strong> allowed me to start building in AppCode.</p>
","49345","<iphone><xcode><certificate><private-key>","15","0","5","2018-06-29 20:28:29","","0","6","8276474","","2018-06-29 20:28:29","2011-11-19 13:26:33",""
"8194338","iPhone developer doesn't match any valid certificate (Xcode)","<p>Hi I've kind of been cornered by apple here, I submitted a technical support query, one of the free ones thats comes free when you pay into the developer program only to be told that they won't be in the office until after Thanksgiving, a problem I overlooked as I am from Ireland. I really need help on this as I've tried looking in forums and I've tried solutions that were given for similar problems but I still can't crack it.</p>

<p>The screenshot images can be seen on this page..
<a href=""http://www.heffernanwebservices.ie/blank.html"" rel=""nofollow noreferrer"">http://www.heffernanwebservices.ie/blank.html</a></p>

<p>Here it goes...</p>

<p>DESCRIPTION OF PROBLEM On trying to build my project ""Mulligan IRL"" in xcode i get the following error "" Code Sign error: The identity 'iPhone Developer: Cian Heffernan (8ELM27DL8F)' doesn't match any valid certificate/private key pair in the default keychain""</p>

<p>[Screenshot 1]</p>

<p>When I navigate to code signing in the build settings of the project i can see that when I click code signing identity for iphone developer or iphone distribution it has ""(no profiles currently match) beside them. I then headed to the keychain access window in utilities and look in certificates and find that both the developer and distribution certificates will not expire until next August and November. Next I headed to the organizer in xcode. I see in provisioning profiles I have 8 profiles there! I don't know why I have so many.(2nd attachment)</p>

<p>[Screenshot 2]</p>

<p>As you can see ONE of the iOS team provisioning profiles will expire in 11days so I just tried to renew that. When I try this I get an error:(3rd attachment)</p>

<p>[Screenshot 3]</p>

<p>I then head to the provisioning portal to see why it wasn't found but I can see the profile. (4th attachment)</p>

<p>[Screenshot 4]</p>

<p>I have no idea why I am getting this error. I would appreciate any help on the matter.</p>
","<p>Apple has a great article regarding Certificates and Provisioning-Profiles,<br>
with excellent troubleshooting:  </p>

<p><strong><a href=""https://developer.apple.com/library/ios/#technotes/tn2250/_index.html"" rel=""nofollow"">iOS Code Signing Troubleshooting</a></strong></p>

<p>The most useful part I found was regarding cleanup of old provisioning-profiles from Xcode:  </p>

<p>""<strong><a href=""https://developer.apple.com/library/ios/technotes/tn2250/_index.html#//apple_ref/doc/uid/DTS40009933-CH1-TNTAG15"" rel=""nofollow"">Keep Your Profile Library Clean</a></strong><br>
<em>...You need to <strong>manually remove provisioning profiles you are not using</strong>,<br>
otherwise, Xcode will reimport potentially old or duplicate certificates into the keychain<br>
and that can cause build errors.</em>""</p>

<p>And as a weapon of last resort, you can use this procedure:<br>
<strong><a href=""https://developer.apple.com/library/ios/technotes/tn2250/_index.html#//apple_ref/doc/uid/DTS40009933-CH1-TNTAG6"" rel=""nofollow"">How do I delete/revoke my certificates and start over fresh?</a></strong>  </p>
","49345","<iphone><xcode><certificate><private-key>","15","0","5","2018-06-29 20:28:29","","0","6","8276474","","2018-06-29 20:28:29","2011-11-19 13:26:33",""
"9380403","What does ""SSL_CTX_use_PrivateKey_file"" ""problems getting password error"" indicate in Nginx error log?","<p>I'm trying to set up SSL on Nginx. It doesn't work, and I am getting the following error in the error log, which is getting passed up from the OpenSSL library which nginx was compiled with. I don't know what that library is, but it's version 0.8.54 of nginx, and I installed it using apt-get on Ubuntu Linux.</p>

<pre><code>2012/02/21 07:06:33 [emerg] 4071#0: 
SSL_CTX_use_PrivateKey_file(""/exequias/certs/exequias.com.key"") failed (SSL: 
error:0906406D:PEM routines:PEM_def_callback:problems getting password error:
0906A068:PEM routines:PEM_do_header:bad password read error:140B0009:SSL routines:
SSL_CTX_use_PrivateKey_file:PEM lib)
</code></pre>

<p>I have ensured that the file permissions on the private key file are not stopping nginx from reading it. It is an RSA private key, generated with <code>openssl rsa</code>.</p>

<p>Any ideas what might be causing this?</p>
","<p>I got it... the private key file used with nginx must <em>not</em> have a passphrase. I removed the passphrase and it worked.</p>
","49096","<ssl><https><nginx><openssl><private-key>","35","20","4","2017-01-31 07:25:27","9380476","0","8","","","","2012-02-21 15:40:06",""
"9380403","What does ""SSL_CTX_use_PrivateKey_file"" ""problems getting password error"" indicate in Nginx error log?","<p>I'm trying to set up SSL on Nginx. It doesn't work, and I am getting the following error in the error log, which is getting passed up from the OpenSSL library which nginx was compiled with. I don't know what that library is, but it's version 0.8.54 of nginx, and I installed it using apt-get on Ubuntu Linux.</p>

<pre><code>2012/02/21 07:06:33 [emerg] 4071#0: 
SSL_CTX_use_PrivateKey_file(""/exequias/certs/exequias.com.key"") failed (SSL: 
error:0906406D:PEM routines:PEM_def_callback:problems getting password error:
0906A068:PEM routines:PEM_do_header:bad password read error:140B0009:SSL routines:
SSL_CTX_use_PrivateKey_file:PEM lib)
</code></pre>

<p>I have ensured that the file permissions on the private key file are not stopping nginx from reading it. It is an RSA private key, generated with <code>openssl rsa</code>.</p>

<p>Any ideas what might be causing this?</p>
","<p>Remove the key pass phrase:</p>

<pre><code>openssl rsa -in key.pem -out newkey.pem
</code></pre>

<p>If they certificate and key are together:</p>

<pre><code>openssl rsa -in mycert.pem -out newcert.pem
openssl x509 -in mycert.pem &gt;&gt;newcert.pem
</code></pre>

<p>Source: <a href=""http://www.madboa.com/geek/openssl/#key-removepass"" rel=""noreferrer"">http://www.madboa.com/geek/openssl/#key-removepass</a></p>
","49096","<ssl><https><nginx><openssl><private-key>","35","55","4","2017-01-31 07:25:27","9380476","0","8","","","","2012-02-21 15:40:06",""
"9380403","What does ""SSL_CTX_use_PrivateKey_file"" ""problems getting password error"" indicate in Nginx error log?","<p>I'm trying to set up SSL on Nginx. It doesn't work, and I am getting the following error in the error log, which is getting passed up from the OpenSSL library which nginx was compiled with. I don't know what that library is, but it's version 0.8.54 of nginx, and I installed it using apt-get on Ubuntu Linux.</p>

<pre><code>2012/02/21 07:06:33 [emerg] 4071#0: 
SSL_CTX_use_PrivateKey_file(""/exequias/certs/exequias.com.key"") failed (SSL: 
error:0906406D:PEM routines:PEM_def_callback:problems getting password error:
0906A068:PEM routines:PEM_do_header:bad password read error:140B0009:SSL routines:
SSL_CTX_use_PrivateKey_file:PEM lib)
</code></pre>

<p>I have ensured that the file permissions on the private key file are not stopping nginx from reading it. It is an RSA private key, generated with <code>openssl rsa</code>.</p>

<p>Any ideas what might be causing this?</p>
","<p>The question is a bit old now, and nginx actually supports passphrase asking at startup since at least version 1.2. But the issue is still relevant because this capability has been removed from debian in the latest release, version 8 with nginx 1.6. The reason is that passphrase input hasn't been implemented in the systemd script for nginx, while it has been for apache. Launching nginx manually simply works, and it's not too a problem since manual intervention is required anyway, there's no use of systemd here.</p>

<p>Reference: <a href=""https://forum.nginx.org/read.php?2,262900,262931#msg-262931"" rel=""nofollow"">https://forum.nginx.org/read.php?2,262900,262931#msg-262931</a></p>
","49096","<ssl><https><nginx><openssl><private-key>","35","2","4","2017-01-31 07:25:27","9380476","0","8","","","","2012-02-21 15:40:06",""
"9380403","What does ""SSL_CTX_use_PrivateKey_file"" ""problems getting password error"" indicate in Nginx error log?","<p>I'm trying to set up SSL on Nginx. It doesn't work, and I am getting the following error in the error log, which is getting passed up from the OpenSSL library which nginx was compiled with. I don't know what that library is, but it's version 0.8.54 of nginx, and I installed it using apt-get on Ubuntu Linux.</p>

<pre><code>2012/02/21 07:06:33 [emerg] 4071#0: 
SSL_CTX_use_PrivateKey_file(""/exequias/certs/exequias.com.key"") failed (SSL: 
error:0906406D:PEM routines:PEM_def_callback:problems getting password error:
0906A068:PEM routines:PEM_do_header:bad password read error:140B0009:SSL routines:
SSL_CTX_use_PrivateKey_file:PEM lib)
</code></pre>

<p>I have ensured that the file permissions on the private key file are not stopping nginx from reading it. It is an RSA private key, generated with <code>openssl rsa</code>.</p>

<p>Any ideas what might be causing this?</p>
","<p>Because you generate the .crt file with a passphrase, so you need to specify the same passphrase for your .key and .crt file in Nginx conf like this</p>

<pre><code>server {
    ssl_password_file /path-to-your-passphrase/ssl.pass;
}
</code></pre>

<p>See <a href=""http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_password_file"" rel=""noreferrer"">Nginx Doc</a></p>

<p>Or if you don't need the passphrase for your cert file, just use <code>ssh-keygen</code> tool to generate the file as following:</p>

<pre><code>ssh-keygen -t rsa
</code></pre>
","49096","<ssl><https><nginx><openssl><private-key>","35","12","4","2017-01-31 07:25:27","9380476","0","8","","","","2012-02-21 15:40:06",""
"16397858","How to extract private key from pfx file using openssl?","<p>I was looking for this private key to add ssl certificate in Softlayer's ""Add Certificate"" wizard and to use it further with Local Load Balancer.</p>

<p>I googled and tried following openssl command:</p>

<pre><code>openssl pkcs12 -in filename.pfx -nocerts -out key.pem
</code></pre>

<p>But I ended up with invalid ""RSA PRIVATE KEY"". Please help.</p>
","<p>Your command is correct, and gives you the <strong>encrypted</strong> private key in PKCS#8 format. If you need the <strong>unencrypted</strong> private key, just add the <code>-nodes</code> option:</p>

<pre><code>openssl pkcs12 -in filename.pfx -nocerts -nodes -out key.pem
</code></pre>

<p>If you need the private key in old RSA format, you should convert the given key with the <code>openssl pkcs8</code> command:</p>

<pre><code>openssl pkcs8 -in key.pem -out rsakey.pem
</code></pre>

<p>See the documentation for details:</p>

<ul>
<li><a href=""https://www.openssl.org/docs/man1.1.0/apps/pkcs12.html"" rel=""nofollow noreferrer"">https://www.openssl.org/docs/man1.1.0/apps/pkcs12.html</a></li>
<li><a href=""https://www.openssl.org/docs/man1.1.0/apps/pkcs8.html"" rel=""nofollow noreferrer"">https://www.openssl.org/docs/man1.1.0/apps/pkcs8.html</a></li>
</ul>
","46123","<openssl><private-key><pkcs#12>","26","34","1","2019-08-01 00:18:11","","0","5","2092587","","2013-05-06 11:50:14","2013-05-06 11:31:42",""
"27129904","Pageant refuses to load SSH-2 key generated with GitBash","<p>The implementation of key handling with (Tortoise)Git for Windows confuses me. As far as I understood, you can implement with either <code>ssh.exe</code> (gits own ssh program), where you can then choose an ssh key per host in your <code>ssh_config</code> in the 'faked' home dir. For me, that is not really applicable, because I have multiple Bitbucket accounts using different keys but all the same host.  </p>

<p>Then there is a way to use <code>TortoiseGitPlink</code>. You basically set up pageant with a putty generated key and let TortoiseGit use that one - with the environment variable <code>SSH_GIT</code> set to your TortoiseGitPlink.exe).  </p>

<p>Now my question is the following: I just created an ssh2 rsa key with default options using <code>ssh-keygen -t rsa -f ~/.ssh/rsa_key</code> command in GitBash. I tried loading this file into <code>pageant.exe</code> by using its GUI. I got the error: <code>Couldn't load this key (OpenSSH-SSH-2 private key)</code>.  </p>

<p>What is the problem with this key? Made in GitBash it should adhere all standard openSSH guidelines. Is it correct that there are differences in puTTY keys and openSSH keys?</p>
","<p>The Pageant can load keys in the PuTTY format (<code>.ppk</code>) only. </p>

<p>If you attempt to load a key in a different format, still recognized by PuTTY tools, you get the mentioned error message:</p>

<blockquote>
  <p>Couldn't load this key (OpenSSH-SSH-2 private key)</p>
</blockquote>

<p>You need to <a href=""https://the.earth.li/~sgtatham/putty/latest/htmldoc/Chapter8.html#pubkey-puttygen"" rel=""noreferrer"">use the PuTTYgen to convert the key</a> from the OpenSSH format to the PuTTY format. If the Pageant recognized the file format, the PuTTYgen can convert it.</p>

<ul>
<li>Run PuTTYgen;</li>
<li>Press <em>Load</em> to load the private key in OpenSSH format;</li>
<li>Press <em>Save private key</em> to save the private key in <code>.ppk</code> format;</li>
<li>Now you can load the private key in <code>.ppk</code> format to Pageant.</li>
</ul>

<hr>

<p>Or even easier, use the PuTTYgen to create the a key directly in the PuTTY format, instead of using the <code>ssh-keygen</code>.</p>

<hr>

<p>See the PuTTY wishlist for reasons it has its own key format:<br>
<a href=""https://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/key-formats.html"" rel=""noreferrer"">https://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/key-formats.html</a></p>

<p>Note that I believe there's no standard for SSH-2 private key file format.</p>
","41214","<git-bash><private-key><openssh><plink><pageant>","41","77","2","2018-11-15 13:59:38","27130400","0","13","850848","","2018-11-15 13:59:38","2014-11-25 14:56:32",""
"27129904","Pageant refuses to load SSH-2 key generated with GitBash","<p>The implementation of key handling with (Tortoise)Git for Windows confuses me. As far as I understood, you can implement with either <code>ssh.exe</code> (gits own ssh program), where you can then choose an ssh key per host in your <code>ssh_config</code> in the 'faked' home dir. For me, that is not really applicable, because I have multiple Bitbucket accounts using different keys but all the same host.  </p>

<p>Then there is a way to use <code>TortoiseGitPlink</code>. You basically set up pageant with a putty generated key and let TortoiseGit use that one - with the environment variable <code>SSH_GIT</code> set to your TortoiseGitPlink.exe).  </p>

<p>Now my question is the following: I just created an ssh2 rsa key with default options using <code>ssh-keygen -t rsa -f ~/.ssh/rsa_key</code> command in GitBash. I tried loading this file into <code>pageant.exe</code> by using its GUI. I got the error: <code>Couldn't load this key (OpenSSH-SSH-2 private key)</code>.  </p>

<p>What is the problem with this key? Made in GitBash it should adhere all standard openSSH guidelines. Is it correct that there are differences in puTTY keys and openSSH keys?</p>
","<p>PuTTY doesn't understand the id_rsa private key if it shows this error:
<a href=""https://i.stack.imgur.com/w95fV.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/w95fV.png"" alt=""enter image description here""></a></p>

<p>You need to convert the private key to a .ppk (private key format). </p>

<ol>
<li>Open PuTTY Key Generator (Start-> search 'puttygen')</li>
<li>You will need to import the RSA private key. To do so, open the 'Conversions' menu > 'Import key'.
<a href=""https://i.stack.imgur.com/8SszK.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/8SszK.png"" alt=""enter image description here""></a></li>
<li>Select the RSA private key to convert.
<a href=""https://i.stack.imgur.com/R7sCe.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/R7sCe.png"" alt=""enter image description here""></a></li>
<li>Click on ""Save private key"". Notice that you could also save it in another format.
<a href=""https://i.stack.imgur.com/0GQ1F.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/0GQ1F.png"" alt=""enter image description here""></a></li>
<li>Then save as 'id_rsa.ppk'
<a href=""https://i.stack.imgur.com/J6LsS.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/J6LsS.png"" alt=""enter image description here""></a></li>
<li>Open Pageant - PuTTY authentication agent (if not already open)
<a href=""https://i.stack.imgur.com/CqOVT.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/CqOVT.png"" alt=""enter image description here""></a></li>
<li>Click on ""Add Key""</li>
<li>Select your converveted private key.
<a href=""https://i.stack.imgur.com/vSntf.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/vSntf.png"" alt=""enter image description here""></a></li>
<li>As you can see, PuTTY recognise it now in the 'Pageant Key List'.
<a href=""https://i.stack.imgur.com/UpNzf.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/UpNzf.png"" alt=""enter image description here""></a></li>
</ol>
","41214","<git-bash><private-key><openssh><plink><pageant>","41","22","2","2018-11-15 13:59:38","27130400","0","13","850848","","2018-11-15 13:59:38","2014-11-25 14:56:32",""
"8454677","Create PrivateKey and PublicKey from a String base64 encoding with DER format","<p>I have my Private and Public keys in a String in base64 which where encoded using ANS1 DER. I tried creating the instance of a java <code>PrivateKey</code> and <code>PublicKey</code>: </p>

<pre><code>byte [] llave2 = DatatypeConverter.parseBase64Binary(key);
PKCS8Key pkcs8 = new PKCS8Key( llave2, password.toCharArray()); //line 2
llave2 = pkcs8.getDecryptedBytes();                             //line 3
certificado = DatatypeConverter.parseBase64Binary(cer);

KeyFactory kf = KeyFactory.getInstance(""RSA"");  
PKCS8EncodedKeySpec ks = new PKCS8EncodedKeySpec(llave2);
PrivateKey privateKey = kf.generatePrivate(ks);
X509EncodedKeySpec x = new X509EncodedKeySpec(certificado);
PublicKey publicKey = kf.generatePublic(x);
</code></pre>

<p>I get the following error in <code>PublicKey publicKey = kf.generatePublic(x)</code>. </p>

<pre><code>    java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException:     IOException: ObjectIdentifier() -- data isn't an object ID (tag = -96)
    at sun.security.rsa.RSAKeyFactory.engineGeneratePublic(Unknown Source)
    at java.security.KeyFactory.generatePublic(Unknown Source)
    at vital.cancelaciones.GeneraXMLCancelacion.main(GeneraXMLCancelacion.java:118)
Caused by: java.security.InvalidKeyException: IOException: ObjectIdentifier() -- data isn't an object ID (tag = -96)
    at sun.security.x509.X509Key.decode(Unknown Source)
    at sun.security.x509.X509Key.decode(Unknown Source)
    at sun.security.rsa.RSAPublicKeyImpl.&lt;init&gt;(Unknown Source)
    at sun.security.rsa.RSAKeyFactory.generatePublic(Unknown Source)
    ... 3 more
</code></pre>

<p>I guess I should do something similar with the public key as done with the private key in lines 2 and 3. Because the certificate is also encrypted. Any suggestions?</p>
","<p>To test your scenario, I've created an RSA private key with <code>openssl</code>.</p>

<pre><code>openssl genrsa -out private.pem 1024
</code></pre>

<p>Then I've converted this key to PKCS#8 DER format.</p>

<pre><code>openssl pkcs8 -topk8 -inform PEM -in private.pem -outform DER -out private.der -nocrypt
</code></pre>

<p>The manual of <code>openssl</code> refers to PKCS#8 and DER both as <em>formats</em>, so as far as I'm concerned the following happens:</p>

<ul>
<li><code>pkcs8</code> tells <code>openssl</code> that I want to work with private keys in PKCS#8 format.</li>
<li><code>-topk8</code> tells it that the private key I'm going to specify with <code>-in</code> is <em>not</em> in PKCS#8 (otherwise it'll assume it is).</li>
<li><code>-inform</code> and <code>-in</code> specify that I want to convert the (PEM) private key to PKCS#8 (without <code>-topk8</code> it'll try to convert a key already in PKCS#8 format to a <em>standard</em> key format).</li>
<li><code>-outform</code> and <code>-out</code> tells it I want a DER formatted key as output.</li>
<li><code>-nocrypt</code> tells it that I don't want to encrypt the key.</li>
</ul>

<p>Then, with my RSA key (in standard format) I've created a certificate.</p>

<pre><code>openssl req -new -x509 -keyform PEM -key private.pem -outform DER -out public.der
</code></pre>

<p>The certificate contains the public key corresponding to my private key.</p>

<p>After all of these, I've encoded both the private key and the certificate with Base64.</p>

<pre><code>base64 private.der &gt; private.der.b64
base64 public.der &gt; public.der.b64
</code></pre>

<p>The following files were generated.</p>

<pre><code>private.pem      # standard
private.der      # pkcs8/DER
private.der.b64 
public.der       # x509/DER
public.der.b64   
</code></pre>

<pre class=""lang-java prettyprint-override""><code>public static void main(String[] args) throws IOException, GeneralSecurityException {
  // get a handle on the base64 encoded key and certificate
  File privateKeyFile = new File(""private.der.b64"");
  File publicKeyFile = new File(""public.der.b64"");

  // pull them into arrays
  byte[] privateKeyBytes = toByteArray(privateKeyFile);
  byte[] publicKeyBytes = toByteArray(publicKeyFile);

  // decode them
  privateKeyBytes = toDecodedBase64ByteArray(privateKeyBytes);
  publicKeyBytes = toDecodedBase64ByteArray(publicKeyBytes);

  // get the private key
  KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
  KeySpec privateKeySpec = new PKCS8EncodedKeySpec(privateKeyBytes);
  PrivateKey privateKey = keyFactory.generatePrivate(privateKeySpec);

  // get the public key
  CertificateFactory certificateFactory = CertificateFactory.getInstance(""X509"");
  Certificate certificate = certificateFactory.generateCertificate(new ByteArrayInputStream(publicKeyBytes));
  PublicKey publicKey = certificate.getPublicKey();
}

private static byte[] toByteArray(File file) throws IOException {
  // java 7's try-with-resources statement
  try (FileInputStream in = new FileInputStream(file);
      FileChannel channel = in.getChannel()) {
    ByteArrayOutputStream out = new ByteArrayOutputStream();
    channel.transferTo(0, channel.size(), Channels.newChannel(out));
    return out.toByteArray();
  }
}

private static byte[] toDecodedBase64ByteArray(byte[] base64EncodedByteArray) {
  return DatatypeConverter.parseBase64Binary(
      new String(base64EncodedByteArray, Charset.forName(""UTF-8"")));
}
</code></pre>

<p>The main problem was that you had a certificate instead of a public key. The certificate contains the public key, but it cannot be loaded with <code>X509EncodedKeySpec(...)</code>, this is why the <code>CertificateFactory</code> has to be used instead.</p>

<p>(By the way <a href=""https://developers.google.com/google-apps/help/articles/sso-keygen"" rel=""noreferrer"">here</a> is a great article/tutorial on <code>openssl</code> and Java cryptography usage. I've got my info partly from there.)</p>
","38399","<java><encryption><private-key><der>","14","35","1","2015-05-28 15:38:08","8455164","0","6","1084509","","2011-12-10 16:22:36","2011-12-10 05:36:06",""
"39086265","How to find Private Key Location","<p>I'm trying to access a server using Filezilla and was told I needed to use authentication with public/private keys. I created the keys using the Terminal, but cannot find them on my computer. </p>

<p>This is where the key is located: 
(/Users/ed/.ssh/id_rsa)</p>

<p>I checked in my home directory, but the folder .ssh is nowhere to be found. Is there a secret place .ssh folder is stored and how can I access it? </p>

<p>My Mac runs on OS X ElCaptain. I would really appreciate any help. </p>
","<p>Files and folders starting with a period (.ssh) are hidden by default. To find private/public key, run this commands:</p>

<pre><code>ls -a
</code></pre>

<p>In your case, run this commands to find the ssh keys:   </p>

<pre><code>cd ~/.ssh
</code></pre>

<p>then:  </p>

<pre><code>ls -a
</code></pre>

<p>Now you should see the keys like this:</p>

<pre><code>.       ..      id_rsa      id_rsa.pub
</code></pre>

<p>If the keys are not there then definitely you need to create the key by <code>ssh-keygen</code> command.</p>
","37003","<ssh><server><private-key><filezilla>","9","15","1","2018-08-02 13:16:34","39921620","3","3","","","","2016-08-22 18:23:10",""
"9755057","Converting Strings to encryption keys and vice versa java","<p>I'm currently working on a way to convert keys into strings and vice versa. It works for the public key conversions, and converts a private key into a String. For some reason the same code won't convert a String back into a private key, which I just can't figure out. </p>

<p>The converter code is:</p>

<pre><code>import java.security.KeyFactory;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.spec.X509EncodedKeySpec;
import sun.misc.BASE64Decoder;
import sun.misc.BASE64Encoder;

@SuppressWarnings(""restriction"")
public  class KeyConvert {


public static PublicKey stringToPublicKey(String s) {

    BASE64Decoder decoder = new BASE64Decoder();

    byte[] c = null;
    KeyFactory keyFact = null;
    PublicKey returnKey = null;

    try {
        c = decoder.decodeBuffer(s);
        keyFact = KeyFactory.getInstance(""DSA"", ""SUN"");
    } catch (Exception e) {
        System.out.println(""Error in Keygen"");
        e.printStackTrace();
    }


    X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(c);
    try {
        returnKey = keyFact.generatePublic(x509KeySpec);
    } catch (Exception e) {

        System.out.println(""Error in Keygen2"");
        e.printStackTrace();

    }

    return returnKey; 

}
public static PrivateKey stringToPrivateKey(String s) {

    BASE64Decoder decoder = new BASE64Decoder();
    byte[] c = null;
    KeyFactory keyFact = null;
    PrivateKey returnKey = null;

    try {

                    c = decoder.decodeBuffer(s);
        keyFact = KeyFactory.getInstance(""DSA"", ""SUN"");
    } catch (Exception e) {

        System.out.println(""Error in first try catch of stringToPrivateKey"");
        e.printStackTrace();
    }


    X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(c);
    try {   //the next line causes the crash
        returnKey = keyFact.generatePrivate(x509KeySpec);
    } catch (Exception e) {

        System.out.println(""Error in stringToPrivateKey"");
        e.printStackTrace();
    }

    return returnKey; 

}

public static String publicKeyToString(PublicKey p) {

    byte[] publicKeyBytes = p.getEncoded();
    BASE64Encoder encoder = new BASE64Encoder();
    return encoder.encode(publicKeyBytes);

}
public static String privateKeyToString(PrivateKey p) {

    byte[] privateKeyBytes = p.getEncoded();
    BASE64Encoder encoder = new BASE64Encoder();
    return encoder.encode(privateKeyBytes);
}
}
</code></pre>

<p>And the driver code I'm using is:</p>

<pre><code>import java.security.PrivateKey;
import java.security.PublicKey;

public class SQLServerTest {
public static void main(String[] args) throws Exception {


    ServerSQLManager s = new ServerSQLManager();
    ServerUser user = new ServerUser(""testUser"", ""pass123"");
    s.getKeys(user);


    PublicKey testKey = user.getPublicKey();
    System.out.println(testKey);
    PrivateKey testKey2 = user.getPrivateKey();
    System.out.println(testKey2);
}
}
</code></pre>

<p>When I run this, I get an inappropriate key specification, can anyone point me in the right direction with this? The console output is:</p>

<pre><code>Error in stringToPrivateKey


java.security.spec.InvalidKeySpecException: Inappropriate key specification
at sun.security.provider.DSAKeyFactory.engineGeneratePrivate(Unknown Source)
at java.security.KeyFactory.generatePrivate(Unknown Source)
at KeyConvert.stringToPrivateKey(KeyConvert.java:61)
at ServerSQLManager.getKeys(ServerSQLManager.java:128)
at SQLServerTest.main(SQLServerTest.java:20)

Sun DSA Public Key
     Parameters:DSA
    p:     fd7f5381 1d751229 52df4a9c 2eece4e7 f611b752 3cef4400 c31e3f80 b6512669
    455d4022 51fb593d 8d58fabf c5f5ba30 f6cb9b55 6cd7813b 801d346f f26660b7
    6b9950a5 a49f9fe8 047b1022 c24fbba9 d7feb7c6 1bf83b57 e7c6a8a6 150f04fb
    83f6d3c5 1ec30235 54135a16 9132f675 f3ae2b61 d72aeff2 2203199d d14801c7
q:     9760508f 15230bcc b292b982 a2eb840b f0581cf5
g:     f7e1a085 d69b3dde cbbcab5c 36b857b9 7994afbb fa3aea82 f9574c0b 3d078267
    5159578e bad4594f e6710710 8180b449 167123e8 4c281613 b7cf0932 8cc8a6e1
    3c167a8b 547c8d28 e0a3ae1e 2bb3a675 916ea37f 0bfa2135 62f1fb62 7a01243b
    cca4f1be a8519089 a883dfe1 5ae59f06 928b665e 807b5525 64014c3b fecf492a

    y:
    5210e849 24d90208 56802887 dfaededf 78d3e6d0 d2e59a1c fb52dde8 96147784
    b2589365 2529414c 8265b61d c1fe6d98 cee0eea3 cce1e366 cd621ca7 41e3a94f
    9c15bfcb eb860d19 21efd574 79bb5b15 8159b1cb e3fc7f76 f85a6fc1 8d65afc6
    7c4fafda 503b01b5 99752ee4 2408ad80 1d983579 b00e2120 6d735874 ccaea1c0

null
</code></pre>

<p>I'm aware I shouldn't be using the sun.misc.* library, and we're looking into the Apache version, but would still like to figure this out (also it will never be production code)</p>

<p>Any advice appreciated.</p>
","<p>Public keys are stored using a X509EncodedKeySpec as you have, but Private keys use the PKCS8EncodedKeySpec. For example like this:</p>

<pre><code>public static PrivateKey loadPrivateKey(String key64) throws GeneralSecurityException {
    byte[] clear = base64Decode(key64);
    PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(clear);
    KeyFactory fact = KeyFactory.getInstance(""DSA"");
    PrivateKey priv = fact.generatePrivate(keySpec);
    Arrays.fill(clear, (byte) 0);
    return priv;
}


public static PublicKey loadPublicKey(String stored) throws GeneralSecurityException {
    byte[] data = base64Decode(stored);
    X509EncodedKeySpec spec = new X509EncodedKeySpec(data);
    KeyFactory fact = KeyFactory.getInstance(""DSA"");
    return fact.generatePublic(spec);
}

public static String savePrivateKey(PrivateKey priv) throws GeneralSecurityException {
    KeyFactory fact = KeyFactory.getInstance(""DSA"");
    PKCS8EncodedKeySpec spec = fact.getKeySpec(priv,
            PKCS8EncodedKeySpec.class);
    byte[] packed = spec.getEncoded();
    String key64 = base64Encode(packed);

    Arrays.fill(packed, (byte) 0);
    return key64;
}


public static String savePublicKey(PublicKey publ) throws GeneralSecurityException {
    KeyFactory fact = KeyFactory.getInstance(""DSA"");
    X509EncodedKeySpec spec = fact.getKeySpec(publ,
            X509EncodedKeySpec.class);
    return base64Encode(spec.getEncoded());
}


public static void main(String[] args) throws Exception {
    KeyPairGenerator gen = KeyPairGenerator.getInstance(""DSA"");
    KeyPair pair = gen.generateKeyPair();

    String pubKey = savePublicKey(pair.getPublic());
    PublicKey pubSaved = loadPublicKey(pubKey);
    System.out.println(pair.getPublic()+""\n""+pubSaved);

    String privKey = savePrivateKey(pair.getPrivate());
    PrivateKey privSaved = loadPrivateKey(privKey);
    System.out.println(pair.getPrivate()+""\n""+privSaved);
}
</code></pre>
","35719","<java><encryption><private-key><public-key>","24","55","1","2017-03-19 13:22:59","9755391","2","13","1816580","","2017-03-19 13:22:59","2012-03-18 00:41:53",""
"5127379","How to generate a RSA keyPair with a Privatekey encrypted with password?","<p>I want to generate a privatekey PKCS8 format encrypted with password, and I try with this code:</p>

<pre><code>String password = ""123456"";
KeyPairGenerator gen = KeyPairGenerator.getInstance(""RSA"");
gen.initialize(2048);
KeyPair key = gen.generateKeyPair();
PrivateKey privateKey = key.getPrivate();
PublicKey publicKey = key.getPublic();

FileOutputStream pvt = new FileOutputStream(""d:\\pvt123456.der"");
try {
    pvt.write(privateKey.getEncoded());
    pvt.flush();
} finally {
    pvt.close();
}
FileOutputStream pub = new FileOutputStream(""d:\\pub123456.der"");
try {
    pub.write(publicKey.getEncoded());
    pub.flush();
} finally {
    pub.close();
}
</code></pre>

<p>But I don´t know how to encrypt a password with 3des to be compatible with openssl format.</p>
","<p>I know it's a little bit late but I also have been looking for a way to do this and while i was searching I found your question, now that I have found a way to do this I decided to come back and share this:</p>

<pre><code>// generate key pair

KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance(""RSA"");
keyPairGenerator.initialize(1024);
KeyPair keyPair = keyPairGenerator.genKeyPair();

// extract the encoded private key, this is an unencrypted PKCS#8 private key
byte[] encodedprivkey = keyPair.getPrivate().getEncoded();

// We must use a PasswordBasedEncryption algorithm in order to encrypt the private key, you may use any common algorithm supported by openssl, you can check them in the openssl documentation http://www.openssl.org/docs/apps/pkcs8.html
String MYPBEALG = ""PBEWithSHA1AndDESede"";
String password = ""pleaseChangeit!"";

int count = 20;// hash iteration count
SecureRandom random = new SecureRandom();
byte[] salt = new byte[8];
random.nextBytes(salt);

// Create PBE parameter set
PBEParameterSpec pbeParamSpec = new PBEParameterSpec(salt, count);
PBEKeySpec pbeKeySpec = new PBEKeySpec(password.toCharArray());
SecretKeyFactory keyFac = SecretKeyFactory.getInstance(MYPBEALG);
SecretKey pbeKey = keyFac.generateSecret(pbeKeySpec);

Cipher pbeCipher = Cipher.getInstance(MYPBEALG);

// Initialize PBE Cipher with key and parameters
pbeCipher.init(Cipher.ENCRYPT_MODE, pbeKey, pbeParamSpec);

// Encrypt the encoded Private Key with the PBE key
byte[] ciphertext = pbeCipher.doFinal(encodedprivkey);

// Now construct  PKCS #8 EncryptedPrivateKeyInfo object
AlgorithmParameters algparms = AlgorithmParameters.getInstance(MYPBEALG);
algparms.init(pbeParamSpec);
EncryptedPrivateKeyInfo encinfo = new EncryptedPrivateKeyInfo(algparms, ciphertext);

// and here we have it! a DER encoded PKCS#8 encrypted key!
byte[] encryptedPkcs8 = encinfo.getEncoded();
</code></pre>

<p>This example code is based on the folowing code I found: <a href=""http://www.jensign.com/JavaScience/PEM/EncPrivKeyInfo/EncPrivKeyInfo.java"">http://www.jensign.com/JavaScience/PEM/EncPrivKeyInfo/EncPrivKeyInfo.java</a></p>

<p>but the folowing resource also helped me to understand a little bit better: <a href=""http://java.sun.com/j2se/1.4.2/docs/guide/security/jce/JCERefGuide.html"">http://java.sun.com/j2se/1.4.2/docs/guide/security/jce/JCERefGuide.html</a></p>
","35414","<java><openssl><bouncycastle><private-key>","13","32","1","2014-09-29 07:25:31","","0","18","390177","","2012-02-08 13:26:22","2011-02-26 14:17:20",""
"7224626","How to sign string with private key","<p>How can I get the signature of a string using <code>SHA1withRSA</code> if I already have the Private Key as <code>byte[]</code> or <code>String</code>?</p>
","<p>I guess what you say is you know the key pair before hand and want to sign/verify with that.</p>

<p>Please see the following code.</p>

<pre><code>import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.security.Signature;

import sun.misc.BASE64Encoder;

public class MainClass {
    public static void main(String[] args) throws Exception {

        KeyPair keyPair = getKeyPair();

        byte[] data = ""test"".getBytes(""UTF8"");

        Signature sig = Signature.getInstance(""SHA1WithRSA"");
        sig.initSign(keyPair.getPrivate());
        sig.update(data);
        byte[] signatureBytes = sig.sign();
        System.out.println(""Signature:"" + new BASE64Encoder().encode(signatureBytes));

        sig.initVerify(keyPair.getPublic());
        sig.update(data);

        System.out.println(sig.verify(signatureBytes));
    }

    private static KeyPair getKeyPair() throws NoSuchAlgorithmException {
        KeyPairGenerator kpg = KeyPairGenerator.getInstance(""RSA"");
        kpg.initialize(1024);
        return kpg.genKeyPair();
    }
}
</code></pre>

<p>Here you need to change the method getKeyPair() to supply your known key pair. You may load it from a java key store [JKS].</p>

<p>You can't just have an arbitrary byte array either as your public key or private key. They should be generated in relation.</p>
","34272","<java><digital-signature><private-key><sign><public-key>","17","46","4","2019-10-18 18:17:37","7224852","3","13","878514","","2016-07-22 22:23:38","2011-08-28 23:09:40",""
"7224626","How to sign string with private key","<p>How can I get the signature of a string using <code>SHA1withRSA</code> if I already have the Private Key as <code>byte[]</code> or <code>String</code>?</p>
","<p>You first must create a public key from array of bytes </p>

<pre><code>byte publicKeyBytes[] = .... your public key in bytes ... 
KeyFactory keyFactory = KeyFactory.getInstance(""RSA""); 
X509EncodedKeySpec publicKeySpec = new X509EncodedKeySpec(publicKeyBytes)); 
PublicKey publicKey = keyFactory.generatePublic(publicKeySpec);
</code></pre>

<p>and after using the publicKey to encrypt</p>

<pre><code>String data = ""... data to be encrypted ...."";
String alg = ""RSA/ECB/PKCS1Padding"";
Cipher cipher = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
cipher.init(Cipher.ENCRYPT_MODE, publicKey);
byte encryptedBytes[] = cipher.doFinal(data.getBytes());
</code></pre>

<p>Now only who have the privateKey can read your data</p>

<p>@rczajka: a publicKey is a key. You can use it to sign somethig that only the owner (that have the privateKey) can read.</p>
","34272","<java><digital-signature><private-key><sign><public-key>","17","-1","4","2019-10-18 18:17:37","7224852","3","13","878514","","2016-07-22 22:23:38","2011-08-28 23:09:40",""
"7224626","How to sign string with private key","<p>How can I get the signature of a string using <code>SHA1withRSA</code> if I already have the Private Key as <code>byte[]</code> or <code>String</code>?</p>
","<pre><code>public static String sign(String samlResponseString, String keystoreFile, String keyStorePassword, String privateKeyPassword, String alias)
            throws NoSuchAlgorithmException, UnsupportedEncodingException,
            InvalidKeyException, SignatureException {
        PrivateKey pkey=getPrivateKey(  keystoreFile,   keyStorePassword, privateKeyPassword,   alias);
        String signedString = null;
        Signature signature = Signature.getInstance(""SHA256withRSA"");
        signature.initSign(pkey);
        signature.update(samlResponseString.getBytes());
        byte[] signatureBytes = signature.sign();
        byte[] encryptedByteValue = Base64.encodeBase64(signatureBytes);
        signedString = new String(encryptedByteValue, ""UTF-8"");
        System.out.println(signedString);
        return signedString;
    }
</code></pre>
","34272","<java><digital-signature><private-key><sign><public-key>","17","-1","4","2019-10-18 18:17:37","7224852","3","13","878514","","2016-07-22 22:23:38","2011-08-28 23:09:40",""
"7224626","How to sign string with private key","<p>How can I get the signature of a string using <code>SHA1withRSA</code> if I already have the Private Key as <code>byte[]</code> or <code>String</code>?</p>
","<p>I use <a href=""https://artofcode.wordpress.com/2017/05/26/rsa-signatures-in-java-with-bouncy-castle/"" rel=""nofollow noreferrer"">bouncy-castle</a> to sign data and verify it.</p>

<p>you should add maven dependency: </p>

<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.bouncycastle&lt;/groupId&gt;
    &lt;artifactId&gt;bcprov-jdk15on&lt;/artifactId&gt;
    &lt;version&gt;1.56&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.bouncycastle&lt;/groupId&gt;
    &lt;artifactId&gt;bcpkix-jdk15on&lt;/artifactId&gt;
    &lt;version&gt;1.56&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

<p><strong>Load RSA private or public key from a disk file into a Java object</strong></p>

<p>First, we need to be able to load RSA private or public key from a disk file into a Java object of a proper class from Bouncy Castle</p>

<pre><code>import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import org.apache.commons.lang3.Validate;
import org.bouncycastle.asn1.pkcs.PrivateKeyInfo;
import org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;
import org.bouncycastle.crypto.params.AsymmetricKeyParameter;
import org.bouncycastle.crypto.util.PrivateKeyFactory;
import org.bouncycastle.crypto.util.PublicKeyFactory;
import org.bouncycastle.openssl.PEMKeyPair;
import org.bouncycastle.openssl.PEMParser;

public class KeyUtil {

    public static AsymmetricKeyParameter loadPublicKey(InputStream is) {
        SubjectPublicKeyInfo spki = (SubjectPublicKeyInfo) readPemObject(is);
        try {
            return PublicKeyFactory.createKey(spki);
        } catch (IOException ex) {
            throw new RuntimeException(""Cannot create public key object based on input data"", ex);
        }
    }

    public static AsymmetricKeyParameter loadPrivateKey(InputStream is) {
        PEMKeyPair keyPair = (PEMKeyPair) readPemObject(is);
        PrivateKeyInfo pki = keyPair.getPrivateKeyInfo();
        try {
            return PrivateKeyFactory.createKey(pki);
        } catch (IOException ex) {
            throw new RuntimeException(""Cannot create private key object based on input data"", ex);
        }
    }

    private static Object readPemObject(InputStream is) {
        try {
            Validate.notNull(is, ""Input data stream cannot be null"");
            InputStreamReader isr = new InputStreamReader(is, ""UTF-8"");
            PEMParser pemParser = new PEMParser(isr);

            Object obj = pemParser.readObject();
            if (obj == null) {
                throw new Exception(""No PEM object found"");
            }
            return obj;
        } catch (Throwable ex) {
            throw new RuntimeException(""Cannot read PEM object from input data"", ex);
        }
    }
}
</code></pre>

<hr>

<p><strong>Creation of an RSA digital signature</strong></p>

<pre><code>        // GIVEN: InputStream prvKeyInpStream
    AsymmetricKeyParameter privKey = KeyUtil.loadPrivateKey(prvKeyInpStream);

    // GIVEN: byte[] messageBytes = ...
    RSADigestSigner signer = new RSADigestSigner(new SHA512Digest());
    signer.init(true, privKey);
    signer.update(messageBytes, 0, messageBytes.length);

    try {
        byte[] signature = signer.generateSignature();
    } catch (Exception ex) {
        throw new RuntimeException(""Cannot generate RSA signature. "" + ex.getMessage(), ex);
    }
</code></pre>

<hr>

<p><strong>Verification of an RSA digital signature</strong></p>

<pre><code>// GIVEN: InputStream pubKeyInpStream
AsymmetricKeyParameter publKey = KeyUtil.loadPublicKey(pubKeyInpStream);

// GIVEN: byte[] messageBytes
RSADigestSigner signer = new RSADigestSigner(new SHA512Digest());
signer.init(false, publKey);
signer.update(messageBytes, 0, messageBytes.length);

// GIVEN: byte[] signature - see code sample above
boolean isValidSignature = signer.verifySignature(signature);
</code></pre>
","34272","<java><digital-signature><private-key><sign><public-key>","17","0","4","2019-10-18 18:17:37","7224852","3","13","878514","","2016-07-22 22:23:38","2011-08-28 23:09:40",""
"3240222","Get Private Key from BouncyCastle X509 Certificate? C#","<p>Normally when I grab an <code>X509Certificate2</code> out of my keystore I can call <code>.PrivateKey</code> to retrieve the cert's private key as an <code>AsymmetricAlgorithm</code>. However I have decided to use Bouncy Castle and its instance of <code>X509Certificate</code> only has a <code>getPublicKey();</code> I cannot see a way to get the private key out of the cert. Any ideas?</p>

<p>I get the an X509Certificate2 from my Windows-MY keystore then use:</p>

<pre><code>//mycert is an X509Certificate2 retrieved from Windows-MY Keystore
X509CertificateParser certParser = new X509CertificateParser();
X509Certificate privateCertBouncy = certParser.ReadCertificate(mycert.GetRawCertData());
AsymmetricKeyParameter pubKey = privateCertBouncy.GetPublicKey();
//how do i now get the private key to make a keypair?
</code></pre>

<p>Is there anyway to convert a <code>AsymmetricAlgorithm</code>(C# private key) to a <code>AsymmetricKeyParameter</code>(bouncycastle private key)?</p>
","<p>Don't know BouncyCastle that much but it seems to me that the simple thing to do is to recreate the key based on the key parameters.</p>

<pre>
<code>
    public static AsymmetricKeyParameter TransformRSAPrivateKey(AsymmetricAlgorithm privateKey)
    {
        RSACryptoServiceProvider prov = privateKey as RSACryptoServiceProvider;
        RSAParameters parameters = prov.ExportParameters(true);

        return new RsaPrivateCrtKeyParameters(
            new BigInteger(1,parameters.Modulus),
            new BigInteger(1,parameters.Exponent),
            new BigInteger(1,parameters.D),
            new BigInteger(1,parameters.P),
            new BigInteger(1,parameters.Q),
            new BigInteger(1,parameters.DP),
            new BigInteger(1,parameters.DQ),
            new BigInteger(1,parameters.InverseQ));
    }
</code>
</pre>

<p>You can call the code by using</p>

<pre>
<code>
AsymmetricKeyParameter bouncyCastlePrivateKey = TransformRSAPrivateKey(mycert.PrivateKey);
</code>
</pre>

<p>Obviously this assumes that the certificate includes a RSA Key but the same result can be achieved for DSA with <code>DSACryptoServiceProvider</code> and <code>DSAParameters</code></p>
","33405","<c#><x509certificate><bouncycastle><private-key>","10","19","3","2015-05-20 11:08:28","3242164","4","3","104998","","2010-07-13 19:10:21","2010-07-13 18:28:36",""
"3240222","Get Private Key from BouncyCastle X509 Certificate? C#","<p>Normally when I grab an <code>X509Certificate2</code> out of my keystore I can call <code>.PrivateKey</code> to retrieve the cert's private key as an <code>AsymmetricAlgorithm</code>. However I have decided to use Bouncy Castle and its instance of <code>X509Certificate</code> only has a <code>getPublicKey();</code> I cannot see a way to get the private key out of the cert. Any ideas?</p>

<p>I get the an X509Certificate2 from my Windows-MY keystore then use:</p>

<pre><code>//mycert is an X509Certificate2 retrieved from Windows-MY Keystore
X509CertificateParser certParser = new X509CertificateParser();
X509Certificate privateCertBouncy = certParser.ReadCertificate(mycert.GetRawCertData());
AsymmetricKeyParameter pubKey = privateCertBouncy.GetPublicKey();
//how do i now get the private key to make a keypair?
</code></pre>

<p>Is there anyway to convert a <code>AsymmetricAlgorithm</code>(C# private key) to a <code>AsymmetricKeyParameter</code>(bouncycastle private key)?</p>
","<pre><code>Akp = Org.BouncyCastle.Security.DotNetUtilities.GetKeyPair(this.Certificate.PrivateKey).Private;
</code></pre>
","33405","<c#><x509certificate><bouncycastle><private-key>","10","25","3","2015-05-20 11:08:28","3242164","4","3","104998","","2010-07-13 19:10:21","2010-07-13 18:28:36",""
"3240222","Get Private Key from BouncyCastle X509 Certificate? C#","<p>Normally when I grab an <code>X509Certificate2</code> out of my keystore I can call <code>.PrivateKey</code> to retrieve the cert's private key as an <code>AsymmetricAlgorithm</code>. However I have decided to use Bouncy Castle and its instance of <code>X509Certificate</code> only has a <code>getPublicKey();</code> I cannot see a way to get the private key out of the cert. Any ideas?</p>

<p>I get the an X509Certificate2 from my Windows-MY keystore then use:</p>

<pre><code>//mycert is an X509Certificate2 retrieved from Windows-MY Keystore
X509CertificateParser certParser = new X509CertificateParser();
X509Certificate privateCertBouncy = certParser.ReadCertificate(mycert.GetRawCertData());
AsymmetricKeyParameter pubKey = privateCertBouncy.GetPublicKey();
//how do i now get the private key to make a keypair?
</code></pre>

<p>Is there anyway to convert a <code>AsymmetricAlgorithm</code>(C# private key) to a <code>AsymmetricKeyParameter</code>(bouncycastle private key)?</p>
","<p>Find .NET X509Certificate2:</p>

<pre><code>X509Certificate2 cert = this.FindCertificate(certificateFriendlyName);
</code></pre>

<p>Parse it to BouncyCastle certificate and use X509Certificate2Signature to get signature:</p>

<pre><code>var parser = new X509CertificateParser();
var bouncyCertificate = parser.ReadCertificate(cert.RawData);
var algorithm = DigestAlgorithms.GetDigest(bouncyCertificate.SigAlgOid);
var signature = new X509Certificate2Signature(cert, algorithm);
</code></pre>
","33405","<c#><x509certificate><bouncycastle><private-key>","10","1","3","2015-05-20 11:08:28","3242164","4","3","104998","","2010-07-13 19:10:21","2010-07-13 18:28:36",""
"12637171","Generate Private and Public key OpenSSL","<p>I have the following commands for OpenSSL to generate Private and Public keys:</p>

<pre><code>openssl genrsa –aes-128-cbc –out priv.pem –passout pass:[privateKeyPass] 2048
</code></pre>

<p>and</p>

<pre><code>openssl req –x509 –new –key priv.pem –passin pass:[privateKeyPass] -days 3650 –out cert.cer
</code></pre>

<p>... but they are not working.  For the first command I get the following error :</p>

<pre><code>usage: genrsa [args] [numbits]
 -des            encrypt the generated key with DES in cbc mode
 -des3           encrypt the generated key with DES in ede cbc mode (168 bit key)
 -seed
                 encrypt PEM output with cbc seed
 -aes128, -aes192, -aes256
                 encrypt PEM output with cbc aes
 -camellia128, -camellia192, -camellia256
                 encrypt PEM output with cbc camellia
 -out file       output the key to 'file
 -passout arg    output file pass phrase source
 -f4             use F4 (0x10001) for the E value
 -3              use 3 for the E value
 -engine e       use engine e, possibly a hardware device.
 -rand file:file:...
                 load the file (or the files in the directory) into
                 the random number generator
</code></pre>

<p>What am I doing wrong?</p>

<p>Edit:
I solved the first command :</p>

<pre><code>openssl genrsa -aes128 -out privkey.pem 2048
</code></pre>

<p>But now I'm getting an error with the second:</p>

<pre><code>unknown option –x509
</code></pre>
","<p>As I can see from the output, you choose wrong algorithm.
Shouldn't you pass <code>-aes128</code> instead of <code>-aes-128-cbc</code>?</p>

<p>From manual I assume that <code>-aes-128-cbc</code> is a proper parameter for <code>openssl enc</code>, but I don't know if it should work for <code>genrsa</code>.</p>
","33020","<openssl><rsa><private-key><public-key>","11","1","2","2019-07-19 07:04:38","12638394","1","2","2066657","","2019-07-19 07:04:38","2012-09-28 09:22:36",""
"12637171","Generate Private and Public key OpenSSL","<p>I have the following commands for OpenSSL to generate Private and Public keys:</p>

<pre><code>openssl genrsa –aes-128-cbc –out priv.pem –passout pass:[privateKeyPass] 2048
</code></pre>

<p>and</p>

<pre><code>openssl req –x509 –new –key priv.pem –passin pass:[privateKeyPass] -days 3650 –out cert.cer
</code></pre>

<p>... but they are not working.  For the first command I get the following error :</p>

<pre><code>usage: genrsa [args] [numbits]
 -des            encrypt the generated key with DES in cbc mode
 -des3           encrypt the generated key with DES in ede cbc mode (168 bit key)
 -seed
                 encrypt PEM output with cbc seed
 -aes128, -aes192, -aes256
                 encrypt PEM output with cbc aes
 -camellia128, -camellia192, -camellia256
                 encrypt PEM output with cbc camellia
 -out file       output the key to 'file
 -passout arg    output file pass phrase source
 -f4             use F4 (0x10001) for the E value
 -3              use 3 for the E value
 -engine e       use engine e, possibly a hardware device.
 -rand file:file:...
                 load the file (or the files in the directory) into
                 the random number generator
</code></pre>

<p>What am I doing wrong?</p>

<p>Edit:
I solved the first command :</p>

<pre><code>openssl genrsa -aes128 -out privkey.pem 2048
</code></pre>

<p>But now I'm getting an error with the second:</p>

<pre><code>unknown option –x509
</code></pre>
","<p>'genrsa' generates just an RSA key.</p>

<p>'req' then uses that key to make a x509 style request.</p>

<p>If you just need a rsa key pair - use genrsa.</p>

<p>If you need a keypair and a signed x509 request you use 'genrsa' and then 'req'.</p>

<p>Optionally 'req' can also generate that key for you (i.e. it encapsulates the 'genrsa' command (and the gendh). </p>

<p>So:</p>

<pre><code> openssl genrsa -aes128 -out privkey.pem 2048
 openssl req -new -x509 -key privkey.pem 
</code></pre>

<p>is almost equivalent to</p>

<pre><code> openssl req -new -x509 -keyout privkey.pem  -newkey rsa:2048
</code></pre>

<p>except that unlike 'genrsa', 'req' does not allow you to specify aes128 as the encryption.</p>

<p>So in a lot of enterprise settings one does it in two steps as to get sufficient control over the key encryption applied.</p>
","33020","<openssl><rsa><private-key><public-key>","11","16","2","2019-07-19 07:04:38","12638394","1","2","2066657","","2019-07-19 07:04:38","2012-09-28 09:22:36",""
"9383437","Mac Terminal Keeps Asking for Password When Using PPK with SSH","<p>I am attempting to connect to an Amazon EC2 Server via Mac Terminal. I have a PPK file that does not have a password attached to it, but when I try to connect I get a popup box that says  ""Enter the password for the SSH Private Key.""</p>

<p>So we tried creating a PPK that has a password - but it does not accept the password, it still rejects the connection.</p>

<p>I have a Windows user who is able to connect using the same PPK on Putty.</p>

<p>Has anyone experienced this issue?</p>
","<p>The mac is looking for a .pem key. The ppk is generated specifically for putty. If you don't have the original ppk key. </p>

<p>Download puttygen.exe from <a href=""http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html"">http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html</a> Then go to conversions -> export OpenSSH key. Save the output as a .pem file and try using that with the mac.</p>

<p>If this doesn't work can you post the command you're running from mac. Its possible you've got some extra parameter or something.</p>
","32495","<macos><terminal><amazon-web-services><private-key>","18","24","7","2016-08-11 14:31:56","9431804","0","8","","","","2012-02-21 18:57:06",""
"9383437","Mac Terminal Keeps Asking for Password When Using PPK with SSH","<p>I am attempting to connect to an Amazon EC2 Server via Mac Terminal. I have a PPK file that does not have a password attached to it, but when I try to connect I get a popup box that says  ""Enter the password for the SSH Private Key.""</p>

<p>So we tried creating a PPK that has a password - but it does not accept the password, it still rejects the connection.</p>

<p>I have a Windows user who is able to connect using the same PPK on Putty.</p>

<p>Has anyone experienced this issue?</p>
","<p>Maybe your problem is with permissions for your key. I know in linux its required to change the permissions. </p>

<p>Taken from the website <a href=""http://om4.com.au/ssh-rsa-key-pairs-passphrases-leopard/"" rel=""noreferrer"">http://om4.com.au/ssh-rsa-key-pairs-passphrases-leopard/</a></p>

<ol>
<li><p>Clear the contents of your ~/.ssh directory and set the directory permissions to 700 (directories need to be ""executable"")
$ rm ~/.ssh/*
$ chmod 700 ~/.ssh</p></li>
<li><p>Generate your rsa key pair (there are variations for this, but this is the version I used):
$ ssh-keygen -t rsa</p></li>
<li><p>Set the permissions for all files in ~/.ssh to 600
$ chmod 600 ~/.ssh</p></li>
<li><p>Copy your id_rsa.pub key to your server’s .ssh/authorized_keys file</p></li>
<li><p>Add your passphrase to your keychain using this command:
$ ssh-add -K
(you will see Enter passphrase for [your system]/.ssh/id_rsa: )</p></li>
</ol>
","32495","<macos><terminal><amazon-web-services><private-key>","18","19","7","2016-08-11 14:31:56","9431804","0","8","","","","2012-02-21 18:57:06",""
"9383437","Mac Terminal Keeps Asking for Password When Using PPK with SSH","<p>I am attempting to connect to an Amazon EC2 Server via Mac Terminal. I have a PPK file that does not have a password attached to it, but when I try to connect I get a popup box that says  ""Enter the password for the SSH Private Key.""</p>

<p>So we tried creating a PPK that has a password - but it does not accept the password, it still rejects the connection.</p>

<p>I have a Windows user who is able to connect using the same PPK on Putty.</p>

<p>Has anyone experienced this issue?</p>
","<p>The error <code>Enter your password for the SSH key x</code> can result from using a key of the wrong format (such as a ppk key) in ssh or sftp. This is because it is interpreted as an encrypted ssh key and so prompts for the passphrase, when actually there is no passphrase.</p>

<p>In OS X I was able to simulate this error by simply typing the following into the command line:</p>

<pre><code>sftp -o IdentityFile=randomtextfile mysftpserver.com
</code></pre>

<p>The solution is to convert the file using puttygen as suggested by bwight.</p>
","32495","<macos><terminal><amazon-web-services><private-key>","18","4","7","2016-08-11 14:31:56","9431804","0","8","","","","2012-02-21 18:57:06",""
"9383437","Mac Terminal Keeps Asking for Password When Using PPK with SSH","<p>I am attempting to connect to an Amazon EC2 Server via Mac Terminal. I have a PPK file that does not have a password attached to it, but when I try to connect I get a popup box that says  ""Enter the password for the SSH Private Key.""</p>

<p>So we tried creating a PPK that has a password - but it does not accept the password, it still rejects the connection.</p>

<p>I have a Windows user who is able to connect using the same PPK on Putty.</p>

<p>Has anyone experienced this issue?</p>
","<p>In addition to the other answers, the issue might come from the fact you haven't specified which user you want to connect as.</p>

<p>For example <code>ssh -i francky.pem 208.52.170.43</code> will ask you for your password on Mac, whereas <code>ssh -i francky.pem root@208.52.170.43</code> shouldn't. Note that on Linux you don't specify the user.</p>
","32495","<macos><terminal><amazon-web-services><private-key>","18","2","7","2016-08-11 14:31:56","9431804","0","8","","","","2012-02-21 18:57:06",""
"9383437","Mac Terminal Keeps Asking for Password When Using PPK with SSH","<p>I am attempting to connect to an Amazon EC2 Server via Mac Terminal. I have a PPK file that does not have a password attached to it, but when I try to connect I get a popup box that says  ""Enter the password for the SSH Private Key.""</p>

<p>So we tried creating a PPK that has a password - but it does not accept the password, it still rejects the connection.</p>

<p>I have a Windows user who is able to connect using the same PPK on Putty.</p>

<p>Has anyone experienced this issue?</p>
","<p>I was running into the exact same problem in MAC, I found a quite simple way of getting rid of it.
Instead of using ssh -i IP address, use the following>
ssh user@IP</p>

<p>Hope you already found the answer after this long time :)</p>
","32495","<macos><terminal><amazon-web-services><private-key>","18","0","7","2016-08-11 14:31:56","9431804","0","8","","","","2012-02-21 18:57:06",""
"9383437","Mac Terminal Keeps Asking for Password When Using PPK with SSH","<p>I am attempting to connect to an Amazon EC2 Server via Mac Terminal. I have a PPK file that does not have a password attached to it, but when I try to connect I get a popup box that says  ""Enter the password for the SSH Private Key.""</p>

<p>So we tried creating a PPK that has a password - but it does not accept the password, it still rejects the connection.</p>

<p>I have a Windows user who is able to connect using the same PPK on Putty.</p>

<p>Has anyone experienced this issue?</p>
","<p>In my case, the problem was the file's break type. Try this:</p>

<p>1.- Open the .pem file with TextWrangler</p>

<p>2.- At Bottom of app, verify if the Break Type is ""Windows(CRLF)"". </p>
","32495","<macos><terminal><amazon-web-services><private-key>","18","0","7","2016-08-11 14:31:56","9431804","0","8","","","","2012-02-21 18:57:06",""
"9383437","Mac Terminal Keeps Asking for Password When Using PPK with SSH","<p>I am attempting to connect to an Amazon EC2 Server via Mac Terminal. I have a PPK file that does not have a password attached to it, but when I try to connect I get a popup box that says  ""Enter the password for the SSH Private Key.""</p>

<p>So we tried creating a PPK that has a password - but it does not accept the password, it still rejects the connection.</p>

<p>I have a Windows user who is able to connect using the same PPK on Putty.</p>

<p>Has anyone experienced this issue?</p>
","<p>This issue had me pulling my hair out for 20 min or so.  Realized that I was able to connect successfully from another terminal window.  In my case I just had to close out the current terminal window and use another or new window.  Very strange, but may help you out.</p>
","32495","<macos><terminal><amazon-web-services><private-key>","18","0","7","2016-08-11 14:31:56","9431804","0","8","","","","2012-02-21 18:57:06",""
"28042777","How to convert PEM file to PPK using PuTTYgen in Ubuntu","<p>I have created an EC2 instance on AWS. I want to connect to the instance using PuTTY, but it requires PPK file. I have PEM file which I want to covert into PPK using PuTTYgen.</p>

<p>How do I use PuTTYgen on Ubuntu to convert PEM file to PPK?</p>
","<p>Do you need Putty to connect to your instance's command line? You mentioned you use Ubuntu, so you can use PEM key with plain ssh:</p>

<pre><code>ssh -i mykey.pem user@hostname
</code></pre>
","29403","<amazon-web-services><putty><private-key><pem><key-pair>","11","5","2","2017-02-10 08:55:43","28043392","0","5","850848","","2015-01-20 14:07:10","2015-01-20 10:16:40","2015-01-20 15:56:04"
"28042777","How to convert PEM file to PPK using PuTTYgen in Ubuntu","<p>I have created an EC2 instance on AWS. I want to connect to the instance using PuTTY, but it requires PPK file. I have PEM file which I want to covert into PPK using PuTTYgen.</p>

<p>How do I use PuTTYgen on Ubuntu to convert PEM file to PPK?</p>
","<p>With *nix version of PuTTYgen:</p>

<pre><code>puttygen mykey.pem -o mykey.ppk
</code></pre>

<p>See <a href=""https://linux.die.net/man/1/puttygen"" rel=""noreferrer"">PuTTYgen man page</a>.</p>

<hr>

<p>For Windows users: Note that Windows version of PuTTYgen does not support key conversions from command-line.</p>

<p>You can use <a href=""https://winscp.net/eng/docs/commandline#keygen"" rel=""noreferrer"">WinSCP with the <code>/keygen</code> command-line switch instead to convert the key</a>, like:</p>

<pre><code>winscp.com /keygen mykey.pem /output=mykey.ppk
</code></pre>

<p>For compatibility with PuTTYgen, WinSCP also supports its syntax:</p>

<pre><code>winscp.com /keygen mykey.pem -o mykey.ppk
</code></pre>
","29403","<amazon-web-services><putty><private-key><pem><key-pair>","11","29","2","2017-02-10 08:55:43","28043392","0","5","850848","","2015-01-20 14:07:10","2015-01-20 10:16:40","2015-01-20 15:56:04"
"25349631","keytool -list shows different aliases for p12 keystore, depending on whether you provide the password","<p><em>Really</em> weird behaviour on a particular p12 file.</p>

<p>If I run</p>

<pre><code>keytool -list -storetype pkcs12 -keystore my_debug_keystore.p12 -storepass debug
keytool -v -list -storetype pkcs12 -keystore my_debug_keystore.p12 -storepass debug
</code></pre>

<p>I get,</p>

<pre><code>Alias name: 1
Creation date: Aug 17, 2014
Entry type: PrivateKeyEntry
Certificate chain length: 1
Certificate[1]:
Owner: CN=sixminute, OU=, O=, C=IE
Issuer: CN=sixminute, OU=, O=, C=IE
Serial number: xxxxxxxxxxxxxxxxx
Valid from: Wed Nov 07 13:34:40 GMT 2012 until: Sun Nov 08 13:34:40 GMT 2037
Certificate fingerprints:
     MD5:  xxxxxxxxxxxxxxxxx
     SHA1: xxxxxxxxxxxxxxxxx
     Signature algorithm name: SHA1withRSA
     Version: 3
</code></pre>

<p>and</p>

<pre><code>Your keystore contains 1 entry

1, Aug 17, 2014, PrivateKeyEntry,
Certificate fingerprint (MD5): xxxxxxxxxxxxxxxxx
</code></pre>

<p>However, if I <em>don't</em> provide the password in the commands, </p>

<pre><code>keytool -list -storetype pkcs12 -keystore my_debug_keystore.p12
keytool -v -list -storetype pkcs12 -keystore my_debug_keystore.p12
</code></pre>

<p>the output is different,</p>

<pre><code>Alias name: 2
Creation date: Aug 17, 2014
Entry type: PrivateKeyEntry
Certificate chain length: 1
Certificate[1]:
Owner: CN=sixminute, OU=, O=, C=IE
Issuer: CN=sixminute, OU=, O=, C=IE
Serial number: 2d36623161363935353a31336165303361636133313a2d38303030
Valid from: Wed Nov 07 13:34:40 GMT 2012 until: Sun Nov 08 13:34:40 GMT 2037
Certificate fingerprints:
     MD5:  xxxxxxxxxxxxxxxxx
     SHA1: xxxxxxxxxxxxxxxxx
     Signature algorithm name: SHA1withRSA
     Version: 3
</code></pre>

<p>and</p>

<pre><code>Your keystore contains 1 entry

2, Aug 17, 2014, PrivateKeyEntry,
Certificate fingerprint (MD5): xxxxxxxxxxxxxxxxx
</code></pre>

<p>Specifically a different alias for the same key (the MD5 and SHA1 are still the same for the keys).</p>

<p>Any idea at all why this would be the case?</p>
","<p>Aliases are not quite a PKCS 12 concept.  There is a Friendly Name attribute but it is very optional.  So I would guess that Java is just making up the Alias names it reports.  No idea why it would be different though, as the safe bag order should be the same.</p>
","28443","<alias><keytool><private-key><pkcs#12>","9","5","1","2017-06-13 17:05:11","","0","3","","","","2014-08-17 13:31:20",""
"17449023","Transferring a file to an amazon ec2 instance using scp always gives me permission denied (publickey,gssapi-with-mic)","<p>I am trying to transfer a file to an ec2 instance. I followed the Amazon's documentation, this is what my command looked like:</p>

<pre><code>scp -i [the key's location] Documents/[the file's location] ec2-user@[public dns]:[home/[destination]]
</code></pre>

<p>where I replaced all the variables with the proper things, I am sure it's the correct key and it has permission 400. When I call the command, it tells me the RSA key fingerprint, asks me if I want to continue connecting. I type yes and it replies with </p>

<pre><code>Permission denied (publickey,gssapi-with-mic)
lost connection
</code></pre>

<p>I have looked at many of the other similar questions on stack overflow and can't find a correct way to do it.</p>

<p>Also ssh traffic is enabled on port 22.</p>
","<p>The example amazon provided is correct. It sounds like a folder permissions issue. If you created the folder you are trying to copy to with another user or another user created it, chances are you don't have permissions to copy to it or edit it. </p>

<p>If you have sudo abilities, you can try opening access for yourself. Though not recommended to be left this way, you could try this command:</p>

<pre><code>sudo chmod 777 /folderlocation
</code></pre>

<p>That gives complete read/write/executable permissions to anyone (hence why you shouldn't leave it at 777) but it will give you the chance to test your scp command to rule out permissions. </p>

<p>Afterwards if you aren't familiar with permissions, I suggest you read up on it. this is an example: <a href=""http://www.tuxfiles.org/linuxhelp/filepermissions.html"">http://www.tuxfiles.org/linuxhelp/filepermissions.html</a> It is generally suggested you lock down the folder as much as possible depending on the type of information held within. </p>

<p>If that was not the cause some other things you might want to check:</p>

<ul>
<li>are you in the directory of your key when executing the 'scp -i keyname' command?</li>
<li>do you have permissions to use the folder you are transferring from?</li>
</ul>

<p>Best of luck. </p>
","28036","<amazon-ec2><scp><private-key><permission-denied>","26","21","5","2019-06-11 13:20:09","17450265","1","6","1213708","","2017-12-20 08:03:34","2013-07-03 13:13:59",""
"17449023","Transferring a file to an amazon ec2 instance using scp always gives me permission denied (publickey,gssapi-with-mic)","<p>I am trying to transfer a file to an ec2 instance. I followed the Amazon's documentation, this is what my command looked like:</p>

<pre><code>scp -i [the key's location] Documents/[the file's location] ec2-user@[public dns]:[home/[destination]]
</code></pre>

<p>where I replaced all the variables with the proper things, I am sure it's the correct key and it has permission 400. When I call the command, it tells me the RSA key fingerprint, asks me if I want to continue connecting. I type yes and it replies with </p>

<pre><code>Permission denied (publickey,gssapi-with-mic)
lost connection
</code></pre>

<p>I have looked at many of the other similar questions on stack overflow and can't find a correct way to do it.</p>

<p>Also ssh traffic is enabled on port 22.</p>
","<p>Might be ones uses wrong username. Happened to me, was the same error msg -> Permission denied (publickey,gssapi-keyex,gssapi-with-mic).
lost connection</p>
","28036","<amazon-ec2><scp><private-key><permission-denied>","26","0","5","2019-06-11 13:20:09","17450265","1","6","1213708","","2017-12-20 08:03:34","2013-07-03 13:13:59",""
"17449023","Transferring a file to an amazon ec2 instance using scp always gives me permission denied (publickey,gssapi-with-mic)","<p>I am trying to transfer a file to an ec2 instance. I followed the Amazon's documentation, this is what my command looked like:</p>

<pre><code>scp -i [the key's location] Documents/[the file's location] ec2-user@[public dns]:[home/[destination]]
</code></pre>

<p>where I replaced all the variables with the proper things, I am sure it's the correct key and it has permission 400. When I call the command, it tells me the RSA key fingerprint, asks me if I want to continue connecting. I type yes and it replies with </p>

<pre><code>Permission denied (publickey,gssapi-with-mic)
lost connection
</code></pre>

<p>I have looked at many of the other similar questions on stack overflow and can't find a correct way to do it.</p>

<p>Also ssh traffic is enabled on port 22.</p>
","<p>The problem may be the user name. I copied a file to my Amazon instance and first tried to use the command: </p>

<pre><code>scp -r -i ../.ssh/Amazon_server_key_pair.pem ./empty.test ec2-user@ec2-xx-yy-zz-tt.compute-1.amazonaws.com:~
</code></pre>

<p>and got the error:Permission denied (publickey).</p>

<p>I then realized that my instance is an Ubuntu environment and the user user is then ""ubuntu"" the correct command that worked for me is then:</p>

<pre><code>scp -r -i ../.ssh/Amazon_server_key_pair.pem ./empty.test ubuntu@ec2-xx-yy-zz-tt.us-west-2.compute.amazonaws.com:~
</code></pre>

<p>The file ""empty.test"" is a text file containing the text ""testing ..."". Replace the address of your virtual server with the correct address to your instance's Public DNS. I have replaced the ip to my instance with xx.yy.zz.tt.</p>
","28036","<amazon-ec2><scp><private-key><permission-denied>","26","8","5","2019-06-11 13:20:09","17450265","1","6","1213708","","2017-12-20 08:03:34","2013-07-03 13:13:59",""
"17449023","Transferring a file to an amazon ec2 instance using scp always gives me permission denied (publickey,gssapi-with-mic)","<p>I am trying to transfer a file to an ec2 instance. I followed the Amazon's documentation, this is what my command looked like:</p>

<pre><code>scp -i [the key's location] Documents/[the file's location] ec2-user@[public dns]:[home/[destination]]
</code></pre>

<p>where I replaced all the variables with the proper things, I am sure it's the correct key and it has permission 400. When I call the command, it tells me the RSA key fingerprint, asks me if I want to continue connecting. I type yes and it replies with </p>

<pre><code>Permission denied (publickey,gssapi-with-mic)
lost connection
</code></pre>

<p>I have looked at many of the other similar questions on stack overflow and can't find a correct way to do it.</p>

<p>Also ssh traffic is enabled on port 22.</p>
","<p>I have to use ubuntu@ instead of ec2-user@ because when i ssh i was seeing ubuntu@ in my terminal, try changing to the name you see at your terminal</p>

<p>Also you have to set permission for pem file in your computer </p>

<pre><code>chmod 400 /path/my-key-pair.pem
</code></pre>

<p>The below code will copy file from your computer to Ec2 instance.</p>

<pre><code>scp -i ~/location_of_your_ec2_key_pair.pem ~/location_of_transfer_file/sample.txt ubuntu@ec2_your_ec2_instance.compute.amazonaws.com:~/folder_to_which_it_needs_to_be_copied
</code></pre>

<p>The below code will copy file from Ec2 instance to your computer</p>

<pre><code>scp -i ~/location_of_your_ec2_key_pair.pem   ubuntu@ec2_your_ec2_instance.compute.amazonaws.com:~/location_of_transfer_file/sample.txt ~/folder_to_which_it_needs_to_be_copied
</code></pre>
","28036","<amazon-ec2><scp><private-key><permission-denied>","26","3","5","2019-06-11 13:20:09","17450265","1","6","1213708","","2017-12-20 08:03:34","2013-07-03 13:13:59",""
"17449023","Transferring a file to an amazon ec2 instance using scp always gives me permission denied (publickey,gssapi-with-mic)","<p>I am trying to transfer a file to an ec2 instance. I followed the Amazon's documentation, this is what my command looked like:</p>

<pre><code>scp -i [the key's location] Documents/[the file's location] ec2-user@[public dns]:[home/[destination]]
</code></pre>

<p>where I replaced all the variables with the proper things, I am sure it's the correct key and it has permission 400. When I call the command, it tells me the RSA key fingerprint, asks me if I want to continue connecting. I type yes and it replies with </p>

<pre><code>Permission denied (publickey,gssapi-with-mic)
lost connection
</code></pre>

<p>I have looked at many of the other similar questions on stack overflow and can't find a correct way to do it.</p>

<p>Also ssh traffic is enabled on port 22.</p>
","<p>I was facing the same problem. Hope this will work for you.</p>

<p><code>scp -rp -i yourfile.pem ~/local_directory username@instance_url:directory</code></p>

<p>Permission should also be correct to make this work.</p>
","28036","<amazon-ec2><scp><private-key><permission-denied>","26","0","5","2019-06-11 13:20:09","17450265","1","6","1213708","","2017-12-20 08:03:34","2013-07-03 13:13:59",""
"8451131","Read private key in DER format java","<p>I have the following code to read a private key in PKCS#8 format</p>

<pre><code>public void encryptHash(String hashToEncrypt, String pathOfKey, String Algorithm) {
    FileInputStream fis = null;
    byte[] encodedKey = null;
    try {

        File f = new File(pathOfKey);
        encodedKey = new byte[(int)f.length()];

        fis = new FileInputStream(f);
        fis.read(encodedKey);
        fis.close();

        KeyFactory kf = KeyFactory.getInstance(""RSA"");
        PrivateKey privateKey = kf.generatePrivate(new PKCS8EncodedKeySpec(encodedKey));

        Signature rsaSigner = Signature.getInstance(""SHA1withRSA"");
        rsaSigner.initSign(privateKey);

        fis = new FileInputStream(hashToEncrypt);
        BufferedInputStream bis = new BufferedInputStream(fis);
        byte[] buffer = new byte[1024];
        int len = 0;
        while ((len = bis.read(buffer)) &gt;= 0) {
            try {
                rsaSigner.update(buffer, 0, len);
            } catch (SignatureException ex) {
                Logger.getLogger(DataEncryptor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        bis.close();

        byte[] signature = rsaSigner.sign();

        System.out.println(new String(signature));

    } catch (SignatureException ex) {
        Logger.getLogger(DataEncryptor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (InvalidKeyException ex) {
        Logger.getLogger(DataEncryptor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (InvalidKeySpecException ex) {
        Logger.getLogger(DataEncryptor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (FileNotFoundException ex) {
        Logger.getLogger(DataEncryptor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IOException ex) {
        Logger.getLogger(DataEncryptor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (NoSuchAlgorithmException ex) {
        Logger.getLogger(DataEncryptor.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        try {
            fis.close();
        } catch (IOException ex) {
            Logger.getLogger(DataEncryptor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
</code></pre>

<p>But I'm getting the following exception.</p>

<pre><code>dic 09, 2011 1:59:59 PM firmaelectronica.DataEncryptor encryptHash
Grave: null
java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException : DER input, Integer tag error
    at sun.security.rsa.RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:217)
    at java.security.KeyFactory.generatePrivate(KeyFactory.java:372)
    at firmaelectronica.DataEncryptor.encryptHash(DataEncryptor.java:40)
    at firmaelectronica.FirmaElectronica.main(FirmaElectronica.java:39)
Caused by: java.security.InvalidKeyException: IOException : DER input, Integer tag error
    at sun.security.pkcs.PKCS8Key.decode(PKCS8Key.java:361)
    at sun.security.pkcs.PKCS8Key.decode(PKCS8Key.java:367)
    at sun.security.rsa.RSAPrivateCrtKeyImpl.&lt;init&gt;(RSAPrivateCrtKeyImpl.java:91)
    at sun.security.rsa.RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:75)
    at sun.security.rsa.RSAKeyFactory.generatePrivate(RSAKeyFactory.java:316)
    at sun.security.rsa.RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:213)
    ... 3 more
</code></pre>

<p>any idea what is wrong? I tried this on OpenSSL <code>openssl pkcs8 -inform DER -in aaa010101aaa_FIEL.key -out aaa010101aaa_FIEL_key.pem</code> and it works but when I want to read the key in DER format it just sends that exception.</p>
","<p>Well finally looking at this thread <a href=""https://stackoverflow.com/questions/1391692/encrypting-with-rsa-private-key-in-java/1391786#1391786"">Encrypting with RSA private key in Java</a> found the answer.</p>

<p>First I had to unprotect the key, as follows</p>

<p><code>openssl pkcs8 -inform DER -in myDERPassProtectedPrivate.key -outform PEM -out myPEMPrivate.key</code></p>

<p>it asked me for my password and then I had the file <strong>myPEMPrivate.key</strong> Once done this proceed to get rid of the password protecting the key like follows</p>

<p><code>openssl pkcs8 -topk8 -nocrypt -in myPEMPrivate.key -outform DER -out myNotAnyMoreProtectedPrivate.key</code></p>

<p>with this I'm now able to load the key with the code above. If we want to have a pass-protected key in java it is highly advisable to use a keystore.</p>

<p>P.S. I tried to avoid the 2 steps to get rid of the password protecting the key with <code>openssl pkcs8 -topk8 -nocrypt -inform der -in myDERPassProtectedPrivate.key -outform der -out myDERNoPassProtectedPrivate.key</code> but I don't know why I had the error <strong>Error decrypting key</strong> I used WinOpenSSL maybe that's the reason why I got that error.</p>
","26870","<java><rsa><private-key>","5","5","2","2014-02-26 17:50:07","8478959","0","1","","","","2011-12-09 20:09:08",""
"8451131","Read private key in DER format java","<p>I have the following code to read a private key in PKCS#8 format</p>

<pre><code>public void encryptHash(String hashToEncrypt, String pathOfKey, String Algorithm) {
    FileInputStream fis = null;
    byte[] encodedKey = null;
    try {

        File f = new File(pathOfKey);
        encodedKey = new byte[(int)f.length()];

        fis = new FileInputStream(f);
        fis.read(encodedKey);
        fis.close();

        KeyFactory kf = KeyFactory.getInstance(""RSA"");
        PrivateKey privateKey = kf.generatePrivate(new PKCS8EncodedKeySpec(encodedKey));

        Signature rsaSigner = Signature.getInstance(""SHA1withRSA"");
        rsaSigner.initSign(privateKey);

        fis = new FileInputStream(hashToEncrypt);
        BufferedInputStream bis = new BufferedInputStream(fis);
        byte[] buffer = new byte[1024];
        int len = 0;
        while ((len = bis.read(buffer)) &gt;= 0) {
            try {
                rsaSigner.update(buffer, 0, len);
            } catch (SignatureException ex) {
                Logger.getLogger(DataEncryptor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        bis.close();

        byte[] signature = rsaSigner.sign();

        System.out.println(new String(signature));

    } catch (SignatureException ex) {
        Logger.getLogger(DataEncryptor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (InvalidKeyException ex) {
        Logger.getLogger(DataEncryptor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (InvalidKeySpecException ex) {
        Logger.getLogger(DataEncryptor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (FileNotFoundException ex) {
        Logger.getLogger(DataEncryptor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IOException ex) {
        Logger.getLogger(DataEncryptor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (NoSuchAlgorithmException ex) {
        Logger.getLogger(DataEncryptor.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        try {
            fis.close();
        } catch (IOException ex) {
            Logger.getLogger(DataEncryptor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
</code></pre>

<p>But I'm getting the following exception.</p>

<pre><code>dic 09, 2011 1:59:59 PM firmaelectronica.DataEncryptor encryptHash
Grave: null
java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException : DER input, Integer tag error
    at sun.security.rsa.RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:217)
    at java.security.KeyFactory.generatePrivate(KeyFactory.java:372)
    at firmaelectronica.DataEncryptor.encryptHash(DataEncryptor.java:40)
    at firmaelectronica.FirmaElectronica.main(FirmaElectronica.java:39)
Caused by: java.security.InvalidKeyException: IOException : DER input, Integer tag error
    at sun.security.pkcs.PKCS8Key.decode(PKCS8Key.java:361)
    at sun.security.pkcs.PKCS8Key.decode(PKCS8Key.java:367)
    at sun.security.rsa.RSAPrivateCrtKeyImpl.&lt;init&gt;(RSAPrivateCrtKeyImpl.java:91)
    at sun.security.rsa.RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:75)
    at sun.security.rsa.RSAKeyFactory.generatePrivate(RSAKeyFactory.java:316)
    at sun.security.rsa.RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:213)
    ... 3 more
</code></pre>

<p>any idea what is wrong? I tried this on OpenSSL <code>openssl pkcs8 -inform DER -in aaa010101aaa_FIEL.key -out aaa010101aaa_FIEL_key.pem</code> and it works but when I want to read the key in DER format it just sends that exception.</p>
","<p>Use this:</p>

<blockquote>
  <p>-passin arg</p>
  
  <blockquote>
    <p>the input file password source. For more information about the format of arg see the PASS PHRASE ARGUMENTS section in openssl(1).</p>
  </blockquote>
</blockquote>

<p>Command should look like:</p>

<blockquote>
  <p>openssl pkcs8 -inform DER -in myDERPassProtectedPrivate.key -outform PEM <strong>-passin pass:12345678a</strong> -out myPEMPrivate.key</p>
</blockquote>

<p>OpenSSL website <a href=""https://www.openssl.org/docs/apps/pkcs8.html"" rel=""nofollow"">https://www.openssl.org/docs/apps/pkcs8.html</a></p>
","26870","<java><rsa><private-key>","5","0","2","2014-02-26 17:50:07","8478959","0","1","","","","2011-12-09 20:09:08",""
"42784840","How to generate a key from CRT file?","<p>I am trying to generate a key from a CRT file. </p>

<p>I have installed OpenSSL on Windows and tried to get a random key using </p>

<p><a href=""https://i.stack.imgur.com/gKgb8.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/gKgb8.png"" alt=""enter image description here""></a></p>

<p>I have the CRT file but I'm unsure how to get keys from it. Inside the CRT file it shows <code>-----BEGIN CERTIFICATE-----</code>. </p>
","<p>In the image, note the <code>OpenSSL&gt;</code> prompt. It means you're inside <code>openssl</code> command and you don't need to type ""openssl"" again (that's why you've got the message ""openssl is an invalid command""). In this case, you should just type <code>genrsa etc...</code></p>

<p>But I don't know if I get what you're trying to do (generate a key <strong>from</strong> a crt file), mainly because: <code>genrsa</code> is a command to generate a new key pair using <a href=""https://en.wikipedia.org/wiki/RSA_(cryptosystem)"" rel=""noreferrer"">RSA algorithm</a>. In short, it generates 2 keys: one private and one public. The public key will be signed by a <a href=""https://en.wikipedia.org/wiki/Public-key_cryptography#Certification_authority"" rel=""noreferrer"">Certification Authority</a>, and the result is a digital certificate (which can be in a CRT file)</p>

<p>My point is: if you have a CRT file (aka certificate), it means a key pair was already generated and signed by a Certification Authority. There's no way to generate a new key <strong>from</strong> it (because it already has a key).</p>

<p>If you want to get the public key that's inside the certificate, you must read it using openssl <code>x509</code> command. Something like <code>openssl x509 -text -in crtfile</code> (or omit ""openssl"" if you're inside <code>OpenSSL&gt;</code> prompt).
PS: this command prints the whole certificate. If you want <strong>just</strong> the public key, you can run <code>x509 -pubkey -noout -in crtfile</code></p>

<p>If you want to generate a new key pair, then use <code>genrsa</code>.</p>
","26830","<openssl><wsdl><ssl-certificate><public><private-key>","3","5","1","2017-09-02 19:58:04","42788522","0","1","472495","","2017-09-02 19:58:04","2017-03-14 11:32:01",""
"28712088","unable to load certificate 6300:error:0906D06C:PEM routines:PEM_read_bio:no start line","<p>When I run the command below to check my private-key PEM file, an error pops up</p>

<p><code>unable to load certificate 6300:error:0906D06C:PEM routines:PEM_read_bio:no start line:.\crypto\pem\pem_lib.c:703:Expecting: TRUSTED CERTIFICATE</code></p>

<p><code>command : C:\&gt;openssl x509 -in C:\private-key.pem -text -noout</code></p>

<p>any idea?</p>
","<p>You are testing the private key and not the x509 certificate. Therefore <code>openssl rsa</code> (assuming it is rsa key) is to be used as in:</p>

<pre><code>$ openssl rsa -in testkp.pem -text
</code></pre>

<p>This would print something like the following:</p>

<pre><code>Private-Key: (2048 bit)
modulus:
....
publicExponent:
privateExponent:
...
prime1:
...
prime2:
....
exponent1:
...
exponent2:
....
coefficient:
.....
writing RSA key
..
....
</code></pre>
","24950","<openssl><ssl-certificate><private-key>","6","3","2","2017-09-22 16:19:36","","0","2","630327","","2017-09-22 16:19:36","2015-02-25 05:49:36",""
"28712088","unable to load certificate 6300:error:0906D06C:PEM routines:PEM_read_bio:no start line","<p>When I run the command below to check my private-key PEM file, an error pops up</p>

<p><code>unable to load certificate 6300:error:0906D06C:PEM routines:PEM_read_bio:no start line:.\crypto\pem\pem_lib.c:703:Expecting: TRUSTED CERTIFICATE</code></p>

<p><code>command : C:\&gt;openssl x509 -in C:\private-key.pem -text -noout</code></p>

<p>any idea?</p>
","<p>This happens mostly when your key is password-protected. </p>

<p>Firstly you have to decrypt it:</p>

<pre><code>$ openssl rsa -in protected.key -out unprotected.key
</code></pre>

<p>Then you have to recreate your .pem file again:</p>

<pre><code>$ cat unprotected.key yourcert.crt &gt; yourcert.pem
</code></pre>

<p>After that you can issue all the commands you need. If you encounter any troubles trying stuff above, check your key and cert files for line endings (openssl does not like Windows ones) and BOM-mark.</p>
","24950","<openssl><ssl-certificate><private-key>","6","4","2","2017-09-22 16:19:36","","0","2","630327","","2017-09-22 16:19:36","2015-02-25 05:49:36",""
"20198124","Read Private Key from PFX-file","<p>I know, there are <em>many</em> posts about this, but still I cannot find a solution to get this to work. I have generated a <em>PFX</em>-file with <strong>openssl</strong> on my machine like this:</p>

<pre><code>openssl x509 -req -days 365 -in ""myReqest.csr"" -signkey ""myPrivateKey.pem"" -out ""myCertificate.crt""
openssl pkcs12 -export -out ""myCertificate.pfx"" -inkey ""myPrivateKey.pem"" -in ""myCertificate.crt"" -certfile ""myCertificate.crt""
</code></pre>

<p>In my C# app, I access the private key like this:</p>

<pre><code>var cert = new X509Certificate2(""myCertificate.pfx"", ""myPassword"");
cert.HasPrivateKey; // This is always true!
cert.PrivateKey; // Works on my machine (only)
</code></pre>

<p>This works perfectly fine (on <em>my</em> machine), but when I run the same code on <em>another</em> machine, it throws: <strong><em>""Key set not found""</em></strong>, even though <code>HasPrivateKey</code> returns <code>true</code>! Shouldn't the private key be included in the *.pfx-file? Can you tell me:</p>

<ol>
<li><p>Was the certificate/private key somehow automatically installed on my machine by <em>openssl</em> when I created it?</p></li>
<li><p>How can I read the private key from the *.PFX-file (or alternatively from the *.PEM-file)?</p></li>
</ol>

<p>StackTrace of Exception:</p>

<pre><code>at System.Security.Cryptography.Utils.CreateProvHandle(CspParameters parameters, Boolean randomKeyContaier)
at System.Security.Cryptography.Utils.GetKeyPairHelper(CspAlgorithmType keyType, CspParameters parameters, Boolean randomKeyContaier, Int32 dwKeySize, SafeProvHandle&amp; safeProvHandle, SafeKeyHandle&amp; safeKeyHandle)
at System.Security.Cryptography.RSACryptoServiceProvider.GetKeyPair()
at System.Security.Cryptography.RSACryptoServiceProvider..ctor(Int32 dwKeySize, CspParameters parameters, Boolean useDefaultKeySize)
at System.Security.Cryptography.RSACryptoServiceProvider..ctor(CspParameters parameter)
at System.Security.Cryptography.X509Certificates.X509Certificate2.get_PrivateKey()
</code></pre>

<p><strong><em>Update:</em></strong></p>

<p>I've found out, that the following does work:</p>

<pre><code>// on my machine
// read certificate from file (exportable!)
X509Certificate2 cert = new X509Certificate2(""filename.pfx"", ""password"", X509KeyStorageFlags.Exportable)
// sign data etc.
((RSACryptoServiceProvider)cert.PrivateKey).SignData(...
// export private key to XML-file
File.WriteAllText(""filename.xml"", cert.PrivateKey.ToXmlString(true));

// on the other machine
// create new RSA object
RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();
// import private key from xml
rsa.FromXmlString(File.ReadAllText(""filename.xml""));
// verify data etc.
rsa.VerifyData(...
</code></pre>

<p>However, to me, this is only a workaround, I would like to do it an a more conventional/standard compliant way!</p>
","<p>The default key set doesn't exist on the other machine (The user key set is usually the default), probably because it's an asp.net application (i.e. it has no user profile). If you pass <a href=""http://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keystorageflags.aspx"" rel=""nofollow""><code>X509KeyStorageFlags.MachineKeySet</code></a> as the third argument to the <code>X509Certificate2</code> constructor, then it should work in the same way on both machines.</p>

<p>The reason it happens only when accessing the <code>PrivateKey</code> property is that it's the first place where an actual CSP object is created to use the key.</p>
","24847","<c#><private-key><x509certificate2><pfx>","7","1","5","2018-05-17 07:36:31","20269161","4","4","41956","","2015-05-08 04:50:44","2013-11-25 16:30:07",""
"20198124","Read Private Key from PFX-file","<p>I know, there are <em>many</em> posts about this, but still I cannot find a solution to get this to work. I have generated a <em>PFX</em>-file with <strong>openssl</strong> on my machine like this:</p>

<pre><code>openssl x509 -req -days 365 -in ""myReqest.csr"" -signkey ""myPrivateKey.pem"" -out ""myCertificate.crt""
openssl pkcs12 -export -out ""myCertificate.pfx"" -inkey ""myPrivateKey.pem"" -in ""myCertificate.crt"" -certfile ""myCertificate.crt""
</code></pre>

<p>In my C# app, I access the private key like this:</p>

<pre><code>var cert = new X509Certificate2(""myCertificate.pfx"", ""myPassword"");
cert.HasPrivateKey; // This is always true!
cert.PrivateKey; // Works on my machine (only)
</code></pre>

<p>This works perfectly fine (on <em>my</em> machine), but when I run the same code on <em>another</em> machine, it throws: <strong><em>""Key set not found""</em></strong>, even though <code>HasPrivateKey</code> returns <code>true</code>! Shouldn't the private key be included in the *.pfx-file? Can you tell me:</p>

<ol>
<li><p>Was the certificate/private key somehow automatically installed on my machine by <em>openssl</em> when I created it?</p></li>
<li><p>How can I read the private key from the *.PFX-file (or alternatively from the *.PEM-file)?</p></li>
</ol>

<p>StackTrace of Exception:</p>

<pre><code>at System.Security.Cryptography.Utils.CreateProvHandle(CspParameters parameters, Boolean randomKeyContaier)
at System.Security.Cryptography.Utils.GetKeyPairHelper(CspAlgorithmType keyType, CspParameters parameters, Boolean randomKeyContaier, Int32 dwKeySize, SafeProvHandle&amp; safeProvHandle, SafeKeyHandle&amp; safeKeyHandle)
at System.Security.Cryptography.RSACryptoServiceProvider.GetKeyPair()
at System.Security.Cryptography.RSACryptoServiceProvider..ctor(Int32 dwKeySize, CspParameters parameters, Boolean useDefaultKeySize)
at System.Security.Cryptography.RSACryptoServiceProvider..ctor(CspParameters parameter)
at System.Security.Cryptography.X509Certificates.X509Certificate2.get_PrivateKey()
</code></pre>

<p><strong><em>Update:</em></strong></p>

<p>I've found out, that the following does work:</p>

<pre><code>// on my machine
// read certificate from file (exportable!)
X509Certificate2 cert = new X509Certificate2(""filename.pfx"", ""password"", X509KeyStorageFlags.Exportable)
// sign data etc.
((RSACryptoServiceProvider)cert.PrivateKey).SignData(...
// export private key to XML-file
File.WriteAllText(""filename.xml"", cert.PrivateKey.ToXmlString(true));

// on the other machine
// create new RSA object
RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();
// import private key from xml
rsa.FromXmlString(File.ReadAllText(""filename.xml""));
// verify data etc.
rsa.VerifyData(...
</code></pre>

<p>However, to me, this is only a workaround, I would like to do it an a more conventional/standard compliant way!</p>
","<p>It seems, there is no straight-forward way to do this in .NET. Therefore I've decided now to load the certificate directly from the certificate store:</p>

<pre><code>X509Store store = new X509Store(StoreName.My, StoreLocation.CurrentUser);
store.Open(OpenFlags.OpenExistingOnly | OpenFlags.ReadOnly);
X509Certificate2Collection certificates = store.Certificates.Find(X509FindType.FindByThumbprint, CERTIFICATE_THUMB_PRINT, false);
if (certificates.Count == 0)
{
    // ""Certificate not installed.""
}
else
{
    certificate = certificates[0];
}
store.Close();
</code></pre>

<p>For that, of course, if has to be installed on the machine.</p>

<p>I think this is a nice solution to this problem, because it adds an additional layer of security to it (the app must be run on the machine, on which the certificate is installed and as the user who installed it, also the file itself can be stored in a safe place somewhere else).</p>
","24847","<c#><private-key><x509certificate2><pfx>","7","2","5","2018-05-17 07:36:31","20269161","4","4","41956","","2015-05-08 04:50:44","2013-11-25 16:30:07",""
"20198124","Read Private Key from PFX-file","<p>I know, there are <em>many</em> posts about this, but still I cannot find a solution to get this to work. I have generated a <em>PFX</em>-file with <strong>openssl</strong> on my machine like this:</p>

<pre><code>openssl x509 -req -days 365 -in ""myReqest.csr"" -signkey ""myPrivateKey.pem"" -out ""myCertificate.crt""
openssl pkcs12 -export -out ""myCertificate.pfx"" -inkey ""myPrivateKey.pem"" -in ""myCertificate.crt"" -certfile ""myCertificate.crt""
</code></pre>

<p>In my C# app, I access the private key like this:</p>

<pre><code>var cert = new X509Certificate2(""myCertificate.pfx"", ""myPassword"");
cert.HasPrivateKey; // This is always true!
cert.PrivateKey; // Works on my machine (only)
</code></pre>

<p>This works perfectly fine (on <em>my</em> machine), but when I run the same code on <em>another</em> machine, it throws: <strong><em>""Key set not found""</em></strong>, even though <code>HasPrivateKey</code> returns <code>true</code>! Shouldn't the private key be included in the *.pfx-file? Can you tell me:</p>

<ol>
<li><p>Was the certificate/private key somehow automatically installed on my machine by <em>openssl</em> when I created it?</p></li>
<li><p>How can I read the private key from the *.PFX-file (or alternatively from the *.PEM-file)?</p></li>
</ol>

<p>StackTrace of Exception:</p>

<pre><code>at System.Security.Cryptography.Utils.CreateProvHandle(CspParameters parameters, Boolean randomKeyContaier)
at System.Security.Cryptography.Utils.GetKeyPairHelper(CspAlgorithmType keyType, CspParameters parameters, Boolean randomKeyContaier, Int32 dwKeySize, SafeProvHandle&amp; safeProvHandle, SafeKeyHandle&amp; safeKeyHandle)
at System.Security.Cryptography.RSACryptoServiceProvider.GetKeyPair()
at System.Security.Cryptography.RSACryptoServiceProvider..ctor(Int32 dwKeySize, CspParameters parameters, Boolean useDefaultKeySize)
at System.Security.Cryptography.RSACryptoServiceProvider..ctor(CspParameters parameter)
at System.Security.Cryptography.X509Certificates.X509Certificate2.get_PrivateKey()
</code></pre>

<p><strong><em>Update:</em></strong></p>

<p>I've found out, that the following does work:</p>

<pre><code>// on my machine
// read certificate from file (exportable!)
X509Certificate2 cert = new X509Certificate2(""filename.pfx"", ""password"", X509KeyStorageFlags.Exportable)
// sign data etc.
((RSACryptoServiceProvider)cert.PrivateKey).SignData(...
// export private key to XML-file
File.WriteAllText(""filename.xml"", cert.PrivateKey.ToXmlString(true));

// on the other machine
// create new RSA object
RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();
// import private key from xml
rsa.FromXmlString(File.ReadAllText(""filename.xml""));
// verify data etc.
rsa.VerifyData(...
</code></pre>

<p>However, to me, this is only a workaround, I would like to do it an a more conventional/standard compliant way!</p>
","<p>Perhaps you can tell us a bit more about why you want to do this. There certainly are good reasons to want to do this, such as writing a program that would sit on your company's internal server to automate product builds.</p>

<p>But if you intend to distribute this application outside of a high trust zone (e.g. to customers) then the answer is <strong>DO NOT DO IT!</strong> You should never give out your private key file. That opens it up to brute force attack of your password, (which is certainly much weaker than the private key itself). And if you distribute your application, then your password is included in <strong>plain text</strong> in the MSIL code. There it can be easily viewed using any managed code disassembler (e.g. Reflector) , and it can probably even be viewed with a text or hex editor.</p>

<p>In summary, distributing your private key file along with your application to someone allows them to easily sign anything they want with YOUR cert. The whole point of a private key is to keep it safely locked away in a location where it can never be accessed by anyone but you (or your organization, etc).</p>
","24847","<c#><private-key><x509certificate2><pfx>","7","2","5","2018-05-17 07:36:31","20269161","4","4","41956","","2015-05-08 04:50:44","2013-11-25 16:30:07",""
"20198124","Read Private Key from PFX-file","<p>I know, there are <em>many</em> posts about this, but still I cannot find a solution to get this to work. I have generated a <em>PFX</em>-file with <strong>openssl</strong> on my machine like this:</p>

<pre><code>openssl x509 -req -days 365 -in ""myReqest.csr"" -signkey ""myPrivateKey.pem"" -out ""myCertificate.crt""
openssl pkcs12 -export -out ""myCertificate.pfx"" -inkey ""myPrivateKey.pem"" -in ""myCertificate.crt"" -certfile ""myCertificate.crt""
</code></pre>

<p>In my C# app, I access the private key like this:</p>

<pre><code>var cert = new X509Certificate2(""myCertificate.pfx"", ""myPassword"");
cert.HasPrivateKey; // This is always true!
cert.PrivateKey; // Works on my machine (only)
</code></pre>

<p>This works perfectly fine (on <em>my</em> machine), but when I run the same code on <em>another</em> machine, it throws: <strong><em>""Key set not found""</em></strong>, even though <code>HasPrivateKey</code> returns <code>true</code>! Shouldn't the private key be included in the *.pfx-file? Can you tell me:</p>

<ol>
<li><p>Was the certificate/private key somehow automatically installed on my machine by <em>openssl</em> when I created it?</p></li>
<li><p>How can I read the private key from the *.PFX-file (or alternatively from the *.PEM-file)?</p></li>
</ol>

<p>StackTrace of Exception:</p>

<pre><code>at System.Security.Cryptography.Utils.CreateProvHandle(CspParameters parameters, Boolean randomKeyContaier)
at System.Security.Cryptography.Utils.GetKeyPairHelper(CspAlgorithmType keyType, CspParameters parameters, Boolean randomKeyContaier, Int32 dwKeySize, SafeProvHandle&amp; safeProvHandle, SafeKeyHandle&amp; safeKeyHandle)
at System.Security.Cryptography.RSACryptoServiceProvider.GetKeyPair()
at System.Security.Cryptography.RSACryptoServiceProvider..ctor(Int32 dwKeySize, CspParameters parameters, Boolean useDefaultKeySize)
at System.Security.Cryptography.RSACryptoServiceProvider..ctor(CspParameters parameter)
at System.Security.Cryptography.X509Certificates.X509Certificate2.get_PrivateKey()
</code></pre>

<p><strong><em>Update:</em></strong></p>

<p>I've found out, that the following does work:</p>

<pre><code>// on my machine
// read certificate from file (exportable!)
X509Certificate2 cert = new X509Certificate2(""filename.pfx"", ""password"", X509KeyStorageFlags.Exportable)
// sign data etc.
((RSACryptoServiceProvider)cert.PrivateKey).SignData(...
// export private key to XML-file
File.WriteAllText(""filename.xml"", cert.PrivateKey.ToXmlString(true));

// on the other machine
// create new RSA object
RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();
// import private key from xml
rsa.FromXmlString(File.ReadAllText(""filename.xml""));
// verify data etc.
rsa.VerifyData(...
</code></pre>

<p>However, to me, this is only a workaround, I would like to do it an a more conventional/standard compliant way!</p>
","<p>You have to load the certificate like this:</p>

<p><code>X509Certificate2 cert = new X509Certificate2(""a.pfx"", ""password"", X509KeyStorageFlags.MachineKeySet | X509KeyStorageFlags.PersistKeySet)</code></p>

<p>This post explains why <a href=""http://paulstovell.com/blog/x509certificate2"" rel=""nofollow noreferrer"">http://paulstovell.com/blog/x509certificate2</a></p>
","24847","<c#><private-key><x509certificate2><pfx>","7","2","5","2018-05-17 07:36:31","20269161","4","4","41956","","2015-05-08 04:50:44","2013-11-25 16:30:07",""
"20198124","Read Private Key from PFX-file","<p>I know, there are <em>many</em> posts about this, but still I cannot find a solution to get this to work. I have generated a <em>PFX</em>-file with <strong>openssl</strong> on my machine like this:</p>

<pre><code>openssl x509 -req -days 365 -in ""myReqest.csr"" -signkey ""myPrivateKey.pem"" -out ""myCertificate.crt""
openssl pkcs12 -export -out ""myCertificate.pfx"" -inkey ""myPrivateKey.pem"" -in ""myCertificate.crt"" -certfile ""myCertificate.crt""
</code></pre>

<p>In my C# app, I access the private key like this:</p>

<pre><code>var cert = new X509Certificate2(""myCertificate.pfx"", ""myPassword"");
cert.HasPrivateKey; // This is always true!
cert.PrivateKey; // Works on my machine (only)
</code></pre>

<p>This works perfectly fine (on <em>my</em> machine), but when I run the same code on <em>another</em> machine, it throws: <strong><em>""Key set not found""</em></strong>, even though <code>HasPrivateKey</code> returns <code>true</code>! Shouldn't the private key be included in the *.pfx-file? Can you tell me:</p>

<ol>
<li><p>Was the certificate/private key somehow automatically installed on my machine by <em>openssl</em> when I created it?</p></li>
<li><p>How can I read the private key from the *.PFX-file (or alternatively from the *.PEM-file)?</p></li>
</ol>

<p>StackTrace of Exception:</p>

<pre><code>at System.Security.Cryptography.Utils.CreateProvHandle(CspParameters parameters, Boolean randomKeyContaier)
at System.Security.Cryptography.Utils.GetKeyPairHelper(CspAlgorithmType keyType, CspParameters parameters, Boolean randomKeyContaier, Int32 dwKeySize, SafeProvHandle&amp; safeProvHandle, SafeKeyHandle&amp; safeKeyHandle)
at System.Security.Cryptography.RSACryptoServiceProvider.GetKeyPair()
at System.Security.Cryptography.RSACryptoServiceProvider..ctor(Int32 dwKeySize, CspParameters parameters, Boolean useDefaultKeySize)
at System.Security.Cryptography.RSACryptoServiceProvider..ctor(CspParameters parameter)
at System.Security.Cryptography.X509Certificates.X509Certificate2.get_PrivateKey()
</code></pre>

<p><strong><em>Update:</em></strong></p>

<p>I've found out, that the following does work:</p>

<pre><code>// on my machine
// read certificate from file (exportable!)
X509Certificate2 cert = new X509Certificate2(""filename.pfx"", ""password"", X509KeyStorageFlags.Exportable)
// sign data etc.
((RSACryptoServiceProvider)cert.PrivateKey).SignData(...
// export private key to XML-file
File.WriteAllText(""filename.xml"", cert.PrivateKey.ToXmlString(true));

// on the other machine
// create new RSA object
RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();
// import private key from xml
rsa.FromXmlString(File.ReadAllText(""filename.xml""));
// verify data etc.
rsa.VerifyData(...
</code></pre>

<p>However, to me, this is only a workaround, I would like to do it an a more conventional/standard compliant way!</p>
","<p>You can also obtain the private through the below method.</p>

<pre><code>System.Security.Cryptography.X509Certificates.X509Certificate2 certificate = LoadCertificate(""Certificate.pfx"", ""PasswordofCertificate"");

RSACryptoServiceProvider key = certificate.PrivateKey as RSACryptoServiceProvider;
</code></pre>

<p>From certificate variable, you can also obtain other information such as Public Key etc.</p>
","24847","<c#><private-key><x509certificate2><pfx>","7","0","5","2018-05-17 07:36:31","20269161","4","4","41956","","2015-05-08 04:50:44","2013-11-25 16:30:07",""
"6178711","Exception when trying to read a PrivateKey from Windows certstore","<p>I created a private and public key pair using OpenSSL and then I generated a .p12 file to import it into my Windows certstore. The key pair and .p12 files were created in Windows XP and I am trying to use it in Windows 7.
I am trying to access the key from within a Web Service (.svc) in IIS.
If I try to read the private key from a standalone app, I can do it without any problems, but when I try to read it from my web app, I always get the following exception:</p>

<pre><code>'cert.PrivateKey' threw an exception of type 'System.Security.Cryptography.CryptographicException'
</code></pre>

<p>And this is the whole stacktrace:</p>

<pre><code>en System.Security.Cryptography.Utils.CreateProvHandle(CspParameters parameters, Boolean randomKeyContainer)
en System.Security.Cryptography.Utils.GetKeyPairHelper(CspAlgorithmType keyType, CspParameters parameters, Boolean randomKeyContainer, Int32 dwKeySize, SafeProvHandle&amp; safeProvHandle, SafeKeyHandle&amp; safeKeyHandle)
en System.Security.Cryptography.RSACryptoServiceProvider.GetKeyPair()
en System.Security.Cryptography.RSACryptoServiceProvider..ctor(Int32 dwKeySize, CspParameters parameters, Boolean useDefaultKeySize)
en System.Security.Cryptography.X509Certificates.X509Certificate2.get_PrivateKey()
en ValidKeyDll.ValidKey.getLlaveDeAlmacen(String almacen, Boolean esLlavePrivada) en C:\Users\desarrollo\Documents\ValidKeyDll\ValidKeyDll\ValidKey.cs:línea 58
en ValidKeyDll.ValidKey.firmaCadena(String almacen, String cadenaFirmar) en C:\Users\desarrollo\Documents\ValidKeyDll\ValidKeyDll\ValidKey.cs:línea 117
</code></pre>

<p>And this is my part of the code that reads the key:</p>

<pre><code>X509Store store = new X509Store(StoreName.My, StoreLocation.LocalMachine);
store.Open(OpenFlags.ReadOnly);
RSACryptoServiceProvider csp = null;
foreach (X509Certificate2 cert in store.Certificates)
{
   if (cert.Subject.Contains(almacen))
   {
      if (cert.NotAfter.CompareTo(System.DateTime.Now) &lt;= 0)
         throw new CertificadoVencidoException();

      if (isPrivateKey)
         csp = (RSACryptoServiceProvider)cert.PrivateKey;
      else
         csp = (RSACryptoServiceProvider)cert.PublicKey.Key;

      break;
   }
}
</code></pre>

<p>I suppose it has to do with some kind of permission issue, but I caanot find out what it is... Please if anyone has any suggestions it will be greatly appreciated.</p>

<p>THINGS TO CONSIDER:</p>

<ul>
<li>The private key IS exportable.</li>
<li>The user IIS_IUSRS has permissions on the certificate.</li>
</ul>
","<p>Yes, it is a problem with permissions. I have struggled with this some time ago. Currently I use <a href=""http://www.microsoft.com/downloads/en/details.aspx?familyid=c42e27ac-3409-40e9-8667-c748e422833f&amp;displaylang=en"" rel=""nofollow"">winhttpcertcfg</a> to add appropriate permissions.</p>

<p>You should also check this link: <a href=""http://benoit808.wordpress.com/2008/10/31/cryptographicexception-the-handle-is-invalid/"" rel=""nofollow"">http://benoit808.wordpress.com/2008/10/31/cryptographicexception-the-handle-is-invalid/</a>.</p>

<p>There is also article about it <a href=""http://www.stevefenton.co.uk/Content/Blog/Date/201101/Blog/X509-Certificates-On-Windows-Server-2003/"" rel=""nofollow"">http://www.stevefenton.co.uk/Content/Blog/Date/201101/Blog/X509-Certificates-On-Windows-Server-2003/</a>. You may also need to add permissions for IIS_WPG and IUSR account (the article doesn't mention it).</p>
","24295","<c#><private-key><x509certificate2>","4","1","2","2015-07-12 02:50:15","6182139","0","3","41956","","2015-07-12 02:50:15","2011-05-30 16:35:36",""
"6178711","Exception when trying to read a PrivateKey from Windows certstore","<p>I created a private and public key pair using OpenSSL and then I generated a .p12 file to import it into my Windows certstore. The key pair and .p12 files were created in Windows XP and I am trying to use it in Windows 7.
I am trying to access the key from within a Web Service (.svc) in IIS.
If I try to read the private key from a standalone app, I can do it without any problems, but when I try to read it from my web app, I always get the following exception:</p>

<pre><code>'cert.PrivateKey' threw an exception of type 'System.Security.Cryptography.CryptographicException'
</code></pre>

<p>And this is the whole stacktrace:</p>

<pre><code>en System.Security.Cryptography.Utils.CreateProvHandle(CspParameters parameters, Boolean randomKeyContainer)
en System.Security.Cryptography.Utils.GetKeyPairHelper(CspAlgorithmType keyType, CspParameters parameters, Boolean randomKeyContainer, Int32 dwKeySize, SafeProvHandle&amp; safeProvHandle, SafeKeyHandle&amp; safeKeyHandle)
en System.Security.Cryptography.RSACryptoServiceProvider.GetKeyPair()
en System.Security.Cryptography.RSACryptoServiceProvider..ctor(Int32 dwKeySize, CspParameters parameters, Boolean useDefaultKeySize)
en System.Security.Cryptography.X509Certificates.X509Certificate2.get_PrivateKey()
en ValidKeyDll.ValidKey.getLlaveDeAlmacen(String almacen, Boolean esLlavePrivada) en C:\Users\desarrollo\Documents\ValidKeyDll\ValidKeyDll\ValidKey.cs:línea 58
en ValidKeyDll.ValidKey.firmaCadena(String almacen, String cadenaFirmar) en C:\Users\desarrollo\Documents\ValidKeyDll\ValidKeyDll\ValidKey.cs:línea 117
</code></pre>

<p>And this is my part of the code that reads the key:</p>

<pre><code>X509Store store = new X509Store(StoreName.My, StoreLocation.LocalMachine);
store.Open(OpenFlags.ReadOnly);
RSACryptoServiceProvider csp = null;
foreach (X509Certificate2 cert in store.Certificates)
{
   if (cert.Subject.Contains(almacen))
   {
      if (cert.NotAfter.CompareTo(System.DateTime.Now) &lt;= 0)
         throw new CertificadoVencidoException();

      if (isPrivateKey)
         csp = (RSACryptoServiceProvider)cert.PrivateKey;
      else
         csp = (RSACryptoServiceProvider)cert.PublicKey.Key;

      break;
   }
}
</code></pre>

<p>I suppose it has to do with some kind of permission issue, but I caanot find out what it is... Please if anyone has any suggestions it will be greatly appreciated.</p>

<p>THINGS TO CONSIDER:</p>

<ul>
<li>The private key IS exportable.</li>
<li>The user IIS_IUSRS has permissions on the certificate.</li>
</ul>
","<p>I finally cracked down the problem, but couldn't post the answer until now (because I'm a beginer):</p>

<p>The thing is that I was importing the .p12 the wrong way. I was double clicking it and following the steps. What this did was to put the certificate in the Current User - Personal certificate store, so I thought that by just moving the cert from that store to the Local Machine store was enough... but oh surprise! it was not.
After much revision, I found that the IIS has the capability of importing certificates from within itself, and that this puts the certificate directly in the Local Machine cert store.
If anyone has the some problem or just wants to see how to do this, these are the steps:</p>

<ul>
<li>Open the IIS.</li>
<li>Go to the Server Certificates (sorry if you don't find the exact words, my Windows is in Spanish)</li>
<li>Select Import</li>
<li>Select your file. If your file is a .p12 like mine, then select to view *.*</li>
<li>Type in the password</li>
<li>Accept... and voilá</li>
</ul>
","24295","<c#><private-key><x509certificate2>","4","4","2","2015-07-12 02:50:15","6182139","0","3","41956","","2015-07-12 02:50:15","2011-05-30 16:35:36",""
"46373723","Please create a master key in the database or open the master key in the session before performing this operation","<p>I get the following error on secondary replicas when trying to restore an encrypted backup even though the replica has the master key (dmk), service master key, certificates and private keys restored from the originating/primary server that generated the backup.</p>

<pre><code>Msg 15581, Level 16, State 7, Line 137
Please create a master key in the database or open the master key in the session before performing this operation.
Msg 3013, Level 16, State 1, Line 137
VERIFY DATABASE is terminating abnormally.
</code></pre>

<p>To circumvent the error I open and close the master key around the operation like such. However, on the primary, I don't need to open and close the master key to do the operation. </p>

<pre><code>OPEN MASTER KEY DECRYPTION BY PASSWORD = 'MyTest!M4st3rPass';
RESTORE VERIFYONLY FROM DISK = '\\FS1\SqlBackups\SQL01\SystemDbs\msdb_backup_2017_09_22_171915_6346240.bak' WITH FILE = 1, NOUNLOAD, NOREWIND;
CLOSE MASTER KEY ;
</code></pre>

<p>I believe this is because the primary has the backup history with the encryption thumbprint, but I am wondering if I am missing something else related to the secondaries.</p>

<p>However, after all, since the cert is restored on the secondaries I assign it to the SystemsDB Backup Maintenance Plan options for Backup Encryption, yet the job fails if I keep the Verify option checked for the same reason. </p>

<pre><code>Source: Back Up Database Task
Executing query ""BACKUP DATABASE [master] TO  DISK = N'\\FS1\SqlBac..."".: 50% complete
End Progress  
Error: 2017-09-22 17:08:09.28
Code: 0xC002F210
Source: Back Up Database Task Execute SQL Task
**Description**: Executing the query ""declare @backupSetId as int  select @backupSetId =..."" 
failed with the following error: ""Please create a master key in the database or open the master key in the session before performing this operation.
VERIFY DATABASE is terminating abnormally."".
Possible failure reasons: Problems with the query, ""ResultSet"" property not set correctly, parameters not set correctly, or connection not established correctly.
End Error 
</code></pre>
","<p>I am not certain if this is exactly what you are looking for, but the OPEN MASTER KEY remarks had something that seemed relevant.</p>

<p>You will 100% want to test this not in production, but it seems that once the master key has been opened, you have the option to not require that with the <code>ALTER MASTER KEY REGENERATE</code> command.</p>

<blockquote>
  <p>If the database master key was encrypted with the service master key,
  it will be automatically opened when it is needed for decryption or
  encryption. In this case, it is not necessary to use the OPEN MASTER
  KEY statement. </p>
  
  <p>When a database is first attached or restored to a
  new instance of SQL Server, a copy of the database master key
  (encrypted by the service master key) is not yet stored in the server.</p>
  
  <p>You must use the OPEN MASTER KEY statement to decrypt the database
  master key (DMK). Once the DMK has been decrypted, you have the option
  of enabling automatic decryption in the future by using the ALTER
  MASTER KEY REGENERATE statement to provision the server with a copy of
  the DMK, encrypted with the service master key (SMK). </p>
  
  <p>When a database has been upgraded from an earlier version, the DMK should be
  regenerated to use the newer AES algorithm. For more information about
  regenerating the DMK, see ALTER MASTER KEY (Transact-SQL). The time
  required to regenerate the DMK key to upgrade to AES depends upon the
  number of objects protected by the DMK. Regenerating the DMK key to
  upgrade to AES is only necessary once, and has no impact on future
  regenerations as part of a key rotation strategy.</p>
</blockquote>

<p><a href=""https://docs.microsoft.com/en-us/sql/t-sql/statements/open-master-key-transact-sql"" rel=""nofollow noreferrer"">https://docs.microsoft.com/en-us/sql/t-sql/statements/open-master-key-transact-sql</a></p>
","23644","<sql><encryption><certificate><sql-server-2016><private-key>","7","1","3","2019-09-23 14:22:35","46413312","0","2","1194402","","2019-09-23 14:22:35","2017-09-22 21:52:56",""
"46373723","Please create a master key in the database or open the master key in the session before performing this operation","<p>I get the following error on secondary replicas when trying to restore an encrypted backup even though the replica has the master key (dmk), service master key, certificates and private keys restored from the originating/primary server that generated the backup.</p>

<pre><code>Msg 15581, Level 16, State 7, Line 137
Please create a master key in the database or open the master key in the session before performing this operation.
Msg 3013, Level 16, State 1, Line 137
VERIFY DATABASE is terminating abnormally.
</code></pre>

<p>To circumvent the error I open and close the master key around the operation like such. However, on the primary, I don't need to open and close the master key to do the operation. </p>

<pre><code>OPEN MASTER KEY DECRYPTION BY PASSWORD = 'MyTest!M4st3rPass';
RESTORE VERIFYONLY FROM DISK = '\\FS1\SqlBackups\SQL01\SystemDbs\msdb_backup_2017_09_22_171915_6346240.bak' WITH FILE = 1, NOUNLOAD, NOREWIND;
CLOSE MASTER KEY ;
</code></pre>

<p>I believe this is because the primary has the backup history with the encryption thumbprint, but I am wondering if I am missing something else related to the secondaries.</p>

<p>However, after all, since the cert is restored on the secondaries I assign it to the SystemsDB Backup Maintenance Plan options for Backup Encryption, yet the job fails if I keep the Verify option checked for the same reason. </p>

<pre><code>Source: Back Up Database Task
Executing query ""BACKUP DATABASE [master] TO  DISK = N'\\FS1\SqlBac..."".: 50% complete
End Progress  
Error: 2017-09-22 17:08:09.28
Code: 0xC002F210
Source: Back Up Database Task Execute SQL Task
**Description**: Executing the query ""declare @backupSetId as int  select @backupSetId =..."" 
failed with the following error: ""Please create a master key in the database or open the master key in the session before performing this operation.
VERIFY DATABASE is terminating abnormally."".
Possible failure reasons: Problems with the query, ""ResultSet"" property not set correctly, parameters not set correctly, or connection not established correctly.
End Error 
</code></pre>
","<p>Fixed.</p>

<p>Referenced: <a href=""https://docs.microsoft.com/en-us/sql/relational-databases/security/encryption/sql-server-and-database-encryption-keys-database-engine"" rel=""nofollow noreferrer"">https://docs.microsoft.com/en-us/sql/relational-databases/security/encryption/sql-server-and-database-encryption-keys-database-engine</a></p>

<p>This paragraph gave it away:</p>

<blockquote>
  <p>The copy of the DMK stored in the <strong>master</strong> system database is silently updated whenever the DMK is changed. However, this default can be changed by using the <strong>DROP ENCRYPTION BY SERVICE MASTER KEY</strong> option of the <strong>ALTER MASTER KEY</strong> statement. A DMK that is not encrypted by the service master key must be opened by using the <strong>OPEN MASTER KEY</strong> statement and a password.</p>
</blockquote>

<p>Ran the following on my secondary nodes. </p>

<ol>
<li>Drop Certificate...</li>
<li>Drop master key</li>
<li>Create master key...</li>
<li>Create certificate from file...</li>
</ol>

<p>Arrived at the solution after checking this.</p>

<pre><code>--on primary, output: master 
select name from sys.databases where is_master_key_encrypted_by_server=1

--on secondary, output: nothing...
select name from sys.databases where is_master_key_encrypted_by_server=1
</code></pre>

<p>So I figured if I could get the master key to be encrypted by default by the service master key then this would automate the decryption.</p>

<pre><code>--on secondary
drop certificate [BackupCertWithPK]
drop master key

--Skipped restore master key from file.
--Instead, I ran create master key with password.
create master key encryption by password = 'MyTest!Mast3rP4ss';

--verify by open/close.
open master key decryption by password = 'MyTest!Mast3rP4ss';
close master key;

--proceed to restore/create cert from file.
create cerfiticate [BackupCertWithPK] 
from file = '\\FS1\SqlBackups\SQL1\Donot_delete_SQL1-Primary_BackupCertWithPK.cer' 
with private key (file = '\\FS1\SqlBackups\SQL1\Donot_delete_SQL1-Primary_BackupCertWithPK.key' , decryption by password = 'key_Test!prim@ryP4ss') ; 
</code></pre>

<p>After this ran the above select again.</p>

<pre><code>--on secondary, output: master, now there was hope again!
select name from sys.databases where is_master_key_encrypted_by_server=1
</code></pre>

<p>Finally, I re-ran my backup job with options set for Verify and Encryption successfully. Verify step did not fail nor prompted to open/close the master key.</p>

<p>The following simply worked as intended without needing to open/close the master key.</p>

<pre><code>RESTORE VERIFYONLY FROM DISK = '\\FS1\SqlBackups\SQL01\SystemDbs\msdb_backup_2017_09_22_171915_6346240.bak' WITH FILE = 1, NOUNLOAD, NOREWIND;
</code></pre>

<p>Wohooo! Mission accomplished. </p>
","23644","<sql><encryption><certificate><sql-server-2016><private-key>","7","4","3","2019-09-23 14:22:35","46413312","0","2","1194402","","2019-09-23 14:22:35","2017-09-22 21:52:56",""
"46373723","Please create a master key in the database or open the master key in the session before performing this operation","<p>I get the following error on secondary replicas when trying to restore an encrypted backup even though the replica has the master key (dmk), service master key, certificates and private keys restored from the originating/primary server that generated the backup.</p>

<pre><code>Msg 15581, Level 16, State 7, Line 137
Please create a master key in the database or open the master key in the session before performing this operation.
Msg 3013, Level 16, State 1, Line 137
VERIFY DATABASE is terminating abnormally.
</code></pre>

<p>To circumvent the error I open and close the master key around the operation like such. However, on the primary, I don't need to open and close the master key to do the operation. </p>

<pre><code>OPEN MASTER KEY DECRYPTION BY PASSWORD = 'MyTest!M4st3rPass';
RESTORE VERIFYONLY FROM DISK = '\\FS1\SqlBackups\SQL01\SystemDbs\msdb_backup_2017_09_22_171915_6346240.bak' WITH FILE = 1, NOUNLOAD, NOREWIND;
CLOSE MASTER KEY ;
</code></pre>

<p>I believe this is because the primary has the backup history with the encryption thumbprint, but I am wondering if I am missing something else related to the secondaries.</p>

<p>However, after all, since the cert is restored on the secondaries I assign it to the SystemsDB Backup Maintenance Plan options for Backup Encryption, yet the job fails if I keep the Verify option checked for the same reason. </p>

<pre><code>Source: Back Up Database Task
Executing query ""BACKUP DATABASE [master] TO  DISK = N'\\FS1\SqlBac..."".: 50% complete
End Progress  
Error: 2017-09-22 17:08:09.28
Code: 0xC002F210
Source: Back Up Database Task Execute SQL Task
**Description**: Executing the query ""declare @backupSetId as int  select @backupSetId =..."" 
failed with the following error: ""Please create a master key in the database or open the master key in the session before performing this operation.
VERIFY DATABASE is terminating abnormally."".
Possible failure reasons: Problems with the query, ""ResultSet"" property not set correctly, parameters not set correctly, or connection not established correctly.
End Error 
</code></pre>
","<p>I had the same situation, but instead of recreating the MDK I ran the following to fix the issue:
ALTER MASTER KEY ADD ENCRYPTION BY SERVICE MASTER KEY</p>
","23644","<sql><encryption><certificate><sql-server-2016><private-key>","7","1","3","2019-09-23 14:22:35","46413312","0","2","1194402","","2019-09-23 14:22:35","2017-09-22 21:52:56",""
"20102570","Storing RSA Private Key Android","<p>During the creation of simple messaging android application that is to encrypt/decrypt messages and send them through internet, I decided to use RSA public/private key encryption. Question is how to store private key, so that even if phone is maliciously rooted, the key would stay safe? As far as I understood, KeyStore is used for certificates, and cannot be used for this? Should I encrypt private key as text file with AES? I have very little experience with security, so please feel free to correct my ideas, and give your opinion!</p>

<p>Kind Regards.</p>
","<p>I think KeyStore could be suitable for your use. It is able to store RSA keys and encrypts them using AES so even with root access, they cannot be extracted without the password or bruteforcing.</p>

<p>There's a good post here about using KeyStore: <a href=""http://nelenkov.blogspot.fr/2012/05/storing-application-secrets-in-androids.html"" rel=""noreferrer"">http://nelenkov.blogspot.fr/2012/05/storing-application-secrets-in-androids.html</a></p>
","23282","<android><encryption><storage><private-key>","20","8","3","2015-08-21 11:16:13","","2","5","","","","2013-11-20 17:18:35",""
"20102570","Storing RSA Private Key Android","<p>During the creation of simple messaging android application that is to encrypt/decrypt messages and send them through internet, I decided to use RSA public/private key encryption. Question is how to store private key, so that even if phone is maliciously rooted, the key would stay safe? As far as I understood, KeyStore is used for certificates, and cannot be used for this? Should I encrypt private key as text file with AES? I have very little experience with security, so please feel free to correct my ideas, and give your opinion!</p>

<p>Kind Regards.</p>
","<p>You can persist your RSA public/private key using SharedPreference on android. 
In order to keep your keys safe when the phone is maliciously rooted, you can do the following steps:</p>

<p>1: When you want to ecrypt any data generate a key pair.<br>
2: Prompt the user for a password.<br>
3: Use that password to generate a symmetric key to encrypt your private key.<br>
4: You can encrypt your data using the public key and decrypt using private key.<br>
5: You can keep a session for the password prompted in step 2. During that session, you can use the symmetric key(generated from password) to encrypt/decrypt the private key.</p>

<p>The following code snippet shows to how to store &amp; fetch the public key</p>

<pre><code>public void setPublicKey(PublicKey publicKey, String key, Context context) {

    byte[] pubKey = publicKey.getEncoded();
    String pubKeyString = Base64.encodeBytes(pubKey);
    this.setString(key, pubKeyString, context);
}

public PublicKey getPublicKey(String key,Context context) {

    PublicKey pKey = null;
    try {

        String pubString = this.getString(key, context);

        if(pubString!=null) {
            byte[] binCpk = Base64.decode(pubString);
            KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
            X509EncodedKeySpec publicKeySpec = new X509EncodedKeySpec(binCpk);
            pKey = keyFactory.generatePublic(publicKeySpec);
        }
        }catch(Exception e){
    }
    return pKey;
}
</code></pre>

<p>The following code snippet shows how to store&amp; fetch the private key.</p>

<pre><code>public void setPrivateKey(PrivateKey privateKey, String key, Context context) {

    byte[] priKey = privateKey.getEncoded();
    String priKeyString = Base64.encodeBytes(priKey);
    this.setString(key, priKeyString, context);
}

public PrivateKey getPrivateKey(String key, Context context) {

    PrivateKey privateKey = null;

    try {
        String privateString = this.getString(key, context);
        if(privateString!=null){
            byte[] binCpk = Base64.decode(privateString);
            KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
            PKCS8EncodedKeySpec privateKeySpec = new PKCS8EncodedKeySpec(binCpk);
            privateKey = keyFactory.generatePrivate(privateKeySpec);
        }
    } 
    catch(Exception e){
    }
    return privateKey;
}
</code></pre>
","23282","<android><encryption><storage><private-key>","20","4","3","2015-08-21 11:16:13","","2","5","","","","2013-11-20 17:18:35",""
"20102570","Storing RSA Private Key Android","<p>During the creation of simple messaging android application that is to encrypt/decrypt messages and send them through internet, I decided to use RSA public/private key encryption. Question is how to store private key, so that even if phone is maliciously rooted, the key would stay safe? As far as I understood, KeyStore is used for certificates, and cannot be used for this? Should I encrypt private key as text file with AES? I have very little experience with security, so please feel free to correct my ideas, and give your opinion!</p>

<p>Kind Regards.</p>
","<p>None of the keystore(P12, JKS, AKS) in file system cannot be enough secure for holding RSA private keys. Only SmartCard or secure tokens can provide high level security. Read this book: ""Android Security Internals"". In this book you will find good description of Android Security and JCA providers.</p>
","23282","<android><encryption><storage><private-key>","20","2","3","2015-08-21 11:16:13","","2","5","","","","2013-11-20 17:18:35",""
"16075846","How to change a .p12 file to .key file","<p>I have a <code>.p12</code> file, I can also transfer it to a <code>.pem</code> file, but how to transfer it as a <code>.key</code> file?</p>
","<p><code>openssl pkcs12 -in out.p12 -nodes -out private.key -nocerts</code> </p>

<p>openssl will ask you for a password, then store the unencrypted private key into the file <code>private.key</code></p>

<p>Documentation: <a href=""https://www.openssl.org/docs/man1.1.0/apps/pkcs12.html"" rel=""noreferrer"">https://www.openssl.org/docs/man1.1.0/apps/pkcs12.html</a></p>
","23065","<ssl><private-key>","14","30","1","2017-02-08 08:18:27","","0","3","2164262","","2013-04-18 06:24:16","2013-04-18 06:20:54",""
"11670647","Adding private key into iOS Keychain","<p>I am trying to add a private key into the iOS keychain. The certificate (public key) works fine but the private key refuses... I am totally confused why the following code does not work.</p>

<p>First I am checking if the current key (=key in case of that the Keychain is a key/value store) is 'free' in the Keychain. Then I am going to add the private key.</p>

<pre><code>CFStringRef labelstring = CFStringCreateWithCString(NULL, [key cStringUsingEncoding:NSUTF8StringEncoding], kCFStringEncodingUTF8);

NSArray* keys = [NSArray arrayWithObjects:(__bridge id)kSecClass,kSecAttrLabel,kSecReturnData,kSecAttrAccessible,nil];
NSArray* values = [NSArray arrayWithObjects:(__bridge id)kSecClassKey,labelstring,kCFBooleanTrue,kSecAttrAccessibleWhenUnlocked,nil];
NSMutableDictionary* searchdict = [NSMutableDictionary dictionaryWithObjects:values forKeys:keys];

CFRelease(labelstring);

NSMutableDictionary *query = searchdict;


CFTypeRef item = NULL;
OSStatus error = SecItemCopyMatching((__bridge_retained CFDictionaryRef) query, &amp;item);

if (error)
{
    NSLog(@""Error: %ld (statuscode)"", error);
}

if(error != errSecItemNotFound)
{
    SecItemDelete((__bridge_retained CFDictionaryRef) query);
}

[query setObject:(id)data forKey:(__bridge id)kSecValueData];

OSStatus status = SecItemAdd((__bridge_retained CFDictionaryRef) query, &amp;item);

if(status)
{
    NSLog(@""Keychain error occured: %ld (statuscode)"", status);
    return NO;
}
</code></pre>

<p>The debug output is the following:</p>

<pre><code>2012-07-26 15:33:03.772 App[15529:1b03] Error: -25300 (statuscode)
2012-07-26 15:33:11.195 App[15529:1b03] Keychain error occured: -25299 (statuscode)
</code></pre>

<p>The first error code <code>-25300</code> represents <code>errSecItemNotFound</code>. So there is no value stored for this key. Then, when I try to add the private key into the Keychain I get <code>-25299</code> which means  <code>errSecDuplicateItem</code>. I do not understand this. Why is this happening?</p>

<p>Does anyone have a clue or hint on this?</p>

<p>Apple's error codes:</p>

<pre><code>errSecSuccess                = 0,       /* No error. */
errSecUnimplemented          = -4,      /* Function or operation not implemented. */
errSecParam                  = -50,     /* One or more parameters passed to a function where not valid. */
errSecAllocate               = -108,    /* Failed to allocate memory. */
errSecNotAvailable           = -25291,  /* No keychain is available. You may need to restart your computer. */
errSecDuplicateItem          = -25299,  /* The specified item already exists in the keychain. */
errSecItemNotFound           = -25300,  /* The specified item could not be found in the keychain. */
errSecInteractionNotAllowed  = -25308,  /* User interaction is not allowed. */
errSecDecode                 = -26275,  /* Unable to decode the provided data. */
errSecAuthFailed             = -25293,  /* The user name or passphrase you entered is not correct. */ 
</code></pre>

<p>Thanks in advance!</p>

<p><strong>Update #1: I've figured out that it works only for the first time. Even when data and key is different, after the first time stored into the keychain I cannot store further keys.</strong></p>
","<p>Sorry but I'll never be able to debug your code. Apple provides some sample code (KeychainItemWrapper) which lets you save one string (I recall). Its a big help dealing with the key chain. There is a gist on the web that is a modified version of that class, but saves and restores a dictionary (archived as a data object, which is what the Apple code does to the string). This lets you save multiple items in one interface to the keychain. The gist is here <a href=""https://gist.github.com/3185191"" rel=""nofollow"">Keychain for NSDictionary/data</a></p>
","22920","<ios><objective-c><keychain><private-key>","20","1","2","2015-01-30 08:48:58","12387678","1","12","881229","","2014-02-26 00:33:29","2012-07-26 13:42:58",""
"11670647","Adding private key into iOS Keychain","<p>I am trying to add a private key into the iOS keychain. The certificate (public key) works fine but the private key refuses... I am totally confused why the following code does not work.</p>

<p>First I am checking if the current key (=key in case of that the Keychain is a key/value store) is 'free' in the Keychain. Then I am going to add the private key.</p>

<pre><code>CFStringRef labelstring = CFStringCreateWithCString(NULL, [key cStringUsingEncoding:NSUTF8StringEncoding], kCFStringEncodingUTF8);

NSArray* keys = [NSArray arrayWithObjects:(__bridge id)kSecClass,kSecAttrLabel,kSecReturnData,kSecAttrAccessible,nil];
NSArray* values = [NSArray arrayWithObjects:(__bridge id)kSecClassKey,labelstring,kCFBooleanTrue,kSecAttrAccessibleWhenUnlocked,nil];
NSMutableDictionary* searchdict = [NSMutableDictionary dictionaryWithObjects:values forKeys:keys];

CFRelease(labelstring);

NSMutableDictionary *query = searchdict;


CFTypeRef item = NULL;
OSStatus error = SecItemCopyMatching((__bridge_retained CFDictionaryRef) query, &amp;item);

if (error)
{
    NSLog(@""Error: %ld (statuscode)"", error);
}

if(error != errSecItemNotFound)
{
    SecItemDelete((__bridge_retained CFDictionaryRef) query);
}

[query setObject:(id)data forKey:(__bridge id)kSecValueData];

OSStatus status = SecItemAdd((__bridge_retained CFDictionaryRef) query, &amp;item);

if(status)
{
    NSLog(@""Keychain error occured: %ld (statuscode)"", status);
    return NO;
}
</code></pre>

<p>The debug output is the following:</p>

<pre><code>2012-07-26 15:33:03.772 App[15529:1b03] Error: -25300 (statuscode)
2012-07-26 15:33:11.195 App[15529:1b03] Keychain error occured: -25299 (statuscode)
</code></pre>

<p>The first error code <code>-25300</code> represents <code>errSecItemNotFound</code>. So there is no value stored for this key. Then, when I try to add the private key into the Keychain I get <code>-25299</code> which means  <code>errSecDuplicateItem</code>. I do not understand this. Why is this happening?</p>

<p>Does anyone have a clue or hint on this?</p>

<p>Apple's error codes:</p>

<pre><code>errSecSuccess                = 0,       /* No error. */
errSecUnimplemented          = -4,      /* Function or operation not implemented. */
errSecParam                  = -50,     /* One or more parameters passed to a function where not valid. */
errSecAllocate               = -108,    /* Failed to allocate memory. */
errSecNotAvailable           = -25291,  /* No keychain is available. You may need to restart your computer. */
errSecDuplicateItem          = -25299,  /* The specified item already exists in the keychain. */
errSecItemNotFound           = -25300,  /* The specified item could not be found in the keychain. */
errSecInteractionNotAllowed  = -25308,  /* User interaction is not allowed. */
errSecDecode                 = -26275,  /* Unable to decode the provided data. */
errSecAuthFailed             = -25293,  /* The user name or passphrase you entered is not correct. */ 
</code></pre>

<p>Thanks in advance!</p>

<p><strong>Update #1: I've figured out that it works only for the first time. Even when data and key is different, after the first time stored into the keychain I cannot store further keys.</strong></p>
","<p>The following code worked for me:</p>

<pre><code>NSMutableDictionary *query = [[NSMutableDictionary alloc] init]; 
[query setObject:(id)kSecClassKey forKey:(id)kSecClass]; 
[query setObject:(id)kSecAttrAccessibleWhenUnlocked forKey:(id)kSecAttrAccessible]; 
[query setObject:[NSNumber numberWithBool:YES] forKey:(id)kSecReturnData];

//adding access key 
[query setObject:(id)key forKey:(id)kSecAttrApplicationTag];


//removing item if it exists 
SecItemDelete((CFDictionaryRef)query);

//setting data (private key) 
[query setObject:(id)data forKey:(id)kSecValueData];

CFTypeRef persistKey; OSStatus status = SecItemAdd((CFDictionaryRef)query, &amp;persistKey);

if(status) {
    NSLog(@""Keychain error occured: %ld (statuscode)"", status);
    return NO; 
}
</code></pre>
","22920","<ios><objective-c><keychain><private-key>","20","8","2","2015-01-30 08:48:58","12387678","1","12","881229","","2014-02-26 00:33:29","2012-07-26 13:42:58",""
"34454531","Java: How can I generate PrivateKey from a string?","<p>I am trying to encode a message with <code>SH1 RSA</code> but I have no experience with security subject except some base information about <code>RSA</code>. I have been given a private key as <code>String</code>. I have managed to write following code block to do the job but I am not sure if I am doing the job securely and correctly. </p>

<p>I am not an expert but putting my private key as String in code is not secure I guess. Can anyone guide me?</p>

<pre><code>String privateKeyString = ""mykeyhere..."";
byte[] privateKeyBytes = privateKeyString.getBytes();
String encodedPrivateKey = Base64.encodeToString(privateKeyBytes, Base64.URL_SAFE);

KeyFactory factory = KeyFactory.getInstance(RSA);
PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(encodedPrivateKey.getBytes());
RSAPrivateKey privateKey = (RSAPrivateKey) factory.generatePrivate(keySpec);

Signature instance = Signature.getInstance(ALGORITHM);
instance.initSign(privateKey);
instance.update(content.getBytes());
return new String(instance.sign());
</code></pre>

<p>My private key is in form as:</p>

<pre><code>""-----BEGIN PRIVATE KEY-----\n""+
""MIIE...\n""+
""cH0iRj...\n""+
""O0Hhj...\n""+
.
.
.
""fG6...\n""+
""B6/hF...\n""+
""3Mq38...\n""+
""-----END PRIVATE KEY-----\n""
</code></pre>
","<p>Your key format is an unencrypted base64-encoded PKCS8-encoded private key. Here is an example of how to decode it into a private key. (Don't worry about the security of the private key in this example, it is just a throwaway for the example).</p>

<pre><code>import java.io.*;
import java.security.KeyFactory;
import java.security.PrivateKey;
import java.security.spec.PKCS8EncodedKeySpec;
import android.util.Base64;

public class ReadPKCS8Pem {

    private final static String PRIVATE_KEY = 
            ""-----BEGIN PRIVATE KEY-----\n""
            + ""MIICdQIBADANBgkqhkiG9w0BAQEFAASCAl8wggJbAgEAAoGBAM7t8Ub1DP+B91NJ\n""
            + ""nC45zqIvd1QXkQ5Ac1EJl8mUglWFzUyFbhjSuF4mEjrcecwERfRummASbLoyeMXl\n""
            + ""eiPg7jvSaz2szpuV+afoUo9c1T+ORNUzq31NvM7IW6+4KhtttwbMq4wbbPpBfVXA\n""
            + ""IAhvnLnCp/VyY/npkkjAid4c7RoVAgMBAAECgYBcCuy6kj+g20+G5YQp756g95oN\n""
            + ""dpoYC8T/c9PnXz6GCgkik2tAcWJ+xlJviihG/lObgSL7vtZMEC02YXdtxBxTBNmd\n""
            + ""upkruOkL0ElIu4S8CUwD6It8oNnHFGcIhwXUbdpSCr1cx62A0jDcMVgneQ8vv6vB\n""
            + ""/YKlj2dD2SBq3aaCYQJBAOvc5NDyfrdMYYTY+jJBaj82JLtQ/6K1vFIwdxM0siRF\n""
            + ""UYqSRA7G8A4ga+GobTewgeN6URFwWKvWY8EGb3HTwFkCQQDgmKtjjJlX3BotgnGD\n""
            + ""gdxVgvfYG39BL2GnotSwUbjjce/yZBtrbcClfqrrOWWw7lPcX1d0v8o3hJfLF5dT\n""
            + ""6NAdAkA8qAQYUCSSUwxJM9u0DOqb8vqjSYNUftQ9dsVIpSai+UitEEx8WGDn4SKd\n""
            + ""V8kupy/gJlau22uSVYI148fJSCGRAkBz+GEHFiJX657YwPI8JWHQBcBUJl6fGggi\n""
            + ""t0F7ibceOkbbsjU2U4WV7sHyk8Cei3Fh6RkPf7i60gxPIe9RtHVBAkAnPQD+BmND\n""
            + ""By8q5f0Kwtxgo2+YkxGDP5bxDV6P1vd2C7U5/XxaN53Kc0G8zu9UlcwhZcQ5BljH\n""
            + ""N24cUWZOo+60\n""
            + ""-----END PRIVATE KEY-----"";

    public static void main(String[] args) throws Exception {
        // Read in the key into a String
        StringBuilder pkcs8Lines = new StringBuilder();
        BufferedReader rdr = new BufferedReader(new StringReader(PRIVATE_KEY));
        String line;
        while ((line = rdr.readLine()) != null) {
            pkcs8Lines.append(line);
        }

        // Remove the ""BEGIN"" and ""END"" lines, as well as any whitespace

        String pkcs8Pem = pkcs8Lines.toString();
        pkcs8Pem = pkcs8Pem.replace(""-----BEGIN PRIVATE KEY-----"", """");
        pkcs8Pem = pkcs8Pem.replace(""-----END PRIVATE KEY-----"", """");
        pkcs8Pem = pkcs8Pem.replaceAll(""\\s+"","""");

        // Base64 decode the result

        byte [] pkcs8EncodedBytes = Base64.decode(pkcs8Pem, Base64.DEFAULT);

        // extract the private key

        PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(pkcs8EncodedBytes);
        KeyFactory kf = KeyFactory.getInstance(""RSA"");
        PrivateKey privKey = kf.generatePrivate(keySpec);
        System.out.println(privKey);
    }

}
</code></pre>
","22356","<android><security><rsa><private-key>","21","24","1","2019-09-16 19:19:28","34456838","3","6","1818089","","2017-11-27 08:31:06","2015-12-24 14:53:01",""
"2654949","How to read a password encrypted key with java?","<p>I have private key stored in file in PKCS8 DER format and protected by password. What is the easiest way to read it? </p>

<p>Here is the code I use to load unencrypted one:</p>

<pre><code>InputStream in = new FileInputStream(privateKeyFilename);
byte[] privateKeydata = new byte[in.available()];
in.read(privateKeydata);
in.close();
KeyFactory privateKeyFactory = KeyFactory.getInstance(""RSA"");
PKCS8EncodedKeySpec encodedKeySpec = new PKCS8EncodedKeySpec(privateKeydata);
PrivateKey privateKey = privateKeyFactory.generatePrivate(encodedKeySpec);
</code></pre>

<p>It works fine for unencrypted keys with the same specification. By the way, I am using BouncyCastle.</p>

<p>I can view this private key using following openssl command</p>

<pre><code>openssl pkcs8 -in ./privatekey.key -inform DER -passin pass:thisismypass
</code></pre>

<p>Please, Help!!!</p>

<p><strong>I,ve posted some solutions in my own answer to this topic. But I keep question unanswered in case anybody can help with making it work without extra library, just BouncyCastle.</strong> </p>
","<p>I found the solution! Maybe its not so elegant, but... 
Here I will post two solutions:</p>

<ol>
<li>Prefferable, but not working</li>
<li>Working one, but requires additional library</li>
</ol>

<p><strong><em>First</em></strong>:</p>

<p>I found a kind of solution <a href=""http://forums.sun.com/thread.jspa?threadID=758133&amp;tstart=0"" rel=""nofollow noreferrer"">here</a>, but it throws exception. Solution:</p>

<pre><code>import java.io.*;
import java.security.*;
import java.security.interfaces.RSAPrivateCrtKey;
import java.security.interfaces.RSAPublicKey;
import java.security.spec.*;

import javax.crypto.*;
import javax.crypto.spec.*;

/*
 * This class demonstrates how to import an encrypted RSA private key as
 * generated by openssl. The input file is presumed to be in DER
 * format.
 */
public class ImportEncryptedPrivateKey
{
    public static byte[] readPK8FromFile(String fileName) throws IOException
    {
        File f = new File(fileName);
        DataInputStream dis = new DataInputStream(new FileInputStream(f));
        byte[] theData = new byte[(int) f.length()];
        dis.readFully(theData);
        return theData;
    }

    public static void main(String[] args) throws IOException,
            NoSuchAlgorithmException, NoSuchPaddingException,
            InvalidKeySpecException, InvalidKeyException,
            InvalidAlgorithmParameterException
    {
        byte[] encryptedPKInfo = readPK8FromFile(""rsapriv.pk8"");
        EncryptedPrivateKeyInfo ePKInfo = new EncryptedPrivateKeyInfo(
                encryptedPKInfo);
        char[] password = { 'p', 'a', 's', 's', 'w', 'o', 'r', 'd' };
        Cipher cipher = Cipher.getInstance(ePKInfo.getAlgName());
        PBEKeySpec pbeKeySpec = new PBEKeySpec(password);
        // Now create the Key from the PBEKeySpec
        SecretKeyFactory skFac = SecretKeyFactory.getInstance(ePKInfo
                .getAlgName());
        Key pbeKey = skFac.generateSecret(pbeKeySpec);
        // Extract the iteration count and the salt
        AlgorithmParameters algParams = ePKInfo.getAlgParameters();
        cipher.init(Cipher.DECRYPT_MODE, pbeKey, algParams);
        // Decrypt the encryped private key into a PKCS8EncodedKeySpec
        KeySpec pkcs8KeySpec = ePKInfo.getKeySpec(cipher);
        // Now retrieve the RSA Public and private keys by using an
        // RSA keyfactory.
        KeyFactory rsaKeyFac = KeyFactory.getInstance(""RSA"");
        // First get the private key
        RSAPrivateCrtKey rsaPriv = (RSAPrivateCrtKey) rsaKeyFac.generatePrivate(pkcs8KeySpec);
        // Now derive the RSA public key from the private key
        RSAPublicKeySpec rsaPubKeySpec = new RSAPublicKeySpec(rsaPriv.getModulus(), rsaPriv.getPublicExponent());
        RSAPublicKey rsaPubKey = (RSAPublicKey) rsaKeyFac.generatePublic(rsaPubKeySpec);
    }

}
</code></pre>

<p>And my exception:</p>

<pre><code>Exception in thread ""main"" java.security.NoSuchAlgorithmException: No such algorithm: 1.2.840.113549.1.5.13
</code></pre>

<p><strong><em>Second</em></strong>:</p>

<p>And following this <a href=""http://juliusdavies.ca/commons-ssl/pkcs8.html"" rel=""nofollow noreferrer"">http://juliusdavies.ca/commons-ssl/pkcs8.html</a> you can read about the second, working solution</p>
","21356","<java><bouncycastle><private-key><jce><pkcs#8>","14","8","2","2015-04-24 01:46:28","","0","12","304309","","2010-04-18 07:46:35","2010-04-16 17:23:02",""
"2654949","How to read a password encrypted key with java?","<p>I have private key stored in file in PKCS8 DER format and protected by password. What is the easiest way to read it? </p>

<p>Here is the code I use to load unencrypted one:</p>

<pre><code>InputStream in = new FileInputStream(privateKeyFilename);
byte[] privateKeydata = new byte[in.available()];
in.read(privateKeydata);
in.close();
KeyFactory privateKeyFactory = KeyFactory.getInstance(""RSA"");
PKCS8EncodedKeySpec encodedKeySpec = new PKCS8EncodedKeySpec(privateKeydata);
PrivateKey privateKey = privateKeyFactory.generatePrivate(encodedKeySpec);
</code></pre>

<p>It works fine for unencrypted keys with the same specification. By the way, I am using BouncyCastle.</p>

<p>I can view this private key using following openssl command</p>

<pre><code>openssl pkcs8 -in ./privatekey.key -inform DER -passin pass:thisismypass
</code></pre>

<p>Please, Help!!!</p>

<p><strong>I,ve posted some solutions in my own answer to this topic. But I keep question unanswered in case anybody can help with making it work without extra library, just BouncyCastle.</strong> </p>
","<p>This is my code and it work's :)</p>

<pre><code>File f = new File(keyFile);
FileInputStream fis = new FileInputStream(f);
DataInputStream dis = new DataInputStream(fis);
byte[] keyBytes = new byte[(int)f.length()];
dis.readFully(keyBytes);
dis.close();
EncryptedPrivateKeyInfo encryptPKInfo = new EncryptedPrivateKeyInfo(keyBytes);
Cipher cipher = Cipher.getInstance(encryptPKInfo.getAlgName());
PBEKeySpec pbeKeySpec = new PBEKeySpec(passwd.toCharArray());
SecretKeyFactory secFac = SecretKeyFactory.getInstance(encryptPKInfo.getAlgName());
Key pbeKey = secFac.generateSecret(pbeKeySpec);
AlgorithmParameters algParams = encryptPKInfo.getAlgParameters();
cipher.init(Cipher.DECRYPT_MODE, pbeKey, algParams);
KeySpec pkcs8KeySpec = encryptPKInfo.getKeySpec(cipher);
KeyFactory kf = KeyFactory.getInstance(""RSA"");
return kf.generatePrivate(pkcs8KeySpec);
</code></pre>
","21356","<java><bouncycastle><private-key><jce><pkcs#8>","14","1","2","2015-04-24 01:46:28","","0","12","304309","","2010-04-18 07:46:35","2010-04-16 17:23:02",""
"12087683","PostgreSQL won't start: ""server.key"" has group or world access","<p>Whenerver I start PostgreSQL using command: </p>

<pre><code>$ sudo /etc/init.d/postgresql start
</code></pre>

<p>Pg doesn't start up. The error reported is:</p>

<pre><code> * Starting PostgreSQL 8.4 database server
 * The PostgreSQL server failed to start. Please check the log output:
2010-01-21 22:10:00 PST FATAL: private key file ""server.key"" has group or world access
2010-01-21 22:10:00 PST DETAIL: File must be owned by the database user or root, must have no write permission for ""group"", and must have no permissions for ""other"".
</code></pre>

<p>... and when I try to access <code>psql</code> as the <code>postgres</code> user with: </p>

<pre><code>$ sudo su postgres
$ psql
</code></pre>

<p>it gives me an error:</p>

<pre><code> could not connect to server: No such file or directory
    Is the server running locally and accepting
    connections on Unix domain socket ""/var/run/postgresql/.s.PGSQL.5432""?
</code></pre>
","<p>As the error message says, fix the permissions for the key file <code>server.key</code>. The server runs as user ""postgres"" which should own the file. Try </p>

<pre><code>#cd &lt;path/to/pgsql/data&gt; 
#chown postgres server.key
#chmod 0640 server.key
</code></pre>
","21184","<linux><postgresql><openerp><odoo><private-key>","25","6","6","2015-07-02 09:23:30","12153112","4","17","1312904","","2015-07-02 09:23:30","2012-08-23 08:30:59",""
"12087683","PostgreSQL won't start: ""server.key"" has group or world access","<p>Whenerver I start PostgreSQL using command: </p>

<pre><code>$ sudo /etc/init.d/postgresql start
</code></pre>

<p>Pg doesn't start up. The error reported is:</p>

<pre><code> * Starting PostgreSQL 8.4 database server
 * The PostgreSQL server failed to start. Please check the log output:
2010-01-21 22:10:00 PST FATAL: private key file ""server.key"" has group or world access
2010-01-21 22:10:00 PST DETAIL: File must be owned by the database user or root, must have no write permission for ""group"", and must have no permissions for ""other"".
</code></pre>

<p>... and when I try to access <code>psql</code> as the <code>postgres</code> user with: </p>

<pre><code>$ sudo su postgres
$ psql
</code></pre>

<p>it gives me an error:</p>

<pre><code> could not connect to server: No such file or directory
    Is the server running locally and accepting
    connections on Unix domain socket ""/var/run/postgresql/.s.PGSQL.5432""?
</code></pre>
","<p>I had solved it using ..</p>

<p>1) Enter the relevant directory (use> locate server.key)</p>

<p>2) Back up old server.key link.</p>

<p>3) Copy ssl-cert-snakeoil.key to server.key</p>

<p>4-5) Change its owner &amp; group to postgres</p>

<p>6) Ensure the permissions are 700 or 740 (as requested by error message)</p>

<p>Recipe for my Ubuntu 12.04 &amp; postgresql-8.3:</p>

<pre><code>sudo cd /var/lib/postgresql/8.3/main/
sudo mv server.key server.key-0
sudo cp /etc/ssl/private/ssl-cert-snakeoil.key server.key
sudo chown postgres server.key
sudo chgrp postgres server.key
sudo chmod 740 server.key
sudo /etc/init.d/postgres-8.3 start
</code></pre>

<p>And now its working !
Thanks for support.</p>
","21184","<linux><postgresql><openerp><odoo><private-key>","25","49","6","2015-07-02 09:23:30","12153112","4","17","1312904","","2015-07-02 09:23:30","2012-08-23 08:30:59",""
"12087683","PostgreSQL won't start: ""server.key"" has group or world access","<p>Whenerver I start PostgreSQL using command: </p>

<pre><code>$ sudo /etc/init.d/postgresql start
</code></pre>

<p>Pg doesn't start up. The error reported is:</p>

<pre><code> * Starting PostgreSQL 8.4 database server
 * The PostgreSQL server failed to start. Please check the log output:
2010-01-21 22:10:00 PST FATAL: private key file ""server.key"" has group or world access
2010-01-21 22:10:00 PST DETAIL: File must be owned by the database user or root, must have no write permission for ""group"", and must have no permissions for ""other"".
</code></pre>

<p>... and when I try to access <code>psql</code> as the <code>postgres</code> user with: </p>

<pre><code>$ sudo su postgres
$ psql
</code></pre>

<p>it gives me an error:</p>

<pre><code> could not connect to server: No such file or directory
    Is the server running locally and accepting
    connections on Unix domain socket ""/var/run/postgresql/.s.PGSQL.5432""?
</code></pre>
","<pre><code>sudo chown postgres /var/lib/postgresql/8.4/main/server.key

sudo chmod 0640 /var/lib/postgresql/8.4/main/server.key
</code></pre>

<p>Hit tab after postgresql to confirm your version.</p>
","21184","<linux><postgresql><openerp><odoo><private-key>","25","2","6","2015-07-02 09:23:30","12153112","4","17","1312904","","2015-07-02 09:23:30","2012-08-23 08:30:59",""
"12087683","PostgreSQL won't start: ""server.key"" has group or world access","<p>Whenerver I start PostgreSQL using command: </p>

<pre><code>$ sudo /etc/init.d/postgresql start
</code></pre>

<p>Pg doesn't start up. The error reported is:</p>

<pre><code> * Starting PostgreSQL 8.4 database server
 * The PostgreSQL server failed to start. Please check the log output:
2010-01-21 22:10:00 PST FATAL: private key file ""server.key"" has group or world access
2010-01-21 22:10:00 PST DETAIL: File must be owned by the database user or root, must have no write permission for ""group"", and must have no permissions for ""other"".
</code></pre>

<p>... and when I try to access <code>psql</code> as the <code>postgres</code> user with: </p>

<pre><code>$ sudo su postgres
$ psql
</code></pre>

<p>it gives me an error:</p>

<pre><code> could not connect to server: No such file or directory
    Is the server running locally and accepting
    connections on Unix domain socket ""/var/run/postgresql/.s.PGSQL.5432""?
</code></pre>
","<p>How about not to hard copying the Server Key and leaving it where and like it is.</p>

<p>Instead it is simplier to:</p>

<p>Change the ""server.key"" link Permissions in PostgreSQL Data Directory (its the Location where the Link to the private certificate.key File resides)</p>

<p><code># cd /var/lib/postgresql/9.1/main/</code></p>

<p>to</p>

<pre><code># chown -R postgres:postgres server.key`
</code></pre>

<p>And make sure that the original Certificate in</p>

<pre><code># /etc/ssl/private/ssl-cert-snakeoil.key
</code></pre>

<p>has those Properties, by Setting them </p>

<pre><code># chmod 640 ssl-cert-snakeoil.key
# chown root:ssl-cert ssl-cert-snakeoil.key
</code></pre>

<p>This Solution has been tested on Debian. 
Please remember that CentOS can use the SELinux with extended User Rights Management, which can be viewed by </p>

<pre><code># ls -laZ *
</code></pre>
","21184","<linux><postgresql><openerp><odoo><private-key>","25","6","6","2015-07-02 09:23:30","12153112","4","17","1312904","","2015-07-02 09:23:30","2012-08-23 08:30:59",""
"12087683","PostgreSQL won't start: ""server.key"" has group or world access","<p>Whenerver I start PostgreSQL using command: </p>

<pre><code>$ sudo /etc/init.d/postgresql start
</code></pre>

<p>Pg doesn't start up. The error reported is:</p>

<pre><code> * Starting PostgreSQL 8.4 database server
 * The PostgreSQL server failed to start. Please check the log output:
2010-01-21 22:10:00 PST FATAL: private key file ""server.key"" has group or world access
2010-01-21 22:10:00 PST DETAIL: File must be owned by the database user or root, must have no write permission for ""group"", and must have no permissions for ""other"".
</code></pre>

<p>... and when I try to access <code>psql</code> as the <code>postgres</code> user with: </p>

<pre><code>$ sudo su postgres
$ psql
</code></pre>

<p>it gives me an error:</p>

<pre><code> could not connect to server: No such file or directory
    Is the server running locally and accepting
    connections on Unix domain socket ""/var/run/postgresql/.s.PGSQL.5432""?
</code></pre>
","<p>It happened to me and it turned out that I removed erroneously the postgres user from ""ssl-cert"" group, set it back with</p>

<blockquote>
  <p>gpasswd -a postgres ssl-cert</p>
</blockquote>
","21184","<linux><postgresql><openerp><odoo><private-key>","25","3","6","2015-07-02 09:23:30","12153112","4","17","1312904","","2015-07-02 09:23:30","2012-08-23 08:30:59",""
"12087683","PostgreSQL won't start: ""server.key"" has group or world access","<p>Whenerver I start PostgreSQL using command: </p>

<pre><code>$ sudo /etc/init.d/postgresql start
</code></pre>

<p>Pg doesn't start up. The error reported is:</p>

<pre><code> * Starting PostgreSQL 8.4 database server
 * The PostgreSQL server failed to start. Please check the log output:
2010-01-21 22:10:00 PST FATAL: private key file ""server.key"" has group or world access
2010-01-21 22:10:00 PST DETAIL: File must be owned by the database user or root, must have no write permission for ""group"", and must have no permissions for ""other"".
</code></pre>

<p>... and when I try to access <code>psql</code> as the <code>postgres</code> user with: </p>

<pre><code>$ sudo su postgres
$ psql
</code></pre>

<p>it gives me an error:</p>

<pre><code> could not connect to server: No such file or directory
    Is the server running locally and accepting
    connections on Unix domain socket ""/var/run/postgresql/.s.PGSQL.5432""?
</code></pre>
","<p>Setthe permissions of <code>/etc/ssl/private</code> to <code>root:ssl-cert</code>. Comments on <a href=""https://github.com/hw-cookbooks/postgresql/issues/156"" rel=""nofollow"">this issue</a> made me try this solution.</p>

<p><strong><em>NOTE</strong>: even tough the answer is accepted, it didn't solve my issue. To help someone else i wanted to answer here</em>.</p>
","21184","<linux><postgresql><openerp><odoo><private-key>","25","3","6","2015-07-02 09:23:30","12153112","4","17","1312904","","2015-07-02 09:23:30","2012-08-23 08:30:59",""
"23848849","How to use encrypted RSA private key with PyCrypto?","<p>I am generating a key with OpenSSL, providing the password from stdin:</p>

<pre><code>openssl genpkey -algorithm RSA -out private-key.pem -outform PEM -pass stdin -des3 -pkeyopt rsa_keygen_bits:4096
</code></pre>

<p>The key then looks like:</p>

<pre><code>-----BEGIN ENCRYPTED PRIVATE KEY-----
XXX...
-----END ENCRYPTED PRIVATE KEY-----
</code></pre>

<p>My Python code looks like:</p>

<pre><code>from Crypto.PublicKey import RSA
# ...
f = open('private-key.pem', 'r')
r = RSA.importKey(f.read(),  passphrase='some-pass')
f.close()
</code></pre>

<p>but I am getting an exception:</p>

<pre><code>  File ""/usr/lib/python2.7/dist-packages/Crypto/PublicKey/RSA.py"", line 665, in importKey
    return self._importKeyDER(der)
  File ""/usr/lib/python2.7/dist-packages/Crypto/PublicKey/RSA.py"", line 588, in _importKeyDER
    raise ValueError(""RSA key format is not supported"")
ValueError: RSA key format is not supported
</code></pre>

<p>What's wrong?</p>

<p>Is it possible to generate an encrypted RSA key, store it in a file and later use it with PyCrypto? Is it possible to do it with OpenSSL? What formats are supported?</p>

<p>Importing the public key works fine, however it is not encrypted.</p>
","<p><strong>Hypothesis #1</strong></p>

<p>After looking to the source code, I think, I solved the mystery. The way how import works for PEM keys encrypted with a password is that the PEM gets decrypted to DER and after that importKeyDER function is called. If provided password is not correct, the format of generated DER representation will not be correct too and you would get an exception that you've provided. To confirm that, I ran two quick tests below:</p>

<pre><code>&gt;&gt;&gt; from Crypto.PublicKey import RSA
&gt;&gt;&gt; f = open('&lt;some-path&gt;/private-key.pem','r')
&gt;&gt;&gt; r=RSA.importKey(f.read(),passphrase='foo')
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
  File ""/usr/local/lib/python2.7/dist-packages/Crypto/PublicKey/RSA.py"", line 665, in importKey
    return self._importKeyDER(der)
  File ""/usr/local/lib/python2.7/dist-packages/Crypto/PublicKey/RSA.py"", line 588, in    _importKeyDER
    raise ValueError(""RSA key format is not supported"")
ValueError: RSA key format is not supported
&gt;&gt;&gt; f = open('&lt;some-path&gt;/private-key.pem','r')
&gt;&gt;&gt; r=RSA.importKey(f.read(),passphrase='&lt;valid-pass-phrase&gt;')
&gt;&gt;&gt; r
&lt;_RSAobj @0xb7237b2c n(4096),e,d,p,q,u,private&gt;
</code></pre>

<p>After receiving the PEM from the author, I've realized that Hypothesis #1 is not valid for his case. I still want to keep it here as one possible reason of import failure, so other users are aware.</p>

<p><strong>Hypothesis #2</strong> - this is the author's case.</p>

<p>RSA.py looks for the following in PEM file to determine what kind of encryption was applied to PEM:</p>

<pre><code> Proc-Type: 4,ENCRYPTED
</code></pre>

<p>When key is generated using ""openssl genrsa ..."" command, this string is present in PEM in clear, however when ""opensl genpkey ..."" is used the ""Proc-Type"" is not present.</p>

<p>RSA.py doesn't even try to decrypt the PEM if the ""Proc-Type"" is not found:</p>

<pre><code>  # The encrypted PEM format
  if lines[1].startswith(b('Proc-Type:4,ENCRYPTED')):
     DEK = lines[2].split(b(':'))
     ....
</code></pre>

<p>So, my conclusion at this time is that keys generated by ""openssl genpkey"" are not supported by PyCrypto v 2.6.1.</p>

<p><strong>Important Update</strong></p>

<p>It does work in PyCrypto's latest version 2.7a1. You can download it from here: <a href=""http://ftp.dlitz.net/pub/dlitz/crypto/pycrypto/pycrypto-2.7a1.tar.gz"" rel=""nofollow"">http://ftp.dlitz.net/pub/dlitz/crypto/pycrypto/pycrypto-2.7a1.tar.gz</a></p>

<pre><code>&gt;&gt;&gt; f = open('key.pem','r')
&gt;&gt;&gt; r = RSA.importKey(f.read(),  passphrase='123456')
&gt;&gt;&gt; r
&lt;_RSAobj @0xb6f342ec n(2048),e,d,p,q,u,private&gt;
</code></pre>
","20719","<python><encryption><rsa><private-key><pycrypto>","6","4","2","2017-02-13 08:07:33","23849441","1","2","","","","2014-05-24 19:27:41",""
"23848849","How to use encrypted RSA private key with PyCrypto?","<p>I am generating a key with OpenSSL, providing the password from stdin:</p>

<pre><code>openssl genpkey -algorithm RSA -out private-key.pem -outform PEM -pass stdin -des3 -pkeyopt rsa_keygen_bits:4096
</code></pre>

<p>The key then looks like:</p>

<pre><code>-----BEGIN ENCRYPTED PRIVATE KEY-----
XXX...
-----END ENCRYPTED PRIVATE KEY-----
</code></pre>

<p>My Python code looks like:</p>

<pre><code>from Crypto.PublicKey import RSA
# ...
f = open('private-key.pem', 'r')
r = RSA.importKey(f.read(),  passphrase='some-pass')
f.close()
</code></pre>

<p>but I am getting an exception:</p>

<pre><code>  File ""/usr/lib/python2.7/dist-packages/Crypto/PublicKey/RSA.py"", line 665, in importKey
    return self._importKeyDER(der)
  File ""/usr/lib/python2.7/dist-packages/Crypto/PublicKey/RSA.py"", line 588, in _importKeyDER
    raise ValueError(""RSA key format is not supported"")
ValueError: RSA key format is not supported
</code></pre>

<p>What's wrong?</p>

<p>Is it possible to generate an encrypted RSA key, store it in a file and later use it with PyCrypto? Is it possible to do it with OpenSSL? What formats are supported?</p>

<p>Importing the public key works fine, however it is not encrypted.</p>
","<p>A quick update for those who seek to solve this problem without installing an experimental release of long-abandoned PyCrypto. The library can be safely replaced by pycryptodome (<a href=""https://github.com/Legrandin/pycryptodome"" rel=""nofollow noreferrer"">https://github.com/Legrandin/pycryptodome</a>) - it can provide both a drop-in replacement for pycrypto, and it can be used as an alternative library as well (pycryptodomex).</p>
","20719","<python><encryption><rsa><private-key><pycrypto>","6","2","2","2017-02-13 08:07:33","23849441","1","2","","","","2014-05-24 19:27:41",""
"15265342","ssh cannot use the IdentityFile config in file ~/.ssh/config","<p>client：Mac 10.8，server：Ubuntu 10.04 LTS 64bit</p>

<p>I use '<strong>ssh-keygen -t rsa</strong>' generate public/private keys.</p>

<p>First, I input: <strong>ssh -i /Users/phenix/.ssh/poponet_rsa root@popo.net</strong>, I can login to the server with the private key 'poponet_rsa'</p>

<p>Next, I create a config file: <strong>/Users/phenix/.ssh/config</strong>, with content:</p>

<pre><code>Host popo
    Hostname popo.net
    User root
    PreferredAuthentications publickey
    IdentityFile /Users/phenix/.ssh/poponet_rsa
</code></pre>

<p>and I input <strong>ssh root@popo.net</strong>, the Terminal ask me the password.</p>

<p>Next, I change <strong>poponet_rsa</strong> filename to <strong>id_rsa</strong>, and input <strong>ssh root@popo.net</strong>, OK, I login.</p>

<p>My question: <strong>ssh cannot use the IdentityFile config in file ~/.ssh/config, why?</strong></p>

<pre><code>$ ssh -vvv root@popo.net
OpenSSH_5.9p1, OpenSSL 0.9.8r 8 Feb 2011
debug1: Reading configuration data /Users/phenix/.ssh/config
debug1: /Users/phenix/.ssh/config line 1: Applying options for popo.net
debug1: /Users/phenix/.ssh/config line 2: Applying options for popo.net
debug1: Reading configuration data /etc/ssh_config
debug1: /etc/ssh_config line 20: Applying options for *
debug2: ssh_connect: needpriv 0
debug1: Connecting to popo.net [111.111.111.111] port 22.
debug1: Connection established.
debug3: Incorrect RSA1 identifier
debug3: Could not load ""/Users/phenix/.ssh/id_rsa"" as a RSA1 public key
debug1: identity file /Users/phenix/.ssh/id_rsa type -1
debug1: identity file /Users/phenix/.ssh/id_rsa-cert type -1
debug1: identity file /Users/phenix/.ssh/id_dsa type -1
debug1: identity file /Users/phenix/.ssh/id_dsa-cert type -1
debug1: Remote protocol version 2.0, remote software version OpenSSH_5.3p1 Debian-3ubuntu7
debug1: match: OpenSSH_5.3p1 Debian-3ubuntu7 pat OpenSSH*
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_5.9
debug2: fd 3 setting O_NONBLOCK
debug3: load_hostkeys: loading entries for host ""popo.net"" from file ""/Users/phenix/.ssh/known_hosts""
debug3: load_hostkeys: found key type RSA in file /Users/phenix/.ssh/known_hosts:1
debug3: load_hostkeys: loaded 1 keys
debug3: order_hostkeyalgs: prefer hostkeyalgs: ssh-rsa-cert-v01@openssh.com,ssh-rsa-cert-v00@openssh.com,ssh-rsa
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug2: kex_parse_kexinit: **too much init, i delete them.**
debug2: mac_setup: found hmac-md5
debug1: kex: server-&gt;client aes128-ctr hmac-md5 none
debug2: mac_setup: found hmac-md5
debug1: kex: client-&gt;server aes128-ctr hmac-md5 none
debug1: SSH2_MSG_KEX_DH_GEX_REQUEST(1024&lt;1024&lt;8192) sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_GROUP
debug2: dh_gen_key: priv key bits set: 135/256
debug2: bits set: 468/1024
debug1: SSH2_MSG_KEX_DH_GEX_INIT sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_REPLY
debug1: Server host key: RSA xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx
debug3: load_hostkeys: loading entries for host ""popo.net"" from file ""/Users/phenix/.ssh/known_hosts""
debug3: load_hostkeys: found key type RSA in file /Users/phenix/.ssh/known_hosts:1
debug3: load_hostkeys: loaded 1 keys
debug3: load_hostkeys: loading entries for host ""111.111.111.111"" from file ""/Users/phenix/.ssh/known_hosts""
debug3: load_hostkeys: found key type RSA in file /Users/phenix/.ssh/known_hosts:1
debug3: load_hostkeys: loaded 1 keys
debug1: Host 'popo.net' is known and matches the RSA host key.
debug1: Found key in /Users/phenix/.ssh/known_hosts:1
debug2: bits set: 516/1024
debug1: ssh_rsa_verify: signature correct
debug2: kex_derive_keys
debug2: set_newkeys: mode 1
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug2: set_newkeys: mode 0
debug1: SSH2_MSG_NEWKEYS received
debug1: Roaming not allowed by server
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug2: service_accept: ssh-userauth
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug2: key: /Users/phenix/.ssh/id_rsa (0x0)
debug2: key: /Users/phenix/.ssh/id_dsa (0x0)
debug1: Authentications that can continue: publickey,password
debug3: start over, passed a different list publickey,password
debug3: preferred publickey,keyboard-interactive,password
debug3: authmethod_lookup publickey
debug3: remaining preferred: keyboard-interactive,password
debug3: authmethod_is_enabled publickey
debug1: Next authentication method: publickey
debug1: Trying private key: /Users/phenix/.ssh/id_rsa
debug1: key_parse_private_pem: PEM_read_PrivateKey failed
debug1: read PEM private key done: type &lt;unknown&gt;
debug2: no passphrase given, try next key
debug1: Trying private key: /Users/phenix/.ssh/id_dsa
debug3: no such identity: /Users/phenix/.ssh/id_dsa
debug2: we did not send a packet, disable method
debug3: authmethod_lookup password
debug3: remaining preferred: ,password
debug3: authmethod_is_enabled password
debug1: Next authentication method: password
root@popo.net's password: 
</code></pre>
","<p>If your ~/.ssh/config is all on one line (as your post suggests) like this:</p>

<pre><code>Host popo Hostname popo.net User root PreferredAuthentications publickey IdentityFile /Users/phenix/.ssh/poponet_rsa
</code></pre>

<p>then that won't work. You need to split each directive onto its own line, like this:</p>

<pre><code>Host popo
Hostname popo.net
User root
PreferredAuthentications publickey
IdentityFile /Users/phenix/.ssh/poponet_rsa
</code></pre>
","19390","<ssh><rsa><private-key>","7","1","4","2019-05-30 14:33:04","","0","0","4935114","","2017-12-24 10:57:35","2013-03-07 07:23:08",""
"15265342","ssh cannot use the IdentityFile config in file ~/.ssh/config","<p>client：Mac 10.8，server：Ubuntu 10.04 LTS 64bit</p>

<p>I use '<strong>ssh-keygen -t rsa</strong>' generate public/private keys.</p>

<p>First, I input: <strong>ssh -i /Users/phenix/.ssh/poponet_rsa root@popo.net</strong>, I can login to the server with the private key 'poponet_rsa'</p>

<p>Next, I create a config file: <strong>/Users/phenix/.ssh/config</strong>, with content:</p>

<pre><code>Host popo
    Hostname popo.net
    User root
    PreferredAuthentications publickey
    IdentityFile /Users/phenix/.ssh/poponet_rsa
</code></pre>

<p>and I input <strong>ssh root@popo.net</strong>, the Terminal ask me the password.</p>

<p>Next, I change <strong>poponet_rsa</strong> filename to <strong>id_rsa</strong>, and input <strong>ssh root@popo.net</strong>, OK, I login.</p>

<p>My question: <strong>ssh cannot use the IdentityFile config in file ~/.ssh/config, why?</strong></p>

<pre><code>$ ssh -vvv root@popo.net
OpenSSH_5.9p1, OpenSSL 0.9.8r 8 Feb 2011
debug1: Reading configuration data /Users/phenix/.ssh/config
debug1: /Users/phenix/.ssh/config line 1: Applying options for popo.net
debug1: /Users/phenix/.ssh/config line 2: Applying options for popo.net
debug1: Reading configuration data /etc/ssh_config
debug1: /etc/ssh_config line 20: Applying options for *
debug2: ssh_connect: needpriv 0
debug1: Connecting to popo.net [111.111.111.111] port 22.
debug1: Connection established.
debug3: Incorrect RSA1 identifier
debug3: Could not load ""/Users/phenix/.ssh/id_rsa"" as a RSA1 public key
debug1: identity file /Users/phenix/.ssh/id_rsa type -1
debug1: identity file /Users/phenix/.ssh/id_rsa-cert type -1
debug1: identity file /Users/phenix/.ssh/id_dsa type -1
debug1: identity file /Users/phenix/.ssh/id_dsa-cert type -1
debug1: Remote protocol version 2.0, remote software version OpenSSH_5.3p1 Debian-3ubuntu7
debug1: match: OpenSSH_5.3p1 Debian-3ubuntu7 pat OpenSSH*
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_5.9
debug2: fd 3 setting O_NONBLOCK
debug3: load_hostkeys: loading entries for host ""popo.net"" from file ""/Users/phenix/.ssh/known_hosts""
debug3: load_hostkeys: found key type RSA in file /Users/phenix/.ssh/known_hosts:1
debug3: load_hostkeys: loaded 1 keys
debug3: order_hostkeyalgs: prefer hostkeyalgs: ssh-rsa-cert-v01@openssh.com,ssh-rsa-cert-v00@openssh.com,ssh-rsa
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug2: kex_parse_kexinit: **too much init, i delete them.**
debug2: mac_setup: found hmac-md5
debug1: kex: server-&gt;client aes128-ctr hmac-md5 none
debug2: mac_setup: found hmac-md5
debug1: kex: client-&gt;server aes128-ctr hmac-md5 none
debug1: SSH2_MSG_KEX_DH_GEX_REQUEST(1024&lt;1024&lt;8192) sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_GROUP
debug2: dh_gen_key: priv key bits set: 135/256
debug2: bits set: 468/1024
debug1: SSH2_MSG_KEX_DH_GEX_INIT sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_REPLY
debug1: Server host key: RSA xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx
debug3: load_hostkeys: loading entries for host ""popo.net"" from file ""/Users/phenix/.ssh/known_hosts""
debug3: load_hostkeys: found key type RSA in file /Users/phenix/.ssh/known_hosts:1
debug3: load_hostkeys: loaded 1 keys
debug3: load_hostkeys: loading entries for host ""111.111.111.111"" from file ""/Users/phenix/.ssh/known_hosts""
debug3: load_hostkeys: found key type RSA in file /Users/phenix/.ssh/known_hosts:1
debug3: load_hostkeys: loaded 1 keys
debug1: Host 'popo.net' is known and matches the RSA host key.
debug1: Found key in /Users/phenix/.ssh/known_hosts:1
debug2: bits set: 516/1024
debug1: ssh_rsa_verify: signature correct
debug2: kex_derive_keys
debug2: set_newkeys: mode 1
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug2: set_newkeys: mode 0
debug1: SSH2_MSG_NEWKEYS received
debug1: Roaming not allowed by server
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug2: service_accept: ssh-userauth
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug2: key: /Users/phenix/.ssh/id_rsa (0x0)
debug2: key: /Users/phenix/.ssh/id_dsa (0x0)
debug1: Authentications that can continue: publickey,password
debug3: start over, passed a different list publickey,password
debug3: preferred publickey,keyboard-interactive,password
debug3: authmethod_lookup publickey
debug3: remaining preferred: keyboard-interactive,password
debug3: authmethod_is_enabled publickey
debug1: Next authentication method: publickey
debug1: Trying private key: /Users/phenix/.ssh/id_rsa
debug1: key_parse_private_pem: PEM_read_PrivateKey failed
debug1: read PEM private key done: type &lt;unknown&gt;
debug2: no passphrase given, try next key
debug1: Trying private key: /Users/phenix/.ssh/id_dsa
debug3: no such identity: /Users/phenix/.ssh/id_dsa
debug2: we did not send a packet, disable method
debug3: authmethod_lookup password
debug3: remaining preferred: ,password
debug3: authmethod_is_enabled password
debug1: Next authentication method: password
root@popo.net's password: 
</code></pre>
","<p>I don't think that answer is actual for question's author, but google return this topic in first page.</p>

<p>I have similar problem. Key lines in log:</p>

<pre><code>debug3: Incorrect RSA1 identifier
debug3: Could not load ""/Users/phenix/.ssh/id_rsa"" as a RSA1 public key
</code></pre>

<p>so ssh doesn't know about your poppet.key. In my case was misprint in filename. </p>

<p>I recommend double check keys name in your ~/.ssh/config.</p>
","19390","<ssh><rsa><private-key>","7","0","4","2019-05-30 14:33:04","","0","0","4935114","","2017-12-24 10:57:35","2013-03-07 07:23:08",""
"15265342","ssh cannot use the IdentityFile config in file ~/.ssh/config","<p>client：Mac 10.8，server：Ubuntu 10.04 LTS 64bit</p>

<p>I use '<strong>ssh-keygen -t rsa</strong>' generate public/private keys.</p>

<p>First, I input: <strong>ssh -i /Users/phenix/.ssh/poponet_rsa root@popo.net</strong>, I can login to the server with the private key 'poponet_rsa'</p>

<p>Next, I create a config file: <strong>/Users/phenix/.ssh/config</strong>, with content:</p>

<pre><code>Host popo
    Hostname popo.net
    User root
    PreferredAuthentications publickey
    IdentityFile /Users/phenix/.ssh/poponet_rsa
</code></pre>

<p>and I input <strong>ssh root@popo.net</strong>, the Terminal ask me the password.</p>

<p>Next, I change <strong>poponet_rsa</strong> filename to <strong>id_rsa</strong>, and input <strong>ssh root@popo.net</strong>, OK, I login.</p>

<p>My question: <strong>ssh cannot use the IdentityFile config in file ~/.ssh/config, why?</strong></p>

<pre><code>$ ssh -vvv root@popo.net
OpenSSH_5.9p1, OpenSSL 0.9.8r 8 Feb 2011
debug1: Reading configuration data /Users/phenix/.ssh/config
debug1: /Users/phenix/.ssh/config line 1: Applying options for popo.net
debug1: /Users/phenix/.ssh/config line 2: Applying options for popo.net
debug1: Reading configuration data /etc/ssh_config
debug1: /etc/ssh_config line 20: Applying options for *
debug2: ssh_connect: needpriv 0
debug1: Connecting to popo.net [111.111.111.111] port 22.
debug1: Connection established.
debug3: Incorrect RSA1 identifier
debug3: Could not load ""/Users/phenix/.ssh/id_rsa"" as a RSA1 public key
debug1: identity file /Users/phenix/.ssh/id_rsa type -1
debug1: identity file /Users/phenix/.ssh/id_rsa-cert type -1
debug1: identity file /Users/phenix/.ssh/id_dsa type -1
debug1: identity file /Users/phenix/.ssh/id_dsa-cert type -1
debug1: Remote protocol version 2.0, remote software version OpenSSH_5.3p1 Debian-3ubuntu7
debug1: match: OpenSSH_5.3p1 Debian-3ubuntu7 pat OpenSSH*
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_5.9
debug2: fd 3 setting O_NONBLOCK
debug3: load_hostkeys: loading entries for host ""popo.net"" from file ""/Users/phenix/.ssh/known_hosts""
debug3: load_hostkeys: found key type RSA in file /Users/phenix/.ssh/known_hosts:1
debug3: load_hostkeys: loaded 1 keys
debug3: order_hostkeyalgs: prefer hostkeyalgs: ssh-rsa-cert-v01@openssh.com,ssh-rsa-cert-v00@openssh.com,ssh-rsa
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug2: kex_parse_kexinit: **too much init, i delete them.**
debug2: mac_setup: found hmac-md5
debug1: kex: server-&gt;client aes128-ctr hmac-md5 none
debug2: mac_setup: found hmac-md5
debug1: kex: client-&gt;server aes128-ctr hmac-md5 none
debug1: SSH2_MSG_KEX_DH_GEX_REQUEST(1024&lt;1024&lt;8192) sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_GROUP
debug2: dh_gen_key: priv key bits set: 135/256
debug2: bits set: 468/1024
debug1: SSH2_MSG_KEX_DH_GEX_INIT sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_REPLY
debug1: Server host key: RSA xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx
debug3: load_hostkeys: loading entries for host ""popo.net"" from file ""/Users/phenix/.ssh/known_hosts""
debug3: load_hostkeys: found key type RSA in file /Users/phenix/.ssh/known_hosts:1
debug3: load_hostkeys: loaded 1 keys
debug3: load_hostkeys: loading entries for host ""111.111.111.111"" from file ""/Users/phenix/.ssh/known_hosts""
debug3: load_hostkeys: found key type RSA in file /Users/phenix/.ssh/known_hosts:1
debug3: load_hostkeys: loaded 1 keys
debug1: Host 'popo.net' is known and matches the RSA host key.
debug1: Found key in /Users/phenix/.ssh/known_hosts:1
debug2: bits set: 516/1024
debug1: ssh_rsa_verify: signature correct
debug2: kex_derive_keys
debug2: set_newkeys: mode 1
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug2: set_newkeys: mode 0
debug1: SSH2_MSG_NEWKEYS received
debug1: Roaming not allowed by server
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug2: service_accept: ssh-userauth
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug2: key: /Users/phenix/.ssh/id_rsa (0x0)
debug2: key: /Users/phenix/.ssh/id_dsa (0x0)
debug1: Authentications that can continue: publickey,password
debug3: start over, passed a different list publickey,password
debug3: preferred publickey,keyboard-interactive,password
debug3: authmethod_lookup publickey
debug3: remaining preferred: keyboard-interactive,password
debug3: authmethod_is_enabled publickey
debug1: Next authentication method: publickey
debug1: Trying private key: /Users/phenix/.ssh/id_rsa
debug1: key_parse_private_pem: PEM_read_PrivateKey failed
debug1: read PEM private key done: type &lt;unknown&gt;
debug2: no passphrase given, try next key
debug1: Trying private key: /Users/phenix/.ssh/id_dsa
debug3: no such identity: /Users/phenix/.ssh/id_dsa
debug2: we did not send a packet, disable method
debug3: authmethod_lookup password
debug3: remaining preferred: ,password
debug3: authmethod_is_enabled password
debug1: Next authentication method: password
root@popo.net's password: 
</code></pre>
","<p>I found the answer to my problem here: <a href=""https://superuser.com/a/436015"">https://superuser.com/a/436015</a>.</p>

<p>In short, <code>IdentitiesOnly yes</code> needs to be specified on either the host or the global SSH client configuration because otherwise, unspecified keys may also be tried, including keys in the <code>ssh-agent</code> if one is running.</p>
","19390","<ssh><rsa><private-key>","7","10","4","2019-05-30 14:33:04","","0","0","4935114","","2017-12-24 10:57:35","2013-03-07 07:23:08",""
"15265342","ssh cannot use the IdentityFile config in file ~/.ssh/config","<p>client：Mac 10.8，server：Ubuntu 10.04 LTS 64bit</p>

<p>I use '<strong>ssh-keygen -t rsa</strong>' generate public/private keys.</p>

<p>First, I input: <strong>ssh -i /Users/phenix/.ssh/poponet_rsa root@popo.net</strong>, I can login to the server with the private key 'poponet_rsa'</p>

<p>Next, I create a config file: <strong>/Users/phenix/.ssh/config</strong>, with content:</p>

<pre><code>Host popo
    Hostname popo.net
    User root
    PreferredAuthentications publickey
    IdentityFile /Users/phenix/.ssh/poponet_rsa
</code></pre>

<p>and I input <strong>ssh root@popo.net</strong>, the Terminal ask me the password.</p>

<p>Next, I change <strong>poponet_rsa</strong> filename to <strong>id_rsa</strong>, and input <strong>ssh root@popo.net</strong>, OK, I login.</p>

<p>My question: <strong>ssh cannot use the IdentityFile config in file ~/.ssh/config, why?</strong></p>

<pre><code>$ ssh -vvv root@popo.net
OpenSSH_5.9p1, OpenSSL 0.9.8r 8 Feb 2011
debug1: Reading configuration data /Users/phenix/.ssh/config
debug1: /Users/phenix/.ssh/config line 1: Applying options for popo.net
debug1: /Users/phenix/.ssh/config line 2: Applying options for popo.net
debug1: Reading configuration data /etc/ssh_config
debug1: /etc/ssh_config line 20: Applying options for *
debug2: ssh_connect: needpriv 0
debug1: Connecting to popo.net [111.111.111.111] port 22.
debug1: Connection established.
debug3: Incorrect RSA1 identifier
debug3: Could not load ""/Users/phenix/.ssh/id_rsa"" as a RSA1 public key
debug1: identity file /Users/phenix/.ssh/id_rsa type -1
debug1: identity file /Users/phenix/.ssh/id_rsa-cert type -1
debug1: identity file /Users/phenix/.ssh/id_dsa type -1
debug1: identity file /Users/phenix/.ssh/id_dsa-cert type -1
debug1: Remote protocol version 2.0, remote software version OpenSSH_5.3p1 Debian-3ubuntu7
debug1: match: OpenSSH_5.3p1 Debian-3ubuntu7 pat OpenSSH*
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_5.9
debug2: fd 3 setting O_NONBLOCK
debug3: load_hostkeys: loading entries for host ""popo.net"" from file ""/Users/phenix/.ssh/known_hosts""
debug3: load_hostkeys: found key type RSA in file /Users/phenix/.ssh/known_hosts:1
debug3: load_hostkeys: loaded 1 keys
debug3: order_hostkeyalgs: prefer hostkeyalgs: ssh-rsa-cert-v01@openssh.com,ssh-rsa-cert-v00@openssh.com,ssh-rsa
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug2: kex_parse_kexinit: **too much init, i delete them.**
debug2: mac_setup: found hmac-md5
debug1: kex: server-&gt;client aes128-ctr hmac-md5 none
debug2: mac_setup: found hmac-md5
debug1: kex: client-&gt;server aes128-ctr hmac-md5 none
debug1: SSH2_MSG_KEX_DH_GEX_REQUEST(1024&lt;1024&lt;8192) sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_GROUP
debug2: dh_gen_key: priv key bits set: 135/256
debug2: bits set: 468/1024
debug1: SSH2_MSG_KEX_DH_GEX_INIT sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_REPLY
debug1: Server host key: RSA xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx
debug3: load_hostkeys: loading entries for host ""popo.net"" from file ""/Users/phenix/.ssh/known_hosts""
debug3: load_hostkeys: found key type RSA in file /Users/phenix/.ssh/known_hosts:1
debug3: load_hostkeys: loaded 1 keys
debug3: load_hostkeys: loading entries for host ""111.111.111.111"" from file ""/Users/phenix/.ssh/known_hosts""
debug3: load_hostkeys: found key type RSA in file /Users/phenix/.ssh/known_hosts:1
debug3: load_hostkeys: loaded 1 keys
debug1: Host 'popo.net' is known and matches the RSA host key.
debug1: Found key in /Users/phenix/.ssh/known_hosts:1
debug2: bits set: 516/1024
debug1: ssh_rsa_verify: signature correct
debug2: kex_derive_keys
debug2: set_newkeys: mode 1
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug2: set_newkeys: mode 0
debug1: SSH2_MSG_NEWKEYS received
debug1: Roaming not allowed by server
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug2: service_accept: ssh-userauth
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug2: key: /Users/phenix/.ssh/id_rsa (0x0)
debug2: key: /Users/phenix/.ssh/id_dsa (0x0)
debug1: Authentications that can continue: publickey,password
debug3: start over, passed a different list publickey,password
debug3: preferred publickey,keyboard-interactive,password
debug3: authmethod_lookup publickey
debug3: remaining preferred: keyboard-interactive,password
debug3: authmethod_is_enabled publickey
debug1: Next authentication method: publickey
debug1: Trying private key: /Users/phenix/.ssh/id_rsa
debug1: key_parse_private_pem: PEM_read_PrivateKey failed
debug1: read PEM private key done: type &lt;unknown&gt;
debug2: no passphrase given, try next key
debug1: Trying private key: /Users/phenix/.ssh/id_dsa
debug3: no such identity: /Users/phenix/.ssh/id_dsa
debug2: we did not send a packet, disable method
debug3: authmethod_lookup password
debug3: remaining preferred: ,password
debug3: authmethod_is_enabled password
debug1: Next authentication method: password
root@popo.net's password: 
</code></pre>
","<p>I think the answer lies in the mechanism of <code>.ssh/config</code> file.</p>

<p>If you try <code>ssh root@popo</code>, it should work.</p>

<p>The command <code>ssh name@host</code> first match the <code>host</code> in the <code>Host</code> field in <code>.ssh/config</code>, not the <code>HostName</code> sub-field.</p>

<p>It puzzles me for several weeks......</p>
","19390","<ssh><rsa><private-key>","7","2","4","2019-05-30 14:33:04","","0","0","4935114","","2017-12-24 10:57:35","2013-03-07 07:23:08",""
"10580326","PrivateKey trust permissions for local machine ""Trusted roots"" certificates","<p>I have a certificate that has to be imported into <strong>Certificates/Trusted Root Certification Authorities</strong> and has a corresponding private key.</p>

<p>To actually access the key from code you need to set private key permissions to grant full access to particular IIS application pool. I totally understand that but the problem is that this can only be set on personal certificates and not trusted root ones.</p>

<p>I've tried adding the same certificate to Personal store and the following code doesn't break:</p>

<pre><code>X509Store store = new X509Store(StoreName.Root, StoreLocation.LocalMachine);
store.Open(OpenFlags.ReadOnly);

foreach (X509Certificate2 cert in store.Certificates)
{
    if (cert.HasPrivateKey)
    {
        // access private key here
    }
}

store.Close();
</code></pre>

<p>Setting permissions on certificate in personal store works if I change <code>StoreName.Root</code> to <code>StoreName.My</code>. I'm able to access it there. But I'm not able to access it in root. It just says:</p>

<blockquote>
  <p><strong>Keyset does not exist</strong></p>
</blockquote>

<p>Any suggestions?</p>

<h2>Additional information</h2>

<p>If I set my application pools identity to <strong>Local System</strong> (which has total permissions over my machine) I can <strong>successfully</strong> access private key. So the main question is how do I set permissions on my application pool identity to have access to private keys for certificates in the Trusted Root store.</p>

<blockquote>
  <p><strong>Why trusted root store and not personal?</strong><br>
  I have a pre-built assembly that accesses this certificate in this particular store, so simply placing the certificate in Personal store won't do the trick for me. That's why setting trust permissions on private keys of trusted root certificates is imperative.</p>
</blockquote>
","<h2>Solution</h2>

<p>It is possible to set trust permissions on certificates other than those in Personal certificate store, but you can't set permissions via MMC. At least not directly on the store that is. Accepted answer shows a simplified approach with moving certificates around to achieve the same result.</p>

<p>You have to do it this way...</p>

<h2>Getting the tool</h2>

<ol>
<li>Get <a href=""http://www.microsoft.com/en-us/download/details.aspx?id=21459"" rel=""nofollow"">WF_WCF_Samples</a> file from Microsoft. This is a self extracting archive, but you won't need to extract everything. So...</li>
<li>Open the file with any archiver tool and only extract <strong>FindPrivateKey</strong> solution/project</li>
<li>Open in Visual Studio and compile it.</li>
</ol>

<h2>Finding your private key</h2>

<ol>
<li>Open MMC and add <em>Certificates</em> snap-in. Make sure you select Computer and Local Machine when adding it.</li>
<li>Select the store that has your certificate with private key.</li>
<li>Open private key and copy its <em>Thumbprint</em></li>
<li>Open command prompt and navigate to the folder where you compiled your <em>FindPrivateKey</em> tool</li>
<li><p>Enter this command</p>

<blockquote>
  <p>FindPrivateKey YourStoreName LocalMachine -t ""ThumbprintWithSpaces"" -a<br>
  ie.<br>
  FindPrivateKey Root LocalMachine -t ""83 45 22 ..."" -a</p>
</blockquote></li>
<li><p>Copy file along with path (it will liekly span over two lines so copy to Notepad and concatenate)</p></li>
</ol>

<h2>Grant certificate trust</h2>

<ol>
<li><p>open command prompt and enter:</p>

<blockquote>
  <p>icacls ""FullPathOfYourPrivateKey"" /grant:r ""UserFQDN"":f<br>
  ie.<br>
  icacls ""c:\ProgramData..."" /grant:r ""IIS AppPool\ASP.NET v4.0"":f</p>
</blockquote></li>
<li><p>Done.</p></li>
</ol>

<p>This will grant certificate private key full trust to your user (in my case above it's application pool identity) so you can use the key to sign data or do whatever you need to do with it.</p>

<p>In case you don't want full permissions, you can easily change the last part after colon. It can have many different settings, so I urge you to check <em>icacls</em> <a href=""http://technet.microsoft.com/en-us/library/cc753525%28v=ws.10%29.aspx"" rel=""nofollow"">command help</a>.</p>
","19029","<windows-7><iis-7><certificate><windows-server-2008-r2><private-key>","7","4","3","2012-09-26 14:12:28","10594123","0","2","75642","","2012-05-14 15:21:53","2012-05-14 09:04:51",""
"10580326","PrivateKey trust permissions for local machine ""Trusted roots"" certificates","<p>I have a certificate that has to be imported into <strong>Certificates/Trusted Root Certification Authorities</strong> and has a corresponding private key.</p>

<p>To actually access the key from code you need to set private key permissions to grant full access to particular IIS application pool. I totally understand that but the problem is that this can only be set on personal certificates and not trusted root ones.</p>

<p>I've tried adding the same certificate to Personal store and the following code doesn't break:</p>

<pre><code>X509Store store = new X509Store(StoreName.Root, StoreLocation.LocalMachine);
store.Open(OpenFlags.ReadOnly);

foreach (X509Certificate2 cert in store.Certificates)
{
    if (cert.HasPrivateKey)
    {
        // access private key here
    }
}

store.Close();
</code></pre>

<p>Setting permissions on certificate in personal store works if I change <code>StoreName.Root</code> to <code>StoreName.My</code>. I'm able to access it there. But I'm not able to access it in root. It just says:</p>

<blockquote>
  <p><strong>Keyset does not exist</strong></p>
</blockquote>

<p>Any suggestions?</p>

<h2>Additional information</h2>

<p>If I set my application pools identity to <strong>Local System</strong> (which has total permissions over my machine) I can <strong>successfully</strong> access private key. So the main question is how do I set permissions on my application pool identity to have access to private keys for certificates in the Trusted Root store.</p>

<blockquote>
  <p><strong>Why trusted root store and not personal?</strong><br>
  I have a pre-built assembly that accesses this certificate in this particular store, so simply placing the certificate in Personal store won't do the trick for me. That's why setting trust permissions on private keys of trusted root certificates is imperative.</p>
</blockquote>
","<p>I haven't tried this with the Trusted Root Certification Authorities but what I have found is the simplest thing to do with other Certificate Stores is to drag and drop the certificate into the Personal Store and then set permissions and then drag and drop back to the original certificate store. In your case the Trusted Root Certification Authorities.</p>

<p>Steps using Certificates MMC:</p>

<ol>
<li><a href=""https://stackoverflow.com/questions/2609859/how-to-give-asp-net-access-to-a-private-key-in-a-certificate-in-the-certificate"">Import certificate to the store you want it and mark keys as exportable.</a> (You might be able to bypass this and import directly to the Personal Store, but I haven't tried.)</li>
<li>Drag and drop the imported cert to the Personal Store.</li>
<li>Right click the certificate in the Personal Store and in the context menu, click ""All Tasks"", then in the submenu click on ""Manage Private Keys"". Set the appropriate permissions according to your app pool as <a href=""https://stackoverflow.com/questions/2609859/how-to-give-asp-net-access-to-a-private-key-in-a-certificate-in-the-certificate"">referenced in step 1</a>.</li>
<li>After permissions have been set, drag and drop the certificate back to the original store (in your case the Trusted Root Certification Authorities).</li>
</ol>
","19029","<windows-7><iis-7><certificate><windows-server-2008-r2><private-key>","7","7","3","2012-09-26 14:12:28","10594123","0","2","75642","","2012-05-14 15:21:53","2012-05-14 09:04:51",""
"10580326","PrivateKey trust permissions for local machine ""Trusted roots"" certificates","<p>I have a certificate that has to be imported into <strong>Certificates/Trusted Root Certification Authorities</strong> and has a corresponding private key.</p>

<p>To actually access the key from code you need to set private key permissions to grant full access to particular IIS application pool. I totally understand that but the problem is that this can only be set on personal certificates and not trusted root ones.</p>

<p>I've tried adding the same certificate to Personal store and the following code doesn't break:</p>

<pre><code>X509Store store = new X509Store(StoreName.Root, StoreLocation.LocalMachine);
store.Open(OpenFlags.ReadOnly);

foreach (X509Certificate2 cert in store.Certificates)
{
    if (cert.HasPrivateKey)
    {
        // access private key here
    }
}

store.Close();
</code></pre>

<p>Setting permissions on certificate in personal store works if I change <code>StoreName.Root</code> to <code>StoreName.My</code>. I'm able to access it there. But I'm not able to access it in root. It just says:</p>

<blockquote>
  <p><strong>Keyset does not exist</strong></p>
</blockquote>

<p>Any suggestions?</p>

<h2>Additional information</h2>

<p>If I set my application pools identity to <strong>Local System</strong> (which has total permissions over my machine) I can <strong>successfully</strong> access private key. So the main question is how do I set permissions on my application pool identity to have access to private keys for certificates in the Trusted Root store.</p>

<blockquote>
  <p><strong>Why trusted root store and not personal?</strong><br>
  I have a pre-built assembly that accesses this certificate in this particular store, so simply placing the certificate in Personal store won't do the trick for me. That's why setting trust permissions on private keys of trusted root certificates is imperative.</p>
</blockquote>
","<p>If you are using <strong>Windows Server 2003</strong>, you'll notice that you don't get the <strong>Manage Private Keys</strong> task under your certificate.</p>

<p>If you install <strong>Microsoft WSE 2.0</strong> on to your machine, you can use a tool called <strong>X509 Certificate Tool</strong>.  Just search for your cert, its more than likely in (or should be) in Local Machine / Personal Store.</p>

<p>NOTE: if you have your cert in Current User / Personal Store (which often is the default), it will only be accessible to the user that is currently logged in, which means if you want your webserver to access it, it can't without changing permissions to your AppPool.</p>

<p>You should be able to change the permissions to the private key very easily, by default, your AppPool on your webserver will be using <strong>NETWORK SERVICE</strong> to run your web application.  So just add NETWORK SERVICE to the security and by default it will set the <strong>Read and Read / Execute permissions</strong> which is sufficient for your BouncyCastle, etc, to read the private key so you can sign your document.</p>

<p>Hope this helps.</p>

<p><img src=""https://i.stack.imgur.com/lOLdB.png"" alt=""enter image description here""></p>
","19029","<windows-7><iis-7><certificate><windows-server-2008-r2><private-key>","7","3","3","2012-09-26 14:12:28","10594123","0","2","75642","","2012-05-14 15:21:53","2012-05-14 09:04:51",""
"36860696","Android studio git using private key","<p>A have an address of git repository.<br>
Also I have a private key in open-ssh format.<br><br>
Is it possible for git in Android Studio to use it?<br>
I tried to search some info, but no luck at this time.<br><br>
Thanks for any useful information!</p>

<p><strong>Edit.</strong> My steps:<br>
1. I put my private key in .ssh folder (Users/user).<br>
2. In Android studio I run: File - Settings - Version Control - Git and put the path to Git executable.<br>
<a href=""https://i.stack.imgur.com/M1cxM.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/M1cxM.png"" alt=""enter image description here""></a><br>
3. Then VCS - Checkout from vesrion control - Git. I put repository address there. <a href=""https://i.stack.imgur.com/4QJNT.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/4QJNT.png"" alt=""enter image description here""></a></p>

<p>If I continue here, there is:<br><a href=""https://i.stack.imgur.com/VnOJc.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/VnOJc.png"" alt=""enter image description here""></a></p>

<p>But I don't have username and password, only key.<br>
If I try:<br>
<a href=""https://i.stack.imgur.com/SVxhK.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/SVxhK.png"" alt=""enter image description here""></a>
<br> got the following:<br>
<a href=""https://i.stack.imgur.com/Zk7pL.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/Zk7pL.png"" alt=""enter image description here""></a></p>

<p><strong>And how Android Studio would know, that it should take my private key instead of standard id_rsa file?</strong></p>
","<p>You simply need to add the key to your server.<br>
Android studio is using the OS git and not Egit like in Eclipse which has its own git implementation.</p>

<p>No special configuration need to be done.<br>
check that all is working from bash/terminal and it will work in the Android Studio as well.</p>

<hr>

<h2><strong><em><code>What to do if its not working?</code></em></strong></h2>

<p>If you cant access your repository from the Studio use the following format as your connections url</p>

<pre><code>:ssh:git@&lt;server ip&gt;:&lt;git repository path&gt;
</code></pre>

<p>This will use a direct connection using ssh keys.</p>
","19028","<git><android-studio><ssh><private-key>","11","0","5","2019-02-25 09:53:28","37159115","1","2","4342778","","2016-04-26 10:14:06","2016-04-26 09:24:33",""
"36860696","Android studio git using private key","<p>A have an address of git repository.<br>
Also I have a private key in open-ssh format.<br><br>
Is it possible for git in Android Studio to use it?<br>
I tried to search some info, but no luck at this time.<br><br>
Thanks for any useful information!</p>

<p><strong>Edit.</strong> My steps:<br>
1. I put my private key in .ssh folder (Users/user).<br>
2. In Android studio I run: File - Settings - Version Control - Git and put the path to Git executable.<br>
<a href=""https://i.stack.imgur.com/M1cxM.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/M1cxM.png"" alt=""enter image description here""></a><br>
3. Then VCS - Checkout from vesrion control - Git. I put repository address there. <a href=""https://i.stack.imgur.com/4QJNT.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/4QJNT.png"" alt=""enter image description here""></a></p>

<p>If I continue here, there is:<br><a href=""https://i.stack.imgur.com/VnOJc.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/VnOJc.png"" alt=""enter image description here""></a></p>

<p>But I don't have username and password, only key.<br>
If I try:<br>
<a href=""https://i.stack.imgur.com/SVxhK.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/SVxhK.png"" alt=""enter image description here""></a>
<br> got the following:<br>
<a href=""https://i.stack.imgur.com/Zk7pL.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/Zk7pL.png"" alt=""enter image description here""></a></p>

<p><strong>And how Android Studio would know, that it should take my private key instead of standard id_rsa file?</strong></p>
","<p>Ok, finally got it working!<br><br>
What I did - switched to .ssh folder, then replaced contents of <code>id_rsa</code> key (as I understand, this is default ssh key of Android Studio) with contents of my <code>ssh key</code>.</p>

<p>Still don't know the way, how can I point Android Studio to my <code>ssh key</code>, but in such way it works.</p>
","19028","<git><android-studio><ssh><private-key>","11","8","5","2019-02-25 09:53:28","37159115","1","2","4342778","","2016-04-26 10:14:06","2016-04-26 09:24:33",""
"36860696","Android studio git using private key","<p>A have an address of git repository.<br>
Also I have a private key in open-ssh format.<br><br>
Is it possible for git in Android Studio to use it?<br>
I tried to search some info, but no luck at this time.<br><br>
Thanks for any useful information!</p>

<p><strong>Edit.</strong> My steps:<br>
1. I put my private key in .ssh folder (Users/user).<br>
2. In Android studio I run: File - Settings - Version Control - Git and put the path to Git executable.<br>
<a href=""https://i.stack.imgur.com/M1cxM.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/M1cxM.png"" alt=""enter image description here""></a><br>
3. Then VCS - Checkout from vesrion control - Git. I put repository address there. <a href=""https://i.stack.imgur.com/4QJNT.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/4QJNT.png"" alt=""enter image description here""></a></p>

<p>If I continue here, there is:<br><a href=""https://i.stack.imgur.com/VnOJc.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/VnOJc.png"" alt=""enter image description here""></a></p>

<p>But I don't have username and password, only key.<br>
If I try:<br>
<a href=""https://i.stack.imgur.com/SVxhK.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/SVxhK.png"" alt=""enter image description here""></a>
<br> got the following:<br>
<a href=""https://i.stack.imgur.com/Zk7pL.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/Zk7pL.png"" alt=""enter image description here""></a></p>

<p><strong>And how Android Studio would know, that it should take my private key instead of standard id_rsa file?</strong></p>
","<p>How to get it working using Android Studio on Windows and PuttyGen for generating the key - for dummies:</p>

<ol>
<li><p>Export your private key using PuttyGen to file Conversions>Export OpenSSHKey</p></li>
<li><p>On the Windows machine where you have Android Studio installed go to your %USER%/.ssh directory.</p></li>
<li><p>Copy the file exported in step 1 to this folder and change filename to ""id_rsa"".</p></li>
<li><p>In Android Studio menu go to VCS>Checkout from Version Control>Git.</p></li>
<li><p>Paste Git url (as mentioned in other replies) and press ""Clone"".</p></li>
<li><p>It should ask you for password for the key file (if used) instead of a password for Git. </p></li>
</ol>
","19028","<git><android-studio><ssh><private-key>","11","5","5","2019-02-25 09:53:28","37159115","1","2","4342778","","2016-04-26 10:14:06","2016-04-26 09:24:33",""
"36860696","Android studio git using private key","<p>A have an address of git repository.<br>
Also I have a private key in open-ssh format.<br><br>
Is it possible for git in Android Studio to use it?<br>
I tried to search some info, but no luck at this time.<br><br>
Thanks for any useful information!</p>

<p><strong>Edit.</strong> My steps:<br>
1. I put my private key in .ssh folder (Users/user).<br>
2. In Android studio I run: File - Settings - Version Control - Git and put the path to Git executable.<br>
<a href=""https://i.stack.imgur.com/M1cxM.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/M1cxM.png"" alt=""enter image description here""></a><br>
3. Then VCS - Checkout from vesrion control - Git. I put repository address there. <a href=""https://i.stack.imgur.com/4QJNT.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/4QJNT.png"" alt=""enter image description here""></a></p>

<p>If I continue here, there is:<br><a href=""https://i.stack.imgur.com/VnOJc.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/VnOJc.png"" alt=""enter image description here""></a></p>

<p>But I don't have username and password, only key.<br>
If I try:<br>
<a href=""https://i.stack.imgur.com/SVxhK.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/SVxhK.png"" alt=""enter image description here""></a>
<br> got the following:<br>
<a href=""https://i.stack.imgur.com/Zk7pL.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/Zk7pL.png"" alt=""enter image description here""></a></p>

<p><strong>And how Android Studio would know, that it should take my private key instead of standard id_rsa file?</strong></p>
","<p>As @CodeWizard mentioned, Android Studio was getting the key from the OS so using ssh-add to add the keys to the ssh-agent worked for me.</p>

<pre><code>ssh-add ~/.ssh/id_rsa
</code></pre>

<p>More info:
<a href=""https://help.github.com/en/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent"" rel=""noreferrer"">https://help.github.com/en/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent</a></p>
","19028","<git><android-studio><ssh><private-key>","11","5","5","2019-02-25 09:53:28","37159115","1","2","4342778","","2016-04-26 10:14:06","2016-04-26 09:24:33",""
"36860696","Android studio git using private key","<p>A have an address of git repository.<br>
Also I have a private key in open-ssh format.<br><br>
Is it possible for git in Android Studio to use it?<br>
I tried to search some info, but no luck at this time.<br><br>
Thanks for any useful information!</p>

<p><strong>Edit.</strong> My steps:<br>
1. I put my private key in .ssh folder (Users/user).<br>
2. In Android studio I run: File - Settings - Version Control - Git and put the path to Git executable.<br>
<a href=""https://i.stack.imgur.com/M1cxM.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/M1cxM.png"" alt=""enter image description here""></a><br>
3. Then VCS - Checkout from vesrion control - Git. I put repository address there. <a href=""https://i.stack.imgur.com/4QJNT.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/4QJNT.png"" alt=""enter image description here""></a></p>

<p>If I continue here, there is:<br><a href=""https://i.stack.imgur.com/VnOJc.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/VnOJc.png"" alt=""enter image description here""></a></p>

<p>But I don't have username and password, only key.<br>
If I try:<br>
<a href=""https://i.stack.imgur.com/SVxhK.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/SVxhK.png"" alt=""enter image description here""></a>
<br> got the following:<br>
<a href=""https://i.stack.imgur.com/Zk7pL.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/Zk7pL.png"" alt=""enter image description here""></a></p>

<p><strong>And how Android Studio would know, that it should take my private key instead of standard id_rsa file?</strong></p>
","<p>To add one more answer.
Android Studio comes with Built in SSH client. You must switch from the built in to native.
This will use the keys from .ssh folder</p>

<p>File -> Settings -> Version Control -> Git -> SSH Executable -> Native</p>
","19028","<git><android-studio><ssh><private-key>","11","2","5","2019-02-25 09:53:28","37159115","1","2","4342778","","2016-04-26 10:14:06","2016-04-26 09:24:33",""
"4422633","RSA: Private key calculation with Extended Euclidean Algorithm","<p>I'm a high school student writing a paper on RSA, and I'm doing an example with some very small prime numbers. I understand how the system works, but I can't for the life of me calculate the private key using the extended euclidean algorithm.</p>

<p>Here's what I have done so far:</p>

<ul>
<li>I have chosen the prime numbers p=37
and q=89 and calculated N=3293</li>
<li>I have calculated (p-1)(q-1)=3168</li>
<li>I have chosen a number e so that e and 3168 are relatively prime. I'm checking this with the standard euclidean algorithm, and that works very well. My e=25</li>
</ul>

<p>Now I just have to calculate the private key d, which should satisfy ed=1 (mod 3168)</p>

<p>Using the Extended Euclidean Algorithm to find d such that de+tN=1 I get -887•25+7•3168=1. I throw the 7 away and get d=-887. Trying to decrypt a message, however, this doesn't work.</p>

<p>I know from my book that d should be 2281, and it works, but I can't figure out how they arrive at that number.</p>

<p>Can anyone help? I've tried solving this problem for the last 4 hours, and have looked for an answer everywhere. I'm doing the Extended Euclidean Algorithm by hand, but since the result works my calculations should be right.</p>

<p>Thanks in advance,</p>

<p>Mads</p>
","<p>You're so close you're going to kick yourself.</p>

<p>3168-887=2281.</p>

<p>Specifically, If you have a mod x, then A must satisfy <code>0&lt;=a&lt;x</code>. If it doesn't, add or subtract x as many times as necessary until you are in this range. This is called modular arithmetic.</p>

<p>You might want to read up on linear congruences and number theory. These topics are degree level mathematics in the UK (what you'd call college I guess) so don't worry if it seems a bit odd. A linear congruence simply says that <code>-887 mod 3168</code> and <code>2281 mod 3168</code> are actually the same thing because they are part of the same class, the class that turns out as <code>2281 mod 3168</code> in the required range. <code>2281+3168 mod 3168</code> would also be in that class.</p>

<p>Have fun!</p>

<p>P.S. PARI/GP is a utility number theorists use for calculations. Might be worth a look.</p>
","18825","<algorithm><rsa><private-key><greatest-common-divisor>","20","20","1","2016-07-05 08:24:40","","2","3","","","","2010-12-12 16:26:52",""
"4097514","Decrypt with PrivateKey X.509 Certificate","<p>I have a problem to decrypt a message usgin X.509 Certificate.</p>

<p>I generate my certificate with makecert with this options:</p>

<pre><code>makecert -r -pe -n ""CN=MyCertificate"" -ss CA -sr CurrentUser -a sha1 -sky signature -cy authority -sv CA.pvk CA.cer
</code></pre>

<p>And the PrivateKey was ""mypassword"".</p>

<p>My problem is when I want to decrypt a message encrypt with previous certificate in c#.</p>

<p>I found this class <a href=""http://blog.shutupandcode.net/?p=660"" rel=""noreferrer"">http://blog.shutupandcode.net/?p=660</a>, but in the <b>X509Decrypt</b> method allways the PrivateKey is null.</p>

<pre>
public static byte[] X509Decrypt(byte[] data, string certificateFile, string password)
{
    // load the certificate and decrypt the specified data
    using (var ss = new System.Security.SecureString())
    {
        foreach (var keyChar in password.ToCharArray())
            ss.AppendChar(keyChar);

        // load the password protected certificate file
        X509Certificate2 cert = new X509Certificate2(certificateFile, ss);

        using (RSACryptoServiceProvider rsa = (RSACryptoServiceProvider)cert.PrivateKey)
        {
            return rsa.Decrypt(data, true);
        }    
    }
}
</pre>

<p>I tried passing the certificate file (.cer)</p>

<pre>
X509DecryptString(token, @""c:\CA.cer"", ""mypassword"");
</pre>

<p>And passing the pvk file (.pvk)</p>

<pre>
X509DecryptString(token, @""c:\CA.pvk"", ""mypassword"");
</pre>

<p>But allways have that the PrivateKey property is null.</p>

<p>Can anyone guide me to decrypt the message using the pvk file?</p>

<p>Thanks,</p>

<p>Jose</p>
","<p>The certificate itself only contains the public key (+ some data), but not the private key. (It's very unlikely that the RSA private key is ""mypassword"". The password that protects your private key may be ""mypassword"", but the private key itself (more specifically the private exponent, in RSA) will be a rather long number.)</p>

<p>As a result (because <code>CA.cer</code> only contains the certificate), <code>X509DecryptString(token, @""c:\CA.cer"", ""mypassword"")</code> will almost certainly not work.</p>

<p><code>X509DecryptString(token, @""c:\CA.pvk"", ""mypassword"");</code> could work in principle, but you're creating a <code>X509Certificate2</code> object from it, and it still needs the certificate and the private key. You should be able to load that from a PKCS#12 container (.p12/.pfx).</p>

<p>To create this container, you can use <code>pvk2pfx</code>:</p>

<pre><code>pvk2pfx -spc CA.cer -pvk CA.pvk -pfx CA.pfx
</code></pre>

<p>(If you don't specify <code>-pfx CA.pfx</code>, it will launch the interactive interface, in which case you need to tick the box to export the private key.)</p>

<p>Then, try to decrypt using that pfx/p12 file instead.</p>
","18597","<c#><.net><certificate><private-key>","7","12","2","2010-11-04 18:49:13","4097817","0","2","","","","2010-11-04 14:14:26",""
"4097514","Decrypt with PrivateKey X.509 Certificate","<p>I have a problem to decrypt a message usgin X.509 Certificate.</p>

<p>I generate my certificate with makecert with this options:</p>

<pre><code>makecert -r -pe -n ""CN=MyCertificate"" -ss CA -sr CurrentUser -a sha1 -sky signature -cy authority -sv CA.pvk CA.cer
</code></pre>

<p>And the PrivateKey was ""mypassword"".</p>

<p>My problem is when I want to decrypt a message encrypt with previous certificate in c#.</p>

<p>I found this class <a href=""http://blog.shutupandcode.net/?p=660"" rel=""noreferrer"">http://blog.shutupandcode.net/?p=660</a>, but in the <b>X509Decrypt</b> method allways the PrivateKey is null.</p>

<pre>
public static byte[] X509Decrypt(byte[] data, string certificateFile, string password)
{
    // load the certificate and decrypt the specified data
    using (var ss = new System.Security.SecureString())
    {
        foreach (var keyChar in password.ToCharArray())
            ss.AppendChar(keyChar);

        // load the password protected certificate file
        X509Certificate2 cert = new X509Certificate2(certificateFile, ss);

        using (RSACryptoServiceProvider rsa = (RSACryptoServiceProvider)cert.PrivateKey)
        {
            return rsa.Decrypt(data, true);
        }    
    }
}
</pre>

<p>I tried passing the certificate file (.cer)</p>

<pre>
X509DecryptString(token, @""c:\CA.cer"", ""mypassword"");
</pre>

<p>And passing the pvk file (.pvk)</p>

<pre>
X509DecryptString(token, @""c:\CA.pvk"", ""mypassword"");
</pre>

<p>But allways have that the PrivateKey property is null.</p>

<p>Can anyone guide me to decrypt the message using the pvk file?</p>

<p>Thanks,</p>

<p>Jose</p>
","<p>I think you should be using ""-sky exchange"" to generate a public/private key pair.</p>
","18597","<c#><.net><certificate><private-key>","7","0","2","2010-11-04 18:49:13","4097817","0","2","","","","2010-11-04 14:14:26",""
"49457787","How to Export a Multi-line Environment Variable in Bash/Terminal e.g: RSA Private Key","<p>One of our Apps <a href=""https://github.com/dwyl/github-backup"" rel=""noreferrer""><code>github-backup</code></a> requires the use of an RSA Private Key as an Environment Variable.</p>

<p>Simply attempting to export the key it in the terminal e.g:
<code>text
export PRIVATE_KEY=-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA04up8hoqzS1+
...
l48DlnUtMdMrWvBlRFPzU+hU9wDhb3F0CATQdvYo2mhzyUs8B1ZSQz2Vy==
-----END RSA PRIVATE KEY-----
</code></p>

<p>Does not work ... because of the line breaks.</p>

<p>I did a bit of googling but did not find a workable solution ... <br />
e.g: <a href=""https://stackoverflow.com/questions/43082918/how-to-sett-multiline-rsa-private-key-environment-variable-for-aws-elastic-beans"">How to set multiline RSA private key environment variable for AWS Elastic Beans</a></p>

<p><img src=""https://user-images.githubusercontent.com/194400/37850998-2f87b140-2ed5-11e8-8350-c003c2768e1f.png"" alt=""image""></p>

<p>Error:
<code>
-----END RSA PRIVATE KEY-----': not a valid identifier
</code></p>

<p>followed the instructions in: 
<a href=""http://blog.vawter.com/2016/02/10/Create-an-Environment-Variable-from-a-Private-Key"" rel=""noreferrer"">http://blog.vawter.com/2016/02/10/Create-an-Environment-Variable-from-a-Private-Key</a> </p>

<p>Created a file called <code>keytoenvar.sh</code> with the following lines:</p>

<pre><code>#!/usr/bin/env bash
file=$2
name=$1
export $name=""$(awk 'BEGIN{}{out=out$0""\n""}END{print out}' $file| sed 's/\n$//')""
</code></pre>

<p><img src=""https://user-images.githubusercontent.com/194400/37851077-76edb4da-2ed5-11e8-8872-ea75be0217a0.png"" alt=""image"">
then ran the following command:</p>

<pre><code>source keytoenvar.sh PRIVATE_KEY ./gitbu.2018-03-23.private-key.pem
</code></pre>

<p>That <em>works</em> but it seems like a ""<em>long-winded</em>"" approach ... 🤔 </p>

<p>Does anyone know of a <em>simpler</em> way of doing this? <br />
(<em>I'm hoping for a ""<strong>beginner friendly</strong>"" solution without too many ""steps""...</em>) </p>
","<p><strong>export the key</strong></p>

<pre><code>export PRIVATE_KEY=`cat ./gitbu.2018-03-23.private-key.pem`
</code></pre>

<p><strong>test.sh</strong></p>

<pre><code>#!/bin/bash

echo $PRIVATE_KEY;
</code></pre>

<p>If you want to save the key to a <code>.env</code> file with the rest of your environment variables, all you needed to do is ""wrap"" the private key string in <em>single quotes</em> in the <code>.env</code> file ... e.g: <code>sh exports HELLO_WORLD='-----BEGIN RSA PRIVATE KEY----- MIIEpAIBAAKCAQEA04up8hoqzS1+APIB0RhjXyObwHQnOzhAk5Bd7mhkSbPkyhP1 ... iWlX9HNavcydATJc1f0DpzF0u4zY8PY24RVoW8vk+bJANPp1o2IAkeajCaF3w9nf q/SyqAWVmvwYuIhDiHDaV2A== -----END RSA PRIVATE KEY-----'</code>
So the following command will work:</p>

<pre><code>echo ""export PRIVATE_KEY='`cat ./gitbu.2018-03-23.private-key.pem`'"" &gt;&gt; .env
</code></pre>

<p>Followed by:</p>

<pre><code>source .env
</code></pre>

<p>Now the key will be in your .env file and whenever you source .env it will be exported.</p>
","18588","<environment-variables><multiline><private-key>","21","22","5","2019-07-22 11:47:17","49489260","2","5","","","","2018-03-23 20:24:13",""
"49457787","How to Export a Multi-line Environment Variable in Bash/Terminal e.g: RSA Private Key","<p>One of our Apps <a href=""https://github.com/dwyl/github-backup"" rel=""noreferrer""><code>github-backup</code></a> requires the use of an RSA Private Key as an Environment Variable.</p>

<p>Simply attempting to export the key it in the terminal e.g:
<code>text
export PRIVATE_KEY=-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA04up8hoqzS1+
...
l48DlnUtMdMrWvBlRFPzU+hU9wDhb3F0CATQdvYo2mhzyUs8B1ZSQz2Vy==
-----END RSA PRIVATE KEY-----
</code></p>

<p>Does not work ... because of the line breaks.</p>

<p>I did a bit of googling but did not find a workable solution ... <br />
e.g: <a href=""https://stackoverflow.com/questions/43082918/how-to-sett-multiline-rsa-private-key-environment-variable-for-aws-elastic-beans"">How to set multiline RSA private key environment variable for AWS Elastic Beans</a></p>

<p><img src=""https://user-images.githubusercontent.com/194400/37850998-2f87b140-2ed5-11e8-8350-c003c2768e1f.png"" alt=""image""></p>

<p>Error:
<code>
-----END RSA PRIVATE KEY-----': not a valid identifier
</code></p>

<p>followed the instructions in: 
<a href=""http://blog.vawter.com/2016/02/10/Create-an-Environment-Variable-from-a-Private-Key"" rel=""noreferrer"">http://blog.vawter.com/2016/02/10/Create-an-Environment-Variable-from-a-Private-Key</a> </p>

<p>Created a file called <code>keytoenvar.sh</code> with the following lines:</p>

<pre><code>#!/usr/bin/env bash
file=$2
name=$1
export $name=""$(awk 'BEGIN{}{out=out$0""\n""}END{print out}' $file| sed 's/\n$//')""
</code></pre>

<p><img src=""https://user-images.githubusercontent.com/194400/37851077-76edb4da-2ed5-11e8-8872-ea75be0217a0.png"" alt=""image"">
then ran the following command:</p>

<pre><code>source keytoenvar.sh PRIVATE_KEY ./gitbu.2018-03-23.private-key.pem
</code></pre>

<p>That <em>works</em> but it seems like a ""<em>long-winded</em>"" approach ... 🤔 </p>

<p>Does anyone know of a <em>simpler</em> way of doing this? <br />
(<em>I'm hoping for a ""<strong>beginner friendly</strong>"" solution without too many ""steps""...</em>) </p>
","<p><strong>NOTE</strong>: For me to get the output to work correctly, I had to wrap the environment variable in double quotes. Otherwise it replaced newlines with spaces.</p>

<p>In:</p>

<pre><code>export PRIVATE_KEY=$(cat ./gitbu.2018-03-23.private-key.pem)
</code></pre>

<p>Out:</p>

<pre><code>echo ""$PRIVATE_KEY""
</code></pre>
","18588","<environment-variables><multiline><private-key>","21","5","5","2019-07-22 11:47:17","49489260","2","5","","","","2018-03-23 20:24:13",""
"49457787","How to Export a Multi-line Environment Variable in Bash/Terminal e.g: RSA Private Key","<p>One of our Apps <a href=""https://github.com/dwyl/github-backup"" rel=""noreferrer""><code>github-backup</code></a> requires the use of an RSA Private Key as an Environment Variable.</p>

<p>Simply attempting to export the key it in the terminal e.g:
<code>text
export PRIVATE_KEY=-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA04up8hoqzS1+
...
l48DlnUtMdMrWvBlRFPzU+hU9wDhb3F0CATQdvYo2mhzyUs8B1ZSQz2Vy==
-----END RSA PRIVATE KEY-----
</code></p>

<p>Does not work ... because of the line breaks.</p>

<p>I did a bit of googling but did not find a workable solution ... <br />
e.g: <a href=""https://stackoverflow.com/questions/43082918/how-to-sett-multiline-rsa-private-key-environment-variable-for-aws-elastic-beans"">How to set multiline RSA private key environment variable for AWS Elastic Beans</a></p>

<p><img src=""https://user-images.githubusercontent.com/194400/37850998-2f87b140-2ed5-11e8-8350-c003c2768e1f.png"" alt=""image""></p>

<p>Error:
<code>
-----END RSA PRIVATE KEY-----': not a valid identifier
</code></p>

<p>followed the instructions in: 
<a href=""http://blog.vawter.com/2016/02/10/Create-an-Environment-Variable-from-a-Private-Key"" rel=""noreferrer"">http://blog.vawter.com/2016/02/10/Create-an-Environment-Variable-from-a-Private-Key</a> </p>

<p>Created a file called <code>keytoenvar.sh</code> with the following lines:</p>

<pre><code>#!/usr/bin/env bash
file=$2
name=$1
export $name=""$(awk 'BEGIN{}{out=out$0""\n""}END{print out}' $file| sed 's/\n$//')""
</code></pre>

<p><img src=""https://user-images.githubusercontent.com/194400/37851077-76edb4da-2ed5-11e8-8872-ea75be0217a0.png"" alt=""image"">
then ran the following command:</p>

<pre><code>source keytoenvar.sh PRIVATE_KEY ./gitbu.2018-03-23.private-key.pem
</code></pre>

<p>That <em>works</em> but it seems like a ""<em>long-winded</em>"" approach ... 🤔 </p>

<p>Does anyone know of a <em>simpler</em> way of doing this? <br />
(<em>I'm hoping for a ""<strong>beginner friendly</strong>"" solution without too many ""steps""...</em>) </p>
","<p>If you want to export direct value (not from *.pem) then use <code>""</code> after equals sign. The terminal will let you finish with another <code>""</code>.</p>

<pre><code>export PRIVATE_KEY=""-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA04up8hoqzS1+
...
l48DlnUtMdMrWvBlRFPzU+hU9wDhb3F0CATQdvYo2mhzyUs8B1ZSQz2Vy==
-----END RSA PRIVATE KEY-----""
</code></pre>
","18588","<environment-variables><multiline><private-key>","21","8","5","2019-07-22 11:47:17","49489260","2","5","","","","2018-03-23 20:24:13",""
"49457787","How to Export a Multi-line Environment Variable in Bash/Terminal e.g: RSA Private Key","<p>One of our Apps <a href=""https://github.com/dwyl/github-backup"" rel=""noreferrer""><code>github-backup</code></a> requires the use of an RSA Private Key as an Environment Variable.</p>

<p>Simply attempting to export the key it in the terminal e.g:
<code>text
export PRIVATE_KEY=-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA04up8hoqzS1+
...
l48DlnUtMdMrWvBlRFPzU+hU9wDhb3F0CATQdvYo2mhzyUs8B1ZSQz2Vy==
-----END RSA PRIVATE KEY-----
</code></p>

<p>Does not work ... because of the line breaks.</p>

<p>I did a bit of googling but did not find a workable solution ... <br />
e.g: <a href=""https://stackoverflow.com/questions/43082918/how-to-sett-multiline-rsa-private-key-environment-variable-for-aws-elastic-beans"">How to set multiline RSA private key environment variable for AWS Elastic Beans</a></p>

<p><img src=""https://user-images.githubusercontent.com/194400/37850998-2f87b140-2ed5-11e8-8350-c003c2768e1f.png"" alt=""image""></p>

<p>Error:
<code>
-----END RSA PRIVATE KEY-----': not a valid identifier
</code></p>

<p>followed the instructions in: 
<a href=""http://blog.vawter.com/2016/02/10/Create-an-Environment-Variable-from-a-Private-Key"" rel=""noreferrer"">http://blog.vawter.com/2016/02/10/Create-an-Environment-Variable-from-a-Private-Key</a> </p>

<p>Created a file called <code>keytoenvar.sh</code> with the following lines:</p>

<pre><code>#!/usr/bin/env bash
file=$2
name=$1
export $name=""$(awk 'BEGIN{}{out=out$0""\n""}END{print out}' $file| sed 's/\n$//')""
</code></pre>

<p><img src=""https://user-images.githubusercontent.com/194400/37851077-76edb4da-2ed5-11e8-8872-ea75be0217a0.png"" alt=""image"">
then ran the following command:</p>

<pre><code>source keytoenvar.sh PRIVATE_KEY ./gitbu.2018-03-23.private-key.pem
</code></pre>

<p>That <em>works</em> but it seems like a ""<em>long-winded</em>"" approach ... 🤔 </p>

<p>Does anyone know of a <em>simpler</em> way of doing this? <br />
(<em>I'm hoping for a ""<strong>beginner friendly</strong>"" solution without too many ""steps""...</em>) </p>
","<p>What I wanted is one and only one executable shell script containing it all, and not 1 script and 1 <code>.pem</code> file and then doing some gymnastics in between, like what I am seeing in the existing answers so far. </p>

<p>To achieve this unification, all that is needed is the following. Preparation phase:</p>

<pre><code>cat id_rsa | base64 -w0
# assign the converted 1-liner string wrap in single quote into a shell variable, for example
pk='xxxxxxxxxxxyyyyyyyyyyzzzzzzzzzzz......'
</code></pre>

<p>The rest is walk-in-the park. To ssh using variable <code>pk</code> you will convert back the 1-liner string into its original posture and write to a temporary file.  </p>

<pre><code>t=$(mktemp)
printf $pk | base64 --decode &gt; $t
ssh -i $t smeagol@192.143.69.69
</code></pre>

<p>To clean-up, use the <code>trap</code>:</p>

<pre><code>trap cleanup 1 2 3 6
cleanup () {
    rm -f $t
}
</code></pre>

<p>To improve security, modify <code>mktemp</code> so write somewhere within your <code>$HOME</code> folder where only you can read, rather than in <code>/tmp</code> where other users in the same server can read.  </p>
","18588","<environment-variables><multiline><private-key>","21","5","5","2019-07-22 11:47:17","49489260","2","5","","","","2018-03-23 20:24:13",""
"49457787","How to Export a Multi-line Environment Variable in Bash/Terminal e.g: RSA Private Key","<p>One of our Apps <a href=""https://github.com/dwyl/github-backup"" rel=""noreferrer""><code>github-backup</code></a> requires the use of an RSA Private Key as an Environment Variable.</p>

<p>Simply attempting to export the key it in the terminal e.g:
<code>text
export PRIVATE_KEY=-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA04up8hoqzS1+
...
l48DlnUtMdMrWvBlRFPzU+hU9wDhb3F0CATQdvYo2mhzyUs8B1ZSQz2Vy==
-----END RSA PRIVATE KEY-----
</code></p>

<p>Does not work ... because of the line breaks.</p>

<p>I did a bit of googling but did not find a workable solution ... <br />
e.g: <a href=""https://stackoverflow.com/questions/43082918/how-to-sett-multiline-rsa-private-key-environment-variable-for-aws-elastic-beans"">How to set multiline RSA private key environment variable for AWS Elastic Beans</a></p>

<p><img src=""https://user-images.githubusercontent.com/194400/37850998-2f87b140-2ed5-11e8-8350-c003c2768e1f.png"" alt=""image""></p>

<p>Error:
<code>
-----END RSA PRIVATE KEY-----': not a valid identifier
</code></p>

<p>followed the instructions in: 
<a href=""http://blog.vawter.com/2016/02/10/Create-an-Environment-Variable-from-a-Private-Key"" rel=""noreferrer"">http://blog.vawter.com/2016/02/10/Create-an-Environment-Variable-from-a-Private-Key</a> </p>

<p>Created a file called <code>keytoenvar.sh</code> with the following lines:</p>

<pre><code>#!/usr/bin/env bash
file=$2
name=$1
export $name=""$(awk 'BEGIN{}{out=out$0""\n""}END{print out}' $file| sed 's/\n$//')""
</code></pre>

<p><img src=""https://user-images.githubusercontent.com/194400/37851077-76edb4da-2ed5-11e8-8872-ea75be0217a0.png"" alt=""image"">
then ran the following command:</p>

<pre><code>source keytoenvar.sh PRIVATE_KEY ./gitbu.2018-03-23.private-key.pem
</code></pre>

<p>That <em>works</em> but it seems like a ""<em>long-winded</em>"" approach ... 🤔 </p>

<p>Does anyone know of a <em>simpler</em> way of doing this? <br />
(<em>I'm hoping for a ""<strong>beginner friendly</strong>"" solution without too many ""steps""...</em>) </p>
","<p>You can also use a bash heredoc:</p>

<pre><code>export MY_CERTIFICATE=$(cat &lt;&lt;EOF
-----BEGIN CERTIFICATE-----
qiuwiuwoejqododhIOOISOIIOiiSNIDNIDINDIONDIND
DDHDHUDHDUHUhudhHQhhqoohooiiohihiohihhihhihi
dhdiodhioho...
-----END CERTIFICATE-----
EOF
)
</code></pre>

<p>Once you set it you can access it as a regular env variable <code>echo $MY_CERTIFICATE</code>.</p>
","18588","<environment-variables><multiline><private-key>","21","2","5","2019-07-22 11:47:17","49489260","2","5","","","","2018-03-23 20:24:13",""
"10369547","Amazon EC2 lost private key, how to get access to the server?","<p>My computer was stolen the day before yesterday, and I put one of my servers private key in that, the key is password protected, so it should be OK. But the problem is that now I can not access the server.<br/><br/> 
   The server is Ubuntu, Amazon EC2, <strong>Root Device: Instance Store.</strong> I've been searching this for a whole day, looks like if the server is EBS, then it will be easier to just create an image and launch a new instance. But unfortunately mine is not. <br/><br/>
   I really hope that some one can give me an advise on how to get access to the server, my user type is root, so no one else can modify the key for me.<br/><br/>
   I don't know if you can create private key from the public key, and I don't know if you can actually get the public key from Amazon EC2. Please help.<br/><br/>
   Thank you very much!</p>
","<p>Try to do like this:</p>

<p>Login to your <a href=""https://console.aws.amazon.com"" rel=""nofollow noreferrer"">AWS Management Console</a>, in <code>EC2</code> tab view, you'll find something like <code>1 key Pair</code>, click it, delete your old key pair, then create new pair.</p>

<hr>

<p>EDIT:</p>

<p>Got a related question <a href=""https://console.aws.amazon.com"" rel=""nofollow noreferrer"">HERE</a></p>

<blockquote>
  <p>What you could do, is assign one of your Elastic IP's to the instance and route traffic through that normally. Snapshot the instance and bring up a duplicate with a new Keypair. Switch the Elastic IP over to the new instance. </p>
</blockquote>

<p>and <a href=""https://stackoverflow.com/questions/2181691/on-amazon-ec2-is-it-possible-to-reassign-a-keypair-to-an-already-running-instanc"">HERE</a></p>

<blockquote>
  <p>The best solution we have been able to come up with is to burn an AMI from the running instance and launch a new instance from that AMI using the new key pair.</p>
</blockquote>

<p>How to create your own AMI? <a href=""http://docs.amazonwebservices.com/AWSEC2/latest/UserGuide/creating-an-ami.html?r=8284"" rel=""nofollow noreferrer"">HERE</a>. ;)</p>
","18156","<linux><ubuntu><ssh><amazon-ec2><private-key>","20","11","1","2012-04-29 06:10:59","10369632","4","3","","","","2012-04-29 03:52:41","2012-04-30 16:08:08"
"37613132","Specifying private key on PuTTY command-line","<p>I know there are simple commands to login to remote machine through VBA i.e. by specifying <code>User@hostname</code> and <code>-pw</code> option to provide the password in <code>Wshell.Run</code> function where <code>Wshell</code> is <code>CreateObject(""WScript.Shell"")</code>.</p>

<p>However I need to use private key file (specified under <em>Connection/SSH/Auth</em> option in PuTTY) while logging in through Excel-VBA macro. Is there a way to do it?</p>

<p>I need it because I am using admin account on the second form of my VBA code (First form is using user's own account) and hence cannot provide the password textbox on the second form. Hence the only secure solution is to use SSH login through public and private key.</p>

<p>Thanks in advance!</p>
","<p>Use the <a href=""https://the.earth.li/~sgtatham/putty/latest/htmldoc/Chapter3.html#using-cmdline-identity"" rel=""noreferrer""><code>-i</code> switch</a> to specify the private key.</p>

<pre><code>putty.exe username@example.com -i mykey.ppk
</code></pre>

<p>See <a href=""https://the.earth.li/~sgtatham/putty/latest/htmldoc/Chapter3.html#using-cmdline"" rel=""noreferrer"">PuTTY command line documentation</a>.</p>
","17595","<ssh><command-line><putty><private-key>","14","24","1","2018-05-30 05:50:14","37615178","0","1","850848","","2016-06-03 13:07:10","2016-06-03 11:25:19",""
"23205592","Openssl ""data greater than mod len""","<p>What does the ""data is greater than mod len"" error message mean? I have encountered this while trying to decrypt data using php's openssl_private_decrypt. How does one go about solving this issue? Been searching hours online, not getting anywhere.</p>
","<p>Asymmetric RSA keys can encrypt/decrypt only data of limited length i.e. RSAES-PKCS1-v1_5 encryption scheme defined in <a href=""http://www.ietf.org/rfc/rfc3447.txt"" rel=""noreferrer"">RFC3447</a> can operate on messages of length up to k - 11 octets (k is the octet length of the RSA modulus) so if you are using 2048-bit RSA key then maximum length of the plain data to be encrypted is 245 bytes.</p>
","17220","<encryption><openssl><private-key>","11","15","3","2019-03-24 17:42:46","23205899","0","4","","","","2014-04-21 20:37:55",""
"23205592","Openssl ""data greater than mod len""","<p>What does the ""data is greater than mod len"" error message mean? I have encountered this while trying to decrypt data using php's openssl_private_decrypt. How does one go about solving this issue? Been searching hours online, not getting anywhere.</p>
","<p>If you are having this decryption error: <code>RSA_EAY_PRIVATE_DECRYPT:data greater than mod len</code> try this command before decrypt your file: </p>

<pre><code>cat yourEncryptedFile| base64 -D &gt; yourEncryptedRawFile
</code></pre>
","17220","<encryption><openssl><private-key>","11","8","3","2019-03-24 17:42:46","23205899","0","4","","","","2014-04-21 20:37:55",""
"23205592","Openssl ""data greater than mod len""","<p>What does the ""data is greater than mod len"" error message mean? I have encountered this while trying to decrypt data using php's openssl_private_decrypt. How does one go about solving this issue? Been searching hours online, not getting anywhere.</p>
","<p>You can also try <code>openssl enc -in cipherTextFile.base64 -out binaryTextFile.bin -d -a</code>. This was what worked for me when I got this error while trying to decrypt. I was then able to decrypt using <code>openssl rsautl -decrypt -in binaryTextFile.bin -out plainTextFile.txt -inkey my-private-key.pem</code> without failure.</p>
","17220","<encryption><openssl><private-key>","11","1","3","2019-03-24 17:42:46","23205899","0","4","","","","2014-04-21 20:37:55",""
"19604668","Use and utility of .p12 certificate/file","<p>What is the utility of .p12 file/certificate? I am not getting any correct definition when searching the internet:</p>

<ul>
<li><p>In one site I got ""it stores server side certificates along with intermediate certificates and <strong>private key</strong> in one file. Its mostly used in Windows Machine""</p></li>
<li><p>In another site i got ""it binds a organizations <strong>public key</strong> with its name.</p></li>
</ul>

<p>My question is whether its public key or private key which is included in the .p12 certificate.</p>
","<p>The .p12 contains both the private and the public key, and also information about the owner (name, email address, etc. ) all being certified by a third party. With such certificate, a user can identify himself and authenticate himself to any organization trusting the third party.</p>

<p>You should be able to see the content of the p12 file with </p>

<pre><code>openssl pkcs12 -info -in filename.p12
</code></pre>

<p>provided openssl is installed in your system.</p>
","17073","<certificate><private-key><public-key>","14","22","1","2014-02-23 14:16:38","19604713","1","5","321731","","2014-02-23 14:16:38","2013-10-26 08:35:30",""
"1722305","How to import PKCS#8 RSA privateKey (created by OpenSSL) in C#","<p>I'm trying to find a way to read a privateKey created using OpenSSL PKCS#8 RSA in C# without use external library.</p>

<p>Does Someone know how i can do this?</p>
","<p>The easiest way to do this <em>with</em> an external library, is using the (free) <a href=""http://www.chilkatsoft.com/privatekey-features.asp"" rel=""nofollow noreferrer"">Chillkat Public / Private Key Component</a>: using that, importing the key can be done using <a href=""http://www.example-code.com/csharp/rsa_signPkcs8.asp"" rel=""nofollow noreferrer"">just a few lines of code</a> and if you're willing to pay the $149 or so for the rest of the library, it will make dealing with general crypto concepts a lot easier as well.</p>

<p>And unlike the regular Microsoft .NET Framework, the Mono project <em>does</em> seem to have a <a href=""http://www.go-mono.com/docs/index.aspx?tlink=18@ecma%3a349%23PKCS8%2f"" rel=""nofollow noreferrer"">PKCS8 implementation</a> for which the <a href=""http://www.koders.com/csharp/fid0005D522A9B5E25FEF70E4D9DA37822E5E9725EC.aspx"" rel=""nofollow noreferrer"">full C# source</a> is available. This may be suitable as a starting point in case you absolutely cannot rely on external libraries, assuming the (LGPL 2.0) license associated with the Mono code works for you...</p>

<p>Finally, the <a href=""ftp://ftp.rsasecurity.com/pub/pkcs/doc/pkcs-8.doc"" rel=""nofollow noreferrer"">PKCS #8 format</a> is not too difficult to parse, and the RSA/DSA key pair objects are as per <a href=""ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-11/v2-30/pkcs-11v2-30m1-d7.pdf"" rel=""nofollow noreferrer"">PKCS #11</a> and relatively easy to convert to a .NET X509Certificate once you figure out where all the bits go -- I actually did this in VB.NET a while ago, but unfortunately am not able to share that code.</p>
","17024","<c#><rsa><private-key><pkcs#8>","3","3","2","2014-10-03 14:55:20","1728802","0","3","205034","","2011-09-24 13:13:20","2009-11-12 13:49:28",""
"1722305","How to import PKCS#8 RSA privateKey (created by OpenSSL) in C#","<p>I'm trying to find a way to read a privateKey created using OpenSSL PKCS#8 RSA in C# without use external library.</p>

<p>Does Someone know how i can do this?</p>
","<p>Thanks for your answer.</p>

<p>My script to create RSA key i used OpenSSL whit:</p>

<p>(Linux Script)</p>

<pre><code>openssl genrsa -out ${NAME}_openssl.key 2048
openssl pkcs8 -topk8 -in ${NAME}_openssl.key -nocrypt &gt; ${NAME}.key
openssl req -new -x509 -key ${NAME}.key -out ${NAME}.crt -outform DER
</code></pre>

<p>In C# we need privateKey in XML format. I used <a href=""http://www.jensign.com/opensslkey/index.html"" rel=""nofollow noreferrer"">this</a> parser to do this.</p>

<p>To decrypt de challenge we need to use:</p>

<pre><code>  byte[] challange = server.getChallenge();

  RSACryptoServiceProvider rsaProvider = new RSACryptoServiceProvider();

  rsaProvider.FromXmlString(Demo.Properties.Resources.XmlPrivateKey);

  byte[] plaintext = rsaProvider.Decrypt(challange, false);
</code></pre>

<p>To encrypt whit server certificate we need to use:</p>

<pre><code>  RSACryptoServiceProvider rsaProvider = x509.PublicKey.Key as RSACryptoServiceProvider;

  byte[] answer = RsaProvider.Encrypt(plaintext, false);
</code></pre>

<p>Thanks for JavaScience Consulting</p>
","17024","<c#><rsa><private-key><pkcs#8>","3","2","2","2014-10-03 14:55:20","1728802","0","3","205034","","2011-09-24 13:13:20","2009-11-12 13:49:28",""
"17339821","Error generating SSL private key - Heroku - OpenSSL - Rails","<p>I am following the instructions on <a href=""https://devcenter.heroku.com/articles/ssl-endpoint"" rel=""nofollow"">https://devcenter.heroku.com/articles/ssl-endpoint</a> but getting stuck on generating private key. It says to generate a private key '$ openssl genrsa -des3 -out server.pass.key 2048' so I'm typing into rails command line</p>

<pre><code>$ heroku run openssl genrsa -des3 -out server.pass.key 2048
</code></pre>

<p>This seems to work and I can enter a passphrase twice (but there is no confirmation message)</p>

<p>The next stage is to type the following ""$ openssl rsa -in server.pass.key -out server.key"" - so that the private key can be stripped of its passphrase. So:</p>

<pre><code>$ heroku run openssl rsa -in server.pass.key -out server.key

But here I get the following error:
Error opening Private key server.pass.key
2:error:02001002:system library:fopen no such file or directory:bss_file.c:356:f
open('server.pass.key','r')
2:error:20074002:BIO routines:FILE CTRL:system lib:bss_file.c:358:
Unable to load private key
</code></pre>

<p>Any ideas? Thanks.</p>

<p>(by the way I already have site-wide SSL enabled on the app, using heroku's certificate. I am trying to change to my own SSL certificate for my own domain).</p>
","<p>I think the idea is to run those commands <em>locally</em>, on your own computer. First, make sure you have <code>openssl</code> installed (if you don't, follow the instructions on the provided Heroku help page, or use a friend's computer that has it installed). Then, type this:</p>



<pre class=""lang-sh prettyprint-override""><code>$ openssl genrsa -des3 -out server.pass.key 2048
Generating RSA private key, 2048 bit long modulus
........................................................................................+++
..........+++
e is 65537 (0x10001)
Enter pass phrase for server.pass.key:
Verifying - Enter pass phrase for server.pass.key:
</code></pre>

<p>After this step, there should be a file named <code>server.pass.key</code> in the current directory:</p>

<pre class=""lang-sh prettyprint-override""><code>$ ls
server.pass.key
</code></pre>

<p>Then, run the second command:</p>

<pre class=""lang-sh prettyprint-override""><code>$ openssl rsa -in server.pass.key -out server.key
Enter pass phrase for server.pass.key:
writing RSA key
</code></pre>

<p>After you finish this step, there should be two files in the directory. Then, continue as it says in instructions.</p>

<pre class=""lang-sh prettyprint-override""><code>$ ls
server.key  server.pass.key
</code></pre>
","16957","<ruby-on-rails><ssl><heroku><openssl><private-key>","2","6","2","2014-04-11 19:50:33","17359001","3","","2417421","","2013-06-27 09:56:02","2013-06-27 09:43:35",""
"17339821","Error generating SSL private key - Heroku - OpenSSL - Rails","<p>I am following the instructions on <a href=""https://devcenter.heroku.com/articles/ssl-endpoint"" rel=""nofollow"">https://devcenter.heroku.com/articles/ssl-endpoint</a> but getting stuck on generating private key. It says to generate a private key '$ openssl genrsa -des3 -out server.pass.key 2048' so I'm typing into rails command line</p>

<pre><code>$ heroku run openssl genrsa -des3 -out server.pass.key 2048
</code></pre>

<p>This seems to work and I can enter a passphrase twice (but there is no confirmation message)</p>

<p>The next stage is to type the following ""$ openssl rsa -in server.pass.key -out server.key"" - so that the private key can be stripped of its passphrase. So:</p>

<pre><code>$ heroku run openssl rsa -in server.pass.key -out server.key

But here I get the following error:
Error opening Private key server.pass.key
2:error:02001002:system library:fopen no such file or directory:bss_file.c:356:f
open('server.pass.key','r')
2:error:20074002:BIO routines:FILE CTRL:system lib:bss_file.c:358:
Unable to load private key
</code></pre>

<p>Any ideas? Thanks.</p>

<p>(by the way I already have site-wide SSL enabled on the app, using heroku's certificate. I am trying to change to my own SSL certificate for my own domain).</p>
","<p>Check if your file is formed correctly.
I changed </p>

<pre><code>-----END CERTIFICATE----------BEGIN RSA PRIVATE KEY-----
</code></pre>

<p>into </p>

<pre><code>-----END CERTIFICATE-----
-----BEGIN RSA PRIVATE KEY-----
</code></pre>

<p>and the error disappeared.</p>
","16957","<ruby-on-rails><ssl><heroku><openssl><private-key>","2","2","2","2014-04-11 19:50:33","17359001","3","","2417421","","2013-06-27 09:56:02","2013-06-27 09:43:35",""
"17299886","How to get a private key given a certificate file with Java","<p>I want to determine what a public key is given a certificate file(<code>something.cer</code> file), this is my Java code:</p>

<pre><code>public class X509Read {
private static String hex(String  binStr) {
    String newStr = new String();
        try {
            String hexStr = ""0123456789ABCDEF"";
            byte [] p = binStr.getBytes();
            for(int k=0; k &lt; p.length; k++ ){
                int j = ( p[k] &gt;&gt; 4 )&amp;0xF;
                newStr = newStr + hexStr.charAt( j );
                j = p[k]&amp;0xF;
                newStr = newStr + hexStr.charAt( j ) + "" "";
            }   
        } catch (Exception e) {
            System.out.println(""Failed to convert into hex values: "" + e);
        } 
        return newStr;
}
public static void main(String[] args) {
    String CA_Data[]=new String [15];
    String field;
    try{
        InputStream inStream = new FileInputStream(""C:\\123.cer"");
        CertificateFactory cf = CertificateFactory.getInstance(""X.509"");
        X509Certificate cert = 
            (X509Certificate)cf.generateCertificate(inStream);
        field=cert.getType().toString();
        CA_Data[0]=field;
        System.out.println(""Type : ""+field);
        field=Integer.toString(cert.getVersion());
        CA_Data[1]=field;
        System.out.println(""Version : ""+field);
        field=cert.getSubjectX500Principal().toString();
        CA_Data[2]=field;
        System.out.println(""Name : ""+field);
        field=cert.getSerialNumber().toString(16);
        CA_Data[3]=field;
        System.out.println(""SerialNumber : ""+field);
        field=cert.getSubjectAlternativeNames().toString();
        CA_Data[4]=field;
        System.out.println(""SubjectAlternativeNames : ""+field);
        field=cert.getNotBefore().toString();
        CA_Data[5]=field;
        System.out.println(""NotBefore : ""+field);
        field=cert.getNotAfter().toString();
        CA_Data[6]=field;
        System.out.println(""NotAfter : ""+field); 
        field=cert.getIssuerX500Principal().toString();
        CA_Data[7]=field;
        System.out.println(""IssuerDN : ""+field);
        field=cert.getSigAlgName().toString();
        CA_Data[8]=field;
        System.out.println(""SigAlgName : ""+field);
        byte [] tempPub = null;
        String sPub = null;
        RSAPublicKey pubkey = (RSAPublicKey) cert.getPublicKey();
        tempPub = pubkey.getEncoded();
        sPub = new String( tempPub );
        field=cert.getPublicKey().getAlgorithm();
        CA_Data[9]=field;
        System.out.println(""Public Key Algorithm : "" + field);
        field=hex(sPub);
        CA_Data[10]=field;
        System.out.println(""Public key : \n"" + field );        
        inStream.close();   
        }catch(Exception exception){ 
            exception.printStackTrace();
        }
    }
}
</code></pre>

<p>And it get this data: <code>30 EF BF BD 01 22 30 0D 06 09 2A EF BF BD 48 EF BF BD EF BF BD 0D 01 01 01 05 00 03 EF BF BD 01 0F 00 30 EF BF BD 01 0A 02 EF BF BD 01 01 00 CA BF 19 EF BF BD 24 EF BF BD 2F EF BF BD 6A EF BF BD EF BF BD 4C EF BF BD 2C EF BF BD 30 EF BF BD EF BF BD EF BF BD EF BF BD 7D EF BF BD 11 EF BF BD EF BF BD 7E EF BF BD 32 EF BF BD EF BF BD 42 73 EF BF BD EF BF BD 07 EF BF BD 15 EF BF BD 1D EF BF BD 00 39 33 66 4D 56 EF BF BD 67 EF BF BD EF BF BD EF BF BD 19 EF BF BD 17 64 EF BF BD 24 19 EF BF BD EF BF BD EF BF BD 15 EF BF BD EF BF BD C3 8C 3A EF BF BD EF BF BD EF BF BD 05 2D 3D C5 81 EF BF BD EF BF BD 48 71 EF BF BD 43 EF BF BD EF BF BD EF BF BD DE AE 20 EF BF BD EF BF BD 2B EF BF BD 1D D4 AE EF BF BD EF BF BD 25 EF BF BD 39 7B EF BF BD 70 0D 76 EF BF BD EF BF BD 7F 25 18 EF BF BD 22 EF BF BD EF BF BD EF BF BD 27 EF BF BD 0F EF BF BD EF BF BD EF BF BD DA 93 EF BF BD 0A 2C 03 3B EF BF BD 79 30 53 EF BF BD EF BF BD 26 30 EF BF BD 1D 3C 69 4C 20 EF BF BD 36 EF BF BD EF BF BD 41 7F EF BF BD 60 6B 58 EF BF BD EF BF BD EF BF BD 18 EF BF BD EF BF BD 01 6E 64 7F EF BF BD 5F 3B EF BF BD 7B 25 C9 83 43 15 EF BF BD 6F 78 EF BF BD 21 EF BF BD EF BF BD 38 59 EF BF BD EF BF BD EF BF BD EF BF BD 0B EF BF BD EF BF BD DE 9B 37 43 22 6A EF BF BD 15 28 EF BF BD 39 12 54 2B 38 4B EF BF BD 0A 43 67 0B 48 EF BF BD 59 02 60 57 EF BF BD 54 EF BF BD 6A 55 CE 91 EF BF BD 5A EF BF BD 78 76 66 13 EF BF BD 72 27 0A EF BF BD EF BF BD EF BF BD EF BF BD EF BF BD 0B 3E EF BF BD D2 9F EF BF BD 0E 4F EF BF BD EE B6 A5 5B EF BF BD 11 02 03 01 00 01
</code></p>

<p>But the correct public key is (Double-click the *.cer file)</p>

<p><img src=""https://i.stack.imgur.com/bSneI.png"" alt=""enter image description here""></p>

<p><code>30 82 01 0a 02 82 01 01 00 ca bf 19 98 24 af 2f 8c 6a 94 e0 4c 9e 2c 86 30 9a 93 94 c5 7d f7 11 d8 e5 7e 8e 32 9d 90 42 73 99 ef 07 ed 15 a6 1d ff 00 39 33 66 4d 56 ee 67 9d 93 fd 19 f9 17 64 d9 24 19 de e3 d5 15 8a aa c3 8c 3a a7 d6 ec 05 2d 3d c5 81 da d0 48 71 d9 43 f1 e5 82 fc de ae 20 cc e3 2b c5 1d d4 ae eb a3 e3 93 25 e6 39 7b 8d 70 0d 76 b8 c0 7f 25 18 9d 22 b6 d8 ff 27 9e 0f f6 fe c4 da 93 9d 0a 2c 03 3b 80 79 30 53 c9 d0 26 30 9c 1d 3c 69 4c 20 80 36 a8 99 41 7f 99 60 6b 58 b0 84 a3 18 8b b8 01 6e 64 7f bc 5f 3b ce 7b 25 c9 83 43 15 af 6f 78 fa 21 c0 b7 38 59 90 b9 82 e0 0b f1 f6 de 9b 37 43 22 6a fb 15 28 da 39 12 54 2b 38 4b b8 0a 43 67 0b 48 9f 59 02 60 57 e6 89 54 dd 6a 55 ce 91 ad 5a f2 78 76 66 13 86 72 27 0a 94 82 a5 81 be 0b 3e fc d2 9f e0 0e 4f ba ee b6 a5 5b f9 11 02 03 01 00 01</code></p>

<p>I know EF BF BD is a replacement character when I transform the Binary to Hex.</p>

<ol>
<li><p>How do I get the correct public key?</p></li>
<li><p>How to get the private key?</p></li>
</ol>
","<p>To get the public key simply use the methd <code>getPublicKey()</code> from <code>X509Certificate</code>.</p>

<p>The private key cannot be retrieved from the certificate as it is not included.</p>
","16811","<java><certificate><x509certificate><private-key><public-key>","5","5","3","2015-03-17 13:41:47","17300214","1","1","445131","","2015-03-17 13:41:47","2013-06-25 14:21:39",""
"17299886","How to get a private key given a certificate file with Java","<p>I want to determine what a public key is given a certificate file(<code>something.cer</code> file), this is my Java code:</p>

<pre><code>public class X509Read {
private static String hex(String  binStr) {
    String newStr = new String();
        try {
            String hexStr = ""0123456789ABCDEF"";
            byte [] p = binStr.getBytes();
            for(int k=0; k &lt; p.length; k++ ){
                int j = ( p[k] &gt;&gt; 4 )&amp;0xF;
                newStr = newStr + hexStr.charAt( j );
                j = p[k]&amp;0xF;
                newStr = newStr + hexStr.charAt( j ) + "" "";
            }   
        } catch (Exception e) {
            System.out.println(""Failed to convert into hex values: "" + e);
        } 
        return newStr;
}
public static void main(String[] args) {
    String CA_Data[]=new String [15];
    String field;
    try{
        InputStream inStream = new FileInputStream(""C:\\123.cer"");
        CertificateFactory cf = CertificateFactory.getInstance(""X.509"");
        X509Certificate cert = 
            (X509Certificate)cf.generateCertificate(inStream);
        field=cert.getType().toString();
        CA_Data[0]=field;
        System.out.println(""Type : ""+field);
        field=Integer.toString(cert.getVersion());
        CA_Data[1]=field;
        System.out.println(""Version : ""+field);
        field=cert.getSubjectX500Principal().toString();
        CA_Data[2]=field;
        System.out.println(""Name : ""+field);
        field=cert.getSerialNumber().toString(16);
        CA_Data[3]=field;
        System.out.println(""SerialNumber : ""+field);
        field=cert.getSubjectAlternativeNames().toString();
        CA_Data[4]=field;
        System.out.println(""SubjectAlternativeNames : ""+field);
        field=cert.getNotBefore().toString();
        CA_Data[5]=field;
        System.out.println(""NotBefore : ""+field);
        field=cert.getNotAfter().toString();
        CA_Data[6]=field;
        System.out.println(""NotAfter : ""+field); 
        field=cert.getIssuerX500Principal().toString();
        CA_Data[7]=field;
        System.out.println(""IssuerDN : ""+field);
        field=cert.getSigAlgName().toString();
        CA_Data[8]=field;
        System.out.println(""SigAlgName : ""+field);
        byte [] tempPub = null;
        String sPub = null;
        RSAPublicKey pubkey = (RSAPublicKey) cert.getPublicKey();
        tempPub = pubkey.getEncoded();
        sPub = new String( tempPub );
        field=cert.getPublicKey().getAlgorithm();
        CA_Data[9]=field;
        System.out.println(""Public Key Algorithm : "" + field);
        field=hex(sPub);
        CA_Data[10]=field;
        System.out.println(""Public key : \n"" + field );        
        inStream.close();   
        }catch(Exception exception){ 
            exception.printStackTrace();
        }
    }
}
</code></pre>

<p>And it get this data: <code>30 EF BF BD 01 22 30 0D 06 09 2A EF BF BD 48 EF BF BD EF BF BD 0D 01 01 01 05 00 03 EF BF BD 01 0F 00 30 EF BF BD 01 0A 02 EF BF BD 01 01 00 CA BF 19 EF BF BD 24 EF BF BD 2F EF BF BD 6A EF BF BD EF BF BD 4C EF BF BD 2C EF BF BD 30 EF BF BD EF BF BD EF BF BD EF BF BD 7D EF BF BD 11 EF BF BD EF BF BD 7E EF BF BD 32 EF BF BD EF BF BD 42 73 EF BF BD EF BF BD 07 EF BF BD 15 EF BF BD 1D EF BF BD 00 39 33 66 4D 56 EF BF BD 67 EF BF BD EF BF BD EF BF BD 19 EF BF BD 17 64 EF BF BD 24 19 EF BF BD EF BF BD EF BF BD 15 EF BF BD EF BF BD C3 8C 3A EF BF BD EF BF BD EF BF BD 05 2D 3D C5 81 EF BF BD EF BF BD 48 71 EF BF BD 43 EF BF BD EF BF BD EF BF BD DE AE 20 EF BF BD EF BF BD 2B EF BF BD 1D D4 AE EF BF BD EF BF BD 25 EF BF BD 39 7B EF BF BD 70 0D 76 EF BF BD EF BF BD 7F 25 18 EF BF BD 22 EF BF BD EF BF BD EF BF BD 27 EF BF BD 0F EF BF BD EF BF BD EF BF BD DA 93 EF BF BD 0A 2C 03 3B EF BF BD 79 30 53 EF BF BD EF BF BD 26 30 EF BF BD 1D 3C 69 4C 20 EF BF BD 36 EF BF BD EF BF BD 41 7F EF BF BD 60 6B 58 EF BF BD EF BF BD EF BF BD 18 EF BF BD EF BF BD 01 6E 64 7F EF BF BD 5F 3B EF BF BD 7B 25 C9 83 43 15 EF BF BD 6F 78 EF BF BD 21 EF BF BD EF BF BD 38 59 EF BF BD EF BF BD EF BF BD EF BF BD 0B EF BF BD EF BF BD DE 9B 37 43 22 6A EF BF BD 15 28 EF BF BD 39 12 54 2B 38 4B EF BF BD 0A 43 67 0B 48 EF BF BD 59 02 60 57 EF BF BD 54 EF BF BD 6A 55 CE 91 EF BF BD 5A EF BF BD 78 76 66 13 EF BF BD 72 27 0A EF BF BD EF BF BD EF BF BD EF BF BD EF BF BD 0B 3E EF BF BD D2 9F EF BF BD 0E 4F EF BF BD EE B6 A5 5B EF BF BD 11 02 03 01 00 01
</code></p>

<p>But the correct public key is (Double-click the *.cer file)</p>

<p><img src=""https://i.stack.imgur.com/bSneI.png"" alt=""enter image description here""></p>

<p><code>30 82 01 0a 02 82 01 01 00 ca bf 19 98 24 af 2f 8c 6a 94 e0 4c 9e 2c 86 30 9a 93 94 c5 7d f7 11 d8 e5 7e 8e 32 9d 90 42 73 99 ef 07 ed 15 a6 1d ff 00 39 33 66 4d 56 ee 67 9d 93 fd 19 f9 17 64 d9 24 19 de e3 d5 15 8a aa c3 8c 3a a7 d6 ec 05 2d 3d c5 81 da d0 48 71 d9 43 f1 e5 82 fc de ae 20 cc e3 2b c5 1d d4 ae eb a3 e3 93 25 e6 39 7b 8d 70 0d 76 b8 c0 7f 25 18 9d 22 b6 d8 ff 27 9e 0f f6 fe c4 da 93 9d 0a 2c 03 3b 80 79 30 53 c9 d0 26 30 9c 1d 3c 69 4c 20 80 36 a8 99 41 7f 99 60 6b 58 b0 84 a3 18 8b b8 01 6e 64 7f bc 5f 3b ce 7b 25 c9 83 43 15 af 6f 78 fa 21 c0 b7 38 59 90 b9 82 e0 0b f1 f6 de 9b 37 43 22 6a fb 15 28 da 39 12 54 2b 38 4b b8 0a 43 67 0b 48 9f 59 02 60 57 e6 89 54 dd 6a 55 ce 91 ad 5a f2 78 76 66 13 86 72 27 0a 94 82 a5 81 be 0b 3e fc d2 9f e0 0e 4f ba ee b6 a5 5b f9 11 02 03 01 00 01</code></p>

<p>I know EF BF BD is a replacement character when I transform the Binary to Hex.</p>

<ol>
<li><p>How do I get the correct public key?</p></li>
<li><p>How to get the private key?</p></li>
</ol>
","<p>To extend <a href=""https://stackoverflow.com/a/17300024/474189"">Uwe's answer</a>, the reason you see different values is your strange handling of the public key data:</p>

<pre><code>RSAPublicKey pubkey = (RSAPublicKey) cert.getPublicKey();
tempPub = pubkey.getEncoded();
sPub = new String( tempPub );
field=hex(sPub);
System.out.println(""Public key : \n"" + field );
</code></pre>

<p>Here you are creating a string from a stream of bytes (never a good idea) and then hex-encoding the result. No wonder it looks weird! In fact, your <code>hex</code> method looks very strange and probably should be thrown away.</p>

<p>Instead, just try this:</p>

<pre><code>RSAPublicKey pubkey = (RSAPublicKey) cert.getPublicKey();
field = DatatypeConverter.printHexBinary(pubkey.getEncoded());
System.out.println(""Public key : \n"" + field );
</code></pre>

<p>If you are using Java 5 or below, Google for a decent byte-to-hex function as <code>DatatypeConverter</code> is not available.</p>
","16811","<java><certificate><x509certificate><private-key><public-key>","5","3","3","2015-03-17 13:41:47","17300214","1","1","445131","","2015-03-17 13:41:47","2013-06-25 14:21:39",""
"17299886","How to get a private key given a certificate file with Java","<p>I want to determine what a public key is given a certificate file(<code>something.cer</code> file), this is my Java code:</p>

<pre><code>public class X509Read {
private static String hex(String  binStr) {
    String newStr = new String();
        try {
            String hexStr = ""0123456789ABCDEF"";
            byte [] p = binStr.getBytes();
            for(int k=0; k &lt; p.length; k++ ){
                int j = ( p[k] &gt;&gt; 4 )&amp;0xF;
                newStr = newStr + hexStr.charAt( j );
                j = p[k]&amp;0xF;
                newStr = newStr + hexStr.charAt( j ) + "" "";
            }   
        } catch (Exception e) {
            System.out.println(""Failed to convert into hex values: "" + e);
        } 
        return newStr;
}
public static void main(String[] args) {
    String CA_Data[]=new String [15];
    String field;
    try{
        InputStream inStream = new FileInputStream(""C:\\123.cer"");
        CertificateFactory cf = CertificateFactory.getInstance(""X.509"");
        X509Certificate cert = 
            (X509Certificate)cf.generateCertificate(inStream);
        field=cert.getType().toString();
        CA_Data[0]=field;
        System.out.println(""Type : ""+field);
        field=Integer.toString(cert.getVersion());
        CA_Data[1]=field;
        System.out.println(""Version : ""+field);
        field=cert.getSubjectX500Principal().toString();
        CA_Data[2]=field;
        System.out.println(""Name : ""+field);
        field=cert.getSerialNumber().toString(16);
        CA_Data[3]=field;
        System.out.println(""SerialNumber : ""+field);
        field=cert.getSubjectAlternativeNames().toString();
        CA_Data[4]=field;
        System.out.println(""SubjectAlternativeNames : ""+field);
        field=cert.getNotBefore().toString();
        CA_Data[5]=field;
        System.out.println(""NotBefore : ""+field);
        field=cert.getNotAfter().toString();
        CA_Data[6]=field;
        System.out.println(""NotAfter : ""+field); 
        field=cert.getIssuerX500Principal().toString();
        CA_Data[7]=field;
        System.out.println(""IssuerDN : ""+field);
        field=cert.getSigAlgName().toString();
        CA_Data[8]=field;
        System.out.println(""SigAlgName : ""+field);
        byte [] tempPub = null;
        String sPub = null;
        RSAPublicKey pubkey = (RSAPublicKey) cert.getPublicKey();
        tempPub = pubkey.getEncoded();
        sPub = new String( tempPub );
        field=cert.getPublicKey().getAlgorithm();
        CA_Data[9]=field;
        System.out.println(""Public Key Algorithm : "" + field);
        field=hex(sPub);
        CA_Data[10]=field;
        System.out.println(""Public key : \n"" + field );        
        inStream.close();   
        }catch(Exception exception){ 
            exception.printStackTrace();
        }
    }
}
</code></pre>

<p>And it get this data: <code>30 EF BF BD 01 22 30 0D 06 09 2A EF BF BD 48 EF BF BD EF BF BD 0D 01 01 01 05 00 03 EF BF BD 01 0F 00 30 EF BF BD 01 0A 02 EF BF BD 01 01 00 CA BF 19 EF BF BD 24 EF BF BD 2F EF BF BD 6A EF BF BD EF BF BD 4C EF BF BD 2C EF BF BD 30 EF BF BD EF BF BD EF BF BD EF BF BD 7D EF BF BD 11 EF BF BD EF BF BD 7E EF BF BD 32 EF BF BD EF BF BD 42 73 EF BF BD EF BF BD 07 EF BF BD 15 EF BF BD 1D EF BF BD 00 39 33 66 4D 56 EF BF BD 67 EF BF BD EF BF BD EF BF BD 19 EF BF BD 17 64 EF BF BD 24 19 EF BF BD EF BF BD EF BF BD 15 EF BF BD EF BF BD C3 8C 3A EF BF BD EF BF BD EF BF BD 05 2D 3D C5 81 EF BF BD EF BF BD 48 71 EF BF BD 43 EF BF BD EF BF BD EF BF BD DE AE 20 EF BF BD EF BF BD 2B EF BF BD 1D D4 AE EF BF BD EF BF BD 25 EF BF BD 39 7B EF BF BD 70 0D 76 EF BF BD EF BF BD 7F 25 18 EF BF BD 22 EF BF BD EF BF BD EF BF BD 27 EF BF BD 0F EF BF BD EF BF BD EF BF BD DA 93 EF BF BD 0A 2C 03 3B EF BF BD 79 30 53 EF BF BD EF BF BD 26 30 EF BF BD 1D 3C 69 4C 20 EF BF BD 36 EF BF BD EF BF BD 41 7F EF BF BD 60 6B 58 EF BF BD EF BF BD EF BF BD 18 EF BF BD EF BF BD 01 6E 64 7F EF BF BD 5F 3B EF BF BD 7B 25 C9 83 43 15 EF BF BD 6F 78 EF BF BD 21 EF BF BD EF BF BD 38 59 EF BF BD EF BF BD EF BF BD EF BF BD 0B EF BF BD EF BF BD DE 9B 37 43 22 6A EF BF BD 15 28 EF BF BD 39 12 54 2B 38 4B EF BF BD 0A 43 67 0B 48 EF BF BD 59 02 60 57 EF BF BD 54 EF BF BD 6A 55 CE 91 EF BF BD 5A EF BF BD 78 76 66 13 EF BF BD 72 27 0A EF BF BD EF BF BD EF BF BD EF BF BD EF BF BD 0B 3E EF BF BD D2 9F EF BF BD 0E 4F EF BF BD EE B6 A5 5B EF BF BD 11 02 03 01 00 01
</code></p>

<p>But the correct public key is (Double-click the *.cer file)</p>

<p><img src=""https://i.stack.imgur.com/bSneI.png"" alt=""enter image description here""></p>

<p><code>30 82 01 0a 02 82 01 01 00 ca bf 19 98 24 af 2f 8c 6a 94 e0 4c 9e 2c 86 30 9a 93 94 c5 7d f7 11 d8 e5 7e 8e 32 9d 90 42 73 99 ef 07 ed 15 a6 1d ff 00 39 33 66 4d 56 ee 67 9d 93 fd 19 f9 17 64 d9 24 19 de e3 d5 15 8a aa c3 8c 3a a7 d6 ec 05 2d 3d c5 81 da d0 48 71 d9 43 f1 e5 82 fc de ae 20 cc e3 2b c5 1d d4 ae eb a3 e3 93 25 e6 39 7b 8d 70 0d 76 b8 c0 7f 25 18 9d 22 b6 d8 ff 27 9e 0f f6 fe c4 da 93 9d 0a 2c 03 3b 80 79 30 53 c9 d0 26 30 9c 1d 3c 69 4c 20 80 36 a8 99 41 7f 99 60 6b 58 b0 84 a3 18 8b b8 01 6e 64 7f bc 5f 3b ce 7b 25 c9 83 43 15 af 6f 78 fa 21 c0 b7 38 59 90 b9 82 e0 0b f1 f6 de 9b 37 43 22 6a fb 15 28 da 39 12 54 2b 38 4b b8 0a 43 67 0b 48 9f 59 02 60 57 e6 89 54 dd 6a 55 ce 91 ad 5a f2 78 76 66 13 86 72 27 0a 94 82 a5 81 be 0b 3e fc d2 9f e0 0e 4f ba ee b6 a5 5b f9 11 02 03 01 00 01</code></p>

<p>I know EF BF BD is a replacement character when I transform the Binary to Hex.</p>

<ol>
<li><p>How do I get the correct public key?</p></li>
<li><p>How to get the private key?</p></li>
</ol>
","<p>The private key is stored on authentication server, which should not be read by clients.</p>
","16811","<java><certificate><x509certificate><private-key><public-key>","5","0","3","2015-03-17 13:41:47","17300214","1","1","445131","","2015-03-17 13:41:47","2013-06-25 14:21:39",""
"8863785","How to get the base 64 encoded value of a certificate with private key?","<p>Follow up to a <a href=""https://stackoverflow.com/a/8863478/304832"">previous question</a>, I have some code that needs to get an X509 certificate with a private key. As noted in the answers, in production this will happen using X509Store.</p>

<p>What is the best way to unit test this? I want to develop and test with different certificates than will be in production, so I could create a CertificateRepository interface to provide different implementations. </p>

<p>For the test / dev implementation, it would be nice to just use a base64 encoded string of the certificate, and create a cert instance that way, with a dummy password and dedicated test / dev cert. However so far I have been unable to figure out how to encode a certificate with private key as a base64 string. Each time I try to export the cert from MMC as base-64, it encodes the public key only. </p>
","<p>Make sure you mark private key as exportable when you add the certificate to the store.</p>

<p>If you use <em>makecert</em> to create the certificate, add <em>-pe</em> option to make private key exportable.</p>
","16570","<c#><base64><x509certificate><private-key>","5","0","2","2015-08-06 07:10:18","8871155","2","","-1","","2017-05-23 11:51:47","2012-01-14 17:03:23",""
"8863785","How to get the base 64 encoded value of a certificate with private key?","<p>Follow up to a <a href=""https://stackoverflow.com/a/8863478/304832"">previous question</a>, I have some code that needs to get an X509 certificate with a private key. As noted in the answers, in production this will happen using X509Store.</p>

<p>What is the best way to unit test this? I want to develop and test with different certificates than will be in production, so I could create a CertificateRepository interface to provide different implementations. </p>

<p>For the test / dev implementation, it would be nice to just use a base64 encoded string of the certificate, and create a cert instance that way, with a dummy password and dedicated test / dev cert. However so far I have been unable to figure out how to encode a certificate with private key as a base64 string. Each time I try to export the cert from MMC as base-64, it encodes the public key only. </p>
","<p>I was unable to figure out how to do this with mmc. However I did figure out how to do it in code:</p>

<pre><code>var store = new X509Store(StoreName.My, StoreLocation.LocalMachine);
store.Open(OpenFlags.ReadOnly);
var certificate = store.Certificates.Find(X509FindType.FindByThumbprint, 
    ""BLABLABLA"", false)[0]; // doesn't matter how you get the cert
var exported = certificate.Export(X509ContentType.Pfx, ""the password"");
var base64 = Convert.ToBase64String(exported);
store.Close();
</code></pre>

<p>As long as the cert you are getting from the x 509 store has the private key, it will end up in the exported byte arrray, which you can then convert to a base64 string. </p>
","16570","<c#><base64><x509certificate><private-key>","5","10","2","2015-08-06 07:10:18","8871155","2","","-1","","2017-05-23 11:51:47","2012-01-14 17:03:23",""
"7713325","Export private key from X509Certificate object","<p>We use C# code we build X509Certificate2 with .p12 file, in the constructor we insert the path to certificate, certificate's password. We also marked it as Exportable as shown below:</p>

<pre><code>X509Certificate2 x509Certificate2 = new X509Certificate2
(""...\\MyCerificate.p12"", ""P@ssw0rd"", X509KeyStorageFlags.Exportable);
</code></pre>

<p>we get the private key as AsymmetricAlgorithm format by the following:</p>

<pre><code>x509Certificate2.PrivateKey
</code></pre>

<p>Now, we want to get the private key from the certificate as <em>Base64</em> format - but we don't have any idea how to do it, and its so important for us.</p>
","<p>You can simply use the PrivateKey property of X509Certificate2. 
The actual returned private key implementation depends on the algorithm used in the certificate - usually this is RSA:</p>

<pre><code>rsaObj = (RSACryptoServiceProvider)myCertificate.PrivateKey; 
</code></pre>

<p>Afterwards you should be able to get the RSA key information from it's ExportParameters property.</p>
","16507","<c#><certificate><base64><private-key><x509certificate2>","8","2","4","2019-03-13 13:45:58","","1","","206730","","2017-10-11 11:53:03","2011-10-10 13:16:21",""
"7713325","Export private key from X509Certificate object","<p>We use C# code we build X509Certificate2 with .p12 file, in the constructor we insert the path to certificate, certificate's password. We also marked it as Exportable as shown below:</p>

<pre><code>X509Certificate2 x509Certificate2 = new X509Certificate2
(""...\\MyCerificate.p12"", ""P@ssw0rd"", X509KeyStorageFlags.Exportable);
</code></pre>

<p>we get the private key as AsymmetricAlgorithm format by the following:</p>

<pre><code>x509Certificate2.PrivateKey
</code></pre>

<p>Now, we want to get the private key from the certificate as <em>Base64</em> format - but we don't have any idea how to do it, and its so important for us.</p>
","<p>If your only problem is to get the private key Base64 encoded, you can simply do like this:</p>

<pre><code>var privateKey = x509Certificate2.PrivateKey;
var encoding = new System.Text.ASCIIEncoding();
var base64String = Convert.ToBase64String(encoding.GetBytes(privateKey.ToString()));
</code></pre>
","16507","<c#><certificate><base64><private-key><x509certificate2>","8","-3","4","2019-03-13 13:45:58","","1","","206730","","2017-10-11 11:53:03","2011-10-10 13:16:21",""
"7713325","Export private key from X509Certificate object","<p>We use C# code we build X509Certificate2 with .p12 file, in the constructor we insert the path to certificate, certificate's password. We also marked it as Exportable as shown below:</p>

<pre><code>X509Certificate2 x509Certificate2 = new X509Certificate2
(""...\\MyCerificate.p12"", ""P@ssw0rd"", X509KeyStorageFlags.Exportable);
</code></pre>

<p>we get the private key as AsymmetricAlgorithm format by the following:</p>

<pre><code>x509Certificate2.PrivateKey
</code></pre>

<p>Now, we want to get the private key from the certificate as <em>Base64</em> format - but we don't have any idea how to do it, and its so important for us.</p>
","<p>The important question is why <strong>base64</strong> ? </p>

<p>If this is for your own application then you can keep the private key as an XML string (much easier :-).</p>

<pre><code>string xml = x509Certificate2.PrivateKey.ToXmlString (true);
</code></pre>

<p>If you want <strong>base64</strong> (again just for your application) you can export the key (RSAParameters) then concat every <code>byte[]</code> and turn the merged output to a base64 string.</p>

<p>But if you want to interop with other applications that requires a <strong>base64</strong> private key then you need to know the format (inside the <strong>base64</strong> string). E.g. in many case private keys are <a href=""http://en.wikipedia.org/wiki/Base64#Privacy-enhanced_mail"" rel=""nofollow"">PEM</a> encoded (which is base64 with a special header/footer, see an <a href=""http://pages.infinit.net/ctech/20040812-0816.html"" rel=""nofollow"">example</a> for <code>X509Certificate</code>).</p>

<p>If that what's you're looking for then you'll need to encode the private key within a <a href=""http://www.rsa.com/rsalabs/node.asp?id=2130"" rel=""nofollow"">PKCS#8</a> structure first, then turn in into base64 and add the header/footer. You can find some helpful code to do so <a href=""https://github.com/mono/mono/blob/master/mcs/class/Mono.Security/Mono.Security.Cryptography/PKCS8.cs"" rel=""nofollow"">inside</a> Mono.Security.dll (MIT.X11 licensed code from the Mono project).</p>
","16507","<c#><certificate><base64><private-key><x509certificate2>","8","4","4","2019-03-13 13:45:58","","1","","206730","","2017-10-11 11:53:03","2011-10-10 13:16:21",""
"7713325","Export private key from X509Certificate object","<p>We use C# code we build X509Certificate2 with .p12 file, in the constructor we insert the path to certificate, certificate's password. We also marked it as Exportable as shown below:</p>

<pre><code>X509Certificate2 x509Certificate2 = new X509Certificate2
(""...\\MyCerificate.p12"", ""P@ssw0rd"", X509KeyStorageFlags.Exportable);
</code></pre>

<p>we get the private key as AsymmetricAlgorithm format by the following:</p>

<pre><code>x509Certificate2.PrivateKey
</code></pre>

<p>Now, we want to get the private key from the certificate as <em>Base64</em> format - but we don't have any idea how to do it, and its so important for us.</p>
","<p>You can do that with OpenSSL Library for .NET:</p>

<pre><code>using DidiSoft.OpenSsl;
...
X509Certificate2 x509Certificate2 = new X509Certificate2
(""...\\MyCerificate.p12"", ""P@ssw0rd"", X509KeyStorageFlags.Exportable);

PrivateKey privKey = PrivateKey.Load(x509Certificate2.PrivateKey);
bool withNewLines = true;
string base64PrivateKey = privKey.ToBase64String(withNewLines);
</code></pre>
","16507","<c#><certificate><base64><private-key><x509certificate2>","8","0","4","2019-03-13 13:45:58","","1","","206730","","2017-10-11 11:53:03","2011-10-10 13:16:21",""
"35702516","PuTTY - Unable to use key file (not a private key)","<p>I have a PPK file and I am trying to have putty use it, when I am connecting to a remote server. But I keep getting this error below, and then I am just asked for my username (while I should be directly allowed in as root).   </p>

<p>I don't understand what the problem is, and what's worse I have no idea how to troubleshoot further. A colleague of mine is using the same file and says everything is OK on his side. So I am stuck.  </p>

<p>I did a web search and all I find is recommendations to convert the PEM file into a PPK file. But that does not apply in my case, I already have a PPK file. </p>

<p>I am using Windows on my local machine and the PPK file is located in <code>C:\ssh-keys\</code>  </p>

<p>Any help would be much appreciated.</p>

<blockquote>
  <p>Unable to use key file ""C:\ssh-keys\filename.ppk"" (not a private key)<br>
  login as:</p>
</blockquote>

<p>Here is the header:   </p>

<pre><code>filename.ppk
ё  :           mBIN                ‚Ѓ&amp;  PuTTY-User-Key-File-2: ssh-rsa
Encryption: none
Comment: imported-openssh-key
Public-Lines: 6
</code></pre>
","<p>Your key file is corrupted.</p>

<p>A <code>.ppk</code> file must start with the <code>PuTTY-User-Key-File-2</code> and be a plain text file. No binary data. Your colleague must have a different (correct) copy of the file.</p>
","15462","<ssh><putty><private-key>","7","6","1","2017-01-03 16:44:21","35705586","4","3","850848","","2016-03-02 15:27:24","2016-02-29 14:49:33",""
"8434428","Get public key from private in Java","<p>I remember do this long time ago with OpenSSL, but I want to know if it's possible and how, I've never used Cryptography on java.</p>
","<p>You cannot generate either key directly from the other. It is mathematically impossible. If you had a key blob that contained <em>both</em> the public and private keys, you could extract either one of them with relative ease.</p>

<p><strong>EDIT, 2017:</strong> Many years and a much better understanding of crypto later, and it's now clear to me that this answer isn't really correct.</p>

<p>To quote Wikipedia:</p>

<blockquote>
  <p>The public key consists of the modulus n and the public (or encryption) exponent e. The private key consists of the modulus n and the private (or decryption) exponent d, which must be kept secret. p, q, and λ(n) must also be kept secret because they can be used to calculate d.</p>
</blockquote>

<p>The public modulus n can be computed as p &times; q. The only thing missing from a raw private key is e, but this value is usually selected as 65537, and if not you can still compute e from d and λ(n).</p>

<p>However, many private key storage formats actually contain the public modulus n alongside the other components, so you can just do a direct extraction of the values.</p>

<p><strong>EDIT, 2018:</strong> Still getting downvotes for this, and rightly so! I'm leaving this answer up so people can see why I was originally wrong, and to remind myself not to be wrong in future.</p>
","15252","<java><public-key><private-key>","13","-7","3","2018-02-19 10:31:27","8434440","1","1","759866","","2014-11-17 13:14:11","2011-12-08 16:41:22",""
"8434428","Get public key from private in Java","<p>I remember do this long time ago with OpenSSL, but I want to know if it's possible and how, I've never used Cryptography on java.</p>
","<p>The assumption is that we are talking about RSA private and Public keys. Then, if you are working from a PEM format file, then first you need to read the private key from the file into a PrivateKey object:</p>

<pre><code>    public PrivateKey readPemRsaPrivateKey(String pemFilename) throws
            java.io.IOException,
            java.security.NoSuchAlgorithmException,
            java.security.spec.InvalidKeySpecException
    {
            String pemString = File2String(pemFilename);

            pemString = pemString.replace(""-----BEGIN RSA PRIVATE KEY-----\n"", """");
            pemString = pemString.replace(""-----END RSA PRIVATE KEY-----"", """");

            byte[] decoded = Base64.decodeBase64(pemString);

            PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(decoded);
            KeyFactory kf = KeyFactory.getInstance(""RSA"");

            return kf.generatePrivate(keySpec);
    }
</code></pre>

<p>where File2String is something like:</p>

<pre><code>    private static String File2String(String fileName) throws
            java.io.FileNotFoundException, java.io.IOException
    {
            File file = new File(fileName);

            char[] buffer = null;

            BufferedReader bufferedReader = new BufferedReader(new FileReader(file));

            buffer = new char[(int)file.length()];

            int i = 0;
            int c = bufferedReader.read();

            while (c != -1) {
                    buffer[i++] = (char)c;
                    c = bufferedReader.read();
            }
            return new String(buffer);
    }
</code></pre>

<p>Now you can generate the corresponding PublicKey with code like this:</p>

<pre><code>    import java.security.interfaces.RSAPrivateCrtKey;
    import java.security.spec.RSAPublicKeySpec;
</code></pre>

<p>...</p>

<pre><code>    PrivateKey myPrivateKey = readPemRsaPrivateKey(myPrivateKeyPemFileName);
    RSAPrivateCrtKey privk = (RSAPrivateCrtKey)myPrivateKey;

    RSAPublicKeySpec publicKeySpec = new java.security.spec.RSAPublicKeySpec(privk.getModulus(), privk.getPublicExponent());

    KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
    PublicKey myPublicKey = keyFactory.generatePublic(publicKeySpec);
</code></pre>

<p>Credits: <a href=""https://stackoverflow.com/questions/11345346/how-to-get-a-rsa-publickey-by-giving-a-privatekey"">How to get a RSA PublicKey by giving a PrivateKey?</a></p>
","15252","<java><public-key><private-key>","13","28","3","2018-02-19 10:31:27","8434440","1","1","759866","","2014-11-17 13:14:11","2011-12-08 16:41:22",""
"8434428","Get public key from private in Java","<p>I remember do this long time ago with OpenSSL, but I want to know if it's possible and how, I've never used Cryptography on java.</p>
","<p>Please make sure that Eli Rosencruft answer is basically correct, but the order of the modulus and the public exponent are incorrect! This is the correct statement:</p>

<pre><code>RSAPublicKeySpec publicKeySpec = new java.security.spec.RSAPublicKeySpec(privk.getModulus(), privk.getPublicExponent());
</code></pre>
","15252","<java><public-key><private-key>","13","3","3","2018-02-19 10:31:27","8434440","1","1","759866","","2014-11-17 13:14:11","2011-12-08 16:41:22",""
"15071924","Authenticate with private key using Paramiko Transport (channel)","<p>I'm trying to use Paramiko to open (and maintain) a channel so that I can issue a few commands; however, I'm unable to find an example using paramiko.Transport AND using a private key.  I have been able to connect to my server and just run a command using the following code:</p>

<pre><code>    ssh = paramiko.SSHClient()
    paramiko.util.log_to_file(""support_scripts.log"")
    private_key = paramiko.RSAKey.from_private_key_file(rsa_private_key)
    ssh.connect(server, username=user, password='', pkey=private_key)
    ssh_stdin, ssh_stdout, ssh_stderr = ssh.exec_command(cmd)
</code></pre>

<p>No problems there.  From what I understand, that doesn't create an ""interactive session"", meaning I can't issue <code>cd /home/my_user/my_scripts</code> and then issue another command like <code>python script_in_my_scripts_folder.py</code>.  Therefore, I'm trying to use the Paramiko Transport object which can help me maintain an interactive session.  Searching high and low, none of the examples I've found work for me.  Right now, the following code returns ""SSHException: Channel is not open"" on line 204, which is the exec_command below:</p>

<pre><code>    PRIVATEKEY = '/home/my_user/.ssh/id_rsa'
    user = 'harperville'
    server = '10.0.10.10'
    port = 22
    paramiko.util.log_to_file(""support_scripts.log"")
    trans = paramiko.Transport((server,port))
    rsa_key = paramiko.RSAKey.from_private_key_file(PRIVATEKEY)
    trans.connect(username=user, pkey=rsa_key)
    session = trans.open_channel(""session"")
    session.exec_command('cd /home/harperville/my_scripts/')
</code></pre>

<p>I understand the gist of what it's telling me but I can't find or understand the documentation to help me get past this problem.</p>

<p>Thanks in advance.</p>
","<p>I have found the issue with help from this site: <a href=""http://j2labs.tumblr.com/post/4477180133/ssh-with-pythons-paramiko"" rel=""nofollow"">http://j2labs.tumblr.com/post/4477180133/ssh-with-pythons-paramiko</a></p>

<p>If I change:</p>

<pre><code>session = trans.open_channel(""session"")
</code></pre>

<p>to:</p>

<pre><code>session = trans.open_session()
</code></pre>

<p>Then, I am allowed to run a command using:</p>

<pre><code>session.exec_command('cd /home/harperville/my_scripts/')
</code></pre>
","15121","<python><python-2.7><paramiko><private-key>","4","3","1","2013-02-25 17:59:56","","0","4","1551948","","2013-02-25 17:50:31","2013-02-25 16:44:42",""
"40046916","How to Grant permission to user on Certificate private key using powershell?","<p>Certificate is already installed on machine. Now I want to give read permission on PrivateKey of Certificate to application user.</p>
","<p>Here is the Answer.</p>

<p>Created a powershell script file AddUserToCertificate.ps1</p>

<p>Here is the content for script file.</p>

<pre><code>param(
    [string]$userName,
    [string]$permission,
    [string]$certStoreLocation,
    [string]$certThumbprint
);
# check if certificate is already installed
$certificateInstalled = Get-ChildItem cert:$certStoreLocation | Where thumbprint -eq $certThumbprint

# download &amp; install only if certificate is not already installed on machine
if ($certificateInstalled -eq $null)
{
    $message=""Certificate with thumbprint:""+$certThumbprint+"" does not exist at ""+$certStoreLocation
    Write-Host $message -ForegroundColor Red
    exit 1;
}else
{
    try
    {
        $rule = new-object security.accesscontrol.filesystemaccessrule $userName, $permission, allow
        $root = ""c:\programdata\microsoft\crypto\rsa\machinekeys""
        $l = ls Cert:$certStoreLocation
        $l = $l |? {$_.thumbprint -like $certThumbprint}
        $l |%{
            $keyname = $_.privatekey.cspkeycontainerinfo.uniquekeycontainername
            $p = [io.path]::combine($root, $keyname)
            if ([io.file]::exists($p))
            {
                $acl = get-acl -path $p
                $acl.addaccessrule($rule)
                echo $p
                set-acl $p $acl
            }
        }
    }
    catch 
    {
        Write-Host ""Caught an exception:"" -ForegroundColor Red
        Write-Host ""$($_.Exception)"" -ForegroundColor Red
        exit 1;
    }    
}

exit $LASTEXITCODE
</code></pre>

<p>Now run it as part of deployment. Example to running above script in powershell console window. </p>

<pre><code>C:\&gt;.\AddUserToCertificate.ps1 -userName testuser1 -permission read -certStoreLocation \LocalMachine\My -certThumbprint 1fb7603985a8a11d3e85abee194697e9784a253
</code></pre>

<p>this example give <strong>read</strong> permission to user <strong>testuser1</strong> on certificate that in installed in <strong>\LocalMachine\My</strong> and has thumb print <strong>1fb7603985a8a11d3e85abee194697e9784a253</strong></p>

<p>If you are using ApplicationPoolIdentity then you username will be <strong>'IIS AppPool\AppPoolNameHere'</strong></p>

<p><strong>Note</strong>: You will need to use <strong>' '</strong> as there is a space between IIS and AppPool.</p>
","15053","<powershell><permissions><certificate><private-key><applicationpoolidentity>","20","27","4","2018-10-26 19:36:47","40046917","0","3","1351171","","2016-10-14 16:01:50","2016-10-14 15:31:10",""
"40046916","How to Grant permission to user on Certificate private key using powershell?","<p>Certificate is already installed on machine. Now I want to give read permission on PrivateKey of Certificate to application user.</p>
","<p>As an alternate to above script. You can use PowerShell module. I have not tried it myself but module looks good.
<a href=""http://get-carbon.org/index.html"" rel=""nofollow"">http://get-carbon.org/index.html</a></p>

<p>Here is command to set permissions
<a href=""http://get-carbon.org/Grant-Permission.html"" rel=""nofollow"">http://get-carbon.org/Grant-Permission.html</a></p>
","15053","<powershell><permissions><certificate><private-key><applicationpoolidentity>","20","2","4","2018-10-26 19:36:47","40046917","0","3","1351171","","2016-10-14 16:01:50","2016-10-14 15:31:10",""
"40046916","How to Grant permission to user on Certificate private key using powershell?","<p>Certificate is already installed on machine. Now I want to give read permission on PrivateKey of Certificate to application user.</p>
","<p>The above answer did not work for me as the <code>$_.privatekey</code> returned null. I managed to get access to the private key and assign 'Read' permissions for my Application Pool as follows: </p>

<pre><code>param (
[string]$certStorePath  = ""Cert:\LocalMachine\My"",
[string]$AppPoolName,
[string]$certThumbprint
)

Import-Module WebAdministration

$certificate = Get-ChildItem $certStorePath | Where thumbprint -eq $certThumbprint

if ($certificate -eq $null)
{
    $message=""Certificate with thumbprint:""+$certThumbprint+"" does not exist at ""+$certStorePath
    Write-Host $message -ForegroundColor Red
    exit 1;
}else
{
    $rsaCert = [System.Security.Cryptography.X509Certificates.RSACertificateExtensions]::GetRSAPrivateKey($certificate)
    $fileName = $rsaCert.key.UniqueName
    $path = ""$env:ALLUSERSPROFILE\Microsoft\Crypto\Keys\$fileName""
    $permissions = Get-Acl -Path $path

    $access_rule = New-Object System.Security.AccessControl.FileSystemAccessRule(""IIS AppPool\$AppPoolName"", 'Read', 'None', 'None', 'Allow')
    $permissions.AddAccessRule($access_rule)
    Set-Acl -Path $path -AclObject $permissions
}
</code></pre>
","15053","<powershell><permissions><certificate><private-key><applicationpoolidentity>","20","17","4","2018-10-26 19:36:47","40046917","0","3","1351171","","2016-10-14 16:01:50","2016-10-14 15:31:10",""
"40046916","How to Grant permission to user on Certificate private key using powershell?","<p>Certificate is already installed on machine. Now I want to give read permission on PrivateKey of Certificate to application user.</p>
","<p>You can use WinHttpCertCfg.exe, a Certificate Configuration Tool
Link: <a href=""https://docs.microsoft.com/en-us/windows/desktop/winhttp/winhttpcertcfg-exe--a-certificate-configuration-tool"" rel=""nofollow noreferrer"">https://docs.microsoft.com/en-us/windows/desktop/winhttp/winhttpcertcfg-exe--a-certificate-configuration-tool</a></p>

<p>Some code example:</p>

<pre><code>Set privatekeyAcces to Svc-LocalAgent$@mydomain.local
*.\WinHttpCertCfg.exe -g -c LOCAL_MACHINE\MY -s *.d365.mydomain.com  -a ""Svc-LocalAgent$@mydomain.com""*
</code></pre>
","15053","<powershell><permissions><certificate><private-key><applicationpoolidentity>","20","2","4","2018-10-26 19:36:47","40046917","0","3","1351171","","2016-10-14 16:01:50","2016-10-14 15:31:10",""
"844997","Encrypting a BouncyCastle RSA Key Pair and storing in a SQL2008 database","<p>I have a function that generates a BouncyCastle RSA key pair. I need to encrypt the private key and then store the encrypted private and public keys into separate SQL2008 database fields.</p>

<p>I am using the following to get the keypair:</p>

<pre><code>private static AsymmetricCipherKeyPair createASymRandomCipher()
{
    RsaKeyPairGenerator r = new RsaKeyPairGenerator();
    r.Init(new KeyGenerationParameters(new SecureRandom(), 1024));
    AsymmetricCipherKeyPair keys = r.GenerateKeyPair();
    return keys; 
}
</code></pre>

<p>This is returning the keys fine, but I am not sure how I can then encrypt the private key and subsequently store it in the database. </p>

<p>This is what I am currently using the encrypt the data (incorrectly?):</p>

<pre><code>public static byte[] encBytes2(AsymmetricKeyParameter keyParam, byte[] Key, byte[] IV)
{
    MemoryStream ms = new MemoryStream();
    Rijndael rjdAlg = Rijndael.Create();
    rjdAlg.Key = Key;
    rjdAlg.IV = IV;
    CryptoStream cs = new CryptoStream(ms, rjdAlg.CreateEncryptor(), CryptoStreamMode.Write);
    byte[] keyBytes = System.Text.Encoding.Unicode.GetBytes(keyParam.ToString());
    cs.Write(keyBytes, 0, keyBytes.Length);
    cs.Close();
    byte[] encryptedData = ms.ToArray();
    return encryptedData;
}
</code></pre>

<p>Obviously the keyBytes setting where I am converting keyParam.ToString() is not correct as it only converts the KeyParameter name, not the actual value. I am submitting to this function the previous key pair return of keys.Private.</p>

<p>The other question is as I am not encrypting the Public Key what format should I be storing this in the SQL2008 database, nvarchar(256) or other?</p>

<p>Any help would be greatly appreciated.</p>
","<p>Regarding the second part of your question, the data type that should be used for storing the key would be VARBINARY(256).</p>

<p>Back to the first part of your question, you actually have the option of having SQL Server handle the encryption for you.  Granted, whether or not you would want to do this would be a matter of what your application requirements are, but I'll go over it in case it's an option.</p>

<p>We'll be pretty basic here and just use symmetric keys and Triple-DES.</p>

<p>First, the database has a master key which is used to protect certificates and asymmetric keys.  The master key is encrypted with Triple-DES.</p>

<pre><code>CREATE MASTER KEY ENCRYPTION BY PASSWORD = 'supersecretpassword'  
</code></pre>

<p>SQL Server 2005/2008 can generate their own X.509 certificates used to protect the keys used to encrypt the actual data.</p>

<pre><code>CREATE CERTIFICATE ExampleCertificate 
     WITH SUBJECT = 'thisisjustsomemetadata'
</code></pre>

<p>There are a lot of options for encrypting symmetric keys (certificates, passwords, other keys), as well as many supported algorithms.  But for this example, we'll use our certificate.</p>

<pre><code>CREATE SYMMETRIC KEY ExampleKey
     WITH ALGORITHM = TRIPLE_DES  
     ENCRYPTION BY CERTIFICATE EncryptTestCert 
</code></pre>

<p>The key needs to be decrypted using the same method with which it was encrypted.  In our case, this would be the certificate we created.</p>

<pre><code> DECLARE @Value VARCHAR(50)
 SET @Value = 'supersecretdata!'

 OPEN SYMMETRIC KEY ExampleKey DECRYPTION BY CERTIFICATE ExampleCertificate  
     UPDATE SomeTable  
     SET SomeColumn = ENCRYPTBYKEY(KEY_GUID('ExampleKey'), @Value)
</code></pre>

<p>Decryption is just as straightforward.</p>

<pre><code>OPEN SYMMETRIC KEY ExampleKey DECRYPTION BY CERTIFICATE ExampleCertificate  
     SELECT CONVERT(VARCHAR(50),DECRYPTBYKEY(SomeColumn)) AS DecryptedData 
     FROM SomeTable 
</code></pre>

<p>Hopefully this solved your problem, or at least opened you up to alternative solutions (though someone who's had experience doing encryption in C# apps could probably find the fault in your above code).  If you have requirements that necessitate that the data can't even go over the wire to the SQL Server in plain-text, obviously this is a no-go (well, you <em>can</em> actually create SSL connections to SQL Server...).</p>
","14631","<c#><.net><sql-server><bouncycastle><private-key>","5","1","4","2010-09-30 21:29:48","2185305","1","5","","","","2009-05-10 09:21:27",""
"844997","Encrypting a BouncyCastle RSA Key Pair and storing in a SQL2008 database","<p>I have a function that generates a BouncyCastle RSA key pair. I need to encrypt the private key and then store the encrypted private and public keys into separate SQL2008 database fields.</p>

<p>I am using the following to get the keypair:</p>

<pre><code>private static AsymmetricCipherKeyPair createASymRandomCipher()
{
    RsaKeyPairGenerator r = new RsaKeyPairGenerator();
    r.Init(new KeyGenerationParameters(new SecureRandom(), 1024));
    AsymmetricCipherKeyPair keys = r.GenerateKeyPair();
    return keys; 
}
</code></pre>

<p>This is returning the keys fine, but I am not sure how I can then encrypt the private key and subsequently store it in the database. </p>

<p>This is what I am currently using the encrypt the data (incorrectly?):</p>

<pre><code>public static byte[] encBytes2(AsymmetricKeyParameter keyParam, byte[] Key, byte[] IV)
{
    MemoryStream ms = new MemoryStream();
    Rijndael rjdAlg = Rijndael.Create();
    rjdAlg.Key = Key;
    rjdAlg.IV = IV;
    CryptoStream cs = new CryptoStream(ms, rjdAlg.CreateEncryptor(), CryptoStreamMode.Write);
    byte[] keyBytes = System.Text.Encoding.Unicode.GetBytes(keyParam.ToString());
    cs.Write(keyBytes, 0, keyBytes.Length);
    cs.Close();
    byte[] encryptedData = ms.ToArray();
    return encryptedData;
}
</code></pre>

<p>Obviously the keyBytes setting where I am converting keyParam.ToString() is not correct as it only converts the KeyParameter name, not the actual value. I am submitting to this function the previous key pair return of keys.Private.</p>

<p>The other question is as I am not encrypting the Public Key what format should I be storing this in the SQL2008 database, nvarchar(256) or other?</p>

<p>Any help would be greatly appreciated.</p>
","<p>As long as the object is marked as serializable, one way to convert an object to a byte array is to use the BinaryFormatter class in .Net.</p>

<p>You will need to add this using statement to your code file:</p>

<pre><code>using System.Runtime.Serialization.Formatters.Binary;
</code></pre>

<p>A binary formatter can output your class to a stream. As you intend to convert your object to a byte array, you can use a System.IO.MemoryStream as temporary storage.</p>

<pre><code>MemoryStream memStream = new MemoryStream();
</code></pre>

<p>You can then create a new binary formatter.</p>

<pre><code>BinaryFormatter formatter = new BinarryFomatter();
</code></pre>

<p>and use this to serialize your object.</p>

<pre><code>formatter.Serialize(memStream, someObject);
</code></pre>

<p>To get the bytes you can use:</p>

<pre><code>return memStream.ToArray();
</code></pre>

<p>To deserialize the byte array you need to write the bytes to a memory stream.</p>

<pre><code>memStream.Write(arrBytes, 0, arrBytes.Length);
</code></pre>

<p>Return to the beginning of the stream.</p>

<pre><code>memStream.Seek(0, SeekOrigin.Begin);
</code></pre>

<p>Then use the formatter to recreate the object.</p>

<pre><code>Object obj = (Object)formatter.Deserialize(memStream);
</code></pre>

<p>If you are already using encryption functions you should be able to encrypt the created byte array quite easily before storing it in the database. </p>

<p>Hopefully that will help you in the right direction. If you are lucky, the BouncyCastle objects will be marked as serializable, if not you will need some extra code. Later, I will get a chance to look at the BouncyCastle librarys to be able to test this and will post more code if necessary.</p>

<hr>

<p>... I have never used BouncyCastle before. After some testing, it appears that the public and private key objects are not serializable, so you will need to convert these objects into something that is!</p>

<p>It appears that the public and private keys expose properties as various BouncyCastle.Math.BigInteger values. (The keys can also be constructed from these BigIntegers). Further, BigIntegers have a ToByteArray() function and can also be constructed from a byte array. Very useful..</p>

<p>Knowing that you can break each key into BigIntegers and these in turn to a byte array and that the reverse is also possible, you a way to store all these in a serializable object. A simple struct or class would do e.g.</p>

<pre><code>[Serializable]
private struct CipherPrivateKey
{
    public byte[] modulus;
    public byte[] publicExponent;
    public byte[] privateExponent;
    public byte[] p;
    public byte[] q;
    public byte[] dP;
    public byte[] dQ;
    public byte[] qInv;
}

[Serializable]
private struct CipherPublicKey
{
    public bool isPrivate;
    public byte[] modulus;
    public byte[] exponent;
}
</code></pre>

<p>This gives us a pair of easy to use serializable objects.</p>

<p>The AsymmetricCipherKeyPair exposes the Public and Private keys as AsymmetricKeyParameter objects. To get at the more detailed properties you will need to cast these to the following:</p>

<p>keyPair.Public to BouncyCastle.Crypto.Parameters.RsaKeyParameters
keyPair.Private to BouncyCastle.Crypto.Parameters.RsaPrivateCrtKeyParameters</p>

<p>The following functions will convert these to the structs to declared earlier:</p>

<pre><code>private static CipherPublicKey getCipherPublicKey(Org.BouncyCastle.Crypto.Parameters.RsaKeyParameters cPublic)
{
    CipherPublicKey cpub = new CipherPublicKey();
    cpub.modulus = cPublic.Modulus.ToByteArray();
    cpub.exponent = cPublic.Exponent.ToByteArray();
    return cpub;
}
private static CipherPrivateKey getCipherPrivateKey(Org.BouncyCastle.Crypto.Parameters.RsaPrivateCrtKeyParameters cPrivate)
{
    CipherPrivateKey cpri = new CipherPrivateKey();
    cpri.dP = cPrivate.DP.ToByteArray();
    cpri.dQ = cPrivate.DQ.ToByteArray();
    cpri.modulus = cPrivate.Modulus.ToByteArray();
    cpri.p = cPrivate.P.ToByteArray();
    cpri.privateExponent = cPrivate.Exponent.ToByteArray();
    cpri.publicExponent = cPrivate.PublicExponent.ToByteArray();
    cpri.q = cPrivate.Q.ToByteArray();
    cpri.qInv = cPrivate.QInv.ToByteArray();
    return cpri;
}
</code></pre>

<p>Using the binary formatter mentioned earlier, we can convert the serializable objects we have just created to a byte array.</p>

<pre><code>CipherPublicKey cpub = getCipherPublicKey((Org.BouncyCastle.Crypto.Parameters.RsaKeyParameters)keypair.Public);
MemoryStream memStream = new MemoryStream();
BinaryFormatter formatter = new BinarryFomatter();
formatter.Serialize(memStream, cpub);
return memStream.ToArray();
</code></pre>

<p>Desierializing is then just the inverse as described earlier. Once you have either the public or private structs deserialized you can use the BouncyCastle contructors to recreate the keys. These functions demonstrate this.</p>

<pre><code>private static Org.BouncyCastle.Crypto.Parameters.RsaKeyParameters recreateASymCipherPublicKey(CipherPublicKey cPublicKey)
{
    Org.BouncyCastle.Crypto.Parameters.RsaKeyParameters key;
    key = new Org.BouncyCastle.Crypto.Parameters.RsaKeyParameters(
            cPublicKey.isPrivate,
            createBigInteger(cPublicKey.modulus),
            createBigInteger(cPublicKey.exponent));
    return key;
}

private static Org.BouncyCastle.Crypto.Parameters.RsaPrivateCrtKeyParameters recreateASymCipherPrivateKey(CipherPrivateKey cPrivateKey)
{
    Org.BouncyCastle.Crypto.Parameters.RsaPrivateCrtKeyParameters key;
    key = new Org.BouncyCastle.Crypto.Parameters.RsaPrivateCrtKeyParameters(
            createBigInteger(cPrivateKey.modulus),
            createBigInteger(cPrivateKey.publicExponent),
            createBigInteger(cPrivateKey.privateExponent),
            createBigInteger(cPrivateKey.p),
            createBigInteger(cPrivateKey.q),
            createBigInteger(cPrivateKey.dP),
            createBigInteger(cPrivateKey.dQ),
            createBigInteger(cPrivateKey.qInv));
    return key;
}
</code></pre>

<p>If you need to recreate the original key pair for any reason:</p>

<pre><code>AsymmetricKeyParameter publ = (AsymmetricKeyParameter)recreateASymCipherPublicKey(cKeyPair.publicKey);
AsymmetricKeyParameter priv = (AsymmetricKeyParameter)recreateASymCipherPrivateKey(cKeyPair.privateKey);
AsymmetricCipherKeyPair keyPair = new AsymmetricCipherKeyPair(publ, priv);
</code></pre>

<p>Hopefully that all makes sense! The code samples should help you on your way.</p>
","14631","<c#><.net><sql-server><bouncycastle><private-key>","5","11","4","2010-09-30 21:29:48","2185305","1","5","","","","2009-05-10 09:21:27",""
"844997","Encrypting a BouncyCastle RSA Key Pair and storing in a SQL2008 database","<p>I have a function that generates a BouncyCastle RSA key pair. I need to encrypt the private key and then store the encrypted private and public keys into separate SQL2008 database fields.</p>

<p>I am using the following to get the keypair:</p>

<pre><code>private static AsymmetricCipherKeyPair createASymRandomCipher()
{
    RsaKeyPairGenerator r = new RsaKeyPairGenerator();
    r.Init(new KeyGenerationParameters(new SecureRandom(), 1024));
    AsymmetricCipherKeyPair keys = r.GenerateKeyPair();
    return keys; 
}
</code></pre>

<p>This is returning the keys fine, but I am not sure how I can then encrypt the private key and subsequently store it in the database. </p>

<p>This is what I am currently using the encrypt the data (incorrectly?):</p>

<pre><code>public static byte[] encBytes2(AsymmetricKeyParameter keyParam, byte[] Key, byte[] IV)
{
    MemoryStream ms = new MemoryStream();
    Rijndael rjdAlg = Rijndael.Create();
    rjdAlg.Key = Key;
    rjdAlg.IV = IV;
    CryptoStream cs = new CryptoStream(ms, rjdAlg.CreateEncryptor(), CryptoStreamMode.Write);
    byte[] keyBytes = System.Text.Encoding.Unicode.GetBytes(keyParam.ToString());
    cs.Write(keyBytes, 0, keyBytes.Length);
    cs.Close();
    byte[] encryptedData = ms.ToArray();
    return encryptedData;
}
</code></pre>

<p>Obviously the keyBytes setting where I am converting keyParam.ToString() is not correct as it only converts the KeyParameter name, not the actual value. I am submitting to this function the previous key pair return of keys.Private.</p>

<p>The other question is as I am not encrypting the Public Key what format should I be storing this in the SQL2008 database, nvarchar(256) or other?</p>

<p>Any help would be greatly appreciated.</p>
","<p>For reasons that should be clear, default (and perhaps inadvertent) serialization does not play well with private keys which should only be written out in very limited situations.</p>

<p>BouncyCastle has support for PKCS#8, which is the relevant standard for ""serializing"" private keys. There are ASN.1 structures called PrivateKeyInfo and EncryptedPrivateKeyInfo. Since they are in ASN.1 there are standard ways to serialize/deserialize them. As the name suggests, one stores the key in plaintext, the other encrypts the key based on a password.</p>

<p>For the public keys - these would not ordinarily be encrypted. BC supports the X.509 standard format of SubjectPublicKeyInfo for serializing them.</p>

<p>In the C# build, the high-level classes to look at would be:</p>

<ul>
<li>Org.BouncyCastle.Security.PrivateKeyFactory</li>
<li>Org.BouncyCastle.Security.PublicKeyFactory</li>
<li>Org.BouncyCastle.Pkcs.EncryptedPrivateKeyInfoFactory</li>
<li>Org.BouncyCastle.Pkcs.PrivateKeyInfoFactory</li>
<li>Org.BouncyCastle.X509.SubjectPublicKeyInfoFactory</li>
</ul>
","14631","<c#><.net><sql-server><bouncycastle><private-key>","5","17","4","2010-09-30 21:29:48","2185305","1","5","","","","2009-05-10 09:21:27",""
"844997","Encrypting a BouncyCastle RSA Key Pair and storing in a SQL2008 database","<p>I have a function that generates a BouncyCastle RSA key pair. I need to encrypt the private key and then store the encrypted private and public keys into separate SQL2008 database fields.</p>

<p>I am using the following to get the keypair:</p>

<pre><code>private static AsymmetricCipherKeyPair createASymRandomCipher()
{
    RsaKeyPairGenerator r = new RsaKeyPairGenerator();
    r.Init(new KeyGenerationParameters(new SecureRandom(), 1024));
    AsymmetricCipherKeyPair keys = r.GenerateKeyPair();
    return keys; 
}
</code></pre>

<p>This is returning the keys fine, but I am not sure how I can then encrypt the private key and subsequently store it in the database. </p>

<p>This is what I am currently using the encrypt the data (incorrectly?):</p>

<pre><code>public static byte[] encBytes2(AsymmetricKeyParameter keyParam, byte[] Key, byte[] IV)
{
    MemoryStream ms = new MemoryStream();
    Rijndael rjdAlg = Rijndael.Create();
    rjdAlg.Key = Key;
    rjdAlg.IV = IV;
    CryptoStream cs = new CryptoStream(ms, rjdAlg.CreateEncryptor(), CryptoStreamMode.Write);
    byte[] keyBytes = System.Text.Encoding.Unicode.GetBytes(keyParam.ToString());
    cs.Write(keyBytes, 0, keyBytes.Length);
    cs.Close();
    byte[] encryptedData = ms.ToArray();
    return encryptedData;
}
</code></pre>

<p>Obviously the keyBytes setting where I am converting keyParam.ToString() is not correct as it only converts the KeyParameter name, not the actual value. I am submitting to this function the previous key pair return of keys.Private.</p>

<p>The other question is as I am not encrypting the Public Key what format should I be storing this in the SQL2008 database, nvarchar(256) or other?</p>

<p>Any help would be greatly appreciated.</p>
","<p>The correct approach is to use Peters' suggestion. </p>

<p>I have included a small C# code sample below : </p>

<pre><code>var keyPair = GetKeypair();

PrivateKeyInfo privateKeyInfo = PrivateKeyInfoFactory.CreatePrivateKeyInfo(keyPair.Private);                        
byte[] serializedKey = privateKeyInfo.ToAsn1Object().GetDerEncoded();

AsymmetricKeyParameter deserializedKey1 = PrivateKeyFactory.CreateKey(serializedKey);
Assert.AreEqual(keyPair.Private, deserializedKey1);

AsymmetricKeyParameter deserializedKey2 = PrivateKeyFactory.CreateKey(privateKeyInfo);            
Assert.AreEqual(keyPair.Private, deserializedKey2);
</code></pre>

<p>The sample uses the Bouncy Castle API. <strong>Note</strong> that the sample does NOT encrypt the key. The <code>CreatePrivateKeyInfo</code> method is overloaded to allow the use of a password as protection of the key.</p>
","14631","<c#><.net><sql-server><bouncycastle><private-key>","5","6","4","2010-09-30 21:29:48","2185305","1","5","","","","2009-05-10 09:21:27",""
"14434343","how to encrypt a file using private key in gpg","<p>I'm producing an update for some systems and I want to encrypt the updates for keeping confidentiality, integrity and validity of my signature. I want to encrypt the file with my private key and send them to my client so that they can decrypt it with my public key. But the way GPG works is encryption with public and decrypt with private. I don't want to send my private key so that I can change it and send public key to anyone else . Any idea how to do that???</p>
","<p>You might need to have a separate key pair for that explicit purpose, and distribute the <em>private</em> key, while keeping the public key secret (yes, it's kind of backwards with regard to the terms); then you just encrypt the updates normally with the public key, and your recipients can decrypt them with the private key.</p>
","14370","<linux><encryption><public-key-encryption><private-key><gnupg>","7","-4","5","2018-03-20 21:00:26","","2","4","1169096","","2017-10-11 08:00:35","2013-01-21 07:47:57",""
"14434343","how to encrypt a file using private key in gpg","<p>I'm producing an update for some systems and I want to encrypt the updates for keeping confidentiality, integrity and validity of my signature. I want to encrypt the file with my private key and send them to my client so that they can decrypt it with my public key. But the way GPG works is encryption with public and decrypt with private. I don't want to send my private key so that I can change it and send public key to anyone else . Any idea how to do that???</p>
","<p>What you mean is not called ""encryption"" but ""signing"" in gpg lingo.</p>

<p><em>Signing</em> is basically encrypting with your private key and decrypting with the public key.</p>

<p>Use</p>

<pre><code> gpg --sign myfile.ext
</code></pre>

<p>Or use your email-client's signing capabilities.</p>

<p>Signing will obviously allow anybody who has access to your ""public"" key to read the contents of your file (and since a ""public"" key is usually, well..., <em>public</em>, this will allow <em>everybody</em> to decypher the content).</p>

<p>If you are looking for a method, where only the recipient can decode the content, then you need to encrypt the data in a way where only the recipient has access to the decrypting token. obviously the recipient need to have such a token (that is: you encode with their <strong>public</strong> key, so they can decode with their <strong>private</strong> key)</p>

<p><strong>UPDATE</strong></p>

<p>To make it simple: if you want to guarantee <em>integrity</em> (that is: the recipient knows for sure, that the data comes from <em>you</em> and nobody else), you need to <strong>sign</strong> the data.
If you want to guarantee <em>confidentiality</em> (that is: only your recipient can read the data), you need to <strong>encrypt</strong> the data.</p>

<p>Both <em>signing</em> and <em>encryption</em> are really the same thing.
The only difference is, who has access to the keys.</p>

<p>With <em>signing</em>, you use your private key to encrypt the data, and it can be decrypted with your public key (and since everybody has access to the public key, everybody can decrypt it, and thus everybody can validate that the data has been signed by <em>you</em>)</p>

<p>With <em>encrypting</em>, you use your recipients public key to encrypt the data, and they use their private key to decrypt it (so only they can read it; but everybody can send them an encrypted datum, they have no guarantee that it really comes from the sender, but it is guaranteed that only they can read it).</p>

<p>If you need both confidentiality and integrity, you need to do both signing and encryption, and for this to work, both you and your recipients need to have a (different) public/private key pair.</p>

<p><strong>CONCLUSION</strong></p>

<p>Since both signing and encrypting are the same thing, you can use both to guarantee validity and integrity of your data, as long as you have full control over the availability of the keys involved.</p>
","14370","<linux><encryption><public-key-encryption><private-key><gnupg>","7","15","5","2018-03-20 21:00:26","","2","4","1169096","","2017-10-11 08:00:35","2013-01-21 07:47:57",""
"14434343","how to encrypt a file using private key in gpg","<p>I'm producing an update for some systems and I want to encrypt the updates for keeping confidentiality, integrity and validity of my signature. I want to encrypt the file with my private key and send them to my client so that they can decrypt it with my public key. But the way GPG works is encryption with public and decrypt with private. I don't want to send my private key so that I can change it and send public key to anyone else . Any idea how to do that???</p>
","<p>It is not true that GnuPG requires you to publish your <em>private</em> key in order to encrypt a document. You should <em>never</em> publish your private key to anyone.</p>

<p>GnuPG supports two different encryption methods, <em>asymmetric</em> and <em>symmetric</em> encryption.</p>

<p><em>Asymmetric</em> encryption requires to to know the <em>public key</em> of your recipient. This is usually not a problem because as the name already suggests these keys are not a secret but known to everyone. For decrypting it again only the <em>private key</em> can be used which is known only to your recipient. Asymmetric encryption using GnuPG is done with the <code>--encrypt</code> option.</p>

<p>If you don't know the <em>public</em> key of your recipient then you can use <em>symmetric</em> encryption where both parties <em>share the same key</em>. This requires a secure channel for transmitting the shared secret, of course. For symmetric encryption, use the <code>--symmetric</code> option. Neither a public nor a private key is required here but the secure exchange of the shared key makes symmetric encryption prone to attacks.</p>

<p>If you just need <em>integrity</em> and <em>accountability</em> (the document can't be modified without detecting it and you are able to verify who created/signed it) then you can use the <code>--sign</code> option to create a signature using your <em>private key</em>. Everybody having access to your <em>public key</em> can check this signature to verify both integrity and accountability. But note that <em>everybody</em> can read your original message content because this signature is <em>no encryption</em>. The resulting .gpg-file looks like binary data but only contains <em>compressed</em> but not <em>encrypted</em> text. You can also disable compression by specifying <code>--compress-level 0</code> and you will see that the output file contains your original message in plaintext. So don't use this option if you want <em>confidentiality</em>.</p>
","14370","<linux><encryption><public-key-encryption><private-key><gnupg>","7","8","5","2018-03-20 21:00:26","","2","4","1169096","","2017-10-11 08:00:35","2013-01-21 07:47:57",""
"14434343","how to encrypt a file using private key in gpg","<p>I'm producing an update for some systems and I want to encrypt the updates for keeping confidentiality, integrity and validity of my signature. I want to encrypt the file with my private key and send them to my client so that they can decrypt it with my public key. But the way GPG works is encryption with public and decrypt with private. I don't want to send my private key so that I can change it and send public key to anyone else . Any idea how to do that???</p>
","<p>Simple answer: forget the idea of <em>keys</em>. You only need a shared secret <em>passphrase</em>. So get together with your client. Call them on the phone. Or if you're paranoid, do it face to face. Agree on a passphrase you will share and keep it as secret as you need to. Based on my experience, I recommend using diceware together to pick a shared passphrase. Both of you keep a secure copy of that shared secret. If you're paranoid, don't write it down—<em>memorize it</em>! Now you can encrypt anything using that shared secret as the passphrase. Any symmetric encryption tool can do that for you, <em>including GPG</em>.</p>
","14370","<linux><encryption><public-key-encryption><private-key><gnupg>","7","0","5","2018-03-20 21:00:26","","2","4","1169096","","2017-10-11 08:00:35","2013-01-21 07:47:57",""
"14434343","how to encrypt a file using private key in gpg","<p>I'm producing an update for some systems and I want to encrypt the updates for keeping confidentiality, integrity and validity of my signature. I want to encrypt the file with my private key and send them to my client so that they can decrypt it with my public key. But the way GPG works is encryption with public and decrypt with private. I don't want to send my private key so that I can change it and send public key to anyone else . Any idea how to do that???</p>
","<p>I am working on a similar problem: distribute software updates from a central source to be applied to many end-users in the field.  End users need to validate that the update came from the official source (signed with private key), but I also want the update to travel confidentially (encrypted).</p>

<p>In the cryptography course I had at University ~30 years ago now, they taught that encrypting with one's private key was the same thing as signing a message - when the recipient decrypts using the public key, the fact that they do not get gibberish confirms use of the private key to encrypt.  This also provides a measure of confidentiality if the public key is kept ""close to the vest,"" which would be my preferred implementation.</p>

<p>As mentioned by others, I have confirmed that the gpg --sign operation does not encrypt the message, the message is visible in plaintext in the signed file.  To use gpg to accomplish both certain authenticity with a signature from the private key, and a reasonable measure of confidentiality, I have settled on the solution of giving the field based receivers their own key pair, in addition to the public key of the update distributor.  This isn't a terribly secure solution, anyone can reverse engineer a device in the field and get ahold of the ""secret"" key that it will hold, with that they can decrypt the signed update message and see its cleartext contents.  What they cannot do is create a file with the distributor's secret key signature on it, and so they cannot make an update of their own that will be accepted by the devices in the field which are looking for both encryption with their public key, and a signature from the update distributor's privately held key.</p>

<p>It's a matter of degrees of exposure.  The updates in transit are secure from anyone who does not have access to an endpoint device to reverse engineer.  With physical access to an endpoint (something we cannot prevent), they will eventually be able to reverse engineer the installed software, and even the updates themselves, but they will never be able to sign their own update and push it to un-compromised machines.  At least as long as RSA is secure.</p>
","14370","<linux><encryption><public-key-encryption><private-key><gnupg>","7","2","5","2018-03-20 21:00:26","","2","4","1169096","","2017-10-11 08:00:35","2013-01-21 07:47:57",""
"15579117","Paramiko -- using encrypted private key file on OS X","<p>I'm trying to use Paramiko to connect to an SSH server from Python. This is what I tried so far:</p>

<pre><code>&gt;&gt;&gt; import paramiko
&gt;&gt;&gt; import os
&gt;&gt;&gt; privatekeyfile = os.path.expanduser('~/.ssh/id_rsa')
&gt;&gt;&gt; mykey = paramiko.RSAKey.from_private_key_file(privatekeyfile)
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/paramiko/pkey.py"", line 198, in from_private_key_file
    key = cls(filename=filename, password=password)
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/paramiko/rsakey.py"", line 51, in __init__
    self._from_private_key_file(filename, password)
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/paramiko/rsakey.py"", line 163, in _from_private_key_file
    data = self._read_private_key_file('RSA', filename, password)
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/paramiko/pkey.py"", line 280, in _read_private_key_file
    data = self._read_private_key(tag, f, password)
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/paramiko/pkey.py"", line 323, in _read_private_key
    raise PasswordRequiredException('Private key file is encrypted')
paramiko.PasswordRequiredException: Private key file is encrypted
</code></pre>

<p>As you can see, it's failing because my private key is encrypted. However, the password is stored in my OS X login keychain, and when I type <code>ssh host</code> it won't ask for it (rather, it only asks once, then remembers it until the next reboot). Is there a way to make <code>paramiko</code> use the password / fetch it from the keychain, like <code>ssh</code> does?</p>
","<p>The <code>RSAKey.from_private_key_file()</code> is inherited from <a href=""http://www.lag.net/paramiko/docs/paramiko.PKey-class.html"" rel=""noreferrer""><code>PKey()</code></a>; an optional parameter of this method is a password. To quote:</p>

<blockquote>
  <p>If the private key is encrypted and password is not None, the given
  password will be used to decrypt the key (otherwise
  PasswordRequiredException is thrown).</p>
</blockquote>

<p>As you're not passing a password and your key is encrypted this exception will always be thrown. There's only one way round this problem, to actually give the method a password. You, therefore, need a way of getting the password out of the OSXKeychain.</p>

<p>You could use the cross-platform <a href=""https://pypi.python.org/pypi/keyring"" rel=""noreferrer""><code>Keyring</code></a> module to do this.</p>
","14207","<ssh><osx-mountain-lion><paramiko><private-key>","18","8","3","2019-06-10 09:13:16","15597194","0","4","","","","2013-03-22 20:14:53",""
"15579117","Paramiko -- using encrypted private key file on OS X","<p>I'm trying to use Paramiko to connect to an SSH server from Python. This is what I tried so far:</p>

<pre><code>&gt;&gt;&gt; import paramiko
&gt;&gt;&gt; import os
&gt;&gt;&gt; privatekeyfile = os.path.expanduser('~/.ssh/id_rsa')
&gt;&gt;&gt; mykey = paramiko.RSAKey.from_private_key_file(privatekeyfile)
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/paramiko/pkey.py"", line 198, in from_private_key_file
    key = cls(filename=filename, password=password)
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/paramiko/rsakey.py"", line 51, in __init__
    self._from_private_key_file(filename, password)
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/paramiko/rsakey.py"", line 163, in _from_private_key_file
    data = self._read_private_key_file('RSA', filename, password)
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/paramiko/pkey.py"", line 280, in _read_private_key_file
    data = self._read_private_key(tag, f, password)
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/paramiko/pkey.py"", line 323, in _read_private_key
    raise PasswordRequiredException('Private key file is encrypted')
paramiko.PasswordRequiredException: Private key file is encrypted
</code></pre>

<p>As you can see, it's failing because my private key is encrypted. However, the password is stored in my OS X login keychain, and when I type <code>ssh host</code> it won't ask for it (rather, it only asks once, then remembers it until the next reboot). Is there a way to make <code>paramiko</code> use the password / fetch it from the keychain, like <code>ssh</code> does?</p>
","<p>The following approach seems to work fine (on OS X, with the usual setup of encrypted private keys that have passphrases stored in the keychain, without any user interaction):</p>

<pre><code>import paramiko

ssh = paramiko.SSHClient()
ssh.load_system_host_keys()
ssh.connect(HOST, username=USER, look_for_keys=False)
...
ssh.close()
</code></pre>

<p>It seems that <code>look_for_keys=False</code> is not absolutely necessary. However, if you use it you will get much better error messages in the case of an authentication failure (""AuthenticationException"" instead of ""PasswordRequiredException"").</p>

<hr>

<p>If you really want to use private keys directly, you <em>could</em> do the following:</p>

<pre><code>import os
import paramiko
import keyring

keyfile = os.path.expanduser('~/.ssh/id_rsa')
password = keyring.get_password('SSH', keyfile)
key = paramiko.RSAKey.from_private_key_file(keyfile, password=password)
</code></pre>

<p>However, based on my testing, this is <em>not</em> needed. The above solution that uses <code>ssh.connect</code> in a straightforward manner should be sufficient.</p>
","14207","<ssh><osx-mountain-lion><paramiko><private-key>","18","13","3","2019-06-10 09:13:16","15597194","0","4","","","","2013-03-22 20:14:53",""
"15579117","Paramiko -- using encrypted private key file on OS X","<p>I'm trying to use Paramiko to connect to an SSH server from Python. This is what I tried so far:</p>

<pre><code>&gt;&gt;&gt; import paramiko
&gt;&gt;&gt; import os
&gt;&gt;&gt; privatekeyfile = os.path.expanduser('~/.ssh/id_rsa')
&gt;&gt;&gt; mykey = paramiko.RSAKey.from_private_key_file(privatekeyfile)
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/paramiko/pkey.py"", line 198, in from_private_key_file
    key = cls(filename=filename, password=password)
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/paramiko/rsakey.py"", line 51, in __init__
    self._from_private_key_file(filename, password)
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/paramiko/rsakey.py"", line 163, in _from_private_key_file
    data = self._read_private_key_file('RSA', filename, password)
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/paramiko/pkey.py"", line 280, in _read_private_key_file
    data = self._read_private_key(tag, f, password)
  File ""/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/paramiko/pkey.py"", line 323, in _read_private_key
    raise PasswordRequiredException('Private key file is encrypted')
paramiko.PasswordRequiredException: Private key file is encrypted
</code></pre>

<p>As you can see, it's failing because my private key is encrypted. However, the password is stored in my OS X login keychain, and when I type <code>ssh host</code> it won't ask for it (rather, it only asks once, then remembers it until the next reboot). Is there a way to make <code>paramiko</code> use the password / fetch it from the keychain, like <code>ssh</code> does?</p>
","<p>Using encrypted private key in Paramiko is not possible, because <a href=""https://stackoverflow.com/a/2976729/952234"">ssh-agent doesn't give private key</a> (without memory dump).</p>

<p>The solution would be to use <code>subprocess</code> and call ssh command from that (as any usual command). It didn't me ask for decryption of the private key (it uses ssh agent, you can find that using <code>ssh -vvv</code>). </p>

<p>BTW, I couldn't find benefits of using <code>paramiko</code>. SSH agent seems more developed and more general tool. For example, it's <a href=""https://adikrishnan.in/2018/10/25/agent-forwarding-with-paramiko"" rel=""nofollow noreferrer"">not possible to forward SSH agent</a> in paramiko, one has to resort to subprocess for that. Also note <a href=""https://github.com/paramiko/paramiko/issues/387"" rel=""nofollow noreferrer"">this issue</a> from 2014, ""Key handling is terribad"" (open): </p>

<blockquote>
  <p>SSHClient._auth uses a multi-exit strategy combined with storing a single exception to raise at the end of the process. This frequently means the raised exception at auth time is flat out incorrect as to the true cause of the inability to authenticate. </p>
</blockquote>

<p>There are many paramiko bugs linked in this thread. It seems actively developed now, and I hope <code>paramiko</code> will fix that, but my advice is: don't rely on one single library, it may not fulfill your demands.</p>

<p>Yes, there is a possibility to provide password to the encrypted key, but that defeats the purpose of that. You either enter password yourself (then you don't need a key for ssh), or store the password on disk (of course not in version control), then you don't need the private key to be encrypted (the idea of that is that if someone gets your HDD, one doesn't get your private keys in plain text).</p>
","14207","<ssh><osx-mountain-lion><paramiko><private-key>","18","0","3","2019-06-10 09:13:16","15597194","0","4","","","","2013-03-22 20:14:53",""
"37286791","convert .pem to .ppk on macos","<p>There are lots of SO posts on this topic but most of them are for Windows and use the GUI. All others posts seem to use the CLI. </p>

<p>Is there a GUI version of puttygen on MacOS/Linux and if so instructions on how to install/use? The CLI seems to give me an error. </p>

<pre><code>Usage: puttygen ( keyfile | -t type [ -b bits ] )
                [ -C comment ] [ -P ] [ -q ]
                [ -o output-keyfile ] [ -O type | -l | -L | -p ]


&gt;puttygen mykey.pem -t rsa -b 2048 -o mykey.ppk
puttygen: cannot both load and generate a key
</code></pre>

<p>Is there something wrong with my commands? </p>
","<p>AFAIK, there is no GUI for putty versions of OSX.</p>

<p>You can simply convert your key like this: <code>puttygen mykey.pem -o mykey.ppk</code></p>
","13722","<linux><putty><private-key><pem><key-pair>","6","16","1","2016-05-17 22:05:19","37286987","0","2","668624","","2016-05-17 22:02:43","2016-05-17 21:50:03",""
"2957742","How to convert PKCS#8-formatted PEM private key to the traditional format?","<p>From OpenSSL 1.0 change log:</p>

<blockquote>
  <p>Make PKCS#8 the default write format
  for private keys, replacing the
       traditional format. This form is standardised, more secure and doesn't
       include an implicit MD5 dependency.
       [Steve Henson]</p>
</blockquote>

<p>However, I need the private key file in the previous, traditional format.
Is it possible to convert the pem file from PKCS#8 to the traditional format (using OpenSSL.exe app)?</p>

<p>Thank you very much!</p>
","<p>Succeeded to solve that in that way - 
the request:</p>

<pre><code>openssl req -configconfigfile.cfg -newkey rsa:2048 -keyout newkey.pem -out newreq.pem 365
</code></pre>

<p>Then, I converted it to RSA format:</p>

<pre><code>openssl rsa -in newkey.pem -out newkey.pem
</code></pre>

<p>Hope that it will help someone.</p>
","13647","<openssl><private-key><pem><pkcs#8>","12","23","1","2015-05-07 17:58:58","3502122","0","4","608639","","2015-05-07 17:58:58","2010-06-02 12:44:41",""
"49230122","Encrypted Private Key to RSA Private Key","<p>I have an Encrypted Private Key(say,servenc.key) in below format:</p>

<pre><code>-----BEGIN ENCRYPTED PRIVATE KEY-----
MIIC2TBTBgkqhkiG9w0BBQ0wRjAlBgkqhkiG9w0BBQwwGAQSIFFvMaBFyBvqqhY6
yTV2fMVVAgIUczAdBglghkgBZQMEASoEEGRetyFtHhnJ7TZTM2qolWkEggKAFg/h
GERtM1loEd+u8VAtLwTzBiXE5pmRpp/hX/1HrbBnzFjAsNtWlEtzpSuxuCoXtMst
uKRB8qveHlfTQPzopkRZtljfOkD1DhdJz8BXSZrFmVkMrUq6m4Y/rnqTqI5JmtmQ
qAXTBbl7u8TwMnqIaoSInEHnc+aiFT3KJuIq6PZy2rGKWGW2WB/OML2gANvHBI9n
gyOo4VZHNsR6VBbCRJErUFhF5Wk2/YJD9ejnvXH6pJFqZYvnCFjkSlR+4MdCHBSo
Ld0IoFjQ6X1uLLglFf/rQGKEQruLjTKmz6oe8nZIzrOoLmArir0DGTakEt0K6mha
0M5s9zNkdMd7XRns0uvmYHzbpNVWpUP5YUmf1BJLjTHex51Msjoz6v6ixinel852
5lS2wtVwXp8MXG9iofvMEDocmvn60vuksmgwxMccRWX2zAt8ixFefzIjM0KzPRpt
ByJP0B733u+DI0Y5bsiJVAxl7Gr8Io5k6Uk0nZziVK8+vDXLF2BNetp4kRM/XBaM
N/DcosGiAxOeJqSA45ethV8cHGZVuNOsCXSVomVoKIxgWhkyBzXv9sIbRSSGWfJQ
edWEV9t4RTCgIu+622JZFzw1PbWtEu4R38v0JZQN3zxkYPC7nFIfmx9unUWucoup
ZYbvlzjyNZ6VI8jDvvqy+XmaY+FZcSgPTGCz/4KArxJuSvE8gJULUS7Y7JCuDjjL
h04pYsl8WMA3UH2/CxiFv75vXZI0q2HKUnNNawrQG83zPfBiVrDQARifCkPmzsCd
tHd8A/agDAeg9rmat6PRC4d0to6pUg7v5ZR9VZkRWMJiPMtuH4fh/2L/ys/9EihG
CZJe6XTZkgFAp9gzGg==
-----END ENCRYPTED PRIVATE KEY-----
</code></pre>

<p>TH above key is in PKCS#8 format.</p>

<p>I want to convert it into a RSA Private Key PKCS#1 format</p>

<p>The command I use is:</p>

<pre><code>openssl rsa -in servenc.key -out serv.key
</code></pre>

<p>The output which i get is in the below format:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
MIICXQIBAAKBgQDymMsf+68EERSkXO7lwucBa5Ibw+74z+dL/yYWsHxsl+j9E3ZK
5hQ9riiDxscTd+Jm6aqYF5Dobsk+VWoz7Ma+4iLvHiLevefRxlq7Fpe70vRZeNR5
Z+9cLaak4C4/FYrUoOrMjfHxX0Ihmc5M+Tjy4brxpktCTRRm73CyMxT7twIDAQAB
AoGBAOXc8rJWVqmiyY1HZTEdMKb+1w0p5Leqvr0agGuFRA/dDG0nULF9OfaLm2Xp
Jd4DfOkIRJUh1zL1Lge7BQs4McL529nbKirlstUDvR+dRYoyhCNCnVNqKgU/P+Ed
1wEOhVxOLKfcv847huDzzBU7ZL8E3QEQUd9t3CLj3Ov/c2C5AkEA+ks6fX0GXWht
D6IHW+XBEW4txkfm2WWI64RG8Y0avjg9P1vhw/APlCuZPRmsXQ6S9/wKJt/iy0ah
eJVJ3f1/3QJBAPggpLsU7H/0PKCmC8HUrnWG7ANIiZJYib5LJWAnCzpxNNMNmY5Z
0Ak18/ia4bloNz/g9QXIa7kuG9+lSGF+uqMCQBfcpC7ihIDTO9KJt/ni5Y0r2+FT
aYbAT1Vkvv64XRxVcEFiGRv8/v85SNqyX+RfR1OtC6q5HX4TtcExOmGXkWECQQCd
lW3JexJweRcAGDSjV4WtEpFVzH3CugRRHLySAnn5FeismZiKdbPQBbn6i7ML44oj
QaWblJwFsaj2Mqxzbt7tAkB2dxlU+ABHDJ2wvGzECecYPvDeIIcuN1VyZvnYcPek
uehkYsNKd45pNxZr0ZZN1UlVht7kBZWX/+Ij2ezShYDA
-----END RSA PRIVATE KEY-----
</code></pre>

<p>But the output format which I want is:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-256-CBC,4D58B420357E8F3A5528539062B3CE0A

hfuamWEa7FijcPBoYuyRxHFGYcaSQeMqGBpGq8YkmJ3sdP9l/emOodhwRRyTONCv
h98rV1KTFOVjNqvNrt43x27VFHlKkSnWyfAOpp+7cg6NAMUnks7f09cR6za8Takt
xzkA73O+hzAnHeYgmvp41dVxG2UsENrfMGZFe1obr34Gc8pMmAeY5YcmXRReLgPk
nCeIfwoyNdzXJI/Q+KrmH7/RnEN9YNBerjw6wVouUSVgPEzxmRVfzWTAyWHnlYJj
8mFhjTNPl7onnj0eAZQMm7UA3W9J4pUD0MWr48AC2sB7Hfax+xpZS41FTTlSblPO
P0tKBPrmvAv7C8uGw+LgYX2t/ai5J1ZhK5zHI5cHK8CGV+LbSvXR1X0I47Qmmip3
FLAp7e8wxp2jzQkjaE09rY2glfuJ0OHPiO3GoLExd1cqu25QZKjCR5g5ZdkXQ35w
LsZ4BprCB778tY5z3g5gbHSX+L4tq+xTHPjSIGTOInbnyH5VhS+D+z5Gq/EmL82W
EO7JPpYtU5R1Uq3i6/qUkhN0fi2Loow1qtSn9dygXaXcIFxEDW7xBZ9eaVPa4mrH
bqd/TZQd/rx8U4x/b5JWh5Qz3XxxoR16uD2WAG1POreXrWSeRepTANofY1T+/VQK
w4WCnpd8fnLHa1c7h+r1hEGC8uC6ZKtSFsf4u0a9bPfeeDMWkC4V8tkMt5Thh70H
SxLjjJx2Irn8RYCuZ4L84aYFoHviNPINcoo5DjmcJBE9p+IQxE4XbJy/KCm8/iaD
Qr4Wqn615a/2VuT/nqi4og3HIAYae6k9z38QSKA54MsxfqApOIQGTkrKGqX09kQ4
o2dt+LELsTmBlNshLV0ysXpNVtU/pM6xefCnM9j4r2s6MMD6Bv+OHz7yCnfuXOx3
rppUxNNIVn8elwTmPBo9E3f3uRQ537Sp7wNSjOUIWcJHi3yYLFpMibG9T80xoTWZ
B0/rOMI33nl/HZCGwmg91KhDpeUGP37ggiw9FfFAz4Kh+y18X1ZMzWsWBzUV41dD
gLI3CALdrUKZJ8BTSJ0CCxzyD8OX6uwWQVvdoYoLzsM+ndczofch3j5y7fNy9px0
PsS2Q3X+Yq2tqJeVqfkGQtseck9DvMo+4OkCQ0jgEvAKNusIkGG5evWHnto1Fl54
rfuSuHhoanSsMdYmxEVQZnszJfaqr/Bb5d9xCMxvvAFwakip9JZrQNuBSlTiUyw0
rKxvovwRhUlemYX9I+UNJeHpUyQAa4Ky1twfrwZ47vAPreCrQrcAAomkx+QLmxjl
coi48GkWKtbr2mQwhjDoiNWW2F7ZzuX0FVheaay9QlyHlFeDcezxcae44k+eD7jc
FmqH05uQrrlBPQLG5brhqZdhq0skwWwIMeA7yW0oEXmoQ5fyRChgXxiXeYcEblhV
PaBJnVM81Rgrvsys3TdgCHgtUIlJDm+gEp6s8X3yhls8aqXN7R65j9jzXLIzYO40
0tLoistWlRQ5G7MCDgazw/hkIiRaEhSuZZs+e6fa4zyxYYq/UenMpAst7+YyXon2
4nSYd88OEvhpAaoCfQomUdIxjcLsZoheJc19RMv/LHy2stL8ZAFyT62HqOCIhH+A
-----END RSA PRIVATE KEY-----
</code></pre>

<p>How do I get the below information as well while converting a key from PKCS#8 format to PKCS#1 format?</p>

<pre><code>Proc-Type: 4,ENCRYPTED
DEK-Info: AES-256-CBC,4D58B420357E8F3A5528539062B3CE0A
</code></pre>
","<p>You just need to add an encryption mechanism, e.g.,  <code>-des3</code></p>

<pre><code>openssl pkey -in servenc.key -out serv.key -des3
</code></pre>
","13515","<openssl><rsa><private-key><pkcs#1><pkcs#8>","4","4","2","2019-07-03 07:22:11","49231008","0","1","","","","2018-03-12 07:31:43",""
"49230122","Encrypted Private Key to RSA Private Key","<p>I have an Encrypted Private Key(say,servenc.key) in below format:</p>

<pre><code>-----BEGIN ENCRYPTED PRIVATE KEY-----
MIIC2TBTBgkqhkiG9w0BBQ0wRjAlBgkqhkiG9w0BBQwwGAQSIFFvMaBFyBvqqhY6
yTV2fMVVAgIUczAdBglghkgBZQMEASoEEGRetyFtHhnJ7TZTM2qolWkEggKAFg/h
GERtM1loEd+u8VAtLwTzBiXE5pmRpp/hX/1HrbBnzFjAsNtWlEtzpSuxuCoXtMst
uKRB8qveHlfTQPzopkRZtljfOkD1DhdJz8BXSZrFmVkMrUq6m4Y/rnqTqI5JmtmQ
qAXTBbl7u8TwMnqIaoSInEHnc+aiFT3KJuIq6PZy2rGKWGW2WB/OML2gANvHBI9n
gyOo4VZHNsR6VBbCRJErUFhF5Wk2/YJD9ejnvXH6pJFqZYvnCFjkSlR+4MdCHBSo
Ld0IoFjQ6X1uLLglFf/rQGKEQruLjTKmz6oe8nZIzrOoLmArir0DGTakEt0K6mha
0M5s9zNkdMd7XRns0uvmYHzbpNVWpUP5YUmf1BJLjTHex51Msjoz6v6ixinel852
5lS2wtVwXp8MXG9iofvMEDocmvn60vuksmgwxMccRWX2zAt8ixFefzIjM0KzPRpt
ByJP0B733u+DI0Y5bsiJVAxl7Gr8Io5k6Uk0nZziVK8+vDXLF2BNetp4kRM/XBaM
N/DcosGiAxOeJqSA45ethV8cHGZVuNOsCXSVomVoKIxgWhkyBzXv9sIbRSSGWfJQ
edWEV9t4RTCgIu+622JZFzw1PbWtEu4R38v0JZQN3zxkYPC7nFIfmx9unUWucoup
ZYbvlzjyNZ6VI8jDvvqy+XmaY+FZcSgPTGCz/4KArxJuSvE8gJULUS7Y7JCuDjjL
h04pYsl8WMA3UH2/CxiFv75vXZI0q2HKUnNNawrQG83zPfBiVrDQARifCkPmzsCd
tHd8A/agDAeg9rmat6PRC4d0to6pUg7v5ZR9VZkRWMJiPMtuH4fh/2L/ys/9EihG
CZJe6XTZkgFAp9gzGg==
-----END ENCRYPTED PRIVATE KEY-----
</code></pre>

<p>TH above key is in PKCS#8 format.</p>

<p>I want to convert it into a RSA Private Key PKCS#1 format</p>

<p>The command I use is:</p>

<pre><code>openssl rsa -in servenc.key -out serv.key
</code></pre>

<p>The output which i get is in the below format:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
MIICXQIBAAKBgQDymMsf+68EERSkXO7lwucBa5Ibw+74z+dL/yYWsHxsl+j9E3ZK
5hQ9riiDxscTd+Jm6aqYF5Dobsk+VWoz7Ma+4iLvHiLevefRxlq7Fpe70vRZeNR5
Z+9cLaak4C4/FYrUoOrMjfHxX0Ihmc5M+Tjy4brxpktCTRRm73CyMxT7twIDAQAB
AoGBAOXc8rJWVqmiyY1HZTEdMKb+1w0p5Leqvr0agGuFRA/dDG0nULF9OfaLm2Xp
Jd4DfOkIRJUh1zL1Lge7BQs4McL529nbKirlstUDvR+dRYoyhCNCnVNqKgU/P+Ed
1wEOhVxOLKfcv847huDzzBU7ZL8E3QEQUd9t3CLj3Ov/c2C5AkEA+ks6fX0GXWht
D6IHW+XBEW4txkfm2WWI64RG8Y0avjg9P1vhw/APlCuZPRmsXQ6S9/wKJt/iy0ah
eJVJ3f1/3QJBAPggpLsU7H/0PKCmC8HUrnWG7ANIiZJYib5LJWAnCzpxNNMNmY5Z
0Ak18/ia4bloNz/g9QXIa7kuG9+lSGF+uqMCQBfcpC7ihIDTO9KJt/ni5Y0r2+FT
aYbAT1Vkvv64XRxVcEFiGRv8/v85SNqyX+RfR1OtC6q5HX4TtcExOmGXkWECQQCd
lW3JexJweRcAGDSjV4WtEpFVzH3CugRRHLySAnn5FeismZiKdbPQBbn6i7ML44oj
QaWblJwFsaj2Mqxzbt7tAkB2dxlU+ABHDJ2wvGzECecYPvDeIIcuN1VyZvnYcPek
uehkYsNKd45pNxZr0ZZN1UlVht7kBZWX/+Ij2ezShYDA
-----END RSA PRIVATE KEY-----
</code></pre>

<p>But the output format which I want is:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-256-CBC,4D58B420357E8F3A5528539062B3CE0A

hfuamWEa7FijcPBoYuyRxHFGYcaSQeMqGBpGq8YkmJ3sdP9l/emOodhwRRyTONCv
h98rV1KTFOVjNqvNrt43x27VFHlKkSnWyfAOpp+7cg6NAMUnks7f09cR6za8Takt
xzkA73O+hzAnHeYgmvp41dVxG2UsENrfMGZFe1obr34Gc8pMmAeY5YcmXRReLgPk
nCeIfwoyNdzXJI/Q+KrmH7/RnEN9YNBerjw6wVouUSVgPEzxmRVfzWTAyWHnlYJj
8mFhjTNPl7onnj0eAZQMm7UA3W9J4pUD0MWr48AC2sB7Hfax+xpZS41FTTlSblPO
P0tKBPrmvAv7C8uGw+LgYX2t/ai5J1ZhK5zHI5cHK8CGV+LbSvXR1X0I47Qmmip3
FLAp7e8wxp2jzQkjaE09rY2glfuJ0OHPiO3GoLExd1cqu25QZKjCR5g5ZdkXQ35w
LsZ4BprCB778tY5z3g5gbHSX+L4tq+xTHPjSIGTOInbnyH5VhS+D+z5Gq/EmL82W
EO7JPpYtU5R1Uq3i6/qUkhN0fi2Loow1qtSn9dygXaXcIFxEDW7xBZ9eaVPa4mrH
bqd/TZQd/rx8U4x/b5JWh5Qz3XxxoR16uD2WAG1POreXrWSeRepTANofY1T+/VQK
w4WCnpd8fnLHa1c7h+r1hEGC8uC6ZKtSFsf4u0a9bPfeeDMWkC4V8tkMt5Thh70H
SxLjjJx2Irn8RYCuZ4L84aYFoHviNPINcoo5DjmcJBE9p+IQxE4XbJy/KCm8/iaD
Qr4Wqn615a/2VuT/nqi4og3HIAYae6k9z38QSKA54MsxfqApOIQGTkrKGqX09kQ4
o2dt+LELsTmBlNshLV0ysXpNVtU/pM6xefCnM9j4r2s6MMD6Bv+OHz7yCnfuXOx3
rppUxNNIVn8elwTmPBo9E3f3uRQ537Sp7wNSjOUIWcJHi3yYLFpMibG9T80xoTWZ
B0/rOMI33nl/HZCGwmg91KhDpeUGP37ggiw9FfFAz4Kh+y18X1ZMzWsWBzUV41dD
gLI3CALdrUKZJ8BTSJ0CCxzyD8OX6uwWQVvdoYoLzsM+ndczofch3j5y7fNy9px0
PsS2Q3X+Yq2tqJeVqfkGQtseck9DvMo+4OkCQ0jgEvAKNusIkGG5evWHnto1Fl54
rfuSuHhoanSsMdYmxEVQZnszJfaqr/Bb5d9xCMxvvAFwakip9JZrQNuBSlTiUyw0
rKxvovwRhUlemYX9I+UNJeHpUyQAa4Ky1twfrwZ47vAPreCrQrcAAomkx+QLmxjl
coi48GkWKtbr2mQwhjDoiNWW2F7ZzuX0FVheaay9QlyHlFeDcezxcae44k+eD7jc
FmqH05uQrrlBPQLG5brhqZdhq0skwWwIMeA7yW0oEXmoQ5fyRChgXxiXeYcEblhV
PaBJnVM81Rgrvsys3TdgCHgtUIlJDm+gEp6s8X3yhls8aqXN7R65j9jzXLIzYO40
0tLoistWlRQ5G7MCDgazw/hkIiRaEhSuZZs+e6fa4zyxYYq/UenMpAst7+YyXon2
4nSYd88OEvhpAaoCfQomUdIxjcLsZoheJc19RMv/LHy2stL8ZAFyT62HqOCIhH+A
-----END RSA PRIVATE KEY-----
</code></pre>

<p>How do I get the below information as well while converting a key from PKCS#8 format to PKCS#1 format?</p>

<pre><code>Proc-Type: 4,ENCRYPTED
DEK-Info: AES-256-CBC,4D58B420357E8F3A5528539062B3CE0A
</code></pre>
","<pre><code>-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: DES-EDE3-CBC,E4A3D50AE7D7FF1E

YlFCH5nM36dmGE6cwOMOIQkFz8KXOF4601RgxVz5Jj8D2a2vmb8cin9zvb0oYLhQ
2aJ5cFu29/5MPr6xuVxcD+AA7nbVBHF7mSwc/e4mrQOfwRI3mD7OMRmE8aBp70n9
4jWGfaXgnOio1+sViH0c7fx1greIAyAoyiBvOYiBCZX9BFP5327FN08wmmS/PeuP
IY3AsYyh86PHXCRl6O1/ZKJUhXoG/2gw0JWK02nUNGHQBOQXYbHyVjWvb/s3GbzY
tk6gwY0P6t+dcd/aUo56nbDvm9NT+M9a34/E8chXF5tuYhQoQUyPqGJDvBCp2jOJ
d229Oxy0B9k3RijMA+I/jaEhjrZvTml4WCxf/+C49HEJds3vmRUd9T/j+/YIfO9f
Y7llEawgWByOIafEzupXHuvpm9fva4pz95wo9rogS9GzADfqfnGdoDjCdWFOUcBM
b3glshuBiIOIfS62LuuKgtbTtP44EcwnUq5biC2EhpX9wcYLhSe30KCI2ZqAMeU5
XSncV7SkkKGGgB1CIcOxlPgTr2sXXSMT2nHrGLO9q2BPY8VVvo4Jwp8nqciC8V/n
MFj7ZTzwllqldaN20hYPgSVljRvIPDDNIGvxA9k2woO55+FLxRg2gnsR/gfI0m4I
0c0JWZqm+WNLnzmLGv3lVK4RGLQEsFPL5bI/qwtXwoO55+FLxRg2gnsR/gfI0m4I
lhxMLD4kODP2dF3ZADNXNWbgNlmh9HXmuk6lycxTR69+hwWJfMbtbUeUHR1oQgxQ
EbdCFkccBi4nlqZHIYi5cChDzTtiW+9EFQsQiUDL+zWyWlqkprJcPHrFL58aHhmH
gypdiqw1BpZwjLN7th/QjTWcS8Z712AOKGmcIh4vmvYaLDZouonv3ZqcwXhEE94q
x/GhvRvFnxEbbj/2gzDTEP1oW6jrSQcoFRL/bFBNBAc9oDEyZejndKX8Equht8SV
ariMiZZWT+xDAo+9XfJ7ncGkBsjJmnJgkkl05kIsNw8lcs/3kR3HYxe3pIfFEMm4
-----END RSA PRIVATE KEY-----




I converted above kind of encrypted RSA key to RSA key with below format using 

openssl rsa -in consumerencrypted.key -out consumer.key



-----BEGIN RSA PRIVATE KEY-----
MIIJKgIBAAKCAgEA4m6uk9d+D3ceLGY74hcJoSuZgaixhu0j2jn2Y6f5FDaPVxLM
9sdSVXU1xxm24VsMZh078hV/ao02MTguNEvkJ94BaAhfQhyZbUzWhZkzEdFzfE93
WNveNCbzva/wzK9HGvdRpSGrK1vX24C/mCERDfKR/yr0N3lMO0i+EkQHlxprend/
0Kquepeir7B8wd+YA2NNyrGCwF2pMRod9vZXC/h7uugTMjqvfG0C9U9nTxxTXSmz
yqXAI4jq1HrQy9HvO0yA1nyVIpH1JtrUnkQcKUoMHUzz625uNwz+AVb5RqBY+6zi
D8O2t1wfUunCSy4QKHH+zpDf3cZ7AhmKFJHx5+QT6QM24+UdvjlAd5TnYIXXPe/X
u2FUG4bDcaSmnlFiVdcDQsw7IndQnIGxzz3ACJsMtyAhM9LX4H6AjsY2SpOdOfad
/IXufigUQnqVwmeK+JJHu0AOQuTrbNEbIQKCAQEAsuF9scSKlMDHCNUSQCsS++ZW
gWXaJmuOsp5iz+8JJrxPUtGtFAN7ZjwAr9W67DH9LQFT4hNKkkyBkJSLADrcDEzQ
fH4xEHW3K3KMXYfx89iSoHoJ0X1qkRhZHQ2AfwxVFkzBnHcRrYSYGkWqgd4LKcEy
WvMUaWnh+XJASxPXZKW3gPjVENVxiM9T8TPXXRbKAYusy6SUPKMgWWJqxuwxJcYP
lX9lV42t22KIFYLrG/WVgy+IkdyPIez2l2YFkopCywKm/sPA0VYtcu6SlpQJH3HC
1Kgodc4szs60N09q+7wfc5rMq2Sy5sak8osNnqF48d5MIBmUGxIIFigX/V35aA==
-----END RSA PRIVATE KEY-----
</code></pre>
","13515","<openssl><rsa><private-key><pkcs#1><pkcs#8>","4","0","2","2019-07-03 07:22:11","49231008","0","1","","","","2018-03-12 07:31:43",""
"12060865","openssl_pkey_new() throwing errors -- Proper openssl.cnf setup for php","<p>**Okay, It's become clear that this issue is an issue related with the setup of openssl on the Linux server and how to properly setup a custom openssl.cnf file. I am not looking for anything complicated but I need a front-end to be able to create self-signed client certificates for authentication to my webservice. So I need to be able to use my CA to create intermediate CAs for client companies and then allow them a secure interface to issue client certificates for their employees. Logins are based on whether you belong to a specific intermediate CA and that your certificate or the intermediate CA hasn't be revoked. </p>

<p><em>For anyone wondering, we can use self-signed certificates because they are only used for our server to authenticate users and since we issued them, we trust them. Also it would be way too expensive for a startup to establish themselves as an intermediate CA through the commercial offerings AFAIK. Microsoft can do that, we can't. Our webserver itself uses a CA signed certificate.</em></p>

<p>I know that php code for setting this kind of thing up is straight forward but what isn't is how to properly setup openssl. I have tried several different examples on the net and none of them seem to work for my setup and they all seem to be different. One box was fresh install of Centos 6.2 and I am still getting errors. </p>

<p>Can anyone point me in the proper direction for setting up openssl, apache2 and php so that I can use these php libraries without errors? Our virtual server is using debian squeeze and I have full control of software installed.</p>

<p>Thanks.</p>

<p><strong>open_pkey_new()</strong> is returning errors such as error:0E06D06C:configuration file routines:NCONF_get_string:no value. Yet I am passing a path to a openssl.cnf file so I don't know why I'm still getting this problem. Here's my relevent code</p>

<pre><code>&lt;?php
$cwd=getcwd();
$distname= array(
    ""countryName"" =&gt; ""CA"",
    ""stateOrProvinceName"" =&gt; ""Ontario"",
    ""localityName"" =&gt; ""Toronto"",
    ""organizationName"" =&gt; ""G4 Apps"",
    ""organizationalUnitName"" =&gt; ""Development"",
    ""commonName"" =&gt; ""Mark Lane"",
    ""emailAddress"" =&gt; ""nobody at gmail.com""
        );
$password = 'seanix';

$cacert_location=$cwd.""/certs/CA/g4CA.crt"";
$cakey_location=$cwd.""/certs/CA/g4CA.key"";
$cnf=$cwd.'/certs/myopenssl.cnf';
$configArgs = array(
        'config' =&gt;$cnf
);
?&gt;
</code></pre>

<p>Here's my function that makes the keys.</p>

<pre><code>&lt;?php
function makekey($password,$configArgs) {
    $key= openssl_pkey_new($configArgs);
    //print_r($configArgs);
    openssl_pkey_export($key, $pkeyout,$password);
    if (($e=openssl_error_string()) ==false) return $pkeyout;
    else {
        do {

            echo $e . ""&lt;BR&gt;"";
        } while($e=openssl_error_string());
        return -1;
    }
}
?&gt;
</code></pre>

<p>I've tried relative paths too to the configfile and it still won't work. Looks like it might be the host providers ssl setup. I switched to a local virtual machine and I got the key to generate but now I'm getting the same error when creating a csr.</p>

<p><strong>error:0E06D06C:configuration file routines:NCONF_get_string:no value</strong></p>

<pre><code>&lt;?php
function newcsr($distname,$key,$configArgs) {
    $csr=openssl_csr_new($distname,$key,$configArgs);
    openssl_csr_export($csr, $csrout);
    if (($e=openssl_error_string()) ==false) return $csrout;
    else {
        do {

            echo $e . ""&lt;BR&gt;"";
        } while($e=openssl_error_string());
        return -1;
    }
}
?&gt;
</code></pre>

<p><strong>openssl.conf</strong> This looks to be an error in openssl.cnf so I've included the file.</p>

<pre><code>HOME            = .
RANDFILE        = $ENV::HOME/.rnd

oid_section     = new_oids


[ new_oids ]


tsa_policy1 = 1.2.3.4.1
tsa_policy2 = 1.2.3.4.5.6
tsa_policy3 = 1.2.3.4.5.7

####################################################################
[ ca ]
default_ca  = g4CA      

####################################################################
[ g4CA ]

dir     = /home/g4apps/secure.g4apps.com/generator/certs    
certs       = $dir/     
crl_dir     = $dir/crl      
database    = $dir/index.txt    


new_certs_dir   = $dir/newcerts     

certificate = $dir/CA/g4CA.crt  
serial      = $dir/serial       
crlnumber   = $dir/crlnumber    

crl     = $dir/CA/g4CA.crl  
private_key = $dir/CA/g4CA.key  
RANDFILE    = $dir/private/.rand    

x509_extensions = usr_cert      

name_opt    = ca_default        
cert_opt    = ca_default        


default_days    = 365           # how long to certify for
default_crl_days= 30            # how long before next CRL
default_md  = default       # use public key default MD
preserve    = no            # keep passed DN ordering

policy      = policy_match


[ policy_match ]
countryName     = match
stateOrProvinceName = match
organizationName    = match
organizationalUnitName  = optional
commonName      = supplied
emailAddress        = optional

[ policy_anything ]
countryName     = optional
stateOrProvinceName = optional
localityName        = optional
organizationName    = optional
organizationalUnitName  = optional
commonName      = supplied
emailAddress        = optional

####################################################################
[ req ]
default_bits        = 2048
default_md      = md5
default_keyfile     = privkey.pem
distinguished_name  = req_distinguished_name
attributes      = req_attributes
x509_extensions = v3_ca # The extentions to add to the self signed cert

string_mask = utf8only

[ req_distinguished_name ]
countryName         = Country Name (2 letter code)
countryName_default     = CA
countryName_min         = 2
countryName_max         = 2

stateOrProvinceName     = State or Province Name (full name)
stateOrProvinceName_default = ON

localityName            = Locality Name (eg, city)
localityName_default    = Toronto

0.organizationName      = Organization Name (eg, company)
0.organizationName_default  = G4 Apps



organizationalUnitName      = Organizational Unit Name (eg, section)

commonName          = Common Name (eg, your name or your server\'s hostname)
commonName_max          = 64

emailAddress            = Email Address
emailAddress_default        = lmlane@gmail.com
emailAddress_max        = 64


[ req_attributes ]
challengePassword       = A challenge password
challengePassword_min       = 4
challengePassword_max       = 20

unstructuredName        = An optional company name

[ usr_cert ]

nsComment           = ""OpenSSL Generated Certificate""

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer



[ v3_req ]


basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment

[ v3_ca ]


subjectKeyIdentifier=hash

authorityKeyIdentifier=keyid:always,issuer
basicConstraints = CA:true


[ crl_ext ]

authorityKeyIdentifier=keyid:always

[ proxy_cert_ext ]
basicConstraints=CA:FALSE

nsComment           = ""OpenSSL Generated Certificate""

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer

proxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo

####################################################################
[ tsa ]

default_tsa = tsa_config1   

[ tsa_config1 ]

dir             = ./demoCA      
serial      = $dir/tsaserial    
crypto_device   = builtin       
signer_cert = $dir/tsacert.pem  

certs       = $dir/cacert.pem   
signer_key  = $dir/private/tsakey.pem 
default_policy  = tsa_policy1       
other_policies  = tsa_policy2, tsa_policy3
digests     = md5, sha1     
accuracy    = secs:1, millisecs:500, microsecs:100  
clock_precision_digits  = 0 
ordering        = yes   

tsa_name        = yes   
ess_cert_id_chain   = no    
</code></pre>

<p>Stack trace <code>strace php getkeystore.php &amp;&gt; stack.trace</code></p>

<p><a href=""http://secure.g4apps.com/generator/stack.trace"">http://secure.g4apps.com/generator/stack.trace</a></p>
","<p>Check if your openssl.cnf has </p>

<pre><code>default_md = md5
</code></pre>

<p>in it, else add it to the cnf file and try again if that helps.</p>
","12809","<php><openssl><private-key>","10","2","5","2019-01-05 19:12:50","13518810","9","1","1535358","","2012-11-23 13:34:16","2012-08-21 18:26:46",""
"12060865","openssl_pkey_new() throwing errors -- Proper openssl.cnf setup for php","<p>**Okay, It's become clear that this issue is an issue related with the setup of openssl on the Linux server and how to properly setup a custom openssl.cnf file. I am not looking for anything complicated but I need a front-end to be able to create self-signed client certificates for authentication to my webservice. So I need to be able to use my CA to create intermediate CAs for client companies and then allow them a secure interface to issue client certificates for their employees. Logins are based on whether you belong to a specific intermediate CA and that your certificate or the intermediate CA hasn't be revoked. </p>

<p><em>For anyone wondering, we can use self-signed certificates because they are only used for our server to authenticate users and since we issued them, we trust them. Also it would be way too expensive for a startup to establish themselves as an intermediate CA through the commercial offerings AFAIK. Microsoft can do that, we can't. Our webserver itself uses a CA signed certificate.</em></p>

<p>I know that php code for setting this kind of thing up is straight forward but what isn't is how to properly setup openssl. I have tried several different examples on the net and none of them seem to work for my setup and they all seem to be different. One box was fresh install of Centos 6.2 and I am still getting errors. </p>

<p>Can anyone point me in the proper direction for setting up openssl, apache2 and php so that I can use these php libraries without errors? Our virtual server is using debian squeeze and I have full control of software installed.</p>

<p>Thanks.</p>

<p><strong>open_pkey_new()</strong> is returning errors such as error:0E06D06C:configuration file routines:NCONF_get_string:no value. Yet I am passing a path to a openssl.cnf file so I don't know why I'm still getting this problem. Here's my relevent code</p>

<pre><code>&lt;?php
$cwd=getcwd();
$distname= array(
    ""countryName"" =&gt; ""CA"",
    ""stateOrProvinceName"" =&gt; ""Ontario"",
    ""localityName"" =&gt; ""Toronto"",
    ""organizationName"" =&gt; ""G4 Apps"",
    ""organizationalUnitName"" =&gt; ""Development"",
    ""commonName"" =&gt; ""Mark Lane"",
    ""emailAddress"" =&gt; ""nobody at gmail.com""
        );
$password = 'seanix';

$cacert_location=$cwd.""/certs/CA/g4CA.crt"";
$cakey_location=$cwd.""/certs/CA/g4CA.key"";
$cnf=$cwd.'/certs/myopenssl.cnf';
$configArgs = array(
        'config' =&gt;$cnf
);
?&gt;
</code></pre>

<p>Here's my function that makes the keys.</p>

<pre><code>&lt;?php
function makekey($password,$configArgs) {
    $key= openssl_pkey_new($configArgs);
    //print_r($configArgs);
    openssl_pkey_export($key, $pkeyout,$password);
    if (($e=openssl_error_string()) ==false) return $pkeyout;
    else {
        do {

            echo $e . ""&lt;BR&gt;"";
        } while($e=openssl_error_string());
        return -1;
    }
}
?&gt;
</code></pre>

<p>I've tried relative paths too to the configfile and it still won't work. Looks like it might be the host providers ssl setup. I switched to a local virtual machine and I got the key to generate but now I'm getting the same error when creating a csr.</p>

<p><strong>error:0E06D06C:configuration file routines:NCONF_get_string:no value</strong></p>

<pre><code>&lt;?php
function newcsr($distname,$key,$configArgs) {
    $csr=openssl_csr_new($distname,$key,$configArgs);
    openssl_csr_export($csr, $csrout);
    if (($e=openssl_error_string()) ==false) return $csrout;
    else {
        do {

            echo $e . ""&lt;BR&gt;"";
        } while($e=openssl_error_string());
        return -1;
    }
}
?&gt;
</code></pre>

<p><strong>openssl.conf</strong> This looks to be an error in openssl.cnf so I've included the file.</p>

<pre><code>HOME            = .
RANDFILE        = $ENV::HOME/.rnd

oid_section     = new_oids


[ new_oids ]


tsa_policy1 = 1.2.3.4.1
tsa_policy2 = 1.2.3.4.5.6
tsa_policy3 = 1.2.3.4.5.7

####################################################################
[ ca ]
default_ca  = g4CA      

####################################################################
[ g4CA ]

dir     = /home/g4apps/secure.g4apps.com/generator/certs    
certs       = $dir/     
crl_dir     = $dir/crl      
database    = $dir/index.txt    


new_certs_dir   = $dir/newcerts     

certificate = $dir/CA/g4CA.crt  
serial      = $dir/serial       
crlnumber   = $dir/crlnumber    

crl     = $dir/CA/g4CA.crl  
private_key = $dir/CA/g4CA.key  
RANDFILE    = $dir/private/.rand    

x509_extensions = usr_cert      

name_opt    = ca_default        
cert_opt    = ca_default        


default_days    = 365           # how long to certify for
default_crl_days= 30            # how long before next CRL
default_md  = default       # use public key default MD
preserve    = no            # keep passed DN ordering

policy      = policy_match


[ policy_match ]
countryName     = match
stateOrProvinceName = match
organizationName    = match
organizationalUnitName  = optional
commonName      = supplied
emailAddress        = optional

[ policy_anything ]
countryName     = optional
stateOrProvinceName = optional
localityName        = optional
organizationName    = optional
organizationalUnitName  = optional
commonName      = supplied
emailAddress        = optional

####################################################################
[ req ]
default_bits        = 2048
default_md      = md5
default_keyfile     = privkey.pem
distinguished_name  = req_distinguished_name
attributes      = req_attributes
x509_extensions = v3_ca # The extentions to add to the self signed cert

string_mask = utf8only

[ req_distinguished_name ]
countryName         = Country Name (2 letter code)
countryName_default     = CA
countryName_min         = 2
countryName_max         = 2

stateOrProvinceName     = State or Province Name (full name)
stateOrProvinceName_default = ON

localityName            = Locality Name (eg, city)
localityName_default    = Toronto

0.organizationName      = Organization Name (eg, company)
0.organizationName_default  = G4 Apps



organizationalUnitName      = Organizational Unit Name (eg, section)

commonName          = Common Name (eg, your name or your server\'s hostname)
commonName_max          = 64

emailAddress            = Email Address
emailAddress_default        = lmlane@gmail.com
emailAddress_max        = 64


[ req_attributes ]
challengePassword       = A challenge password
challengePassword_min       = 4
challengePassword_max       = 20

unstructuredName        = An optional company name

[ usr_cert ]

nsComment           = ""OpenSSL Generated Certificate""

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer



[ v3_req ]


basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment

[ v3_ca ]


subjectKeyIdentifier=hash

authorityKeyIdentifier=keyid:always,issuer
basicConstraints = CA:true


[ crl_ext ]

authorityKeyIdentifier=keyid:always

[ proxy_cert_ext ]
basicConstraints=CA:FALSE

nsComment           = ""OpenSSL Generated Certificate""

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer

proxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo

####################################################################
[ tsa ]

default_tsa = tsa_config1   

[ tsa_config1 ]

dir             = ./demoCA      
serial      = $dir/tsaserial    
crypto_device   = builtin       
signer_cert = $dir/tsacert.pem  

certs       = $dir/cacert.pem   
signer_key  = $dir/private/tsakey.pem 
default_policy  = tsa_policy1       
other_policies  = tsa_policy2, tsa_policy3
digests     = md5, sha1     
accuracy    = secs:1, millisecs:500, microsecs:100  
clock_precision_digits  = 0 
ordering        = yes   

tsa_name        = yes   
ess_cert_id_chain   = no    
</code></pre>

<p>Stack trace <code>strace php getkeystore.php &amp;&gt; stack.trace</code></p>

<p><a href=""http://secure.g4apps.com/generator/stack.trace"">http://secure.g4apps.com/generator/stack.trace</a></p>
","<p>I tried this on my Mac and a fresh install of CentOS 6.3 and I'm getting the same error. I get my CentOS packages from IUS. It's weird though because even though I'm getting this message, the key is actually being generated.</p>

<p>The following code:</p>

<pre><code>$res = openssl_pkey_new();
openssl_pkey_export($res, $privkey);
var_dump(openssl_error_string());
var_dump($privkey);
</code></pre>

<p>Gives me the following output:</p>

<pre><code>string(68) ""error:0E06D06C:configuration file routines:NCONF_get_string:no value""
string(887) ""-----BEGIN RSA PRIVATE KEY-----
MIICXQIBAAKBgQDdh4FiOEtUZzvTSnlb/pJHjmsS9rOHQ7PU2WOO6ZHxYRIgK1NR
ReY7bBwEsT2ziUpx0b8K2Fx4m+XovzysB/lVrKbrdbHoVtGuJGZjYSXgFlCRTBu+
+TnAPUBF0LGJfxfVzjOkHzsh02lH3fvzFpFgRZRWs4za+vVzIweeOweYTwIDAQAB
AoGANZD5iS2BkZQw1COS+tqwtlrKq1g6CwAk8NfsCfeSkaJeRqcTS3iydjXrBHtz
JwGQnbsRDedJXOSdkE0Ft7dp44lijOAp1ngMDCKbabxVN2Go6b1d743HE0oIhFCC
Dv2B9kf9vzeYy+0/BVCs5i4iPoKXJJTSJrWoDxrFEJWSJIkCQQDwe39bOFHmQlxz
pbfT3DZ8Q311xFo6PewcAf7DTsikoPZANx0GQ41WdZj6/n4QVP4k+TnhZLiJzsH+
p3RUrx8tAkEA69LsgPrQMZ0YjsE2vjRLdJmp1916G1xqSLIVWDUPd9Ns+MA8YKTx
AQxC3dl3n+w24m7UlCThANlU/+2r0eoi6wJBAKIxGOdEJ/Cdp08UYNRR/Kl4t2A7
SwNnChylt9awByEJsqwCv9+epe+/Jqt6AzouqK31LXV4AgJn4W1IMWyAJA0CQCp0
6/2AqnD0PpKc+JUf5yHT9H8Xsb8xUTVLUopx6xoAp5LVUUl5CKbOpU85ss7JAUyc
9YrCZPv5JNN6379ILwcCQQDDcjtNnhQHukQQQ8iVL9YCrWzyCgplTz3uktueT+Dd
SDK1bCM4xDehfG3RKu1ZNx80Q0nzmi7FSPJ2md7qSIHc
-----END RSA PRIVATE KEY-----
""
</code></pre>

<p>I suspect it being a bug in PHP. Some sort of openssl configuration PHP is getting hung up on. I found a <a href=""https://bugs.php.net/bug.php?id=33237&amp;edit=1"" rel=""nofollow noreferrer"">bug report</a> about this on php.net, but it ""started working"" for the user so the bug was closed.</p>

<p>As an alternative, you can check out <a href=""https://github.com/phpseclib/phpseclib"" rel=""nofollow noreferrer"">phpseclib</a>, a library purely written in PHP.</p>
","12809","<php><openssl><private-key>","10","6","5","2019-01-05 19:12:50","13518810","9","1","1535358","","2012-11-23 13:34:16","2012-08-21 18:26:46",""
"12060865","openssl_pkey_new() throwing errors -- Proper openssl.cnf setup for php","<p>**Okay, It's become clear that this issue is an issue related with the setup of openssl on the Linux server and how to properly setup a custom openssl.cnf file. I am not looking for anything complicated but I need a front-end to be able to create self-signed client certificates for authentication to my webservice. So I need to be able to use my CA to create intermediate CAs for client companies and then allow them a secure interface to issue client certificates for their employees. Logins are based on whether you belong to a specific intermediate CA and that your certificate or the intermediate CA hasn't be revoked. </p>

<p><em>For anyone wondering, we can use self-signed certificates because they are only used for our server to authenticate users and since we issued them, we trust them. Also it would be way too expensive for a startup to establish themselves as an intermediate CA through the commercial offerings AFAIK. Microsoft can do that, we can't. Our webserver itself uses a CA signed certificate.</em></p>

<p>I know that php code for setting this kind of thing up is straight forward but what isn't is how to properly setup openssl. I have tried several different examples on the net and none of them seem to work for my setup and they all seem to be different. One box was fresh install of Centos 6.2 and I am still getting errors. </p>

<p>Can anyone point me in the proper direction for setting up openssl, apache2 and php so that I can use these php libraries without errors? Our virtual server is using debian squeeze and I have full control of software installed.</p>

<p>Thanks.</p>

<p><strong>open_pkey_new()</strong> is returning errors such as error:0E06D06C:configuration file routines:NCONF_get_string:no value. Yet I am passing a path to a openssl.cnf file so I don't know why I'm still getting this problem. Here's my relevent code</p>

<pre><code>&lt;?php
$cwd=getcwd();
$distname= array(
    ""countryName"" =&gt; ""CA"",
    ""stateOrProvinceName"" =&gt; ""Ontario"",
    ""localityName"" =&gt; ""Toronto"",
    ""organizationName"" =&gt; ""G4 Apps"",
    ""organizationalUnitName"" =&gt; ""Development"",
    ""commonName"" =&gt; ""Mark Lane"",
    ""emailAddress"" =&gt; ""nobody at gmail.com""
        );
$password = 'seanix';

$cacert_location=$cwd.""/certs/CA/g4CA.crt"";
$cakey_location=$cwd.""/certs/CA/g4CA.key"";
$cnf=$cwd.'/certs/myopenssl.cnf';
$configArgs = array(
        'config' =&gt;$cnf
);
?&gt;
</code></pre>

<p>Here's my function that makes the keys.</p>

<pre><code>&lt;?php
function makekey($password,$configArgs) {
    $key= openssl_pkey_new($configArgs);
    //print_r($configArgs);
    openssl_pkey_export($key, $pkeyout,$password);
    if (($e=openssl_error_string()) ==false) return $pkeyout;
    else {
        do {

            echo $e . ""&lt;BR&gt;"";
        } while($e=openssl_error_string());
        return -1;
    }
}
?&gt;
</code></pre>

<p>I've tried relative paths too to the configfile and it still won't work. Looks like it might be the host providers ssl setup. I switched to a local virtual machine and I got the key to generate but now I'm getting the same error when creating a csr.</p>

<p><strong>error:0E06D06C:configuration file routines:NCONF_get_string:no value</strong></p>

<pre><code>&lt;?php
function newcsr($distname,$key,$configArgs) {
    $csr=openssl_csr_new($distname,$key,$configArgs);
    openssl_csr_export($csr, $csrout);
    if (($e=openssl_error_string()) ==false) return $csrout;
    else {
        do {

            echo $e . ""&lt;BR&gt;"";
        } while($e=openssl_error_string());
        return -1;
    }
}
?&gt;
</code></pre>

<p><strong>openssl.conf</strong> This looks to be an error in openssl.cnf so I've included the file.</p>

<pre><code>HOME            = .
RANDFILE        = $ENV::HOME/.rnd

oid_section     = new_oids


[ new_oids ]


tsa_policy1 = 1.2.3.4.1
tsa_policy2 = 1.2.3.4.5.6
tsa_policy3 = 1.2.3.4.5.7

####################################################################
[ ca ]
default_ca  = g4CA      

####################################################################
[ g4CA ]

dir     = /home/g4apps/secure.g4apps.com/generator/certs    
certs       = $dir/     
crl_dir     = $dir/crl      
database    = $dir/index.txt    


new_certs_dir   = $dir/newcerts     

certificate = $dir/CA/g4CA.crt  
serial      = $dir/serial       
crlnumber   = $dir/crlnumber    

crl     = $dir/CA/g4CA.crl  
private_key = $dir/CA/g4CA.key  
RANDFILE    = $dir/private/.rand    

x509_extensions = usr_cert      

name_opt    = ca_default        
cert_opt    = ca_default        


default_days    = 365           # how long to certify for
default_crl_days= 30            # how long before next CRL
default_md  = default       # use public key default MD
preserve    = no            # keep passed DN ordering

policy      = policy_match


[ policy_match ]
countryName     = match
stateOrProvinceName = match
organizationName    = match
organizationalUnitName  = optional
commonName      = supplied
emailAddress        = optional

[ policy_anything ]
countryName     = optional
stateOrProvinceName = optional
localityName        = optional
organizationName    = optional
organizationalUnitName  = optional
commonName      = supplied
emailAddress        = optional

####################################################################
[ req ]
default_bits        = 2048
default_md      = md5
default_keyfile     = privkey.pem
distinguished_name  = req_distinguished_name
attributes      = req_attributes
x509_extensions = v3_ca # The extentions to add to the self signed cert

string_mask = utf8only

[ req_distinguished_name ]
countryName         = Country Name (2 letter code)
countryName_default     = CA
countryName_min         = 2
countryName_max         = 2

stateOrProvinceName     = State or Province Name (full name)
stateOrProvinceName_default = ON

localityName            = Locality Name (eg, city)
localityName_default    = Toronto

0.organizationName      = Organization Name (eg, company)
0.organizationName_default  = G4 Apps



organizationalUnitName      = Organizational Unit Name (eg, section)

commonName          = Common Name (eg, your name or your server\'s hostname)
commonName_max          = 64

emailAddress            = Email Address
emailAddress_default        = lmlane@gmail.com
emailAddress_max        = 64


[ req_attributes ]
challengePassword       = A challenge password
challengePassword_min       = 4
challengePassword_max       = 20

unstructuredName        = An optional company name

[ usr_cert ]

nsComment           = ""OpenSSL Generated Certificate""

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer



[ v3_req ]


basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment

[ v3_ca ]


subjectKeyIdentifier=hash

authorityKeyIdentifier=keyid:always,issuer
basicConstraints = CA:true


[ crl_ext ]

authorityKeyIdentifier=keyid:always

[ proxy_cert_ext ]
basicConstraints=CA:FALSE

nsComment           = ""OpenSSL Generated Certificate""

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer

proxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo

####################################################################
[ tsa ]

default_tsa = tsa_config1   

[ tsa_config1 ]

dir             = ./demoCA      
serial      = $dir/tsaserial    
crypto_device   = builtin       
signer_cert = $dir/tsacert.pem  

certs       = $dir/cacert.pem   
signer_key  = $dir/private/tsakey.pem 
default_policy  = tsa_policy1       
other_policies  = tsa_policy2, tsa_policy3
digests     = md5, sha1     
accuracy    = secs:1, millisecs:500, microsecs:100  
clock_precision_digits  = 0 
ordering        = yes   

tsa_name        = yes   
ess_cert_id_chain   = no    
</code></pre>

<p>Stack trace <code>strace php getkeystore.php &amp;&gt; stack.trace</code></p>

<p><a href=""http://secure.g4apps.com/generator/stack.trace"">http://secure.g4apps.com/generator/stack.trace</a></p>
","<p>Based on <a href=""https://bugs.php.net/bug.php?id=33237"" rel=""nofollow noreferrer"">the bug</a> <a href=""https://stackoverflow.com/users/867760/"">@Luke</a> mentioned, my conclusion would be:</p>

<p><strong>openssl_pkey_new() doesn't return a value and therefore is ""FALSE""</strong>.</p>

<p>var_dump() just says it returns an OpenSSL key.</p>

<p><strong>""So it works - ""NCONF_get_string:no value"" is only some kind of notice.""</strong> - <a href=""https://people.php.net/user.php?username=vrana"" rel=""nofollow noreferrer"">vrana@php.net</a></p>

<p>openssl_csr_new() (and maybe more) have a similar behavior.</p>
","12809","<php><openssl><private-key>","10","0","5","2019-01-05 19:12:50","13518810","9","1","1535358","","2012-11-23 13:34:16","2012-08-21 18:26:46",""
"12060865","openssl_pkey_new() throwing errors -- Proper openssl.cnf setup for php","<p>**Okay, It's become clear that this issue is an issue related with the setup of openssl on the Linux server and how to properly setup a custom openssl.cnf file. I am not looking for anything complicated but I need a front-end to be able to create self-signed client certificates for authentication to my webservice. So I need to be able to use my CA to create intermediate CAs for client companies and then allow them a secure interface to issue client certificates for their employees. Logins are based on whether you belong to a specific intermediate CA and that your certificate or the intermediate CA hasn't be revoked. </p>

<p><em>For anyone wondering, we can use self-signed certificates because they are only used for our server to authenticate users and since we issued them, we trust them. Also it would be way too expensive for a startup to establish themselves as an intermediate CA through the commercial offerings AFAIK. Microsoft can do that, we can't. Our webserver itself uses a CA signed certificate.</em></p>

<p>I know that php code for setting this kind of thing up is straight forward but what isn't is how to properly setup openssl. I have tried several different examples on the net and none of them seem to work for my setup and they all seem to be different. One box was fresh install of Centos 6.2 and I am still getting errors. </p>

<p>Can anyone point me in the proper direction for setting up openssl, apache2 and php so that I can use these php libraries without errors? Our virtual server is using debian squeeze and I have full control of software installed.</p>

<p>Thanks.</p>

<p><strong>open_pkey_new()</strong> is returning errors such as error:0E06D06C:configuration file routines:NCONF_get_string:no value. Yet I am passing a path to a openssl.cnf file so I don't know why I'm still getting this problem. Here's my relevent code</p>

<pre><code>&lt;?php
$cwd=getcwd();
$distname= array(
    ""countryName"" =&gt; ""CA"",
    ""stateOrProvinceName"" =&gt; ""Ontario"",
    ""localityName"" =&gt; ""Toronto"",
    ""organizationName"" =&gt; ""G4 Apps"",
    ""organizationalUnitName"" =&gt; ""Development"",
    ""commonName"" =&gt; ""Mark Lane"",
    ""emailAddress"" =&gt; ""nobody at gmail.com""
        );
$password = 'seanix';

$cacert_location=$cwd.""/certs/CA/g4CA.crt"";
$cakey_location=$cwd.""/certs/CA/g4CA.key"";
$cnf=$cwd.'/certs/myopenssl.cnf';
$configArgs = array(
        'config' =&gt;$cnf
);
?&gt;
</code></pre>

<p>Here's my function that makes the keys.</p>

<pre><code>&lt;?php
function makekey($password,$configArgs) {
    $key= openssl_pkey_new($configArgs);
    //print_r($configArgs);
    openssl_pkey_export($key, $pkeyout,$password);
    if (($e=openssl_error_string()) ==false) return $pkeyout;
    else {
        do {

            echo $e . ""&lt;BR&gt;"";
        } while($e=openssl_error_string());
        return -1;
    }
}
?&gt;
</code></pre>

<p>I've tried relative paths too to the configfile and it still won't work. Looks like it might be the host providers ssl setup. I switched to a local virtual machine and I got the key to generate but now I'm getting the same error when creating a csr.</p>

<p><strong>error:0E06D06C:configuration file routines:NCONF_get_string:no value</strong></p>

<pre><code>&lt;?php
function newcsr($distname,$key,$configArgs) {
    $csr=openssl_csr_new($distname,$key,$configArgs);
    openssl_csr_export($csr, $csrout);
    if (($e=openssl_error_string()) ==false) return $csrout;
    else {
        do {

            echo $e . ""&lt;BR&gt;"";
        } while($e=openssl_error_string());
        return -1;
    }
}
?&gt;
</code></pre>

<p><strong>openssl.conf</strong> This looks to be an error in openssl.cnf so I've included the file.</p>

<pre><code>HOME            = .
RANDFILE        = $ENV::HOME/.rnd

oid_section     = new_oids


[ new_oids ]


tsa_policy1 = 1.2.3.4.1
tsa_policy2 = 1.2.3.4.5.6
tsa_policy3 = 1.2.3.4.5.7

####################################################################
[ ca ]
default_ca  = g4CA      

####################################################################
[ g4CA ]

dir     = /home/g4apps/secure.g4apps.com/generator/certs    
certs       = $dir/     
crl_dir     = $dir/crl      
database    = $dir/index.txt    


new_certs_dir   = $dir/newcerts     

certificate = $dir/CA/g4CA.crt  
serial      = $dir/serial       
crlnumber   = $dir/crlnumber    

crl     = $dir/CA/g4CA.crl  
private_key = $dir/CA/g4CA.key  
RANDFILE    = $dir/private/.rand    

x509_extensions = usr_cert      

name_opt    = ca_default        
cert_opt    = ca_default        


default_days    = 365           # how long to certify for
default_crl_days= 30            # how long before next CRL
default_md  = default       # use public key default MD
preserve    = no            # keep passed DN ordering

policy      = policy_match


[ policy_match ]
countryName     = match
stateOrProvinceName = match
organizationName    = match
organizationalUnitName  = optional
commonName      = supplied
emailAddress        = optional

[ policy_anything ]
countryName     = optional
stateOrProvinceName = optional
localityName        = optional
organizationName    = optional
organizationalUnitName  = optional
commonName      = supplied
emailAddress        = optional

####################################################################
[ req ]
default_bits        = 2048
default_md      = md5
default_keyfile     = privkey.pem
distinguished_name  = req_distinguished_name
attributes      = req_attributes
x509_extensions = v3_ca # The extentions to add to the self signed cert

string_mask = utf8only

[ req_distinguished_name ]
countryName         = Country Name (2 letter code)
countryName_default     = CA
countryName_min         = 2
countryName_max         = 2

stateOrProvinceName     = State or Province Name (full name)
stateOrProvinceName_default = ON

localityName            = Locality Name (eg, city)
localityName_default    = Toronto

0.organizationName      = Organization Name (eg, company)
0.organizationName_default  = G4 Apps



organizationalUnitName      = Organizational Unit Name (eg, section)

commonName          = Common Name (eg, your name or your server\'s hostname)
commonName_max          = 64

emailAddress            = Email Address
emailAddress_default        = lmlane@gmail.com
emailAddress_max        = 64


[ req_attributes ]
challengePassword       = A challenge password
challengePassword_min       = 4
challengePassword_max       = 20

unstructuredName        = An optional company name

[ usr_cert ]

nsComment           = ""OpenSSL Generated Certificate""

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer



[ v3_req ]


basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment

[ v3_ca ]


subjectKeyIdentifier=hash

authorityKeyIdentifier=keyid:always,issuer
basicConstraints = CA:true


[ crl_ext ]

authorityKeyIdentifier=keyid:always

[ proxy_cert_ext ]
basicConstraints=CA:FALSE

nsComment           = ""OpenSSL Generated Certificate""

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer

proxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo

####################################################################
[ tsa ]

default_tsa = tsa_config1   

[ tsa_config1 ]

dir             = ./demoCA      
serial      = $dir/tsaserial    
crypto_device   = builtin       
signer_cert = $dir/tsacert.pem  

certs       = $dir/cacert.pem   
signer_key  = $dir/private/tsakey.pem 
default_policy  = tsa_policy1       
other_policies  = tsa_policy2, tsa_policy3
digests     = md5, sha1     
accuracy    = secs:1, millisecs:500, microsecs:100  
clock_precision_digits  = 0 
ordering        = yes   

tsa_name        = yes   
ess_cert_id_chain   = no    
</code></pre>

<p>Stack trace <code>strace php getkeystore.php &amp;&gt; stack.trace</code></p>

<p><a href=""http://secure.g4apps.com/generator/stack.trace"">http://secure.g4apps.com/generator/stack.trace</a></p>
","<p>When using openssl_csr_new make sure the first parameter $dn does not contain keys with empty values.</p>

<p>For example, this call to <code>openssl_csr_new</code> would trigger the error </p>

<p><code>0E06D06C:configuration file routines:NCONF_get_string:no value</code></p>

<pre><code>&lt;?php

$dn = [
    'CN' =&gt; 'example.com',
    'ST' =&gt; '',
    'C'  =&gt; '',
    'O'  =&gt; '',
];

openssl_csr_new($dn, $privKey);
</code></pre>
","12809","<php><openssl><private-key>","10","2","5","2019-01-05 19:12:50","13518810","9","1","1535358","","2012-11-23 13:34:16","2012-08-21 18:26:46",""
"12060865","openssl_pkey_new() throwing errors -- Proper openssl.cnf setup for php","<p>**Okay, It's become clear that this issue is an issue related with the setup of openssl on the Linux server and how to properly setup a custom openssl.cnf file. I am not looking for anything complicated but I need a front-end to be able to create self-signed client certificates for authentication to my webservice. So I need to be able to use my CA to create intermediate CAs for client companies and then allow them a secure interface to issue client certificates for their employees. Logins are based on whether you belong to a specific intermediate CA and that your certificate or the intermediate CA hasn't be revoked. </p>

<p><em>For anyone wondering, we can use self-signed certificates because they are only used for our server to authenticate users and since we issued them, we trust them. Also it would be way too expensive for a startup to establish themselves as an intermediate CA through the commercial offerings AFAIK. Microsoft can do that, we can't. Our webserver itself uses a CA signed certificate.</em></p>

<p>I know that php code for setting this kind of thing up is straight forward but what isn't is how to properly setup openssl. I have tried several different examples on the net and none of them seem to work for my setup and they all seem to be different. One box was fresh install of Centos 6.2 and I am still getting errors. </p>

<p>Can anyone point me in the proper direction for setting up openssl, apache2 and php so that I can use these php libraries without errors? Our virtual server is using debian squeeze and I have full control of software installed.</p>

<p>Thanks.</p>

<p><strong>open_pkey_new()</strong> is returning errors such as error:0E06D06C:configuration file routines:NCONF_get_string:no value. Yet I am passing a path to a openssl.cnf file so I don't know why I'm still getting this problem. Here's my relevent code</p>

<pre><code>&lt;?php
$cwd=getcwd();
$distname= array(
    ""countryName"" =&gt; ""CA"",
    ""stateOrProvinceName"" =&gt; ""Ontario"",
    ""localityName"" =&gt; ""Toronto"",
    ""organizationName"" =&gt; ""G4 Apps"",
    ""organizationalUnitName"" =&gt; ""Development"",
    ""commonName"" =&gt; ""Mark Lane"",
    ""emailAddress"" =&gt; ""nobody at gmail.com""
        );
$password = 'seanix';

$cacert_location=$cwd.""/certs/CA/g4CA.crt"";
$cakey_location=$cwd.""/certs/CA/g4CA.key"";
$cnf=$cwd.'/certs/myopenssl.cnf';
$configArgs = array(
        'config' =&gt;$cnf
);
?&gt;
</code></pre>

<p>Here's my function that makes the keys.</p>

<pre><code>&lt;?php
function makekey($password,$configArgs) {
    $key= openssl_pkey_new($configArgs);
    //print_r($configArgs);
    openssl_pkey_export($key, $pkeyout,$password);
    if (($e=openssl_error_string()) ==false) return $pkeyout;
    else {
        do {

            echo $e . ""&lt;BR&gt;"";
        } while($e=openssl_error_string());
        return -1;
    }
}
?&gt;
</code></pre>

<p>I've tried relative paths too to the configfile and it still won't work. Looks like it might be the host providers ssl setup. I switched to a local virtual machine and I got the key to generate but now I'm getting the same error when creating a csr.</p>

<p><strong>error:0E06D06C:configuration file routines:NCONF_get_string:no value</strong></p>

<pre><code>&lt;?php
function newcsr($distname,$key,$configArgs) {
    $csr=openssl_csr_new($distname,$key,$configArgs);
    openssl_csr_export($csr, $csrout);
    if (($e=openssl_error_string()) ==false) return $csrout;
    else {
        do {

            echo $e . ""&lt;BR&gt;"";
        } while($e=openssl_error_string());
        return -1;
    }
}
?&gt;
</code></pre>

<p><strong>openssl.conf</strong> This looks to be an error in openssl.cnf so I've included the file.</p>

<pre><code>HOME            = .
RANDFILE        = $ENV::HOME/.rnd

oid_section     = new_oids


[ new_oids ]


tsa_policy1 = 1.2.3.4.1
tsa_policy2 = 1.2.3.4.5.6
tsa_policy3 = 1.2.3.4.5.7

####################################################################
[ ca ]
default_ca  = g4CA      

####################################################################
[ g4CA ]

dir     = /home/g4apps/secure.g4apps.com/generator/certs    
certs       = $dir/     
crl_dir     = $dir/crl      
database    = $dir/index.txt    


new_certs_dir   = $dir/newcerts     

certificate = $dir/CA/g4CA.crt  
serial      = $dir/serial       
crlnumber   = $dir/crlnumber    

crl     = $dir/CA/g4CA.crl  
private_key = $dir/CA/g4CA.key  
RANDFILE    = $dir/private/.rand    

x509_extensions = usr_cert      

name_opt    = ca_default        
cert_opt    = ca_default        


default_days    = 365           # how long to certify for
default_crl_days= 30            # how long before next CRL
default_md  = default       # use public key default MD
preserve    = no            # keep passed DN ordering

policy      = policy_match


[ policy_match ]
countryName     = match
stateOrProvinceName = match
organizationName    = match
organizationalUnitName  = optional
commonName      = supplied
emailAddress        = optional

[ policy_anything ]
countryName     = optional
stateOrProvinceName = optional
localityName        = optional
organizationName    = optional
organizationalUnitName  = optional
commonName      = supplied
emailAddress        = optional

####################################################################
[ req ]
default_bits        = 2048
default_md      = md5
default_keyfile     = privkey.pem
distinguished_name  = req_distinguished_name
attributes      = req_attributes
x509_extensions = v3_ca # The extentions to add to the self signed cert

string_mask = utf8only

[ req_distinguished_name ]
countryName         = Country Name (2 letter code)
countryName_default     = CA
countryName_min         = 2
countryName_max         = 2

stateOrProvinceName     = State or Province Name (full name)
stateOrProvinceName_default = ON

localityName            = Locality Name (eg, city)
localityName_default    = Toronto

0.organizationName      = Organization Name (eg, company)
0.organizationName_default  = G4 Apps



organizationalUnitName      = Organizational Unit Name (eg, section)

commonName          = Common Name (eg, your name or your server\'s hostname)
commonName_max          = 64

emailAddress            = Email Address
emailAddress_default        = lmlane@gmail.com
emailAddress_max        = 64


[ req_attributes ]
challengePassword       = A challenge password
challengePassword_min       = 4
challengePassword_max       = 20

unstructuredName        = An optional company name

[ usr_cert ]

nsComment           = ""OpenSSL Generated Certificate""

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer



[ v3_req ]


basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment

[ v3_ca ]


subjectKeyIdentifier=hash

authorityKeyIdentifier=keyid:always,issuer
basicConstraints = CA:true


[ crl_ext ]

authorityKeyIdentifier=keyid:always

[ proxy_cert_ext ]
basicConstraints=CA:FALSE

nsComment           = ""OpenSSL Generated Certificate""

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer

proxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo

####################################################################
[ tsa ]

default_tsa = tsa_config1   

[ tsa_config1 ]

dir             = ./demoCA      
serial      = $dir/tsaserial    
crypto_device   = builtin       
signer_cert = $dir/tsacert.pem  

certs       = $dir/cacert.pem   
signer_key  = $dir/private/tsakey.pem 
default_policy  = tsa_policy1       
other_policies  = tsa_policy2, tsa_policy3
digests     = md5, sha1     
accuracy    = secs:1, millisecs:500, microsecs:100  
clock_precision_digits  = 0 
ordering        = yes   

tsa_name        = yes   
ess_cert_id_chain   = no    
</code></pre>

<p>Stack trace <code>strace php getkeystore.php &amp;&gt; stack.trace</code></p>

<p><a href=""http://secure.g4apps.com/generator/stack.trace"">http://secure.g4apps.com/generator/stack.trace</a></p>
","<p>In my configuration (FreeBSD, libressl 2.8, php built from ports) in the section [ req ] the entry ""default_bits"" was commented out. </p>

<p>By enabling this configuration entry this issue was resolved.</p>
","12809","<php><openssl><private-key>","10","0","5","2019-01-05 19:12:50","13518810","9","1","1535358","","2012-11-23 13:34:16","2012-08-21 18:26:46",""
"26916750","Extending expiration date of trustedCertEntry within a keystore","<p>Using keytool, I am trying to extend the expiration date of a trustedCertEntry within a keystore that I have. The keystore has the contents below</p>

<pre><code>$ keytool -list -keystore certs/authTruststore.jks
Enter keystore password:

Keystore type: JKS
Keystore provider: SUN

Your keystore contains 3 entries

sts, Nov 11, 2013, trustedCertEntry,
Certificate fingerprint (SHA1): 8D:33:B7:69:DE:75:8F:22:E2:95:2C:EB:93:65:41:31:42:A6:E3:A7
__
localhost, Nov 11, 2013, PrivateKeyEntry,
Certificate fingerprint (SHA1): F4:A9:84:1E:7F:BF:5D:71:58:74:E4:C6:00:49:37:49:38:3E:31:BE
__    
security_localhost, Nov 11, 2013, trustedCertEntry,
Certificate fingerprint (SHA1): 6B:F8:E1:36:EB:36:D4:A5:6E:A0:5C:7A:E4:B9:A4:5B:63:BF:97:5D
</code></pre>

<p>I can successfully modify the expiration date of the second entry, localhost of type PrivateKeyEntry but when attempting to modify the expirations of the other two with the same command I get the following error:</p>

<pre><code>$ keytool -selfcert -v -alias security_localhost -validity 3650 -keystore certs/authTruststore.jks -storepass ****

keytool error: java.lang.Exception: Alias &lt;localhost&gt; has no key
java.lang.Exception: Alias &lt;localhost&gt; has no key
    at sun.security.tools.KeyTool.recoverKey(KeyTool.java:3095)
    at sun.security.tools.KeyTool.doSelfCert(KeyTool.java:2442)
    at sun.security.tools.KeyTool.doCommands(KeyTool.java:1071)
    at sun.security.tools.KeyTool.run(KeyTool.java:340)
    at sun.security.tools.KeyTool.main(KeyTool.java:333)
</code></pre>

<p>How can I go about extending these expiration dates?</p>
","<p>Take a look at this <a href=""https://docs.oracle.com/javase/1.5.0/docs/tooldocs/windows/keytool.html#selfcertCmd"" rel=""nofollow"">link</a>. It says,</p>

<pre><code>Generates an X.509 v1 self-signed certificate, using keystore information including
the private key and public key associated with alias
</code></pre>

<p>So you can update a certificate using <strong>-selfcert</strong> that are associated with a key. Your <code>first</code> and <code>third</code> are trusted certificate entries, where as your <code>second</code> entry is a PrivateKeyEntry. The certificate for this entry is associated with its <code>PrivateKey</code>. Where as the other 2 are not.</p>

<p>If those 2 certificates are expired you can only update them with the latest in the same way you added them to the keystore in the first place. By doing <strong>-importcert</strong>.</p>

<p>Note: <code>-selfcert</code> is now obsolete. You can read more about it <a href=""https://docs.oracle.com/javase/7/docs/technotes/tools/windows/keytool.html"" rel=""nofollow"">here</a>.</p>
","12681","<java><certificate><keystore><private-key><truststore>","5","2","1","2014-11-13 20:19:53","26917416","0","","","","","2014-11-13 19:22:42",""
"14571920","WinSCP: Server refused our key","<p>Ok, I've got a working connection to a server on our production machine.  I need to replicate that on my development machine so that I can transfer my own files.  Everything is the same, down to the OS.</p>

<p>When I attempt to connect, all I get is:</p>

<blockquote>
  <p>Server refused our key.</p>
</blockquote>

<p>Here is my log file...</p>

<pre><code>. 2013-01-28 15:26:25.738 Session name: hex166t@65.XXX.XX.XXX (Modified stored session)
. 2013-01-28 15:26:25.738 Host name: 65.XXX.XX.XXX (Port: 1XXXX)
. 2013-01-28 15:26:25.738 User name: hex166t (Password: Yes, Key file: Yes)
. 2013-01-28 15:26:25.738 Tunnel: No
. 2013-01-28 15:26:25.738 Transfer Protocol: SFTP
. 2013-01-28 15:26:25.738 Ping type: -, Ping interval: 30 sec; Timeout: 15 sec
. 2013-01-28 15:26:25.738 Proxy: none
. 2013-01-28 15:26:25.738 SSH protocol version: 2; Compression: No
. 2013-01-28 15:26:25.738 Bypass authentication: No
. 2013-01-28 15:26:25.738 Try agent: Yes; Agent forwarding: No; TIS/CryptoCard: No; KI: Yes; GSSAPI: No
. 2013-01-28 15:26:25.738 Ciphers: aes,blowfish,3des,WARN,arcfour,des; Ssh2DES: No
. 2013-01-28 15:26:25.738 SSH Bugs: A,A,A,A,A,A,A,A,A,A
. 2013-01-28 15:26:25.738 SFTP Bugs: A,A
. 2013-01-28 15:26:25.738 Return code variable: Autodetect; Lookup user groups: A
. 2013-01-28 15:26:25.738 Shell: default
. 2013-01-28 15:26:25.738 EOL: 0, UTF: 2
. 2013-01-28 15:26:25.738 Clear aliases: Yes, Unset nat.vars: Yes, Resolve symlinks: Yes
. 2013-01-28 15:26:25.738 LS: ls -la, Ign LS warn: Yes, Scp1 Comp: No
. 2013-01-28 15:26:25.738 Local directory: default, Remote directory: home, Update: Yes, Cache: Yes
. 2013-01-28 15:26:25.738 Cache directory changes: Yes, Permanent: Yes
. 2013-01-28 15:26:25.738 DST mode: 1
. 2013-01-28 15:26:25.738 --------------------------------------------------------------------------
. 2013-01-28 15:26:25.808 Looking up host ""65.XXX.XX.XXX""
. 2013-01-28 15:26:25.808 Connecting to 65.XXX.XX.XXX port 1XXXX
. 2013-01-28 15:26:25.858 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:25.858 Detected network event
. 2013-01-28 15:26:25.938 Detected network event
. 2013-01-28 15:26:25.938 Server version: SSH-2.0-Connect:Enterprise_UNIX_2.4.02
. 2013-01-28 15:26:25.938 Using SSH protocol version 2
. 2013-01-28 15:26:25.938 We claim version: SSH-2.0-WinSCP_release_5.1.3
. 2013-01-28 15:26:25.938 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:25.998 Detected network event
. 2013-01-28 15:26:25.998 Doing Diffie-Hellman group exchange
. 2013-01-28 15:26:25.998 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:26.258 Detected network event
. 2013-01-28 15:26:26.258 Doing Diffie-Hellman key exchange with hash SHA-1
. 2013-01-28 15:26:26.438 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:26.678 Detected network event
. 2013-01-28 15:26:26.898 Verifying host key rsa2 0x23,0xdf2a07bac36 with fingerprint ssh-rsa 2048 fe:03:bc:ad:66 
. 2013-01-28 15:26:26.908 Host key matches cached key
. 2013-01-28 15:26:26.908 Host key fingerprint is:
. 2013-01-28 15:26:26.908 ssh-rsa 2048 fe:03:bc:ad:66 
. 2013-01-28 15:26:26.908 Initialised AES-256 CBC client-    &gt;server encryption
. 2013-01-28 15:26:26.908 Initialised HMAC-SHA1 client-    &gt;server MAC algorithm
. 2013-01-28 15:26:26.908 Initialised AES-256 CBC server-    &gt;client encryption
. 2013-01-28 15:26:26.908 Initialised HMAC-SHA1 server-    &gt;client MAC algorithm
. 2013-01-28 15:26:26.908 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:27.048 Detected network event
. 2013-01-28 15:26:27.048 Reading private key file ""Z:\prd\PS_DATA\HSBCfingateway\hsbccerts\hsbc-ensco.ppk""
. 2013-01-28 15:26:27.058 Using username ""hex166t"".
. 2013-01-28 15:26:27.108 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:27.158 Detected network event
. 2013-01-28 15:26:27.168 Offered public key
. 2013-01-28 15:26:27.168 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:27.228 Detected network event
. 2013-01-28 15:26:27.228 Server refused our key
. 2013-01-28 15:26:27.258 Server refused our key
. 2013-01-28 15:26:27.258 Attempting keyboard-interactive authentication
. 2013-01-28 15:26:27.258 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:27.298 Detected network event
. 2013-01-28 15:26:27.298 Server refused keyboard-interactive authentication
. 2013-01-28 15:26:27.298 Prompt (7, SSH password, , &amp;Password: )
. 2013-01-28 15:26:27.298 Using stored password.
. 2013-01-28 15:26:27.308 Sent password
. 2013-01-28 15:26:27.308 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:27.418 Detected network event
. 2013-01-28 15:26:27.418 Password authentication failed
. 2013-01-28 15:26:27.418 Access denied
. 2013-01-28 15:26:27.458 Prompt (7, SSH password, , &amp;Password: )
. 2013-01-28 15:26:45.497 Attempt to close connection due to fatal exception:
. 2013-01-28 15:26:45.497 Closing connection.
. 2013-01-28 15:26:45.497 Sending special code: 12
. 2013-01-28 15:26:45.559 (ESshFatal) 
</code></pre>
","<p>You do not have the private key authentication setup correctly.</p>

<p>Make sure you add the public key to your <code>~/.ssh/authorized_keys</code> on the server.</p>

<p>You will obtain the public key fingerprint in the correct format in PuTTYgen in <em>Public key for pasting into authorized_keys file</em> box when your load your private key.</p>

<p>For more details refer to the article <a href=""https://winscp.net/eng/docs/guide_public_key"" rel=""nofollow noreferrer"">Set up SSH public key authentication</a>.</p>
","12552","<ssh><putty><private-key><winscp>","3","2","3","2019-03-28 06:26:59","","0","1","850848","","2013-12-27 11:06:51","2013-01-28 21:52:35",""
"14571920","WinSCP: Server refused our key","<p>Ok, I've got a working connection to a server on our production machine.  I need to replicate that on my development machine so that I can transfer my own files.  Everything is the same, down to the OS.</p>

<p>When I attempt to connect, all I get is:</p>

<blockquote>
  <p>Server refused our key.</p>
</blockquote>

<p>Here is my log file...</p>

<pre><code>. 2013-01-28 15:26:25.738 Session name: hex166t@65.XXX.XX.XXX (Modified stored session)
. 2013-01-28 15:26:25.738 Host name: 65.XXX.XX.XXX (Port: 1XXXX)
. 2013-01-28 15:26:25.738 User name: hex166t (Password: Yes, Key file: Yes)
. 2013-01-28 15:26:25.738 Tunnel: No
. 2013-01-28 15:26:25.738 Transfer Protocol: SFTP
. 2013-01-28 15:26:25.738 Ping type: -, Ping interval: 30 sec; Timeout: 15 sec
. 2013-01-28 15:26:25.738 Proxy: none
. 2013-01-28 15:26:25.738 SSH protocol version: 2; Compression: No
. 2013-01-28 15:26:25.738 Bypass authentication: No
. 2013-01-28 15:26:25.738 Try agent: Yes; Agent forwarding: No; TIS/CryptoCard: No; KI: Yes; GSSAPI: No
. 2013-01-28 15:26:25.738 Ciphers: aes,blowfish,3des,WARN,arcfour,des; Ssh2DES: No
. 2013-01-28 15:26:25.738 SSH Bugs: A,A,A,A,A,A,A,A,A,A
. 2013-01-28 15:26:25.738 SFTP Bugs: A,A
. 2013-01-28 15:26:25.738 Return code variable: Autodetect; Lookup user groups: A
. 2013-01-28 15:26:25.738 Shell: default
. 2013-01-28 15:26:25.738 EOL: 0, UTF: 2
. 2013-01-28 15:26:25.738 Clear aliases: Yes, Unset nat.vars: Yes, Resolve symlinks: Yes
. 2013-01-28 15:26:25.738 LS: ls -la, Ign LS warn: Yes, Scp1 Comp: No
. 2013-01-28 15:26:25.738 Local directory: default, Remote directory: home, Update: Yes, Cache: Yes
. 2013-01-28 15:26:25.738 Cache directory changes: Yes, Permanent: Yes
. 2013-01-28 15:26:25.738 DST mode: 1
. 2013-01-28 15:26:25.738 --------------------------------------------------------------------------
. 2013-01-28 15:26:25.808 Looking up host ""65.XXX.XX.XXX""
. 2013-01-28 15:26:25.808 Connecting to 65.XXX.XX.XXX port 1XXXX
. 2013-01-28 15:26:25.858 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:25.858 Detected network event
. 2013-01-28 15:26:25.938 Detected network event
. 2013-01-28 15:26:25.938 Server version: SSH-2.0-Connect:Enterprise_UNIX_2.4.02
. 2013-01-28 15:26:25.938 Using SSH protocol version 2
. 2013-01-28 15:26:25.938 We claim version: SSH-2.0-WinSCP_release_5.1.3
. 2013-01-28 15:26:25.938 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:25.998 Detected network event
. 2013-01-28 15:26:25.998 Doing Diffie-Hellman group exchange
. 2013-01-28 15:26:25.998 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:26.258 Detected network event
. 2013-01-28 15:26:26.258 Doing Diffie-Hellman key exchange with hash SHA-1
. 2013-01-28 15:26:26.438 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:26.678 Detected network event
. 2013-01-28 15:26:26.898 Verifying host key rsa2 0x23,0xdf2a07bac36 with fingerprint ssh-rsa 2048 fe:03:bc:ad:66 
. 2013-01-28 15:26:26.908 Host key matches cached key
. 2013-01-28 15:26:26.908 Host key fingerprint is:
. 2013-01-28 15:26:26.908 ssh-rsa 2048 fe:03:bc:ad:66 
. 2013-01-28 15:26:26.908 Initialised AES-256 CBC client-    &gt;server encryption
. 2013-01-28 15:26:26.908 Initialised HMAC-SHA1 client-    &gt;server MAC algorithm
. 2013-01-28 15:26:26.908 Initialised AES-256 CBC server-    &gt;client encryption
. 2013-01-28 15:26:26.908 Initialised HMAC-SHA1 server-    &gt;client MAC algorithm
. 2013-01-28 15:26:26.908 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:27.048 Detected network event
. 2013-01-28 15:26:27.048 Reading private key file ""Z:\prd\PS_DATA\HSBCfingateway\hsbccerts\hsbc-ensco.ppk""
. 2013-01-28 15:26:27.058 Using username ""hex166t"".
. 2013-01-28 15:26:27.108 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:27.158 Detected network event
. 2013-01-28 15:26:27.168 Offered public key
. 2013-01-28 15:26:27.168 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:27.228 Detected network event
. 2013-01-28 15:26:27.228 Server refused our key
. 2013-01-28 15:26:27.258 Server refused our key
. 2013-01-28 15:26:27.258 Attempting keyboard-interactive authentication
. 2013-01-28 15:26:27.258 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:27.298 Detected network event
. 2013-01-28 15:26:27.298 Server refused keyboard-interactive authentication
. 2013-01-28 15:26:27.298 Prompt (7, SSH password, , &amp;Password: )
. 2013-01-28 15:26:27.298 Using stored password.
. 2013-01-28 15:26:27.308 Sent password
. 2013-01-28 15:26:27.308 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:27.418 Detected network event
. 2013-01-28 15:26:27.418 Password authentication failed
. 2013-01-28 15:26:27.418 Access denied
. 2013-01-28 15:26:27.458 Prompt (7, SSH password, , &amp;Password: )
. 2013-01-28 15:26:45.497 Attempt to close connection due to fatal exception:
. 2013-01-28 15:26:45.497 Closing connection.
. 2013-01-28 15:26:45.497 Sending special code: 12
. 2013-01-28 15:26:45.559 (ESshFatal) 
</code></pre>
","<p>For my case, I tried </p>

<pre><code>$chmod 0600 authorized_keys
</code></pre>

<p>and it works fine then.</p>
","12552","<ssh><putty><private-key><winscp>","3","1","3","2019-03-28 06:26:59","","0","1","850848","","2013-12-27 11:06:51","2013-01-28 21:52:35",""
"14571920","WinSCP: Server refused our key","<p>Ok, I've got a working connection to a server on our production machine.  I need to replicate that on my development machine so that I can transfer my own files.  Everything is the same, down to the OS.</p>

<p>When I attempt to connect, all I get is:</p>

<blockquote>
  <p>Server refused our key.</p>
</blockquote>

<p>Here is my log file...</p>

<pre><code>. 2013-01-28 15:26:25.738 Session name: hex166t@65.XXX.XX.XXX (Modified stored session)
. 2013-01-28 15:26:25.738 Host name: 65.XXX.XX.XXX (Port: 1XXXX)
. 2013-01-28 15:26:25.738 User name: hex166t (Password: Yes, Key file: Yes)
. 2013-01-28 15:26:25.738 Tunnel: No
. 2013-01-28 15:26:25.738 Transfer Protocol: SFTP
. 2013-01-28 15:26:25.738 Ping type: -, Ping interval: 30 sec; Timeout: 15 sec
. 2013-01-28 15:26:25.738 Proxy: none
. 2013-01-28 15:26:25.738 SSH protocol version: 2; Compression: No
. 2013-01-28 15:26:25.738 Bypass authentication: No
. 2013-01-28 15:26:25.738 Try agent: Yes; Agent forwarding: No; TIS/CryptoCard: No; KI: Yes; GSSAPI: No
. 2013-01-28 15:26:25.738 Ciphers: aes,blowfish,3des,WARN,arcfour,des; Ssh2DES: No
. 2013-01-28 15:26:25.738 SSH Bugs: A,A,A,A,A,A,A,A,A,A
. 2013-01-28 15:26:25.738 SFTP Bugs: A,A
. 2013-01-28 15:26:25.738 Return code variable: Autodetect; Lookup user groups: A
. 2013-01-28 15:26:25.738 Shell: default
. 2013-01-28 15:26:25.738 EOL: 0, UTF: 2
. 2013-01-28 15:26:25.738 Clear aliases: Yes, Unset nat.vars: Yes, Resolve symlinks: Yes
. 2013-01-28 15:26:25.738 LS: ls -la, Ign LS warn: Yes, Scp1 Comp: No
. 2013-01-28 15:26:25.738 Local directory: default, Remote directory: home, Update: Yes, Cache: Yes
. 2013-01-28 15:26:25.738 Cache directory changes: Yes, Permanent: Yes
. 2013-01-28 15:26:25.738 DST mode: 1
. 2013-01-28 15:26:25.738 --------------------------------------------------------------------------
. 2013-01-28 15:26:25.808 Looking up host ""65.XXX.XX.XXX""
. 2013-01-28 15:26:25.808 Connecting to 65.XXX.XX.XXX port 1XXXX
. 2013-01-28 15:26:25.858 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:25.858 Detected network event
. 2013-01-28 15:26:25.938 Detected network event
. 2013-01-28 15:26:25.938 Server version: SSH-2.0-Connect:Enterprise_UNIX_2.4.02
. 2013-01-28 15:26:25.938 Using SSH protocol version 2
. 2013-01-28 15:26:25.938 We claim version: SSH-2.0-WinSCP_release_5.1.3
. 2013-01-28 15:26:25.938 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:25.998 Detected network event
. 2013-01-28 15:26:25.998 Doing Diffie-Hellman group exchange
. 2013-01-28 15:26:25.998 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:26.258 Detected network event
. 2013-01-28 15:26:26.258 Doing Diffie-Hellman key exchange with hash SHA-1
. 2013-01-28 15:26:26.438 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:26.678 Detected network event
. 2013-01-28 15:26:26.898 Verifying host key rsa2 0x23,0xdf2a07bac36 with fingerprint ssh-rsa 2048 fe:03:bc:ad:66 
. 2013-01-28 15:26:26.908 Host key matches cached key
. 2013-01-28 15:26:26.908 Host key fingerprint is:
. 2013-01-28 15:26:26.908 ssh-rsa 2048 fe:03:bc:ad:66 
. 2013-01-28 15:26:26.908 Initialised AES-256 CBC client-    &gt;server encryption
. 2013-01-28 15:26:26.908 Initialised HMAC-SHA1 client-    &gt;server MAC algorithm
. 2013-01-28 15:26:26.908 Initialised AES-256 CBC server-    &gt;client encryption
. 2013-01-28 15:26:26.908 Initialised HMAC-SHA1 server-    &gt;client MAC algorithm
. 2013-01-28 15:26:26.908 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:27.048 Detected network event
. 2013-01-28 15:26:27.048 Reading private key file ""Z:\prd\PS_DATA\HSBCfingateway\hsbccerts\hsbc-ensco.ppk""
. 2013-01-28 15:26:27.058 Using username ""hex166t"".
. 2013-01-28 15:26:27.108 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:27.158 Detected network event
. 2013-01-28 15:26:27.168 Offered public key
. 2013-01-28 15:26:27.168 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:27.228 Detected network event
. 2013-01-28 15:26:27.228 Server refused our key
. 2013-01-28 15:26:27.258 Server refused our key
. 2013-01-28 15:26:27.258 Attempting keyboard-interactive authentication
. 2013-01-28 15:26:27.258 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:27.298 Detected network event
. 2013-01-28 15:26:27.298 Server refused keyboard-interactive authentication
. 2013-01-28 15:26:27.298 Prompt (7, SSH password, , &amp;Password: )
. 2013-01-28 15:26:27.298 Using stored password.
. 2013-01-28 15:26:27.308 Sent password
. 2013-01-28 15:26:27.308 Waiting for the server to continue with the initialisation
. 2013-01-28 15:26:27.418 Detected network event
. 2013-01-28 15:26:27.418 Password authentication failed
. 2013-01-28 15:26:27.418 Access denied
. 2013-01-28 15:26:27.458 Prompt (7, SSH password, , &amp;Password: )
. 2013-01-28 15:26:45.497 Attempt to close connection due to fatal exception:
. 2013-01-28 15:26:45.497 Closing connection.
. 2013-01-28 15:26:45.497 Sending special code: 12
. 2013-01-28 15:26:45.559 (ESshFatal) 
</code></pre>
","<p>I faced the same issue, finding around and I solved by run these commands on destination server:</p>

<pre><code>chmod 700 .ssh
chmod 600 .ssh/authorized_keys
chown $USER:$USER .ssh -R
</code></pre>
","12552","<ssh><putty><private-key><winscp>","3","1","3","2019-03-28 06:26:59","","0","1","850848","","2013-12-27 11:06:51","2013-01-28 21:52:35",""
"1306662","Loading my private key for use in git on Mac","<p>I'm trying to use git on a Mac (I'm a Mac newbie.) I obviously have to load my private key. On my Windows machine I just use pageant and msysgit. How do I load my private key into git on the Mac?</p>
","<p>Git has a good article on creating and using your private keys here:</p>

<p><a href=""http://github.com/guides/providing-your-ssh-key"" rel=""noreferrer"">http://github.com/guides/providing-your-ssh-key</a></p>
","12174","<git><macos><private-key>","3","5","3","2014-09-25 05:54:16","","0","","","","","2009-08-20 14:41:32",""
"1306662","Loading my private key for use in git on Mac","<p>I'm trying to use git on a Mac (I'm a Mac newbie.) I obviously have to load my private key. On my Windows machine I just use pageant and msysgit. How do I load my private key into git on the Mac?</p>
","<p>I'd say just create a new key. If you're posting to github it's no big deal to push two public keys up, and same for putting it up on another server - it's just another entry in ~/.ssh/authorized_keys.</p>

<p>The github guide localshred pointed to should have all the directions you'd need.</p>
","12174","<git><macos><private-key>","3","0","3","2014-09-25 05:54:16","","0","","","","","2009-08-20 14:41:32",""
"1306662","Loading my private key for use in git on Mac","<p>I'm trying to use git on a Mac (I'm a Mac newbie.) I obviously have to load my private key. On my Windows machine I just use pageant and msysgit. How do I load my private key into git on the Mac?</p>
","<p>If you open the key with <code>PuTTY Key Generator</code>, you can export your key in the OpenSSH format.  Just copy that to your mac and put it as a file named <code>id_rsa</code> in your <code>~/.ssh</code> directory (which you'll have to create if you haven't run ssh-keygen).</p>

<p><img src=""https://i.stack.imgur.com/OShD3.png"" alt=""Export OpenSSH key""></p>

<p>If it's not too much trouble though you can just use <code>ssh-keygen</code> to create a new key pair and add the new <code>id_rsa.pub</code> public key to the account you're accessing.  Most online git repositories and ssh hosts (like Winsshd) allow you to link multiple keys to an account.</p>
","12174","<git><macos><private-key>","3","1","3","2014-09-25 05:54:16","","0","","","","","2009-08-20 14:41:32",""
"7669598","How to implement OpenSSL functionality in Python?","<p>I would like to encrypt a secret text by public-key and decrypt it by private-key in Python.
I can achieve that with the <code>openssl</code> command:</p>

<pre class=""lang-sh prettyprint-override""><code>echo ""secrettext/2011/09/14 22:57:23"" | openssl rsautl -encrypt -pubin -inkey public.pem | base64  data.cry
base64 -D data.cry | openssl rsautl -decrypt -inkey private.pem
</code></pre>

<p>How would one implement that in Python?</p>
","<p>The <a href=""http://chandlerproject.org/bin/view/Projects/MeTooCrypto"" rel=""nofollow"">m2crypto</a> module(s) expose much of OpenSSL's functionality to Python, including public/private encryption, decryption, and signing.</p>

<p>Most Linux distribution provide the m2crypto module as a native package.</p>
","11874","<python><openssl><public-key-encryption><private-key>","13","1","3","2016-11-12 21:24:11","","0","6","200291","","2011-10-06 01:56:43","2011-10-06 01:48:33",""
"7669598","How to implement OpenSSL functionality in Python?","<p>I would like to encrypt a secret text by public-key and decrypt it by private-key in Python.
I can achieve that with the <code>openssl</code> command:</p>

<pre class=""lang-sh prettyprint-override""><code>echo ""secrettext/2011/09/14 22:57:23"" | openssl rsautl -encrypt -pubin -inkey public.pem | base64  data.cry
base64 -D data.cry | openssl rsautl -decrypt -inkey private.pem
</code></pre>

<p>How would one implement that in Python?</p>
","<h3>Encrypt</h3>

<pre><code>#!/usr/bin/env python
import fileinput
from M2Crypto import RSA

rsa = RSA.load_pub_key(""public.pem"")
ctxt = rsa.public_encrypt(fileinput.input().read(), RSA.pkcs1_oaep_padding)
print ctxt.encode('base64')
</code></pre>

<h3>Decrypt</h3>

<pre><code>#!/usr/bin/env python
import fileinput
from M2Crypto import RSA

priv = RSA.load_key(""private.pem"")
ctxt = fileinput.input().read().decode('base64')
print priv.private_decrypt(ctxt, RSA.pkcs1_oaep_padding)
</code></pre>

<h3>Dependencies:</h3>

<ul>
<li><a href=""https://pypi.python.org/pypi/M2Crypto"" rel=""nofollow noreferrer"">M2Crypto</a> (seems to be Python 2 only)</li>
</ul>

<p>See also <a href=""https://stackoverflow.com/questions/1320671/how-to-encrypt-a-string-using-the-key/1480597#1480597"">How to encrypt a string using the key</a> and <a href=""https://stackoverflow.com/questions/7563732/what-is-the-best-way-to-encode-string-by-public-key-in-python"">What is the best way to encode string by public-key in python</a>.</p>
","11874","<python><openssl><public-key-encryption><private-key>","13","20","3","2016-11-12 21:24:11","","0","6","200291","","2011-10-06 01:56:43","2011-10-06 01:48:33",""
"7669598","How to implement OpenSSL functionality in Python?","<p>I would like to encrypt a secret text by public-key and decrypt it by private-key in Python.
I can achieve that with the <code>openssl</code> command:</p>

<pre class=""lang-sh prettyprint-override""><code>echo ""secrettext/2011/09/14 22:57:23"" | openssl rsautl -encrypt -pubin -inkey public.pem | base64  data.cry
base64 -D data.cry | openssl rsautl -decrypt -inkey private.pem
</code></pre>

<p>How would one implement that in Python?</p>
","<p>Probably the easiest way to get exactly the same behaviour would be using <a href=""https://launchpad.net/pyopenssl"" rel=""nofollow"">pyOpenSSL</a> - it's a thin Python wrapper for OpenSSL itself.</p>
","11874","<python><openssl><public-key-encryption><private-key>","13","3","3","2016-11-12 21:24:11","","0","6","200291","","2011-10-06 01:56:43","2011-10-06 01:48:33",""
"26042410","How to store key using Android Key Store Provider","<p>I am trying to use the Android Key Store Provider that became available in Android 4.3 to securely save a Private Key and to then use this private key to encrypt and decode data.</p>

<p>I think I have implemented the correct approach and code for this so far however I am currently facing an odd issue that I cannot figure out.</p>

<p>I have a class called KeyStorage that I use to create the Key pair, load the KeyStore and retrieve the private key, the code for this class is as follows:</p>

<pre><code>public class KeyStorage {

public static final String ANDROID_KEYSTORE = ""AndroidKeyStore"";
private KeyStore keyStore;

public void loadKeyStore() {
    try {
        keyStore = KeyStore.getInstance(ANDROID_KEYSTORE);
        keyStore.load(null);
        Enumeration&lt;String&gt; aliases = keyStore.aliases();
        while(aliases.hasMoreElements())
            Log.e(""E"", ""Aliases = "" + aliases.nextElement());
    } catch (Exception e) {
        // TODO: Handle this appropriately in your app
        e.printStackTrace();
    }
}

public void generateNewKeyPair(String alias, Context context)
        throws Exception {

    Calendar start = Calendar.getInstance();
    Calendar end = Calendar.getInstance();
    // expires 1 year from today
    end.add(1, Calendar.YEAR);

    KeyPairGeneratorSpec spec = new KeyPairGeneratorSpec.Builder(context)
            .setAlias(alias)
            .setSubject(new X500Principal(""CN="" + alias))
            .setSerialNumber(BigInteger.TEN)
            .setStartDate(start.getTime())
            .setEndDate(end.getTime())
            .build();

    // use the Android keystore
    KeyPairGenerator gen = KeyPairGenerator.getInstance(""RSA"", ANDROID_KEYSTORE);
    gen.initialize(spec);

    // generates the keypair
    gen.generateKeyPair();
}

public PrivateKey loadPrivteKey(String alias) throws Exception {

    if (keyStore.isKeyEntry(alias)) {
        Log.e(""E"", ""Could not find key alias: "" + alias);
        return null;
    }

    KeyStore.Entry entry = keyStore.getEntry(EnhancedCredentialStore.KEY_ALIAS, null);

    if (!(entry instanceof KeyStore.PrivateKeyEntry)) {
        Log.e(""E"", "" alias: "" + alias + "" is not a PrivateKey"");
        return null;
    }

    return ((KeyStore.PrivateKeyEntry) entry).getPrivateKey();
}
</code></pre>

<p>I then have a class called CredentialStore that I try to use this in. I create an alias called ""MySecureKey"" and try to create and store a private key based on this. So as you can see I try to create the new Key pair based on the Alias load the keystore and then finally retrieve the Private key. However it doesn't work.</p>

<pre><code>public class CredentialStore {

public static final String KEY_ALIAS  = ""MySecureKey"";

private KeyStorage KeyStorage;

public CredentialStore(Activity context){

    keyStorage = new KeyStorage();
    try {
        keyStorage.generateNewKeyPair(KEY_ALIAS, context);
    } catch (Exception e) {
        e.printStackTrace();
    }
    blueBirdKeyStorage.loadKeyStore();

    try {
        keyStorage.loadPrivteKey(KEY_ALIAS);
    } catch (Exception e) {
        e.printStackTrace();
    }

}
</code></pre>

<p>I get the logs as follow:</p>

<pre><code>Aliases = MySecureKey
Could not find key alias: MySecureKey
</code></pre>

<p>So when I check the aliases in the loadKeyStore method it looks like it is there as it is coming back in the log. However when I try to call it using the loadKeyStore method I get the log saying it can not find the key ""MySecureKey"".</p>

<p>I cannot find any reason for this and researching online has proven unfruitful so I was wondering if anyone has any idea what might be going wrong?</p>
","<p>Why is it blueBirdKeyStore in:</p>

<pre><code>blueBirdKeyStorage.loadKeyStore();
</code></pre>

<p>Shouldn't it be:</p>

<pre><code>keyStorage.loadKeyStore();
</code></pre>

<p>Also, you haven't used the 'alias' in your loadPrivateKey():</p>

<pre><code>KeyStore.Entry entry = keyStore.getEntry(EnhancedCredentialStore.KEY_ALIAS, null);
</code></pre>

<p>Now, I'm not sure, but shouldn't you be using the 'alias' in this?</p>
","11641","<android><encryption><private-key><android-keystore>","8","1","3","2016-10-08 19:13:13","","2","3","","","","2014-09-25 15:28:58",""
"26042410","How to store key using Android Key Store Provider","<p>I am trying to use the Android Key Store Provider that became available in Android 4.3 to securely save a Private Key and to then use this private key to encrypt and decode data.</p>

<p>I think I have implemented the correct approach and code for this so far however I am currently facing an odd issue that I cannot figure out.</p>

<p>I have a class called KeyStorage that I use to create the Key pair, load the KeyStore and retrieve the private key, the code for this class is as follows:</p>

<pre><code>public class KeyStorage {

public static final String ANDROID_KEYSTORE = ""AndroidKeyStore"";
private KeyStore keyStore;

public void loadKeyStore() {
    try {
        keyStore = KeyStore.getInstance(ANDROID_KEYSTORE);
        keyStore.load(null);
        Enumeration&lt;String&gt; aliases = keyStore.aliases();
        while(aliases.hasMoreElements())
            Log.e(""E"", ""Aliases = "" + aliases.nextElement());
    } catch (Exception e) {
        // TODO: Handle this appropriately in your app
        e.printStackTrace();
    }
}

public void generateNewKeyPair(String alias, Context context)
        throws Exception {

    Calendar start = Calendar.getInstance();
    Calendar end = Calendar.getInstance();
    // expires 1 year from today
    end.add(1, Calendar.YEAR);

    KeyPairGeneratorSpec spec = new KeyPairGeneratorSpec.Builder(context)
            .setAlias(alias)
            .setSubject(new X500Principal(""CN="" + alias))
            .setSerialNumber(BigInteger.TEN)
            .setStartDate(start.getTime())
            .setEndDate(end.getTime())
            .build();

    // use the Android keystore
    KeyPairGenerator gen = KeyPairGenerator.getInstance(""RSA"", ANDROID_KEYSTORE);
    gen.initialize(spec);

    // generates the keypair
    gen.generateKeyPair();
}

public PrivateKey loadPrivteKey(String alias) throws Exception {

    if (keyStore.isKeyEntry(alias)) {
        Log.e(""E"", ""Could not find key alias: "" + alias);
        return null;
    }

    KeyStore.Entry entry = keyStore.getEntry(EnhancedCredentialStore.KEY_ALIAS, null);

    if (!(entry instanceof KeyStore.PrivateKeyEntry)) {
        Log.e(""E"", "" alias: "" + alias + "" is not a PrivateKey"");
        return null;
    }

    return ((KeyStore.PrivateKeyEntry) entry).getPrivateKey();
}
</code></pre>

<p>I then have a class called CredentialStore that I try to use this in. I create an alias called ""MySecureKey"" and try to create and store a private key based on this. So as you can see I try to create the new Key pair based on the Alias load the keystore and then finally retrieve the Private key. However it doesn't work.</p>

<pre><code>public class CredentialStore {

public static final String KEY_ALIAS  = ""MySecureKey"";

private KeyStorage KeyStorage;

public CredentialStore(Activity context){

    keyStorage = new KeyStorage();
    try {
        keyStorage.generateNewKeyPair(KEY_ALIAS, context);
    } catch (Exception e) {
        e.printStackTrace();
    }
    blueBirdKeyStorage.loadKeyStore();

    try {
        keyStorage.loadPrivteKey(KEY_ALIAS);
    } catch (Exception e) {
        e.printStackTrace();
    }

}
</code></pre>

<p>I get the logs as follow:</p>

<pre><code>Aliases = MySecureKey
Could not find key alias: MySecureKey
</code></pre>

<p>So when I check the aliases in the loadKeyStore method it looks like it is there as it is coming back in the log. However when I try to call it using the loadKeyStore method I get the log saying it can not find the key ""MySecureKey"".</p>

<p>I cannot find any reason for this and researching online has proven unfruitful so I was wondering if anyone has any idea what might be going wrong?</p>
","<p>loadPrivateKey in your class does not use the ""alias"" to retrieve the key. It's using another class's constant so I'm not sure what's you're expecting here.</p>
","11641","<android><encryption><private-key><android-keystore>","8","0","3","2016-10-08 19:13:13","","2","3","","","","2014-09-25 15:28:58",""
"26042410","How to store key using Android Key Store Provider","<p>I am trying to use the Android Key Store Provider that became available in Android 4.3 to securely save a Private Key and to then use this private key to encrypt and decode data.</p>

<p>I think I have implemented the correct approach and code for this so far however I am currently facing an odd issue that I cannot figure out.</p>

<p>I have a class called KeyStorage that I use to create the Key pair, load the KeyStore and retrieve the private key, the code for this class is as follows:</p>

<pre><code>public class KeyStorage {

public static final String ANDROID_KEYSTORE = ""AndroidKeyStore"";
private KeyStore keyStore;

public void loadKeyStore() {
    try {
        keyStore = KeyStore.getInstance(ANDROID_KEYSTORE);
        keyStore.load(null);
        Enumeration&lt;String&gt; aliases = keyStore.aliases();
        while(aliases.hasMoreElements())
            Log.e(""E"", ""Aliases = "" + aliases.nextElement());
    } catch (Exception e) {
        // TODO: Handle this appropriately in your app
        e.printStackTrace();
    }
}

public void generateNewKeyPair(String alias, Context context)
        throws Exception {

    Calendar start = Calendar.getInstance();
    Calendar end = Calendar.getInstance();
    // expires 1 year from today
    end.add(1, Calendar.YEAR);

    KeyPairGeneratorSpec spec = new KeyPairGeneratorSpec.Builder(context)
            .setAlias(alias)
            .setSubject(new X500Principal(""CN="" + alias))
            .setSerialNumber(BigInteger.TEN)
            .setStartDate(start.getTime())
            .setEndDate(end.getTime())
            .build();

    // use the Android keystore
    KeyPairGenerator gen = KeyPairGenerator.getInstance(""RSA"", ANDROID_KEYSTORE);
    gen.initialize(spec);

    // generates the keypair
    gen.generateKeyPair();
}

public PrivateKey loadPrivteKey(String alias) throws Exception {

    if (keyStore.isKeyEntry(alias)) {
        Log.e(""E"", ""Could not find key alias: "" + alias);
        return null;
    }

    KeyStore.Entry entry = keyStore.getEntry(EnhancedCredentialStore.KEY_ALIAS, null);

    if (!(entry instanceof KeyStore.PrivateKeyEntry)) {
        Log.e(""E"", "" alias: "" + alias + "" is not a PrivateKey"");
        return null;
    }

    return ((KeyStore.PrivateKeyEntry) entry).getPrivateKey();
}
</code></pre>

<p>I then have a class called CredentialStore that I try to use this in. I create an alias called ""MySecureKey"" and try to create and store a private key based on this. So as you can see I try to create the new Key pair based on the Alias load the keystore and then finally retrieve the Private key. However it doesn't work.</p>

<pre><code>public class CredentialStore {

public static final String KEY_ALIAS  = ""MySecureKey"";

private KeyStorage KeyStorage;

public CredentialStore(Activity context){

    keyStorage = new KeyStorage();
    try {
        keyStorage.generateNewKeyPair(KEY_ALIAS, context);
    } catch (Exception e) {
        e.printStackTrace();
    }
    blueBirdKeyStorage.loadKeyStore();

    try {
        keyStorage.loadPrivteKey(KEY_ALIAS);
    } catch (Exception e) {
        e.printStackTrace();
    }

}
</code></pre>

<p>I get the logs as follow:</p>

<pre><code>Aliases = MySecureKey
Could not find key alias: MySecureKey
</code></pre>

<p>So when I check the aliases in the loadKeyStore method it looks like it is there as it is coming back in the log. However when I try to call it using the loadKeyStore method I get the log saying it can not find the key ""MySecureKey"".</p>

<p>I cannot find any reason for this and researching online has proven unfruitful so I was wondering if anyone has any idea what might be going wrong?</p>
","<p>Your method to check if your key exists is flawed:</p>

<pre><code>if (keyStore.isKeyEntry(alias)) {
    Log.e(""E"", ""Could not find key alias: "" + alias);
    return null;
}
</code></pre>

<p>According to the javadoc <a href=""https://developer.android.com/reference/java/security/KeyStore.html#isKeyEntry(java.lang.String)"" rel=""nofollow""><code>.isKeyEntry()</code></a> has the following behavior</p>

<blockquote>
  <p>Returns true if the entry identified by the given alias was created by
  a call to setKeyEntry, or created by a call to setEntry with a
  PrivateKeyEntry or a SecretKeyEntry.</p>
</blockquote>

<p>but your key was not created through <code>setEntry()</code>. I guess if you just load the key with </p>

<pre><code>KeyStore.Entry entry = ks.getEntry(alias, null);
</code></pre>

<p>it won't be null.</p>

<p><a href=""https://gist.github.com/alphamu/cf44b2783fb2fd81cc53aca91276d481"" rel=""nofollow"">Here is a full example with simple methods on how to use the Android Keystore with pre-M and M Apis.</a></p>
","11641","<android><encryption><private-key><android-keystore>","8","1","3","2016-10-08 19:13:13","","2","3","","","","2014-09-25 15:28:58",""
"14309894","Javascript RSA decryption using private key","<p>Hello I have this script that I set in Javascript :</p>

<pre><code>&lt;!DOCTYPE html&gt;
    &lt;html lang=""en""&gt;
            &lt;head&gt;
            &lt;script src=""jquery-1.7.2.min.js"" type=""text/javascript""&gt;&lt;/script&gt;
            &lt;script language=""JavaScript"" type=""text/javascript"" src=""jsbn.js""&gt;&lt;/script&gt;
            &lt;script language=""JavaScript"" type=""text/javascript"" src=""rsa.js""&gt;&lt;/script&gt;
            &lt;script language=""JavaScript""&gt;

                function encryptData(){
                    var pem =""-----BEGIN PUBLIC KEY-----\
                    MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC+tii3IwzHa4i142kAB0dRVXoXA2Q8oF48UgMA\
                    AV54+JDED5iVyJK1s7J/xGi4U3+9sRoraE7bS19Nihs5DuYa0gsbKs/5jXOtKiw94fAtMyJTcX0d\
                    SzZhJKcX9vEzI27Hdu1rNFY64Ixz3KjrG1N/pXHtwjE1Ira5XZdTezx0wwIDAQAB\
                    -----END PUBLIC KEY-----"";
                    var key = RSA.getPublicKey(pem);
                    var message = ""some text to RSA encrypt"";
                    var encryptedMessage = RSA.encrypt(message, key);
                    $('#RSAMessageEncrypted').html(encryptedMessage);
                }
            &lt;/script&gt;
            &lt;/head&gt;
        &lt;body onload=encryptData();&gt;
        &lt;form&gt;
            &lt;strong&gt;RSA encrypted Message :&lt;/strong&gt; &lt;textarea rows=""10"" cols=""100""   id=""RSAMessageEncrypted""&gt;&lt;/textarea&gt;&lt;br&gt;
        &lt;/form&gt; 
        &lt;/body&gt;
    &lt;/html&gt;
</code></pre>

<p>My text area is filled with my message encrypted in RSA using the public key above.</p>

<p>The encrypted message is :</p>

<pre><code>oH1JVWIT7MOH4ObCjFlBuFcAUvooSZANMokFy5jApSi8n0ABVc9vwXP2EFl2x5+UColU6s2VAU+RsZPV4ZgZu3+GhN9pDUb1ZMVyYRECDy/7h+mE+UdDZTPwP1TAcBrspL/XM6+q6mJfUWbEKfR/2vyNUhBxpt6QOhVaI29aHfU=
</code></pre>

<p>My question is as following: How can I decrypt my message using the private key pair that this public key was derived from? Is there any library for decryption?</p>

<p>My private key is :</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
MIICXQIBAAKBgQC+tii3IwzHa4i142kAB0dRVXoXA2Q8oF48UgMAAV54+JDED5iVyJK1s7J/xGi4
U3+9sRoraE7bS19Nihs5DuYa0gsbKs/5jXOtKiw94fAtMyJTcX0dSzZhJKcX9vEzI27Hdu1rNFY6
4Ixz3KjrG1N/pXHtwjE1Ira5XZdTezx0wwIDAQABAoGBAJY4Gd4XZ6t1Epxi4oQ5N33jXGXgMAZp
M5FD8EUCzw1ujWlB96iT8qvZPdLSPMJkUwxyAfELGoI13n3POR46lBhRpYKkTZm1UmEBscdO2B9w
B7YUM9caJG4TgWBKxD8KLriQANnXZrv9zNGx4Cs0USeQgWuDfgkBF+PvL5AVq+jRAkEA+O0MNvBM
kGtGCLt/V34jiivGs9HtXKSJY6vI60GYZYB7D3SniYVUsMocC+O3vyqdpMiO/szfLTAWdXB2yl3Q
VwJBAMQhmQkT57rJ07SS40t1HGonryrmGF3BcHw9sVCijZF/jrbKeL5XmhnbCr9Lhy/InepcSRFI
Pqzj32w0timLi3UCQCVsliKIXCp2RlA3yDxiNXunezc7v4DnJ9S5VfqwoPXZrCa1th6B0irGKBNN
iCmQgaTtljoOmRsVGLtNTj68ff8CQGeiLR/b0bUkEeY3OzzS27nH0EoFnNhlbw9m9btauR0pXnp9
j8FbvoRs9kfQG9WG1tJQAxfLqbpnCdY+IAbhwkUCQQDOIrm78sSuVL+U6f98P2eDSzhKgnepEEVJ
u5iBs3lT5T+p+Xov6DPLd13Pm7Lyppj8S7pW/1CwkTVwW+U3O2kj
-----END RSA PRIVATE KEY-----
</code></pre>
","<p>First of all, I hope that's not the RSA private key that you are going to use in production.</p>

<p>As regards to doing the encryption/decryption on JavaScript side, there are various libraries such as <a href=""http://www-cs-students.stanford.edu/~tjw/jsbn/"">Standford's JSBN RSA Encryption library</a> and <a href=""http://www.ohdave.com/rsa/"">ohdave.com's RSA in JavaScript utility</a> for doing simple encryption/decryption, but your main concern with these tools and even your architecture is performance. I would not do RSA encryption with JavaScript unless it was absolutely necessary and there were no other workarounds. </p>
","11309","<javascript><rsa><public-key-encryption><encryption><private-key>","1","6","1","2015-05-12 11:30:40","","3","1","","","","2013-01-14 00:27:09",""
"9981099","Are exported private keys in GPG still encrypted?","<p>Are the exported private keys gotten by executing <code>gpg --export-secret-keys</code> still encrypted and protected by their passphrase? This seems to be the case but I can't find anywhere that explicitly confirms this.</p>

<p>If the exported keys are still encrypted then is there anyway to get the pure, unencrypted private key (like you can for the public segment)?</p>
","<p>Are exported secret keys still protected by their passphrase? You could find the answer to this so easily by exporting and then importing a secret key.</p>

<p>GnuPG has no simple way to export a private key in the way you describe. I can only hope you have a good reason for wanting to do this, and that you're aware of how dangerous it is to let the bits and bytes of an unprotected private key touch a disk. That said, the only option I see is to remove the passphrase before exporting...</p>

<pre><code>gpg --edit-key KEYID
&gt; passwd
&gt; *(Press Enter twice, i.e., use a blank passphrase)*
&gt; save
</code></pre>

<p>PS: This should be moved to <a href=""https://superuser.com/"">Superuser</a>; it's off-topic here.</p>
","11249","<export><private-key><gnupg>","35","8","2","2014-07-22 19:27:21","","2","7","","","","2012-04-02 17:42:30",""
"9981099","Are exported private keys in GPG still encrypted?","<p>Are the exported private keys gotten by executing <code>gpg --export-secret-keys</code> still encrypted and protected by their passphrase? This seems to be the case but I can't find anywhere that explicitly confirms this.</p>

<p>If the exported keys are still encrypted then is there anyway to get the pure, unencrypted private key (like you can for the public segment)?</p>
","<p>Exported secret keys are encrypted by default, however <code>--export-options export-reset-subkey-passwd</code> will produce an unprotected export:</p>

<blockquote>
  <p>When  using  the  --export-secret-subkeys  command,  this option resets the passphrases for all exported subkeys to empty.  This  is useful when the exported subkey is to be used on an unattended machine where a passphrase  doesn't necessarily make sense. Defaults to no.</p>
</blockquote>
","11249","<export><private-key><gnupg>","35","21","2","2014-07-22 19:27:21","","2","7","","","","2012-04-02 17:42:30",""
"28690986","Code signing with signtool fails due to private key filter","<p>While trying to sign some installer created by the company I am working for I encountered an error, which I have not been able to solve. I am using the same certificate which has been used on another machine (Win7) successfully in the same way for signing quasi the same installer. Anyway, on our Windows Server 2008 which is running CruiseControl.net I tried to sign an installer with signtool.exe and it fails with the following error:</p>

<pre><code>The following certificates were considered:
    Issued to: &lt;our company&gt;
    Issued by: &lt;some ca&gt;
    Expires:   &lt;is valid&gt;
    SHA1 hash: &lt;...&gt;

    Issued to: &lt;...&gt;
    Issued by: &lt;...&gt;
    Expires:   &lt;...&gt;
    SHA1 hash: &lt;...&gt;

After EKU filter, 1 certs were left.
After expiry filter, 1 certs were left.
After Subject Name filter, 1 certs were left.
After Private Key filter, 0 certs were left.
SignTool Error: No certificates were found that met all the given criteria.
</code></pre>

<p>I tried installing the certificate to different certificate stores, tried different versions of signtool.exe and tried to use the .cer file directly, but it made no difference. I am receiving the error mentioned above in all of the cases. I tried the following command line commands</p>

<pre><code>signtool.exe sign /debug /n ""MyCompany"" C:\my\installer.exe
signtool.exe sign /debug /f C:\path\to\my\certificate.cer C:\my\installer.exe
</code></pre>

<p>but I left the /debug away in some cases. Is there anything I am doing wrong or missing?</p>
","<p>In order to sign a file you need to have the certificate's private key, which is not included in the *.cer file you copied from the Windows 7 machine. To export the certificate with its private key you can follow the <a href=""https://technet.microsoft.com/en-us/library/cc754329(v=ws.11).aspx"" rel=""nofollow noreferrer"">instructions supplied here</a>.</p>

<p>Do note that you'll only be able to export the private key if the certificate was set to allow exporting it when it was created (by passing <code>-pe</code> to <code>makecert</code>)</p>
","10935","<windows><certificate><code-signing><private-key><signtool>","14","5","5","2019-08-19 14:11:13","28697700","1","4","389966","","2015-02-24 13:32:03","2015-02-24 08:19:14",""
"28690986","Code signing with signtool fails due to private key filter","<p>While trying to sign some installer created by the company I am working for I encountered an error, which I have not been able to solve. I am using the same certificate which has been used on another machine (Win7) successfully in the same way for signing quasi the same installer. Anyway, on our Windows Server 2008 which is running CruiseControl.net I tried to sign an installer with signtool.exe and it fails with the following error:</p>

<pre><code>The following certificates were considered:
    Issued to: &lt;our company&gt;
    Issued by: &lt;some ca&gt;
    Expires:   &lt;is valid&gt;
    SHA1 hash: &lt;...&gt;

    Issued to: &lt;...&gt;
    Issued by: &lt;...&gt;
    Expires:   &lt;...&gt;
    SHA1 hash: &lt;...&gt;

After EKU filter, 1 certs were left.
After expiry filter, 1 certs were left.
After Subject Name filter, 1 certs were left.
After Private Key filter, 0 certs were left.
SignTool Error: No certificates were found that met all the given criteria.
</code></pre>

<p>I tried installing the certificate to different certificate stores, tried different versions of signtool.exe and tried to use the .cer file directly, but it made no difference. I am receiving the error mentioned above in all of the cases. I tried the following command line commands</p>

<pre><code>signtool.exe sign /debug /n ""MyCompany"" C:\my\installer.exe
signtool.exe sign /debug /f C:\path\to\my\certificate.cer C:\my\installer.exe
</code></pre>

<p>but I left the /debug away in some cases. Is there anything I am doing wrong or missing?</p>
","<p>I had the <strong>same symptom</strong>, but an altogether <strong>different cause</strong>. As many developers do, I have a bunch of different tool chains installed on my system. I just surveyed them to show how this can look; scroll to the bottom of this answer for the full list.</p>

<p>I had installed my code-signing certificate from VeriSign to the system certificate store (requires <code>/sm</code> with <code>signtool.exe</code>) as usual, using <code>certutil -importPFX cert.pfx</code> from an elevated command prompt.</p>

<p>First tests looked promising, but then suddenly the signing started to fail.</p>

<p>To debug the issue I first started using <code>signtool.exe sign /debug /v /a /sm ...</code> in order to see what goes wrong. The output looked like this (also see question):</p>

<pre><code>The following certificates were considered:
    Issued to: localhost
    Issued by: localhost
    Expires:   Tue Dec 26 00:00:00 2017
    SHA1 hash: &lt;...&gt;

    Issued to: &lt;...&gt;
    Issued by: Symantec Class 3 SHA256 Code Signing CA
    Expires:   &lt;...&gt;
    SHA1 hash: &lt;...&gt;

After EKU filter, 1 certs were left.
After expiry filter, 1 certs were left.
After Root Name filter, 1 certs were left.
After Private Key filter, 0 certs were left.
SignTool Error: No certificates were found that met all the given criteria.
</code></pre>

<p>I could rule out the missing private key, as the certificate store indicated clearly <strong>I have a <em>matching</em> private key</strong>:</p>

<p><img src=""https://i.stack.imgur.com/6k6NT.png"" alt=""Property dialog for certificate""></p>

<p>Now I remember that there were <a href=""https://technet.microsoft.com/en-us/library/security/3033929"" rel=""noreferrer"">some recent patches</a> that allow Windows 7 to accept signatures made with a certificate that has a SHA256 hash. Although, of course, most older articles will state that Windows 7 cannot handle SHA-2 hashes at all.</p>

<p>So this already gave me a nudge into the direction of ""it's got to be an old version of something involved in signing"".</p>

<p>I <em>still</em> decided to remove the certificate plus key and reimport it using the invocation shown before.</p>

<p>Then, after surveying my system (see at the bottom of the answer), I found a whopping <strong>five</strong> different versions of <code>signtool.exe</code>. So I started by trying the newest one (6.3.9600.17298, from the Windows 8.1 SDK) and <strong>it worked immediately</strong>:</p>

<pre><code>signtool.exe sign /debug /v /a /sm /r VeriSign /ac MSCV-VSClass3.cer /ph  /t ""http://timestamp.verisign.com/scripts/timstamp.dll"" *.exe

The following certificates were considered:
    Issued to: localhost
    Issued by: localhost
    Expires:   Tue Dec 26 00:00:00 2017
    SHA1 hash: &lt;...&gt;

    Issued to: &lt;...&gt;
    Issued by: Symantec Class 3 SHA256 Code Signing CA
    Expires:   &lt;...&gt;
    SHA1 hash: &lt;...&gt;

After EKU filter, 1 certs were left.
After expiry filter, 1 certs were left.
After Root Name filter, 1 certs were left.
After Private Key filter, 1 certs were left.
The following certificate was selected:
    Issued to: &lt;...&gt;
    Issued by: Symantec Class 3 SHA256 Code Signing CA
    Expires:   &lt;...&gt;
    SHA1 hash: &lt;...&gt;

Cross certificate chain (using machine store):
    Issued to: Microsoft Code Verification Root
    Issued by: Microsoft Code Verification Root
    Expires:   Sat Nov 01 13:54:03 2025
    SHA1 hash: 8FBE4D070EF8AB1BCCAF2A9D5CCAE7282A2C66B3

        Issued to: VeriSign Class 3 Public Primary Certification Authority - G5
        Issued by: Microsoft Code Verification Root
        Expires:   Mon Feb 22 19:35:17 2021
        SHA1 hash: 57534CCC33914C41F70E2CBB2103A1DB18817D8B

            Issued to: Symantec Class 3 SHA256 Code Signing CA
            Issued by: VeriSign Class 3 Public Primary Certification Authority - G5
            Expires:   Sat Dec 09 23:59:59 2023
            SHA1 hash: 007790F6561DAD89B0BCD85585762495E358F8A5

                Issued to: &lt;...&gt;
                Issued by: Symantec Class 3 SHA256 Code Signing CA
                Expires:   &lt;...&gt;
                SHA1 hash: &lt;...&gt;


The following additional certificates will be attached:
    Issued to: VeriSign Class 3 Public Primary Certification Authority - G5
    Issued by: Microsoft Code Verification Root
    Expires:   Mon Feb 22 19:35:17 2021
    SHA1 hash: 57534CCC33914C41F70E2CBB2103A1DB18817D8B

    Issued to: Symantec Class 3 SHA256 Code Signing CA
    Issued by: VeriSign Class 3 Public Primary Certification Authority - G5
    Expires:   Sat Dec 09 23:59:59 2023
    SHA1 hash: 007790F6561DAD89B0BCD85585762495E358F8A5

Done Adding Additional Store
Successfully signed: &lt;...&gt;.exe

Number of files successfully Signed: 1
Number of warnings: 0
Number of errors: 0
</code></pre>

<p>Tracking this down further I thought I had found the issue. However, it turned out that the error I got is not what I would have gotten to see with the older <code>signtool.exe</code> versions. Instead older versions would have complained about <code>/ac</code>, <code>/fd</code> and <code>/ph</code> being unrecognized command line options, respectively.</p>

<p>So I needed to dig a little deeper and it turned out that my (alternative) file manager was the culprit. I usually start my command prompts in the respective folder using that file manager and a handy keyboard shortcut. It turns out that it sometimes does not pass the environment variables - essentially the file manager ""forgets"" the environment variables. This turned out to be the root cause. A command prompt opened using <kbd>Win</kbd>+<kbd>R</kbd> and then <code>cmd</code> <kbd>Enter</kbd> would not expose this behavior despite executing <code>signtool.exe</code> from the same folder.</p>

<p>My best guess from this is that due to a messed up <code>PATH</code> variable or similar, <code>signtool.exe</code> ended up picking the wrong DLL. Notably <code>mssign32.dll</code> and <code>wintrust.dll</code> <strong>accompany <code>signtool.exe</code> in the same folder for the Windows SDK 8.0 and 8.1</strong>, but not for any of the earlier versions of <code>signtool.exe</code> which will pick the ""global"" system-wide DLLs, whatever they turn out to be.</p>

<hr>

<p>On my system I had <strong>five</strong> different versions of <code>signtool.exe</code>.</p>

<h3>signtool.exe 5.2.3790.1830</h3>

<p>Doesn't even understand the <code>/ac</code> and <code>/ph</code> arguments I was using (also not <code>/fd</code>). But strangely enough worked without those two arguments.</p>

<ul>
<li><code>C:\Program Files (x86)\Microsoft Visual Studio 8\SDK\v2.0\Bin\signtool.exe</code></li>
</ul>

<h3>signtool.exe 6.0.4002.0</h3>

<p>Doesn't even understand the <code>/ac</code> and <code>/ph</code> arguments I was using (also not <code>/fd</code>). But strangely enough worked without those two arguments.</p>

<ul>
<li><code>C:\Program Files (x86)\Microsoft Visual Studio 8\Common7\Tools\Bin\signtool.exe</code></li>
</ul>

<h3>signtool.exe 6.1.7600.16385</h3>

<p>First version to understand <code>/fd sha256</code>.</p>

<ul>
<li><code>C:\WINDDK\7600.16385.1\bin\amd64\SignTool.exe</code></li>
<li><code>C:\WINDDK\7600.16385.1\bin\x86\SignTool.exe</code></li>
<li><code>C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\signtool.exe</code></li>
<li><code>C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\Bin\signtool.exe</code></li>
<li><code>C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1A\Bin\signtool.exe</code></li>
</ul>

<h3>signtool.exe 6.2.9200.20789</h3>

<ul>
<li><code>C:\Program Files (x86)\Windows Kits\8.0\bin\x64\signtool.exe</code></li>
<li><code>C:\Program Files (x86)\Windows Kits\8.0\bin\x86\signtool.exe</code></li>
</ul>

<h3>signtool.exe 6.3.9600.17298</h3>

<ul>
<li><code>C:\Program Files (x86)\Windows Kits\8.1\bin\arm\signtool.exe</code></li>
<li><code>C:\Program Files (x86)\Windows Kits\8.1\bin\x64\signtool.exe</code></li>
<li><code>C:\Program Files (x86)\Windows Kits\8.1\bin\x86\signtool.exe</code></li>
</ul>
","10935","<windows><certificate><code-signing><private-key><signtool>","14","16","5","2019-08-19 14:11:13","28697700","1","4","389966","","2015-02-24 13:32:03","2015-02-24 08:19:14",""
"28690986","Code signing with signtool fails due to private key filter","<p>While trying to sign some installer created by the company I am working for I encountered an error, which I have not been able to solve. I am using the same certificate which has been used on another machine (Win7) successfully in the same way for signing quasi the same installer. Anyway, on our Windows Server 2008 which is running CruiseControl.net I tried to sign an installer with signtool.exe and it fails with the following error:</p>

<pre><code>The following certificates were considered:
    Issued to: &lt;our company&gt;
    Issued by: &lt;some ca&gt;
    Expires:   &lt;is valid&gt;
    SHA1 hash: &lt;...&gt;

    Issued to: &lt;...&gt;
    Issued by: &lt;...&gt;
    Expires:   &lt;...&gt;
    SHA1 hash: &lt;...&gt;

After EKU filter, 1 certs were left.
After expiry filter, 1 certs were left.
After Subject Name filter, 1 certs were left.
After Private Key filter, 0 certs were left.
SignTool Error: No certificates were found that met all the given criteria.
</code></pre>

<p>I tried installing the certificate to different certificate stores, tried different versions of signtool.exe and tried to use the .cer file directly, but it made no difference. I am receiving the error mentioned above in all of the cases. I tried the following command line commands</p>

<pre><code>signtool.exe sign /debug /n ""MyCompany"" C:\my\installer.exe
signtool.exe sign /debug /f C:\path\to\my\certificate.cer C:\my\installer.exe
</code></pre>

<p>but I left the /debug away in some cases. Is there anything I am doing wrong or missing?</p>
","<p>I had the same issue on Win7 machine and tried everything that good people suggested in this post with no luck. Then, even my machine has only one account and it has admin privileges, I opened command prompt window by ""Run as administrator"" and then all versions of signtool.exe that I have installed start working.</p>
","10935","<windows><certificate><code-signing><private-key><signtool>","14","1","5","2019-08-19 14:11:13","28697700","1","4","389966","","2015-02-24 13:32:03","2015-02-24 08:19:14",""
"28690986","Code signing with signtool fails due to private key filter","<p>While trying to sign some installer created by the company I am working for I encountered an error, which I have not been able to solve. I am using the same certificate which has been used on another machine (Win7) successfully in the same way for signing quasi the same installer. Anyway, on our Windows Server 2008 which is running CruiseControl.net I tried to sign an installer with signtool.exe and it fails with the following error:</p>

<pre><code>The following certificates were considered:
    Issued to: &lt;our company&gt;
    Issued by: &lt;some ca&gt;
    Expires:   &lt;is valid&gt;
    SHA1 hash: &lt;...&gt;

    Issued to: &lt;...&gt;
    Issued by: &lt;...&gt;
    Expires:   &lt;...&gt;
    SHA1 hash: &lt;...&gt;

After EKU filter, 1 certs were left.
After expiry filter, 1 certs were left.
After Subject Name filter, 1 certs were left.
After Private Key filter, 0 certs were left.
SignTool Error: No certificates were found that met all the given criteria.
</code></pre>

<p>I tried installing the certificate to different certificate stores, tried different versions of signtool.exe and tried to use the .cer file directly, but it made no difference. I am receiving the error mentioned above in all of the cases. I tried the following command line commands</p>

<pre><code>signtool.exe sign /debug /n ""MyCompany"" C:\my\installer.exe
signtool.exe sign /debug /f C:\path\to\my\certificate.cer C:\my\installer.exe
</code></pre>

<p>but I left the /debug away in some cases. Is there anything I am doing wrong or missing?</p>
","<p>I also had to sign a file, using a certificate which I received from another source (similar to you). For me, the issue was that I only installed the certificate on my PC with the ""Current User"" option. Once I installed it, using the ""Local Machine"" option, it worked.</p>

<p><a href=""https://i.stack.imgur.com/CFWKL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CFWKL.png"" alt=""enter image description here""></a></p>
","10935","<windows><certificate><code-signing><private-key><signtool>","14","0","5","2019-08-19 14:11:13","28697700","1","4","389966","","2015-02-24 13:32:03","2015-02-24 08:19:14",""
"28690986","Code signing with signtool fails due to private key filter","<p>While trying to sign some installer created by the company I am working for I encountered an error, which I have not been able to solve. I am using the same certificate which has been used on another machine (Win7) successfully in the same way for signing quasi the same installer. Anyway, on our Windows Server 2008 which is running CruiseControl.net I tried to sign an installer with signtool.exe and it fails with the following error:</p>

<pre><code>The following certificates were considered:
    Issued to: &lt;our company&gt;
    Issued by: &lt;some ca&gt;
    Expires:   &lt;is valid&gt;
    SHA1 hash: &lt;...&gt;

    Issued to: &lt;...&gt;
    Issued by: &lt;...&gt;
    Expires:   &lt;...&gt;
    SHA1 hash: &lt;...&gt;

After EKU filter, 1 certs were left.
After expiry filter, 1 certs were left.
After Subject Name filter, 1 certs were left.
After Private Key filter, 0 certs were left.
SignTool Error: No certificates were found that met all the given criteria.
</code></pre>

<p>I tried installing the certificate to different certificate stores, tried different versions of signtool.exe and tried to use the .cer file directly, but it made no difference. I am receiving the error mentioned above in all of the cases. I tried the following command line commands</p>

<pre><code>signtool.exe sign /debug /n ""MyCompany"" C:\my\installer.exe
signtool.exe sign /debug /f C:\path\to\my\certificate.cer C:\my\installer.exe
</code></pre>

<p>but I left the /debug away in some cases. Is there anything I am doing wrong or missing?</p>
","<p>I had same problem as mentioned. This is what I did - assuming you have setup the rest of the pre-requisites for code signing.</p>

<ol>
<li>Closed the solution and closed the VS IDE</li>
<li>Launched the Visual Studio IDE with Run as Administrator privileges</li>
<li>Open the solution and rebuild it</li>
</ol>

<p>This time the signing process was successful.</p>

<p>I presume you have the right cert file and private key for signing and also imported the cert to the Trusted store.</p>

<p>If not, you can continue to read more.</p>

<ol>
<li><p>Import the pfx file - ""xyz.pfx"" :: Open command prompt (launch - Run
as Administrator privileges) and run the following command </p>

<p><code>certutil.exe -p mypassword -importpfx xyz.pfx</code></p>

<p>An output from the command is shown below as example:</p>

<blockquote>
  <p>Certificate ""CN=Name of the Cert, O=BLAH, OU=BLAH, E=john.doe@yourorg.com"" added to 
  store.
  CertUtil: -importPFX command completed successfully.</p>
</blockquote></li>
<li><p>Add the certificate to the Trusted Root Certification Authorities by using the following command. There are many ways to do but I used this. Open command prompt (launch - Run as Administrator privileges) and run the following command</p>

<p><code>certmgr.exe -add -c mycertificate.cer -s -r localMachine root</code></p>

<p>You will see an output message like this</p>

<blockquote>
  <p>CertMgr Succeeded</p>
</blockquote></li>
<li><p>Sign the assembly. Simple process from Visual Studio IDE.</p>

<ul>
<li>Right click the Project in your solution and open its properties.</li>
<li>Open <strong>Signing</strong> section and click on <strong>Sign the Assembly</strong> check box (Enable it)</li>
<li>Choose the pfx file using Browse option and enter the password 

<pre>you can also create a new one but you need a cert file that match to this pfx file, otherwise your signing will fail.</pre></li>
<li>Save the changes</li>
<li><p>Now, Click on <strong>Build Events</strong> section and click <strong>Edit Post-Build</strong> to open the editor for post build events. Enter the following command.</p>

<p><code>""C:\Program Files (x86)\Windows Kits\10\bin\10.0.18362.0\x64\signtool.exe"" sign /v /sm ""$(TargetPath)""</code></p>

<blockquote>
  <p>Path of the signtool.exe depends on where/whether you have installed the Windows SDK.</p>
</blockquote></li>
</ul></li>
</ol>

<p>Now build the solution, your solution should build successfully and your binaries signed. Ensure to run the VS IDE with Administrator privileges.</p>
","10935","<windows><certificate><code-signing><private-key><signtool>","14","1","5","2019-08-19 14:11:13","28697700","1","4","389966","","2015-02-24 13:32:03","2015-02-24 08:19:14",""
"4599008","PHP RSA encryption using private key and PKCS1","<p>I need to encrypt a string using RSA, PKCS1, a private key and PHP. I could not find even a terminal command which can be used with exec(). Does anyone knows how to do it?</p>

<p>Thanks!</p>
","<pre><code>openssl aes-256-cbc -a -salt -in inputfile.txt -out encryptedfile.txt -pass pass:thepassword
openssl aes-256-cbc -d -a -in encryptedfile.txt -out decryptedfile.txt 
</code></pre>

<p>Can exec these, and should be able to change the cipher as needed.</p>
","10860","<php><openssl><rsa><encryption-asymmetric><private-key>","5","3","3","2016-01-11 01:56:00","","0","6","","","","2011-01-04 22:12:29",""
"4599008","PHP RSA encryption using private key and PKCS1","<p>I need to encrypt a string using RSA, PKCS1, a private key and PHP. I could not find even a terminal command which can be used with exec(). Does anyone knows how to do it?</p>

<p>Thanks!</p>
","<p>Try <a href=""http://phpseclib.sourceforge.net/"" rel=""nofollow noreferrer"">phpseclib, a pure PHP RSA implementation</a>:</p>

<pre><code>&lt;?php
include('Crypt/RSA.php');

$rsa = new Crypt_RSA();
//extract($rsa-&gt;createKey());

$plaintext = 'terrafrost';

$rsa-&gt;loadKey($privatekey);
$rsa-&gt;setEncryptionMode(CRYPT_RSA_ENCRYPTION_PKCS1);
$ciphertext = $rsa-&gt;encrypt($plaintext);

echo $plaintext;
?&gt;
</code></pre>

<blockquote>
  <p><strong>Security warning:</strong> If you're going to use phpseclib, make sure you <a href=""http://www.daemonology.net/blog/2009-06-11-cryptographic-right-answers.html"" rel=""nofollow noreferrer"">follow the best practices for RSA encryption</a>. See also <a href=""https://stackoverflow.com/a/34088308/2224584"">this answer</a> for more details and an alternative approach.</p>
</blockquote>
","10860","<php><openssl><rsa><encryption-asymmetric><private-key>","5","5","3","2016-01-11 01:56:00","","0","6","","","","2011-01-04 22:12:29",""
"4599008","PHP RSA encryption using private key and PKCS1","<p>I need to encrypt a string using RSA, PKCS1, a private key and PHP. I could not find even a terminal command which can be used with exec(). Does anyone knows how to do it?</p>

<p>Thanks!</p>
","<p>If you have the php_openssl extension enabled you can do this without using the command line other than to create the keys. And you could even create the keys with php also if you wanted.</p>

<h2>Generate your keys</h2>

<p><em>These are the shell commands to generate the keys. You can run these in Linux, Mac, Cygwin, or even your Windows Git BASH.</em></p>

<p>Generate a 512 bit rsa private key. This will ask you for a password. You need to store this safely.</p>

<p><code>openssl genrsa -des3 -out private.pem 512</code></p>

<p>Generate the public key based on the private key. You are free to store this in an insecure manner. </p>

<p><code>openssl rsa -in private.pem -pubout -out public.pem</code></p>

<h2>Use PHP to encrypt/decrypt data with your keys</h2>

<p>Note that I've included encrypting and decrypting with public and private keys. You only want to choose one of these to implement, for example encrypt with private and decrypt with public.</p>

<pre><code>&lt;?php
$privateKeyPassphrase = ""mypassword"";
$sensitiveData = ""This is the data that we want to encrypt."";

/*
// Load the keys from a file (as you would most likely do in a production environment)
$priv_key_file_name = realpath(""private.pem"");
$publ_key_file_name = realpath(""public.pem"");

// Note: This function needs an array of parameters!
$privateKey = openssl_pkey_get_private(array(""file://$priv_key_file_name"", $privateKeyPassphrase));
$publicKey = openssl_pkey_get_public(array(""file://$publ_key_file_name"", $privateKeyPassphrase));
*/

// Get keys from a string so that this example can be run without the need for extra files
$privateKeyString = &lt;&lt;&lt;PK
-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: DES-EDE3-CBC,D21679087FE8490E

hXTtfXC4qYNoE9hySVwPD+Mwhb7RiCae589Z952Z+ucz9i8j+1MO4Sx2nOMCH5Eg
uotMSr3FipJ/Bqbh66AqqYK3PG7NFYA41f/7xrTA6gwq6MDjmAy6z8TW+NE3OCpF
n+9zPzT15wcNm4U4ZRpEO+Fi8cYTLu0LlX+k8Djrd+CuS6wX4p8SgpAplDrnAiAH
z3sJtf2+M67yTNT7v/hIJmkebCwES43pTlNrxluJpD7HBl4BGmFWFI+MJ/gPuFn6
etQjDpzgep0Wn4FKi34IkDQ9kM4/9tWy0Fhf8ytdg0NZshMt/PWRPrNrs+2qLoJu
1rHc0rtKVvALQOKU+SbxaYVBlEzelxB0XJ2uQMSIs46vHZiUG3Q2JBmlxRshHQse
8n9CAYmwm++cPmXq06rVMclCJR0pDlOzGQvIgmo4eiY=
-----END RSA PRIVATE KEY-----
PK;

$publicKeyString = &lt;&lt;&lt;PK
-----BEGIN PUBLIC KEY-----
MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKcNEHgry/zIFpKdKz2E/ksoDkBn00K7
v2CxB2kHMWjAxgaFPCYs/8gHclSkcJYARKqvU/0Gsc0mrrPtCs5CytcCAwEAAQ==
-----END PUBLIC KEY-----
PK;

// Load private key
$privateKey = openssl_pkey_get_private(array($privateKeyString, $privateKeyPassphrase));

// Load public key
$publicKey = openssl_pkey_get_public(array($publicKeyString, $privateKeyPassphrase));

if (!$privateKey) {
    echo ""Private key NOT OK\n"";
}

if (!$publicKey) {
    echo ""Public key NOT OK\n"";
}

if (!openssl_private_encrypt($sensitiveData, $encryptedWithPrivate, $privateKey)) {
    echo ""Error encrypting with private key\n"";
}

if (!openssl_public_encrypt($sensitiveData, $encryptedWithPublic, $publicKey)) {
    echo ""Error encrypting with public key\n"";
}

if (!openssl_private_decrypt($encryptedWithPublic, $decryptedWithPrivateFromPublic, $privateKey)) {
    echo ""Error decrypting with private key what was encrypted with public key\n"";
}

if (!openssl_public_decrypt($encryptedWithPrivate, $decryptedWithPublicFromPrivate, $publicKey)) {
    echo ""Error decrypting with public key what was encrypted with private key\n"";
}

echo ""Encrypted with public key: "" . base64_encode($encryptedWithPublic) . ""\n""; // This is different every time
echo ""Encrypted with private key: "" . base64_encode($encryptedWithPrivate) . ""\n"";
echo ""Decrypted with private key what was encrypted with public key: "" . $decryptedWithPrivateFromPublic . ""\n"";
echo ""Decrypted with public key what was encrypted with private key: "" . $decryptedWithPublicFromPrivate . ""\n"";
</code></pre>
","10860","<php><openssl><rsa><encryption-asymmetric><private-key>","5","3","3","2016-01-11 01:56:00","","0","6","","","","2011-01-04 22:12:29",""
"32676294","""Couldn't load private key (not a private key)"" when converting id_rsa.pub to ppk using PuTTYgen","<p>I'm installing Git 2.5.0 (included with latest docker-toolbox) on my Windows 7 64-bit.</p>

<p>I try to regenerate new key using <code>git-bash</code>:</p>

<pre><code>ssh-keygen -t rsa
</code></pre>

<p>and save the new key to specific location. When trying to convert using PuTTYgen to <code>.ppk</code> file there's error:</p>

<blockquote>
  <p>Couldn't load private key (not a private key)</p>
</blockquote>

<p>Is there something wrong with my Git version?</p>

<p>Here's the <code>.pub</code> file:</p>

<pre><code>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC4YN/jejgFKubJ7YBUdl18EKuxFcC2CS/Rl19u6giHIz6zP548guM22Vm1edOLHN6qh2tpJkbzN6FOtLrCUXQqQ4unBqPlAY0dU4Cvzh86TDqdWixOV3AuBGJAMmjrrGe/U3/yO1RgR1pARrl7ZpY7ma7tP/9o8rGDmbQclIULNcI5AYCjRLICgbDlawT8jRYBT33VztphLi9HzGgDtSPANGJpgRrnYcoF3ZJL4E/CC7SW33lz2S/cLsupDdjusPWJjzR8vDKCXYtBTjvNP+a5GY21Z7eQHwD0MBFdxyHCMM0rnVWMJFmNNYy0N2ho5TrJ7kUHbzz4tUfrGPdWzOqX dxx@dxx-SandBox
</code></pre>
","<p>You are obviously loading a public key to the PuTTYgen, not the private key.</p>

<hr>

<p>The <code>ssh-keygen -t rsa</code> generates two files:</p>

<ul>
<li><p>The key pair <code>id_rsa</code> (containing both the public key and the private key):</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
...
-----END RSA PRIVATE KEY-----
</code></pre></li>
<li><p>The public key <code>id_rsa.pub</code>:</p>

<pre><code>ssh-rsa ... comment
</code></pre></li>
</ul>

<p>You cannot load the <code>id_rsa.pub</code> to PuTTYgen. It makes no sense, as the file does not contain the private key.</p>

<p>You have to load the <code>id_rsa</code>.</p>
","10828","<windows><putty><private-key><git-bash>","2","2","2","2018-11-19 12:41:10","32709700","2","2","850848","","2015-09-22 06:29:09","2015-09-20 05:59:02",""
"32676294","""Couldn't load private key (not a private key)"" when converting id_rsa.pub to ppk using PuTTYgen","<p>I'm installing Git 2.5.0 (included with latest docker-toolbox) on my Windows 7 64-bit.</p>

<p>I try to regenerate new key using <code>git-bash</code>:</p>

<pre><code>ssh-keygen -t rsa
</code></pre>

<p>and save the new key to specific location. When trying to convert using PuTTYgen to <code>.ppk</code> file there's error:</p>

<blockquote>
  <p>Couldn't load private key (not a private key)</p>
</blockquote>

<p>Is there something wrong with my Git version?</p>

<p>Here's the <code>.pub</code> file:</p>

<pre><code>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC4YN/jejgFKubJ7YBUdl18EKuxFcC2CS/Rl19u6giHIz6zP548guM22Vm1edOLHN6qh2tpJkbzN6FOtLrCUXQqQ4unBqPlAY0dU4Cvzh86TDqdWixOV3AuBGJAMmjrrGe/U3/yO1RgR1pARrl7ZpY7ma7tP/9o8rGDmbQclIULNcI5AYCjRLICgbDlawT8jRYBT33VztphLi9HzGgDtSPANGJpgRrnYcoF3ZJL4E/CC7SW33lz2S/cLsupDdjusPWJjzR8vDKCXYtBTjvNP+a5GY21Z7eQHwD0MBFdxyHCMM0rnVWMJFmNNYy0N2ho5TrJ7kUHbzz4tUfrGPdWzOqX dxx@dxx-SandBox
</code></pre>
","<p>I had a similar problem.  For Puttygen 6.2 the error was ""Couldn't load private key (not a private key)"" and for Puttygen 7 the error was ""Couldn't load private key (not a recognised key file format)"".</p>

<p>It turns out the solution was pretty simple - the .pem file I was using was saved with UNIX line endings (LF).  Converting the file to Windows line endings (CR LF) meant that Puttygen was able to read it.</p>
","10828","<windows><putty><private-key><git-bash>","2","0","2","2018-11-19 12:41:10","32709700","2","2","850848","","2015-09-22 06:29:09","2015-09-20 05:59:02",""
"25399635","How to connect to SFTP through Paramiko with SSH key - Pageant","<p>I am trying to connect to an SFTP through Paramiko with a passphrase protected SSH key. I have loaded the key into Pageant (which I understand is supported by Paramiko) but I can't get it to decrypt my private key.</p>

<p>I have found this example <a href=""https://stackoverflow.com/questions/8490228/how-to-use-pageant-with-paramiko-on-windows"">here</a> that references <code>allow_agent=True</code> but this does not appear to be a parameter that can be used with the <code>SFTPClient</code>.</p>

<p>Can anyone advise if it is possible to work with Paramiko and Pageant in this way?</p>

<p>This is my code at the moment - which raises <code>PasswordRequiredException</code></p>

<pre><code>privatekeyfile = 'path to key'
mykey = paramiko.RSAKey.from_private_key_file(privatekeyfile)
transport = paramiko.Transport(('host', 'port'))
transport.connect('username',pkey = mykey)
sftp = paramiko.SFTPClient.from_transport(transport)
</code></pre>
","<p>You have to provide a passphrase, when loading an encrypted key using the <a href=""https://docs.paramiko.org/en/stable/api/keys.html#paramiko.pkey.PKey.from_private_key_file"" rel=""nofollow noreferrer""><code>PKey.from_private_key_file</code></a>.</p>

<p>Though note that you do <em>not</em> have to load the key <em>at all</em>, when using the Pageant. That's the point of using an authentication agent. But only the <a href=""https://docs.paramiko.org/en/stable/api/client.html"" rel=""nofollow noreferrer""><code>SSHClient</code> class</a> supports the Pageant. The <code>Transport</code> class does not, on its own.</p>

<p>You can follow the code in <a href=""https://stackoverflow.com/q/8490228/850848"">How to use Pageant with Paramiko on Windows?</a><br>
Though as the <code>allow_agent</code> is <code>True</code> by default, there is actually <em>nothing special</em> about the code.</p>

<p>Once connected and authenticated, use the <a href=""https://docs.paramiko.org/en/stable/api/client.html#paramiko.client.SSHClient.open_sftp"" rel=""nofollow noreferrer""><code>SSHClient.open_sftp</code> method</a> to get your instance of the <code>SFTPClient</code>.  </p>

<pre><code>ssh = paramiko.SSHClient()
ssh.connect(host, username='user', allow_agent=True)
sftp = ssh.open_sftp()
</code></pre>

<p>You will also need to verify the host key:<br>
<a href=""https://stackoverflow.com/q/10670217/850848#43093883"">Paramiko &quot;Unknown Server&quot;</a></p>
","10768","<python><ssh><paramiko><private-key><pageant>","8","7","1","2019-03-18 06:19:38","25407365","3","2","-1","","2017-05-23 12:34:01","2014-08-20 08:03:04",""
"13231858","Private key of certificate in certificate-store not readable","<p>I think I've got the same issue <a href=""https://stackoverflow.com/questions/1386303/installing-a-certificate-in-a-msi-custom-action-doesnt-work-properly"">like this guy</a>, but I wasn't as lucky as him/her since the solution provided doesn't work for me.</p>

<p>The solution provided looks for files on the <code>C:\ProgramData\Microsoft\Crypto\RSA\MachineKeys</code> (<strong>not</strong> in sub directories) and <code>C:\Users\[Username]\AppData\Roaming\Microsoft\Crypto\RSA</code> (and subdirectories)
However since I want the setup to install the application to all users, the custom action is running under the <code>SYSTEM</code>-User, which leads the files beeing actually created in <code>C:\ProgramData\Application Data\Microsoft\Crypto\RSA\S-1-5-18</code>.</p>

<p>When running an ""normal"" application as Admin (right click -> Run as Admin) executing exactly the same code, a file is created at <code>C:\Users\[Username]\AppData\Roaming\Microsoft\Crypto\RSA\S-1-5-21-1154405193-2177794320-4133247715-1000</code>. </p>

<p>The certificate generated using the WIX custom action seems to not have a private key (""<em>The key set does not exists</em>""), while the cert generated by the ""normal"" application does.</p>

<p>When looking at the permissions of the files, they seem to be alright, even if they differ (the working one does include the <code>SYSTEM</code> user), even after adding the <code>SYSTEM</code> one to the (""non-working"")file I am not able to read the private key, same error here.</p>

<p>Then I used the <a href=""http://msdn.microsoft.com/en-us/library/aa717039.aspx"" rel=""nofollow noreferrer"">FindPrivateKey</a> util the find the corresponding file but all I get is <code>""Unable to obtain private key file name""</code>.</p>

<p>Ok whats going one here? Where does Windows store the private keys for certificates stored by the <code>SYSTEM</code> user? Maybe there isn't any private key file created? Why?</p>
","<p>I got a solution by googleing up nearly everything ... as I understand there are some things to do:</p>

<ol>
<li>Generate a <code>X509Certificate2</code></li>
<li><a href=""http://support.microsoft.com/kb/950090"" rel=""noreferrer"">Make sure the private key container is persistent (not temporary)</a></li>
<li><a href=""https://stackoverflow.com/a/4902009/808723"">Make sure to have acccess rules for authenticated users</a>, so they can see the private key</li>
</ol>

<p>So the final code a came up with is the following:</p>

<pre><code>X509Certificate2 nonPersistentCert = CreateACertSomehow();

// this is only required since there's no constructor for X509Certificate2 that uses X509KeyStorageFlags but a password
// so we create a tmp password, which is not reqired to be secure since it's only used in memory
// and the private key will be included (plain) in the final cert anyway
const string TMP_PFX_PASSWORD = ""password"";

// create a pfx in memory ...
byte[] nonPersistentCertPfxBytes = nonPersistentCert.Export(X509ContentType.Pfx, TMP_PFX_PASSWORD);

// ... to get an X509Certificate2 object with the X509KeyStorageFlags.PersistKeySet flag set
X509Certificate2 serverCert = new X509Certificate2(nonPersistentCertPfxBytes, TMP_PFX_PASSWORD,
    X509KeyStorageFlags.PersistKeySet | X509KeyStorageFlags.MachineKeySet | X509KeyStorageFlags.Exportable); // use X509KeyStorageFlags.Exportable only if you want the private key to tbe exportable

// get the private key, which currently only the SYSTEM-User has access to
RSACryptoServiceProvider systemUserOnlyReadablePrivateKey = serverCert.PrivateKey as RSACryptoServiceProvider;

// create cspParameters
CspParameters cspParameters = new CspParameters(systemUserOnlyReadablePrivateKey.CspKeyContainerInfo.ProviderType, 
    systemUserOnlyReadablePrivateKey.CspKeyContainerInfo.ProviderName, 
    systemUserOnlyReadablePrivateKey.CspKeyContainerInfo.KeyContainerName)
{
    // CspProviderFlags.UseArchivableKey means the key is exportable, if you don't want that use CspProviderFlags.UseExistingKey instead
    Flags = CspProviderFlags.UseMachineKeyStore | CspProviderFlags.UseArchivableKey,
    CryptoKeySecurity = systemUserOnlyReadablePrivateKey.CspKeyContainerInfo.CryptoKeySecurity
};

// add the access rules
cspParameters.CryptoKeySecurity.AddAccessRule(new CryptoKeyAccessRule(new SecurityIdentifier(WellKnownSidType.AuthenticatedUserSid, null), CryptoKeyRights.GenericRead, AccessControlType.Allow));

// create a new RSACryptoServiceProvider from the cspParameters and assign that as the private key
RSACryptoServiceProvider allUsersReadablePrivateKey = new RSACryptoServiceProvider(cspParameters);
serverCert.PrivateKey = allUsersReadablePrivateKey;

// finally place it into the cert store
X509Store rootStore = new X509Store(StoreName.My, StoreLocation.LocalMachine);
rootStore.Open(OpenFlags.ReadWrite);
rootStore.Add(serverCert);
rootStore.Close();

// :)
</code></pre>
","10633","<c#><certificate><uac><custom-action><private-key>","11","16","1","2012-11-08 12:24:30","13289074","0","5","-1","","2017-05-23 12:08:43","2012-11-05 12:11:27",""
"18369330","How to generate RSA Private key from *pem string in Java","<p>I want to generate the private key from a string(a <code>.pem</code> file) in Java.</p>

<pre><code>private static final String test = ""-----BEGIN RSA PRIVATE KEY-----\n"" +
         ""MIIEpAIBAAKCAQEAvcCH8WsT1xyrZqq684VPJzOF3hN5DNbowZ96Ie//PN0BtRW2\n"" +
// and so on
         ""-----END RSA PRIVATE KEY-----"";

try {
    String privKeyPEM = test.replace(""-----BEGIN RSA PRIVATE KEY-----\n"", """");
    privKeyPEM = privKeyPEM.replace(""-----END RSA PRIVATE KEY-----"", """");

    byte [] encoded = Base64.decode(privKeyPEM);

    PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(encoded);
    KeyFactory kf = KeyFactory.getInstance(""RSA"");
    PrivateKey privKey = kf.generatePrivate(keySpec);
}
catch (Exception e) {
    e.printStackTrace();
}
</code></pre>

<p>The last line(generatePrivate function) is throwing this exception:</p>

<pre><code>java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException : algid parse error, not a sequence
    at sun.security.rsa.RSAKeyFactory.engineGeneratePrivate(Unknown Source)
    at java.security.KeyFactory.generatePrivate(Unknown Source)
    at Test.main(Test.java:52)
Caused by: java.security.InvalidKeyException: IOException : algid parse error, not a sequence
    at sun.security.pkcs.PKCS8Key.decode(Unknown Source)
    at sun.security.pkcs.PKCS8Key.decode(Unknown Source)
    at sun.security.rsa.RSAPrivateCrtKeyImpl.&lt;init&gt;(Unknown Source)
    at sun.security.rsa.RSAPrivateCrtKeyImpl.newKey(Unknown Source)
    at sun.security.rsa.RSAKeyFactory.generatePrivate(Unknown Source)
    ... 3 more
</code></pre>

<p>If I change the private key to the value from a <code>.der</code> file it works properly, but I need to generate the private key file from a <code>.pem</code> file.</p>

<p>I attached a screenshot of the bytes printed as string(once hard-coded with \n and once hard-coded without \n) and once from the file.</p>

<p><a href=""https://i.stack.imgur.com/UxhMP.png"" rel=""nofollow noreferrer"">Bigger Image</a></p>

<p><img src=""https://i.stack.imgur.com/UxhMP.png"" alt=""Output""></p>

<p>The weird thing is that the output from the file is different to the output from the strings.</p>

<p>If I try to encode a <code>.der</code> file with Base64, the result is different than the string in the <code>.pem</code> file. Why is that so?</p>
","<p>You say that the last line is throwing exception, i.e. </p>

<p><code>PrivateKey privKey = kf.generatePrivate(keySpec);</code></p>

<p>Above line works on keyspecs being set correct, i.e.</p>

<p><code>PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(encoded);</code></p>

<p>So actual problem is with encoded bytes array. Have you done System.out after <code>byte [] encoded = Base64.decode(privKeyPEM);</code> and see what the output is.</p>

<p>I understand that if the message is in MIME format, then after certain characters it appends a combination of carriage return and newline so the strings are not too long for e-mail system or wherever you are using it.</p>

<p>The final String test has some '\n' in the original text which you use. You did get rid of other text in below line,</p>

<pre><code>String privKeyPEM = test.replace(""-----BEGIN RSA PRIVATE KEY-----\n"", """");
    privKeyPEM = privKeyPEM.replace(""-----END RSA PRIVATE KEY-----"", """");
</code></pre>

<p>But, look at the string, </p>

<pre><code>""MIIEpAIBAAKCAQEAvcCH8WsT1xyrZqq684VPJzOF3hN5DNbowZ96Ie//PN0BtRW2\n"" +
// and so on
         ""-----END RSA PRIVATE KEY-----"";
</code></pre>

<p>it may have some more '\n' left which may result in some unwanted characters when you generate keyspec. Try more System.out and see what the encoded byte array is like and also before that check String privKeyPEM and see if any extra character is not left in it.</p>

<p>Hope this hepls.</p>
","10462","<java><rsa><private-key><pem><der>","6","1","1","2016-09-15 23:30:56","","4","","1979703","","2013-08-28 23:02:14","2013-08-21 23:33:52",""
"27840781","TeamCity Git VCS SSH connection with Custom Private Key throws JschException: Auth fail","<p>I can't seem to get TeamCity to read my Git (Gitolite) repository... I get an exception:</p>

<pre><code>List remote refs failed: com.jcraft.jsch.JSchException: Auth fail
</code></pre>

<p>What I've tried: (I use PuTTY to export them to OpenSSH format)</p>

<ol>
<li>Use personal working(!!) private/public keys</li>
<li>Generate private/public key with PuTTy for teamcity user </li>
<li>Generate private/public key from Git Bash with ssh-keygen for teamcity user </li>
</ol>

<p>All private keys have passphrase and I use the Custom Private Key setting to configure it.
My fetch url looks like this: git:ssh://user@host/path/to/repository</p>

<p>No matter what I try... I always get the same exception: </p>

<pre><code>jetbrains.buildServer.vcs.VcsException: List remote refs failed: com.jcraft.jsch.JSchException: Auth fail
    at jetbrains.buildServer.buildTriggers.vcs.git.OperationContext.wrapException(OperationContext.java:165)
    at jetbrains.buildServer.buildTriggers.vcs.git.GitVcsSupport.getRemoteRefs(GitVcsSupport.java:339)
    at jetbrains.buildServer.buildTriggers.vcs.git.GitVcsSupport.getCurrentState(GitVcsSupport.java:128)
    at jetbrains.buildServer.buildTriggers.vcs.git.TestConnectionCommand.checkFetchConnection(TestConnectionCommand.java:95)
    at jetbrains.buildServer.buildTriggers.vcs.git.TestConnectionCommand.testConnection(TestConnectionCommand.java:68)
    at jetbrains.buildServer.buildTriggers.vcs.git.GitVcsSupport.testConnection(GitVcsSupport.java:252)
    at jetbrains.vcs.api.services.impl.TestConnectionServiceProvider$1.testConnection(TestConnectionServiceProvider.java:1)
    at jetbrains.buildServer.controllers.admin.projects.TestConnectionCommand.runTestConnection(TestConnectionCommand.java:3)
    at jetbrains.buildServer.controllers.admin.projects.TestConnectionCommand.doTestConnection(TestConnectionCommand.java:30)
    at jetbrains.buildServer.controllers.admin.projects.EditVcsRootsController.doPost(EditVcsRootsController.java:176)
    at jetbrains.buildServer.controllers.BaseFormXmlController$1.handleRequest(BaseFormXmlController.java:53)
    at jetbrains.buildServer.controllers.AjaxRequestProcessor.processRequest(AjaxRequestProcessor.java:45)
    at jetbrains.buildServer.controllers.BaseFormXmlController.doHandle(BaseFormXmlController.java:51)
    at jetbrains.buildServer.controllers.BaseController.handleRequestInternal(BaseController.java:75)
    at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
    at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
    at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:790)
    at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:719)
    at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644)
    at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:560)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:646)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
    at jetbrains.buildServer.maintenance.TeamCityDispatcherServlet.service(TeamCityDispatcherServlet.java:28)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
    at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
    at jetbrains.buildServer.web.DependencyParametersCalculationContextFilter.doFilter(DependencyParametersCalculationContextFilter.java:4)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
    at jetbrains.buildServer.web.DisableSessionIdFromUrlFilter.doFilter(DisableSessionIdFromUrlFilter.java:4)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
    at jetbrains.buildServer.web.DiagnosticFilter.doFilter(DiagnosticFilter.java:49)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
    at jetbrains.buildServer.web.ResponseFragmentFilter.doFilter(ResponseFragmentFilter.java:16)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)
    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)
    at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1070)
    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:611)
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1695)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
    at java.lang.Thread.run(Thread.java:744)
Caused by: org.eclipse.jgit.errors.TransportException: git:ssh://user@host/path/to/repository: Auth fail
    at org.eclipse.jgit.transport.JschConfigSessionFactory.getSession(JschConfigSessionFactory.java:142)
    at org.eclipse.jgit.transport.SshTransport.getSession(SshTransport.java:121)
    at org.eclipse.jgit.transport.TransportGitSsh$SshFetchConnection.&lt;init&gt;(TransportGitSsh.java:248)
    at org.eclipse.jgit.transport.TransportGitSsh.openFetch(TransportGitSsh.java:147)
    at jetbrains.buildServer.buildTriggers.vcs.git.GitVcsSupport.getRemoteRefs(GitVcsSupport.java:356)
    at jetbrains.buildServer.buildTriggers.vcs.git.GitVcsSupport.getRemoteRefs(GitVcsSupport.java:335)
    ... 52 more
Caused by: com.jcraft.jsch.JSchException: Auth fail
    at com.jcraft.jsch.Session.connect(Session.java:512)
    at org.eclipse.jgit.transport.JschConfigSessionFactory.getSession(JschConfigSessionFactory.java:116)
    ... 57 more
</code></pre>

<p>I do get other exceptions when the wrong path or passphrase are defined</p>

<p>SourceTree, git-cola, PuTTY, etc. are working fine... </p>

<p>I'm accustomed to use TeamCity with Stash/BitBucket and a username/password, which always seemed to work, but Gitolite won't let me use a username/password. :(</p>
","<p>I had the same problem when trying use my Unfuddle git as a VCS Root. To actually fix it, I found the link <a href=""https://teamcity-support.jetbrains.com/hc/en-us/community/posts/206933505-Help-Configuring-git-cvs-root-with-ssh"" rel=""noreferrer"">here</a> which specified changing the Username in the VCS Root Authentication Settings to <code>git</code>.</p>
","10421","<git><ssh><teamcity><private-key><gitolite>","13","18","1","2016-05-20 14:11:48","","1","1","2587736","","2015-01-08 13:36:18","2015-01-08 13:01:31",""
"13449525","SharpSSH invalid privatekey","<p>I use SharpSSH to connect to a stfp-server.</p>

<p>This for I need to add a privatekey-file like this:</p>

<pre><code>sftp.AddIdentityFile(KeyFilePath);
</code></pre>

<p>But this throws an exception:</p>

<pre><code>invaid privatekey: C:\KeyFile\privatekey_2.ppk
</code></pre>

<p>The file was created with puttygen and works with filezilla.
The privatekey-type doesn't matter (SSH-1 RSA, SSH-2 RSA, SSH-2 DSA). Everytime the same result.</p>

<p>Do you know how to handle this problem?</p>
","<p>You have to convert your key to OpenSSH Format:</p>

<p>Use PuttyGen to generate and convert the key (Conversion -> export OpenSSH Key)</p>
","10294","<c#><sftp><private-key><sharpssh>","18","24","1","2012-11-19 08:24:17","13449999","3","0","","","","2012-11-19 07:42:04",""
"13990181","RSA 2048 Encryption Decryption - Exception","<p>I am trying to encrypt and decrypt the data with RSA 2048.</p>

<p>We have one public key and private key and will be using same throughout.
but the problem is, when I decrypt, I am getting javax.crypto.BadPaddingException: Data must start with zero</p>

<pre><code>File file = new File(""C:\\temp-ldi\\pubkey.txt"");
FileWriter writer = new FileWriter(file);
file.createNewFile();
encryptedText = RSACrypto.encrypt(""PLAIN TEXT""); //no argument of pub-key, generate key pair
writer.write(new BASE64Encoder().encode(RSACrypto.pubKeyToBytes(RSACrypto.publicKey)));
writer.close();
file = new File(""C:\\temp-ldi\\privkey.txt"");
writer = new FileWriter(file);
file.createNewFile();
writer.write(new BASE64Encoder().encode(RSACrypto.privKeyToBytes(RSACrypto.privateKey)));
writer.close();
</code></pre>

<p>then I am using below code to decrypt the data </p>

<pre><code>File privfile = new File(""C:\\temp-ldi\\privkey.txt"");
File pubfile = new File(""C:\\temp-ldi\\pubkey.txt"");
FileReader reader = new FileReader(pubfile);
// file.createNewFile();
BufferedReader br = new BufferedReader(reader);
StringBuilder sb = new StringBuilder();
String s;
while ((s = br.readLine()) != null) {
    sb.append(s);
}
br.close();
reader.close();
this.encryptedText = RSACrypto.encrypt(""PLAIN TEXT"", sb.toString());
reader = new FileReader(privfile);
br = new BufferedReader(reader);
sb = new StringBuilder();
while ((s = br.readLine()) != null) {
    sb.append(s);
}
br.close();
reader.close();
System.out.println(RSACrypto.decrypt(this.encryptedText, sb.toString()));
</code></pre>

<p>all the encryption/decryption string will return in Base64Encoder/Base64Decoder format.</p>

<p>How do I pass the private key from file/simple string so that the key is not modified.</p>

<p><strong>Update</strong>
RSACrypto class : <a href=""http://sebsauvage.net/paste/?83517f2b3db94d24#Sdu12/vXPuxa5AxO95FPgKSF6N40R2DzD6lwQkvroyE="" rel=""nofollow"">http://sebsauvage.net/paste/?83517f2b3db94d24#Sdu12/vXPuxa5AxO95FPgKSF6N40R2DzD6lwQkvroyE=</a></p>
","<p>OK, problem in RSACrypto. When you encrypt file, it creates every time new keypair (in <code>encrypt</code>). Just remove new keypair generation from encrypt, call <code>newKeyPair</code> direcly, when you need it. 
And that static variables does no good for multi-thread environment. </p>

<p>I'll suggest to throw RSACrypto class, or rewrite it at least. I don't know why you so afraid of using byte[] type and why you need everything be BASE64 encoded. Code will a lot simple without additional encoding/decoding.</p>

<p>Here is working example (without RSACrypto), you can use it as template:</p>

<pre><code>    File file = new File(""C:\\temp-ldi\\pubkey.txt"");
    FileWriter writer = new FileWriter(file);
    file.createNewFile();
    KeyPairGenerator generator = KeyPairGenerator.getInstance(""RSA"");
    generator.initialize(2048, new SecureRandom());
    KeyPair keyPayr = generator.generateKeyPair();
    writer.write(new BASE64Encoder().encode(keyPayr.getPublic().getEncoded()));
    writer.flush();
    writer.close();
    file = new File(""C:\\temp-ldi\\privkey.txt"");
    writer = new FileWriter(file);
    file.createNewFile();
    writer.write(new BASE64Encoder().encode(keyPayr.getPrivate().getEncoded()));
    writer.flush();
    writer.close();


    File privfile = new File(""C:\\temp-ldi\\privkey.txt"");
    File pubfile = new File(""C:\\temp-ldi\\pubkey.txt"");
    FileReader reader = new FileReader(pubfile);

    BufferedReader br = new BufferedReader(reader);
    StringBuilder sb = new StringBuilder();
    String s;
    while ((s = br.readLine()) != null) {
        sb.append(s);
    }
    br.close();
    reader.close();
    PublicKey publicKey = KeyFactory.getInstance(""RSA"").generatePublic(new X509EncodedKeySpec(new BASE64Decoder().decodeBuffer(sb.toString())));
    Cipher cipher = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
    cipher.init(Cipher.ENCRYPT_MODE, publicKey);
    String encryptedText = new BASE64Encoder().encode(cipher.doFinal(""PLAIN TEXT"".getBytes(""UTF-8"")));
    System.out.println(""encrypted: "" + encryptedText);
    reader = new FileReader(privfile);
    br = new BufferedReader(reader);
    sb = new StringBuilder();
    while ((s = br.readLine()) != null) {
        sb.append(s);
    }
    br.close();
    reader.close();
    PrivateKey privateKey =  KeyFactory.getInstance(""RSA"").generatePrivate(new PKCS8EncodedKeySpec(new BASE64Decoder().decodeBuffer(sb.toString())));
    cipher.init(Cipher.DECRYPT_MODE, privateKey);
    System.out.println( new String(cipher.doFinal (new BASE64Decoder().decodeBuffer(encryptedText))));
</code></pre>
","10067","<java><encryption><rsa><public-key-encryption><private-key>","3","3","1","2012-12-21 14:01:08","13991540","4","4","1503535","","2012-12-21 13:41:27","2012-12-21 12:26:10",""
"4551793","How can I use an existing private key to a new iOS development certificate?","<p>For aesthetic reasons, I would like to use the same private key that I used to create my distribution certificate a while ago, to create a new development certificate (my old one expired). But the ""How to create a development certificate:"" on the iOS provisioning portal require that you use Keychain Access create a new key. When I try to do Keychain Access > Certificate Assistant > Request a Certificate From a Certificate Authority With ""(my key name)"" the Certificate Assistant doesn't actually create a CSR file.</p>

<p>Does anyone know if this can be done, and if so, how?</p>
","<p>Are you comfortable with OpenSSL and the command-line? There's a <a href=""http://www.mail-archive.com/openssl-users@openssl.org/msg61949.html"" rel=""nofollow"">discussion</a> on a mailing list about creating the CSR manually. FWIW, I wasn't able to create a CSR using a selected key in Keychain Access/Certificate Assistant either.</p>
","9890","<iphone><ios><certificate><private-key><ios-provisioning>","25","2","4","2016-11-11 22:41:40","7111454","2","21","","","","2010-12-29 05:52:41",""
"4551793","How can I use an existing private key to a new iOS development certificate?","<p>For aesthetic reasons, I would like to use the same private key that I used to create my distribution certificate a while ago, to create a new development certificate (my old one expired). But the ""How to create a development certificate:"" on the iOS provisioning portal require that you use Keychain Access create a new key. When I try to do Keychain Access > Certificate Assistant > Request a Certificate From a Certificate Authority With ""(my key name)"" the Certificate Assistant doesn't actually create a CSR file.</p>

<p>Does anyone know if this can be done, and if so, how?</p>
","<p>First, I had to export my private key from the keychain as a p12 file.  I tried scripting this, but was unsuccessful.</p>

<ol>
<li>Open keychain and select your private key</li>
<li>Right-click and select ""Export ""</li>
<li>Use a p12 file type.</li>
</ol>

<p>Run the following openssl command to convert your password-protected p12 file to a pem.  openssl will prompt for a password.</p>

<pre><code>openssl pkcs12 -in your-newly-exported-p12-file.p12 -out your-newly-exported-p12-file-as-a-pem.pem -nodes
</code></pre>

<p>Run the following command on your pem file to generate the csr.</p>

<pre><code>openssl req -new -key your-newly-exported-p12-file-as-a-pem.pem -out your-csr-to-submit-to-apple.csr
</code></pre>
","9890","<iphone><ios><certificate><private-key><ios-provisioning>","25","52","4","2016-11-11 22:41:40","7111454","2","21","","","","2010-12-29 05:52:41",""
"4551793","How can I use an existing private key to a new iOS development certificate?","<p>For aesthetic reasons, I would like to use the same private key that I used to create my distribution certificate a while ago, to create a new development certificate (my old one expired). But the ""How to create a development certificate:"" on the iOS provisioning portal require that you use Keychain Access create a new key. When I try to do Keychain Access > Certificate Assistant > Request a Certificate From a Certificate Authority With ""(my key name)"" the Certificate Assistant doesn't actually create a CSR file.</p>

<p>Does anyone know if this can be done, and if so, how?</p>
","<p>To generate a CSR from an existing Private Key in Keychain Access, just right-click (two-finger click) on the Private Key you want to use and choose 
REQUEST A CERTIFICATE FROM A CERTIFICATE AUTHORITY WITH ""(My Key Name)""</p>

<p>Then enter the User Email Address and CA Email Address (I just use the same email address for both) and then choose Saved To Disk.</p>
","9890","<iphone><ios><certificate><private-key><ios-provisioning>","25","4","4","2016-11-11 22:41:40","7111454","2","21","","","","2010-12-29 05:52:41",""
"4551793","How can I use an existing private key to a new iOS development certificate?","<p>For aesthetic reasons, I would like to use the same private key that I used to create my distribution certificate a while ago, to create a new development certificate (my old one expired). But the ""How to create a development certificate:"" on the iOS provisioning portal require that you use Keychain Access create a new key. When I try to do Keychain Access > Certificate Assistant > Request a Certificate From a Certificate Authority With ""(my key name)"" the Certificate Assistant doesn't actually create a CSR file.</p>

<p>Does anyone know if this can be done, and if so, how?</p>
","<p>I went through this hell today. I wanted to automate the export of a key to create the CSR via commandline. I found a tool written in <code>c</code> that promised what I wanted: <a href=""https://github.com/torsten/keychain_access"" rel=""nofollow noreferrer"">keychain_access</a>. I compiled and played around with it but wasn't able to export my distribution key. I created the tool again from scratch with the newest apple security API's and keychain item attribute printing, but still wasn't able to find the key by label. I was able to list it with no label search. In an desperate attempt I renamed to key in the keychain access tool and renamed it back to the old name. After that my tool finally picket up the key by label. And also the right click <code>REQUEST A CERTIFICATE FROM A CERTIFICATE AUTHORITY WITH ""(My Key Name)""</code> started to work again as well. It seems that the name was saved in a different encoding or something. Not event apples own keychain access tool was able to find the key!</p>
","9890","<iphone><ios><certificate><private-key><ios-provisioning>","25","0","4","2016-11-11 22:41:40","7111454","2","21","","","","2010-12-29 05:52:41",""
"13778787","Load private key manually with ssh","<p>Is it possible to run <code>ssh</code> with ignoring default <code>.ssh</code> directory and specify other one or - better - specified private key ?</p>

<p>For example:</p>

<pre><code>ssh --private-key other_id_rsa login@host
</code></pre>
","<p>You can use the <code>-i</code> option.</p>

<p>Source: <code>man ssh</code></p>

<pre><code>-i identity_file
    Selects a file from which the identity (private key) for public key authentication is read.  The default is ~/.ssh/identity for protocol
    version 1, and ~/.ssh/id_dsa, ~/.ssh/id_ecdsa and ~/.ssh/id_rsa for protocol version 2.  Identity files may also be specified on a per-
    host basis in the configuration file.  It is possible to have multiple -i options (and multiple identities specified in configuration
    files).  ssh will also try to load certificate information from the filename obtained by appending -cert.pub to identity filenames.
</code></pre>
","9420","<bash><ssh><private-key>","11","13","2","2015-05-21 08:57:23","13778800","0","","","","","2012-12-08 15:12:56",""
"13778787","Load private key manually with ssh","<p>Is it possible to run <code>ssh</code> with ignoring default <code>.ssh</code> directory and specify other one or - better - specified private key ?</p>

<p>For example:</p>

<pre><code>ssh --private-key other_id_rsa login@host
</code></pre>
","<p>You can also add a specific configuration to each host you access, which is pretty much the same as persisting the usage of the flags available in ssh.</p>

<p>There's an entire world of flags available, and there are some mappings for each different service specialization provided. In your case, using specific <code>id_rsa</code> files, you could write down to your <code>~/.ssh/config</code> file:</p>

<pre><code>...

Host host_alias
    HostName host_name
    IdentityFile ~/.ssh/id_rsa_you_want

...
</code></pre>

<p>Then, you can simply use:</p>

<pre><code>ssh host_alias
</code></pre>

<p>And the <code>id_rsa_you_want</code> will be used -- as well as any further configurations you may apply to the connection. See <code>man ssh_config</code> for the entire list of available directives.</p>
","9420","<bash><ssh><private-key>","11","4","2","2015-05-21 08:57:23","13778800","0","","","","","2012-12-08 15:12:56",""
"12365553","X509Certificate2 p12 is store required?","<p>Question when running the following code:</p>

<pre><code>X509Certificate2 cert = new X509Certificate2(@""C:\file.p12"", ""password"", X509KeyStorageFlags.Exportable);
RSACryptoServiceProvider crypt = (RSACryptoServiceProvider)cert.PrivateKey;
</code></pre>

<p>I get the following error: <code>Keyset does not exist</code>.</p>

<p>I have not added the certificate to a store, is this required to be able to access the private key?</p>
","<p>Add the <a href=""http://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keystorageflags.aspx"" rel=""nofollow noreferrer"">X509KeyStorageFlags.PersistKeySet</a> option to the last argument of the X509Certificate2 constructor. Otherwise, when it loads the p12 file, it will not load the private key. Specifically:</p>

<pre><code>X509Certificate2 cert = new X509Certificate2(@""C:\file.p12"", ""password"",    
    X509KeyStorageFlags.Exportable | X509KeyStorageFlags.PersistKeySet);
RSACryptoServiceProvider crypt = (RSACryptoServiceProvider)cert.PrivateKey;
</code></pre>

<p>If that fails, it may be a file permission issue on where the key is stored. See <a href=""https://stackoverflow.com/questions/6392268/x509certificate-keyset-does-not-exist"">X509Certificate - Keyset does not exist</a> for an explanation and example. </p>
","9393","<c#><x509certificate><private-key><x509certificate2>","3","6","1","2012-09-11 08:50:42","12365889","0","","786192","","2012-09-11 08:35:36","2012-09-11 08:21:36",""
"23880078","ssh2_auth_pubkey_file authentication always fails","<p>I'm trying to connect to another machine using PHP's ssh2 functions. I know the ssh keys have been created with no passwords and are distributed correctly, I can <code>ssh user@host</code> in the terminal on my machine to the server.</p>

<p>The PHP function tries to connect to a ip address using an ssh key file:-</p>

<pre><code> function minnerConnect($miner_serial) {

    $port = '7822';
    $miner_ip = $this-&gt;getMinerIp($miner_serial);

    $methods = array(
        'kex' =&gt; 'diffie-hellman-group1-sha1',
        'hostkey' =&gt; 'ssh-dss',
        'client_to_server' =&gt; array(
            'crypt' =&gt; '3des-cbc',
            'mac' =&gt; 'hmac-md5',
            'comp' =&gt; 'none'),
        'server_to_client' =&gt; array(
            'crypt' =&gt; '3des-cbc',
            'mac' =&gt; 'hmac-md5',
            'comp' =&gt; 'none'));
    $connection = ssh2_connect($miner_ip, $port, $methods);
    if (ssh2_auth_pubkey_file($connection, 'root',
        '/root/.ssh/id_dsa.pub',
        '/root/.ssh/id_dsa','')) {
      echo ""Public Key Authentication Successful\n"";
    } else {
      echo ""Public Key Authentication Failed"";
    }
</code></pre>

<p>but the error shown is:-</p>

<blockquote>
  <p>( ! ) Warning: ssh2_auth_pubkey_file(): Authentication failed for root using public key: Callback returned error in /var/www/application/models/miner_model.php on line 95</p>
</blockquote>

<p>line 95 is <code>'/root/.ssh/id_dsa','')) {</code>.</p>

<p>Can anybody suggest a fix?</p>
","<p>The error in this case was that the keys were generated by the root user, but they need to be accessible by the web server group/owner <code>www-data</code>.</p>

<p>I didn't like the idea of keeping ssh keys in a web folder open to <code>www-data</code>, so I moved the key files to a new user's home directory (<code>/home/keyuser/</code>) then made them accessible to <code>www-data</code>. Authentication was successful.</p>

<p>Even though the original error was saying it found the file, it couldn't read the file.</p>

<p>A better debug method is to try reading the file via php:</p>

<pre class=""lang-php prettyprint-override""><code>$prv_key = file_get_contents('/var/www/application/files/id_dsa');
print ""&lt;pre&gt;"";
var_export($prv_key);
print ""&lt;/pre&gt;"";
</code></pre>
","9362","<php><ssh><ssh-keys><private-key><dsa>","11","12","1","2016-05-05 17:53:46","23887971","0","3","311992","","2015-09-10 09:29:45","2014-05-27 02:10:40",""
"11856808","SSH keys in environment variables","<p>So I'm setting up a really awesome hubot setup which will automatically deploy code from github to heroku, via a free heroku nodejs app. I'm having trouble checking out the repo properly on AWS. I created SSH keys on the remote box, had them working and verified it. Then, I added them as Heroku environment variables like this:</p>

<pre><code>~$ heroku config:add PRIVATE_KEY=""...
aoijsdfasoidjfasodijfasodifjaodsifjasdofija""
</code></pre>

<p>I then try to echo both the public and private keys back to their normal location in <code>.ssh/id_rsa</code>, but they ask me for a passphrase, which I didn't set, and always fail.</p>

<p>Any idea how to successfully write a key to an environment variable? I think it's something to do with the linebreaks not showing up correctly.</p>
","<p>AH! Of course.</p>

<p>If you do <code>echo ""$VAR""</code> it retains its formatting. Updating my scripts now.</p>

<p>(i had been working on this all day. Thank you rubber duck.)</p>
","9278","<unix><heroku><ssh><private-key>","11","12","2","2016-11-22 14:53:28","11856859","0","0","551828","","2012-08-08 02:26:34","2012-08-08 02:21:29",""
"11856808","SSH keys in environment variables","<p>So I'm setting up a really awesome hubot setup which will automatically deploy code from github to heroku, via a free heroku nodejs app. I'm having trouble checking out the repo properly on AWS. I created SSH keys on the remote box, had them working and verified it. Then, I added them as Heroku environment variables like this:</p>

<pre><code>~$ heroku config:add PRIVATE_KEY=""...
aoijsdfasoidjfasodijfasodifjaodsifjasdofija""
</code></pre>

<p>I then try to echo both the public and private keys back to their normal location in <code>.ssh/id_rsa</code>, but they ask me for a passphrase, which I didn't set, and always fail.</p>

<p>Any idea how to successfully write a key to an environment variable? I think it's something to do with the linebreaks not showing up correctly.</p>
","<p>If you would like to read from the key file, this works:</p>

<pre><code>heroku config:set PRIVATE_KEY=""$(cat id_rsa)""
</code></pre>
","9278","<unix><heroku><ssh><private-key>","11","3","2","2016-11-22 14:53:28","11856859","0","0","551828","","2012-08-08 02:26:34","2012-08-08 02:21:29",""
"19634294","GitLab SSH keys stopped working","<p>OK, I've stumbled on this topic many times, but this is the first time that none of the regular solutions worked.</p>

<p>I have a CentOS 6.4 server running <a href=""http://gitlab.org/"" rel=""noreferrer"">GitLab</a>. It's been working great with 20+ users and 60+ projects, but about 5 hours ago, my main staging server was unable to connect to the GitLab machine for the first time using key authentication and it prompted for password. I regenerated the RSA key and added it to my deploy keys, but that failed as well.</p>

<p>Next, I tried to create a new user on the staging server, create a key for it, and add it to GitLab but it still fails.</p>

<p>Permissions:</p>

<pre><code>drwxr-x---  22 root root 4.0K Oct 28 13:20 root
</code></pre>

<p>Inside root:</p>

<pre><code>drwx------   2 root root     4096 Oct 28 11:49 .ssh
</code></pre>

<p>Inside .ssh:</p>

<pre><code>-rw-------  1 root root  227 Oct 28 11:48 authorized_keys
-rw-------  1 root root 1675 Oct 28 13:09 id_rsa
-rw-------  1 root root  398 Oct 28 13:09 id_rsa.pub
-rw-r--r--  1 root root  413 Oct 28 11:49 known_hosts
</code></pre>

<p>When I try to connect to the git machine:</p>

<pre><code>OpenSSH_4.3p2, OpenSSL 0.9.8e-fips-rhel5 01 Jul 2008
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: Applying options for *
debug1: Connecting to git.mygitlab.com [212.29.122.24] port 22.
debug1: Connection established.
debug1: permanently_set_uid: 0/0
debug1: identity file /root/.ssh/identity type -1
debug1: identity file /root/.ssh/id_rsa type 1
debug1: identity file /root/.ssh/id_dsa type -1
debug1: loaded 3 keys
debug1: Remote protocol version 2.0, remote software version OpenSSH_5.3
debug1: match: OpenSSH_5.3 pat OpenSSH*
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_4.3
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: server-&gt;client aes128-cbc hmac-md5 none
debug1: kex: client-&gt;server aes128-cbc hmac-md5 none
debug1: SSH2_MSG_KEX_DH_GEX_REQUEST(1024&lt;1024&lt;8192) sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_GROUP
debug1: SSH2_MSG_KEX_DH_GEX_INIT sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_REPLY
debug1: Host 'git.mygitlab.com' is known and matches the RSA host key.
debug1: Found key in /root/.ssh/known_hosts:1
debug1: ssh_rsa_verify: signature correct
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-    mic,password
debug1: Next authentication method: gssapi-with-mic
debug1: Unspecified GSS failure.  Minor code may provide more information
No credentials cache found

debug1: Unspecified GSS failure.  Minor code may provide more information
No credentials cache found

debug1: Unspecified GSS failure.  Minor code may provide more information
No credentials cache found

debug1: Next authentication method: publickey
debug1: Offering public key: /root/.ssh/id_rsa
debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-    mic,password
debug1: Trying private key: /root/.ssh/identity
debug1: Trying private key: /root/.ssh/id_dsa
debug1: Next authentication method: password
git@git.mygitlab.com's password:
</code></pre>

<p>When I add SSH keys through the web interface, they aren't added to <code>.ssh/authorized_keys</code>.</p>

<p>I don't really know what to try next :(</p>
","<p>If keys that you add to GitLab aren't making it into <code>.ssh/authorized_keys</code>:</p>

<ol>
<li><strong>Make sure that sidekiq is running</strong>. Keys are added to gitlab-shell in a Sidekiq worker, so if Sidekiq is down or backlogged, they won't make it in. You can check this in the output of <code>ps -fu git</code> and by checking the ""background jobs"" tab on the admin page.</li>
<li><strong>Ensure that GitLab can execute gitlab-shell properly.</strong> The Sidekiq worker adds keys by <a href=""https://github.com/gitlabhq/gitlabhq/blob/master/lib/gitlab/backend/shell.rb#L124"">exec'ing a <code>gitlab-shell</code> process</a>. In particular, this won't work if the <code>ssh_user</code> setting is incorrect in <a href=""https://github.com/gitlabhq/gitlabhq/blob/master/config/gitlab.yml.example#L32"">gitlab.yml</a>, or if gitlab-shell is installed to a location other than <code>~/gitlab-shell</code> for that user.</li>
<li><strong>Verify that the server's /home partition isn't full.</strong> If the disk that the <code>authorized_keys</code> file is stored on fills up, key appends with fail! This one has gotten me a few times. Use <code>df -h /home</code> to see if you still have room.</li>
</ol>

<p>Check your logs for error messages from gitlab-shell: depending on the problem, error messages could appear in unicorn's or sidekiq's logs.</p>
","9107","<git><github><ssh><private-key><gitlab>","8","5","4","2014-04-23 10:47:37","","10","1","700228","","2013-10-28 14:52:04","2013-10-28 12:02:22",""
"19634294","GitLab SSH keys stopped working","<p>OK, I've stumbled on this topic many times, but this is the first time that none of the regular solutions worked.</p>

<p>I have a CentOS 6.4 server running <a href=""http://gitlab.org/"" rel=""noreferrer"">GitLab</a>. It's been working great with 20+ users and 60+ projects, but about 5 hours ago, my main staging server was unable to connect to the GitLab machine for the first time using key authentication and it prompted for password. I regenerated the RSA key and added it to my deploy keys, but that failed as well.</p>

<p>Next, I tried to create a new user on the staging server, create a key for it, and add it to GitLab but it still fails.</p>

<p>Permissions:</p>

<pre><code>drwxr-x---  22 root root 4.0K Oct 28 13:20 root
</code></pre>

<p>Inside root:</p>

<pre><code>drwx------   2 root root     4096 Oct 28 11:49 .ssh
</code></pre>

<p>Inside .ssh:</p>

<pre><code>-rw-------  1 root root  227 Oct 28 11:48 authorized_keys
-rw-------  1 root root 1675 Oct 28 13:09 id_rsa
-rw-------  1 root root  398 Oct 28 13:09 id_rsa.pub
-rw-r--r--  1 root root  413 Oct 28 11:49 known_hosts
</code></pre>

<p>When I try to connect to the git machine:</p>

<pre><code>OpenSSH_4.3p2, OpenSSL 0.9.8e-fips-rhel5 01 Jul 2008
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: Applying options for *
debug1: Connecting to git.mygitlab.com [212.29.122.24] port 22.
debug1: Connection established.
debug1: permanently_set_uid: 0/0
debug1: identity file /root/.ssh/identity type -1
debug1: identity file /root/.ssh/id_rsa type 1
debug1: identity file /root/.ssh/id_dsa type -1
debug1: loaded 3 keys
debug1: Remote protocol version 2.0, remote software version OpenSSH_5.3
debug1: match: OpenSSH_5.3 pat OpenSSH*
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_4.3
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: server-&gt;client aes128-cbc hmac-md5 none
debug1: kex: client-&gt;server aes128-cbc hmac-md5 none
debug1: SSH2_MSG_KEX_DH_GEX_REQUEST(1024&lt;1024&lt;8192) sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_GROUP
debug1: SSH2_MSG_KEX_DH_GEX_INIT sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_REPLY
debug1: Host 'git.mygitlab.com' is known and matches the RSA host key.
debug1: Found key in /root/.ssh/known_hosts:1
debug1: ssh_rsa_verify: signature correct
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-    mic,password
debug1: Next authentication method: gssapi-with-mic
debug1: Unspecified GSS failure.  Minor code may provide more information
No credentials cache found

debug1: Unspecified GSS failure.  Minor code may provide more information
No credentials cache found

debug1: Unspecified GSS failure.  Minor code may provide more information
No credentials cache found

debug1: Next authentication method: publickey
debug1: Offering public key: /root/.ssh/id_rsa
debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-    mic,password
debug1: Trying private key: /root/.ssh/identity
debug1: Trying private key: /root/.ssh/id_dsa
debug1: Next authentication method: password
git@git.mygitlab.com's password:
</code></pre>

<p>When I add SSH keys through the web interface, they aren't added to <code>.ssh/authorized_keys</code>.</p>

<p>I don't really know what to try next :(</p>
","<p>Well, now i am under 5.1
i did it step by step
4.1 > 4.2 
4.2 > 4.3 
and finally everything is up and running.</p>

<p>Just for 4.1 users to know - > one of the developers added a bad key including the $#root... 
and this is what broke the sync.</p>

<p>Thanks for you help</p>
","9107","<git><github><ssh><private-key><gitlab>","8","3","4","2014-04-23 10:47:37","","10","1","700228","","2013-10-28 14:52:04","2013-10-28 12:02:22",""
"19634294","GitLab SSH keys stopped working","<p>OK, I've stumbled on this topic many times, but this is the first time that none of the regular solutions worked.</p>

<p>I have a CentOS 6.4 server running <a href=""http://gitlab.org/"" rel=""noreferrer"">GitLab</a>. It's been working great with 20+ users and 60+ projects, but about 5 hours ago, my main staging server was unable to connect to the GitLab machine for the first time using key authentication and it prompted for password. I regenerated the RSA key and added it to my deploy keys, but that failed as well.</p>

<p>Next, I tried to create a new user on the staging server, create a key for it, and add it to GitLab but it still fails.</p>

<p>Permissions:</p>

<pre><code>drwxr-x---  22 root root 4.0K Oct 28 13:20 root
</code></pre>

<p>Inside root:</p>

<pre><code>drwx------   2 root root     4096 Oct 28 11:49 .ssh
</code></pre>

<p>Inside .ssh:</p>

<pre><code>-rw-------  1 root root  227 Oct 28 11:48 authorized_keys
-rw-------  1 root root 1675 Oct 28 13:09 id_rsa
-rw-------  1 root root  398 Oct 28 13:09 id_rsa.pub
-rw-r--r--  1 root root  413 Oct 28 11:49 known_hosts
</code></pre>

<p>When I try to connect to the git machine:</p>

<pre><code>OpenSSH_4.3p2, OpenSSL 0.9.8e-fips-rhel5 01 Jul 2008
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: Applying options for *
debug1: Connecting to git.mygitlab.com [212.29.122.24] port 22.
debug1: Connection established.
debug1: permanently_set_uid: 0/0
debug1: identity file /root/.ssh/identity type -1
debug1: identity file /root/.ssh/id_rsa type 1
debug1: identity file /root/.ssh/id_dsa type -1
debug1: loaded 3 keys
debug1: Remote protocol version 2.0, remote software version OpenSSH_5.3
debug1: match: OpenSSH_5.3 pat OpenSSH*
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_4.3
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: server-&gt;client aes128-cbc hmac-md5 none
debug1: kex: client-&gt;server aes128-cbc hmac-md5 none
debug1: SSH2_MSG_KEX_DH_GEX_REQUEST(1024&lt;1024&lt;8192) sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_GROUP
debug1: SSH2_MSG_KEX_DH_GEX_INIT sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_REPLY
debug1: Host 'git.mygitlab.com' is known and matches the RSA host key.
debug1: Found key in /root/.ssh/known_hosts:1
debug1: ssh_rsa_verify: signature correct
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-    mic,password
debug1: Next authentication method: gssapi-with-mic
debug1: Unspecified GSS failure.  Minor code may provide more information
No credentials cache found

debug1: Unspecified GSS failure.  Minor code may provide more information
No credentials cache found

debug1: Unspecified GSS failure.  Minor code may provide more information
No credentials cache found

debug1: Next authentication method: publickey
debug1: Offering public key: /root/.ssh/id_rsa
debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-    mic,password
debug1: Trying private key: /root/.ssh/identity
debug1: Trying private key: /root/.ssh/id_dsa
debug1: Next authentication method: password
git@git.mygitlab.com's password:
</code></pre>

<p>When I add SSH keys through the web interface, they aren't added to <code>.ssh/authorized_keys</code>.</p>

<p>I don't really know what to try next :(</p>
","<p>I just ran into this problem when I switched the GitLab server from HTTP to HTTPS.  Everything looked fine on the web server - logins, etc. were all working normally but git@gitlab SSH connections were failing.  </p>

<p>After looking at #2 in <a href=""https://stackoverflow.com/a/19637026/2162639"">https://stackoverflow.com/a/19637026/2162639</a> (above) I discovered that I needed to modify the <code>gitlab_url</code> setting in <code>/home/git/gitlab-shell/config.yaml</code> to use <code>https://gitlab.server.fqdn</code> instead of <code>http://gitlab.server.fqdn</code>.  I changed that setting, restarted the gitlab service and everything was working normally.</p>
","9107","<git><github><ssh><private-key><gitlab>","8","0","4","2014-04-23 10:47:37","","10","1","700228","","2013-10-28 14:52:04","2013-10-28 12:02:22",""
"19634294","GitLab SSH keys stopped working","<p>OK, I've stumbled on this topic many times, but this is the first time that none of the regular solutions worked.</p>

<p>I have a CentOS 6.4 server running <a href=""http://gitlab.org/"" rel=""noreferrer"">GitLab</a>. It's been working great with 20+ users and 60+ projects, but about 5 hours ago, my main staging server was unable to connect to the GitLab machine for the first time using key authentication and it prompted for password. I regenerated the RSA key and added it to my deploy keys, but that failed as well.</p>

<p>Next, I tried to create a new user on the staging server, create a key for it, and add it to GitLab but it still fails.</p>

<p>Permissions:</p>

<pre><code>drwxr-x---  22 root root 4.0K Oct 28 13:20 root
</code></pre>

<p>Inside root:</p>

<pre><code>drwx------   2 root root     4096 Oct 28 11:49 .ssh
</code></pre>

<p>Inside .ssh:</p>

<pre><code>-rw-------  1 root root  227 Oct 28 11:48 authorized_keys
-rw-------  1 root root 1675 Oct 28 13:09 id_rsa
-rw-------  1 root root  398 Oct 28 13:09 id_rsa.pub
-rw-r--r--  1 root root  413 Oct 28 11:49 known_hosts
</code></pre>

<p>When I try to connect to the git machine:</p>

<pre><code>OpenSSH_4.3p2, OpenSSL 0.9.8e-fips-rhel5 01 Jul 2008
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: Applying options for *
debug1: Connecting to git.mygitlab.com [212.29.122.24] port 22.
debug1: Connection established.
debug1: permanently_set_uid: 0/0
debug1: identity file /root/.ssh/identity type -1
debug1: identity file /root/.ssh/id_rsa type 1
debug1: identity file /root/.ssh/id_dsa type -1
debug1: loaded 3 keys
debug1: Remote protocol version 2.0, remote software version OpenSSH_5.3
debug1: match: OpenSSH_5.3 pat OpenSSH*
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_4.3
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: server-&gt;client aes128-cbc hmac-md5 none
debug1: kex: client-&gt;server aes128-cbc hmac-md5 none
debug1: SSH2_MSG_KEX_DH_GEX_REQUEST(1024&lt;1024&lt;8192) sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_GROUP
debug1: SSH2_MSG_KEX_DH_GEX_INIT sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_REPLY
debug1: Host 'git.mygitlab.com' is known and matches the RSA host key.
debug1: Found key in /root/.ssh/known_hosts:1
debug1: ssh_rsa_verify: signature correct
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-    mic,password
debug1: Next authentication method: gssapi-with-mic
debug1: Unspecified GSS failure.  Minor code may provide more information
No credentials cache found

debug1: Unspecified GSS failure.  Minor code may provide more information
No credentials cache found

debug1: Unspecified GSS failure.  Minor code may provide more information
No credentials cache found

debug1: Next authentication method: publickey
debug1: Offering public key: /root/.ssh/id_rsa
debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-    mic,password
debug1: Trying private key: /root/.ssh/identity
debug1: Trying private key: /root/.ssh/id_dsa
debug1: Next authentication method: password
git@git.mygitlab.com's password:
</code></pre>

<p>When I add SSH keys through the web interface, they aren't added to <code>.ssh/authorized_keys</code>.</p>

<p>I don't really know what to try next :(</p>
","<p>Had to delete all previous keys for the host. Problem is gitlab takes any older keys and if the match does not exist, it fails there. Your working key may be listed later in order and never picked.</p>
","9107","<git><github><ssh><private-key><gitlab>","8","0","4","2014-04-23 10:47:37","","10","1","700228","","2013-10-28 14:52:04","2013-10-28 12:02:22",""
"11527374","Encrypt RSA Private Key with AES 256 in Java","<p>I am writing a secure file sharing application in Java.  The general architecture looks like this:</p>

<ol>
<li>User wishes to encrypt a file for secure sharing between multiple users.</li>
<li>The application generates a random UUID on the client and uses this as the AES 256 password, and encrypts the data with the UUID.</li>
<li>The UUID is then RSA encrypted with each person's public key.  Once per shared user.</li>
<li>Each encrypted UUID packet is stored as part of the file in a custom file header.</li>
<li>The file is then uploaded to a server where others can access it.</li>
<li>The user's can each use their private key to read the AES encryption key and decrypt the file.</li>
</ol>

<p>Here is the catch.  The user's private key must be encrypted and stored on our servers in our database so that the files can be accessed from multiple locations.  The private key will be encrypted with a user selected password on the client prior to being uploaded to the server.  </p>

<p>I would like to do this using AES 256 bit encryption.  And I would like to do the entire thing without relying on BouncyCastle libraries or any 3rd party libraries.  It needs to use the standard Java 5 libraries, which is why I have chosen to use AES 256 encryption and RSA rather than something like PGP.</p>

<p>Can anyone find anything inherently insecure with this approach, or think of a more efficient way to do this?</p>

<p>Edit:</p>

<p>OK, I'm updating the question because all of the answers I am getting are suggesting that I not transmit the private key to the server.  The reason I need the private key on the server is because the user's need to be able to access their data from multiple clients and multiple locations (ie: their iphone, their ipad, their work laptop, their home pc).  They do not want to have to manage and copy their keys from device to device, which is even more insecure than storing their keys on our server because they would just end up emailing them to themselves at that point.</p>
","<p>The big problem with this is using UUIDs. Although UUIDs are (sort of) guaranteed to be unique, quite a bit of what they contain is quite predictable; substantial amounts remain constant across all the UUIDs generated on a single machine. As such, if a person gets access to (for example) their own key, they can probably guess many other people's keys fairly easily.</p>

<p>The other part that's problematic is storing user's private keys on the server. This makes the whole rest of the scheme relatively fragile, since access to those keys obviously gives access to all the rest of the data. It also (apparently) means you'll normally be decrypting the data on the server, so when the user accesses that data across the network, it'll either need to be re-encrypted for transmission, and decrypted on the users's machine, or else you'll be transmitting the data in the clear (thus rendering most of the encryption useless).</p>

<p>Edit: As to how I think I'd do this:</p>

<p>I'd have a list of <em>public</em> keys on the server. When a client wants to share a file with some other clients, it obtains the public keys for those clients from the server. It then generates a secure random key, and encrypts the data with that key. It then encrypts the random key with the public keys of all the other clients that are supposed to be able to access the data. Put those together into a stream, and transmit them to the server. The other clients can then download the stream, decrypt the key with their private key, and use that to decrypt the data itself.</p>

<p>This means each client's private key remains truly private -- it never has to leave their machine in any form. All they ever have to share with the rest of the world is their public key (which, by definition, shouldn't cause a security problem).</p>

<p>With that, the two obvious lines of attack are against the random number generator, and against RSA itself. For the random number generator, I'd use Java's SecureRandom -- this is exactly the sort of purpose for which it's intended, and if memory serves it's been pretty carefully examined and significant breaks against it seem fairly unlikely.</p>

<p>I won't try to comment on the security of RSA itself. For now, I think your primary concern is with the protocol, not the encryption algorithm proper. Suffice to say that if RSA were significantly broken, you'd obviously need to change your code, but you'd have a <em>lot</em> of company.</p>

<p>With this, it's pretty much up to the client to store their private keys securely. I like smart cards for that job, but there are quite a few alternatives. From the viewpoint of the server and protocol, it's no longer really a factor at all though.</p>

<p>Edit 2: As for dealing with multiple devices, I think I'd simply treat each device as a separate user, with its own public/private key pair. I'd then (probably) group those together by the actual users, so I can easily choose ""Joe Blow"" to give him access on all his devices -- but with a hierarchical display, I could also pretty easily restrict access to a subset of those, so if I want to share it with Joe on his office machine, but it's sensitive enough that I don't want it going where somebody might look over his shoulder while he looks at it, I can pretty easily do that too.</p>

<p>This keeps life simple for the users, but retains the same basic security model (i.e., private keys remain private).</p>
","9097","<java><encryption><aes><rsa><private-key>","6","5","4","2012-07-17 19:46:07","11528491","5","6","333973","","2012-07-17 18:33:46","2012-07-17 17:05:43",""
"11527374","Encrypt RSA Private Key with AES 256 in Java","<p>I am writing a secure file sharing application in Java.  The general architecture looks like this:</p>

<ol>
<li>User wishes to encrypt a file for secure sharing between multiple users.</li>
<li>The application generates a random UUID on the client and uses this as the AES 256 password, and encrypts the data with the UUID.</li>
<li>The UUID is then RSA encrypted with each person's public key.  Once per shared user.</li>
<li>Each encrypted UUID packet is stored as part of the file in a custom file header.</li>
<li>The file is then uploaded to a server where others can access it.</li>
<li>The user's can each use their private key to read the AES encryption key and decrypt the file.</li>
</ol>

<p>Here is the catch.  The user's private key must be encrypted and stored on our servers in our database so that the files can be accessed from multiple locations.  The private key will be encrypted with a user selected password on the client prior to being uploaded to the server.  </p>

<p>I would like to do this using AES 256 bit encryption.  And I would like to do the entire thing without relying on BouncyCastle libraries or any 3rd party libraries.  It needs to use the standard Java 5 libraries, which is why I have chosen to use AES 256 encryption and RSA rather than something like PGP.</p>

<p>Can anyone find anything inherently insecure with this approach, or think of a more efficient way to do this?</p>

<p>Edit:</p>

<p>OK, I'm updating the question because all of the answers I am getting are suggesting that I not transmit the private key to the server.  The reason I need the private key on the server is because the user's need to be able to access their data from multiple clients and multiple locations (ie: their iphone, their ipad, their work laptop, their home pc).  They do not want to have to manage and copy their keys from device to device, which is even more insecure than storing their keys on our server because they would just end up emailing them to themselves at that point.</p>
","<p>It all depends on how ""secure"" you want the encryption to be.  Obviously RSA is a well document/accepted standard for PKI.  That being said, any time you provide the plaintext as well as the encrypted text, it makes it significantly easier for a hacker to decrypt the ciphertext knowing part of the plaintext.  Here, you are doing precisely that.  Although you are only transmitting the encrypted UUID, by having the same plaintext encrypted with multiple keys gives an attacker significant insight into the payload.  Furthermore, if the hacked is actually one of the recipients, he is able to decode the UUID, and thereby automatically knows the plaintext that is being encrypted by the other users' public keys.</p>

<p>This is not likely a critical issue for you, but just thought I would point out a security risk.</p>

<p>I am not entirely sure why you need to store the user's private key, however.  Furthermore, by using a simple password to encrypt the private key, you have basically reduced the overall security of the entire system to the strength of the user's password.  Finally, if the user loses his password, he is toast; no way to recover any data.</p>

<p>I did something similar in the past but stored the results in a DB.  However, I used the BouncyCastle libraries at the time, so am not sure how to accomplish this without them.</p>
","9097","<java><encryption><aes><rsa><private-key>","6","-1","4","2012-07-17 19:46:07","11528491","5","6","333973","","2012-07-17 18:33:46","2012-07-17 17:05:43",""
"11527374","Encrypt RSA Private Key with AES 256 in Java","<p>I am writing a secure file sharing application in Java.  The general architecture looks like this:</p>

<ol>
<li>User wishes to encrypt a file for secure sharing between multiple users.</li>
<li>The application generates a random UUID on the client and uses this as the AES 256 password, and encrypts the data with the UUID.</li>
<li>The UUID is then RSA encrypted with each person's public key.  Once per shared user.</li>
<li>Each encrypted UUID packet is stored as part of the file in a custom file header.</li>
<li>The file is then uploaded to a server where others can access it.</li>
<li>The user's can each use their private key to read the AES encryption key and decrypt the file.</li>
</ol>

<p>Here is the catch.  The user's private key must be encrypted and stored on our servers in our database so that the files can be accessed from multiple locations.  The private key will be encrypted with a user selected password on the client prior to being uploaded to the server.  </p>

<p>I would like to do this using AES 256 bit encryption.  And I would like to do the entire thing without relying on BouncyCastle libraries or any 3rd party libraries.  It needs to use the standard Java 5 libraries, which is why I have chosen to use AES 256 encryption and RSA rather than something like PGP.</p>

<p>Can anyone find anything inherently insecure with this approach, or think of a more efficient way to do this?</p>

<p>Edit:</p>

<p>OK, I'm updating the question because all of the answers I am getting are suggesting that I not transmit the private key to the server.  The reason I need the private key on the server is because the user's need to be able to access their data from multiple clients and multiple locations (ie: their iphone, their ipad, their work laptop, their home pc).  They do not want to have to manage and copy their keys from device to device, which is even more insecure than storing their keys on our server because they would just end up emailing them to themselves at that point.</p>
","<p>The scheme you outline is equivalent to CMS (the standard underlying S/MIME) and PGP; fundamentally, it is secure. In CMS, this mode is called ""key transport"". You could also use multi-party ""key agreement,"" with an algorithm like DH or ECDH.</p>

<p>The only problem is that you are using poorly chosen keys for AES.</p>

<p>I can't think of any reason to use a random UUID, which contains non-random bits. Just use the normal key generation mechanism of the Java Cryptography Architecture. Keys, plaintext, and ciphertext should all be represented as byte sequences, unless you need to accommodate some external storage or transport that only accommodates text.</p>

<pre><code>Iterable&lt;Certificate&gt; recipients = null;
KeyGenerator gen = KeyGenerator.getInstance(""AES"");
gen.init(256);
SecretKey contentEncryptionKey = gen.generateKey();
</code></pre>

<p>Initialize the AES cipher and let the provider choose an IV.</p>

<pre><code>Cipher contentCipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
contentCipher.init(Cipher.ENCRYPT_MODE, contentEncryptionKey);
AlgorithmParameters params = contentCipher.getParameters();
byte[] iv = params.getParameterSpec(IvParameterSpec.class).getIV();
</code></pre>

<p>For each recipient, initialize the RSA cipher and encrypt the AES key.</p>

<pre><code>Cipher keyEncryptionCipher = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
for (Certificate recipient : recipients) {
  keyEncryptionCipher.init(Cipher.WRAP_MODE, recipient);
  byte[] encryptedKey = keyEncryptionCipher.wrap(contentEncryptionKey);
  /* Store the encryptedKey with an identifier for the recipient... */
}
/* Store the IV... */ 
/* Encrypt the file... */
</code></pre>

<p>Having users select and remember passwords that give 256 bits of effective strength is unreasonable. To get that strength, you'd have to randomly choose passwords, encode them as text, and have users write them down on a card. If you really need that much strength, you could check out a smart-card&ndash;based solution for storing the users' RSA keys.</p>

<p>I'd highly recommend using a CMS library to store your files. It will increase your chances that the protocol you're using is safe, the code you are using has had more review, and that other tools, libraries, and systems can inter-operate with the encrypted messages. BouncyCastle's API is a little obscure, but it might be worth learning it.</p>

<p>(I can't remember if Java 5 supports ""RSA/ECB/OAEPWithSHA-512AndMGF1Padding""; if it does, you should use that instead of PKCS1Padding.)</p>
","9097","<java><encryption><aes><rsa><private-key>","6","2","4","2012-07-17 19:46:07","11528491","5","6","333973","","2012-07-17 18:33:46","2012-07-17 17:05:43",""
"11527374","Encrypt RSA Private Key with AES 256 in Java","<p>I am writing a secure file sharing application in Java.  The general architecture looks like this:</p>

<ol>
<li>User wishes to encrypt a file for secure sharing between multiple users.</li>
<li>The application generates a random UUID on the client and uses this as the AES 256 password, and encrypts the data with the UUID.</li>
<li>The UUID is then RSA encrypted with each person's public key.  Once per shared user.</li>
<li>Each encrypted UUID packet is stored as part of the file in a custom file header.</li>
<li>The file is then uploaded to a server where others can access it.</li>
<li>The user's can each use their private key to read the AES encryption key and decrypt the file.</li>
</ol>

<p>Here is the catch.  The user's private key must be encrypted and stored on our servers in our database so that the files can be accessed from multiple locations.  The private key will be encrypted with a user selected password on the client prior to being uploaded to the server.  </p>

<p>I would like to do this using AES 256 bit encryption.  And I would like to do the entire thing without relying on BouncyCastle libraries or any 3rd party libraries.  It needs to use the standard Java 5 libraries, which is why I have chosen to use AES 256 encryption and RSA rather than something like PGP.</p>

<p>Can anyone find anything inherently insecure with this approach, or think of a more efficient way to do this?</p>

<p>Edit:</p>

<p>OK, I'm updating the question because all of the answers I am getting are suggesting that I not transmit the private key to the server.  The reason I need the private key on the server is because the user's need to be able to access their data from multiple clients and multiple locations (ie: their iphone, their ipad, their work laptop, their home pc).  They do not want to have to manage and copy their keys from device to device, which is even more insecure than storing their keys on our server because they would just end up emailing them to themselves at that point.</p>
","<p>OK, this question is asking for a protocol discussion, so it is not completely according to stackoverflow's standards. That said, let's see if we can make some remarks anyway :) :</p>

<ol>
<li>The Bouncy Castle PGP libraries have a very permissive license, so you can even copy them into a sub-package within your code;</li>
<li>Besides PGP there are also other standard container formats such as CMS or XML encryption, although the latter might not be such a good general purpose format;</li>
<li>Instead of UUID's, I would strongly suggest to use a well seeded PRNG such as the Java JCE ""SHA1PRNG"" to create the AES keys - I don't see any strong reason why you should rely on something like an UUID in your scheme;</li>
<li>AES keys are supposed to consist of random bits to have enough entropy, thinking of them as ""passwords"" is leading into a trap: you cannot use a String as a secure AES key;</li>
<li>The user will have to trust your application and server, you <em>are</em> acting as a trusted third party: you can send user's passwords to your server, you can send incorrect public keys to the users etc. etc. etc.</li>
<li>Your scheme is not protected against any man in the middle attacks (and many argue this cannot be done without using SSL)</li>
<li>Instead of directly encrypting with a password, you should look into something like Password Based Encryption PBKDF2 to encrypt the RSA private key;</li>
<li>Try and add integrity protection when encrypting, from Java 7 onwards you may use AES in GCM mode, it's well worth it.</li>
</ol>
","9097","<java><encryption><aes><rsa><private-key>","6","1","4","2012-07-17 19:46:07","11528491","5","6","333973","","2012-07-17 18:33:46","2012-07-17 17:05:43",""
"8389099","Secure FTP using private key authentication in java","<pre><code>import com.jcraft.jsch.*;
import com.jcraft.jsch.JSchException;
import oracle.jdbc.driver.OracleDriver;
import java.io.*;
import java.util.*;
import java.sql.*;
import java.net.*;

public class SecureFTP {

public static void main(String[] args) throws IOException , ClassNotFoundException, JSchException, SftpException{



    JSch jsch = new JSch();
    File file = new File(""/home/xxxxx/.ssh/id_rsa"");
    Session session = null;
    URL keyFileURL = null;
    URI keyFileURI = null;
    if (file.exists())
    {
        keyFileURL = file.toURL();
        if (keyFileURL == null)
        {
            System.out.println(""what"");
            throw new RuntimeException(""Key file not found in classpath"");
        }
    }
    else System.out.println(""FIle not found"");
    try{
             keyFileURI = keyFileURL.toURI();
    }
    catch(Exception URISyntaxException)
    {
        System.out.println(""Wrong URL"");
}


    String privateKey = "".ssh/id_rsa"";

    //jsch.addIdentity(privateKey);

    jsch.addIdentity(new File(keyFileURI).getAbsolutePath());
    System.out.println(new File(keyFileURI).getAbsolutePath() + "" LOL"");
    session = jsch.getSession(""username"", ""servername"");
    //session.setPassword(""password"");

    java.util.Properties config = new java.util.Properties();
    config.put(""StrictHostKeyChecking"", ""no"");
    session.setConfig(config);

    // connect
    session.connect();

    // get SFTP channel
    Channel channel = session.openChannel(""sftp"");
    channel.connect();
    ChannelSftp schannel = (ChannelSftp) channel;

    FileInputStream fis = new FileInputStream(sourcefile);
    schannel.put(fis, destinationfile );
    fis.close();



}

    schannel.exit();
    session.disconnect();

}

}
</code></pre>

<p>As you can see from the code I have commented out, I have tried everything possible to get this working and the only thing that works is if I set the password directly. I am trying to use the RSA private key generated, but I keep getting an auth fail. </p>

<p>I have added the public key to the list of authorized keys on the target server. And there is no passphrase.</p>

<p>Is there something else I am supposed to do? Like say, while generating the keys? Is there a step I am missing? </p>

<p>Is there another library I can use to implement the same function?</p>
","<p>Have you have copied the key into the file $HOME/.ssh/authorized_keys on the target server? If so, you should probably mention that. If not, that is required for this to work. Also, are you generating the key without a password? If the private key is password protected, you will need to provide that password to <code>addIdentity</code>.</p>

<p>After verifying those things, I'd recommend trying to connect via the command line using OpenSSH, as the Java code you have here looks correct. If the command line does not work, invoke it with -vvv to get verbose output about what it is doing. It is possible that the server is configured with <code>PubkeyAuthentication</code> set to no.</p>
","9071","<java><solaris><rsa><sftp><private-key>","0","0","2","2011-12-05 21:45:33","8389739","3","","813040","","2011-12-05 17:51:28","2011-12-05 17:13:19",""
"8389099","Secure FTP using private key authentication in java","<pre><code>import com.jcraft.jsch.*;
import com.jcraft.jsch.JSchException;
import oracle.jdbc.driver.OracleDriver;
import java.io.*;
import java.util.*;
import java.sql.*;
import java.net.*;

public class SecureFTP {

public static void main(String[] args) throws IOException , ClassNotFoundException, JSchException, SftpException{



    JSch jsch = new JSch();
    File file = new File(""/home/xxxxx/.ssh/id_rsa"");
    Session session = null;
    URL keyFileURL = null;
    URI keyFileURI = null;
    if (file.exists())
    {
        keyFileURL = file.toURL();
        if (keyFileURL == null)
        {
            System.out.println(""what"");
            throw new RuntimeException(""Key file not found in classpath"");
        }
    }
    else System.out.println(""FIle not found"");
    try{
             keyFileURI = keyFileURL.toURI();
    }
    catch(Exception URISyntaxException)
    {
        System.out.println(""Wrong URL"");
}


    String privateKey = "".ssh/id_rsa"";

    //jsch.addIdentity(privateKey);

    jsch.addIdentity(new File(keyFileURI).getAbsolutePath());
    System.out.println(new File(keyFileURI).getAbsolutePath() + "" LOL"");
    session = jsch.getSession(""username"", ""servername"");
    //session.setPassword(""password"");

    java.util.Properties config = new java.util.Properties();
    config.put(""StrictHostKeyChecking"", ""no"");
    session.setConfig(config);

    // connect
    session.connect();

    // get SFTP channel
    Channel channel = session.openChannel(""sftp"");
    channel.connect();
    ChannelSftp schannel = (ChannelSftp) channel;

    FileInputStream fis = new FileInputStream(sourcefile);
    schannel.put(fis, destinationfile );
    fis.close();



}

    schannel.exit();
    session.disconnect();

}

}
</code></pre>

<p>As you can see from the code I have commented out, I have tried everything possible to get this working and the only thing that works is if I set the password directly. I am trying to use the RSA private key generated, but I keep getting an auth fail. </p>

<p>I have added the public key to the list of authorized keys on the target server. And there is no passphrase.</p>

<p>Is there something else I am supposed to do? Like say, while generating the keys? Is there a step I am missing? </p>

<p>Is there another library I can use to implement the same function?</p>
","<p>Make sure the necessary files exist (id_rsa and id_rsa.pub on the client, authorized_keys on the server). Make sure you can use public key authentication with another tool, like <code>ssh</code>, using these files.</p>

<p>If that looks alright, the problem may be with your Java security provider. Read on if you think you have the right files in place.</p>

<p>There are different formats for RSA private key storage, and SSH uses one that is not standard. Most providers expect something called a CRT RSA key, and when JSch doesn't give them a key in that format, they raise an exception which JSch silently eats and goes on to the next authentication method.</p>

<p>What is your provider? The following snippet will help you find out:</p>

<pre><code>import java.security.KeyFactory;
…

KeyFactory f = KeyFactory.getInstance(""RSA"");
System.out.println(f.getProvider().getName());
</code></pre>

<hr>

<p>Update: I did some checking around, and as of Java 5, the SunPKCS11 provider is installed with the highest precedence on Solaris systems, for performance. Since I don't run Solaris, I can't test it, but I believe this may be causing the problem.</p>

<p>JSch doesn't allow you to specify the provider to use for this operation through its API, so you will have to change the precedence of the installed providers. In fact, I'd suggest trying to remove the SunPKCS11 from this application; run this code once when your application starts up:</p>

<pre><code>Security.removeProvider(""SunPKCS11-Solaris"");
</code></pre>
","9071","<java><solaris><rsa><sftp><private-key>","0","2","2","2011-12-05 21:45:33","8389739","3","","813040","","2011-12-05 17:51:28","2011-12-05 17:13:19",""
"8186942","SSH to EC2 but get Permission denied (publickey)","<p>I generated the key-pair by EC2-Console, and then store it in ~/.ssh/iForests_ABetADay.pem.<br>
After that, chmod 400 iForests_ABetADay.pem, and ssh -i iForests_ABetADay.pem ubuntu@46.51.244.48 -v.<br>
I did login yesterday, but now the error message I got is:<br>
(Google a lot, but still can not find out a way to solve it...)<br></p>

<pre><code>OpenSSH_5.6p1, OpenSSL 0.9.8r 8 Feb 2011
debug1: Reading configuration data /etc/ssh_config
debug1: Applying options for *
debug1: Connecting to 46.51.244.48 [46.51.244.48] port 22.
debug1: Connection established.
debug1: identity file iForests_ABetADay.pem type -1
debug1: identity file iForests_ABetADay.pem-cert type -1
debug1: Remote protocol version 2.0, remote software version OpenSSH_5.8p1 Debian-1ubuntu3
debug1: match: OpenSSH_5.8p1 Debian-1ubuntu3 pat OpenSSH*
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_5.6
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: server-&gt;client aes128-ctr hmac-md5 none
debug1: kex: client-&gt;server aes128-ctr hmac-md5 none
debug1: SSH2_MSG_KEX_DH_GEX_REQUEST(1024&lt;1024&lt;8192) sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_GROUP
debug1: SSH2_MSG_KEX_DH_GEX_INIT sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_REPLY
debug1: Host '46.51.244.48' is known and matches the RSA host key.
debug1: Found key in /Users/iforests/.ssh/known_hosts:17
debug1: ssh_rsa_verify: signature correct
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: Roaming not allowed by server
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: publickey
debug1: Next authentication method: publickey
debug1: Trying private key: iForests_ABetADay.pem
debug1: read PEM private key done: type RSA
debug1: Authentications that can continue: publickey
debug1: No more authentication methods to try.
Permission denied (publickey).
</code></pre>
","<p>The output clearly shows that it's trying wrong key. I suggest that you check</p>

<pre><code> ~/.ssh/config
 /etc/ssh/ssh_config
 /etc/ssh_config
</code></pre>

<p>to see if something forces your client to use <code>iForests_ABetADay.pem</code>. According to log it must be <code>/etc/ssh_config</code>.</p>
","8936","<ssh><amazon-ec2><private-key><permission-denied>","7","6","1","2011-11-18 18:45:37","8187162","1","1","928315","","2011-11-18 18:45:37","2011-11-18 18:06:52",""
"15291778","Convert DER formatted private key file to PEM form","<p>I have a .prv file which is probably DER formatted private key file.
This file is used to certificate Cable Modem.</p>

<p>I want to convert this file to PEM formatted one.
I tried with openssl tool but none of below commands works.</p>

<pre><code>openssl x509 -inform der -in FILENAME.prv -out FILENAME.key
openssl rsa -inform der -in FILENAME.prv -out FILENAME.key
openssl pkcs8 -inform der -in FILENAME.prv -out FILENAME.key 
</code></pre>

<p>Here is some beginning of the .prv file contents.</p>

<pre><code>00000000h: 30 82 02 76 02 01 00 30 0D 06 09 2A 86 48 86 F7 ; 0?v...0...*낷놑
00000010h: 0D 01 01 01 05 00 04 82 02 60 30 82 02 5C 02 01 ; .......?`0?\..
00000020h: 00 02 81 81 00 BB 0F 6E DE 49 59 13 4A 44 12 AF ; ..걖.?n?Y.JD.?
00000030h: 84 F0 B7 13 18 C8 F8 43 AE 09 A6 8A 6C 9B F0 AC ; 꾭?.힉C?쫲l쏊?
00000040h: 90 1F 48 C2 75 75 41 78 74 FA DD 08 19 E0 C0 BF ; ?H혋uAxt玹..敾?
00000050h: CC 98 D7 72 B7 C3 8C 4A 2A B9 BC 95 B6 9A 54 17 ; ??련똉*뭡빒숿.
00000060h: 7C 5A 57 78 E1 68 87 69 18 56 8E 5D F4 D5 36 46 ; |ZWx?뇁.V?添6F
00000070h: DF 0F 6D 54 FC 30 B6 16 AD AF D2 C6 A8 D0 C1 F7 ; ?mT???盧ⓓ직
</code></pre>

<p>Is there anything more I can try??</p>
","","8921","<openssl><private-key><pem><der>","1","","0","2013-03-08 10:25:29","","4","","","","","2013-03-08 10:25:29",""
"51228645","How can I encrypt with a RSA private key in python?","<p>Is it possible to encrypt a message with a private key in python using pycryptodome or any other library? I know that you are not supposed to encrypt with the private key and decrypt with the public key, but my purpose is to encrypt with the private one so the receiver could be sure that the message was send by the real author. More than secure encryption I'm looking for some kind of obfuscation. I want to do an app where the message is public but it can only be seen if you have the public key.
I've tried to do this:</p>

<pre><code>from Crypto import Random
from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_OAEP
import base64


def generate_keys():
    modulus_lenght = 256 * 4
    private_key = RSA.generate(modulus_lenght, Random.new().read)
    public_key = private_key.publickey()
    return private_key, public_key

def encrypt_private_key(a_message, private_key):
    encryptor = PKCS1_OAEP.new(private_key)
    encrypted_msg = encryptor.encrypt(a_message)
    encoded_encrypted_msg = base64.b64encode(encrypted_msg)
   return encoded_encrypted_msg

def decrypt_public_key(encoded_encrypted_msg, public_key):
    encryptor = PKCS1_OAEP.new(public_key)
    decoded_encrypted_msg = base64.b64decode(encoded_encrypted_msg)
    decoded_decrypted_msg = encryptor.decrypt(decoded_encrypted_msg)
    return decoded_decrypted_msg

private_key, public_key = generate_keys()

message = ""Hello world""

encoded = encrypt_private_key(message, private_key)
decoded = decrypt_public_key(encoded, public_key)

print decoded
</code></pre>

<p>But it raises the next error: TypeError: This is not a private key.</p>
","<p><strong>Short answer</strong></p>

<ul>
<li>the code that you are using doesn't allow you to do that for security reasons</li>
<li>alternative code below</li>
</ul>

<p><strong>Long answer</strong> </p>

<p>I was curious about your problem and then I started to try to code</p>

<p>After a while I realized that if you run this snippet you will see that it correctly works:</p>

<pre><code>#!/usr/bin/env python

from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_OAEP
import base64

def generate_keys():
    modulus_length = 1024

    key = RSA.generate(modulus_length)
    #print (key.exportKey())

    pub_key = key.publickey()
    #print (pub_key.exportKey())

    return key, pub_key

def encrypt_private_key(a_message, private_key):
    encryptor = PKCS1_OAEP.new(private_key)
    encrypted_msg = encryptor.encrypt(a_message)
    print(encrypted_msg)
    encoded_encrypted_msg = base64.b64encode(encrypted_msg)
    print(encoded_encrypted_msg)
    return encoded_encrypted_msg

def decrypt_public_key(encoded_encrypted_msg, public_key):
    encryptor = PKCS1_OAEP.new(public_key)
    decoded_encrypted_msg = base64.b64decode(encoded_encrypted_msg)
    print(decoded_encrypted_msg)
    decoded_decrypted_msg = encryptor.decrypt(decoded_encrypted_msg)
    print(decoded_decrypted_msg)
    #return decoded_decrypted_msg

def main():
  private, public = generate_keys()
  print (private)
  message = b'Hello world'
  encoded = encrypt_private_key(message, public)
  decrypt_public_key(encoded, private)

if __name__== ""__main__"":
  main()
</code></pre>

<p>but if you now change two of the final lines [i.e. the role of the keys] into:</p>

<pre><code>    encoded = encrypt_private_key(message, private)
    decrypt_public_key(encoded, public)
</code></pre>

<p>and rerun the program you will get the <code>TypeError: No private key</code></p>

<p>Let me quote from <a href=""https://stackoverflow.com/a/10970540/4092588"">this great answer</a>: </p>

<p>""As it turns out, PyCrypto is only trying to prevent you from mistaking one for the other here, OpenSSL or Ruby OpenSSL allow you for example to do both: public_encrypt/public_decrypt and private_encrypt/private_decrypt</p>

<p>[...]</p>

<p>Additional things need to be taken care of to make the result usable in practice. And that's why there is a dedicated <a href=""https://www.dlitz.net/software/pycrypto/api/current/Crypto.Signature.PKCS1_PSS-module.html"" rel=""noreferrer"">signature package</a> in PyCrypto - this effectively does what you described, but also additionally takes care of the things I mentioned""</p>

<p>Adapting <a href=""https://gist.github.com/dennislwy/0194036234445776d48ad2fb594457d4"" rel=""noreferrer"">this link</a> I came to the following code that should solve your question:</p>

<pre><code># RSA helper class for pycrypto
# Copyright (c) Dennis Lee
# Date 21 Mar 2017

# Description:
# Python helper class to perform RSA encryption, decryption, 
# signing, verifying signatures &amp; keys generation

# Dependencies Packages:
# pycrypto 

# Documentation:
# https://www.dlitz.net/software/pycrypto/api/2.6/

from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_OAEP
from Crypto.Signature import PKCS1_v1_5
from Crypto.Hash import SHA512, SHA384, SHA256, SHA, MD5
from Crypto import Random
from base64 import b64encode, b64decode
import rsa

hash = ""SHA-256""

def newkeys(keysize):
    random_generator = Random.new().read
    key = RSA.generate(keysize, random_generator)
    private, public = key, key.publickey()
    return public, private

def importKey(externKey):
    return RSA.importKey(externKey)

def getpublickey(priv_key):
    return priv_key.publickey()

def encrypt(message, pub_key):
    #RSA encryption protocol according to PKCS#1 OAEP
    cipher = PKCS1_OAEP.new(pub_key)
    return cipher.encrypt(message)

def decrypt(ciphertext, priv_key):
    #RSA encryption protocol according to PKCS#1 OAEP
    cipher = PKCS1_OAEP.new(priv_key)
    return cipher.decrypt(ciphertext)

def sign(message, priv_key, hashAlg=""SHA-256""):
    global hash
    hash = hashAlg
    signer = PKCS1_v1_5.new(priv_key)
    if (hash == ""SHA-512""):
        digest = SHA512.new()
    elif (hash == ""SHA-384""):
        digest = SHA384.new()
    elif (hash == ""SHA-256""):
        digest = SHA256.new()
    elif (hash == ""SHA-1""):
        digest = SHA.new()
    else:
        digest = MD5.new()
    digest.update(message)
    return signer.sign(digest)

def verify(message, signature, pub_key):
    signer = PKCS1_v1_5.new(pub_key)
    if (hash == ""SHA-512""):
        digest = SHA512.new()
    elif (hash == ""SHA-384""):
        digest = SHA384.new()
    elif (hash == ""SHA-256""):
        digest = SHA256.new()
    elif (hash == ""SHA-1""):
        digest = SHA.new()
    else:
        digest = MD5.new()
    digest.update(message)
    return signer.verify(digest, signature)

def main():
    msg1 = b""Hello Tony, I am Jarvis!""
    msg2 = b""Hello Toni, I am Jarvis!""

    keysize = 2048

    (public, private) = rsa.newkeys(keysize)

    # https://docs.python.org/3/library/base64.html
    # encodes the bytes-like object s
    # returns bytes
    encrypted = b64encode(rsa.encrypt(msg1, private))
    # decodes the Base64 encoded bytes-like object or ASCII string s
    # returns the decoded bytes
    decrypted = rsa.decrypt(b64decode(encrypted), private)
    signature = b64encode(rsa.sign(msg1, private, ""SHA-512""))

    verify = rsa.verify(msg1, b64decode(signature), public)

    #print(private.exportKey('PEM'))
    #print(public.exportKey('PEM'))
    print(""Encrypted: "" + encrypted.decode('ascii'))
    print(""Decrypted: '%s'"" % (decrypted))
    print(""Signature: "" + signature.decode('ascii'))
    print(""Verify: %s"" % verify)
    rsa.verify(msg2, b64decode(signature), public)

if __name__== ""__main__"":
    main()
</code></pre>

<p>Final notes: </p>

<ul>
<li>the last <code>print</code>s have <code>ascii</code> because as stated <a href=""https://stackoverflow.com/a/45151058/4092588"">here</a> ""In case of base64 however, all characters are valid ASCII characters""</li>
<li>in this case we are using the same key - the private one - both for encrypting and decrypting, so yes: we would end up to be symmetric but...</li>
<li>but - as stated <a href=""https://stackoverflow.com/a/20059249/4092588"">here</a> - ""The public key is PUBLIC - it's something you would readily share and thus would be easily disseminated. There's no added value in that case compared to using a symmetric cipher and a shared key"" plus ""Conceptually, ""encrypting"" with the private key is more useful for signing a message whereas the ""decryption"" using the public key is used for verifying the message""</li>
<li>the same identical last principle is expressed in <a href=""https://crypto.stackexchange.com/a/2124"">this answer</a> - ""Typically [...] we say sign with the private key and verify with the public key""</li>
</ul>
","8821","<python><rsa><private-key><public-key><encryption-asymmetric>","3","6","1","2018-07-09 07:37:04","51230724","2","3","","","","2018-07-08 03:38:03",""
"3241399","BouncyCastle create AsymmetricCipherKeyPair from existing keys?","<p>I have two <code>AssymetricAlgorithm</code> RSA keys that I have pulled out of a certificate that was in my keystore. One is the Public Key and the other the Private. Is there a way of getting this keypair into a BouncyCastle AsymmetricCipherKeyPair? BouncyCastle's <code>AsymmetricCipherKeyPair</code> expects a public and private <code>AsymmetricKeyParameter</code> however I have no way of getting my Private key without it being an instance of <code>AssymetricAlgorithm</code>.</p>
","<p>The answer to this lies here: </p>

<p><a href=""https://stackoverflow.com/questions/3240222/get-private-key-from-bouncycastle-x509-certificate-c"">Get Private Key from BouncyCastle X509 Certificate? C#</a></p>
","8774","<c#><bouncycastle><pki><private-key>","0","1","2","2017-12-28 04:00:38","3246774","1","","","","","2010-07-13 20:47:36",""
"3241399","BouncyCastle create AsymmetricCipherKeyPair from existing keys?","<p>I have two <code>AssymetricAlgorithm</code> RSA keys that I have pulled out of a certificate that was in my keystore. One is the Public Key and the other the Private. Is there a way of getting this keypair into a BouncyCastle AsymmetricCipherKeyPair? BouncyCastle's <code>AsymmetricCipherKeyPair</code> expects a public and private <code>AsymmetricKeyParameter</code> however I have no way of getting my Private key without it being an instance of <code>AssymetricAlgorithm</code>.</p>
","<p>I think this will help if key is marked as exportable</p>

<pre><code>RSACryptoServiceProvider key = (RSACryptoServiceProvider)X509Certificate2object.PrivateKey;
RSAParameters rsaparam = key.ExportParameters(true);
AsymmetricCipherKeyPair keypair = DotNetUtilities.GetRsaKeyPair(rsaparam);
</code></pre>
","8774","<c#><bouncycastle><pki><private-key>","0","1","2","2017-12-28 04:00:38","3246774","1","","","","","2010-07-13 20:47:36",""
"19324630","SFTP C# library with PuTTY private key (PPK) support","<p>I need a C# library that allows to send files to a SFTP server and that it accepts private keys in PuTTY format (PPK).</p>

<p>Does anyone know of such a library?</p>
","<p>You can try <a href=""https://winscp.net/eng/docs/library"" rel=""noreferrer"">WinSCP .NET assembly</a> (C# wrapper around WinSCP scripting interface):  </p>

<p>Its <a href=""https://winscp.net/eng/docs/library_sessionoptions#sshprivatekeypath"" rel=""noreferrer""><code>SessionOptions.SshPrivateKeyPath</code></a> accepts a path to <code>.ppk</code> file.<br>
<a href=""https://winscp.net/eng/docs/library_sessionoptions"" rel=""noreferrer"">https://winscp.net/eng/docs/library_sessionoptions</a></p>

<p><em>(I'm the author of WinSCP)</em></p>

<hr>

<p>Or you can use <a href=""https://the.earth.li/~sgtatham/putty/latest/htmldoc/Chapter8.html#pubkey-puttygen"" rel=""noreferrer"">PuTTYgen</a> to convert the <code>.ppk</code> private key file to a format supported by your preferred SSH/SFTP library.</p>
","8526","<c#><.net><sftp><putty><private-key>","1","10","1","2018-06-01 20:01:43","19326537","0","1","850848","","2018-06-01 20:01:43","2013-10-11 18:11:07","2014-06-02 21:40:23"
"8531162","sign a string with private key","<p>can someone please explain me how to sign a string or byte array using private key? PLEASE. two weeks I'm trying to achieve it.
I have code: </p>

<pre><code>private static byte[] createSignature(byte[] file) {
    byte[] signature = null;

    try {
        java.security.KeyStore keyStoreFile = java.security.KeyStore
                .getInstance(""PKCS12"");
        keyStoreFile.load(new FileInputStream(""keyStore.pfx""),
                ""password"".toCharArray());

        // nuskaitomas privatus raktas iš failo
        PrivateKey privateKey = (PrivateKey) keyStoreFile.getKey(
                ""alais"", ""password"".toCharArray());

        Signature dsa = Signature.getInstance(SHA1withRSA);
        dsa.initSign(privateKey);
        dsa.update(file, 0, file.length);
        signature = dsa.sign();

    } catch (Exception e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    return signature;
}
</code></pre>

<p>but this is just a  signature. 
.</p>
","<p>Change return signature; for this instead:</p>

<pre><code>byte[] encryptedByteValue = Base64.encodeBase64(signature);
return new String(encryptedByteValue, ""UTF-8"");
</code></pre>
","8510","<java><sign><private-key>","2","0","2","2015-11-05 16:26:35","","3","1","839086","","2011-12-16 07:40:27","2011-12-16 07:36:41","2016-07-24 20:12:59"
"8531162","sign a string with private key","<p>can someone please explain me how to sign a string or byte array using private key? PLEASE. two weeks I'm trying to achieve it.
I have code: </p>

<pre><code>private static byte[] createSignature(byte[] file) {
    byte[] signature = null;

    try {
        java.security.KeyStore keyStoreFile = java.security.KeyStore
                .getInstance(""PKCS12"");
        keyStoreFile.load(new FileInputStream(""keyStore.pfx""),
                ""password"".toCharArray());

        // nuskaitomas privatus raktas iš failo
        PrivateKey privateKey = (PrivateKey) keyStoreFile.getKey(
                ""alais"", ""password"".toCharArray());

        Signature dsa = Signature.getInstance(SHA1withRSA);
        dsa.initSign(privateKey);
        dsa.update(file, 0, file.length);
        signature = dsa.sign();

    } catch (Exception e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    return signature;
}
</code></pre>

<p>but this is just a  signature. 
.</p>
","<p>With your code example you generate the signature of the input data.</p>

<p>If you want to return also the data in an encrypted form, you can use asymmetric (or symmetric) encryption.</p>

<p>In your case, you can return the data encrypted with your PrivateKey:
you can find an example <a href=""http://www.java2s.com/Tutorial/Java/0490__Security/AnexampleofusingRSAtoencryptasingleasymmetrickey.htm"" rel=""nofollow"">here</a>.</p>
","8510","<java><sign><private-key>","2","0","2","2015-11-05 16:26:35","","3","1","839086","","2011-12-16 07:40:27","2011-12-16 07:36:41","2016-07-24 20:12:59"
"7010786","URL Signing with HMAC or OpenSSL","<p>I'm interested in url signing (e.g. <a href=""http://.../?somearg=value&amp;anotherarg=anothervalue&amp;sig=aSKS9F3KL5xc"" rel=""noreferrer"">http://.../?somearg=value&amp;anotherarg=anothervalue&amp;sig=aSKS9F3KL5xc</a>), but I have a few requirements which have left me without a solution yet.</p>

<ul>
<li>I'll be using either <code>PHP</code> or <code>Python</code> for pages, so I'll need to be able to sign and verify a signature using one of the two.</li>
<li>My plan was to use a priv/pub key scheme to sign some data, and be able to verify that the signature is valid, but here's where it gets complicated:</li>
<li>The data is not known when the verification is happening (it is not just <code>somearg=value&amp;anotherarg=anothervalue</code>)</li>
</ul>

<p>My first instinct was to use OpenSSL, e.g. with a RSA keypair, to do something along the lines of signing by: <code>openssl rsautl -sign -inkey private.pem -in sensitive -out privsigned</code>   and verifying based on the <code>privsigned</code> data and key ONLY: <code>openssl rsautl -verify -inkey public.pem -in privsigned -pubin</code>.</p>

<p>Using PHP's <code>openssl_get_privatekey()</code> and <code>openssl_sign()</code> signs the data just fine, but I need to know the (decrypted!) data in order to verify (which I will not have): <code>openssl_get_publickey()</code> and <code>openssl_verify($data, $signature, $pubkeyid);</code> from <a href=""http://php.net/openssl_verify"" rel=""noreferrer"">http://php.net/openssl_verify</a>.</p>

<p>Or am I missing something here?</p>

<hr>

<p>So I looked into HMAC, but although many hash function are available in both <code>Python</code> and <code>PHP</code>, I'm baffled as to how I'd go about <strong><em>verifying</em></strong> the hash.
<code>PHP</code>'s <code>hash_hmac()</code> allows me to create a hash using a ""key"" (or in this case a string-key). But how do I go about verifying that a hash is valid (i.e. <code>&amp;sig=</code> hasn't just been manually put in by the end user <code>&amp;sig=abcdefg1234</code>.</p>

<p>So to sum up (sorry for the long question): How can I verify that a signature/hash has been made by my server's (cert/string)key (given I can not verify by redoing the hash of said data)? And do you have any preferences as to which route I should chose, Priv/pub-key or HMAC?</p>

<p>Any pointers big or small is greatly appreciated!
Thanks in advance,</p>

<ul>
<li>Josh</li>
</ul>
","<p>HMAC is a symmetric algorithm, so there is no separate creation and checking algorithm. To check, you simply compute the hash as it should have been computed originally, and check that the result equals what you actually got from the client. The security rests on the HMAC key only existing on your server.</p>

<p>Unless you need the signatures to be verifiable by someone who <em>doesn't</em> know the secret key, HMAC is probably a better choice than public-key systems, for reasons of efficiency. It can take several milliseconds to create or verify a public-key signature (some years ago I timed one implementation at 15 ms per operation), whereas HMAC is quite fast.</p>

<p>(Oh, and you cannot verify any kind of signature without knowing the data it's supposed to sign. That wouldn't make any sense, as far as I can see).</p>
","8500","<url><verification><signing><private-key><hmac>","8","6","3","2013-09-02 22:41:27","7010918","0","2","","","","2011-08-10 12:30:31",""
"7010786","URL Signing with HMAC or OpenSSL","<p>I'm interested in url signing (e.g. <a href=""http://.../?somearg=value&amp;anotherarg=anothervalue&amp;sig=aSKS9F3KL5xc"" rel=""noreferrer"">http://.../?somearg=value&amp;anotherarg=anothervalue&amp;sig=aSKS9F3KL5xc</a>), but I have a few requirements which have left me without a solution yet.</p>

<ul>
<li>I'll be using either <code>PHP</code> or <code>Python</code> for pages, so I'll need to be able to sign and verify a signature using one of the two.</li>
<li>My plan was to use a priv/pub key scheme to sign some data, and be able to verify that the signature is valid, but here's where it gets complicated:</li>
<li>The data is not known when the verification is happening (it is not just <code>somearg=value&amp;anotherarg=anothervalue</code>)</li>
</ul>

<p>My first instinct was to use OpenSSL, e.g. with a RSA keypair, to do something along the lines of signing by: <code>openssl rsautl -sign -inkey private.pem -in sensitive -out privsigned</code>   and verifying based on the <code>privsigned</code> data and key ONLY: <code>openssl rsautl -verify -inkey public.pem -in privsigned -pubin</code>.</p>

<p>Using PHP's <code>openssl_get_privatekey()</code> and <code>openssl_sign()</code> signs the data just fine, but I need to know the (decrypted!) data in order to verify (which I will not have): <code>openssl_get_publickey()</code> and <code>openssl_verify($data, $signature, $pubkeyid);</code> from <a href=""http://php.net/openssl_verify"" rel=""noreferrer"">http://php.net/openssl_verify</a>.</p>

<p>Or am I missing something here?</p>

<hr>

<p>So I looked into HMAC, but although many hash function are available in both <code>Python</code> and <code>PHP</code>, I'm baffled as to how I'd go about <strong><em>verifying</em></strong> the hash.
<code>PHP</code>'s <code>hash_hmac()</code> allows me to create a hash using a ""key"" (or in this case a string-key). But how do I go about verifying that a hash is valid (i.e. <code>&amp;sig=</code> hasn't just been manually put in by the end user <code>&amp;sig=abcdefg1234</code>.</p>

<p>So to sum up (sorry for the long question): How can I verify that a signature/hash has been made by my server's (cert/string)key (given I can not verify by redoing the hash of said data)? And do you have any preferences as to which route I should chose, Priv/pub-key or HMAC?</p>

<p>Any pointers big or small is greatly appreciated!
Thanks in advance,</p>

<ul>
<li>Josh</li>
</ul>
","<p>As Henning Makholm pointed out, HMAC is a better choice than public key.  There are some best practices you should consider for your particular scenario that will impact your choices:</p>

<ul>
<li>Do you want to consider the hostname and scheme (http/https) in the signature? Maybe.</li>
<li>Do you want to consider the path in the signature? Probably.</li>
<li>Do you want to consider the query string in the signature? Probably.</li>
<li>Do you want to normalize the argument order and escaping prior to signing? Usually not.</li>
<li>Do you want to embed signature time etc (to create time-limited URLs)?</li>
<li>Do you want to tie the signed URL to some other user state, such as cookie?</li>
<li>Are you using user-generated or user-visible content directly in the HMAC? If so, you should ""salt"" the key using a value that is randomized for each request.</li>
</ul>

<p>When computing the signature, you'll need to encode it in a URL-friendly way (base64 and base32 are popular choices) and choose an HMAC algorithm (such as SHA-256), and decide how many bits of the signature you want to keep (truncating the HMAC value in half is usually safe).  If you choose base64, beware of the different alphabets used by url-safe vs non-url-safe implementations.</p>

<p>Here is a pseudocode implementation (w/o error checking or salting etc) for signing path + query string:</p>

<pre><code>const secret = ...;

def sign(path, querystring):
  return path + ""?"" + querystring + ""&amp;sig="" + url_encode(base64_encode(hmacsha256(secret, path + ""?"" + querystring).truncate(16)))

def verify(path, querystring):
  querystring_without_sig = remove_query_parameter(querystring, ""sig"")
  sig = base64_decode(url_decode(get_query_parameter(querystring, ""sig"")))
  if hmacsha256(secret, path + ""?"" + querystring_without_sig)[:16] != sig:
    raise ""invalid sig""
</code></pre>

<p>HMAC SHA256 is recommended and is available in all common languages.</p>

<p>Java:</p>

<pre><code>Mac mac = Mac.getInstance(""HmacSHA256"");
mac.init(secret);
return mac.doFinal(value.getBytes());
</code></pre>

<p>Python:</p>

<pre><code>hmac.new(secret, input, hashlib.sha256).digest()
</code></pre>

<p>PHP:</p>

<pre><code>hash_hmac(""sha256"", value, secret);
</code></pre>
","8500","<url><verification><signing><private-key><hmac>","8","10","3","2013-09-02 22:41:27","7010918","0","2","","","","2011-08-10 12:30:31",""
"7010786","URL Signing with HMAC or OpenSSL","<p>I'm interested in url signing (e.g. <a href=""http://.../?somearg=value&amp;anotherarg=anothervalue&amp;sig=aSKS9F3KL5xc"" rel=""noreferrer"">http://.../?somearg=value&amp;anotherarg=anothervalue&amp;sig=aSKS9F3KL5xc</a>), but I have a few requirements which have left me without a solution yet.</p>

<ul>
<li>I'll be using either <code>PHP</code> or <code>Python</code> for pages, so I'll need to be able to sign and verify a signature using one of the two.</li>
<li>My plan was to use a priv/pub key scheme to sign some data, and be able to verify that the signature is valid, but here's where it gets complicated:</li>
<li>The data is not known when the verification is happening (it is not just <code>somearg=value&amp;anotherarg=anothervalue</code>)</li>
</ul>

<p>My first instinct was to use OpenSSL, e.g. with a RSA keypair, to do something along the lines of signing by: <code>openssl rsautl -sign -inkey private.pem -in sensitive -out privsigned</code>   and verifying based on the <code>privsigned</code> data and key ONLY: <code>openssl rsautl -verify -inkey public.pem -in privsigned -pubin</code>.</p>

<p>Using PHP's <code>openssl_get_privatekey()</code> and <code>openssl_sign()</code> signs the data just fine, but I need to know the (decrypted!) data in order to verify (which I will not have): <code>openssl_get_publickey()</code> and <code>openssl_verify($data, $signature, $pubkeyid);</code> from <a href=""http://php.net/openssl_verify"" rel=""noreferrer"">http://php.net/openssl_verify</a>.</p>

<p>Or am I missing something here?</p>

<hr>

<p>So I looked into HMAC, but although many hash function are available in both <code>Python</code> and <code>PHP</code>, I'm baffled as to how I'd go about <strong><em>verifying</em></strong> the hash.
<code>PHP</code>'s <code>hash_hmac()</code> allows me to create a hash using a ""key"" (or in this case a string-key). But how do I go about verifying that a hash is valid (i.e. <code>&amp;sig=</code> hasn't just been manually put in by the end user <code>&amp;sig=abcdefg1234</code>.</p>

<p>So to sum up (sorry for the long question): How can I verify that a signature/hash has been made by my server's (cert/string)key (given I can not verify by redoing the hash of said data)? And do you have any preferences as to which route I should chose, Priv/pub-key or HMAC?</p>

<p>Any pointers big or small is greatly appreciated!
Thanks in advance,</p>

<ul>
<li>Josh</li>
</ul>
","<p>If you want to use HMAC and Python, then:</p>

<p>$ pip install ska</p>

<h2>On the client side</h2>

<pre><code>from ska import sign_url

signed_url = sign_url(
    auth_user='user', 
    secret_key='your-secret_key', 
    url='http://e.com/api/'
)
</code></pre>

<p>Produced URL looks like as follows.</p>

<p><a href=""http://e.com/api/?valid_until=1378045287.0&amp;auth_user=user&amp;signature=YlZpLFsjUKBalL4x5trhkeEgqE8%3D"">http://e.com/api/?valid_until=1378045287.0&amp;auth_user=user&amp;signature=YlZpLFsjUKBalL4x5trhkeEgqE8%3D</a></p>

<h2>On the server side</h2>

<p>Note, that in example below <code>request.GET</code> is given as example. It will most likely vary from what's used in your framework (unless you use Django).</p>

<pre><code>from ska import validate_signed_request_data

validation_result = validate_signed_request_data(
    data = request.GET, # Note, that ``request.GET`` is given as example.
    secret_key = 'your-secret_key'
)
</code></pre>

<p>The validate_signed_request_data produces a SignatureValidationResult object, which basically holds two properties:</p>

<ul>
<li>result (bool): True if data is valid. False otherwise.</li>
<li>reason (list): List of strings, indicating validation errors.</li>
</ul>
","8500","<url><verification><signing><private-key><hmac>","8","0","3","2013-09-02 22:41:27","7010918","0","2","","","","2011-08-10 12:30:31",""
"10498580","Private keys get deleted unexpectedly in Windows Server 2008 R2","<p>I am facing a strange problem in developing an installation that should in one of the steps install a certificate.</p>

<p>The problem has to do with granting Certificate’s private key access for an account (e.g. IIS_IUSRS) on Windows Server 2008 R2. The private keys are stored in the location C:\Users\All Users\Microsoft\Crypto\RSA\MachineKeys.</p>

<p>A custom C# Setup Project imports a Certificate and gives access for an account on Certificate’s private key during the installation process. After some time (2-3 sec) the private key file is automatically deleted from the MachineKeys folder. Thus the installed Web Application cannot access the specific certificate and displays the following error message:</p>

<p>“System.Security.Cryptography.CryptographicException: Keyset does not exist”. This error occurs only on Windows Server 2008 R2, while for Windows Server 2003 everything is working correctly.</p>

<p>My question is, why the private key gets deleted and which process does this?</p>

<p>Thx</p>

<p><strong>UPDATE 17/05/2012</strong></p>

<p>I have not yet found a solution to the described problem, and no response has been posted on the other forums where I asked (forums.asp.net, social.msdn.microsoft.com). So, can anyone suggest any other resources or advice for further troubleshooting this issue?</p>

<p>Thanks again</p>
","<p>Is very clear that is a security issue “<strong><code>System.Security</code></strong>.”. and you do not have permissions to do the installation., you need to set the permissions on the private key to allow that service account <a href=""http://msdn.microsoft.com/en-us/library/aa702621.aspx"" rel=""nofollow noreferrer"">access it</a>.</p>

<p><strong>Edit later</strong>: Go to Start->Run->cmd->type mmc->Select File->Add/Remove->Select Certificates->Add->Computer Account->Local., i attach a screenshot is in spanish but I indicated the fields:</p>

<p><img src=""https://i.stack.imgur.com/f0WIV.jpg"" alt=""enter image description here""></p>

<p>Open->Certificates->Personal->Certificates->Right click Certificate-> All Tasks->Manage Private Keys->Add Network Service.</p>

<p>Also check this <a href=""http://learn.iis.net/page.aspx/624/application-pool-identities/"" rel=""nofollow noreferrer"">entry</a> to see how works this feature in Windows Server 2008., then please after you try it, come back and say if you could solve the issue with what I have told you.</p>
","8280","<powershell><certificate><windows-server-2008-r2><private-key>","3","1","3","2016-06-02 14:49:50","16490635","0","2","319633","","2013-05-10 21:07:43","2012-05-08 12:25:05",""
"10498580","Private keys get deleted unexpectedly in Windows Server 2008 R2","<p>I am facing a strange problem in developing an installation that should in one of the steps install a certificate.</p>

<p>The problem has to do with granting Certificate’s private key access for an account (e.g. IIS_IUSRS) on Windows Server 2008 R2. The private keys are stored in the location C:\Users\All Users\Microsoft\Crypto\RSA\MachineKeys.</p>

<p>A custom C# Setup Project imports a Certificate and gives access for an account on Certificate’s private key during the installation process. After some time (2-3 sec) the private key file is automatically deleted from the MachineKeys folder. Thus the installed Web Application cannot access the specific certificate and displays the following error message:</p>

<p>“System.Security.Cryptography.CryptographicException: Keyset does not exist”. This error occurs only on Windows Server 2008 R2, while for Windows Server 2003 everything is working correctly.</p>

<p>My question is, why the private key gets deleted and which process does this?</p>

<p>Thx</p>

<p><strong>UPDATE 17/05/2012</strong></p>

<p>I have not yet found a solution to the described problem, and no response has been posted on the other forums where I asked (forums.asp.net, social.msdn.microsoft.com). So, can anyone suggest any other resources or advice for further troubleshooting this issue?</p>

<p>Thanks again</p>
","<p>This was happening to me too - my setup script would add the cert and grant access to the PK file fine, and the app would work.  Then later, after I had closed the PowerShell editor I re-launched the app and it failed with a keyset not found.  </p>

<p>Adding the PersistKeySet flag when importing the cert fixed the problem.  Here's the PowerShell code for adding the cert and private key with persistence:</p>

<pre><code>param(
    [string]$certStore = ""LocalMachine\TrustedPeople"",
    [string]$filename = ""sp.pfx"",
    [string]$password = ""password"",
    [string]$username = ""$Env:COMPUTERNAME\WebSiteUser""
)

function getKeyFilePath($cert) {
    return ""$ENV:ProgramData\Microsoft\Crypto\RSA\MachineKeys\"" + $cert.PrivateKey.CspKeyContainerInfo.UniqueKeyContainerName
}

$certFromFile = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2($filename, $password)
$certFromStore = Get-ChildItem ""Cert:\$certStore"" | Where-Object {$_.Thumbprint -eq $certFromFile.Thumbprint}
$certExistsInStore = $certFromStore.Count -gt 0
$keyExists = $certExistsInStore -and ($certFromStore.PrivateKey -ne $null) -and (Test-Path(getKeyFilePath($certFromStore)))

if ((!$certExistsInStore) -or (!$keyExists)) {

    $keyFlags = [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::MachineKeySet 
    $keyFlags = $keyFlags -bor [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::PersistKeySet
    $certFromFile.Import($filename, $password, $keyFlags)

    $store = Get-Item ""Cert:\$certStore""
    $store.Open(""ReadWrite"")

    if ($certExistsInStore) {
        #Cert is in the store, but we have no persisted private key
        #Remove it so we can add the one we just imported with the key file
        $store.Remove($certFromStore)
    }

    $store.Add($certFromFile)
    $store.Close()

    $certFromStore = $certFromFile
    ""Installed x509 certificate""
}

$pkFile = Get-Item(getKeyFilePath($certFromStore))
$pkAcl = $pkFile.GetAccessControl(""Access"")
$readPermission = $username,""Read"",""Allow""
$readAccessRule = new-object System.Security.AccessControl.FileSystemAccessRule $readPermission
$pkAcl.AddAccessRule($readAccessRule)
Set-Acl $pkFile.FullName $pkAcl
""Granted read permission on private key to web user""
</code></pre>
","8280","<powershell><certificate><windows-server-2008-r2><private-key>","3","5","3","2016-06-02 14:49:50","16490635","0","2","319633","","2013-05-10 21:07:43","2012-05-08 12:25:05",""
"10498580","Private keys get deleted unexpectedly in Windows Server 2008 R2","<p>I am facing a strange problem in developing an installation that should in one of the steps install a certificate.</p>

<p>The problem has to do with granting Certificate’s private key access for an account (e.g. IIS_IUSRS) on Windows Server 2008 R2. The private keys are stored in the location C:\Users\All Users\Microsoft\Crypto\RSA\MachineKeys.</p>

<p>A custom C# Setup Project imports a Certificate and gives access for an account on Certificate’s private key during the installation process. After some time (2-3 sec) the private key file is automatically deleted from the MachineKeys folder. Thus the installed Web Application cannot access the specific certificate and displays the following error message:</p>

<p>“System.Security.Cryptography.CryptographicException: Keyset does not exist”. This error occurs only on Windows Server 2008 R2, while for Windows Server 2003 everything is working correctly.</p>

<p>My question is, why the private key gets deleted and which process does this?</p>

<p>Thx</p>

<p><strong>UPDATE 17/05/2012</strong></p>

<p>I have not yet found a solution to the described problem, and no response has been posted on the other forums where I asked (forums.asp.net, social.msdn.microsoft.com). So, can anyone suggest any other resources or advice for further troubleshooting this issue?</p>

<p>Thanks again</p>
","<p><a href=""http://referencesource.microsoft.com/#System/security/system/security/cryptography/x509/x509certificate2collection.cs,256"" rel=""nofollow"">http://referencesource.microsoft.com/#System/security/system/security/cryptography/x509/x509certificate2collection.cs,256</a> shows where the PersistKeySet flag is tested.  The PersistKeySet flag is documented at <a href=""https://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keystorageflags%28v=vs.110%29.aspx"" rel=""nofollow"">https://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509keystorageflags%28v=vs.110%29.aspx</a> with the phrase ""The key associated with a PFX file is persisted when importing a certificate.""  My techno-babble to English translator tells me this means ""You must include the PersistKeySet flag if you call the X509Certificate2 constructor and the certificate might already be installed on the machine.""  This probably applies to the .Import calls too.  It's likely the powershell Import-PfxCertificate cmdlet already does this.  But if you are doing what the accepted answer shows or what the OP asked, you need to include the special key.  We used a variation of ejegg's script in our solution.  We have a process that runs every 3 minutes to check that all configured certs are installed and this seems to work fine now.</p>

<p>The symptom we saw in powershell is the HasPrivateKey property is true but the PrivateKey value itself is null.  And the key file for the cert in C:\ProgramData\Microsoft\Crypto\RSA\MachineKeys was deleted.  The FindPrivateKey utility at <a href=""https://msdn.microsoft.com/en-us/library/aa717039(v=vs.110).aspx"" rel=""nofollow"">https://msdn.microsoft.com/en-us/library/aa717039(v=vs.110).aspx</a> helped us watch file get deleted.</p>

<p>So happy 4th birthday to the question with this very late response.</p>
","8280","<powershell><certificate><windows-server-2008-r2><private-key>","3","1","3","2016-06-02 14:49:50","16490635","0","2","319633","","2013-05-10 21:07:43","2012-05-08 12:25:05",""
"30667142","SSH.NET Authenticate via private key only (public key authentication)","<p>Attempting to authenticate via username and privatekey only using the current SSH.NET library.  I cannot get the password from the user so this is out of the question.</p>

<p>here is what i am doing now.</p>

<pre><code>Renci.SshNet.ConnectionInfo conn = 
    new ConnectionInfo(hostName, port, username, new AuthenticationMethod[]
        {
            new PasswordAuthenticationMethod(username, """"), 
            new PrivateKeyAuthenticationMethod(username, new PrivateKeyFile[] 
                   { new PrivateKeyFile(privateKeyLocation, """") }),
        });

using (var sshClient = new SshClient(conn))
{
    sshClient.Connect();
} 
</code></pre>

<p>Now, if I remove the <code>PasswordAuthenticationMethod</code> from the <code>AuthenticationMethod[]</code> array I get an exception for for no suitable authentication method found.  If i attempt to pass in the (hostname, port, username, keyfile2) as such </p>

<pre><code>var keyFile = new PrivateKeyFile(privateKeyLocation);
var keyFile2 = new[] {keyFile};
</code></pre>

<p>again, no suitable method found.</p>

<p>It seems I have to use the <code>ConnectionInfo</code> object as I outlined above, but it seems that it evaluates the <code>PasswordAuthenticationMethod</code> and cant log in (since i don't provide a password) and never evaluates the <code>PrivateKeyAuthMethod</code>... is this the case?  Is there some other way to authenticate with only a username or hostname and private key using SSH.NET lib?</p>
","<p>to perform private key authentication, you will also need the passphrase, which together with the private key, will allow authentication.<br>
What is really needed is for RenciSSH to get with the times and write a publickeyauthentication method.</p>
","8250","<c#><.net><ssh><private-key><ssh.net>","6","-1","3","2018-11-21 07:15:30","41535271","1","2","850848","","2018-11-21 07:15:30","2015-06-05 12:56:46",""
"30667142","SSH.NET Authenticate via private key only (public key authentication)","<p>Attempting to authenticate via username and privatekey only using the current SSH.NET library.  I cannot get the password from the user so this is out of the question.</p>

<p>here is what i am doing now.</p>

<pre><code>Renci.SshNet.ConnectionInfo conn = 
    new ConnectionInfo(hostName, port, username, new AuthenticationMethod[]
        {
            new PasswordAuthenticationMethod(username, """"), 
            new PrivateKeyAuthenticationMethod(username, new PrivateKeyFile[] 
                   { new PrivateKeyFile(privateKeyLocation, """") }),
        });

using (var sshClient = new SshClient(conn))
{
    sshClient.Connect();
} 
</code></pre>

<p>Now, if I remove the <code>PasswordAuthenticationMethod</code> from the <code>AuthenticationMethod[]</code> array I get an exception for for no suitable authentication method found.  If i attempt to pass in the (hostname, port, username, keyfile2) as such </p>

<pre><code>var keyFile = new PrivateKeyFile(privateKeyLocation);
var keyFile2 = new[] {keyFile};
</code></pre>

<p>again, no suitable method found.</p>

<p>It seems I have to use the <code>ConnectionInfo</code> object as I outlined above, but it seems that it evaluates the <code>PasswordAuthenticationMethod</code> and cant log in (since i don't provide a password) and never evaluates the <code>PrivateKeyAuthMethod</code>... is this the case?  Is there some other way to authenticate with only a username or hostname and private key using SSH.NET lib?</p>
","<p>Your problem here is that you're still using a password, even though it is blank. Remove this line:</p>

<pre><code>new PasswordAuthenticationMethod(username, """"), 
</code></pre>

<p>This works perfectly for me:</p>

<pre><code>var pk = new PrivateKeyFile(yourkey);
var keyFiles = new[] { pk };

var methods = new List&lt;AuthenticationMethod&gt;();
methods.Add(new PrivateKeyAuthenticationMethod(UserName, keyFiles));

var con = new ConnectionInfo(HostName, Port, UserName, methods.ToArray());
</code></pre>
","8250","<c#><.net><ssh><private-key><ssh.net>","6","6","3","2018-11-21 07:15:30","41535271","1","2","850848","","2018-11-21 07:15:30","2015-06-05 12:56:46",""
"30667142","SSH.NET Authenticate via private key only (public key authentication)","<p>Attempting to authenticate via username and privatekey only using the current SSH.NET library.  I cannot get the password from the user so this is out of the question.</p>

<p>here is what i am doing now.</p>

<pre><code>Renci.SshNet.ConnectionInfo conn = 
    new ConnectionInfo(hostName, port, username, new AuthenticationMethod[]
        {
            new PasswordAuthenticationMethod(username, """"), 
            new PrivateKeyAuthenticationMethod(username, new PrivateKeyFile[] 
                   { new PrivateKeyFile(privateKeyLocation, """") }),
        });

using (var sshClient = new SshClient(conn))
{
    sshClient.Connect();
} 
</code></pre>

<p>Now, if I remove the <code>PasswordAuthenticationMethod</code> from the <code>AuthenticationMethod[]</code> array I get an exception for for no suitable authentication method found.  If i attempt to pass in the (hostname, port, username, keyfile2) as such </p>

<pre><code>var keyFile = new PrivateKeyFile(privateKeyLocation);
var keyFile2 = new[] {keyFile};
</code></pre>

<p>again, no suitable method found.</p>

<p>It seems I have to use the <code>ConnectionInfo</code> object as I outlined above, but it seems that it evaluates the <code>PasswordAuthenticationMethod</code> and cant log in (since i don't provide a password) and never evaluates the <code>PrivateKeyAuthMethod</code>... is this the case?  Is there some other way to authenticate with only a username or hostname and private key using SSH.NET lib?</p>
","<p>You need some thing like this, it works fine for me.
Pay attention while creating new ConnectionInfo object I'm passing only host, port, user and auth method (No password is required);
Second difference is that I'm passing single PrivateKeyFile, without empty quotes for 'Phrase' parameter; </p>

<pre><code>public ConnectionInfo GetCertificateBasedConnection()
    {
        ConnectionInfo connection;
        Debug.WriteLine(""Trying to create certification based connection..."");
        using (var stream = new FileStream(ConfigurationHelper.PrivateKeyFilePath, FileMode.Open, FileAccess.Read))
        {
            var file = new PrivateKeyFile(stream);
            var authMethod = new PrivateKeyAuthenticationMethod(ConfigurationHelper.User, file);

            connection = new ConnectionInfo(ConfigurationHelper.HostName, ConfigurationHelper.Port, ConfigurationHelper.User, authMethod);
        }
        Debug.WriteLine(""Certification based connection created successfully"");
        return connection;
    }
</code></pre>
","8250","<c#><.net><ssh><private-key><ssh.net>","6","0","3","2018-11-21 07:15:30","41535271","1","2","850848","","2018-11-21 07:15:30","2015-06-05 12:56:46",""
"4605139","Is it possible to have encryption with multiple private keys (PHP)?","<p><strong>Or: How to store encrypted data for a bunch of users?</strong></p>

<p>I admit, it's a silly question, a private key is limited to only one person as the term already implies. But I have the following scenario:</p>

<p>User Tom enters data that needs to be stored encrypted in a database. The user decides he wants to make this information available to Jim and Bob. The users John and Jayne must not be able to decrypt it. Of course also not to user Tim who hacked the server and has access to the encrypted data and the scripts that do the encryption/decryption.</p>

<p>I think the public key/private key approach with PHPs <a href=""http://php.net/manual/en/function.openssl-public-encrypt.php"" rel=""noreferrer"">openssl_public_encrypt</a> function won't work here as two users need to have that ""private"" key to decrypt the data.</p>

<p>I guess this a rather general question, but if it's important, it must be done in PHP (and MySQL maybe).</p>
","<p>I don't know libraries in PHP. But in general the procedure is as follows:</p>

<ul>
<li>Data is encrypted using a symmetric key</li>
<li>For each recipient, key is encrypted using the public key of recipient</li>
<li>All this is saved in a PKCS#7 file structure</li>
</ul>

<p>There should be some results when looking up ""PHP and PKCS7""...</p>
","8236","<php><encryption><private-key>","18","3","4","2014-11-15 13:36:45","4605200","0","7","","","","2011-01-05 14:27:30",""
"4605139","Is it possible to have encryption with multiple private keys (PHP)?","<p><strong>Or: How to store encrypted data for a bunch of users?</strong></p>

<p>I admit, it's a silly question, a private key is limited to only one person as the term already implies. But I have the following scenario:</p>

<p>User Tom enters data that needs to be stored encrypted in a database. The user decides he wants to make this information available to Jim and Bob. The users John and Jayne must not be able to decrypt it. Of course also not to user Tim who hacked the server and has access to the encrypted data and the scripts that do the encryption/decryption.</p>

<p>I think the public key/private key approach with PHPs <a href=""http://php.net/manual/en/function.openssl-public-encrypt.php"" rel=""noreferrer"">openssl_public_encrypt</a> function won't work here as two users need to have that ""private"" key to decrypt the data.</p>

<p>I guess this a rather general question, but if it's important, it must be done in PHP (and MySQL maybe).</p>
","<p>Use a data encryption key (call it Kgeneral) that's distinct from Tom's key. </p>

<p>Encrypt Kgeneral with Tom's public key and give the result to Tom - he can use his private key to decrypt it and obtain Kgeneral.</p>

<p>If another user then needs access to the data, Tom (or your application) can then encrypt Kgeneral with his public key, and give him access that way.</p>
","8236","<php><encryption><private-key>","18","2","4","2014-11-15 13:36:45","4605200","0","7","","","","2011-01-05 14:27:30",""
"4605139","Is it possible to have encryption with multiple private keys (PHP)?","<p><strong>Or: How to store encrypted data for a bunch of users?</strong></p>

<p>I admit, it's a silly question, a private key is limited to only one person as the term already implies. But I have the following scenario:</p>

<p>User Tom enters data that needs to be stored encrypted in a database. The user decides he wants to make this information available to Jim and Bob. The users John and Jayne must not be able to decrypt it. Of course also not to user Tim who hacked the server and has access to the encrypted data and the scripts that do the encryption/decryption.</p>

<p>I think the public key/private key approach with PHPs <a href=""http://php.net/manual/en/function.openssl-public-encrypt.php"" rel=""noreferrer"">openssl_public_encrypt</a> function won't work here as two users need to have that ""private"" key to decrypt the data.</p>

<p>I guess this a rather general question, but if it's important, it must be done in PHP (and MySQL maybe).</p>
","<p>That's how it done in OpenPGP (and, other systems):
- you are generating secret symmetric key, which is used to encrypt the data itself;
- then, this symmetric key is encrypted with Tom's key;
- also, symmetric key can be encrypted with Jim's and Bob's public key, allowing them to decrypt the key and after that to decrypt the data</p>
","8236","<php><encryption><private-key>","18","15","4","2014-11-15 13:36:45","4605200","0","7","","","","2011-01-05 14:27:30",""
"4605139","Is it possible to have encryption with multiple private keys (PHP)?","<p><strong>Or: How to store encrypted data for a bunch of users?</strong></p>

<p>I admit, it's a silly question, a private key is limited to only one person as the term already implies. But I have the following scenario:</p>

<p>User Tom enters data that needs to be stored encrypted in a database. The user decides he wants to make this information available to Jim and Bob. The users John and Jayne must not be able to decrypt it. Of course also not to user Tim who hacked the server and has access to the encrypted data and the scripts that do the encryption/decryption.</p>

<p>I think the public key/private key approach with PHPs <a href=""http://php.net/manual/en/function.openssl-public-encrypt.php"" rel=""noreferrer"">openssl_public_encrypt</a> function won't work here as two users need to have that ""private"" key to decrypt the data.</p>

<p>I guess this a rather general question, but if it's important, it must be done in PHP (and MySQL maybe).</p>
","<p>PHP provides a function for this - <a href=""http://php.net/openssl_seal""><code>openssl_seal()</code></a>.  This function takes an array of public keys, and encrypts the data so that any one of the corresponding private keys can be used to decrypt it (using <a href=""http://php.net/openssl_open""><code>openssl_open()</code></a>).</p>
","8236","<php><encryption><private-key>","18","12","4","2014-11-15 13:36:45","4605200","0","7","","","","2011-01-05 14:27:30",""
"43438030","Connecting to SFTP with key file using SSH.NET (Permission denied (publickey))","<p>I have a C# console application in Visual Studio 2008 and .NET Framework 3.5.</p>

<p>For testing purposes, I have installed an FTP Server in my local machine and configure it. I have downloaded and installed this free small FTP Server: <a href=""http://www.freesshd.com/?ctt=download"" rel=""nofollow noreferrer"">freeFTPd</a>. It is really easy, it takes me about 10 minutes.</p>

<p>Once I have configured it, I have successfully  connected  using PasswordA uthentication Method using my C# console app.</p>

<p>Now I am trying to only connect to my local FTP server using key based file only.</p>

<p>So the code I have implemented is the following:</p>

<pre><code>var keyFile = new PrivateKeyFile(@""C:\Program Files (x86)\freeFTPd\freeftpd.key"");
var keyFiles = new[] { keyFile };


var methods = new List&lt;AuthenticationMethod&gt;();
methods.Add(new PrivateKeyAuthenticationMethod(username, keyFiles));

var con = new ConnectionInfo(host, port, username, methods.ToArray());
using (SftpClient client = new SftpClient(con))
{
    client.Connect();
    // Do some stuff below
}
</code></pre>

<p>As you can see in the above code, I am using freeftpd.key as private key file. This file has been created once freeFTPd is installed. During installation, freeFTPd asked me to create a new private key file so I answered 'yes'. Now I am using it but the problem is that I can connect to my FTP local server using this private key file. I have opened this file, and it starts with following line:</p>

<p>-----BEGIN RSA PRIVATE KEY-----</p>

<p>and ends with:</p>

<p>-----END RSA PRIVATE KEY-----</p>

<p>Below them there is a bunch of encrypted data.</p>

<p>I have read somewhere that this file must begin with this line.</p>

<p>Anyway I cannot connect to my FTP server.</p>

<p>From freeFTPd control panel, in the section for SFTP, I can create RSA and DSA keys (512, 1024 or 2048 bits of lenght). These files are generated as RSAKey.cfg and DSAKey.cfg and their content are similar to private key file 'freeftpd.key' generated during freeFTPd installation process. If I use RSAKey.cfg or any other just created from freeFTPd it is not working. The error message that appears is:</p>

<pre><code>Permission denied (publickey).
</code></pre>

<p>So What I am doing wrong? I have no idea about certificates, private key files... Any help will be highly appreciated.</p>
","<p>I don't have any experience with freeFTPd but I wonder if the issue is the same as here: <a href=""http://www.sitecorelessons.com/2014/03/how-to-upload-file-via-sftp-using.html"" rel=""nofollow noreferrer"">http://www.sitecorelessons.com/2014/03/how-to-upload-file-via-sftp-using.html</a></p>

<p>From the link: ""Note:- Your private key must be compatible with SshNet. To convert any private key to SshNet compatible private key, refer my other article How to convert Private key to OpenSSH Key to connect to SFTP server.""</p>
","8213","<c#><.net><visual-studio><private-key><ssh.net>","2","2","4","2018-10-15 16:52:57","","0","1","1624552","","2017-04-16 19:41:19","2017-04-16 14:01:57",""
"43438030","Connecting to SFTP with key file using SSH.NET (Permission denied (publickey))","<p>I have a C# console application in Visual Studio 2008 and .NET Framework 3.5.</p>

<p>For testing purposes, I have installed an FTP Server in my local machine and configure it. I have downloaded and installed this free small FTP Server: <a href=""http://www.freesshd.com/?ctt=download"" rel=""nofollow noreferrer"">freeFTPd</a>. It is really easy, it takes me about 10 minutes.</p>

<p>Once I have configured it, I have successfully  connected  using PasswordA uthentication Method using my C# console app.</p>

<p>Now I am trying to only connect to my local FTP server using key based file only.</p>

<p>So the code I have implemented is the following:</p>

<pre><code>var keyFile = new PrivateKeyFile(@""C:\Program Files (x86)\freeFTPd\freeftpd.key"");
var keyFiles = new[] { keyFile };


var methods = new List&lt;AuthenticationMethod&gt;();
methods.Add(new PrivateKeyAuthenticationMethod(username, keyFiles));

var con = new ConnectionInfo(host, port, username, methods.ToArray());
using (SftpClient client = new SftpClient(con))
{
    client.Connect();
    // Do some stuff below
}
</code></pre>

<p>As you can see in the above code, I am using freeftpd.key as private key file. This file has been created once freeFTPd is installed. During installation, freeFTPd asked me to create a new private key file so I answered 'yes'. Now I am using it but the problem is that I can connect to my FTP local server using this private key file. I have opened this file, and it starts with following line:</p>

<p>-----BEGIN RSA PRIVATE KEY-----</p>

<p>and ends with:</p>

<p>-----END RSA PRIVATE KEY-----</p>

<p>Below them there is a bunch of encrypted data.</p>

<p>I have read somewhere that this file must begin with this line.</p>

<p>Anyway I cannot connect to my FTP server.</p>

<p>From freeFTPd control panel, in the section for SFTP, I can create RSA and DSA keys (512, 1024 or 2048 bits of lenght). These files are generated as RSAKey.cfg and DSAKey.cfg and their content are similar to private key file 'freeftpd.key' generated during freeFTPd installation process. If I use RSAKey.cfg or any other just created from freeFTPd it is not working. The error message that appears is:</p>

<pre><code>Permission denied (publickey).
</code></pre>

<p>So What I am doing wrong? I have no idea about certificates, private key files... Any help will be highly appreciated.</p>
","<p>Perhaps what you're doing wrong is asking here when the freeFTPd site has <a href=""http://www.freesshd.com/?ctt=forum"" rel=""nofollow noreferrer"">forums</a> specifically for the type of question you're asking.  Outside of those forums, the best way to debug the type of client that you're using is to first try it against a popular, well-supported server application (such as SSHD on Linux), make sure it works there, and then try it against the lesser known product to see if there are any differences in behavior.  Implementations such as your referenced freeFTPd come a dime a dozen, and it's probably less safe to assume that folks here will know what to do with such a product.</p>
","8213","<c#><.net><visual-studio><private-key><ssh.net>","2","0","4","2018-10-15 16:52:57","","0","1","1624552","","2017-04-16 19:41:19","2017-04-16 14:01:57",""
"43438030","Connecting to SFTP with key file using SSH.NET (Permission denied (publickey))","<p>I have a C# console application in Visual Studio 2008 and .NET Framework 3.5.</p>

<p>For testing purposes, I have installed an FTP Server in my local machine and configure it. I have downloaded and installed this free small FTP Server: <a href=""http://www.freesshd.com/?ctt=download"" rel=""nofollow noreferrer"">freeFTPd</a>. It is really easy, it takes me about 10 minutes.</p>

<p>Once I have configured it, I have successfully  connected  using PasswordA uthentication Method using my C# console app.</p>

<p>Now I am trying to only connect to my local FTP server using key based file only.</p>

<p>So the code I have implemented is the following:</p>

<pre><code>var keyFile = new PrivateKeyFile(@""C:\Program Files (x86)\freeFTPd\freeftpd.key"");
var keyFiles = new[] { keyFile };


var methods = new List&lt;AuthenticationMethod&gt;();
methods.Add(new PrivateKeyAuthenticationMethod(username, keyFiles));

var con = new ConnectionInfo(host, port, username, methods.ToArray());
using (SftpClient client = new SftpClient(con))
{
    client.Connect();
    // Do some stuff below
}
</code></pre>

<p>As you can see in the above code, I am using freeftpd.key as private key file. This file has been created once freeFTPd is installed. During installation, freeFTPd asked me to create a new private key file so I answered 'yes'. Now I am using it but the problem is that I can connect to my FTP local server using this private key file. I have opened this file, and it starts with following line:</p>

<p>-----BEGIN RSA PRIVATE KEY-----</p>

<p>and ends with:</p>

<p>-----END RSA PRIVATE KEY-----</p>

<p>Below them there is a bunch of encrypted data.</p>

<p>I have read somewhere that this file must begin with this line.</p>

<p>Anyway I cannot connect to my FTP server.</p>

<p>From freeFTPd control panel, in the section for SFTP, I can create RSA and DSA keys (512, 1024 or 2048 bits of lenght). These files are generated as RSAKey.cfg and DSAKey.cfg and their content are similar to private key file 'freeftpd.key' generated during freeFTPd installation process. If I use RSAKey.cfg or any other just created from freeFTPd it is not working. The error message that appears is:</p>

<pre><code>Permission denied (publickey).
</code></pre>

<p>So What I am doing wrong? I have no idea about certificates, private key files... Any help will be highly appreciated.</p>
","<p>I'm using SSH.Net and ran into the same issue with 'Permission denied (publickey)'. I also exported my ppk file to an OpenSSH key with PuttyGen but continued to receive the same error. I'm guessing that it depends on your server, but I found that my issue was due to not providing all parameters - the error message wasn't entirely helpful. The only parameter I didn't provide was the username since I had assumed that the private key itself would be enough. Once I provided the username it was fine.</p>

<p>Here's an example of what I'm doing - here I'm connecting via SSH and opening a connection to a MySql database on the server:</p>

<pre><code>var sshPrivateKey = ConfigurationManager.AppSettings[""SSHPrivateKeyPath""];

            System.IO.Stream privateKey = System.Reflection.Assembly.GetExecutingAssembly().GetManifestResourceStream(sshPrivateKey);
            PrivateKeyFile privateKeyStream = new PrivateKeyFile(privateKey, string.Empty);

            var sshHostAddress = ConfigurationManager.AppSettings[""SSHHostAddress""];
            var sshPort = ConfigurationManager.AppSettings[""SSHPort""];
            var sshUser = ConfigurationManager.AppSettings[""SSHUser""];

            var ci = new PrivateKeyConnectionInfo(sshHostAddress, port: Convert.ToInt32(sshPort), username: sshUser, privateKeyStream);

            using (var client = new SshClient(ci)) // establishing ssh connection to server where MySql is hosted
            {
                client.Connect();
                if (client.IsConnected)
                {
                    var portForwarded = new ForwardedPortLocal(""127.0.0.1"", 3306, ""127.0.0.1"", 3306);
                    client.AddForwardedPort(portForwarded);

                    using (MySqlConnection SqlConn = new MySqlConnection(Config.ConnectionString()))
                    {
                        SqlConn.Open();

                        command.Connection = SqlConn;
                        command.CommandType = CommandType.StoredProcedure;

                        using (MySqlDataReader reader = command.ExecuteReader())
                        {
                            // do stuff
                        }
                    }
                    client.Disconnect();
                }
                else
                {
                    Console.WriteLine(""Client cannot be reached..."");
                }
            }
</code></pre>
","8213","<c#><.net><visual-studio><private-key><ssh.net>","2","0","4","2018-10-15 16:52:57","","0","1","1624552","","2017-04-16 19:41:19","2017-04-16 14:01:57",""
"43438030","Connecting to SFTP with key file using SSH.NET (Permission denied (publickey))","<p>I have a C# console application in Visual Studio 2008 and .NET Framework 3.5.</p>

<p>For testing purposes, I have installed an FTP Server in my local machine and configure it. I have downloaded and installed this free small FTP Server: <a href=""http://www.freesshd.com/?ctt=download"" rel=""nofollow noreferrer"">freeFTPd</a>. It is really easy, it takes me about 10 minutes.</p>

<p>Once I have configured it, I have successfully  connected  using PasswordA uthentication Method using my C# console app.</p>

<p>Now I am trying to only connect to my local FTP server using key based file only.</p>

<p>So the code I have implemented is the following:</p>

<pre><code>var keyFile = new PrivateKeyFile(@""C:\Program Files (x86)\freeFTPd\freeftpd.key"");
var keyFiles = new[] { keyFile };


var methods = new List&lt;AuthenticationMethod&gt;();
methods.Add(new PrivateKeyAuthenticationMethod(username, keyFiles));

var con = new ConnectionInfo(host, port, username, methods.ToArray());
using (SftpClient client = new SftpClient(con))
{
    client.Connect();
    // Do some stuff below
}
</code></pre>

<p>As you can see in the above code, I am using freeftpd.key as private key file. This file has been created once freeFTPd is installed. During installation, freeFTPd asked me to create a new private key file so I answered 'yes'. Now I am using it but the problem is that I can connect to my FTP local server using this private key file. I have opened this file, and it starts with following line:</p>

<p>-----BEGIN RSA PRIVATE KEY-----</p>

<p>and ends with:</p>

<p>-----END RSA PRIVATE KEY-----</p>

<p>Below them there is a bunch of encrypted data.</p>

<p>I have read somewhere that this file must begin with this line.</p>

<p>Anyway I cannot connect to my FTP server.</p>

<p>From freeFTPd control panel, in the section for SFTP, I can create RSA and DSA keys (512, 1024 or 2048 bits of lenght). These files are generated as RSAKey.cfg and DSAKey.cfg and their content are similar to private key file 'freeftpd.key' generated during freeFTPd installation process. If I use RSAKey.cfg or any other just created from freeFTPd it is not working. The error message that appears is:</p>

<pre><code>Permission denied (publickey).
</code></pre>

<p>So What I am doing wrong? I have no idea about certificates, private key files... Any help will be highly appreciated.</p>
","<p>In my case I got the message ( (Permission denied (publickey))) when PasswordAuthentication was missing. The server needed the certificate an username/password.</p>

<p>Please try to add both methods as described below. </p>

<p>I used a combination of SSH.NET as a client and syncplify.me Server.</p>

<pre><code>var keyFile = new PrivateKeyFile(config.SFTPPrivateKeyFilename);
var keyFiles = new[] { keyFile };
var methods = new List&lt;AuthenticationMethod&gt;
{
    new PasswordAuthenticationMethod(config.SFTPUser, config.SFTPPassword),
    new PrivateKeyAuthenticationMethod(config.SFTPUser, keyFiles)
};

return new ConnectionInfo(config.SFTPServer, 22, config.SFTPUser, methods.ToArray());   
</code></pre>
","8213","<c#><.net><visual-studio><private-key><ssh.net>","2","2","4","2018-10-15 16:52:57","","0","1","1624552","","2017-04-16 19:41:19","2017-04-16 14:01:57",""
"2774382","IIS 6 Private Key certificate access","<p>We have a Web asp.net application running in the framework 2.0 and hosted in an IIS 6 server, and the OS is windows server 2003.  The web application is suing a client certificate to be authenticated by a web service. We have impersonalized the application pool with de user “Network Service”.  </p>

<p>The problem is when we have to access to the private key of the certificate that is stored in the machine key/my storage. The user Network Service cannot access the key.</p>

<p>We have given privileges to the Network Service user using the winhttpcertcfg.exe tool, however the result is the same.</p>

<p>When we impersonalize the application pool with the local administrator the result is successfully. Therefore we think that the problem is the privileges of the user.</p>

<p>If someone could give us some information about, we would be gratefully.</p>

<p>Thanks in advance</p>
","<p>Finally we got to solve the problem after many unsuccessfully results but at finish each problem has its own solution.</p>

<p>Our solution consists of <strong>creating an administrator account</strong> for the local machine. After that we log on with this account and <strong>run the MMC /s Command</strong>. We <strong>import the certificate in LOCAL_MACHINE/My store</strong>. </p>

<p>The second part is to <strong>remove the user from the administrator group</strong> and <strong>we create a  Service Account for an ASP.NET 2.0 Application with the created user</strong>, which is better explained in the following URL <a href=""http://msdn.microsoft.com/en-us/library/ms998297.aspx"" rel=""nofollow noreferrer"">http://msdn.microsoft.com/en-us/library/ms998297.aspx</a>.</p>

<p>Good luck.</p>
","7877","<iis-6><private-key><cer>","0","2","2","2012-05-02 05:40:16","","0","","","","","2010-05-05 15:03:49",""
"2774382","IIS 6 Private Key certificate access","<p>We have a Web asp.net application running in the framework 2.0 and hosted in an IIS 6 server, and the OS is windows server 2003.  The web application is suing a client certificate to be authenticated by a web service. We have impersonalized the application pool with de user “Network Service”.  </p>

<p>The problem is when we have to access to the private key of the certificate that is stored in the machine key/my storage. The user Network Service cannot access the key.</p>

<p>We have given privileges to the Network Service user using the winhttpcertcfg.exe tool, however the result is the same.</p>

<p>When we impersonalize the application pool with the local administrator the result is successfully. Therefore we think that the problem is the privileges of the user.</p>

<p>If someone could give us some information about, we would be gratefully.</p>

<p>Thanks in advance</p>
","<p>As for me, only this solution works (IIS 6, Win 2003 Srv), but with one issue...
My special account can read certificate from ASP.NET application only if I start any application before it with it's rights (""Run as...""). Without this action a have security error when I try to send http-request (WinHttpRequest) with certificate I need.</p>
","7877","<iis-6><private-key><cer>","0","1","2","2012-05-02 05:40:16","","0","","","","","2010-05-05 15:03:49",""
"7874405","The best way to export private key as byte array","<p>I write application that has to get private key from the user and then send it to another application as base64, I want to allow the user to insert a X509Certificate2 with the private key.
Now my bigproblem is how can I convert the private key from AsimetricAlgorithm object to bate array that contains all the private key?
I saw that I can use openSSl - convert all the certificate to pem file, and then to RSA file - and read the private key, but I dont want to use it because: I dont want to use on files, 3P library, it's not secure and so on..
does anyone know about another way to do that?</p>

<p>thanks in advance!</p>
","<p>The <code>AsymmetricAlgorithm</code> object you get from the <code>PrivateKey</code> property of your <code>X509Certificate2</code> will in fact be an instance of one of the various types derived from <code>AsymmetricAlgorithm</code>, such as <code>RSACryptoServiceProvider</code>, <code>DSACryptoServiceProvider</code>, etc...</p>

<p>You will need to determine the type of private key you're dealing with, and cast it appropriately. Once cast, you should be able to call <code>ExportCspBlob(true)</code> to get the private key data.</p>

<p>Example (assuming an RSA key):</p>

<pre><code>public string GetRSAPrivateKeyBase64(X509Certificate2 certificate)
{
    var privateKey = certificate.PrivateKey as RSACryptoServiceProvider;
    if (privateKey == null) throw new Exception(""Not an RSA private key"");
    // Export the CSP blob, including private key parameters 
    var cspBlob = privateKey.ExportCspBlob(true);
    return Convert.ToBase64String(cspBlob);
}
</code></pre>
","7811","<c#><private-key><x509certificate2>","3","3","1","2011-10-24 15:16:23","","0","","","","","2011-10-24 10:42:38",""
"8451205","Create PrivateKey and PublicKey having a byte array encoded in base 64","<p>I have the <code>byte[]</code> with my private key (llave) and a <code>byte[]</code> with my public key (certificado=. </p>

<p>I need to convert these two values in a <code>PrivateKey</code> and <code>PublicKey</code> object (respectively) to use them later for signing digitally an xml document. </p>

<p>I have tried with <code>KeyStore</code> and I couldn't do it. I also tried with <code>KeyFactory</code> with the following code: </p>

<pre><code>import java.io.StringWriter;
import java.security.KeyFactory;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.spec.PKCS8EncodedKeySpec;
import java.security.spec.X509EncodedKeySpec;
import java.util.Collections;

import javax.xml.crypto.dsig.CanonicalizationMethod;
import javax.xml.crypto.dsig.DigestMethod;
import javax.xml.crypto.dsig.Reference;
import javax.xml.crypto.dsig.SignatureMethod;
import javax.xml.crypto.dsig.SignedInfo;
import javax.xml.crypto.dsig.Transform;
import javax.xml.crypto.dsig.XMLSignature;
import javax.xml.crypto.dsig.XMLSignatureFactory;
import javax.xml.crypto.dsig.dom.DOMSignContext;
import javax.xml.crypto.dsig.keyinfo.KeyInfo;
import javax.xml.crypto.dsig.keyinfo.KeyInfoFactory;
import javax.xml.crypto.dsig.keyinfo.KeyValue;
import javax.xml.crypto.dsig.spec.C14NMethodParameterSpec;
import javax.xml.crypto.dsig.spec.TransformParameterSpec;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
public class GeneraXMLCancelacion {
public static void main (String [] args) {
    byte[] certificado = args[0].getBytes();
    byte[] llave = args[1].getBytes();
    String uuids = args[2];
    String rfc = args[3];
    String fecha = args[4];

    String [] uuid = uuids.split(""/"");

    //GENERAR XML
    try {
        //Crear un document XML vacío
        DocumentBuilderFactory dbfac = DocumentBuilderFactory.newInstance();
        dbfac.setNamespaceAware(true);
        DocumentBuilder docBuilder;
        docBuilder = dbfac.newDocumentBuilder();
        Document doc = docBuilder.newDocument();
        doc.setXmlVersion(""1.0"");
        doc.setXmlStandalone(true);

        Element cancelacion = doc.createElementNS(""http://cancelacfd.sat.gob.mx"",""Cancelacion"");
        cancelacion.setAttribute(""RfcEmisor"", rfc);
        cancelacion.setAttribute(""Fecha"", fecha);
        doc.appendChild(cancelacion);

        Element folios = doc.createElementNS(""http://cancelacfd.sat.gob.mx"", ""Folios"");
        cancelacion.appendChild(folios);
        for (int i=0; i&lt;uuid.length; i++) {
            Element u = doc.createElementNS(""http://cancelacfd.sat.gob.mx"",""UUID"");
            u.setTextContent(uuid[i]);
            folios.appendChild(u);
        }

        //create a keyfactory - use whichever algorithm and provider
        KeyFactory kf = KeyFactory.getInstance(""DSA"");
        //for private keys use PKCS8EncodedKeySpec; for public keys use X509EncodedKeySpec
        PKCS8EncodedKeySpec ks = new PKCS8EncodedKeySpec(llave);
        PrivateKey privateKey = kf.generatePrivate(ks);
        X509EncodedKeySpec x = new X509EncodedKeySpec(certificado);
        PublicKey publicKey = kf.generatePublic(x);


        DOMSignContext dsc = new DOMSignContext (privateKey, doc.getDocumentElement()); 
        XMLSignatureFactory fac = XMLSignatureFactory.getInstance(""DOM"");

        Reference ref = fac.newReference ("""", fac.newDigestMethod(DigestMethod.SHA1, null), 
                    Collections.singletonList
                    (fac.newTransform(Transform.ENVELOPED,
                    (TransformParameterSpec) null)), null, null);
        KeyInfoFactory kif = fac.getKeyInfoFactory();
        KeyValue kv = kif.newKeyValue(publicKey);
        KeyInfo ki = kif.newKeyInfo(Collections.singletonList(kv)); 

        SignedInfo si = fac.newSignedInfo
                  (fac.newCanonicalizationMethod
                    (CanonicalizationMethod.INCLUSIVE_WITH_COMMENTS,
                      (C14NMethodParameterSpec) null),
                    fac.newSignatureMethod(SignatureMethod.DSA_SHA1, null),
                    Collections.singletonList(ref)); 

        KeyInfoFactory kif2 = fac.getKeyInfoFactory();
        KeyValue kv2 = kif2.newKeyValue(publicKey);
        KeyInfo ki2 = kif.newKeyInfo(Collections.singletonList(kv)); 

        XMLSignature signature = fac.newXMLSignature(si, ki);

        signature.sign(dsc);

        //IMPRIMIR EL DOCUMENTO XML
        TransformerFactory transfac = TransformerFactory.newInstance();
        Transformer trans = transfac.newTransformer();
        trans.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, ""no"");
        trans.setOutputProperty(OutputKeys.VERSION, ""1.0"");
        trans.setOutputProperty(OutputKeys.INDENT, ""yes"");

        //CREAR STRING DEL ARBOL XML
        StringWriter sw = new StringWriter();
        StreamResult result = new StreamResult(sw);
        DOMSource source = new DOMSource(doc);
        trans.transform(source, result);
        String xmlString = sw.toString();
        System.out.println(xmlString);
    } catch (ParserConfigurationException e) {
        e.printStackTrace();
    } catch (TransformerConfigurationException e) {
        e.printStackTrace();
    } catch (TransformerException e) {
        e.printStackTrace();
    } catch (Exception e) {
        e.printStackTrace();
    }

}
}
</code></pre>

<p>When running the program I get this error:</p>

<pre><code>java.security.spec.InvalidKeySpecException: Inappropriate key specification: invalid key format
at sun.security.provider.DSAKeyFactory.engineGeneratePrivate(Unknown Source)
at java.security.KeyFactory.generatePrivate(Unknown Source)
at vital.cancelaciones.GeneraXMLCancelacion.main(GeneraXMLCancelacion.java:85)
</code></pre>

<p>Line 85 corresponds to:</p>

<blockquote>
  <p>PrivateKey privateKey = kf.generatePrivate(ks);</p>
</blockquote>

<p>If anyone has any better solution, I would appreciate your help.</p>
","<p>I have a similar code that I know works and it is similar to yours:</p>

<pre><code> public KeyPair createKeyPair(byte[] encodedPrivateKey, byte[] encodedPublicKey) {
    try {
        EncodedKeySpec privateKeySpec = new PKCS8EncodedKeySpec(encodedPrivateKey);
        KeyFactory generator = KeyFactory.getInstance(ASYM_ALGORITHM);
        PrivateKey privateKey = generator.generatePrivate(privateKeySpec);

        EncodedKeySpec publicKeySpec = new X509EncodedKeySpec(encodedPublicKey);
        PublicKey publicKey = generator.generatePublic(publicKeySpec);
        return new KeyPair(publicKey, privateKey);
    } catch (Exception e) {
        throw new IllegalArgumentException(""Failed to create KeyPair from provided encoded keys"", e);
    }
}
</code></pre>

<p>I think the byte array for the key is wrong. How do you pass it to the main method?</p>
","7734","<java><encryption><public-key><private-key>","2","6","1","2011-12-09 21:49:58","8452134","11","1","1084509","","2011-12-09 21:37:00","2011-12-09 20:17:01",""
"1540491","How to communicate AES initialization Vector to client for hybrid cryptosystem","<p>I need to implemented security for client-server communication. I have implemented the following <a href=""http://en.wikipedia.org/wiki/Hybrid_cryptosystem/"" rel=""noreferrer"">hybrid cryptosystem</a></p>

<p>To encrypt a message addressed to Alice in a hybrid cryptosystem, Bob does the following:</p>

<ol>
<li>Obtains Alice's public key.</li>
<li>Generates a fresh symmetric key for the data encapsulation scheme.</li>
<li>Encrypts the message under the data encapsulation scheme, using the symmetric key just generated.</li>
<li>Encrypt the symmetric key under the key encapsulation scheme, using Alice's public key.</li>
<li>Send both of these encryptions to Alice.</li>
</ol>

<p>To decrypt this hybrid ciphertext, Alice does the following:</p>

<ol>
<li>uses her private key to decrypt the symmetric key contained in the key encapsulation segment.</li>
<li>uses this symmetric key to decrypt the message contained in the data encapsulation segment.</li>
</ol>

<p>I am using RSA For a public-key cryptosystem, and AES for symmetric-key cryptosystem. Every thing works fine, but I am not sure how to handle AES initialization vector. Currently, I am concatenating the AES key and initialization vector encrypting it with the public key and sending that to server.</p>

<p>I just wanted to get some opinions about this approach. How this problem is solved by other communication protocols SSL etc.</p>

<p>Thanks.</p>
","<p>I've done the same thing, and I handled it the same way - concatenate the AES key with the IV and encrypt them both.</p>

<p>You could also just send the key and use the key itself to generate an IV - for example by using the first 128 bits of a hash of the key as the IV.  That should be OK security-wise as long as you are generating a new AES key for each session and not re-using the same AES key over and over with the same IV.</p>
","7697","<encryption><rsa><aes><public-key><private-key>","9","2","3","2012-12-31 08:25:56","1540663","0","4","1887603","","2012-12-31 08:25:56","2009-10-08 21:06:38",""
"1540491","How to communicate AES initialization Vector to client for hybrid cryptosystem","<p>I need to implemented security for client-server communication. I have implemented the following <a href=""http://en.wikipedia.org/wiki/Hybrid_cryptosystem/"" rel=""noreferrer"">hybrid cryptosystem</a></p>

<p>To encrypt a message addressed to Alice in a hybrid cryptosystem, Bob does the following:</p>

<ol>
<li>Obtains Alice's public key.</li>
<li>Generates a fresh symmetric key for the data encapsulation scheme.</li>
<li>Encrypts the message under the data encapsulation scheme, using the symmetric key just generated.</li>
<li>Encrypt the symmetric key under the key encapsulation scheme, using Alice's public key.</li>
<li>Send both of these encryptions to Alice.</li>
</ol>

<p>To decrypt this hybrid ciphertext, Alice does the following:</p>

<ol>
<li>uses her private key to decrypt the symmetric key contained in the key encapsulation segment.</li>
<li>uses this symmetric key to decrypt the message contained in the data encapsulation segment.</li>
</ol>

<p>I am using RSA For a public-key cryptosystem, and AES for symmetric-key cryptosystem. Every thing works fine, but I am not sure how to handle AES initialization vector. Currently, I am concatenating the AES key and initialization vector encrypting it with the public key and sending that to server.</p>

<p>I just wanted to get some opinions about this approach. How this problem is solved by other communication protocols SSL etc.</p>

<p>Thanks.</p>
","<p>There is no reason to encrypt the IV - you can send that in the clear.  Just make sure you pick a new one each time (the same way you do the AES key).</p>

<p>That said, it is often convenient to package the AES key and IV together.  Encryption of 16 bytes ain't that expensive.</p>
","7697","<encryption><rsa><aes><public-key><private-key>","9","2","3","2012-12-31 08:25:56","1540663","0","4","1887603","","2012-12-31 08:25:56","2009-10-08 21:06:38",""
"1540491","How to communicate AES initialization Vector to client for hybrid cryptosystem","<p>I need to implemented security for client-server communication. I have implemented the following <a href=""http://en.wikipedia.org/wiki/Hybrid_cryptosystem/"" rel=""noreferrer"">hybrid cryptosystem</a></p>

<p>To encrypt a message addressed to Alice in a hybrid cryptosystem, Bob does the following:</p>

<ol>
<li>Obtains Alice's public key.</li>
<li>Generates a fresh symmetric key for the data encapsulation scheme.</li>
<li>Encrypts the message under the data encapsulation scheme, using the symmetric key just generated.</li>
<li>Encrypt the symmetric key under the key encapsulation scheme, using Alice's public key.</li>
<li>Send both of these encryptions to Alice.</li>
</ol>

<p>To decrypt this hybrid ciphertext, Alice does the following:</p>

<ol>
<li>uses her private key to decrypt the symmetric key contained in the key encapsulation segment.</li>
<li>uses this symmetric key to decrypt the message contained in the data encapsulation segment.</li>
</ol>

<p>I am using RSA For a public-key cryptosystem, and AES for symmetric-key cryptosystem. Every thing works fine, but I am not sure how to handle AES initialization vector. Currently, I am concatenating the AES key and initialization vector encrypting it with the public key and sending that to server.</p>

<p>I just wanted to get some opinions about this approach. How this problem is solved by other communication protocols SSL etc.</p>

<p>Thanks.</p>
","<p>You don't encrypt the IV. Bundle it with the encrypted key and send it (in the clear) to the recipient.</p>

<p>Standards for this do exist. This scheme is called ""KeyTransRecipientInfo"" in CMS (upon which S/MIME is based), and PGP offers a similar mode. TLS also includes the initialization vector as a parameter in the key encryption algorithm identifier, using the same ASN.1 syntax as CMS. A robust, open-source library to perform this operation is available for many, many platforms.</p>

<p>At the very least, studying the CMS specification might help avoid some of the many pitfalls in a home-brew implementation. See <a href=""http://www.ietf.org/rfc/rfc3369.txt"" rel=""noreferrer"">&sect;6.1 and &sect;6.2.1 of RFC 3369.</a></p>
","7697","<encryption><rsa><aes><public-key><private-key>","9","10","3","2012-12-31 08:25:56","1540663","0","4","1887603","","2012-12-31 08:25:56","2009-10-08 21:06:38",""
"6449443","How can we copy an EVP_PKEY which includes RSA key?","<p>I found the function <code>EVP_PKEY_copy_parameters</code>, which can copy <code>EVP_PKEY</code>. 
But some documentations about this function says it can only be used for DSA/ECC algorithms.
The official documentation (from <a href=""http://www.openssl.org"" rel=""noreferrer"">openssl.org</a>) does not mention whether the function can be used for RSA EVP_PKEYs.</p>

<p>Another implementation for <code>EVP_PKEY</code> (that contains an RSA key) could be this:</p>

<pre><code>EVP_PKEY_assign_RSA(RSAPrivateKey_dup(EVP_PKEY_get1_RSA(pkey)));
</code></pre>

<p>Do you have any suggestions?</p>
","<p>If you don't <strong>really</strong> need to duplicate the key, you can just increment its reference count, like this:</p>

<pre><code>CRYPTO_add(&amp;your_evp_pkey-&gt;references, 1, CRYPTO_LOCK_EVP_PKEY);
</code></pre>

<p><strong>Otherwise</strong>, a similar (almost identical) approach to what you suggested would be the following:</p>

<pre><code>int pkey_rsa_dup(EVP_PKEY *dst_pkey, EVP_PKEY *src_key) {
    // Validate underlying key type - Only allow a RSA key
    if (src_key-&gt;type != EVP_PKEY_RSA)
        return -1;

    RSA *rsa = EVP_PKEY_get1_RSA(src_key); // Get the underlying RSA key
    RSA *dup_rsa = RSAPrivateKey_dup(rsa); // Duplicate the RSA key
    RSA_free(rsa); // Decrement reference count

    EVP_PKEY_set1_RSA(dst_pkey, dup_rsa); // Set the underlying RSA key in dst_pkey
    // EVP_PKEY_set1_RSA also adjusts the other members in dst_pkey

    return 0;
}
</code></pre>

<p><s>Reference: <a href=""http://www.mail-archive.com/openssl-users@openssl.org/msg17614.html"" rel=""nofollow noreferrer"">Re: How to duplicate an EVP_PKEY</a></s> -> As @X-Istence says below, the <code>RSA_dup</code> method suggested in this reference thread doesn't exist in OpenSSL (at least until the date of this update).</p>
","7373","<c><openssl><x509><private-key>","6","6","2","2017-05-12 20:57:36","","0","1","298054","","2011-08-18 20:42:33","2011-06-23 04:47:27",""
"6449443","How can we copy an EVP_PKEY which includes RSA key?","<p>I found the function <code>EVP_PKEY_copy_parameters</code>, which can copy <code>EVP_PKEY</code>. 
But some documentations about this function says it can only be used for DSA/ECC algorithms.
The official documentation (from <a href=""http://www.openssl.org"" rel=""noreferrer"">openssl.org</a>) does not mention whether the function can be used for RSA EVP_PKEYs.</p>

<p>Another implementation for <code>EVP_PKEY</code> (that contains an RSA key) could be this:</p>

<pre><code>EVP_PKEY_assign_RSA(RSAPrivateKey_dup(EVP_PKEY_get1_RSA(pkey)));
</code></pre>

<p>Do you have any suggestions?</p>
","<p>In OpenSSL 1.0.0d, <code>EVP_PKEY_copy_parameters</code> should work. However, judging from the implementation, it just seems to copy the public parameters:</p>

<pre><code>static int pkey_rsa_copy(EVP_PKEY_CTX *dst, EVP_PKEY_CTX *src) {
    RSA_PKEY_CTX *dctx, *sctx;
    if (!pkey_rsa_init(dst))
        return 0;
    sctx = src-&gt;data;
    dctx = dst-&gt;data;
    dctx-&gt;nbits = sctx-&gt;nbits;
    if (sctx-&gt;pub_exp) {
        dctx-&gt;pub_exp = BN_dup(sctx-&gt;pub_exp);
        if (!dctx-&gt;pub_exp)
            return 0;
    }
    dctx-&gt;pad_mode = sctx-&gt;pad_mode;
    dctx-&gt;md = sctx-&gt;md;
    return 1;
}
</code></pre>

<p>Apart from jweyrich's solution, another simple method is to first <code>i2d_RSAPrivateKey</code> your RSA key then <code>d2i_RSAPrivateKey</code> it again - there's your copy :)</p>
","7373","<c><openssl><x509><private-key>","6","2","2","2017-05-12 20:57:36","","0","1","298054","","2011-08-18 20:42:33","2011-06-23 04:47:27",""
"17400058","How to use openssl lib pem_read to read public/private key from a string","<p>I use openssl in C++ ,  copy the PrivateKey and PublicKey file content to two const char*,
but I see the demo of api is only get pem public/private key from a pem file,so how can I get a public/private key from a string?</p>
","<p>Try this:</p>

<pre><code>char* mKey=""-----BEGIN RSA PRIVATE KEY-----\nMIICXAIBAAKBgQCDT4ntP3Fqj73RQW32B6hCDHMG64GtxeQDZ5BcQnQSRB3S/EwM\ngpZwuGYwTb7E65pdAAQ0e5na2d7yIGZX4MoDRGaDbYgdxr49J430cVLRU1r9EW+O\nqZQERyGYefxWOqBaNZL2PBclS/qf+AxRh1WnD8aY5V5zNItgVV4Bv9w4YQIDAQAB\nAoGAMd6xaXNg5bG1y5Vn57q8wmjr/sLOu2qe0FQy1Xc/kfhgw1Kip1WpQSInXU0J\nmMxKEewBrNUMd7urGpYHiHSNA+QXiIp3qxGy7PrmZrPSrJImPxAE02YaUGDoh+6o\nZJc7xXCw2bwX8Fth8Duj2KNcIDuWuieybfzwTYKKJG3J04ECQQDxSa4gq/0SiiZ2\nc8YTn9wCTwqezmdI8SWsWXRnpXt1BhejokvLFbqpfQZ6m9LLYvpUsihZ2QkBXUl/\n1/uNu+aJAkEAi1Ey/7fjJJSJalNUgF3lKQdTqUlYI/9O9/98zPOcDmXcKlLNpf+f\nTV3nhK3vsewYqsx3Tu9bMKBVTE0dv+/NGQJAHfYyQyhYMpcpE4hozkMJhNffz7x9\notcfAHnTNJOd8vggs1cR5lP6a9V0moEC+fJ+d0nwLMgAkETPParKN91fUQJAEWMB\n3V4ir+cFu0pJCngtaFBsxXzMzjlHrrWo6p8gg798mZ+Z4LSlOe+VPD7E4kyXy4EX\nBrfihpAL9SjOpKyVyQJBAPD3E4Z7THZCQI/2u4eRXz3qbJAmPYLPTn/AxuX4VssW\n1WJAxZeCFHWL6+/84zoDWwzXN0xQFzO0ZspxxQNFqCI=\n-----END RSA PRIVATE KEY-----"";


BIO* bo = BIO_new( BIO_s_mem() );
BIO_write( bo, mKey,strlen(mKey));

EVP_PKEY* pkey = 0;
PEM_read_bio_PrivateKey( bo, &amp;pkey, 0, 0 );

BIO_free(bo);


RSA* rsa = EVP_PKEY_get1_RSA( pkey );
</code></pre>
","7307","<c++><string><openssl><private-key><pem>","2","7","2","2017-03-23 04:10:31","18350718","0","","1386191","","2014-09-16 11:22:06","2013-07-01 08:20:35",""
"17400058","How to use openssl lib pem_read to read public/private key from a string","<p>I use openssl in C++ ,  copy the PrivateKey and PublicKey file content to two const char*,
but I see the demo of api is only get pem public/private key from a pem file,so how can I get a public/private key from a string?</p>
","<p>Here is the code to get public key from string in C++ using the <code>openssl</code> library.   </p>

<pre><code>#include &lt;openssl/bio.h&gt;
#include &lt;openssl/rsa.h&gt;

const std::string RsaPublicKey = ""-----BEGIN PUBLIC KEY---"";
RSA* public_key_;
IO* bo = BIO_new(BIO_s_mem());
BIO_write(bo, RsaPublicKey.c_str(),RsaPublicKey.length());
PEM_read_bio_RSA_PUBKEY(bo, &amp;public_key_, 0, 0 );
BIO_free(bo);
RSA_free(public_key_);
</code></pre>
","7307","<c++><string><openssl><private-key><pem>","2","1","2","2017-03-23 04:10:31","18350718","0","","1386191","","2014-09-16 11:22:06","2013-07-01 08:20:35",""
"3321174","What algorithm does PGP use to encrypt the private key using the passphrase?","<p>The PGPKeyRingGenerator constructor takes in a passphrase to encrypt the private key. What is the algorithm that it uses to do this? It has a field called encAlgorithm, but I couldn't find any documentation explaining what these algorithms are.</p>
","<blockquote>
  <p>PGP encryption uses a serial combination of hashing, data compression, symmetric-key cryptography, and, finally, public-key cryptography; each step uses one of several supported algorithms. Each public key is bound to a user name and/or an e-mail address. The first version of this system was generally known as a web of trust to contrast with the X.509 system which uses a hierarchical approach based on certificate authority  and which was added to PGP implementations later. Current versions of PGP encryption include both options through an automated key management server.</p>
</blockquote>

<p>Taken from <a href=""http://en.wikipedia.org/wiki/Pretty_Good_Privacy"" rel=""nofollow noreferrer"">this wikipedia page</a>.
It should be what you are looking for.</p>
","7228","<java><bouncycastle><pgp><private-key>","2","0","3","2012-12-31 09:08:37","3321507","0","1","","","","2010-07-23 18:20:59",""
"3321174","What algorithm does PGP use to encrypt the private key using the passphrase?","<p>The PGPKeyRingGenerator constructor takes in a passphrase to encrypt the private key. What is the algorithm that it uses to do this? It has a field called encAlgorithm, but I couldn't find any documentation explaining what these algorithms are.</p>
","<p>By default, PGP uses IDEA (<a href=""http://www.quadibloc.com/crypto/co040302.htm"" rel=""nofollow noreferrer"">Refer this</a>).</p>

<p>The other algorithms can be defined in  encAlgorithm and following are supported by OpenPGP,</p>

<pre><code>public interface SymmetricKeyAlgorithmTags
{
    public static final int NULL = 0;        // Plaintext or unencrypted data
    public static final int IDEA = 1;        // IDEA [IDEA]
    public static final int TRIPLE_DES = 2;  // Triple-DES (DES-EDE, as per spec -168 bit key derived from 192)
    public static final int CAST5 = 3;       // CAST5 (128 bit key, as per RFC 2144)
    public static final int BLOWFISH = 4;    // Blowfish (128 bit key, 16 rounds) [BLOWFISH]
    public static final int SAFER = 5;       // SAFER-SK128 (13 rounds) [SAFER]
    public static final int DES = 6;         // Reserved for DES/SK
    public static final int AES_128 = 7;     // Reserved for AES with 128-bit key
    public static final int AES_192 = 8;     // Reserved for AES with 192-bit key
    public static final int AES_256 = 9;     // Reserved for AES with 256-bit key
    public static final int TWOFISH = 10;    // Reserved for Twofish
}
</code></pre>

<p>They all use CFB mode with no padding.</p>
","7228","<java><bouncycastle><pgp><private-key>","2","2","3","2012-12-31 09:08:37","3321507","0","1","","","","2010-07-23 18:20:59",""
"3321174","What algorithm does PGP use to encrypt the private key using the passphrase?","<p>The PGPKeyRingGenerator constructor takes in a passphrase to encrypt the private key. What is the algorithm that it uses to do this? It has a field called encAlgorithm, but I couldn't find any documentation explaining what these algorithms are.</p>
","<p>It depends on PGP software, for example GPG uses CAST5 by default.</p>
","7228","<java><bouncycastle><pgp><private-key>","2","1","3","2012-12-31 09:08:37","3321507","0","1","","","","2010-07-23 18:20:59",""
"44681737","Get a PrivateKey from a RSA .pem file","<p>Given this <code>.pem</code> file (generated with openssl and encrypted with a password):</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: DES-EDE3-CBC,AC009672952033EB

2wegzxf3MtncXS1CY3c.....
....
....
-----END RSA PRIVATE KEY-----
</code></pre>

<p>How do I get a <code>PrivateKey</code> object in Java? I wrote the following code but I cannot find the right way to get a <code>KeySpec</code>:</p>

<pre><code>PrivateKey readFromPem(File keyFile, String password){
    PemReader r = new PemReader(new InputStreamReader(new FileInputStream(keyFile)));
    PemObject pemObject = r.readPemObject();
    byte[] encodedKey = pemObject.getContent();

    KeySpec keySpec = ???? // how to get this?

    KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
    PrivateKey key = keyFactory.generatePrivate(keySpec);
    return key;
}
</code></pre>

<p>I guess I should build a <code>RSAPrivateKeySpec</code>, but I don't know how. I tried the method from <a href=""https://stackoverflow.com/a/20748064/3202887"">this answer</a> and <a href=""https://stackoverflow.com/a/30929175/3202887"">this other answer</a>, but they both result in errors when parsing the byte array.</p>
","<p>Use Bouncy Castle's <em>bcpkix</em> dependency which knows how to handle OpenSSL keys.</p>

<pre><code>&lt;dependency&gt;
  &lt;groupId&gt;org.bouncycastle&lt;/groupId&gt;
  &lt;artifactId&gt;bcpkix-jdk14&lt;/artifactId&gt;
  &lt;version&gt;1.57&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

<p>and try it like this:</p>

<pre><code>private PrivateKey readFromPem(File keyFile, String password) throws IOException {
    Security.addProvider(new BouncyCastleProvider());

    PEMParser pemParser = new PEMParser(new InputStreamReader(new FileInputStream(keyFile)));
    PEMEncryptedKeyPair encryptedKeyPair = (PEMEncryptedKeyPair) pemParser.readObject();
    PEMDecryptorProvider decryptorProvider = new JcePEMDecryptorProviderBuilder().build(password.toCharArray());
    PEMKeyPair pemKeyPair = encryptedKeyPair.decryptKeyPair(decryptorProvider);

    JcaPEMKeyConverter converter = new JcaPEMKeyConverter().setProvider(""BC"");
    return converter.getPrivateKey(pemKeyPair.getPrivateKeyInfo());
}
</code></pre>
","6981","<java><rsa><bouncycastle><private-key>","7","4","2","2017-06-21 21:41:04","44683080","0","1","608639","","2017-06-21 21:41:04","2017-06-21 16:38:46","2017-06-22 01:00:00"
"44681737","Get a PrivateKey from a RSA .pem file","<p>Given this <code>.pem</code> file (generated with openssl and encrypted with a password):</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: DES-EDE3-CBC,AC009672952033EB

2wegzxf3MtncXS1CY3c.....
....
....
-----END RSA PRIVATE KEY-----
</code></pre>

<p>How do I get a <code>PrivateKey</code> object in Java? I wrote the following code but I cannot find the right way to get a <code>KeySpec</code>:</p>

<pre><code>PrivateKey readFromPem(File keyFile, String password){
    PemReader r = new PemReader(new InputStreamReader(new FileInputStream(keyFile)));
    PemObject pemObject = r.readPemObject();
    byte[] encodedKey = pemObject.getContent();

    KeySpec keySpec = ???? // how to get this?

    KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
    PrivateKey key = keyFactory.generatePrivate(keySpec);
    return key;
}
</code></pre>

<p>I guess I should build a <code>RSAPrivateKeySpec</code>, but I don't know how. I tried the method from <a href=""https://stackoverflow.com/a/20748064/3202887"">this answer</a> and <a href=""https://stackoverflow.com/a/30929175/3202887"">this other answer</a>, but they both result in errors when parsing the byte array.</p>
","<p>I'm using <strong>BouncyCastle 1.57</strong> (bcprov-jdk15on, bcmail-jdk15on and bcpkix-jdk15on) and <strong>Java 7</strong>.</p>

<p>You can read the private key using the <code>JcaPEMKeyConverter</code> class.
The code below works for keys with and without a password:</p>

<pre><code>import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.bouncycastle.openssl.PEMDecryptorProvider;
import org.bouncycastle.openssl.PEMEncryptedKeyPair;
import org.bouncycastle.openssl.PEMKeyPair;
import org.bouncycastle.openssl.PEMParser;
import org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter;
import org.bouncycastle.openssl.jcajce.JcePEMDecryptorProviderBuilder;

// don't forget to add the provider
Security.addProvider(new BouncyCastleProvider());
String password = ""your password"";

// reads your key file
PEMParser pemParser = new PEMParser(new FileReader(keyFile));
Object object = pemParser.readObject();
JcaPEMKeyConverter converter = new JcaPEMKeyConverter().setProvider(""BC"");

KeyPair kp;
if (object instanceof PEMEncryptedKeyPair) {
    // Encrypted key - we will use provided password
    PEMEncryptedKeyPair ckp = (PEMEncryptedKeyPair) object;
    // uses the password to decrypt the key
    PEMDecryptorProvider decProv = new JcePEMDecryptorProviderBuilder().build(password.toCharArray());
    kp = converter.getKeyPair(ckp.decryptKeyPair(decProv));
} else {
    // Unencrypted key - no password needed
    PEMKeyPair ukp = (PEMKeyPair) object;
    kp = converter.getKeyPair(ukp);
}

// RSA
KeyFactory keyFac = KeyFactory.getInstance(""RSA"");
RSAPrivateCrtKeySpec privateKey = keyFac.getKeySpec(kp.getPrivate(), RSAPrivateCrtKeySpec.class);

System.out.println(privateKey.getClass());
</code></pre>

<p>The <code>privateKey</code>'s class will be <code>java.security.spec.RSAPrivateCrtKeySpec</code> (which extends <code>RSAPrivateKeySpec</code>).</p>
","6981","<java><rsa><bouncycastle><private-key>","7","6","2","2017-06-21 21:41:04","44683080","0","1","608639","","2017-06-21 21:41:04","2017-06-21 16:38:46","2017-06-22 01:00:00"
"28442505","JSch how to use with PuTTY private key","<p>I'm trying to use JSch with a private key configuration. I've generated a public and private key using PuTTYgen but am unsure what to do with both of the files.</p>

<p>Which key (public/private) needs transferring to the server?</p>
","<ul>
<li><p>First, you need to register your PuTTYgen-generated <strong>public</strong> key on the server. See <a href=""https://the.earth.li/~sgtatham/putty/latest/htmldoc/Chapter8.html#pubkey-gettingready"" rel=""nofollow noreferrer"">Getting ready for public key authentication</a> or (my) <a href=""https://winscp.net/eng/docs/guide_public_key"" rel=""nofollow noreferrer"">Set up SSH public key authentication</a>.</p></li>
<li><p>And finally see <a href=""https://stackoverflow.com/q/4932005/850848"">Can we use JSch for SSH key-based communication?</a> for details on using the <strong>private</strong> key in JSch.</p></li>
</ul>

<hr>

<p>Make sure you use the latest version of JSch, as older versions do not support the .ppk format natively.</p>
","6964","<putty><jsch><private-key><public-key>","2","3","2","2018-09-06 07:25:25","28448391","0","2","850848","","2015-02-11 07:05:24","2015-02-10 21:49:15",""
"28442505","JSch how to use with PuTTY private key","<p>I'm trying to use JSch with a private key configuration. I've generated a public and private key using PuTTYgen but am unsure what to do with both of the files.</p>

<p>Which key (public/private) needs transferring to the server?</p>
","<p>Code Snippet for connection using PuTTy private Key (.ppk)</p>

<pre><code>JSch jsch=new JSch();
jsch.setKnownHosts(""~\.ssh\know_hosts"");
jsch.addIdentity(""~\sshkey.ppk"");
Session session=jsch.getSession(""ec2-user"", ""54.12.11.90"", 22);
session.setConfig(""PreferredAuthentications"", ""publickey"");
session.setConfig(""StrictHostKeyChecking"", ""no"");
session.connect();
Channel channel=session.openChannel(""shell"");
channel.setInputStream(System.in);
channel.setOutputStream(System.out);
channel.connect(3*1000);
</code></pre>

<p>Have used 0.1.54 version of Jsch</p>

<pre><code>        &lt;dependency&gt;
            &lt;groupId&gt;com.jcraft&lt;/groupId&gt;
            &lt;artifactId&gt;jsch&lt;/artifactId&gt;
            &lt;version&gt;0.1.54&lt;/version&gt;
        &lt;/dependency&gt;
</code></pre>
","6964","<putty><jsch><private-key><public-key>","2","1","2","2018-09-06 07:25:25","28448391","0","2","850848","","2015-02-11 07:05:24","2015-02-10 21:49:15",""
"12359525","How do i read the private key in java from a pfx certificate","<p>I am trying to read a private key  i java .I learned inorder to do that i have to extract  private key from my full certificate in pfx format.
I have tried  the below open ssl command to convert pfx to pem and then to pk8 , but when i tried to read the key in java , it says invalid key format </p>

<p>convert pfx to pem</p>

<pre><code>      openssl pkcs12 -in C:\Documents\xbox-token\conversion\xbox
  token-FullCert.pfx -nocerts -out C:\Documents\xbox-token\conversion\xboxkey.pem
</code></pre>

<p>Removing password protection</p>

<pre><code>openssl rsa -in C:\Documents\xbox-token\conversion\xboxkey.pem  -out C:\Documents\xbox-token\conversion\xboxkey.pem
</code></pre>

<p>Convert pem to pk8 </p>

<pre><code>openssl pkcs8 -topk8 -in C:\Documents\xbox-token\conversion\xboxkey.pem -out C:\Documents\xbox-token\conversion\xboxprv.pk8
</code></pre>

<p>In the java code </p>

<pre><code>  byte[] encodedPrivateKey=null;
    File privateKeyFile = new File(""C:/Documents/xbox-token/conversion/xboxprv.pk8"");
    FileInputStream inputStreamPrivateKey = null;
    try {
        inputStreamPrivateKey = new FileInputStream(privateKeyFile);
          encodedPrivateKey = new byte[(int)privateKeyFile.length()];
            inputStreamPrivateKey.read(encodedPrivateKey);
            inputStreamPrivateKey.close();
    } catch (FileNotFoundException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    } catch (IOException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }


    // Create the private key.
    PKCS8EncodedKeySpec privateKeySpec = new PKCS8EncodedKeySpec(encodedPrivateKey);
    System.out.println(encodedPrivateKey);
    System.out.println(privateKeySpec);
    RSAPrivateKey privateKey = null;
    try {
        privateKey = (RSAPrivateKey)KeyFactory.getInstance(""RSA"").generatePrivate(privateKeySpec);
    } catch (InvalidKeySpecException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    } catch (NoSuchAlgorithmException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
</code></pre>

<p>I am getting an java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: invalid key format</p>

<p>Can any one help </p>
","<p>I think the trick is to do a little bit with openssl and then get keytool to do all the real work. So with openssl convert your existing certificate and key into a PKCS12 file. Using openssl you'd have something like.</p>

<pre><code>openssl pkcs12 \
  -export -in cert.crt \
  -inkey cert.key \
  -certfile ica.crt \
  -name ""yourKey"" \
  -out cert.p12
</code></pre>

<p>And then the magic is to import the .p12 into your keystore as if it was <strong>another</strong> keystore.</p>

<pre><code>$JAVA_HOME/bin/keytool \
  -importkeystore -deststorepass secret \
  -destkeypass secret -destkeystore $KEYSTORE \
  -srckeystore cert.p12 \
  -srcstoretype PKCS12 \
  -srcstorepass secret \
  -alias ""yourKey""
</code></pre>

<p>You have options for using this within java but I would expect a full answer to involve the following.</p>

<pre><code>import java.security.KeyStore;
KeyStore trustStore  = KeyStore.getInstance(KeyStore.getDefaultType());
FileInputStream instream = new FileInputStream(new File(""/your/keystore""));
trustStore.load(instream, ""secret"".toCharArray());
</code></pre>

<p>Hope it works!</p>
","6865","<java><security><openssl><private-key><pem>","1","3","2","2013-01-09 05:00:39","","1","","","","","2012-09-10 21:10:45",""
"12359525","How do i read the private key in java from a pfx certificate","<p>I am trying to read a private key  i java .I learned inorder to do that i have to extract  private key from my full certificate in pfx format.
I have tried  the below open ssl command to convert pfx to pem and then to pk8 , but when i tried to read the key in java , it says invalid key format </p>

<p>convert pfx to pem</p>

<pre><code>      openssl pkcs12 -in C:\Documents\xbox-token\conversion\xbox
  token-FullCert.pfx -nocerts -out C:\Documents\xbox-token\conversion\xboxkey.pem
</code></pre>

<p>Removing password protection</p>

<pre><code>openssl rsa -in C:\Documents\xbox-token\conversion\xboxkey.pem  -out C:\Documents\xbox-token\conversion\xboxkey.pem
</code></pre>

<p>Convert pem to pk8 </p>

<pre><code>openssl pkcs8 -topk8 -in C:\Documents\xbox-token\conversion\xboxkey.pem -out C:\Documents\xbox-token\conversion\xboxprv.pk8
</code></pre>

<p>In the java code </p>

<pre><code>  byte[] encodedPrivateKey=null;
    File privateKeyFile = new File(""C:/Documents/xbox-token/conversion/xboxprv.pk8"");
    FileInputStream inputStreamPrivateKey = null;
    try {
        inputStreamPrivateKey = new FileInputStream(privateKeyFile);
          encodedPrivateKey = new byte[(int)privateKeyFile.length()];
            inputStreamPrivateKey.read(encodedPrivateKey);
            inputStreamPrivateKey.close();
    } catch (FileNotFoundException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    } catch (IOException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }


    // Create the private key.
    PKCS8EncodedKeySpec privateKeySpec = new PKCS8EncodedKeySpec(encodedPrivateKey);
    System.out.println(encodedPrivateKey);
    System.out.println(privateKeySpec);
    RSAPrivateKey privateKey = null;
    try {
        privateKey = (RSAPrivateKey)KeyFactory.getInstance(""RSA"").generatePrivate(privateKeySpec);
    } catch (InvalidKeySpecException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    } catch (NoSuchAlgorithmException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
</code></pre>

<p>I am getting an java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: invalid key format</p>

<p>Can any one help </p>
","<p>Given that you don't specify an output format for your OpenSSL commands you will get a PEM-encoded file. Java will expect DER encoding. Instead of your last openssl call try:</p>

<pre><code>openssl pkcs8 -topk8 -inform=PEM -outform=DER
              -in C:\Documents\xbox-token\conversion\xboxkey.pem 
              -out C:\Documents\xbox-token\conversion\xboxprv.pk8
</code></pre>

<p>The '-inform' parameter shouldn't be required (it seems the default), but the '-outform' probably is.</p>

<p>If you want to check what format you have: PEM files are ASCII (Base64 encoded), DER files are binary. If your text editor likes it, Java probably won't.</p>
","6865","<java><security><openssl><private-key><pem>","1","0","2","2013-01-09 05:00:39","","1","","","","","2012-09-10 21:10:45",""
"16858718","Encryption Failing with error Invalid length for a Base-64 char array or string","<p>I am trying to encrypt a <code>PRIVATE KEY</code> with a passphrase so I can save the file to disk. But the encryption method is throwing the exception: ""<code>Invalid length for a Base-64 char array or string</code>"".</p>

<p>The Encryption method is (it's a <code>2048bit key length</code>):</p>

<pre><code>                    public static string Encrypt(string plainString, string key, int keySize = Keysize.SymmetricKeyLength)
                {
                    var aesEncryption = new RijndaelManaged
                    {
                        KeySize = keySize,
                        BlockSize = 128,
                        Mode = CipherMode.CBC,
                        Padding = PaddingMode.PKCS7,
                        IV = Convert.FromBase64String(Encoding.UTF8.GetString(Convert.FromBase64String(key)).Split(',')[0]),
                        Key = Convert.FromBase64String(Encoding.UTF8.GetString(Convert.FromBase64String(key)).Split(',')[1])
                    };

                    byte[] plainText = Encoding.UTF8.GetBytes(plainString);
                    ICryptoTransform crypto = aesEncryption.CreateEncryptor();
                    // The result of the encryption and decryption            
                    byte[] cipherText = crypto.TransformFinalBlock(plainText, 0, plainText.Length);

                    return Convert.ToBase64String(cipherText);
                }
</code></pre>

<p>I am converting the Private Key to a <code>Base64</code> string before passing it down to the encryption method using this method:</p>

<pre><code>        public string EncodeTo64(string plainString)
        {
            var bytes = Encoding.UTF8.GetBytes(plainString);
            return Convert.ToBase64String(bytes);
        }
</code></pre>

<p>The Private Key is:</p>

<pre><code>&lt;RSAKeyValue&gt;&lt;Modulus&gt;rhtMjLTg17sYlns4ktTow9eeuwRNra0+AO2HqESGmA8zkxe/uOv0msXzzLWUWzdPaTxi4OV+PNVPBAHW1C0CTT/33NlvipkJ1Qr5BJK1TiVZCMInshe4OL/7GNnPUPhsS6DZ/c/fnWLoxtRMUmkKgpWmtXGs7ZSoIztdJ1bgiygJWCDvrHTokVIzDaNzRonZIFk41Qt4rPofCEawjkR639OcOfazNlmU9JjvRs3ysoYghDzvVuLvJvPK7zCMzpJMQFQE7cipezXbumTqSdp20mQXJduDbD9qLKXOvcTw+2KPoNlUp+IRQrOmSf+Dl4Vxi+8+UuOH7KDLz7yL9IOPeQ==&lt;/Modulus&gt;&lt;Exponent&gt;AQAB&lt;/Exponent&gt;&lt;P&gt;2AHey3Tgg/K8M16kv6bWk1BsFGhg9xXZw2ruVhS620gyvPBtWBuOU+tzPRnEplw+Kp9jua7Nu4JkKwpQdZvRqeW42d/UCergkdNRheM3DXYj/xQNs8a1diTNe72elCsCfSHr1z/vgN+Cp+v8O4BzX07TrHeGOOP/7HWhE6setxM=&lt;/P&gt;&lt;Q&gt;zld05TyC/vVI2sBgaR/iYyXdUO3iIIwkGSyOmfDr1dbCKFR7btGLEsW9EpCGibyGPbAk4jA9BLU1bviBM8iH6mxWn1s4UAiIha0QSM2K9NWUPi67FELl6Fs2eLHl9qRniBhAOBCGArklail+YadKCtUsrWhfJgvO3uxkp+fg9MM=&lt;/Q&gt;&lt;DP&gt;sziaCmVnAxObY2PbfciHsKLBig0wptHSZHmMVo/MmbRFpM43aysx5B8u9jszFnTif6rPq3iF6lY9lhhwuaQXScf4n40++RuQSG307gmf2+Nx6mpRFCCC3wuaElk6AeXNotVKQMYjieHpHjqGhTgGgcV9i1OAYiOKbD8M7qzER1E=&lt;/DP&gt;&lt;DQ&gt;FEazzfLsTHF9/0D4OFxRurx1ywYVOm2K/o5KVQY/pnu8CIqEtpcQu3+C3Ngm4FIOPvGYLkHfPR8xaP4ydAw4juimenJUTkkIYVpoRz8rcHOsZY/iAlOwk+yipamVl28AXXdEmD3HbW0UKCJ7sMznkbjw8vlWoD54zZ8dJQK8MFE=&lt;/DQ&gt;&lt;InverseQ&gt;FUFC9v5B1mXxbbiD4WZm/KGIa3XO5+K9FwSRroj8wNMt+JY5aMS8SfUcrZMvUXfHS9+3BYXBIlxPBUm6HnfB7yPE9S0LFzRpB7APbJ0HVIlSjMS9ZdkqxShGAEufYx/FKQXomJlEXXkpgAiDnUnCR2H+ekQf1YpQUzol2KedwfA=&lt;/InverseQ&gt;&lt;D&gt;gEhc/s/HWyzf0QC5jnaRirs0mVdyZKVhKg3aBoF3KlMJDThSa05vzBpOqGaiCROXz1JPCKYPfYMt1SYFxA/lwkV/u5n6NYTNWcvb7yKptAqQr4Ne/Dm94xKRUJ4rwt1H7fF2rSyc9roKCXYjRhVfSRg63TYE1IjT2iHDYVkB2YVPK67O2O7YmQXeUHMRMVwXpnZCvweleRKlYbVFx2N7ZEC1TZoUn2RKsiBEem1eNSwnLa4wUf1Xl8Q8h+ziY0GnREf9JpTZhJW7f4MKsqLyOMgmoskKiIOWlnwq/b01ivB2CXFhxiiVuNUPPiMuJu6bhljeulvKl32kEzLAFxm2gQ==&lt;/D&gt;&lt;/RSAKeyValue&gt;
</code></pre>

<p>and the resulting Base64 string from the above conversion method is:</p>

<pre><code>PFJTQUtleVZhbHVlPjxNb2R1bHVzPnJodE1qTFRnMTdzWWxuczRrdFRvdzllZXV3Uk5yYTArQU8ySHFFU0dtQTh6a3hlL3VPdjBtc1h6ekxXVVd6ZFBhVHhpNE9WK1BOVlBCQUhXMUMwQ1RULzMzTmx2aXBrSjFRcjVCSksxVGlWWkNNSW5zaGU0T0wvN0dOblBVUGhzUzZEWi9jL2ZuV0xveHRSTVVta0tncFdtdFhHczdaU29JenRkSjFiZ2l5Z0pXQ0R2ckhUb2tWSXpEYU56Um9uWklGazQxUXQ0clBvZkNFYXdqa1I2MzlPY09mYXpObG1VOUpqdlJzM3lzb1lnaER6dlZ1THZKdlBLN3pDTXpwSk1RRlFFN2NpcGV6WGJ1bVRxU2RwMjBtUVhKZHVEYkQ5cUxLWE92Y1R3KzJLUG9ObFVwK0lSUXJPbVNmK0RsNFZ4aSs4K1V1T0g3S0RMejd5TDlJT1BlUT09PC9Nb2R1bHVzPjxFeHBvbmVudD5BUUFCPC9FeHBvbmVudD48UD4yQUhleTNUZ2cvSzhNMTZrdjZiV2sxQnNGR2hnOXhYWncycnVWaFM2MjBneXZQQnRXQnVPVSt0elBSbkVwbHcrS3A5anVhN051NEprS3dwUWRadlJxZVc0MmQvVUNlcmdrZE5SaGVNM0RYWWoveFFOczhhMWRpVE5lNzJlbENzQ2ZTSHIxei92Z04rQ3ArdjhPNEJ6WDA3VHJIZUdPT1AvN0hXaEU2c2V0eE09PC9QPjxRPnpsZDA1VHlDL3ZWSTJzQmdhUi9pWXlYZFVPM2lJSXdrR1N5T21mRHIxZGJDS0ZSN2J0R0xFc1c5RXBDR2lieUdQYkFrNGpBOUJMVTFidmlCTThpSDZteFduMXM0VUFpSWhhMFFTTTJLOU5XVVBpNjdGRUxsNkZzMmVMSGw5cVJuaUJoQU9CQ0dBcmtsYWlsK1lhZEtDdFVzcldoZkpndk8zdXhrcCtmZzlNTT08L1E+PERQPnN6aWFDbVZuQXhPYlkyUGJmY2lIc0tMQmlnMHdwdEhTWkhtTVZvL01tYlJGcE00M2F5c3g1Qjh1OWpzekZuVGlmNnJQcTNpRjZsWTlsaGh3dWFRWFNjZjRuNDArK1J1UVNHMzA3Z21mMitOeDZtcFJGQ0NDM3d1YUVsazZBZVhOb3RWS1FNWWppZUhwSGpxR2hUZ0dnY1Y5aTFPQVlpT0tiRDhNN3F6RVIxRT08L0RQPjxEUT5GRWF6emZMc1RIRjkvMEQ0T0Z4UnVyeDF5d1lWT20ySy9vNUtWUVkvcG51OENJcUV0cGNRdTMrQzNOZ200RklPUHZHWUxrSGZQUjh4YVA0eWRBdzRqdWltZW5KVVRra0lZVnBvUno4cmNIT3NaWS9pQWxPd2sreWlwYW1WbDI4QVhYZEVtRDNIYlcwVUtDSjdzTXpua2Jqdzh2bFdvRDU0elo4ZEpRSzhNRkU9PC9EUT48SW52ZXJzZVE+RlVGQzl2NUIxbVh4YmJpRDRXWm0vS0dJYTNYTzUrSzlGd1NScm9qOHdOTXQrSlk1YU1TOFNmVWNyWk12VVhmSFM5KzNCWVhCSWx4UEJVbTZIbmZCN3lQRTlTMExGelJwQjdBUGJKMEhWSWxTak1TOVpka3F4U2hHQUV1Zll4L0ZLUVhvbUpsRVhYa3BnQWlEblVuQ1IySCtla1FmMVlwUVV6b2wyS2Vkd2ZBPTwvSW52ZXJzZVE+PEQ+Z0VoYy9zL0hXeXpmMFFDNWpuYVJpcnMwbVZkeVpLVmhLZzNhQm9GM0tsTUpEVGhTYTA1dnpCcE9xR2FpQ1JPWHoxSlBDS1lQZllNdDFTWUZ4QS9sd2tWL3U1bjZOWVROV2N2Yjd5S3B0QXFRcjROZS9EbTk0eEtSVUo0cnd0MUg3ZkYyclN5Yzlyb0tDWFlqUmhWZlNSZzYzVFlFMUlqVDJpSERZVmtCMllWUEs2N08yTzdZbVFYZVVITVJNVndYcG5aQ3Z3ZWxlUktsWWJWRngyTjdaRUMxVFpvVW4yUktzaUJFZW0xZU5Td25MYTR3VWYxWGw4UThoK3ppWTBHblJFZjlKcFRaaEpXN2Y0TUtzcUx5T01nbW9za0tpSU9XbG53cS9iMDFpdkIyQ1hGaHhpaVZ1TlVQUGlNdUp1NmJobGpldWx2S2wzMmtFekxBRnhtMmdRPT08L0Q+PC9SU0FLZXlWYWx1ZT4=
</code></pre>

<p>Apparently this Base64 string is invalid and the encryption fails.</p>

<p>Can anybody see where I am going wrong?</p>
","<p>Your Base64 string appears to be valid.  When I decode it I get some recognisable XML for RSA:</p>

<pre><code>&lt;RSAKeyValue&gt;
  &lt;Modulus&gt;rht ... PeQ==&lt;/Modulus&gt;
  &lt;Exponent&gt;AQAB&lt;/Exponent&gt;
  &lt;P&gt;2AH ... txM=&lt;/P&gt;
  &lt;Q&gt;zld ... 9MM=&lt;/Q&gt;
  &lt;DP&gt;szi ... R1E=&lt;/DP&gt;
  &lt;DQ&gt;FEa ... 8MFE=&lt;/DQ&gt;
  &lt;InverseQ&gt;FUF ... wfA=&lt;/InverseQ&gt;
  &lt;D&gt;gEh ... m2gQ==&lt;/D&gt;
&lt;/RSAKeyValue&gt;
</code></pre>

<p>That has added newlines and is abbreviated for clarity.</p>

<p>Was that what you were expecting?  If it was then I suggest that you check each of the included pieces of Base64 for errors.  Alternatively, it may just be that your initial piece of Base64 is too long.</p>
","6766","<encryption><base64><private-key><encryption-asymmetric>","1","0","2","2013-06-03 15:13:10","16900046","3","1","1435068","","2013-05-31 13:52:09","2013-05-31 13:41:36",""
"16858718","Encryption Failing with error Invalid length for a Base-64 char array or string","<p>I am trying to encrypt a <code>PRIVATE KEY</code> with a passphrase so I can save the file to disk. But the encryption method is throwing the exception: ""<code>Invalid length for a Base-64 char array or string</code>"".</p>

<p>The Encryption method is (it's a <code>2048bit key length</code>):</p>

<pre><code>                    public static string Encrypt(string plainString, string key, int keySize = Keysize.SymmetricKeyLength)
                {
                    var aesEncryption = new RijndaelManaged
                    {
                        KeySize = keySize,
                        BlockSize = 128,
                        Mode = CipherMode.CBC,
                        Padding = PaddingMode.PKCS7,
                        IV = Convert.FromBase64String(Encoding.UTF8.GetString(Convert.FromBase64String(key)).Split(',')[0]),
                        Key = Convert.FromBase64String(Encoding.UTF8.GetString(Convert.FromBase64String(key)).Split(',')[1])
                    };

                    byte[] plainText = Encoding.UTF8.GetBytes(plainString);
                    ICryptoTransform crypto = aesEncryption.CreateEncryptor();
                    // The result of the encryption and decryption            
                    byte[] cipherText = crypto.TransformFinalBlock(plainText, 0, plainText.Length);

                    return Convert.ToBase64String(cipherText);
                }
</code></pre>

<p>I am converting the Private Key to a <code>Base64</code> string before passing it down to the encryption method using this method:</p>

<pre><code>        public string EncodeTo64(string plainString)
        {
            var bytes = Encoding.UTF8.GetBytes(plainString);
            return Convert.ToBase64String(bytes);
        }
</code></pre>

<p>The Private Key is:</p>

<pre><code>&lt;RSAKeyValue&gt;&lt;Modulus&gt;rhtMjLTg17sYlns4ktTow9eeuwRNra0+AO2HqESGmA8zkxe/uOv0msXzzLWUWzdPaTxi4OV+PNVPBAHW1C0CTT/33NlvipkJ1Qr5BJK1TiVZCMInshe4OL/7GNnPUPhsS6DZ/c/fnWLoxtRMUmkKgpWmtXGs7ZSoIztdJ1bgiygJWCDvrHTokVIzDaNzRonZIFk41Qt4rPofCEawjkR639OcOfazNlmU9JjvRs3ysoYghDzvVuLvJvPK7zCMzpJMQFQE7cipezXbumTqSdp20mQXJduDbD9qLKXOvcTw+2KPoNlUp+IRQrOmSf+Dl4Vxi+8+UuOH7KDLz7yL9IOPeQ==&lt;/Modulus&gt;&lt;Exponent&gt;AQAB&lt;/Exponent&gt;&lt;P&gt;2AHey3Tgg/K8M16kv6bWk1BsFGhg9xXZw2ruVhS620gyvPBtWBuOU+tzPRnEplw+Kp9jua7Nu4JkKwpQdZvRqeW42d/UCergkdNRheM3DXYj/xQNs8a1diTNe72elCsCfSHr1z/vgN+Cp+v8O4BzX07TrHeGOOP/7HWhE6setxM=&lt;/P&gt;&lt;Q&gt;zld05TyC/vVI2sBgaR/iYyXdUO3iIIwkGSyOmfDr1dbCKFR7btGLEsW9EpCGibyGPbAk4jA9BLU1bviBM8iH6mxWn1s4UAiIha0QSM2K9NWUPi67FELl6Fs2eLHl9qRniBhAOBCGArklail+YadKCtUsrWhfJgvO3uxkp+fg9MM=&lt;/Q&gt;&lt;DP&gt;sziaCmVnAxObY2PbfciHsKLBig0wptHSZHmMVo/MmbRFpM43aysx5B8u9jszFnTif6rPq3iF6lY9lhhwuaQXScf4n40++RuQSG307gmf2+Nx6mpRFCCC3wuaElk6AeXNotVKQMYjieHpHjqGhTgGgcV9i1OAYiOKbD8M7qzER1E=&lt;/DP&gt;&lt;DQ&gt;FEazzfLsTHF9/0D4OFxRurx1ywYVOm2K/o5KVQY/pnu8CIqEtpcQu3+C3Ngm4FIOPvGYLkHfPR8xaP4ydAw4juimenJUTkkIYVpoRz8rcHOsZY/iAlOwk+yipamVl28AXXdEmD3HbW0UKCJ7sMznkbjw8vlWoD54zZ8dJQK8MFE=&lt;/DQ&gt;&lt;InverseQ&gt;FUFC9v5B1mXxbbiD4WZm/KGIa3XO5+K9FwSRroj8wNMt+JY5aMS8SfUcrZMvUXfHS9+3BYXBIlxPBUm6HnfB7yPE9S0LFzRpB7APbJ0HVIlSjMS9ZdkqxShGAEufYx/FKQXomJlEXXkpgAiDnUnCR2H+ekQf1YpQUzol2KedwfA=&lt;/InverseQ&gt;&lt;D&gt;gEhc/s/HWyzf0QC5jnaRirs0mVdyZKVhKg3aBoF3KlMJDThSa05vzBpOqGaiCROXz1JPCKYPfYMt1SYFxA/lwkV/u5n6NYTNWcvb7yKptAqQr4Ne/Dm94xKRUJ4rwt1H7fF2rSyc9roKCXYjRhVfSRg63TYE1IjT2iHDYVkB2YVPK67O2O7YmQXeUHMRMVwXpnZCvweleRKlYbVFx2N7ZEC1TZoUn2RKsiBEem1eNSwnLa4wUf1Xl8Q8h+ziY0GnREf9JpTZhJW7f4MKsqLyOMgmoskKiIOWlnwq/b01ivB2CXFhxiiVuNUPPiMuJu6bhljeulvKl32kEzLAFxm2gQ==&lt;/D&gt;&lt;/RSAKeyValue&gt;
</code></pre>

<p>and the resulting Base64 string from the above conversion method is:</p>

<pre><code>PFJTQUtleVZhbHVlPjxNb2R1bHVzPnJodE1qTFRnMTdzWWxuczRrdFRvdzllZXV3Uk5yYTArQU8ySHFFU0dtQTh6a3hlL3VPdjBtc1h6ekxXVVd6ZFBhVHhpNE9WK1BOVlBCQUhXMUMwQ1RULzMzTmx2aXBrSjFRcjVCSksxVGlWWkNNSW5zaGU0T0wvN0dOblBVUGhzUzZEWi9jL2ZuV0xveHRSTVVta0tncFdtdFhHczdaU29JenRkSjFiZ2l5Z0pXQ0R2ckhUb2tWSXpEYU56Um9uWklGazQxUXQ0clBvZkNFYXdqa1I2MzlPY09mYXpObG1VOUpqdlJzM3lzb1lnaER6dlZ1THZKdlBLN3pDTXpwSk1RRlFFN2NpcGV6WGJ1bVRxU2RwMjBtUVhKZHVEYkQ5cUxLWE92Y1R3KzJLUG9ObFVwK0lSUXJPbVNmK0RsNFZ4aSs4K1V1T0g3S0RMejd5TDlJT1BlUT09PC9Nb2R1bHVzPjxFeHBvbmVudD5BUUFCPC9FeHBvbmVudD48UD4yQUhleTNUZ2cvSzhNMTZrdjZiV2sxQnNGR2hnOXhYWncycnVWaFM2MjBneXZQQnRXQnVPVSt0elBSbkVwbHcrS3A5anVhN051NEprS3dwUWRadlJxZVc0MmQvVUNlcmdrZE5SaGVNM0RYWWoveFFOczhhMWRpVE5lNzJlbENzQ2ZTSHIxei92Z04rQ3ArdjhPNEJ6WDA3VHJIZUdPT1AvN0hXaEU2c2V0eE09PC9QPjxRPnpsZDA1VHlDL3ZWSTJzQmdhUi9pWXlYZFVPM2lJSXdrR1N5T21mRHIxZGJDS0ZSN2J0R0xFc1c5RXBDR2lieUdQYkFrNGpBOUJMVTFidmlCTThpSDZteFduMXM0VUFpSWhhMFFTTTJLOU5XVVBpNjdGRUxsNkZzMmVMSGw5cVJuaUJoQU9CQ0dBcmtsYWlsK1lhZEtDdFVzcldoZkpndk8zdXhrcCtmZzlNTT08L1E+PERQPnN6aWFDbVZuQXhPYlkyUGJmY2lIc0tMQmlnMHdwdEhTWkhtTVZvL01tYlJGcE00M2F5c3g1Qjh1OWpzekZuVGlmNnJQcTNpRjZsWTlsaGh3dWFRWFNjZjRuNDArK1J1UVNHMzA3Z21mMitOeDZtcFJGQ0NDM3d1YUVsazZBZVhOb3RWS1FNWWppZUhwSGpxR2hUZ0dnY1Y5aTFPQVlpT0tiRDhNN3F6RVIxRT08L0RQPjxEUT5GRWF6emZMc1RIRjkvMEQ0T0Z4UnVyeDF5d1lWT20ySy9vNUtWUVkvcG51OENJcUV0cGNRdTMrQzNOZ200RklPUHZHWUxrSGZQUjh4YVA0eWRBdzRqdWltZW5KVVRra0lZVnBvUno4cmNIT3NaWS9pQWxPd2sreWlwYW1WbDI4QVhYZEVtRDNIYlcwVUtDSjdzTXpua2Jqdzh2bFdvRDU0elo4ZEpRSzhNRkU9PC9EUT48SW52ZXJzZVE+RlVGQzl2NUIxbVh4YmJpRDRXWm0vS0dJYTNYTzUrSzlGd1NScm9qOHdOTXQrSlk1YU1TOFNmVWNyWk12VVhmSFM5KzNCWVhCSWx4UEJVbTZIbmZCN3lQRTlTMExGelJwQjdBUGJKMEhWSWxTak1TOVpka3F4U2hHQUV1Zll4L0ZLUVhvbUpsRVhYa3BnQWlEblVuQ1IySCtla1FmMVlwUVV6b2wyS2Vkd2ZBPTwvSW52ZXJzZVE+PEQ+Z0VoYy9zL0hXeXpmMFFDNWpuYVJpcnMwbVZkeVpLVmhLZzNhQm9GM0tsTUpEVGhTYTA1dnpCcE9xR2FpQ1JPWHoxSlBDS1lQZllNdDFTWUZ4QS9sd2tWL3U1bjZOWVROV2N2Yjd5S3B0QXFRcjROZS9EbTk0eEtSVUo0cnd0MUg3ZkYyclN5Yzlyb0tDWFlqUmhWZlNSZzYzVFlFMUlqVDJpSERZVmtCMllWUEs2N08yTzdZbVFYZVVITVJNVndYcG5aQ3Z3ZWxlUktsWWJWRngyTjdaRUMxVFpvVW4yUktzaUJFZW0xZU5Td25MYTR3VWYxWGw4UThoK3ppWTBHblJFZjlKcFRaaEpXN2Y0TUtzcUx5T01nbW9za0tpSU9XbG53cS9iMDFpdkIyQ1hGaHhpaVZ1TlVQUGlNdUp1NmJobGpldWx2S2wzMmtFekxBRnhtMmdRPT08L0Q+PC9SU0FLZXlWYWx1ZT4=
</code></pre>

<p>Apparently this Base64 string is invalid and the encryption fails.</p>

<p>Can anybody see where I am going wrong?</p>
","<p>Fixed! It appears the error was a little misleading (or likely I was being stupid!) and it looks like it was NOT the plain text for encryption that was the cause of the exception but the password/passphrase.  </p>

<p>I found another app I was using this method in and found the KEY was the problem. I was passing a plain text password in initially, then I changed this to a SHA-256 hash of the password when this was in fact not a valid key.</p>

<p>I added these two methods (the later of which I found on here):</p>

<pre><code>            public static string AesKeyFromPassword(string password, int keySize = Keysize.SymmetricKeyLength)
        {
            byte[] passwordByteArray = CreateKey(password);

            var aesEncryption = new RijndaelManaged
            {
                KeySize = keySize,
                BlockSize = 128,
                Mode = CipherMode.CBC,
                Padding = PaddingMode.PKCS7,
                Key = passwordByteArray
            };

            aesEncryption.GenerateIV();
            string ivStr = Convert.ToBase64String(aesEncryption.IV);
            string keyStr = Convert.ToBase64String(aesEncryption.Key);
            string completeKey = ivStr + "","" + keyStr;

            return Convert.ToBase64String(Encoding.UTF8.GetBytes(completeKey));
        }

        private static byte[] CreateKey(string password)
        {
            var salt = new byte[] { 1, 2, 23, 234, 37, 48, 134, 63, 248, 4 };

            const int Iterations = 9872;
            using (var rfc2898DeriveBytes = new Rfc2898DeriveBytes(password, salt, Iterations))
                return rfc2898DeriveBytes.GetBytes(32);
        }
</code></pre>

<p>This now takes the plain text password/phrase and generates a valid encryption key which I then use in the <code>Encrypt</code> method.</p>

<p>Thank for your help guys!  I can now securely store the Private Key! :)</p>
","6766","<encryption><base64><private-key><encryption-asymmetric>","1","0","2","2013-06-03 15:13:10","16900046","3","1","1435068","","2013-05-31 13:52:09","2013-05-31 13:41:36",""
"6995841","C# WCF client error ""The private key is not present in the X.509 certificate""","<p>I'm am trying to create a very simple WCF client application which will send SOAP messages to a 3rd party service. All the messages must be digitally signed. It's really a proof of concept before I add the code to a larger application.</p>

<p>I have a .cer file containing the certificate and a .pem file containing the private key. What I have been trying to do is load the certificate using the .cer file then fire off a message. But I get the following error ""The private key is not present in the X.509 certificate"".</p>

<p>The problem, well one of the problems, is that I really know almost nothing about WCF, digital certificates, private keys and all that guff. I've done some reading, I've Googled till I'm blue in the face and I've not got anywhere. </p>

<p>If I open the .cert file there is a section labelled ""BEGIN ENCRYPTED PRIVATE KEY"" which suggests that the private key is included in the certificate. So, why am I getting a message saying that it is not present? Also, if the private key does need to be added to the certificate how do I do it?</p>

<p>Here basically what I'm doing. It's not my actual code, but it includes all the relevant stuff:</p>

<pre><code>MyWSClient c = new MyWSClient();
c.ClientCredentials.ClientCertificate.Certificate = new X509Certificate2(@""pathToFile.cer"");
c.SomeValidCall();
</code></pre>
","<p>How are you creating this cert / key pair? You can combine them into a PKCS#12 certificate using openssl:</p>

<pre><code>openssl pkcs12 -export -in yourcert.crt -inkey yourprivkey.key -out newcert.p12 
</code></pre>

<p>You may need to play with the input format to get it to work with a .pem private key.</p>
","6736","<wcf><wcf-security><wcf-client><x509certificate><private-key>","3","0","2","2011-08-09 15:26:50","6998691","0","","413501","","2011-08-09 12:32:18","2011-08-09 11:59:56",""
"6995841","C# WCF client error ""The private key is not present in the X.509 certificate""","<p>I'm am trying to create a very simple WCF client application which will send SOAP messages to a 3rd party service. All the messages must be digitally signed. It's really a proof of concept before I add the code to a larger application.</p>

<p>I have a .cer file containing the certificate and a .pem file containing the private key. What I have been trying to do is load the certificate using the .cer file then fire off a message. But I get the following error ""The private key is not present in the X.509 certificate"".</p>

<p>The problem, well one of the problems, is that I really know almost nothing about WCF, digital certificates, private keys and all that guff. I've done some reading, I've Googled till I'm blue in the face and I've not got anywhere. </p>

<p>If I open the .cert file there is a section labelled ""BEGIN ENCRYPTED PRIVATE KEY"" which suggests that the private key is included in the certificate. So, why am I getting a message saying that it is not present? Also, if the private key does need to be added to the certificate how do I do it?</p>

<p>Here basically what I'm doing. It's not my actual code, but it includes all the relevant stuff:</p>

<pre><code>MyWSClient c = new MyWSClient();
c.ClientCredentials.ClientCertificate.Certificate = new X509Certificate2(@""pathToFile.cer"");
c.SomeValidCall();
</code></pre>
","<p>My colleague has found a solution. I don't know why but using a .der file rather than a .cer file solves the problem. This is the command he used to generate the .der file using a certificate, private key and root certificate  as.pem files:</p>

<pre><code>openssl pkcs12 -export -in cert.pem -inkey private_key.pem -certfile root_cert.cer -out pkcs12.der
</code></pre>
","6736","<wcf><wcf-security><wcf-client><x509certificate><private-key>","3","0","2","2011-08-09 15:26:50","6998691","0","","413501","","2011-08-09 12:32:18","2011-08-09 11:59:56",""
"17791589","Write public/private key to the SharedPreferences and use it","<p>I am trying to encrypt and decrypt a text with public/private keys.First of all, I create my keys and store them in sharedpreferences with this code : </p>

<pre><code>SharedPreferences SP;

SharedPreferences.Editor SPE;

KeyPairGenerator keyGen;

KeyPair keypair;

PublicKey publicKey;

PrivateKey privateKey;

keyGen = KeyPairGenerator.getInstance(""RSA""); 

keyGen.initialize(1024);        

keypair = keyGen.genKeyPair();

privateKey = keypair.getPrivate(); 

publicKey = keypair.getPublic();

SPE = SP.edit();

SPE.putString(""PublicKey"", publicKey.toString());

SPE.putString(""PrivateKey"", privateKey.toString());

SPE.commit();
</code></pre>

<p>In my SharedPreferences file, keys are written like this :</p>

<blockquote>
  <p>PublicKey: RSA Public Key</p>
  
  <p>modulus: d07b8f32968cf65301fd710f9d6d036feac01d7b98c92ff979cd324d252cb257ff48d6630b33f0f68bd0ee81c3a83502a0abf0b263dc96c2b86940f7ec19ab1865626383e55cf5a37e25ef4eb6ca88a39f31becb6065434bc2236177aa5b35266fe0379164faea6ef7a92812e7aa3ef5fc488c70ab085f5564f09c0f6e927b49</p>
  
  <p>public exponent: 10001</p>
  
  <p>PrivateKey: RSA Private CRT Key</p>
  
  <p>modulus: d07b8f32968cf65301fd710f9d6d036feac01d7b98c92ff979cd324d252cb257ff48d6630b33f0f68bd0ee81c3a83502a0abf0b263dc96c2b86940f7ec19ab1865626383e55cf5a37e25ef4eb6ca88a39f31becb6065434bc2236177aa5b35266fe0379164faea6ef7a92812e7aa3ef5fc488c70ab085f5564f09c0f6e927b49</p>
  
  <p>public exponent: 10001<br>
  private exponent: 67ebef696c1a3fff0892e8f4bba8477a562e05844298a6cd58a5ac59401a939bc1a8f114d5d4c25c633d766640bd6c0f2f4005ef265022e6553e4220531448702e4bbf4322b9d5cf444d16eea151e5d565412b49208a73d9236607475d201affa21d374e3186f14b651b08565be4725f89fc6797a79c8433c4dd089589284a01</p>
  
  <p>primeP: ee4ad1a56f4ee3b12c198d09b08a92c349f94cc79a6143ca7140fa64c919f2d9c24c29d3b413fdc4039000b6b5feac5a764ce436db4a4a382d8ceecbc768e0d1</p>
  
  <p>primeQ: dff9a761807440b4a5a4fb04ebaa22849f6543f33168bd6e83b3c549b346661124d7879e168c1009e97c01b3fdcd7088eebd9c989b64d7c4b81ea46f9e06d0f9</p>
  
  <p>primeExponentP: 2ce01e371f8d25c819dbfdf9932ba593ed7c6b7f338d99aca8436a644c92fc6f11ee31fa5271695adea8e1d986d09d38b40aaaf7c1b86dddc28645fa4e656be1</p>
  
  <p>primeExponentQ: 21904af9fc82ef5362e3474ea4763978005eef80d92da5fd92b4f4e2a77fec39b378acf50ed1ec715fd0da7c7b9336c2fe6be1b4a8ccc2dcd2ee9c9bb165ba19</p>
  
  <p>crtCoefficient: d8ccccb874ec4c2d464e84829547507e1ebf78e506caa77950b04329957b8713e80553874b825bf5c90b214984b4657b64965867460d87aab135f43930db48ec</p>
</blockquote>

<p>And with this code i am trying to read this keys :</p>

<pre><code>private PublicKey getPublicKey() throws UnsupportedEncodingException, NoSuchAlgorithmException, InvalidKeySpecException{

    byte[] keyBytes = Base64.decodeBase64(SP.getString(""PublicKey"", ""default value"").getBytes(""utf-8""));
    X509EncodedKeySpec spec = new X509EncodedKeySpec(keyBytes);
    KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
    PublicKey key = keyFactory.generatePublic(spec);
    return key;}
</code></pre>

<p>But something goes wrong.It gives InvalidKeySpecException. I thing this cannot read the keys from file.How can i fix this problem? Thank you.</p>
","<p>Ok. I found some solution and change something. This is new class for public/private key storing and getting it again from stored string. This class works for me !</p>

<pre><code>import java.security.KeyFactory;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.SecureRandom;
import java.security.spec.InvalidKeySpecException;
import java.security.spec.X509EncodedKeySpec;
import org.bouncycastle.util.encoders.Base64;
import android.app.Activity;
import android.content.Context;
import android.content.SharedPreferences;

public class KeyGenerator extends Activity{

    SharedPreferences SP;
    SharedPreferences.Editor SPE;
    PublicKey pubKey;
    PrivateKey privKey; 
    Context context;

    public KeyGenerator(Context context){
        this.context = context;
        SP = context.getSharedPreferences(""KeyPair"", MODE_PRIVATE);
    }

    public void generateKeys(){
        try {
            KeyPairGenerator generator;
            generator = KeyPairGenerator.getInstance(""RSA"", ""BC"");
            generator.initialize(256, new SecureRandom());
            KeyPair pair = generator.generateKeyPair();
            pubKey = pair.getPublic();
            privKey = pair.getPrivate();            
            byte[] publicKeyBytes = pubKey.getEncoded();
            String pubKeyStr = new String(Base64.encode(publicKeyBytes));
            byte[] privKeyBytes = privKey.getEncoded();
            String privKeyStr = new String(Base64.encode(privKeyBytes));            
            SPE = SP.edit();
            SPE.putString(""PublicKey"", pubKeyStr);
            SPE.putString(""PrivateKey"", privKeyStr);           
            SPE.commit();
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        } catch (NoSuchProviderException e) {
            e.printStackTrace();
        }           
    }
    public PublicKey getPublicKey(){
        String pubKeyStr = SP.getString(""PublicKey"", """");       
        byte[] sigBytes = Base64.decode(pubKeyStr);
        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(sigBytes);
        KeyFactory keyFact = null;
        try {
            keyFact = KeyFactory.getInstance(""RSA"", ""BC"");
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        } catch (NoSuchProviderException e) {
            e.printStackTrace();
        }
        try {
            return  keyFact.generatePublic(x509KeySpec);
        } catch (InvalidKeySpecException e) {
            e.printStackTrace();
        }
        return null;
    }
    public String getPublicKeyAsString(){
        return SP.getString(""PublicKey"", """");       
    }
    public PrivateKey getPrivateKey(){
        String privKeyStr = SP.getString(""PrivateKey"", """");
        byte[] sigBytes = Base64.decode(privKeyStr);
        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(sigBytes);
        KeyFactory keyFact = null;
        try {
            keyFact = KeyFactory.getInstance(""RSA"", ""BC"");
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        } catch (NoSuchProviderException e) {
            e.printStackTrace();
        }
        try {
            return  keyFact.generatePrivate(x509KeySpec);
        } catch (InvalidKeySpecException e) {
            e.printStackTrace();
        }
        return null;
    }
    public String getPrivateKeyAsString(){
        return SP.getString(""PrivateKey"", """");      
    }
}
</code></pre>
","6677","<android><sharedpreferences><private-key><public-key>","5","9","2","2014-03-09 17:04:44","18115456","0","3","","","","2013-07-22 15:30:47",""
"17791589","Write public/private key to the SharedPreferences and use it","<p>I am trying to encrypt and decrypt a text with public/private keys.First of all, I create my keys and store them in sharedpreferences with this code : </p>

<pre><code>SharedPreferences SP;

SharedPreferences.Editor SPE;

KeyPairGenerator keyGen;

KeyPair keypair;

PublicKey publicKey;

PrivateKey privateKey;

keyGen = KeyPairGenerator.getInstance(""RSA""); 

keyGen.initialize(1024);        

keypair = keyGen.genKeyPair();

privateKey = keypair.getPrivate(); 

publicKey = keypair.getPublic();

SPE = SP.edit();

SPE.putString(""PublicKey"", publicKey.toString());

SPE.putString(""PrivateKey"", privateKey.toString());

SPE.commit();
</code></pre>

<p>In my SharedPreferences file, keys are written like this :</p>

<blockquote>
  <p>PublicKey: RSA Public Key</p>
  
  <p>modulus: d07b8f32968cf65301fd710f9d6d036feac01d7b98c92ff979cd324d252cb257ff48d6630b33f0f68bd0ee81c3a83502a0abf0b263dc96c2b86940f7ec19ab1865626383e55cf5a37e25ef4eb6ca88a39f31becb6065434bc2236177aa5b35266fe0379164faea6ef7a92812e7aa3ef5fc488c70ab085f5564f09c0f6e927b49</p>
  
  <p>public exponent: 10001</p>
  
  <p>PrivateKey: RSA Private CRT Key</p>
  
  <p>modulus: d07b8f32968cf65301fd710f9d6d036feac01d7b98c92ff979cd324d252cb257ff48d6630b33f0f68bd0ee81c3a83502a0abf0b263dc96c2b86940f7ec19ab1865626383e55cf5a37e25ef4eb6ca88a39f31becb6065434bc2236177aa5b35266fe0379164faea6ef7a92812e7aa3ef5fc488c70ab085f5564f09c0f6e927b49</p>
  
  <p>public exponent: 10001<br>
  private exponent: 67ebef696c1a3fff0892e8f4bba8477a562e05844298a6cd58a5ac59401a939bc1a8f114d5d4c25c633d766640bd6c0f2f4005ef265022e6553e4220531448702e4bbf4322b9d5cf444d16eea151e5d565412b49208a73d9236607475d201affa21d374e3186f14b651b08565be4725f89fc6797a79c8433c4dd089589284a01</p>
  
  <p>primeP: ee4ad1a56f4ee3b12c198d09b08a92c349f94cc79a6143ca7140fa64c919f2d9c24c29d3b413fdc4039000b6b5feac5a764ce436db4a4a382d8ceecbc768e0d1</p>
  
  <p>primeQ: dff9a761807440b4a5a4fb04ebaa22849f6543f33168bd6e83b3c549b346661124d7879e168c1009e97c01b3fdcd7088eebd9c989b64d7c4b81ea46f9e06d0f9</p>
  
  <p>primeExponentP: 2ce01e371f8d25c819dbfdf9932ba593ed7c6b7f338d99aca8436a644c92fc6f11ee31fa5271695adea8e1d986d09d38b40aaaf7c1b86dddc28645fa4e656be1</p>
  
  <p>primeExponentQ: 21904af9fc82ef5362e3474ea4763978005eef80d92da5fd92b4f4e2a77fec39b378acf50ed1ec715fd0da7c7b9336c2fe6be1b4a8ccc2dcd2ee9c9bb165ba19</p>
  
  <p>crtCoefficient: d8ccccb874ec4c2d464e84829547507e1ebf78e506caa77950b04329957b8713e80553874b825bf5c90b214984b4657b64965867460d87aab135f43930db48ec</p>
</blockquote>

<p>And with this code i am trying to read this keys :</p>

<pre><code>private PublicKey getPublicKey() throws UnsupportedEncodingException, NoSuchAlgorithmException, InvalidKeySpecException{

    byte[] keyBytes = Base64.decodeBase64(SP.getString(""PublicKey"", ""default value"").getBytes(""utf-8""));
    X509EncodedKeySpec spec = new X509EncodedKeySpec(keyBytes);
    KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
    PublicKey key = keyFactory.generatePublic(spec);
    return key;}
</code></pre>

<p>But something goes wrong.It gives InvalidKeySpecException. I thing this cannot read the keys from file.How can i fix this problem? Thank you.</p>
","<p>Thanks for the accepted code above (maybe below). However, in my case, the 'getPrivatekey()' throws an InvalidKeySpecException. It says 'Unknown KeySpc type: java.secrity.spec.X509EncodedKeySpec'. The solution I used is to replace X509EncodedKeySpec with PKCS8EncodedKeySpec. Then it works! 
Reference: <a href=""https://stackoverflow.com/a/9755391/2481444"">https://stackoverflow.com/a/9755391/2481444</a></p>
","6677","<android><sharedpreferences><private-key><public-key>","5","4","2","2014-03-09 17:04:44","18115456","0","3","","","","2013-07-22 15:30:47",""
"3905539","Fighting with certificates: Access was not successfully obtained for the private key","<p>I work in company with many servers and Pcs for developers. Servers are win2003, PC developers Windows XP.</p>

<p>In a server Win2003 named preiis01, in preproduction environment, other people in company install a client certificate using any other user (unknown user for me) for logging in server preiis01.</p>

<p>I use my user ""domainCompany\myuser"" for log in server preiis01 (using Terminal Server, Remote Desktop for Windows XP).</p>

<p>in preiis01,</p>

<p>I execute mmc -> Snap in -> Certificates for Local Machine. In node -> Personal -> Certificates, I have seen the client certificate:</p>

<p>Issued To
ENTIDAD COMPANY INSURE SA - CIF A93 - NOMBRE SURNAME1 NAME1</p>

<p>Issued By
FNMT Clase 2 CA</p>

<p>In properties of certificate, I have seen thumbprint: ""93 bc a4 ad 58 c9 3c af 8b eb 0b 2f 86 c7 9d 81 70 a6 c4 13""</p>

<p>Now, I execute this commands:</p>

<p>1.) FindPrivateKey My LocalMachine -n ""CN=ENTIDAD COMPANY INSURE SA - CIF A93 - NOMBRE SURNAME1 NAME1"" -a</p>

<p>and I get this error:</p>

<p><em>FindPrivateKey failed for the following reason:
No certificates with key 'CN=ENTIDAD COMPANY INSURE SA - CIF A93 - NOMBRE SURNAME1 NAME1
' found in the store.</em></p>

<p>2.) FindPrivateKey My LocalMachine -t ""93 bc a4 ad 58 c9 3c af 8b eb 0b 2f 86 c7 9d 81 70 a6 c4 13"" –c</p>

<p>and I get this:</p>

<p>*FindPrivateKey helps user to find the location of the Private Key file of a X.50
9 Certificate.</p>

<p>Usage: FindPrivateKey   [{ {-n } | {-t } } [-f | -d | -a]]</p>

<pre><code>   &lt;subjectName&gt; subject name of the certificate

   &lt;thumbprint&gt;  thumbprint of the certificate (use certmgr.exe to get it)

   -f            output file name only

   -d            output directory only

   -a            output absolute file name
</code></pre>

<p>e.g. FindPrivateKey My CurrentUser -n ""CN=John Doe""</p>

<p>e.g. FindPrivateKey My LocalMachine -t ""03 33 98 63 d0 47 e7 48 71 33 62 64 76 5
c 4c 9d 42 1d 6b 52"" -c*</p>

<p>3.) winhttpcertcfg.exe -l -c LOCAL_MACHINE\My -s ""ENTIDAD COMPANY INSURE SA - CIF A93 - NOMBRE SURNAME1 NAME1""</p>

<p>and I get this error:</p>

<blockquote>
  <p>Microsoft (R) WinHTTP Certificate
  Configuration Tool Copyright (C)
  Microsoft Corporation 2001. Matching
  certificate: </p>
  
  <p>CN=ENTIDAD COMPANY INSURE SA - CIF A93 - NOMBRE SURNAME1 NAME1</p>
  
  <p>OU=700012436</p>
  
  <p>OU=FNMT Clase 2 CA</p>
  
  <p>O=FNMT </p>
  
  <p>C=ES </p>
  
  <p>Error:</p>
  
  <p>Access was not successfully obtained for the private key. This can only be done by the user who installed the certificate.</p>
</blockquote>

<p><strong>Access was not successfully obtained for the private key.</strong></p>

<p>Any suggestions ??</p>

<p>Updated: by Marcel Roma (social msdn forums)</p>

<p>Most likely the certificate was installed by some other person in your company (e.g. administrator). Only that person has access to the private key of the certificate. Download the FindPrivateKey tool, ask the administrator to execute it to find out the directory where the private key file was saved, and let him set the needed rights so that the process can access the file.</p>

<p>There are also some reports about Windows XP failing to extract the private key from the file due to encoding issues: </p>

<p><a href=""http://blogs.msdn.com/b/alejacma/archive/2010/01/11/winhttpcertcfg-tool-cannot-access-private-key-of-a-certificate.aspx"" rel=""nofollow"">http://blogs.msdn.com/b/alejacma/archive/2010/01/11/winhttpcertcfg-tool-cannot-access-private-key-of-a-certificate.aspx</a> </p>

<p>Update:</p>

<p>User in domain ""domainCompany\Pre_Certificado"" install Certificate in Store Local Machine.</p>

<p>domainCompany\Pre_Certificado is Administrator, in IIS_WPG group, has Local Policies: “Log on as Service“</p>

<p>I configure AppPool Identity in IIS 6.0 for : domainCompany\Pre_Certificado</p>

<p>ASP.NET application executes using the identity :: domainCompany\Pre_Certificado</p>

<p>I recycle AppPool and execute application, I get System.Security.Cryptography.CryptographicException: Cannot find the certificate and private key for decryption</p>

<p>If I test again, log in session in server IIS, using domainCompany\Pre_Certificado user, I call page in ASP.NET application and all is OK.</p>

<p>(note: log in server IIS using Terminal Server)</p>

<p>But if log off session in server IIS (user: domainCompany\Pre_Certificado), I get the same error:</p>

<p>System.Security.Cryptography.CryptographicException: Cannot find the certificate and private key for decryption</p>

<p>Any suggestions ??</p>
","<p>Log in as the user that installed the certificate (or a local administrator). Launch the FindPrivateKey tool. Go to security pane and add your own user to the list. You can now login in as yourself and control the certificate's private key.</p>
","6592","<.net><web-services><security><certificate><private-key>","3","1","1","2010-11-12 14:08:57","","2","1","206730","","2010-11-12 14:08:57","2010-10-11 10:55:08",""
"21147566","Converting a PEM private key file to a JAVA PrivateKey Object","<p>I know that there are several other questions about that topic, but none of them have helped me out. I tried the <code>BouncyCastle</code> lib as well. Could someone please help me here?
The PEM file looks like:</p>

<pre><code>    -----BEGIN RSA PRIVATE KEY-----
    MIIEpAIBAAKCAQEAq2eYtnTsEc/qyqS ...


   ... zY3WG++SA+amcXiO721hJWNC+uTbZ1bzQ==
    -----END RSA PRIVATE KEY-----
</code></pre>

<p>I'm using this method</p>

<pre><code>public static PrivateKey getPemPrivateKey(String filename) throws IOException, NoSuchAlgorithmException, InvalidKeySpecException  {
    File f = new File(PEMFILES_FOLDER+filename);
    FileInputStream fis = new FileInputStream(f);
    DataInputStream dis = new DataInputStream(fis);
    byte[] keyBytes = new byte[(int) f.length()];
    dis.readFully(keyBytes);
    dis.close();

    String temp = new String(keyBytes);
    //TODO care about the linefeeds
    String privKeyPEM = temp.replace(""-----BEGIN RSA PRIVATE KEY-----\n"", """");
    privKeyPEM = privKeyPEM.replace(""-----END RSA PRIVATE KEY-----"", """");

    System.out.println(""Private key: \n""+privKeyPEM);

    Base64 b64 = new Base64();
    byte [] decoded = b64.decode(privKeyPEM);


    PKCS8EncodedKeySpec spec = new PKCS8EncodedKeySpec(decoded);
    KeyFactory kf = KeyFactory.getInstance(RSA);
    return kf.generatePrivate(spec);
}
</code></pre>

<p>I am getting this error:</p>

<pre><code>java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException : algid parse error, not a sequence
</code></pre>
","<p>I hope this can help you. I have copied a working copy of getPemPrivatekey and the way I call it in the main function:</p>

<pre><code>public  PrivateKey getPemPrivateKey(String filename, String algorithm) throws Exception {
          File f = new File(filename);
          FileInputStream fis = new FileInputStream(f);
          DataInputStream dis = new DataInputStream(fis);
          byte[] keyBytes = new byte[(int) f.length()];
          dis.readFully(keyBytes);
          dis.close();

      String temp = new String(keyBytes);
      String privKeyPEM = temp.replace(""-----BEGIN PRIVATE KEY-----"", """");
      privKeyPEM = privKeyPEM.replace(""-----END PRIVATE KEY-----"", """");
      //System.out.println(""Private key\n""+privKeyPEM);

      BASE64Decoder b64=new BASE64Decoder();
      byte[] decoded = b64.decodeBuffer(privKeyPEM);

      PKCS8EncodedKeySpec spec = new PKCS8EncodedKeySpec(decoded);
      KeyFactory kf = KeyFactory.getInstance(algorithm);
      return kf.generatePrivate(spec);
      }
</code></pre>

<p>The main program looks like this:
....</p>

<p>gcsr = new ...... // instantiate the class here</p>

<pre><code> privateKey= gcsr.getPemPrivateKey(""c:\\testdir\\java_private.pem"", ""RSA"");
    BASE64Encoder encoder1= new BASE64Encoder();
    String s1=encoder1.encodeBuffer(gcsr.getPrivateKey().getEncoded());
    System.out.println(""Private Key in Base64:""+s1+""\n"");
</code></pre>

<p>This is currently working (Java 8 on my computer!). ""gcsr"" is the name of the object I instantiated from the class containing the function.
Regards.</p>
","6451","<java><private-key><pem>","2","1","1","2015-11-04 22:25:55","","0","","2083854","","2015-11-04 22:25:55","2014-01-15 20:31:01",""
"36652675","java.security.UnrecoverableKeyException: Failed to obtain information about private key","<p>I have the following lines to get the private key from key store on Android</p>

<pre><code>KeyStore keyStore = KeyStore.getInstance(""AndroidKeyStore"");
keyStore.load(null);

// generating key pair code omitted

KeyStore.PrivateKeyEntry privateKeyEntry = (KeyStore.PrivateKeyEntry) this.keyStore.getEntry(""alias"", null);
</code></pre>

<p>Everything works fine except that when the OS upgrades from Android 5.1.1 to Android 6.0.1, the 3rd line will throw <code>java.security.UnrecoverableKeyException: Failed to obtain information about private key</code> for very first execution. But it will work fine again afterward. Now my workaround is to execute the line for 2 times. At the same time, I am also wondering if there is better way to avoid the exception.</p>

<h2>Update</h2>

<p>The exception trace</p>

<pre><code>W/System.err﹕ java.security.UnrecoverableKeyException: Failed to obtain information about private key
W/System.err﹕ at android.security.keystore.AndroidKeyStoreProvider.loadAndroidKeyStorePublicKeyFromKeystore(AndroidKeyStoreProvider.java:217)
W/System.err﹕ at android.security.keystore.AndroidKeyStoreProvider.loadAndroidKeyStoreKeyPairFromKeystore(AndroidKeyStoreProvider.java:253)
W/System.err﹕ at android.security.keystore.AndroidKeyStoreProvider.loadAndroidKeyStorePrivateKeyFromKeystore(AndroidKeyStoreProvider.java:263)
W/System.err﹕ at android.security.keystore.AndroidKeyStoreSpi.engineGetKey(AndroidKeyStoreSpi.java:93)
W/System.err﹕ at java.security.KeyStoreSpi.engineGetEntry(KeyStoreSpi.java:372)
W/System.err﹕ at java.security.KeyStore.getEntry(KeyStore.java:645)
W/System.err﹕ at com.example.keystoretest.MainActivity.onCreate(MainActivity.java:113)
W/System.err﹕ at android.app.Activity.performCreate(Activity.java:6251)
W/System.err﹕ at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1107)
W/System.err﹕ at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2369)
W/System.err﹕ at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2476)
W/System.err﹕ at android.app.ActivityThread.-wrap11(ActivityThread.java)
W/System.err﹕ at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1344)
W/System.err﹕ at android.os.Handler.dispatchMessage(Handler.java:102)
W/System.err﹕ at android.os.Looper.loop(Looper.java:148)
W/System.err﹕ at android.app.ActivityThread.main(ActivityThread.java:5417)
W/System.err﹕ at java.lang.reflect.Method.invoke(Native Method)
W/System.err﹕ at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
W/System.err﹕ at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
W/System.err﹕ Caused by: android.security.KeyStoreException: Invalid key blob
W/System.err﹕ at android.security.KeyStore.getKeyStoreException(KeyStore.java:632)
W/System.err﹕ at android.security.keystore.AndroidKeyStoreProvider.loadAndroidKeyStorePublicKeyFromKeystore(AndroidKeyStoreProvider.java:218)
W/System.err﹕ ... 18 more
</code></pre>
","<h2>When this error happens and why?</h2>

<p><strong>Ans:</strong> When loading Android keys and storing public key from Keystore, this error may happen if the state is locked or uninitialized.</p>

<h2>Error generating portion code is given below:</h2>

<pre><code>@NonNull
    public static AndroidKeyStorePublicKey loadAndroidKeyStorePublicKeyFromKeystore(
            @NonNull KeyStore keyStore, @NonNull String privateKeyAlias)
            throws UnrecoverableKeyException {
        KeyCharacteristics keyCharacteristics = new KeyCharacteristics();
        int errorCode = keyStore.getKeyCharacteristics(privateKeyAlias, null,
                null, keyCharacteristics);
        if (errorCode != KeyStore.NO_ERROR) {
            throw (UnrecoverableKeyException) new UnrecoverableKeyException(
                    ""Failed to obtain information about private key"")
                    .initCause(KeyStore.getKeyStoreException(errorCode)); // this exception is generated
        }
        ......
        ......
        ......
    }
</code></pre>

<p>KeyStore has 10 response code. They are</p>

<pre><code>// ResponseCodes
NO_ERROR = 1;
LOCKED = 2;
UNINITIALIZED = 3;
SYSTEM_ERROR = 4;
PROTOCOL_ERROR = 5;
PERMISSION_DENIED = 6;
KEY_NOT_FOUND = 7;
VALUE_CORRUPTED = 8;
UNDEFINED_ACTION = 9;
WRONG_PASSWORD = 10;
</code></pre>

<blockquote>
  <p>KeyStore has 3 states. They are UNLOCKED, LOCKED, UNINITIALIZED</p>
  
  <p>NO_ERROR is only happened when the state is UNLOCKED. For your
  upgrading case the state is LOCKED or UNINITIALIZED for first time, so
  the error is happened only once.</p>
</blockquote>

<h2>State Checking code is given below:</h2>

<pre><code>public State state() {
    execute('t');
    switch (mError) {
    case NO_ERROR:
        return State.UNLOCKED;
    case LOCKED:
        return State.LOCKED;
    case UNINITIALIZED:
        return State.UNINITIALIZED;
    default:
        throw new AssertionError(mError);
    }
}
</code></pre>

<p>Resource Link:</p>

<ol>
<li><a href=""https://android.googlesource.com/platform/frameworks/base/+/android-6.0.0_r25/keystore/java/android/security/keystore/AndroidKeyStoreProvider.java"" rel=""noreferrer"">AndroidKeyStoreProvider java class</a> </li>
<li><a href=""https://github.com/nelenkov/android-keystore/blob/master/src/org/nick/androidkeystore/android/security/KeyStore.java"" rel=""noreferrer"">KeyStore java class</a></li>
</ol>

<hr>

<h2>UPDATE:</h2>

<p>From your error log, it is now clear that</p>

<pre><code>W/System.err﹕ Caused by: android.security.KeyStoreException: Invalid key blob
</code></pre>

<p>this is the main issue which is caused when user tries to UNLOCK from LOCK/UNINITIALIZED. It is by default defined as 30 secs for timing. <strong>This problem is it's API related implementation issue.</strong></p>

<pre><code>/**
 * If the user has unlocked the device Within the last this number of seconds,
 * it can be considered as an authenticator.
 */
private static final int AUTHENTICATION_DURATION_SECONDS = 30;
</code></pre>

<p>For encryption/decryption some data with the generated key only works if the user has just authenticated via device credentials. The error occurs from</p>

<pre><code>// Try encrypting something, it will only work if the user authenticated within
// the last AUTHENTICATION_DURATION_SECONDS seconds.
cipher.init(Cipher.ENCRYPT_MODE, secretKey); // error is generated from here.
</code></pre>

<p>Actual error is thrown from here. Your error is generated from <code>InvalidKeyException</code>.</p>

<h2>Solution:</h2>

<p>You have to remove the <code>InvalidKeyException</code> class from the catch argument. This will still allow you to check for <code>InvalidKeyException</code>. After checking you have to try for second time with code so that the problem is not shown in eye but doing 2 times checking it may solve your issue. I have not tested the code but should be like below:</p>

<pre><code>try {
....
KeyStore.PrivateKeyEntry privateKeyEntry = (KeyStore.PrivateKeyEntry) this.keyStore.getEntry(""alias"", null);
....
} catch (final Exception e) {
    e.printStackTrace();
    if (e instanceof InvalidKeyException) { // bypass InvalidKeyException
        .......
        // You can again call the method and make a counter for deadlock situation or implement your own code according to your situation
        if (retry) {
            keyStore.deleteEntry(keyName);
            return getCypher(keyName, false);
        } else {
            throw e;
        }
    }
}
</code></pre>

<h2>Resource Link:</h2>

<ol>
<li><a href=""https://github.com/googlesamples/android-ConfirmCredential/blob/master/Application/src/main/java/com/example/android/confirmcredential/MainActivity.java#L128"" rel=""noreferrer"">MainActivity.java</a> </li>
<li><a href=""https://stackoverflow.com/questions/36488219/android-security-keystoreexception-invalid-key-blob"">android.security.KeyStoreException: Invalid key blob</a></li>
</ol>
","6376","<java><android><keystore><private-key><java-security>","22","9","1","2016-04-24 17:31:46","36747600","7","5","691626","","2016-04-20 22:54:04","2016-04-15 16:46:02",""
"40599118","Provisioning profile ""XXXXXX"" doesn't include signing certificate ""iPhone Distribution: XXXXXXXXXX (XXXXXXXXXX)"".","<p>I have been asked to update an old project done in objective-c.</p>

<p>I'm having this issue with my distribution provisioning profile. It goes like this</p>

<blockquote>
  <p>Provisioning profile ""XXXXXX"" doesn't include signing certificate
  ""iPhone Distribution: XXXXXXXXXX (XXXXXXXXXX)"".</p>
</blockquote>

<p>The thing is I can see the certificate ""iPhone Distribution: XXXXXXXXXX (XXXXXXXXXX)"" in my keychain. But there are 2 of them. One has a private key and the other one doesn't and both have a different expiry date. When I checked the developer account, the distribution provisioning profile is signed with certificate that doesn't have a private key (the expiry date of the certificate shown on developer account is that of the one without private key)</p>

<ol>
<li>What is causing this issue?</li>
<li>How can I fix it?</li>
<li>What if I can't get the private key from the older machine(as that machine is no more usable)</li>
</ol>

<p>I tried deleting one of the certificates, and also automatically manage signing. Both didn't work.</p>

<p>Please help.</p>
","<ol>
<li><p>The problem is that the only valid provisioning profile you have tied to the distribution certificate for which you do not have the private key. Without the private key, it is not a valid signing identity, so Xcode won't use it.  </p></li>
<li><p>To fix this, You will need to create a new private key / distribution certificate, and then create a new distribution profile using the newly created certificate.  You can find instructions, starting with creating the cert signing request, <a href=""http://lessons.livecode.com/m/4069/l/32957-how-do-i-create-a-distribution-profile-for-ios"" rel=""nofollow noreferrer"">here</a>.</p></li>
<li><p>See 2 above.  Without the key, you can't use the existing certificate.  If you are needing to build from multiple Macs, you need to set up a sharing mechanism to provide the private key to any other Macs that will be downloading and using the certs / profiles from the Apple's site.   I would also back up the private key so that you won't run into this in the future if something happens to your build Mac.  Also, when the cert expires, it is helpful to keep the .csr file from answer 2 above.  This means you can use the same private key for the new cert when your distribution cert expires.  </p></li>
</ol>
","6366","<objective-c><xcode><provisioning-profile><private-key>","0","1","1","2016-11-15 15:43:23","40613999","6","","","","","2016-11-14 22:46:02",""
"40167788","sshtunnel doesn't recognize private key password","<p>I'm using sshtunnel to connect to connect to a remote server and on to a database from there. Everything is working fine, except that sshtunnel doesn't seem to recognize my <code>ssh_private_key_password</code> unless I've already entered it elsewhere (or more likely I'm making a mistake when providing it).</p>

<pre><code>with SSHTunnelForwarder(
    ('my.server', 22),
    ssh_username=""myUsername"",
    ssh_pkey=""~/.ssh/id_rsa"", 
    ssh_private_key_password=""myPassword"",
    remote_bind_address=(""other.server"", 3306)
) as server:
{do some stuff}
</code></pre>

<p>If I log into ""my.server"" separately and enter my private key password in the dialog for storage by ssh-agent, and <em>then</em> run the code above, it works as expected.</p>

<p>If I run the code <em>without</em> having already logged into the server at some point earlier, I receive this error: <code>ValueError: No password or public key available!</code> (But the password is there - ssh_private_key_password - no?)</p>

<p>This happens whether <code>ssh_pkey</code> is pointing to the public key <em>or</em> the private key.</p>

<p>What might be happening here? Am I misunderstanding something about the expected arguments for SSHTunnelForwarder? Something more fundamental about the key and password?</p>
","<p>In case you haven't found a solution, in my case, the problem was the path to the private key.
Instead of using:</p>

<p><code>ssh_pkey=""~/.ssh/id_rsa"",</code></p>

<p>Use (for example) the <em>absolute path</em>:</p>

<p><code>ssh_pkey=""/Users/&lt;your-user&gt;/.ssh/id_rsa"",</code></p>

<p>From my analysis, the problem was the check that the key exists in sshtunnel:
<a href=""https://github.com/pahaz/sshtunnel/blob/master/sshtunnel.py#L1018"" rel=""nofollow noreferrer"">https://github.com/pahaz/sshtunnel/blob/master/sshtunnel.py#L1018</a></p>

<p><code>os.path.exists(ssh_pkey)</code> is False when using <code>~/.ssh/id_rsa</code> path</p>
","6299","<python><private-key><ssh-tunnel><ssh-agent>","5","1","3","2019-08-02 09:57:11","","3","1","","","","2016-10-21 03:17:08",""
"40167788","sshtunnel doesn't recognize private key password","<p>I'm using sshtunnel to connect to connect to a remote server and on to a database from there. Everything is working fine, except that sshtunnel doesn't seem to recognize my <code>ssh_private_key_password</code> unless I've already entered it elsewhere (or more likely I'm making a mistake when providing it).</p>

<pre><code>with SSHTunnelForwarder(
    ('my.server', 22),
    ssh_username=""myUsername"",
    ssh_pkey=""~/.ssh/id_rsa"", 
    ssh_private_key_password=""myPassword"",
    remote_bind_address=(""other.server"", 3306)
) as server:
{do some stuff}
</code></pre>

<p>If I log into ""my.server"" separately and enter my private key password in the dialog for storage by ssh-agent, and <em>then</em> run the code above, it works as expected.</p>

<p>If I run the code <em>without</em> having already logged into the server at some point earlier, I receive this error: <code>ValueError: No password or public key available!</code> (But the password is there - ssh_private_key_password - no?)</p>

<p>This happens whether <code>ssh_pkey</code> is pointing to the public key <em>or</em> the private key.</p>

<p>What might be happening here? Am I misunderstanding something about the expected arguments for SSHTunnelForwarder? Something more fundamental about the key and password?</p>
","<p>Maybe you should add the <strong>private key</strong></p>

<pre><code>ssh-add ~/.ssh/id_rsa
</code></pre>
","6299","<python><private-key><ssh-tunnel><ssh-agent>","5","4","3","2019-08-02 09:57:11","","3","1","","","","2016-10-21 03:17:08",""
"40167788","sshtunnel doesn't recognize private key password","<p>I'm using sshtunnel to connect to connect to a remote server and on to a database from there. Everything is working fine, except that sshtunnel doesn't seem to recognize my <code>ssh_private_key_password</code> unless I've already entered it elsewhere (or more likely I'm making a mistake when providing it).</p>

<pre><code>with SSHTunnelForwarder(
    ('my.server', 22),
    ssh_username=""myUsername"",
    ssh_pkey=""~/.ssh/id_rsa"", 
    ssh_private_key_password=""myPassword"",
    remote_bind_address=(""other.server"", 3306)
) as server:
{do some stuff}
</code></pre>

<p>If I log into ""my.server"" separately and enter my private key password in the dialog for storage by ssh-agent, and <em>then</em> run the code above, it works as expected.</p>

<p>If I run the code <em>without</em> having already logged into the server at some point earlier, I receive this error: <code>ValueError: No password or public key available!</code> (But the password is there - ssh_private_key_password - no?)</p>

<p>This happens whether <code>ssh_pkey</code> is pointing to the public key <em>or</em> the private key.</p>

<p>What might be happening here? Am I misunderstanding something about the expected arguments for SSHTunnelForwarder? Something more fundamental about the key and password?</p>
","<p>I have worked through this problem.</p>

<p>In my case, my macOS <code>~/.ssh/id_rsa</code> start with <code>-----BEGIN OPENSSH PRIVATE KEY-----</code> which is not the proper start line.</p>

<p>In fact, the <code>ssh_pkey</code> should be started with <code>-----BEGIN RSA PRIVATE KEY-----</code>. According to the source code of <code>sshtunnel</code> model:</p>

<pre class=""lang-py prettyprint-override""><code>ssh_pkey (str or paramiko.PKey):
    **Private** key file name (``str``) to obtain the public key
    from or a **public** key (:class:`paramiko.pkey.PKey`)
</code></pre>

<p>The key is a <code>paramiko.pkey.PKey</code>, that means, the <code>~/.ssh/id_rsa</code> should be convert to paramiko.pkey correctly.</p>

<pre class=""lang-py prettyprint-override""><code>import paramiko
pkey='~/.ssh/id_rsa'
key=paramiko.RSAKey.from_private_key_file(pkey)

# id_rsa with `-----BEGIN OPENSSH PRIVATE KEY-----`
# raise SSHException: not a valid RSA private key file
</code></pre>

<p>So, I generate a new key in a linux OS, with command of <code>ssh-keygen -t rsa</code>, then 
I authorize access to the key with <code>ssh-copy-id -i ~/.ssh/id_rsa.pub username@jump_server_host -p ssh_port</code>.</p>

<pre class=""lang-sh prettyprint-override""><code>ssh-keygen -t rsa
ssh-copy-id -i ~/.ssh/id_rsa.pub username@jump_server_host -p ssh_port
</code></pre>

<p>now the <code>~/.ssh/id_rsa</code> on my linux OS looks like:</p>

<pre class=""lang-sh prettyprint-override""><code>-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAuFSEXjLMwyAJ54d5hQQjyIE+4l5pZw7GuYFDgNCzXjl6CNwV
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
-----END RSA PRIVATE KEY-----
</code></pre>

<p>Copy it to my local mac, and test it. </p>

<pre class=""lang-py prettyprint-override""><code>pkey='/path/to/the/new/id_rsa'
key=paramiko.RSAKey.from_private_key_file(pkey) 

# id_rsa with `-----BEGIN RSA PRIVATE KEY-----`
# No SSHException now.
</code></pre>

<p>Now, it works without Exception <code>ValueError: No password or public key available!</code>.</p>

<pre class=""lang-py prettyprint-override""><code>with SSHTunnelForwarder(
        ('jump_server_host', jump_ssh_port),  # jump server
        ssh_username='username',
        ssh_pkey=""/path/to/new/id_rsa"",
        remote_bind_address=('remote_host', remote_ssh_port),  # remote_server
        local_bind_address=('0.0.0.0', 30023)                  # local_bind_port set to 30023, your can select new one 
) as server:
    server.start()
    print(server.local_bind_port)
    server.close() 
</code></pre>

<p>It outputs <code>30023</code>.</p>
","6299","<python><private-key><ssh-tunnel><ssh-agent>","5","1","3","2019-08-02 09:57:11","","3","1","","","","2016-10-21 03:17:08",""
"7183605","Distribution certificates and private keys","<p>Ok here is my situation: I have 2 Macbooks (lets call them #1 and #2) and I started developing on #1 in 2010.</p>

<p>This June 2011, my distribution certificate expired and I had to renew it. On my #1 Macbook I was able to update the certificate into the keychain and everything was fine when updating my app again.</p>

<p>Now, in August 2011, I wanted to update the certificate on my #2 as well and thought I just could download it from dev.apple page and add to the keychain. But when I did that, the private key below the certificate was missing! Why is that? The private key for the distribution profile for 2010 was still there visible below the (expired) certificate.</p>

<p>It made me so crazy that I went back to Macbook #1 and exported both of the keys there to the #2. That worked of course, but it can't be the solution for the future! What if the Macbook crashes and I want to do everything via new Macbook? Lets assume I couldn't have done the export from #1, how would I get the freakin private key below the cert in #2?</p>

<p>Secondly, I am a bit confused: Which keys do I need to back up? I thought it was only the private key, but I couldn't get it ""below"" the distribution certificate on my new Macbook #2, which scares me a little bit.</p>

<p>BTW: the certificate war with Apple is a big joke, but that's another topic.</p>
","<p>Once you setup your certificates, go to Xcode's Organizer and under Devices tab on the left side you will see Developer Profile section where you can export your developer profile. It's a password-protected files that will hold all your development/distribution certificates and their respective private keys, as well as any provisioning profiles you have installed. When you have this file, it's all you need to move development to new machine, just double-click it and when Xcode opens it, enter the password.</p>

<p>And believe it or not, ""certificate war"" is not a big joke with Apple, you should see WP7, but that's for some other place to discuss about.</p>
","6149","<ios><certificate><private-key>","4","7","1","2011-08-25 01:02:39","7184028","2","1","","","","2011-08-24 23:41:35",""
"11030195","Extracting private key in java","<p>I have certificate created using java class CertAndKeyGen and X500Name and I am able to generate the certificate which is in byte array. Now I want the private key I used in certificate and convert it into readable format. Below is the code I used to create the certificate,</p>

<pre><code>    CertAndKeyGen keypair = new CertAndKeyGen(""RSA"", ""SHA1WithRSA"", null); 
    X500Name x500Name = new X500Name(commonName, organizationalUnit, organization, city, state, country);
    keypair.generate(keysize);
    PrivateKey privKey = keypair.getPrivateKey();
    PKCS10 certReq = keypair.getCertRequest(x500Name);
    X509Certificate[] chain = new X509Certificate[1];
    chain[0] = keypair.getSelfCertificate(x500Name, new Date(), (long) validity * 24 * 60 * 60);
    keyStore.setKeyEntry(alias, privKey, keyStorePassword.toCharArray(), chain);                    
    ByteArrayOutputStream bs = new ByteArrayOutputStream();
    PrintStream ps = new PrintStream(bs);
    certReq.print(ps);
    byte[] certReqPrintable = bs.toByteArray(); 
</code></pre>

<p>I have got no clues, please help me to go in right direction to get private key and convert it into readable format. Thanks in advance.</p>
","<p>If you want to save the private key to a file use </p>

<pre><code>byte[] privateKeyBytes = privKey.getEncoded();
</code></pre>

<p>This returns the key in DER encoded (binary) format.</p>

<p>In case you want just to display the contained values on the console just print it using toString():</p>

<pre><code>System.out.println(privKey);
</code></pre>
","6098","<java><private-key>","3","1","2","2012-06-14 16:51:06","11030497","2","1","168868","","2012-06-14 16:51:06","2012-06-14 09:25:28",""
"11030195","Extracting private key in java","<p>I have certificate created using java class CertAndKeyGen and X500Name and I am able to generate the certificate which is in byte array. Now I want the private key I used in certificate and convert it into readable format. Below is the code I used to create the certificate,</p>

<pre><code>    CertAndKeyGen keypair = new CertAndKeyGen(""RSA"", ""SHA1WithRSA"", null); 
    X500Name x500Name = new X500Name(commonName, organizationalUnit, organization, city, state, country);
    keypair.generate(keysize);
    PrivateKey privKey = keypair.getPrivateKey();
    PKCS10 certReq = keypair.getCertRequest(x500Name);
    X509Certificate[] chain = new X509Certificate[1];
    chain[0] = keypair.getSelfCertificate(x500Name, new Date(), (long) validity * 24 * 60 * 60);
    keyStore.setKeyEntry(alias, privKey, keyStorePassword.toCharArray(), chain);                    
    ByteArrayOutputStream bs = new ByteArrayOutputStream();
    PrintStream ps = new PrintStream(bs);
    certReq.print(ps);
    byte[] certReqPrintable = bs.toByteArray(); 
</code></pre>

<p>I have got no clues, please help me to go in right direction to get private key and convert it into readable format. Thanks in advance.</p>
","<p>BouncyCastle has the useful <a href=""http://www.cs.berkeley.edu/~jonah/bc/org/bouncycastle/openssl/PEMWriter.html"" rel=""nofollow"">PEMWriter</a> class that you can use to write the private key to a file in PEM format (this is what tools like OpenSSH and curl expect).</p>

<pre><code>PEMWriter privatepemWriter = new PEMWriter(new FileWriter(filename)));
privatepemWriter.writeObject(privKey);
privatepemWriter.close();
</code></pre>

<p>Otherwise you can just save the byte array from the private key which is the DER format also used by many tools.</p>

<p>Finally you can write it to a JKS keystore used by other java programs using this:</p>

<pre><code>KeyStore keyStore = KeyStore.getInstance(""JKS"");
keyStore.load(null);
keyStore.setKeyEntry(""some alias"", privKey, somePassword.toCharArray(), chain[0]));
FileOutputStream fos = new FileOutputStream(filename);
keyStore.store(fos, somePassword.toCharArray());
fos.close();
</code></pre>
","6098","<java><private-key>","3","1","2","2012-06-14 16:51:06","11030497","2","1","168868","","2012-06-14 16:51:06","2012-06-14 09:25:28",""
"29452656","Vagrant SSH default key passphrase?","<p>I think I messed up something simple, normally you should be able to instantly connect to your Vagrant VM using <code>vagrant ssh</code>. However, it's currently different for me.</p>

<pre><code>C:\Users\Sem\Documents\timeline&gt;vagrant ssh
Enter passphrase for key 'C:/Users/Sem/Documents/timeline/.vagrant/machines/default/virtualbox/private_key':
vagrant@127.0.0.1's password:
vagrant@127.0.0.1's password:
vagrant@127.0.0.1's password:
Permission denied (publickey,password).
</code></pre>

<p>I found one other person having the same issue: <a href=""https://github.com/coreos/docs/issues/10#issuecomment-48903893"" rel=""noreferrer"">https://github.com/coreos/docs/issues/10#issuecomment-48903893</a></p>

<p>OS: Windows 8.1 Pro</p>

<p>Vagrant version: 1.7.2</p>

<p>Vagrantfile:</p>

<pre><code># -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(""2"") do |config|
    config.vm.box = ""ubuntu/trusty64""
end
</code></pre>

<p>I did try multiple settings before, but if I use this Vagrantfile with <code>vagrant destroy</code> and <code>vagrant up</code> the problem remains.</p>

<p>If there is any information missing, please tell me.</p>
","<p>Even though I was searching for something else I found the solution to this problem. </p>

<p>I Added this to my Vagrantfile:</p>

<pre><code>config.vm.provider ""virtualbox"" do |v|
    v.customize [""modifyvm"", :id, ""--natdnshostresolver1"", ""on""]
    v.customize [""modifyvm"", :id, ""--natdnsproxy1"", ""on""]
end
</code></pre>

<p>It also made the internet connection in my vagrant VM super fast! :)</p>
","6022","<ubuntu><ssh><vagrant><private-key>","8","2","3","2015-07-25 13:46:10","29636386","4","","1000030","","2015-04-05 12:24:02","2015-04-04 23:49:09",""
"29452656","Vagrant SSH default key passphrase?","<p>I think I messed up something simple, normally you should be able to instantly connect to your Vagrant VM using <code>vagrant ssh</code>. However, it's currently different for me.</p>

<pre><code>C:\Users\Sem\Documents\timeline&gt;vagrant ssh
Enter passphrase for key 'C:/Users/Sem/Documents/timeline/.vagrant/machines/default/virtualbox/private_key':
vagrant@127.0.0.1's password:
vagrant@127.0.0.1's password:
vagrant@127.0.0.1's password:
Permission denied (publickey,password).
</code></pre>

<p>I found one other person having the same issue: <a href=""https://github.com/coreos/docs/issues/10#issuecomment-48903893"" rel=""noreferrer"">https://github.com/coreos/docs/issues/10#issuecomment-48903893</a></p>

<p>OS: Windows 8.1 Pro</p>

<p>Vagrant version: 1.7.2</p>

<p>Vagrantfile:</p>

<pre><code># -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(""2"") do |config|
    config.vm.box = ""ubuntu/trusty64""
end
</code></pre>

<p>I did try multiple settings before, but if I use this Vagrantfile with <code>vagrant destroy</code> and <code>vagrant up</code> the problem remains.</p>

<p>If there is any information missing, please tell me.</p>
","<p>Check permissions on your key file. I had the same problem and it was caused by OpenSSH rejecting my key file due to too open permissions. Also you can troubleshoot any Vagrant command with <code>--debug</code> key.</p>
","6022","<ubuntu><ssh><vagrant><private-key>","8","2","3","2015-07-25 13:46:10","29636386","4","","1000030","","2015-04-05 12:24:02","2015-04-04 23:49:09",""
"29452656","Vagrant SSH default key passphrase?","<p>I think I messed up something simple, normally you should be able to instantly connect to your Vagrant VM using <code>vagrant ssh</code>. However, it's currently different for me.</p>

<pre><code>C:\Users\Sem\Documents\timeline&gt;vagrant ssh
Enter passphrase for key 'C:/Users/Sem/Documents/timeline/.vagrant/machines/default/virtualbox/private_key':
vagrant@127.0.0.1's password:
vagrant@127.0.0.1's password:
vagrant@127.0.0.1's password:
Permission denied (publickey,password).
</code></pre>

<p>I found one other person having the same issue: <a href=""https://github.com/coreos/docs/issues/10#issuecomment-48903893"" rel=""noreferrer"">https://github.com/coreos/docs/issues/10#issuecomment-48903893</a></p>

<p>OS: Windows 8.1 Pro</p>

<p>Vagrant version: 1.7.2</p>

<p>Vagrantfile:</p>

<pre><code># -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(""2"") do |config|
    config.vm.box = ""ubuntu/trusty64""
end
</code></pre>

<p>I did try multiple settings before, but if I use this Vagrantfile with <code>vagrant destroy</code> and <code>vagrant up</code> the problem remains.</p>

<p>If there is any information missing, please tell me.</p>
","<p>Very new to vagrant and linux in general so this is for those who are like me. By default there is no passphrase so simply hitting enter will work. It will then ask you for the password which by default is 'vagrant'.</p>
","6022","<ubuntu><ssh><vagrant><private-key>","8","8","3","2015-07-25 13:46:10","29636386","4","","1000030","","2015-04-05 12:24:02","2015-04-04 23:49:09",""
"11996229","Whats wrong with being your own Certificate Authority and self-signing for your email encryption?","<p>Is there any real reason to use a 3rd party Certificate Authority for your own email security?</p>

<p>( meaning using S/MIME )</p>

<p>I found I am able to become my own CAuthority and create my own self-signed root certificates...and they work just fine installed on my machines and mobile devices.</p>

<p>Is there a compelling reason to use a 3rd party's paid certificates instead of my own self-generated and signed ones that I control?  </p>

<p>I keep thinking - the person or entity I most trust with the authority of my validated encrypted emails... is ME!... why would I let an additional un-verifiable by me entity into that chain of communication? - if who Im sending emails to is others who know me and trust that its me..? and why would I PAY them? </p>

<p>I can understand if the communication is between my commercial website and unknown outside individuals who don't know me and are transacting money... but for personal email? between family and well known friends or co-wokers?  </p>

<p>Is there something else I don't understand about public-private key encryption that makes having a validated big 3rd party give me the certificates worth paying for?</p>

<p>I understand the need for SSL 3rd party verify when dealing with commerce on websites or trusting websites with your secure connectivity.  But between individuals? it seems different...individuals that you know personally even more different. No?</p>
","<p>The only reason to use an external CA is so that there's a shared trust root between you and another party. If you control all the machines such as in a domain, then there's no reason at all you can't use your own CA. We have our own domain CA for Exchange. It's actually a lot easier than an external CA because the servers and clients will get the CA certs automatically.</p>
","5886","<security><public-key-encryption><private-key><certificate-authority><smime>","6","8","5","2016-12-21 15:53:24","11996289","3","1","296899","","2012-08-18 08:10:04","2012-08-16 22:16:32",""
"11996229","Whats wrong with being your own Certificate Authority and self-signing for your email encryption?","<p>Is there any real reason to use a 3rd party Certificate Authority for your own email security?</p>

<p>( meaning using S/MIME )</p>

<p>I found I am able to become my own CAuthority and create my own self-signed root certificates...and they work just fine installed on my machines and mobile devices.</p>

<p>Is there a compelling reason to use a 3rd party's paid certificates instead of my own self-generated and signed ones that I control?  </p>

<p>I keep thinking - the person or entity I most trust with the authority of my validated encrypted emails... is ME!... why would I let an additional un-verifiable by me entity into that chain of communication? - if who Im sending emails to is others who know me and trust that its me..? and why would I PAY them? </p>

<p>I can understand if the communication is between my commercial website and unknown outside individuals who don't know me and are transacting money... but for personal email? between family and well known friends or co-wokers?  </p>

<p>Is there something else I don't understand about public-private key encryption that makes having a validated big 3rd party give me the certificates worth paying for?</p>

<p>I understand the need for SSL 3rd party verify when dealing with commerce on websites or trusting websites with your secure connectivity.  But between individuals? it seems different...individuals that you know personally even more different. No?</p>
","<p>this article describes it pretty well:</p>

<p><a href=""http://www.davidpashley.com/articles/cert-authority.html"" rel=""nofollow"">http://www.davidpashley.com/articles/cert-authority.html</a></p>

<p>and this one is really good too - look at the sidebar commentary:</p>

<p><a href=""http://www.area536.com/projects/be-your-own-certificate-authority-with-openssl/"" rel=""nofollow"">http://www.area536.com/projects/be-your-own-certificate-authority-with-openssl/</a></p>

<p>he doesn't specifically mention SMIME email - but I think it falls under this category.</p>

<p>I believe that in my case ( small personal security ) being your own CA is a valid and ok way to do things - as long as you can wrap your head around the process and do it with careful understanding of the limits.</p>

<p>I'll still wait for someone to convince me otherwise here tho... thanks for all answers everyone is helpful!</p>
","5886","<security><public-key-encryption><private-key><certificate-authority><smime>","6","1","5","2016-12-21 15:53:24","11996289","3","1","296899","","2012-08-18 08:10:04","2012-08-16 22:16:32",""
"11996229","Whats wrong with being your own Certificate Authority and self-signing for your email encryption?","<p>Is there any real reason to use a 3rd party Certificate Authority for your own email security?</p>

<p>( meaning using S/MIME )</p>

<p>I found I am able to become my own CAuthority and create my own self-signed root certificates...and they work just fine installed on my machines and mobile devices.</p>

<p>Is there a compelling reason to use a 3rd party's paid certificates instead of my own self-generated and signed ones that I control?  </p>

<p>I keep thinking - the person or entity I most trust with the authority of my validated encrypted emails... is ME!... why would I let an additional un-verifiable by me entity into that chain of communication? - if who Im sending emails to is others who know me and trust that its me..? and why would I PAY them? </p>

<p>I can understand if the communication is between my commercial website and unknown outside individuals who don't know me and are transacting money... but for personal email? between family and well known friends or co-wokers?  </p>

<p>Is there something else I don't understand about public-private key encryption that makes having a validated big 3rd party give me the certificates worth paying for?</p>

<p>I understand the need for SSL 3rd party verify when dealing with commerce on websites or trusting websites with your secure connectivity.  But between individuals? it seems different...individuals that you know personally even more different. No?</p>
","<p>When people encrypt their eMail, they just want the email to be transported over the web and to be stored on the target system as an encrypted data set which only the holder of the private key can read.</p>

<p>Signing the email is an additional feature which should identify the sender of the email. Traditionally a signature on paper is used in the western hemisphere which is easy to fake. Therefore an attestation of the signature was required for important documents. Digital Certificate Authorites for SMIME typically attest only that the requestor had access to a certain email address, which is probably worth nothing - certainly not 20 $/year.</p>

<p>For me it is perfectly OK to send my private key via email or exchange it on a memory stick. What's more important is to secure your private key when you really want secure communication. Typically everyone who can get access to your PC has also access to your private key! I'm using a smart card to generate and to store the private key. The key never leaves the card. However, you have to trust the smartcard. I do trust my card because it was developed by my team. This is certainly not an option lots of people have.  </p>
","5886","<security><public-key-encryption><private-key><certificate-authority><smime>","6","-3","5","2016-12-21 15:53:24","11996289","3","1","296899","","2012-08-18 08:10:04","2012-08-16 22:16:32",""
"11996229","Whats wrong with being your own Certificate Authority and self-signing for your email encryption?","<p>Is there any real reason to use a 3rd party Certificate Authority for your own email security?</p>

<p>( meaning using S/MIME )</p>

<p>I found I am able to become my own CAuthority and create my own self-signed root certificates...and they work just fine installed on my machines and mobile devices.</p>

<p>Is there a compelling reason to use a 3rd party's paid certificates instead of my own self-generated and signed ones that I control?  </p>

<p>I keep thinking - the person or entity I most trust with the authority of my validated encrypted emails... is ME!... why would I let an additional un-verifiable by me entity into that chain of communication? - if who Im sending emails to is others who know me and trust that its me..? and why would I PAY them? </p>

<p>I can understand if the communication is between my commercial website and unknown outside individuals who don't know me and are transacting money... but for personal email? between family and well known friends or co-wokers?  </p>

<p>Is there something else I don't understand about public-private key encryption that makes having a validated big 3rd party give me the certificates worth paying for?</p>

<p>I understand the need for SSL 3rd party verify when dealing with commerce on websites or trusting websites with your secure connectivity.  But between individuals? it seems different...individuals that you know personally even more different. No?</p>
","<p>In my opinion, using a self-signed CA is an absolutely valid option. Certificates issued by this CA and used for e-mail encryption work the same way as if they were issued from a globally trusted CA with the one exception that the end user must manually trust the CA once.</p>

<p>This means that the crucial step is to trust the self-signed CA. However, you can make sure that the self-signed CA is correct, this step is even safer than relying on a global trust company <em>which you must trust but do not have the choice to</em>.</p>

<p>For example, we publish our public CA certificate on the web, asking others who we would like to exchange encrypted mail with to download, import and trust it. It is easy to make sure that they did not get a forged certificate by checking the certificate's finger print with us. </p>

<p>Once they have trusted our CA, encrypted e-mail exchange is no difference to using a commercial, ""professional"" (intermediate) certificate.</p>
","5886","<security><public-key-encryption><private-key><certificate-authority><smime>","6","0","5","2016-12-21 15:53:24","11996289","3","1","296899","","2012-08-18 08:10:04","2012-08-16 22:16:32",""
"11996229","Whats wrong with being your own Certificate Authority and self-signing for your email encryption?","<p>Is there any real reason to use a 3rd party Certificate Authority for your own email security?</p>

<p>( meaning using S/MIME )</p>

<p>I found I am able to become my own CAuthority and create my own self-signed root certificates...and they work just fine installed on my machines and mobile devices.</p>

<p>Is there a compelling reason to use a 3rd party's paid certificates instead of my own self-generated and signed ones that I control?  </p>

<p>I keep thinking - the person or entity I most trust with the authority of my validated encrypted emails... is ME!... why would I let an additional un-verifiable by me entity into that chain of communication? - if who Im sending emails to is others who know me and trust that its me..? and why would I PAY them? </p>

<p>I can understand if the communication is between my commercial website and unknown outside individuals who don't know me and are transacting money... but for personal email? between family and well known friends or co-wokers?  </p>

<p>Is there something else I don't understand about public-private key encryption that makes having a validated big 3rd party give me the certificates worth paying for?</p>

<p>I understand the need for SSL 3rd party verify when dealing with commerce on websites or trusting websites with your secure connectivity.  But between individuals? it seems different...individuals that you know personally even more different. No?</p>
","<p>Nowadays certificates can be obtained for free. A lot of the answers above are valid, but I still choose to use certificate to give host like gmail/yahoo/hotmail less reasons to throw me into spam (doesn't work all the time though). </p>

<p>Spf,dkim,certs.. They are all free, so why not?</p>

<p>I'm using postfix+letsencrypt and working brilliantly. </p>
","5886","<security><public-key-encryption><private-key><certificate-authority><smime>","6","-1","5","2016-12-21 15:53:24","11996289","3","1","296899","","2012-08-18 08:10:04","2012-08-16 22:16:32",""
"29646720","Convert .pem key file to .ppk in Windows automatically/script/command line","<p>I'm using Vagrant to create VMs on a Windows host, to which I would like to connect with PuTTY. Vagrant creates an RSA private key in the .pem format. PuTTY needs a key in the .ppk format to create a connection.</p>

<p>I would like to convert the .pem to .ppk automatically when creating the vagrant VM.</p>

<p>The question of how to convert .pem to .ppk has been asked and answered lots of times, but on Windows all those answers involve clicking through the puttygen GUI. It seems that on Linux, puttygen can be operated entirely from the command line, but on Windows the GUI must be used.</p>

<p>Having to click through a GUI is a slow point in my workflow when creating new VMs that I would like to avoid.</p>

<p>Is there any command-line/scriptable/programmatic way of converting .pem files to .ppk format on Windows?</p>
","<p><a href=""https://winscp.net/"" rel=""nofollow noreferrer"">WinSCP</a> supports <a href=""https://winscp.net/eng/docs/commandline#keygen"" rel=""nofollow noreferrer"">command-line conversion of private keys from the OpenSSH (or ssh.com) format to the PuTTY <code>.ppk</code> format</a>.</p>

<p>Use the <code>/keygen</code> switch:</p>

<pre><code>winscp.com /keygen mykey.pem /output=mykey.ppk
</code></pre>

<p><em>(I'm the author of WinSCP)</em></p>

<hr>

<p>Or, you can compile/run Unix command-line <code>puttygen</code> using Cygwin.</p>

<hr>

<p>Or build your own tool from PuTTY code, it's open-source. It is rather easy (that's basically what WinSCP does).</p>

<p>Use <code>import_ssh2</code> to load the <code>.pem</code>:</p>



<pre class=""lang-c prettyprint-override""><code>ssh2_userkey *import_ssh2(const Filename *filename, int type,
                          char *passphrase, const char **errmsg_p);
</code></pre>

<p>Use <code>ssh2_save_userkey</code> to save it as <code>.ppk</code>:</p>

<pre class=""lang-c prettyprint-override""><code>bool ssh2_save_userkey(
    const Filename *filename, ssh2_userkey *key, char *passphrase);
</code></pre>
","5877","<ssh><putty><private-key><pem><key-pair>","1","9","2","2019-08-28 05:38:19","29647376","0","1","850848","","2015-04-15 10:48:31","2015-04-15 09:36:42",""
"29646720","Convert .pem key file to .ppk in Windows automatically/script/command line","<p>I'm using Vagrant to create VMs on a Windows host, to which I would like to connect with PuTTY. Vagrant creates an RSA private key in the .pem format. PuTTY needs a key in the .ppk format to create a connection.</p>

<p>I would like to convert the .pem to .ppk automatically when creating the vagrant VM.</p>

<p>The question of how to convert .pem to .ppk has been asked and answered lots of times, but on Windows all those answers involve clicking through the puttygen GUI. It seems that on Linux, puttygen can be operated entirely from the command line, but on Windows the GUI must be used.</p>

<p>Having to click through a GUI is a slow point in my workflow when creating new VMs that I would like to avoid.</p>

<p>Is there any command-line/scriptable/programmatic way of converting .pem files to .ppk format on Windows?</p>
","<p>I've written a utility that will do this for you because it drove me nuts too. It will monitor a directory and convert them automatically as they arrive. Will also let you quick launch putty sessions.</p>

<p>Grab a copy from <a href=""http://www.boofis.com/2016/02/automatically-convert-pem-to-ppk/"" rel=""nofollow"">here</a></p>
","5877","<ssh><putty><private-key><pem><key-pair>","1","1","2","2019-08-28 05:38:19","29647376","0","1","850848","","2015-04-15 10:48:31","2015-04-15 09:36:42",""
"26286766","notepad++ cant connect using SFTP - Error during authentication: Invalid private key file","<p>Hi I created private key using puttygen,
I have successfully connected using putty, and using Filezilla.</p>

<p>But I cant seem to get it work with Notepad++</p>

<p>Im getting...</p>

<p>Host Key accepted, then...</p>

<p>Error during authentication: Invalid private key file.</p>

<p>I have inserted by IP, </p>

<p>selected 22 as port, </p>

<p>Ive selected SFTP</p>

<p>Ive put in my username with password blank</p>

<p>Under Authorization I have selected ""Try Private Key File Authorization"" with the private key file that Ive been using for the others as the one its pointing to in the field below</p>

<p>But despite all this Im still getting the error, might there be something stupid that I am missing?</p>
","<p>To check it, try <strong>SynWrite</strong> with same NppFTP, updated to SynFTP (it's installed there, see FTP tab on left pane). Enter same file and test it. </p>
","5827","<notepad++><sftp><private-key>","1","0","3","2015-02-13 14:44:26","26350520","0","1","1652535","","2014-10-09 20:00:51","2014-10-09 19:46:36","2018-09-26 08:23:34"
"26286766","notepad++ cant connect using SFTP - Error during authentication: Invalid private key file","<p>Hi I created private key using puttygen,
I have successfully connected using putty, and using Filezilla.</p>

<p>But I cant seem to get it work with Notepad++</p>

<p>Im getting...</p>

<p>Host Key accepted, then...</p>

<p>Error during authentication: Invalid private key file.</p>

<p>I have inserted by IP, </p>

<p>selected 22 as port, </p>

<p>Ive selected SFTP</p>

<p>Ive put in my username with password blank</p>

<p>Under Authorization I have selected ""Try Private Key File Authorization"" with the private key file that Ive been using for the others as the one its pointing to in the field below</p>

<p>But despite all this Im still getting the error, might there be something stupid that I am missing?</p>
","<p>Notepad++'s SFTP client plug-in does not support keys in PPK (PuTTY) format.<br>
Try saving your key in OpenSSH (RSA) format and it should work just fine.</p>
","5827","<notepad++><sftp><private-key>","1","7","3","2015-02-13 14:44:26","26350520","0","1","1652535","","2014-10-09 20:00:51","2014-10-09 19:46:36","2018-09-26 08:23:34"
"26286766","notepad++ cant connect using SFTP - Error during authentication: Invalid private key file","<p>Hi I created private key using puttygen,
I have successfully connected using putty, and using Filezilla.</p>

<p>But I cant seem to get it work with Notepad++</p>

<p>Im getting...</p>

<p>Host Key accepted, then...</p>

<p>Error during authentication: Invalid private key file.</p>

<p>I have inserted by IP, </p>

<p>selected 22 as port, </p>

<p>Ive selected SFTP</p>

<p>Ive put in my username with password blank</p>

<p>Under Authorization I have selected ""Try Private Key File Authorization"" with the private key file that Ive been using for the others as the one its pointing to in the field below</p>

<p>But despite all this Im still getting the error, might there be something stupid that I am missing?</p>
","<p>Log-in to your terminal. Make sure you are in /home/your_user_name/</p>

<p>First client private/public key</p>

<p>$ <code>ssh-keygen -t rsa</code></p>

<ol>
<li>Press Enter to choose default directory</li>
<li>You may choose a pass phrase here depending upon situation.</li>
</ol>

<p>Now add your public rsa key details to authorized keys, use the following command</p>

<p>$ <code>cat id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</code></p>

<p>$  <code>chmod 600 ~/.ssh/authorized_keys</code></p>

<p>After this delete the id_rsa.pub file if you wish.</p>

<p>Now the private key file id_rsa is the one you need to '<code>import</code>'. </p>

<p>You need the tool called the <code>puttygen</code> to import this file and then<br>
click on the <code>Menu Bar</code> -> <code>Conversions</code> -> <code>Export OpenSSH Key</code> and save the exported file.</p>

<p>Save it as <code>npp.ppk</code> (maybe) and then use this in the Notepad++ Private key file path.</p>
","5827","<notepad++><sftp><private-key>","1","0","3","2015-02-13 14:44:26","26350520","0","1","1652535","","2014-10-09 20:00:51","2014-10-09 19:46:36","2018-09-26 08:23:34"
"29560095","Unable to decrypt data - openssl_private_decrypt(): key parameter is not a valid private key","<pre><code>&lt;?php
    ini_set('display_errors', 1);

    $config = array(
        ""config"" =&gt; ""C:\wamp\bin\apache\Apache2.4.4\conf\openssl.cnf"",
        ""private_key_bits"" =&gt; 2048,
        ""private_key_type"" =&gt; OPENSSL_KEYTYPE_RSA,
    );

    // Create the private and public key
    $res = openssl_pkey_new($config);

    if ($res === false) die('Failed to generate key pair.'.""\n""); 

    if (!openssl_pkey_export($res, $privKey, ""phrase"", $config)) die('Failed to retrieve private key.'.""\n""); 

    // Extract the private key from $res to $privKey
    openssl_pkey_export($res, $privKey, ""phrase"", $config);

    echo ""&lt;br/&gt;"";
    echo ""Private Key = "".$privKey;
    echo ""&lt;br/&gt;"";

    // Extract the public key from $res to $pubKey
    $pubKey = openssl_pkey_get_details($res);
    $pubKey = $pubKey[""key""];

    echo ""&lt;br/&gt;"";
    echo ""Public Key = "".$pubKey;
    echo ""&lt;br/&gt;"";

    $data = 'plaintext data goes here';

    // Encrypt the data to $encrypted using the public key
    openssl_public_encrypt($data, $encrypted, $pubKey);
    echo ""&lt;br/&gt;"";
    echo ""Encrypted Data = "".$encrypted;
    echo ""&lt;br/&gt;"";

    // Decrypt the data using the private key and store the results in $decrypted
    openssl_private_decrypt($encrypted, $decrypted, $privKey);

    echo ""&lt;br/&gt;"";
    echo ""Decrypted Data = "".$decrypted;
    echo ""&lt;br/&gt;"";
?&gt;
</code></pre>

<p><strong>LOGS</strong></p>

<blockquote>
  <p>Private Key = -----BEGIN ENCRYPTED PRIVATE KEY-----
  MIIFDjBABgkqhkiG9w0BBQ0wMzAbBgkqhkiG9w0BBQwwDgQIr2acPfh8YYQCAggA
  MBQGCCqGSIb3DQMHBAiCvohdiWAZ4QSCBMjKJUXF5ShKfW3TazpKYTxEV8JmGYLf
  AJWXzxdi0GrDuddz4aW1FeGwvUm2t/41CTxFsWtgoQJrzCgAQETn54majdrDeF4u
  zCmvFMKSoVP4xsZKke15e1K1LPmFNNuKKyCqMwL+tpQJ7zquvDTKHapUnNzfNXpZ
  D2K1r2qZWeDN1d36DA9wkN5GbpZYAjuHqHUNzorhxIbHGp2WOg8YKdemoTuKIqYC
  DUKncWtxRUOx6IIZuey+uTBzH7Bn9K9a71QTjUdeWgQZFzy9yVpetB+XrJA92IWt
  vMeKXCXNhOgkOvkUPNXSuMOVrECNcbKDAKxmK3EQWqb+8zlYFqjmaL/sCep8ihio
  1ZWpRaOd5HxnG5rpmz/BYzcF354mM8B4wAIk7MmFq/pHSKLjpr+2Ef1BpMmXfRpG
  Pj1jYDClSIQF6ovKOqhevFwfYrtl2jEOISyAggm/sbD750VBkwhbVAyQcarckAiI
  GlNcQPOC+JYZOV7o/9o+Tg24zwtAQ8y3hNvYyHjqYI5naVS9yuXEqB6zYoGivs/k
  bIblqTFebLEFtihjsa9wpXkyNzKD2NvdSa2oNC7IkCNi8TRNjy7MLylSmCIdhWAV
  YgL1hxShMgbnfiGjFQyYnKzZto9RqRlQBIoBOCfwP1EFnZjCJm02CCeGR+GHKXf7
  rJ0n6lIUEvVnENirAPtOuiE2ccbzmyjWQ9f2vwBSUea5nPTMG4uTVHrQjrgNYIyU
  +vLV6tL+MDKF4JGQGgzBUeqTMobmrOK+V20QIasYaAWHJrL8itBwZ++C8lo7kySa SImMXakI4rjgEmj+HmUJygT1EZWz5yQqOiwAYLhQZg+m6+32Pvt6mIrAXbznrdHP
  JxHb/9HV88mQdRKPBTkSTl71Ics+3oybYPbhSQByXOdtsw6VLYNo4ikgj3tXCz01
  DwVQqeQ5tLD4LY8/QaAHkOUq9K24yfkcN+aQh7cvR/HX53Ls6LsdUwkwSOWVj2na
  Wl4xn+j3ZaPhpgdzcMgknU7BAI2kZP83MxyKnNcnneyX4hTaM5PRZJXKd+onvhff
  nQ3zHDSYmRDKmTXBjCob3Vjg91LcMjg9dEH7aIFWit5dHK4ll/v1IiOFx8d4d/mV
  Oll0c0ujJuPjtyqesM2Bz3Ah5YkIT2Z7kxvRy7rTyytQG7hLNENAki9wW79fcEo7
  ln/OvEpjdWZngkL/UrMOX8DBrs0PLEH9jyDoCQx/LSqxMAXOwVXILfsfsUFu0M0o
  21YbeC33jOlocJ4Q6pwfRVz8lCQOuIVs1jEpvSmvHgvmHmXUI4Y6nZD4Roi0jIjS
  VvI73eULzc3j0jIptWxzrHWM6iHx1zRxkLMJSZOx0A27ngtSo7g6+aJnMO5FDfdR
  90vnr+bX4ki+X/N4wVF7eppyapLe/tQ54vAxsyIBrCXPjwBMehiFjOMhzSLW7xQj
  Qg2KcilfW6oKFzDQQ5nKPEXvQYMhQ1MeWKyNv6BMoc4EEpIGhtziUXWhgT4sN1ES
  5sxVcGVoIe1viO/kk3Zq55hETlZbNWs3V511BcEZCiQNrntnbYv6pwKpoB21ZV2E
  slVhYcslEGliIQKQsWSl5cfc+pqjLteiPrwk14WKJGXl9zX3YH6H7KKB/7SIRZk7 wq8=
  -----END ENCRYPTED PRIVATE KEY-----</p>
  
  <p>Public Key = -----BEGIN PUBLIC KEY-----
  MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAriS8qflAjYSYhH2qgC5T
  yf98X1qoLMXIW9mMkhV8LcApBKOfNjUMc9xjD3a8CR/LYwa4MYhevoKcVfPG8XoE
  sDGyHh+h/vtYP0rORB1T3RULVUzDLjX558e2KqPrSN+rV+Jl1NB0SO5Of3JA+AKa
  0Q3botcjOM3WuFa/s+RzsiCrMMhzOZSTBj+GTP/VcDipF5PM7+/Lxr+edjRXccT2
  WQjsq0sUrtsmpzBE8Niph361RjfIisxKoksQGs7hC/Iv4yhBzZZIpRaZuvDj4ImP
  +4sUQgbdVVCso122kg34UtY5qchuSCcJfsGbD2zMw+8ZftIsJ7dfX1FxujgggDyn 0wIDAQAB -----END PUBLIC KEY-----</p>
</blockquote>

<pre><code>Encrypted Data = Uš6/ùÅËæÝmL4²G¾'gr¨Ñ­Ä‰ï‚zêbÀ)[îR0s‹yÝ`t™õ°Þe­Ïd&gt;×o¯rß9ÌÔÅAü!-†D·¨ÎVZ¼?¶éžäýöaØT~=‚Fan¢ºq{M”ƒ¹Cû5N3¹.Ð(·#*ÏRÆ¹ñß÷õƒ_ò9c-Ÿ% ×óè2ê™‚õ“ÂÐgNÈ-ˆd«…ºt§¼Ô}yŠ""7èPš(¶R¤ßJÚ_h¶ðÞK(Cj“7‘YÂ ÀŠþrôZƒ4)JU•˜„üˆ k0â§Êë^ÚºGÚªúVKø†ë8ÏLÚó  „Ÿ¦¿¤

( ! ) Warning: openssl_private_decrypt(): key parameter is not a valid private key in C:\wamp\www\android\pki_example.php on line 41
Call Stack
#   Time    Memory  Function    Location
1   0.0020  252696  {main}( )   ..\pki_example.php:0
2   0.2043  258032  openssl_private_decrypt ( ) ..\pki_example.php:41

Decrypted Data = 
</code></pre>
","<pre><code>// Decrypt the data using the private key and store the results in $decrypted
openssl_private_decrypt($encrypted, $decrypted, openssl_pkey_get_private($privKey, ""phrase""));

echo ""&lt;br/&gt;"";
echo ""Decrypted Data = "".$decrypted;
echo ""&lt;br/&gt;"";
</code></pre>

<p><code>openssl_private_decrypt</code> function is capable to use PEM formatted private key but your key is encrypted and this function does not have an argument for password. You have to use <code>openssl_pkey_get_private</code> instead.</p>
","5816","<php><openssl><public-key-encryption><private-key>","5","6","2","2016-06-07 05:39:48","29560553","0","1","","","","2015-04-10 11:18:41",""
"29560095","Unable to decrypt data - openssl_private_decrypt(): key parameter is not a valid private key","<pre><code>&lt;?php
    ini_set('display_errors', 1);

    $config = array(
        ""config"" =&gt; ""C:\wamp\bin\apache\Apache2.4.4\conf\openssl.cnf"",
        ""private_key_bits"" =&gt; 2048,
        ""private_key_type"" =&gt; OPENSSL_KEYTYPE_RSA,
    );

    // Create the private and public key
    $res = openssl_pkey_new($config);

    if ($res === false) die('Failed to generate key pair.'.""\n""); 

    if (!openssl_pkey_export($res, $privKey, ""phrase"", $config)) die('Failed to retrieve private key.'.""\n""); 

    // Extract the private key from $res to $privKey
    openssl_pkey_export($res, $privKey, ""phrase"", $config);

    echo ""&lt;br/&gt;"";
    echo ""Private Key = "".$privKey;
    echo ""&lt;br/&gt;"";

    // Extract the public key from $res to $pubKey
    $pubKey = openssl_pkey_get_details($res);
    $pubKey = $pubKey[""key""];

    echo ""&lt;br/&gt;"";
    echo ""Public Key = "".$pubKey;
    echo ""&lt;br/&gt;"";

    $data = 'plaintext data goes here';

    // Encrypt the data to $encrypted using the public key
    openssl_public_encrypt($data, $encrypted, $pubKey);
    echo ""&lt;br/&gt;"";
    echo ""Encrypted Data = "".$encrypted;
    echo ""&lt;br/&gt;"";

    // Decrypt the data using the private key and store the results in $decrypted
    openssl_private_decrypt($encrypted, $decrypted, $privKey);

    echo ""&lt;br/&gt;"";
    echo ""Decrypted Data = "".$decrypted;
    echo ""&lt;br/&gt;"";
?&gt;
</code></pre>

<p><strong>LOGS</strong></p>

<blockquote>
  <p>Private Key = -----BEGIN ENCRYPTED PRIVATE KEY-----
  MIIFDjBABgkqhkiG9w0BBQ0wMzAbBgkqhkiG9w0BBQwwDgQIr2acPfh8YYQCAggA
  MBQGCCqGSIb3DQMHBAiCvohdiWAZ4QSCBMjKJUXF5ShKfW3TazpKYTxEV8JmGYLf
  AJWXzxdi0GrDuddz4aW1FeGwvUm2t/41CTxFsWtgoQJrzCgAQETn54majdrDeF4u
  zCmvFMKSoVP4xsZKke15e1K1LPmFNNuKKyCqMwL+tpQJ7zquvDTKHapUnNzfNXpZ
  D2K1r2qZWeDN1d36DA9wkN5GbpZYAjuHqHUNzorhxIbHGp2WOg8YKdemoTuKIqYC
  DUKncWtxRUOx6IIZuey+uTBzH7Bn9K9a71QTjUdeWgQZFzy9yVpetB+XrJA92IWt
  vMeKXCXNhOgkOvkUPNXSuMOVrECNcbKDAKxmK3EQWqb+8zlYFqjmaL/sCep8ihio
  1ZWpRaOd5HxnG5rpmz/BYzcF354mM8B4wAIk7MmFq/pHSKLjpr+2Ef1BpMmXfRpG
  Pj1jYDClSIQF6ovKOqhevFwfYrtl2jEOISyAggm/sbD750VBkwhbVAyQcarckAiI
  GlNcQPOC+JYZOV7o/9o+Tg24zwtAQ8y3hNvYyHjqYI5naVS9yuXEqB6zYoGivs/k
  bIblqTFebLEFtihjsa9wpXkyNzKD2NvdSa2oNC7IkCNi8TRNjy7MLylSmCIdhWAV
  YgL1hxShMgbnfiGjFQyYnKzZto9RqRlQBIoBOCfwP1EFnZjCJm02CCeGR+GHKXf7
  rJ0n6lIUEvVnENirAPtOuiE2ccbzmyjWQ9f2vwBSUea5nPTMG4uTVHrQjrgNYIyU
  +vLV6tL+MDKF4JGQGgzBUeqTMobmrOK+V20QIasYaAWHJrL8itBwZ++C8lo7kySa SImMXakI4rjgEmj+HmUJygT1EZWz5yQqOiwAYLhQZg+m6+32Pvt6mIrAXbznrdHP
  JxHb/9HV88mQdRKPBTkSTl71Ics+3oybYPbhSQByXOdtsw6VLYNo4ikgj3tXCz01
  DwVQqeQ5tLD4LY8/QaAHkOUq9K24yfkcN+aQh7cvR/HX53Ls6LsdUwkwSOWVj2na
  Wl4xn+j3ZaPhpgdzcMgknU7BAI2kZP83MxyKnNcnneyX4hTaM5PRZJXKd+onvhff
  nQ3zHDSYmRDKmTXBjCob3Vjg91LcMjg9dEH7aIFWit5dHK4ll/v1IiOFx8d4d/mV
  Oll0c0ujJuPjtyqesM2Bz3Ah5YkIT2Z7kxvRy7rTyytQG7hLNENAki9wW79fcEo7
  ln/OvEpjdWZngkL/UrMOX8DBrs0PLEH9jyDoCQx/LSqxMAXOwVXILfsfsUFu0M0o
  21YbeC33jOlocJ4Q6pwfRVz8lCQOuIVs1jEpvSmvHgvmHmXUI4Y6nZD4Roi0jIjS
  VvI73eULzc3j0jIptWxzrHWM6iHx1zRxkLMJSZOx0A27ngtSo7g6+aJnMO5FDfdR
  90vnr+bX4ki+X/N4wVF7eppyapLe/tQ54vAxsyIBrCXPjwBMehiFjOMhzSLW7xQj
  Qg2KcilfW6oKFzDQQ5nKPEXvQYMhQ1MeWKyNv6BMoc4EEpIGhtziUXWhgT4sN1ES
  5sxVcGVoIe1viO/kk3Zq55hETlZbNWs3V511BcEZCiQNrntnbYv6pwKpoB21ZV2E
  slVhYcslEGliIQKQsWSl5cfc+pqjLteiPrwk14WKJGXl9zX3YH6H7KKB/7SIRZk7 wq8=
  -----END ENCRYPTED PRIVATE KEY-----</p>
  
  <p>Public Key = -----BEGIN PUBLIC KEY-----
  MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAriS8qflAjYSYhH2qgC5T
  yf98X1qoLMXIW9mMkhV8LcApBKOfNjUMc9xjD3a8CR/LYwa4MYhevoKcVfPG8XoE
  sDGyHh+h/vtYP0rORB1T3RULVUzDLjX558e2KqPrSN+rV+Jl1NB0SO5Of3JA+AKa
  0Q3botcjOM3WuFa/s+RzsiCrMMhzOZSTBj+GTP/VcDipF5PM7+/Lxr+edjRXccT2
  WQjsq0sUrtsmpzBE8Niph361RjfIisxKoksQGs7hC/Iv4yhBzZZIpRaZuvDj4ImP
  +4sUQgbdVVCso122kg34UtY5qchuSCcJfsGbD2zMw+8ZftIsJ7dfX1FxujgggDyn 0wIDAQAB -----END PUBLIC KEY-----</p>
</blockquote>

<pre><code>Encrypted Data = Uš6/ùÅËæÝmL4²G¾'gr¨Ñ­Ä‰ï‚zêbÀ)[îR0s‹yÝ`t™õ°Þe­Ïd&gt;×o¯rß9ÌÔÅAü!-†D·¨ÎVZ¼?¶éžäýöaØT~=‚Fan¢ºq{M”ƒ¹Cû5N3¹.Ð(·#*ÏRÆ¹ñß÷õƒ_ò9c-Ÿ% ×óè2ê™‚õ“ÂÐgNÈ-ˆd«…ºt§¼Ô}yŠ""7èPš(¶R¤ßJÚ_h¶ðÞK(Cj“7‘YÂ ÀŠþrôZƒ4)JU•˜„üˆ k0â§Êë^ÚºGÚªúVKø†ë8ÏLÚó  „Ÿ¦¿¤

( ! ) Warning: openssl_private_decrypt(): key parameter is not a valid private key in C:\wamp\www\android\pki_example.php on line 41
Call Stack
#   Time    Memory  Function    Location
1   0.0020  252696  {main}( )   ..\pki_example.php:0
2   0.2043  258032  openssl_private_decrypt ( ) ..\pki_example.php:41

Decrypted Data = 
</code></pre>
","<p>Don't know what is the reason. I think someone can edit this with exact reason.</p>

<p>When I use private key in one line, it gives the above error mentioned in this question.
But when I use the same private key by splitting it into several lines <strong>(64 characters per line)</strong> it works. In this way no need to use <code>openssl_pkey_get_private($privKey, ""phrase"")</code> function. Actually I had no pass phrase for my private key.</p>
","5816","<php><openssl><public-key-encryption><private-key>","5","0","2","2016-06-07 05:39:48","29560553","0","1","","","","2015-04-10 11:18:41",""
"2394163","How can I use OpenSSL to encrypt a message using my public key and then decrypt it using my private key?","<p>Here is what I've tried:</p>

<p><strong>Encrypt message w/ my public key</strong></p>

<pre><code>openssl enc -aes-256-cbc -salt -kfile key.pub -in message.txt -out message.enc
</code></pre>

<p><strong>Decrypt message using my private key</strong></p>

<pre><code>openssl enc -d -aes-256-cbc -salt -in message.enc -pass file:mykey.pem 
</code></pre>

<p><strong>Error from decryption</strong></p>

<pre><code>bad decrypt
452:error:06065064:digital envelope routines:EVP_DecryptFinal_ex:bad decrypt:evp_enc.c:330:
</code></pre>
","<p>Encrypt:</p>

<pre><code>openssl enc -aes-256-cbc -salt -pass file:password.txt -in message.txt -out message.enc
</code></pre>

<p>Decrypt:</p>

<pre><code>openssl enc -aes-256-cbc -d -salt -pass file:password.txt -in message.enc -out message.dec
</code></pre>

<p>Where the first line of the file <code>password.txt</code> contains your password.</p>
","5655","<encryption><openssl><public-key><private-key>","3","0","4","2018-02-23 11:00:35","","1","5","608639","","2018-02-23 11:00:35","2010-03-06 21:26:45",""
"2394163","How can I use OpenSSL to encrypt a message using my public key and then decrypt it using my private key?","<p>Here is what I've tried:</p>

<p><strong>Encrypt message w/ my public key</strong></p>

<pre><code>openssl enc -aes-256-cbc -salt -kfile key.pub -in message.txt -out message.enc
</code></pre>

<p><strong>Decrypt message using my private key</strong></p>

<pre><code>openssl enc -d -aes-256-cbc -salt -in message.enc -pass file:mykey.pem 
</code></pre>

<p><strong>Error from decryption</strong></p>

<pre><code>bad decrypt
452:error:06065064:digital envelope routines:EVP_DecryptFinal_ex:bad decrypt:evp_enc.c:330:
</code></pre>
","<p>This code works: </p>

<pre><code>openssl rsautl -pubin -inkey key.pub -encrypt -in message.txt -out message.enc

openssl rsautl -inkey privkey.pem -decrypt -in message.enc -out message.dec
</code></pre>
","5655","<encryption><openssl><public-key><private-key>","3","4","4","2018-02-23 11:00:35","","1","5","608639","","2018-02-23 11:00:35","2010-03-06 21:26:45",""
"2394163","How can I use OpenSSL to encrypt a message using my public key and then decrypt it using my private key?","<p>Here is what I've tried:</p>

<p><strong>Encrypt message w/ my public key</strong></p>

<pre><code>openssl enc -aes-256-cbc -salt -kfile key.pub -in message.txt -out message.enc
</code></pre>

<p><strong>Decrypt message using my private key</strong></p>

<pre><code>openssl enc -d -aes-256-cbc -salt -in message.enc -pass file:mykey.pem 
</code></pre>

<p><strong>Error from decryption</strong></p>

<pre><code>bad decrypt
452:error:06065064:digital envelope routines:EVP_DecryptFinal_ex:bad decrypt:evp_enc.c:330:
</code></pre>
","<p>For use </p>

<blockquote>
  <p>openssl rsautl -pubin -inkey key.pub -encrypt -in message.txt -out message.enc</p>
</blockquote>

<p>You need define option -raw to ignore padding :)</p>

<blockquote>
  <p>openssl rsautl -pubin -inkey key.pub -encrypt -in message.txt -out message.enc -raw</p>
</blockquote>
","5655","<encryption><openssl><public-key><private-key>","3","1","4","2018-02-23 11:00:35","","1","5","608639","","2018-02-23 11:00:35","2010-03-06 21:26:45",""
"2394163","How can I use OpenSSL to encrypt a message using my public key and then decrypt it using my private key?","<p>Here is what I've tried:</p>

<p><strong>Encrypt message w/ my public key</strong></p>

<pre><code>openssl enc -aes-256-cbc -salt -kfile key.pub -in message.txt -out message.enc
</code></pre>

<p><strong>Decrypt message using my private key</strong></p>

<pre><code>openssl enc -d -aes-256-cbc -salt -in message.enc -pass file:mykey.pem 
</code></pre>

<p><strong>Error from decryption</strong></p>

<pre><code>bad decrypt
452:error:06065064:digital envelope routines:EVP_DecryptFinal_ex:bad decrypt:evp_enc.c:330:
</code></pre>
","<p><code>enc - symmetric cipher routines</code> so you should use <code>rsautl</code></p>

<p>Correct solutions:</p>

<p><strong>On sender side</strong></p>

<ol>
<li>Generate passphrase</li>
<li>Encrypt your message using <code>enc</code> with passphrase</li>
<li>Encrypt passphrase using <code>rsautl</code> with public key</li>
<li>Send encoded message and encoded passphrase</li>
</ol>

<p><strong>On receiver side</strong></p>

<ol>
<li>Decrypt passphrase using <code>rsautl</code> with private key</li>
<li>Decrypt message using <code>enc</code> with passphrase</li>
</ol>
","5655","<encryption><openssl><public-key><private-key>","3","1","4","2018-02-23 11:00:35","","1","5","608639","","2018-02-23 11:00:35","2010-03-06 21:26:45",""
"15823094","RSA - bouncycastle PEMReader returning PEMKeyPair instead of AsymmetricCipherKeyPair for reading private key","<p>I have a function that successfully reads a openssl formatted private key:</p>

<pre><code>static AsymmetricKeyParameter readPrivateKey(string privateKeyFileName)
{
    AsymmetricCipherKeyPair keyPair;

    using (var reader = File.OpenText(privateKeyFileName))
        keyPair = (AsymmetricCipherKeyPair)new PemReader(reader).ReadObject();

    return keyPair.Private;
}
</code></pre>

<p>and returns an AsymmetricKeyParameter which is then used to decrypt an encrypted text.</p>

<p>Below is the decrypt code:</p>

<pre><code>public static byte[] Decrypt3(byte[] data, string pemFilename)
{
    string result = """";
    try {
        AsymmetricKeyParameter key = readPrivateKey(pemFilename);

        RsaEngine e = new RsaEngine();

        e.Init(false, key);
        //byte[] cipheredBytes = GetBytes(encryptedMsg);

        //Debug.Log (encryptedMsg);

        byte[] cipheredBytes = e.ProcessBlock(data, 0, data.Length);
        //result = Encoding.UTF8.GetString(cipheredBytes);
        //return result;
        return cipheredBytes;

    } catch (Exception e) {
        Debug.Log (""Exception in Decrypt3: "" + e.Message);
        return GetBytes(e.Message);
    }
}
</code></pre>

<p>These work in C# using bouncy castle library and I get the correct decrypted text. However, when I added this to Java, the PEMParser.readObject() returns an object of type PEMKeyPair instead of AsymmetricCipherKeyPair and java throws an exception trying to cast it. I checked in C# and it is actually returning AsymmetricCipherKeyPair. </p>

<p>I don't know why Java behaves differently but I hope someone here can help how to cast this object or read the privatekey file and decrypt successfully. I used the same public and privatekey files in both C# and Java code so I don't think the error is from them.</p>

<p>Here for reference the Java version of how I'm reading the privatekey:</p>

<pre><code>public static String readPrivateKey3(String pemFilename) throws FileNotFoundException, IOException
{
    AsymmetricCipherKeyPair keyParam = null;
    AsymmetricKeyParameter keyPair = null;
    PEMKeyPair kp = null;
    //PrivateKeyInfo pi = null;

    try {
        //var fileStream = System.IO.File.OpenText(pemFilename);
        String absolutePath = """";
        absolutePath = Encryption.class.getProtectionDomain().getCodeSource().getLocation().getPath();
        absolutePath = absolutePath.substring(0, (absolutePath.lastIndexOf(""/"")+1));
        String filePath = """";
        filePath = absolutePath + pemFilename;

        File f = new File(filePath);
        //return filePath;

        FileReader fileReader  = new FileReader(f);
        PEMParser r = new PEMParser(fileReader);

        keyParam = (AsymmetricCipherKeyPair) r.readObject();

        return keyParam.toString();

    }
    catch (Exception e) {
        return ""hello: "" + e.getMessage() + e.getLocalizedMessage() + e.toString();
        //return e.toString();
        //return pi;
    }
}
</code></pre>
","<p>The Java code has been updated to a new API, which is yet to be ported across to C#. You could try the equivalent (but now deprecated) Java PEMReader class. It will return a JCE KeyPair though (part of the reason for the change was because the original version worked only with JCE types, not BC lightweight classes).</p>

<p>If using PEMParser, and you get back a PEMKeyPair, you can use org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter.getKeyPair to get a JCE KeyPair from it. Ideally there would be a BCPEMKeyConverter, but it doesn't appear to have been written yet. In any case, it should be easy to make an AsymmetricCipherKeyPair:</p>

<pre><code>PEMKeyPair kp = ...;
AsymmetricKeyParameter privKey = PrivateKeyFactory.createKey(kp.getPrivateKeyInfo());
AsymmetricKeyParameter pubKey = PublicKeyFactory.createKey(kp.getPublicKeyInfo());
new AsymmetricCipherKeyPair(pubKey, privKey);
</code></pre>

<p>Those factory classes are in the org.bouncycastle.crypto.util package.</p>
","5651","<java><openssl><rsa><bouncycastle><private-key>","7","5","1","2013-04-05 09:19:21","15830135","0","2","","","","2013-04-04 22:51:46",""
"17712119","Enabling ""Load PuttyKey"" on TortoiseGit","<p>The field for uploading a <code>Putty Private Key</code> is currently disabled on my <code>Tortoisegit</code>.</p>

<p><a href=""https://i.stack.imgur.com/lSMjd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/lSMjd.png"" alt=""load putty""></a><br>
<sub>(source: <a href=""http://iforce.co.nz/i/e54wrsuy.vui.png"" rel=""nofollow noreferrer"">iforce.co.nz</a>)</sub>  </p>

<p>Although I currently have valid paths to <code>PuttyGen</code>, <a href=""https://msysgit.github.io/"" rel=""nofollow noreferrer""><code>GitBash</code></a>, <code>PuTTY</code> and <code>TortoiseGitPLink.exe</code>. With the environment variable <a href=""https://web.archive.org/web/20150908104313/https://code.google.com/p/tortoisegit/wiki/FAQ"" rel=""nofollow noreferrer""><code>GIT_SSH</code></a> leading to <code>C:\Program Files\TortoiseGit\bin\TortoisePLink.exe</code></p>

<blockquote>
  <p><strong>How to use PuTTY for git cli and git bash?</strong></p>
  
  <p>Create an environment variable called ""GIT_SSH"" with the path to the PuTTY plink.exe or preferably to TortoiseGitPLink.exe. This can be done on the command line by executing ""set GIT_SSH=PATH_TO_PLINK.EXE"" (""C:\Program Files\TortoiseGit\bin\TortoiseGitPLink.exe"" on default installations) or permanently.</p>
</blockquote>

<p><a href=""https://i.stack.imgur.com/exnyZ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/exnyZ.png"" alt=""Enviroment Vars""></a><br>
<sub>(source: <a href=""http://iforce.co.nz/i/ih0bvryn.3nm.png"" rel=""nofollow noreferrer"">iforce.co.nz</a>)</sub>  </p>
","<p>This just bit me too.  The problem is that you have checked out over https instead of using the git protocol (git@github.com:somerepo.git).  Try that and see if it helps.</p>
","5439","<putty><private-key><tortoisegit>","5","6","1","2019-09-05 03:33:13","17732296","3","2","4751173","","2019-09-05 03:33:13","2013-07-17 23:38:44",""
"22332280","Convert private key to PKCS#8 format in java","<p>I'm trying to get certificates and private keys from windows certificate store using MSCAPI provider, then i need to store them in a Java Keystore object, but i'm facing a problem of private keys format, the error says:
<code>java.security.KeyStoreException: Cannot get key bytes, not PKCS#8 encoded</code>
Here's my code:</p>

<pre><code>SunMSCAPI providerMSCAPI = new SunMSCAPI();
Security.addProvider(providerMSCAPI);
KeyStore ks = KeyStore.getInstance(""Windows-MY"");
ks.load(null, null);
PrivateKey privateKey = null;
X509Certificate cert = null;
cert = (X509Certificate) ks.getCertificate(""ALIAS"");
if (ks.isKeyEntry(""ALIAS"")) {
    privateKey = (PrivateKey) ks.getKey(""ALIAS"", null);
}
KeyStore newKs = null;
...
...
newKs .setKeyEntry(""pvKey"", privateKey , ""pwd"".toCharArray(), certifChain);
</code></pre>

<p>Also, the <code>privateKey.getEncoded()</code> returns null.</p>
","<p>I have exactly the same issue when programatically importing a pfx file into the windows certificate store and then attempting to read this certificate and key again later. I believe the answer lies in <a href=""http://www.oracle.com/technetwork/articles/javase/security-137537.html"" rel=""nofollow"">http://www.oracle.com/technetwork/articles/javase/security-137537.html</a> and I quote: ""...the resulting PKCS#12 keystore may not be imported into applications that use only a single password for the keystore and all its key entries"". Earlier in the document it also states: ""Note that keys produced by the SunMSCAPI provider are wrapper objects for the native handles. Thus, they may not be accepted by other providers and may behave somewhat differently than keys produced by pure-Java providers, such as SunJCE. In particular, the RSA private keys generated by the SunMSCAPI provider cannot be serialised"". Upon trying to read the private key results in null algorithm and null encoded data as you note above, though reading the certificate works fine. Alternatively you could save the PrivateKey in a separate RSA encrypted file instead of the windows certificate store or just work of the original pfx file instead of importing the pfx into the windows certificate store.</p>
","5334","<private-key><pkcs#8>","2","2","2","2018-06-01 07:26:12","22408526","1","","2642321","","2014-03-12 09:46:13","2014-03-11 17:34:33",""
"22332280","Convert private key to PKCS#8 format in java","<p>I'm trying to get certificates and private keys from windows certificate store using MSCAPI provider, then i need to store them in a Java Keystore object, but i'm facing a problem of private keys format, the error says:
<code>java.security.KeyStoreException: Cannot get key bytes, not PKCS#8 encoded</code>
Here's my code:</p>

<pre><code>SunMSCAPI providerMSCAPI = new SunMSCAPI();
Security.addProvider(providerMSCAPI);
KeyStore ks = KeyStore.getInstance(""Windows-MY"");
ks.load(null, null);
PrivateKey privateKey = null;
X509Certificate cert = null;
cert = (X509Certificate) ks.getCertificate(""ALIAS"");
if (ks.isKeyEntry(""ALIAS"")) {
    privateKey = (PrivateKey) ks.getKey(""ALIAS"", null);
}
KeyStore newKs = null;
...
...
newKs .setKeyEntry(""pvKey"", privateKey , ""pwd"".toCharArray(), certifChain);
</code></pre>

<p>Also, the <code>privateKey.getEncoded()</code> returns null.</p>
","<p>I use command such like:</p>

<pre><code>Runtime.getRuntime().exec(""openssl pkcs8 -topk8 -nocrypt -in ""+ privateKeyPath + "" -out "" + pkcs8PrivateKeyPath)
</code></pre>
","5334","<private-key><pkcs#8>","2","1","2","2018-06-01 07:26:12","22408526","1","","2642321","","2014-03-12 09:46:13","2014-03-11 17:34:33",""
"32739421","How to recover lost private key of instance of aws server?","<p>I have lost private key of my AWS instance.I searched the option in console panel.</p>
","<p>I'm afraid you might be out of luck:</p>

<blockquote>
  <p>When you launch an instance, you should specify the name of the key
  pair you plan to use to connect to the instance. If you don't specify
  the name of an existing key pair when you launch an instance, you
  won't be able to connect to the instance. When you connect to the
  instance, you must specify the private key that corresponds to the key
  pair you specified when you launched the instance. <strong>Amazon EC2 doesn't
  keep a copy of your private key; therefore, if you lose a private key,
  there is no way to recover it</strong>. If you lose the private key for an
  instance store-backed instance, you can't access the instance; you
  should terminate the instance and launch another instance using a new
  key pair. If you lose the private key for an EBS-backed Linux
  instance, you can regain access to your instance. For more
  information, see Connecting to Your Linux Instance if You Lose Your
  Private Key.</p>
</blockquote>

<p><a href=""http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html"" rel=""nofollow"">http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html</a></p>
","5282","<amazon-web-services><private-key><pem>","3","3","2","2016-12-17 10:19:48","32740009","2","2","","","","2015-09-23 12:18:44",""
"32739421","How to recover lost private key of instance of aws server?","<p>I have lost private key of my AWS instance.I searched the option in console panel.</p>
","<p><strong>Yes, you can't recover the old key. Still, you can generate a new key to access that machine</strong></p>

<p>When we loose private key, You can't login to that machine.</p>

<p>Please follow the below steps to recover the key.</p>

<p>Step 1) Detach your root volume from your machine using AWS console.<br>
Step 2) Launch a fresh EC2 instance(Not from your old machine AMI)<br>
Step 3) Attach your old volume to new EC2 machine<br>
Step 4) Now login to new ec2 machine and mount the old EBS volume<br>
Step 5) Now go to that partition then visit home directory inside that machine and go to .ssh folder.<br>
Step 6) Now generate a new private and public key. Then paste public key into authorized_keys file.<br>
Step 7) Once you done with above steps, detach that volume from this ec2 machine.<br>
Step 8) Now attach this volume to your old machine as root volume<br>
Step 9) Now try to login to your old machine with the newly generated key.</p>

<p><strong>Hope it helps !!</strong></p>
","5282","<amazon-web-services><private-key><pem>","3","2","2","2016-12-17 10:19:48","32740009","2","2","","","","2015-09-23 12:18:44",""
"6521156","Store and retrieve private key from Mac keychain programmatically","<p>In a Mac application, I have a requirement to store the private key sent from the server for logged in user in a secure way and retrieve it back whenever needed programmatically. I know that keychain is the best place to store the private key. Is there any sample code available to achieve this? </p>

<p>I am able to add the private key to the keychain using ""SecKeychainItemImport"" method of ""Security.framework"" but having issues retrieving back the private key from the keychain. I have tried using ""SecKeychainItemCopyAttributesAndData"" and ""SecKeychainItemCopyContent"" methods for getting private key back from the keychain. But no luck so far. </p>

<p>I have also read in blogs mentioning private key storage inside "".ssh"" hidden folder. But I feel that storing the private key inside the keychain provides one more level of security so that someone else can not have an easy access to the private key.</p>
","<p>Yes, the Keychain is what you'd use here. You want to read the documentation first, then look at Apple's sample code.</p>

<p><a href=""http://developer.apple.com/library/mac/#documentation/Security/Conceptual/keychainServConcepts/01introduction/introduction.html"" rel=""nofollow"">http://developer.apple.com/library/mac/#documentation/Security/Conceptual/keychainServConcepts/01introduction/introduction.html</a></p>

<p><a href=""http://developer.apple.com/library/ios/#samplecode/GenericKeychain/Introduction/Intro.html"" rel=""nofollow"">http://developer.apple.com/library/ios/#samplecode/GenericKeychain/Introduction/Intro.html</a></p>
","5259","<objective-c><macos><keychain><private-key>","6","0","2","2017-10-22 12:22:22","7941488","2","2","608639","","2017-10-22 12:22:22","2011-06-29 13:09:52",""
"6521156","Store and retrieve private key from Mac keychain programmatically","<p>In a Mac application, I have a requirement to store the private key sent from the server for logged in user in a secure way and retrieve it back whenever needed programmatically. I know that keychain is the best place to store the private key. Is there any sample code available to achieve this? </p>

<p>I am able to add the private key to the keychain using ""SecKeychainItemImport"" method of ""Security.framework"" but having issues retrieving back the private key from the keychain. I have tried using ""SecKeychainItemCopyAttributesAndData"" and ""SecKeychainItemCopyContent"" methods for getting private key back from the keychain. But no luck so far. </p>

<p>I have also read in blogs mentioning private key storage inside "".ssh"" hidden folder. But I feel that storing the private key inside the keychain provides one more level of security so that someone else can not have an easy access to the private key.</p>
","<p>One purpose of the Keychain is to keep private keys protected by not exposing their data to the application. To prevent accidentally exposing a private key, these items are flagged <code>CSSM_KEYATTR_EXTRACTABLE | CSSM_KEYATTR_SENSITIVE</code> by default; i.e., it is only possible to get their data using <code>SecKeychainItemExport</code>, and only in a passphrase-protected format.</p>

<p>There are APIs in the Security framework that encrypt/decrypt/sign/verify etc. data using a supplied key item without ever putting the raw key data in the application's address space. (These operations are normally done by a separate, privileged process.)</p>

<p>If for some reason you do need access to the private key's raw bits, you need to prepare for this at the time you import the private key to the keychain. You need to set <code>keyAttributes</code> to <code>CSSM_KEYATTR_EXTRACTABLE</code> (i.e., without the sensitive bit) in the <code>keyParams</code> parameter of <code>SecKeychainItemImport</code>.</p>
","5259","<objective-c><macos><keychain><private-key>","6","4","2","2017-10-22 12:22:22","7941488","2","2","608639","","2017-10-22 12:22:22","2011-06-29 13:09:52",""
"17657981","Read a Private Encrypted Key in Java","<p>I have the following piece of code:</p>

<pre><code>    PEMParser pemParser;
    File telexuskeys = new File(locationKey);
    if(telexuskeys.exists())
        pemParser = new PEMParser(new FileReader(telexuskeys));
    else{
        usage(ops);
        throw new FileNotFoundException(""The key file (company's certificate) doesn't exist!"");
    }

    System.out.println(""Loading company's certificate"");

    Object object = pemParser.readObject();
    Object object2 = pemParser.readObject();

    PEMDecryptorProvider decProv = new JcePEMDecryptorProviderBuilder().build(passwordPem.toCharArray());
    JcaPEMKeyConverter converter = new JcaPEMKeyConverter().setProvider(""BC""); 

    byte[] keyBytes = PrivateKeyInfo.getInstance(object2).getEncoded();
    PKCS8EncodedKeySpec spec = new PKCS8EncodedKeySpec(keyBytes);
    KeyFactory kf = KeyFactory.getInstance(""RSA"", ""BC"");        
    PrivateKey pk = kf.generatePrivate(spec);
</code></pre>

<p>My pem file just have the certificate and the private key. I used to be able to read the file and obtain the private key but now the file is protected (encrypted) with a password. What is the instruction that I'm still missing. I know I need to use the PEMDecryptorProvider and the JcaPEMKeyConverter  objects in order to obtain it but I haven't found the correct combination.</p>
","<p>The following code does the work for me. (Using the bcpkix and bcprov libs from Bouncy Castle).</p>

<pre><code>private PrivateKey readPrivateKey(String privateKeyPath, String keyPassword) throws IOException {

    FileReader fileReader = new FileReader(privateKeyPath);
    PEMParser keyReader = new PEMParser(fileReader);

    JcaPEMKeyConverter converter = new JcaPEMKeyConverter();
    PEMDecryptorProvider decryptionProv = new JcePEMDecryptorProviderBuilder().build(keyPassword.toCharArray());

    Object keyPair = keyReader.readObject();
    PrivateKeyInfo keyInfo;

    if (keyPair instanceof PEMEncryptedKeyPair) {
        PEMKeyPair decryptedKeyPair = ((PEMEncryptedKeyPair) keyPair).decryptKeyPair(decryptionProv);
        keyInfo = decryptedKeyPair.getPrivateKeyInfo();
    } else {
        keyInfo = ((PEMKeyPair) keyPair).getPrivateKeyInfo();
    }

    keyReader.close();
    return converter.getPrivateKey(keyInfo);
</code></pre>
","5163","<java><encryption><private-key>","6","6","1","2013-11-20 08:54:14","","0","2","474189","","2013-07-16 08:25:23","2013-07-15 15:29:36",""
"28569270","How can I know if a .pem file contains public or private key?","<p>I have a .pem file (base64-encoded cryptography information). What OpenSSL command-line should I use to detect whether it contains a public key or a private key?</p>

<p>As explained in <a href=""https://stackoverflow.com/q/7539625/324969"">this StackOverflow question</a>, a .pem can contain both.</p>

<p>Since the contents of the file are juste garbled base64, when sending a .pem certificate to some other machine, I would like to make sure I'm exporting the public key and not giving out my private key.</p>
","<blockquote>
  <p>I have a .pem file (base64-encoded cryptography information). What OpenSSL command-line should I use to detect whether it contains a public key or a private key?</p>
</blockquote>

<p>In general, you have to inspect the the first line of the PEM file to determine what is present.</p>

<p>OpenSSL can detect a subset of available encoded things (for lack of a better term). You can see the list of what OpenSSL can decode by examining <code>&lt;openssl src&gt;/crypto/pem/pem.h</code>. From the file:</p>

<pre><code>#define PEM_STRING_X509_OLD ""X509 CERTIFICATE""
#define PEM_STRING_X509     ""CERTIFICATE""
#define PEM_STRING_X509_PAIR    ""CERTIFICATE PAIR""
#define PEM_STRING_X509_TRUSTED ""TRUSTED CERTIFICATE""
#define PEM_STRING_X509_REQ_OLD ""NEW CERTIFICATE REQUEST""
#define PEM_STRING_X509_REQ ""CERTIFICATE REQUEST""
#define PEM_STRING_X509_CRL ""X509 CRL""
#define PEM_STRING_EVP_PKEY ""ANY PRIVATE KEY""
#define PEM_STRING_PUBLIC   ""PUBLIC KEY""
#define PEM_STRING_RSA      ""RSA PRIVATE KEY""
#define PEM_STRING_RSA_PUBLIC   ""RSA PUBLIC KEY""
#define PEM_STRING_DSA      ""DSA PRIVATE KEY""
#define PEM_STRING_DSA_PUBLIC   ""DSA PUBLIC KEY""
#define PEM_STRING_PKCS7    ""PKCS7""
#define PEM_STRING_PKCS7_SIGNED ""PKCS #7 SIGNED DATA""
#define PEM_STRING_PKCS8    ""ENCRYPTED PRIVATE KEY""
#define PEM_STRING_PKCS8INF ""PRIVATE KEY""
#define PEM_STRING_DHPARAMS ""DH PARAMETERS""
#define PEM_STRING_SSL_SESSION  ""SSL SESSION PARAMETERS""
#define PEM_STRING_DSAPARAMS    ""DSA PARAMETERS""
#define PEM_STRING_ECDSA_PUBLIC ""ECDSA PUBLIC KEY""
#define PEM_STRING_ECPARAMETERS ""EC PARAMETERS""
#define PEM_STRING_ECPRIVATEKEY ""EC PRIVATE KEY""
#define PEM_STRING_PARAMETERS   ""PARAMETERS""
#define PEM_STRING_CMS      ""CMS""
</code></pre>

<p>Some things will be more difficult than others. For example, its obvious what a <code>RSA PUBLIC KEY</code> is, but its not so obvious what a <code>PUBLIC KEY</code> is. In this case, you do one of two things. First, you ASN.1/DER decode the thing and then look ups its OID if available. Second, you try and load into a data structure that you expect the thing to be.</p>

<p>As an example of the second strategy, you would attempt to load a PEM blob into a RSA private key with <code>PEM_read_bio_RSAPrivateKey</code>. If it succeeds, then its a RSA private key. If its fails, then it may be a damaged RSA private key, or it may be an EC private key, or it may not be a PEM blob.</p>

<hr>

<p>In 2006, a request was made to standardize the names of the things with the PKIX working group. It fell on deaf ears within the IETF. See <a href=""http://www.ietf.org/mail-archive/web/pkix/current/msg03563.html"" rel=""nofollow"">PEM file format rfc draft request</a>.</p>
","5105","<openssl><private-key><public-key><pem>","8","4","2","2017-03-03 08:11:21","","0","","-1","","2017-05-23 12:09:14","2015-02-17 19:12:14",""
"28569270","How can I know if a .pem file contains public or private key?","<p>I have a .pem file (base64-encoded cryptography information). What OpenSSL command-line should I use to detect whether it contains a public key or a private key?</p>

<p>As explained in <a href=""https://stackoverflow.com/q/7539625/324969"">this StackOverflow question</a>, a .pem can contain both.</p>

<p>Since the contents of the file are juste garbled base64, when sending a .pem certificate to some other machine, I would like to make sure I'm exporting the public key and not giving out my private key.</p>
","<p>As a practical approximation that should catch most (all?) human mistakes I would recommend just <a href=""https://linux.die.net/man/1/file"" rel=""nofollow noreferrer"">file</a> and <a href=""https://linux.die.net/man/1/grep"" rel=""nofollow noreferrer"">grep</a>:</p>

<pre><code>(file $KEYFILE | grep -i private &gt;/dev/null) &amp;&amp; echo Private || echo Public-or-unknown
</code></pre>

<p>To screen some key material before it goes out:</p>

<pre><code> for f in *; do (file $f | grep -i private &gt;/dev/null) &amp;&amp; file $f; done
</code></pre>

<p>Empty output = hopefully no secrets, can proceed.</p>
","5105","<openssl><private-key><public-key><pem>","8","2","2","2017-03-03 08:11:21","","0","","-1","","2017-05-23 12:09:14","2015-02-17 19:12:14",""
"18725033","push using multiple account / multiple identity on github / bitbucket","<p>I have multiple accounts on github / bitbucket and one unique private-public key pair for each account. The problem occurs when I need to push to the repos created by the different accounts, I will almost certainly get access denied unless I am pushing into the default account (the account that I first created).</p>

<p>Is there a way to switch to different credentials before pushing? I am using Source Tree on Macintosh machine. I'd prefer not to rename <code>~/.ssh/id_rsa</code> manually whenever I need to push.</p>

<p>Thank you very much for your input!</p>
","<p>You can use <code>~/.ssh/config</code> as explained here:</p>

<p><a href=""https://confluence.atlassian.com/pages/viewpage.action?pageId=271943168"" rel=""noreferrer"">https://confluence.atlassian.com/pages/viewpage.action?pageId=271943168</a></p>

<pre><code>Host workdid
 HostName bitbucket.org
 IdentityFile ~/.ssh/workdid
Host personalid
 HostName bitbucket.org
 IdentityFile ~/.ssh/personalid
</code></pre>

<p>Otherwise, if you just want to ""switch account"" before doing the pushing, you can use <code>ssh-add</code>. Open the <code>Terminal.app</code>, run <code>ssh-agent</code> and run <code>ssh-add ~/.ssh/path_to_your_account_id_rsa</code>, then do the push.
After pushing, you can switch back to your default account by running: <code>ssh-add ~/.ssh/id_rsa</code>.</p>

<p>Hope it helps!</p>
","4873","<git><github><ssh><private-key>","6","6","3","2017-09-04 12:12:07","18725082","1","6","","","","2013-09-10 17:09:58",""
"18725033","push using multiple account / multiple identity on github / bitbucket","<p>I have multiple accounts on github / bitbucket and one unique private-public key pair for each account. The problem occurs when I need to push to the repos created by the different accounts, I will almost certainly get access denied unless I am pushing into the default account (the account that I first created).</p>

<p>Is there a way to switch to different credentials before pushing? I am using Source Tree on Macintosh machine. I'd prefer not to rename <code>~/.ssh/id_rsa</code> manually whenever I need to push.</p>

<p>Thank you very much for your input!</p>
","<p>On a different note, if there is one default account you usually use to pull/push, and you  occasionally push in changes to your other accounts, you can add a remote referring to the <code>https</code> url for other account to your <code>.git/config</code> file, though that ways you will have to enter your github passwords everytime and only the default github account (corresponding to which keys are enabled) will use ssh keys.</p>

<p>Something like the following</p>

<pre><code>[remote ""origin""]
    url = git@github.org:account1/repository.git 
    #This one uses the default ssh keys

[remote ""account2""]
    url = https://github.com/account2/repository.git 
    #This will need password while pushing/pulling
[remote ""account3""]
    url = https://github.com/account3/repository.git 
    #This will need password while pushing/pulling
</code></pre>

<p>Then for normal operation, you can push/pull using ssh keys</p>

<pre><code>git pull origin branch_name
git push origin branch_name
</code></pre>

<p>And for pushing to the other account repos, you can push via <code>https</code> with password</p>

<pre><code>git push account2 branch_name
git push account3 branch_name
</code></pre>
","4873","<git><github><ssh><private-key>","6","4","3","2017-09-04 12:12:07","18725082","1","6","","","","2013-09-10 17:09:58",""
"18725033","push using multiple account / multiple identity on github / bitbucket","<p>I have multiple accounts on github / bitbucket and one unique private-public key pair for each account. The problem occurs when I need to push to the repos created by the different accounts, I will almost certainly get access denied unless I am pushing into the default account (the account that I first created).</p>

<p>Is there a way to switch to different credentials before pushing? I am using Source Tree on Macintosh machine. I'd prefer not to rename <code>~/.ssh/id_rsa</code> manually whenever I need to push.</p>

<p>Thank you very much for your input!</p>
","<p>For BitBucket, I found the way that worked best for me was to a) add the key to my <code>~/.ssh/config</code>, and also b) change the local config of my project. </p>

<p>For example:</p>

<pre><code># ~/.ssh/config
Host work
  HostName bitbucket.org
  IdentityFile ~/.ssh/work

Host personal
  HostName bitbucket.org
  IdentityFile ~/.ssh/personal
</code></pre>

<p>And then in my project's local git config, I changed the host part of the remote URL to the appropriate host. For example, in the following file:</p>

<pre><code># ~/repos/myworkproject/.git/config
# or you can access this file by going into the repo and running `git config -e`
...snip...
[remote ""origin""]
  fetch = ...
  url = git@bitbucket.org:mybitbucketusername/myworkproject.git
</code></pre>

<p>Change the url line to: </p>

<pre><code>url = git@work:mybitbucketusername/myworkproject.git
</code></pre>
","4873","<git><github><ssh><private-key>","6","3","3","2017-09-04 12:12:07","18725082","1","6","","","","2013-09-10 17:09:58",""
"14555957","Private key PEM headers","<p>I have a private key in DER format. I trying to convert it to PEM format. While converting I do </p>

<pre><code>   -----BEGIN PRIVATE KEY-----

        Base64.encode(privateKey,.getEncoded());

   -----END PRIVATE KEY-----
</code></pre>

<p>But in some example I see, below lines right after the header.</p>

<pre><code>   Proc-Type: 4,ENCRYPTED
   DEK-Info: DES-EDE3-CBC,F2D4E6438DBD4EA8
</code></pre>

<p>Do they have any significance ? Is that also should be added while converting from DER to PEM ?</p>
","<p>These headers are significant if you are encrypting the PEM file.
First one tells if the file is encrypted, the second one gives the encryption algorithm (as you can see) and initial vector.</p>
","4810","<ssl><openssl><ssl-certificate><private-key>","0","0","2","2013-02-14 09:16:09","","1","","","","","2013-01-28 05:29:08",""
"14555957","Private key PEM headers","<p>I have a private key in DER format. I trying to convert it to PEM format. While converting I do </p>

<pre><code>   -----BEGIN PRIVATE KEY-----

        Base64.encode(privateKey,.getEncoded());

   -----END PRIVATE KEY-----
</code></pre>

<p>But in some example I see, below lines right after the header.</p>

<pre><code>   Proc-Type: 4,ENCRYPTED
   DEK-Info: DES-EDE3-CBC,F2D4E6438DBD4EA8
</code></pre>

<p>Do they have any significance ? Is that also should be added while converting from DER to PEM ?</p>
","<p>Typically keeping a private key unencrypted is considered a bad practice in terms of security.</p>

<p>Basically the headers indicate that the private key base64 data is encrypted with a password. So any program (for e.g. a web server) trying to read the private key would know that the private key is password protected and it needs the password first to decrypt the private key.</p>

<p>If these headers are not there, the program would assume that the base64 key data is in plain text would directly use it.  </p>

<p>If you do not use a password to protect the key in pem format, the pem might look like this (without the headers):</p>

<blockquote>
  <p>-----BEGIN RSA PRIVATE KEY----- MIICWwIBAAKBgQDL9R9pUyXOnHybNhm9FqhNjUX1W2HEt7bCGQIo0FvT6UyyL7TT
  -----END RSA PRIVATE KEY-----</p>
</blockquote>
","4810","<ssl><openssl><ssl-certificate><private-key>","0","1","2","2013-02-14 09:16:09","","1","","","","","2013-01-28 05:29:08",""
"3753539","How do I force makecert to output the private key to a file (not the Crypto store)?","<p>I want to generate a key pair for use within my applications, but exporting them manually from the mmc is a pain.</p>

<p>How can I use commandline parameters, or otherwise end up with a private certificate that resides on the hard drive, suitable for later distribution?</p>
","<p>Have a look at this article: <a href=""http://msdn.microsoft.com/en-us/library/bfsktky3%28VS.80%29.aspx"" rel=""nofollow noreferrer"">http://msdn.microsoft.com/en-us/library/bfsktky3%28VS.80%29.aspx</a></p>

<p>Specifically, use the <code>-sv</code> option to save the private key to a file.</p>
","4785","<certificate><ssl-certificate><cryptoapi><private-key><makecert>","3","2","1","2010-09-20 16:49:52","3753604","0","","","","","2010-09-20 16:43:16",""
"8862987","How to operate with X509 certificates in .NET code","<p>I have some code that needs to work with X509 Certificate information. I have downloaded a sample that does this:</p>

<pre><code>const string CertWithoutPrivateKey = ""MII...."";
const string CertWithPrivateKey = ""MII..."";

public static SecurityToken GetSigningToken(bool includePrivateKey)
{
    X509Certificate2 cert = null;
    if (includePrivateKey)
    {
        cert = new X509Certificate2(
            Convert.FromBase64String(CertWithPrivateKey), 
            ""pw"", X509KeyStorageFlags.PersistKeySet);
    }
    else
    {
        cert = new X509Certificate2(
            Convert.FromBase64String(CertWithoutPrivateKey));
    }
    return cert;
}
</code></pre>

<p>The code needs to be able to get the cert with the private key. The Saml2AuthenticationModule (from the WIF Extension for the SAML 2.0 Protocol) relies on this private key to decrypt information sent from a SAML Identity Provider. </p>

<p>I don't know much about certificates or encryption, but it seems to me that hard-coding the certificate into a class is not secure. </p>

<p><strong>So, how should my code go about retrieving the cert with private key?</strong> Afaik, this code is only run one time at app startup (so probably also after an app pool recycle). </p>

<p>I could:</p>

<ol>
<li>Store the cert as an appSetting in config file. As long as appSettings are config encrypted, is this secure?</li>
<li>Store the cert in a database. </li>
<li>Store the cert as a file in bin/App_Data. Afaik this means it could not be read over the web, but would be in plain view to anyone who can access the host server. Imo if someone can get into my server, letting them read this cert is probably the least of my worries. </li>
</ol>

<p>Are there any other options? What is most appropriate in this case?</p>
","<p>I'm not sure how WIF does it (you could probably use Reflector to see the internals of how it interacts with the certificate store), but it sounds like you are using WIF in an application hosted in IIS.  If that's the case, <strong>WIF should take care of all the certificate interactions for you</strong>.  You'll just have to make sure you have the following things set up:</p>

<ol>
<li>The <a href=""http://msdn.microsoft.com/en-us/magazine/ee335707.aspx"" rel=""nofollow noreferrer"">identity model configuration section</a> set up with references to the thumbprint of the certificate you are using to either encrypt or verify the digital signature of the token.</li>
<li>The <a href=""http://www.digicert.com/ssl-certificate-installation-microsoft-iis-7.htm"" rel=""nofollow noreferrer"">certificate needs to be registered in IIS</a></li>
<li>The application pool's hosting identity needs to have permission to ""read"" the certificate to extract the private key information (see the accepted answer <a href=""https://stackoverflow.com/questions/2609859/how-to-give-asp-net-access-to-a-private-key-in-a-certificate-in-the-certificate"">here</a>)</li>
</ol>
","4772","<asp.net><asp.net-mvc><security><x509certificate><private-key>","1","1","2","2012-01-14 16:53:53","8863478","0","","","","","2012-01-14 14:55:34",""
"8862987","How to operate with X509 certificates in .NET code","<p>I have some code that needs to work with X509 Certificate information. I have downloaded a sample that does this:</p>

<pre><code>const string CertWithoutPrivateKey = ""MII...."";
const string CertWithPrivateKey = ""MII..."";

public static SecurityToken GetSigningToken(bool includePrivateKey)
{
    X509Certificate2 cert = null;
    if (includePrivateKey)
    {
        cert = new X509Certificate2(
            Convert.FromBase64String(CertWithPrivateKey), 
            ""pw"", X509KeyStorageFlags.PersistKeySet);
    }
    else
    {
        cert = new X509Certificate2(
            Convert.FromBase64String(CertWithoutPrivateKey));
    }
    return cert;
}
</code></pre>

<p>The code needs to be able to get the cert with the private key. The Saml2AuthenticationModule (from the WIF Extension for the SAML 2.0 Protocol) relies on this private key to decrypt information sent from a SAML Identity Provider. </p>

<p>I don't know much about certificates or encryption, but it seems to me that hard-coding the certificate into a class is not secure. </p>

<p><strong>So, how should my code go about retrieving the cert with private key?</strong> Afaik, this code is only run one time at app startup (so probably also after an app pool recycle). </p>

<p>I could:</p>

<ol>
<li>Store the cert as an appSetting in config file. As long as appSettings are config encrypted, is this secure?</li>
<li>Store the cert in a database. </li>
<li>Store the cert as a file in bin/App_Data. Afaik this means it could not be read over the web, but would be in plain view to anyone who can access the host server. Imo if someone can get into my server, letting them read this cert is probably the least of my worries. </li>
</ol>

<p>Are there any other options? What is most appropriate in this case?</p>
","<p>A certificate with or without private key can be save to X509 store of a user or the computer. This already has build-in Windows security that should be sufficient. You can use <code>mmc</code> with Certificates snap-in to add certificates to the store and manage them. </p>

<p>A reference to the certificate, for example, its name or thumbnail, can saved to the config file and used to retrieve the certificate. The retrieval may look like the following: </p>

<pre><code>public static X509Certificate2 GetCertificate(string name)
{
    try
    {
        X509Store store = new X509Store (StoreLocation.LocalMachine);
        X509Certificate2Collection collection = store.Certificates;
        foreach (X509Certificate2 x509 in collection)
        {
            if (x509.FriendlyName.Equals(name)) 
            {
                return x509;
            }
        }
    }
    finally
    {
        store.Close();
    }
    return null;
}
</code></pre>

<p>Using <code>Find</code> on the collection is another (and cleaner) way to search certificates. </p>
","4772","<asp.net><asp.net-mvc><security><x509certificate><private-key>","1","2","2","2012-01-14 16:53:53","8863478","0","","","","","2012-01-14 14:55:34",""
"6376646","Encrypt / Decrypt with Private key","<p>I would like to implement some security in some of the Flash/PHP applications that I have.</p>

<p>I have some Flash apps that communicate with PHP files, and the PHP is sending the data as get string ( e.g.: <code>name=John&amp;sname=Doe&amp;age=24&amp;balance=12.4</code> ). Instead of all these variables, I would like it to send a single variable ( e.g.: <code>flashvar=jr9afgaw9-fg90agfawf7gw</code> ) that would contain those values, so then Flash would decrypt the string and get the <em>real and useful</em> vars.</p>

<p>I want to encrypt this using a private key and use the same private key to decrypt this inside Flash. If someone would want to decode the message PHP sends, he would have to decompile the flash file and find the private key I'm using in Flash to decode the message and then decode it.</p>

<p>The reason I posted here is because I want to use an encryption algorithm that allows only the use of a private key for encryption/decryption.</p>

<p>I'm new in the cryptography field and I'd like some suggestions for this. </p>

<p>Thank you!</p>
","<p>A ""shared private key"" is refered to as a symmetric key. The standard symmetric algorithm in use today is <a href=""http://en.wikipedia.org/wiki/Advanced_Encryption_Standard"" rel=""nofollow"">AES</a>. I have no idea if php, or flash, have the capability of using AES (Google does), but if they do, you could hard code an AES key in your code and use it to encrypt and decrypt data. However, hard coding a key is very bad cryptography and is little more than obfuscation.</p>

<p>Another thing to keep in mind is the cipher mode you are using. Cipher Block Chaining (CBC) requires the use of an initialization vector (sort of like a salt for a hash), so two of the same values encrypted with the same key, but different IV, will result in differen cipher text. ECB does not need an initialization vector, but is less secure. For your needs I would go with ECB so you dont have to worry about an IV.</p>

<p>Google is a very good way of finding information, you should use it.</p>
","4712","<php><flash><security><encryption><private-key>","1","3","3","2011-06-16 20:32:26","6376792","2","2","492901","","2011-06-16 18:33:26","2011-06-16 18:18:18",""
"6376646","Encrypt / Decrypt with Private key","<p>I would like to implement some security in some of the Flash/PHP applications that I have.</p>

<p>I have some Flash apps that communicate with PHP files, and the PHP is sending the data as get string ( e.g.: <code>name=John&amp;sname=Doe&amp;age=24&amp;balance=12.4</code> ). Instead of all these variables, I would like it to send a single variable ( e.g.: <code>flashvar=jr9afgaw9-fg90agfawf7gw</code> ) that would contain those values, so then Flash would decrypt the string and get the <em>real and useful</em> vars.</p>

<p>I want to encrypt this using a private key and use the same private key to decrypt this inside Flash. If someone would want to decode the message PHP sends, he would have to decompile the flash file and find the private key I'm using in Flash to decode the message and then decode it.</p>

<p>The reason I posted here is because I want to use an encryption algorithm that allows only the use of a private key for encryption/decryption.</p>

<p>I'm new in the cryptography field and I'd like some suggestions for this. </p>

<p>Thank you!</p>
","<p>After a quick search, I saw that ActionScript 3 has support for encryption throught <a href=""http://ascrypt3.riaforge.org/"" rel=""nofollow"">ASCrypt3</a> library. According to the website, AES Rijndael is supported.</p>

<p>Rijndael is also supported in PHP using the <a href=""http://php.net/mcrypt"" rel=""nofollow"">mcrypt</a> extension. Here's a pretty good example <a href=""http://php.net/function.mcrypt-encrypt.php"" rel=""nofollow"">taken from the manual</a>:</p>

<pre><code>$iv_size = mcrypt_get_iv_size(MCRYPT_RIJNDAEL_256, MCRYPT_MODE_ECB);
$iv = mcrypt_create_iv($iv_size, MCRYPT_RAND);
$key = ""This is a very secret key"";
$text = ""Meet me at 11 o'clock behind the monument."";
echo strlen($text) . ""\n"";

$crypttext = mcrypt_encrypt(MCRYPT_RIJNDAEL_256, $key, $text, MCRYPT_MODE_ECB, $iv);
echo strlen($crypttext) . ""\n"";
</code></pre>
","4712","<php><flash><security><encryption><private-key>","1","1","3","2011-06-16 20:32:26","6376792","2","2","492901","","2011-06-16 18:33:26","2011-06-16 18:18:18",""
"6376646","Encrypt / Decrypt with Private key","<p>I would like to implement some security in some of the Flash/PHP applications that I have.</p>

<p>I have some Flash apps that communicate with PHP files, and the PHP is sending the data as get string ( e.g.: <code>name=John&amp;sname=Doe&amp;age=24&amp;balance=12.4</code> ). Instead of all these variables, I would like it to send a single variable ( e.g.: <code>flashvar=jr9afgaw9-fg90agfawf7gw</code> ) that would contain those values, so then Flash would decrypt the string and get the <em>real and useful</em> vars.</p>

<p>I want to encrypt this using a private key and use the same private key to decrypt this inside Flash. If someone would want to decode the message PHP sends, he would have to decompile the flash file and find the private key I'm using in Flash to decode the message and then decode it.</p>

<p>The reason I posted here is because I want to use an encryption algorithm that allows only the use of a private key for encryption/decryption.</p>

<p>I'm new in the cryptography field and I'd like some suggestions for this. </p>

<p>Thank you!</p>
","<p>If You want to encrypt data I would go with the <a href=""http://code.google.com/p/as3crypto/"" rel=""nofollow"">ASCrypt3o</a> library.<BR/>
It works very well and supports multiple types of encryption.<br/>
You can see a demo of it <a href=""http://crypto.hurlant.com/demo/"" rel=""nofollow"">here</a> click on the secret key tab.</p>
","4712","<php><flash><security><encryption><private-key>","1","0","3","2011-06-16 20:32:26","6376792","2","2","492901","","2011-06-16 18:33:26","2011-06-16 18:18:18",""
"43837362","KeyVault generated certificate with exportable private key","<p>I'm attempting to create a self signed certificate <em>in</em> KeyVault using the ""Self"" issuer.</p>

<pre><code>$policy = New-AzureKeyVaultCertificatePolicy -SubjectName ""CN=$($certificateName)"" -IssuerName ""Self"" -ValidityInMonths 12 

$policy.Exportable = $true

Add-AzureKeyVaultCertificate -VaultName $vaultName -Name $certificateName -CertificatePolicy $policy
</code></pre>

<p>However, when getting the certificate back it doesn't appear to have a private key.</p>

<p>Creating certificates directly in KeyVault doesn't seem hugely covered online, after digging into the rest API documentation and source code for the powershell cmdlets, I'm stumped.</p>

<p>I'm hoping it's something simple I've missed, as I wish to avoid creating the certificate locally..</p>
","<p>If you'd like to retrieve your certificate along with its private key, then you can export it to a PFX file (with an empty password) on your disk via:</p>

<pre><code>$vaultName = ""my-vault-name""
$certificateName = ""my-cert-name""
$pfxPath = [Environment]::GetFolderPath(""Desktop"") + ""\$certificateName.pfx""

$pfxSecret = Get-AzureKeyVaultSecret -VaultName $vaultName -Name $certificateName
$pfxUnprotectedBytes = [Convert]::FromBase64String($pfxSecret.SecretValueText)
[IO.File]::WriteAllBytes($pfxPath, $pfxUnprotectedBytes)
</code></pre>

<p>If you'd like to view just the private key itself in-memory without writing to disk, then try:</p>

<pre><code>$vaultName = ""my-vault-name""
$certificateName = ""my-cert-name""
$pfxPath = [Environment]::GetFolderPath(""Desktop"") + ""\$certificateName.pfx""

$pfxSecret = Get-AzureKeyVaultSecret -VaultName $vaultName -Name $certificateName
$pfxUnprotectedBytes = [Convert]::FromBase64String($pfxSecret.SecretValueText)
$pfx = New-Object Security.Cryptography.X509Certificates.X509Certificate2
$pfx.Import($pfxUnprotectedBytes, $null, [Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable)
$pfx.PrivateKey.ExportParameters($true)
</code></pre>

<p>which will show the private parameters in addition to the exponent and modulus.</p>

<p>If you'd like to protect the PFX file on disk with your own password (as per the ""Retrieve pfx file &amp; add password back"" instructions in <a href=""https://blogs.technet.microsoft.com/kv/2016/09/26/get-started-with-azure-key-vault-certificates/"" rel=""noreferrer"">this blog post</a>), then try:</p>

<pre><code>$vaultName = ""my-vault-name""
$certificateName = ""my-cert-name""
$pfxPath = [Environment]::GetFolderPath(""Desktop"") + ""\$certificateName.pfx""
$password = ""my-password""

$pfxSecret = Get-AzureKeyVaultSecret -VaultName $vaultName -Name $certificateName
$pfxUnprotectedBytes = [Convert]::FromBase64String($pfxSecret.SecretValueText)
$pfx = New-Object Security.Cryptography.X509Certificates.X509Certificate2
$pfx.Import($pfxUnprotectedBytes, $null, [Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable)
$pfxProtectedBytes = $pfx.Export([Security.Cryptography.X509Certificates.X509ContentType]::Pkcs12, $password)
[IO.File]::WriteAllBytes($pfxPath, $pfxProtectedBytes)
</code></pre>

<hr>

<p>As mentioned in the REST API docs <a href=""https://docs.microsoft.com/en-us/rest/api/keyvault/certificate-scenarios#certificates-are-complex-objects"" rel=""noreferrer"">here</a> and <a href=""https://docs.microsoft.com/en-us/rest/api/keyvault/about-keys--secrets-and-certificates#BKMK_CompositionOfCertificate"" rel=""noreferrer"">here</a>, Azure Key Vault (AKV) represents a given X.509 certificate via three interrelated resources: an AKV-certificate, an AKV-key, and an AKV-secret. All three will share the same name and the same version - to verify this, examine the <code>Id</code>, <code>KeyId</code>, and <code>SecretId</code> properties in the response from <code>Get-AzureKeyVaultCertificate</code>.</p>

<p>Each of these 3 resources provide a different perspective for viewing a given X.509 cert:</p>

<ul>
<li>The AKV-certificate provides the <strong>public key and cert metadata</strong> of the X.509 certificate. It contains the public key's modulus and exponent (<code>n</code> and <code>e</code>), as well as other cert metadata (thumbprint, expiry date, subject name, and so on). In PowerShell, you can obtain this via:</li>
</ul>

<pre class=""lang-ps prettyprint-override""><code>(Get-AzureKeyVaultCertificate -VaultName $vaultName -Name $certificateName).Certificate
</code></pre>

<ul>
<li>The AKV-key provides the <strong>private key</strong> of the X.509 certificate. It can be useful for performing cryptographic operations such as signing if the corresponding certificate was marked as non-exportable. In PowerShell, you can only obtain <strong>the public portion of this private key</strong> via:</li>
</ul>

<pre class=""lang-ps prettyprint-override""><code>(Get-AzureKeyVaultKey -VaultName $vaultName -Name $certificateName).Key
</code></pre>

<ul>
<li>The AKV-secret provides a way to <strong>export the full X.509 certificate</strong>, including its private key (if its policy allows for private key exporting). As demonstrated above, the current base64-encoded certificate can be obtained in PowerShell via:</li>
</ul>

<pre class=""lang-ps prettyprint-override""><code>(Get-AzureKeyVaultSecret -VaultName $vaultName -Name $certificateName).SecretValueText
</code></pre>
","4698","<powershell><x509><private-key><azure-powershell><azure-keyvault>","13","29","1","2017-07-12 23:40:12","43839241","0","6","","","","2017-05-07 22:27:14",""
"13321553","parse.com security","<p>Recently I discovered how useful and easy <a href=""http://parse.com"">parse.com</a> is.
It really speeds up the development and gives you an off-the-shelf database to store all the data coming from your web/mobile app.</p>

<p>But how secure is it? From what I understand, you have to embed your app private key in the code, thus granting access to the data.</p>

<p>But what if someone is able to recover the key from your app? I tried it myself.  It took me 5 minutes to find the private key from a standard APK, and there is also the possibility to build a web app with the private key hard-coded in your <a href=""https://github.com/ParsePlatform/Todo/blob/master/js/todos.js"">javascript source</a> where pretty much anyone can see it.</p>

<p>The only way to secure the data I've found are ACLs (<a href=""https://www.parse.com/docs/data"">https://www.parse.com/docs/data</a>), but this still means that anyone may be able to tamper with writable data.</p>

<p>Can anyone enlighten me, please?</p>
","<p>As with any backend server, you have to guard against potentially malicious clients.
  Parse has several levels of security to help you with that.</p>

<p>The first step is <a href=""https://parse.com/docs/data#security"" rel=""noreferrer"">ACLs</a>, as you said.  You can also change <a href=""https://parse.com/docs/data#security"" rel=""noreferrer"">permissions</a> in the Data Browser to disable unauthorized clients from making new classes or adding rows or columns to existing classes.</p>

<p>If that level of security doesn't satisfy you, you can proxy your data access through <a href=""https://parse.com/docs/cloud_code_guide"" rel=""noreferrer"">Cloud Functions</a>.  This is like creating a virtual application server to provide a layer of access control between your clients and your backend data store.</p>
","4693","<security><private-key><parse-platform>","23","18","4","2015-12-11 17:19:16","13335151","1","9","4539281","","2015-02-11 05:30:56","2012-11-10 11:20:10",""
"13321553","parse.com security","<p>Recently I discovered how useful and easy <a href=""http://parse.com"">parse.com</a> is.
It really speeds up the development and gives you an off-the-shelf database to store all the data coming from your web/mobile app.</p>

<p>But how secure is it? From what I understand, you have to embed your app private key in the code, thus granting access to the data.</p>

<p>But what if someone is able to recover the key from your app? I tried it myself.  It took me 5 minutes to find the private key from a standard APK, and there is also the possibility to build a web app with the private key hard-coded in your <a href=""https://github.com/ParsePlatform/Todo/blob/master/js/todos.js"">javascript source</a> where pretty much anyone can see it.</p>

<p>The only way to secure the data I've found are ACLs (<a href=""https://www.parse.com/docs/data"">https://www.parse.com/docs/data</a>), but this still means that anyone may be able to tamper with writable data.</p>

<p>Can anyone enlighten me, please?</p>
","<p>I've taken the following approach in the case where I just needed to expose a small view of the user data to a web app.</p>

<p>a. Create a secondary object which contains a subset of the secure objects fields.</p>

<p>b. Using ACLs, make the secure object only accessible from an appropriate login</p>

<p>c. Make the secondary object public read</p>

<p>d. Write a trigger to keep the secondary object synchronised with updates to the primary.</p>

<p>I also use cloud functions most of the time but this technique is useful when you need some flexibility and may be simpler than cloud functions if the secondary object is a view over multiple secure objects.</p>
","4693","<security><private-key><parse-platform>","23","3","4","2015-12-11 17:19:16","13335151","1","9","4539281","","2015-02-11 05:30:56","2012-11-10 11:20:10",""
"13321553","parse.com security","<p>Recently I discovered how useful and easy <a href=""http://parse.com"">parse.com</a> is.
It really speeds up the development and gives you an off-the-shelf database to store all the data coming from your web/mobile app.</p>

<p>But how secure is it? From what I understand, you have to embed your app private key in the code, thus granting access to the data.</p>

<p>But what if someone is able to recover the key from your app? I tried it myself.  It took me 5 minutes to find the private key from a standard APK, and there is also the possibility to build a web app with the private key hard-coded in your <a href=""https://github.com/ParsePlatform/Todo/blob/master/js/todos.js"">javascript source</a> where pretty much anyone can see it.</p>

<p>The only way to secure the data I've found are ACLs (<a href=""https://www.parse.com/docs/data"">https://www.parse.com/docs/data</a>), but this still means that anyone may be able to tamper with writable data.</p>

<p>Can anyone enlighten me, please?</p>
","<p>What I did was the following.</p>

<ol>
<li>Restrict read/write for public for all classes. The only way to access the class data would be through the cloud code. </li>
<li>Verify that the user is a logged in user using the parameter <code>request.user</code> ,and if the user session is null and if the object id is legit.</li>
<li>When the user is verified then I would allow the data to be retrieved using the master key.</li>
</ol>
","4693","<security><private-key><parse-platform>","23","0","4","2015-12-11 17:19:16","13335151","1","9","4539281","","2015-02-11 05:30:56","2012-11-10 11:20:10",""
"13321553","parse.com security","<p>Recently I discovered how useful and easy <a href=""http://parse.com"">parse.com</a> is.
It really speeds up the development and gives you an off-the-shelf database to store all the data coming from your web/mobile app.</p>

<p>But how secure is it? From what I understand, you have to embed your app private key in the code, thus granting access to the data.</p>

<p>But what if someone is able to recover the key from your app? I tried it myself.  It took me 5 minutes to find the private key from a standard APK, and there is also the possibility to build a web app with the private key hard-coded in your <a href=""https://github.com/ParsePlatform/Todo/blob/master/js/todos.js"">javascript source</a> where pretty much anyone can see it.</p>

<p>The only way to secure the data I've found are ACLs (<a href=""https://www.parse.com/docs/data"">https://www.parse.com/docs/data</a>), but this still means that anyone may be able to tamper with writable data.</p>

<p>Can anyone enlighten me, please?</p>
","<p>Just keep a tight control on your Global Level Security options (client class creation, etc...), Class Level Security options (you can for instance, disable clients deleting _Installation entries. It's also common to disable user field creation for all classes.), and most important of all, look out for the ACLs.</p>

<p>Usually I use beforeSave triggers to make sure the ACLs are always correct. So, for instance, _User objects are where the recovery email is located. We don't want other users to be able to see each other's recovery emails, so all objects in the _User class must have read and write set to the user only (with public read false and public write false).</p>

<p>This way only the user itself can tamper with their own row. Other users won't even notice this row exists in your database.</p>

<p>One way to limit this further in some situations, is to use cloud functions. Let's say one user can send a message to another user. You may implement this as a new class Message, with the content of the message, and pointers to the user who sent the message and to the user who will receive the message.</p>

<p>Since the user who sent the message must be able to cancel it, and since the user who received the message must be able to receive it, both need to be able to read this row (so the ACL must have read permissions for both of them). However, we don't want either of them to tamper with the contents of the message.</p>

<p>So you have two alternatives: either you create a beforeSave trigger that checks if the modifications the users are trying to make to this row are valid before committing them, or you set the ACL of the message so that nobody has write permissions, and you create cloud functions that validates the user, and then modifies the message using the master key.</p>

<p>Point is, you have to make these considerations for every part of your application. As far as I know, there's no way around this.</p>
","4693","<security><private-key><parse-platform>","23","0","4","2015-12-11 17:19:16","13335151","1","9","4539281","","2015-02-11 05:30:56","2012-11-10 11:20:10",""
"3038608","How do I store a Java KeyStore password?","<p>In my web application I access a private key that is stored in a Java KeyStore. I would like to know what is the best/recommended way to store the password for the KeyStore and private key.</p>

<p>I've considered using a properties file but that does not seem very secure for use in a production environment (storing password in a plain text file). Also, hard-coding the password in my code is not an option I'm willing to entertain.</p>

<p>Thanks.</p>
","<p>You could use a properties file as you mentions just hash the password for extra security salt hash the password. This gets round the issue of having to keep a password in plain text. You can then either use MD5 or SHA1 password to hash it, personal choice. </p>
","4683","<java><keystore><private-key>","4","-7","2","2016-09-13 18:02:04","3038719","0","","70604","","2010-06-15 19:02:11","2010-06-14 15:43:03",""
"3038608","How do I store a Java KeyStore password?","<p>In my web application I access a private key that is stored in a Java KeyStore. I would like to know what is the best/recommended way to store the password for the KeyStore and private key.</p>

<p>I've considered using a properties file but that does not seem very secure for use in a production environment (storing password in a plain text file). Also, hard-coding the password in my code is not an option I'm willing to entertain.</p>

<p>Thanks.</p>
","<p>This is a tricky bootstrapping problem. Some options:</p>

<ul>
<li><p>Have your app prompt the user to unlock the keystore (not very friendly, but possible)</p></li>
<li>Store the password in an owner read only file (0400 ) and use that to unlock the keystore.  The attacker has to break into your server to read the file. This seems to be the most widely used technique</li>
<li>Use an HSM</li>
<li>Using something like Hashicorp Vault (but it also has the bootstrapping issue as well).</li>
</ul>
","4683","<java><keystore><private-key>","4","8","2","2016-09-13 18:02:04","3038719","0","","70604","","2010-06-15 19:02:11","2010-06-14 15:43:03",""
"12844839","Decrypting a string with private key (RSA)","<p>I have a public key and a private key and also a string which I want to decrypt.</p>

<p>The public key is in this format:</p>

<pre><code>-----BEGIN PUBLIC KEY-----
(key here)
-----END PUBLIC KEY-----
</code></pre>

<p>The private key is in this format:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
(key here)
-----END RSA PRIVATE KEY----- 
</code></pre>

<p>The string I want to decrypt has been encrypted using the public key and then I need to decrypt it using the private key.</p>

<p>I was wondering how I would go about doing this.</p>

<p>I have been researching this and have found <code>RSACryptoServiceProvider</code> but for encryption/decryption that seems to want the key to be in an XML format with a modulus and exponent.</p>

<p>My question is, is there a way to generate the XML format with modulus and exponent using the data I have or is there another way I can decrypt the string using the data I have.</p>
","<p>For parsing private/public keys that are not certificates, you can use <a href=""http://www.jensign.com/opensslkey/index.html"" rel=""nofollow"">RSA Public, Private, and PKCS #8 key parser</a>. There is source code available there that can convert the keys as needed. Once you have the keys converted you can use the Encrypt and Decrypt functions referenced below.</p>

<p>If you have a certificate, you can use the <a href=""http://msdn.microsoft.com/en-us/library/ms148415.aspx"" rel=""nofollow"">X509Certificate2 Constructor (String)</a> to load your cert &amp; key from a file. Once you have the X509Certificate2 loaded, you can get the encryption keys with <code>(RSACryptoServiceProvider)cert.PublicKey.Key</code> and <code>(RSACryptoServiceProvider)cert.PrivateKey</code>. </p>

<p>Use the Encrypt and Decrypt methods from the example in the <a href=""http://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509certificate2.aspx"" rel=""nofollow"">X509Certificate2 Class</a> documentation on MSDN. You'll need to know the format of your encrypted data, and the symmetric algorithm used (if any), then tweak the code as appropriate.</p>
","4667","<c#><encryption><rsa><private-key><rsacryptoserviceprovider>","2","1","2","2019-03-03 14:43:21","12850572","2","","1033581","","2019-03-03 14:43:21","2012-10-11 17:04:25",""
"12844839","Decrypting a string with private key (RSA)","<p>I have a public key and a private key and also a string which I want to decrypt.</p>

<p>The public key is in this format:</p>

<pre><code>-----BEGIN PUBLIC KEY-----
(key here)
-----END PUBLIC KEY-----
</code></pre>

<p>The private key is in this format:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
(key here)
-----END RSA PRIVATE KEY----- 
</code></pre>

<p>The string I want to decrypt has been encrypted using the public key and then I need to decrypt it using the private key.</p>

<p>I was wondering how I would go about doing this.</p>

<p>I have been researching this and have found <code>RSACryptoServiceProvider</code> but for encryption/decryption that seems to want the key to be in an XML format with a modulus and exponent.</p>

<p>My question is, is there a way to generate the XML format with modulus and exponent using the data I have or is there another way I can decrypt the string using the data I have.</p>
","<p>Thats a pem format, you can use <a href=""http://www.bouncycastle.org/csharp/"" rel=""nofollow"">bouncy castle</a> (via nuget) to read the private key and decrypt using it.  I have a project (c# implementation of google <a href=""http://www.keyczar.org/"" rel=""nofollow"">keyczar</a>) in which I use it to create a keyczar key set--see code: <a href=""https://github.com/jbtule/keyczar-dotnet/blob/master/dotnet/Keyczar/Keyczar/Compat/ImportedKeySet.cs#L158"" rel=""nofollow"">ImportedKeySet</a>. It's much less work if you don't even worry about the key parameters, and straight up use the bouncy castle api to decrypt as well. </p>

<p>You could use the the keyczar framework if you didn't have existing data you wanted to decrypt, the keyczar framework is more about simplicity and crypting things safely rather than a tool for every problem.</p>
","4667","<c#><encryption><rsa><private-key><rsacryptoserviceprovider>","2","1","2","2019-03-03 14:43:21","12850572","2","","1033581","","2019-03-03 14:43:21","2012-10-11 17:04:25",""
"16426535","What is a private key in Android?","<p>I read <a href=""http://developer.android.com/tools/publishing/app-signing.html"" rel=""noreferrer"">this article</a> about signing your Android applications. I used Eclipse to export my Android application, had to create a keystore (which succeeded) and a private key with an alias (which also succeeded). So I know that I have to sign the application with a private key.</p>

<p>However, the article does not make clear anything on the following questions:</p>

<ul>
<li>What is a private key?</li>
<li>Should each application you make have another key or should they share the same private key?</li>
<li>What is an alias?</li>
<li>Why do the applications have a validity lifetime?</li>
</ul>
","<p>Signing is like a certificate for your Android application (think web certificates to have some idea) - it proves that you're the owner of that application. Every app must be signed, as the link you provided clearly says.</p>

<p>In theory, every application from a developer should be under the same signature (after all, it's >your&lt; signature, not the app's)</p>

<p>The alias is just that: an alias for your key, which you use to refer to the keystore when signing the application.</p>

<p>And about the lifespan, not everything lasts forever. Those signatures (or certificates if you will) can last over 25 years. Not something you have to worry about.</p>
","4648","<android><private-key>","11","1","2","2013-05-07 19:21:12","16426637","3","2","","","","2013-05-07 18:57:53",""
"16426535","What is a private key in Android?","<p>I read <a href=""http://developer.android.com/tools/publishing/app-signing.html"" rel=""noreferrer"">this article</a> about signing your Android applications. I used Eclipse to export my Android application, had to create a keystore (which succeeded) and a private key with an alias (which also succeeded). So I know that I have to sign the application with a private key.</p>

<p>However, the article does not make clear anything on the following questions:</p>

<ul>
<li>What is a private key?</li>
<li>Should each application you make have another key or should they share the same private key?</li>
<li>What is an alias?</li>
<li>Why do the applications have a validity lifetime?</li>
</ul>
","<p>A private key is a cryptographic tool that verifies you are the owner of the app. Any build that is being updated to the Google Play store must be signed by your private key to prove it is a legitimate build.</p>

<p>So each different application that you want to upload to the store should have its own private key. <strong>If you ever lose this key, you will not be able to upload any new versions of your app,</strong> so make sure to store it somewhere safe and make backups! </p>

<p>However, you can store multiple private keys in the same keystore for convenience. (Although I do not, I find it more convenient to have a different keystore for every project as well.)</p>

<p>An alias is simply an easy to read name for the key. Nothing more or less.</p>

<p>It's worth noting, when you do an Eclipse ""Run"", it uses something called the debug key to run the application. This works fine because you are not trying to upload this build to the store, but this is why you need to use a separate build process to build your application for deployment.</p>

<p>The lifetime validity is a technical requirement. Just set it way in the future and don't worry about it.</p>
","4648","<android><private-key>","11","10","2","2013-05-07 19:21:12","16426637","3","2","","","","2013-05-07 18:57:53",""
"34911103","Generate RSA private key from n, e, d, p, q values in bash with OpenSSL","<p>I have calculated n, e, d, p, q values of an RSA key.
Now, how can I generate a private key file (pem or der) with openssl command line tools?</p>

<p>I was thinking about </p>

<pre><code>openssl asn1parse -genconf asn1.cnf -noout -out asn1.der
</code></pre>

<p>but I cannot understand how to build the conf file.</p>
","<p>The OpenSSL <a href=""http://linux.die.net/man/3/asn1_generate_nconf"" rel=""noreferrer"">manpage for asn_generate_nconf</a> comes with an example cnf for generating the private_key ASN.1 sequence that should work with your cmdline:</p>

<pre><code>asn1=SEQUENCE:private_key
[private_key]
version=INTEGER:0

n=INTEGER:0xBB6FE79432CC6EA2D8F970675A5A87BFBE1AFF0BE63E879F2AFFB93644\
D4D2C6D000430DEC66ABF47829E74B8C5108623A1C0EE8BE217B3AD8D36D5EB4FCA1D9

e=INTEGER:0x010001

d=INTEGER:0x6F05EAD2F27FFAEC84BEC360C4B928FD5F3A9865D0FCAAD291E2A52F4A\
F810DC6373278C006A0ABBA27DC8C63BF97F7E666E27C5284D7D3B1FFFE16B7A87B51D

p=INTEGER:0xF3929B9435608F8A22C208D86795271D54EBDFB09DDEF539AB083DA912\
D4BD57

q=INTEGER:0xC50016F89DFF2561347ED1186A46E150E28BF2D0F539A1594BBD7FE467\
46EC4F

exp1=INTEGER:0x9E7D4326C924AFC1DEA40B45650134966D6F9DFA3A7F9D698CD4ABEA\
9C0A39B9

exp2=INTEGER:0xBA84003BB95355AFB7C50DF140C60513D0BA51D637272E355E397779\
E7B2458F

coeff=INTEGER:0x30B9E4F2AFA5AC679F920FC83F1F2DF1BAF1779CF989447FABC2F5\
628657053A
</code></pre>

<p>As an alternative <a href=""https://github.com/ius/rsatool"" rel=""noreferrer"">rsatool.py</a> can generate the base64 encoded ASN.1 <code>privkey.pem</code> or plain asn.1 der sequence with a simple cmdline</p>

<pre><code>#&gt;python rsatool.py -n &lt;n&gt; -p &lt;p&gt; -q &lt;q&gt; -e &lt;e&gt; -v PEM -o privkey.pem
</code></pre>

<p>or for output in ASN.1 der:</p>

<pre><code>#&gt;python rsatool.py -n &lt;n&gt; -p &lt;p&gt; -q &lt;q&gt; -e &lt;e&gt; -v DER -o privkey.key
</code></pre>
","4509","<openssl><rsa><private-key><asn.1><der>","4","8","1","2016-01-30 10:12:21","34912346","1","1","","","","2016-01-20 21:38:38","2016-01-24 13:50:27"
"14597371","Encrypt a private key with Password using BouncyCastle","<p>I am new to BouncyCastle. I have a private key generated using the below code. </p>

<pre><code>     final CertAndKeyGen keypair = new CertAndKeyGen(""RSA"", ""SHA1WithRSA"", null);
     keypair.generate(1024);
     final PrivateKey privKey = keypair.getPrivateKey();
</code></pre>

<p>I would to encrypt it with a password using AES or some openssl supported algorithm using BouncyCastle. Can some one help me out how to start, where I am not able to find any good tutorial on this. Please help me out. Thanks in advance.</p>
","<p>If you just want to output your private key to a passphrase ""12345"" protected PEM formatted and file ""privatekey.pem"" you can use this BC code:</p>

<pre>
    JceOpenSSLPKCS8EncryptorBuilder encryptorBuilder = new JceOpenSSLPKCS8EncryptorBuilder(PKCS8Generator.PBE_SHA1_3DES);
    encryptorBuilder.setRandom(EntropySource.getSecureRandom());
    encryptorBuilder.setPasssword(""12345"".toCharArray());
    OutputEncryptor oe = encryptorBuilder.build();
    JcaPKCS8Generator gen = new JcaPKCS8Generator(privKey,oe);
    PemObject obj = gen.generate();

    PEMWriter pemWrt = new PEMWriter( new FileWriter(""privatekey.pem""));
    pemWrt.writeObject(obj);
    pemWrt.close();

</pre>

<p>then afterwards you can get at the private key with openssl with</p>

<pre>
$ openssl rsa -in privatekey.pem -check
Enter pass phrase for privatekey.pem:
RSA key ok
writing RSA key
-----BEGIN RSA PRIVATE KEY-----
.....
-----END RSA PRIVATE KEY-----
</pre>

<p>The ""standard"" use of PEMWriter will not passphrase protect your private key:(</p>
","4491","<java><ssl><ssl-certificate><bouncycastle><private-key>","2","4","2","2018-12-13 10:48:12","","1","","","","","2013-01-30 05:33:31",""
"14597371","Encrypt a private key with Password using BouncyCastle","<p>I am new to BouncyCastle. I have a private key generated using the below code. </p>

<pre><code>     final CertAndKeyGen keypair = new CertAndKeyGen(""RSA"", ""SHA1WithRSA"", null);
     keypair.generate(1024);
     final PrivateKey privKey = keypair.getPrivateKey();
</code></pre>

<p>I would to encrypt it with a password using AES or some openssl supported algorithm using BouncyCastle. Can some one help me out how to start, where I am not able to find any good tutorial on this. Please help me out. Thanks in advance.</p>
","<p>If you'd prefer to protect your private keys with AES-256 instead of one of the old DES variants supported by PKCS8, this will work:</p>

<pre><code>public String toPem(String password) throws IOException {

  StringWriter sw = new StringWriter();

  try (JcaPEMWriter pemWriter = new JcaPEMWriter(sw)) {

    PEMEncryptor encryptor =
        new JcePEMEncryptorBuilder(""AES-256-CBC"").build(password);

    // privateKey is a java.security.PrivateKey
    JcaMiscPEMGenerator gen = new JcaMiscPEMGenerator(privateKey, encryptor);
    pemWriter.writeObject(gen);
  }

  return sw.toString();
}
</code></pre>

<p>You can verify the output with openssl. In my case the key is EC so this command is used:</p>

<pre><code>$ openssl ec -in key.txt -passin pass:password -text
</code></pre>

<p>Adapt as required for RSA keys.</p>
","4491","<java><ssl><ssl-certificate><bouncycastle><private-key>","2","0","2","2018-12-13 10:48:12","","1","","","","","2013-01-30 05:33:31",""
"6081950","ios private key and certificate not pairing","<p>I cannot seem to ge my certificate and private key to pair up in keychain access. They are both in keychain separately. Steps I have taken:</p>

<p>Clear everything from keychain
Import .p12 private key file (gives me warning saying contents of this item cannot be read)
Generate certificate request using this key (I have tried severally different emails - is this important?)
Upload request to provisioning profile
Refresh provisioning profiles under organizer in xcode which generates a team provisioning profile - this says cannot find valid private-key/certificate pair</p>

<p>I have created several certificates + provisioning profiles successfully in the past but this one seems to be putting up a fight.</p>

<p>This particular key was used for my old team provisioning profile but the certificate expired so I am trying to create a new certificate.</p>

<p>Thanks   </p>
","<p>I found an alternative way of submitting requests:</p>

<p>Revoke certificates in provisioning centre, delete profile from xcode. Then hit refresh in organizer in xcode, xcode will submit the request for you and do its stuff.</p>

<p>I was also missing a public key from the keychain which it generated.</p>
","4437","<ios><certificate><provisioning><keychain><private-key>","3","13","1","2013-03-27 17:08:28","6082247","0","1","","","","2011-05-21 13:08:13",""
"3446040","What's the use of the Public and Private key for reCAPTCHA?","<p>reCAPTCHA requires a public and a private key before it can be implemented into a website. It also needs the reCAPTCHA keys depending on the website. What's the reason behind this? Does the Public and Private key affect the words displayed in the reCAPTCHA? I know that I can set the Public and Private key to be GLOBAL in which it can be used for other domains <b>but</b> why even need the keys in the first place?</p>
","<p>OK. This is my guess, no guarantee.</p>

<ol>
<li>Your public key is required while generating client-side page.</li>
<li>The client uses this public key to request from recaptcha: an image, a corresponding correct answer and perhaps an id. Of course the answer and the id comes encrypted, using the public key. (So the client cannot know the answer)</li>
<li>User types in the answer, sends it to your server.</li>
<li>You have: {id, answer} encrypted using public key. You send your private key and this encrypted message to recaptcha server.</li>
<li>recaptcha unencrypts the message, revealing the answer and id, and checks if they match.</li>
<li>it tells your server the result of the check.</li>
</ol>

<p>Note:</p>

<ol>
<li>If the user sends a public key of his own to recaptcha, the check won't succeed since your private key does not work with his public key.</li>
<li>The scheme proves that your server is really the one receiving the recaptcha answer.</li>
</ol>
","4301","<recaptcha><public-key><private-key>","5","5","1","2011-02-15 15:33:10","","1","","","","","2010-08-10 04:31:57",""
"36916110","How to login ssh server without giving password using private/public key- imported-openssh-key","<p>Currently Filezilla is being used to copy from remote sever. there is require manual operation requires to copy and complete other further task after copying file. SO i need to write shell script to copy and do further task. But i facing to login server using private/public key. I have one key file which is containing following content:</p>

<pre><code>puTTY-User-Key-File-2: ssh-rsa
Encryption: none
Comment: imported-openssh-key
Public-Lines: 6
--&lt;Public_key&gt;

Private-Lines: 14
---&lt;Private_key&gt;--

Private-MAC: --&lt;some text&gt;--
</code></pre>

<p>Filiezilla is successfully connecting and working properly using key .</p>

<p>I have already spent many hours for googling, But could not get proper solution. 
Please suggest me how do i login without password using that given key and copy file using shell script </p>
","<p>You need to put the private key in a file by itself on the client machine, and then:</p>

<pre><code>ssh -i /path/to/ssh/key USER@HOSTNAME
</code></pre>

<p>Here's a tutorial: <a href=""https://support.rackspace.com/how-to/logging-in-with-an-ssh-private-key-on-linuxmac/"" rel=""nofollow"">https://support.rackspace.com/how-to/logging-in-with-an-ssh-private-key-on-linuxmac/</a></p>
","4276","<shell><ssh><ssh-keys><private-key><openssh>","1","1","2","2016-05-06 08:15:03","37067483","0","2","","","","2016-04-28 13:25:28",""
"36916110","How to login ssh server without giving password using private/public key- imported-openssh-key","<p>Currently Filezilla is being used to copy from remote sever. there is require manual operation requires to copy and complete other further task after copying file. SO i need to write shell script to copy and do further task. But i facing to login server using private/public key. I have one key file which is containing following content:</p>

<pre><code>puTTY-User-Key-File-2: ssh-rsa
Encryption: none
Comment: imported-openssh-key
Public-Lines: 6
--&lt;Public_key&gt;

Private-Lines: 14
---&lt;Private_key&gt;--

Private-MAC: --&lt;some text&gt;--
</code></pre>

<p>Filiezilla is successfully connecting and working properly using key .</p>

<p>I have already spent many hours for googling, But could not get proper solution. 
Please suggest me how do i login without password using that given key and copy file using shell script </p>
","<p>Finally I got the solution of my own question after doing research and visiting many website. PPK file contains:</p>

<pre><code>puTTY-User-Key-File-2: ssh-rsa
Encryption: none
Comment: imported-openssh-key
Public-Lines: 6
--&lt;Public_key&gt;
Private-Lines: 14
---&lt;Private_key&gt;--

Private-MAC: --&lt;some text&gt;--
</code></pre>

<p>Actually we need to generate our own private key either with pass-phrase or without pass-phrase. Then we can login server using own private key.</p>

<p>Steps to generate private key in this <a href=""https://kb.paessler.com/en/topic/32883-how-can-i-use-private-keys-for-my-ssh-sensors-with-prtg"" rel=""nofollow"">url</a></p>

<p><a href=""https://kb.paessler.com/en/topic/32883-how-can-i-use-private-keys-for-my-ssh-sensors-with-prtg"" rel=""nofollow"">https://kb.paessler.com/en/topic/32883-how-can-i-use-private-keys-for-my-ssh-sensors-with-prtg</a></p>

<p>After generating private key, we can do ssh login or stp using :</p>

<pre><code>sftp  -oIdentityFile=&lt;generated_private_key&gt;  &lt;user&gt;@&lt;ftp_server&gt;:&lt;remote_directory&gt;

ssh -i &lt;generated_private_key&gt;  &lt;user&gt;@&lt;ftp_server&gt;
</code></pre>

<p>we can use importance <a href=""http://www.csee.umbc.edu/courses/104/fall05/ordonez/sftp_cmds.shtml"" rel=""nofollow"">stp_command</a> for automation task: 
<a href=""http://www.csee.umbc.edu/courses/104/fall05/ordonez/sftp_cmds.shtml"" rel=""nofollow"">http://www.csee.umbc.edu/courses/104/fall05/ordonez/sftp_cmds.shtml</a></p>

<p>Now i can write shell script after login and listing file on Remote FTP server. if anything confusion. pls comment.</p>
","4276","<shell><ssh><ssh-keys><private-key><openssh>","1","1","2","2016-05-06 08:15:03","37067483","0","2","","","","2016-04-28 13:25:28",""
"36704417","Generate RSA private SSH key in PHP","<p>I have generated a SSH key with PHP OpenSSL:</p>

<pre><code>$rsaKey = openssl_pkey_new(array( 
    'private_key_bits' =&gt; 4096,
    'private_key_type' =&gt; OPENSSL_KEYTYPE_RSA,
));
$privKey = openssl_pkey_get_private($rsaKey); 
openssl_pkey_export($privKey, $pem);
</code></pre>

<p>This results in <code>$pem</code> looking like this:</p>

<pre>-----BEGIN PRIVATE KEY-----
MIIJQwIBADANBgkqhkiG9w0BAQEFAASCCS0wggkpAgEAAoICAQC8ggt6rVHYnqNP
...
e95+EXbPc6THyWt9pgwOsJltpylIYG4=
-----END PRIVATE KEY-----</pre>

<p>But I cannot authenticate using this key. Before I can use it, I have to convert it using this command:</p>

<pre><code>openssl rsa -in xxx.key -outform pem &gt; xxx.key2
</code></pre>

<p>The result of the conversion is this:</p>

<pre>-----BEGIN RSA PRIVATE KEY-----
MIIJKQIBAAKCAgEAvIILeq1R2J6jT+xjlK5NrOqFZTOJ4PByvgPQNbb2Kp7c3W15
...
o1t2KBkaSoR+JyOPOZakq5BLv8lgD3vefhF2z3Okx8lrfaYMDrCZbacpSGBu
-----END RSA PRIVATE KEY-----</pre>

<p>Both are PEM format, but the second is a RSA private key. With the second, PHP can login. So I need a key that starts with <code>RSA PRIVATE KEY</code>, not just <code>PRIVATE KEY</code>. How can I create this with PHP and OpenSSL PHP implementation?</p>
","<p>So, these are <a href=""https://stackoverflow.com/questions/20065304/what-is-the-differences-between-begin-rsa-private-key-and-begin-private-key"">two different key types</a>. You're looking for PKCS #1, but getting PKCS #8.</p>

<p>This appears to be related to the version of OpenSSL that PHP uses. Versions since 1.0 create a PKCS #8 file, and there's <a href=""https://bugs.php.net/bug.php?id=53850#1296072724"" rel=""nofollow noreferrer"">nothing the PHP developers</a> want to do about it. The same issue arises when doing it from the command line with this command:</p>

<pre><code>openssl req -new -keyout mykey.key -out mycertreq.csr -nodes -sha1 -newkey rsa:2048
</code></pre>

<p>You can try using an external library called <a href=""https://github.com/phpseclib/phpseclib"" rel=""nofollow noreferrer"">phpseclib</a>, though I haven't tried it myself:</p>

<pre><code>&lt;?php
include('Crypt/RSA.php');

$rsa = new Crypt_RSA();
$rsa-&gt;setPublicKeyFormat(CRYPT_RSA_PUBLIC_FORMAT_OPENSSH);
$result = $rsa-&gt;createKey();
echo $result[""privatekey""];
?&gt;
</code></pre>
","4273","<php><ssh><openssl><rsa><private-key>","3","5","1","2016-04-19 01:34:15","36705324","7","1","608639","","2016-04-19 01:34:15","2016-04-18 21:15:42",""
"50227580","Create X509Certificate2 from PEM file in .NET Core","<p>I want to create a X509Certificate2 object based on a PEM file. The problem is setting the PrivateKey property of X509Certificate2. I read <a href=""https://stackoverflow.com/questions/35845076/x509certificate2-createfromcertfile-on-net-core"">X509Certificate2.CreateFromCertFile() on .NET Core
</a> and then used</p>

<pre><code>var rsa = new RSACryptoServiceProvider();

rsa.ImportCspBlob(pvk);
</code></pre>

<p>Where <code>pvk</code> is the byte array of the private key (read from GetBytesFromPEM as shown here <a href=""https://stackoverflow.com/questions/7400500/how-to-get-private-key-from-pem-file"">how to get private key from PEM file?</a>), to set the private key, but then I get an </p>

<blockquote>
  <p>Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException with message Bad Version of provider. </p>
</blockquote>

<p>How can I properly set the PrivateKey of the X509Certificate2 based on the private key in the PEM file?</p>

<p>If I look at <a href=""https://www.codeproject.com/Articles/162194/Certificates-to-DB-and-Back"" rel=""noreferrer"">Creating the X509Certificate2</a>, they use </p>

<pre><code> RSACryptoServiceProvider prov = Crypto.DecodeRsaPrivateKey(keyBuffer);
 certificate.PrivateKey = prov;
</code></pre>

<p>which seems like a neat way to do this, but this does not work in .Net Core...</p>
","<p>If you've just extracted the bytes from the Base64 encoding of the private key file you have a PKCS#1, PKCS#8, or encrypted PKCS#8 private key blob (depending on if it said ""BEGIN RSA PRIVATE KEY"", ""BEGIN PRIVATE KEY"" or ""BEGIN ENCRYPTED PRIVATE KEY"").  <code>ImportCspBlob</code> wants a custom format for the data, and that's why it's complaining.</p>

<p><a href=""https://stackoverflow.com/q/48905438/6535399"">Digital signature in c# without using BouncyCastle</a> has an explanation of ways forward.  The easiest / most formulaic is to just make a PFX with the cert and key, and let the <code>X509Certificate2</code> constructor do its thing.</p>

<p>If you go the route of loading the key object directly then the way you would mate a private key with the certificate is to use one of the new <a href=""https://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.rsacertificateextensions.copywithprivatekey(v=vs.110).aspx"" rel=""nofollow noreferrer""><code>CopyWithPrivateKey</code></a> extension methods.  This returns a new instance of <code>X509Certificate2</code> which knows about the private key.</p>

<p>The <code>PrivateKey</code> setter was ""removed"" from .NET Core because it has a lot of side effects on Windows that are hard to replicate on Linux and macOS, particularly if you retrieved the certificate out of an instance of X509Store.</p>

<hr>

<p>This code is a combination of overly strict and overly accepting for real BER rules, but this should read validly encoded PKCS#8 files unless they included attributes.</p>

<pre><code>private static readonly byte[] s_derIntegerZero = { 0x02, 0x01, 0x00 };

private static readonly byte[] s_rsaAlgorithmId =
{
    0x30, 0x0D,
    0x06, 0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x01,
    0x05, 0x00,
};

private static int ReadLength(byte[] data, ref int offset)
{
    byte lengthOrLengthLength = data[offset++];

    if (lengthOrLengthLength &lt; 0x80)
    {
        return lengthOrLengthLength;
    }

    int lengthLength = lengthOrLengthLength &amp; 0x7F;
    int length = 0;

    for (int i = 0; i &lt; lengthLength; i++)
    {
        if (length &gt; ushort.MaxValue)
        {
            throw new InvalidOperationException(""This seems way too big."");
        }

        length &lt;&lt;= 8;
        length |= data[offset++];
    }

    return length;
}

private static byte[] ReadUnsignedInteger(byte[] data, ref int offset, int targetSize = 0)
{
    if (data[offset++] != 0x02)
    {
        throw new InvalidOperationException(""Invalid encoding"");
    }

    int length = ReadLength(data, ref offset);

    // Encoding rules say 0 is encoded as the one byte value 0x00.
    // Since we expect unsigned, throw if the high bit is set.
    if (length &lt; 1 || data[offset] &gt;= 0x80)
    {
        throw new InvalidOperationException(""Invalid encoding"");
    }

    byte[] ret;

    if (length == 1)
    {
        ret = new byte[length];
        ret[0] = data[offset++];
        return ret;
    }

    if (data[offset] == 0)
    {
        offset++;
        length--;
    }

    if (targetSize != 0)
    {
        if (length &gt; targetSize)
        {
            throw new InvalidOperationException(""Bad key parameters"");
        }

        ret = new byte[targetSize];
    }
    else
    {
        ret = new byte[length];
    }

    Buffer.BlockCopy(data, offset, ret, ret.Length - length, length);
    offset += length;
    return ret;
}

private static void EatFullPayloadTag(byte[] data, ref int offset, byte tagValue)
{
    if (data[offset++] != tagValue)
    {
        throw new InvalidOperationException(""Invalid encoding"");
    }

    int length = ReadLength(data, ref offset);

    if (data.Length - offset != length)
    {
        throw new InvalidOperationException(""Data does not represent precisely one value"");
    }
}

private static void EatMatch(byte[] data, ref int offset, byte[] toMatch)
{
    if (data.Length - offset &gt; toMatch.Length)
    {
        if (data.Skip(offset).Take(toMatch.Length).SequenceEqual(toMatch))
        {
            offset += toMatch.Length;
            return;
        }
    }

    throw new InvalidOperationException(""Bad data."");
}

private static RSA DecodeRSAPkcs8(byte[] pkcs8Bytes)
{
    int offset = 0;

    // PrivateKeyInfo SEQUENCE
    EatFullPayloadTag(pkcs8Bytes, ref offset, 0x30);
    // PKCS#8 PrivateKeyInfo.version == 0
    EatMatch(pkcs8Bytes, ref offset, s_derIntegerZero);
    // rsaEncryption AlgorithmIdentifier value
    EatMatch(pkcs8Bytes, ref offset, s_rsaAlgorithmId);
    // PrivateKeyInfo.privateKey OCTET STRING
    EatFullPayloadTag(pkcs8Bytes, ref offset, 0x04);
    // RSAPrivateKey SEQUENCE
    EatFullPayloadTag(pkcs8Bytes, ref offset, 0x30);
    // RSAPrivateKey.version == 0
    EatMatch(pkcs8Bytes, ref offset, s_derIntegerZero);

    RSAParameters rsaParameters = new RSAParameters();
    rsaParameters.Modulus = ReadUnsignedInteger(pkcs8Bytes, ref offset);
    rsaParameters.Exponent = ReadUnsignedInteger(pkcs8Bytes, ref offset);
    rsaParameters.D = ReadUnsignedInteger(pkcs8Bytes, ref offset, rsaParameters.Modulus.Length);
    int halfModulus = (rsaParameters.Modulus.Length + 1) / 2;
    rsaParameters.P = ReadUnsignedInteger(pkcs8Bytes, ref offset, halfModulus);
    rsaParameters.Q = ReadUnsignedInteger(pkcs8Bytes, ref offset, halfModulus);
    rsaParameters.DP = ReadUnsignedInteger(pkcs8Bytes, ref offset, halfModulus);
    rsaParameters.DQ = ReadUnsignedInteger(pkcs8Bytes, ref offset, halfModulus);
    rsaParameters.InverseQ = ReadUnsignedInteger(pkcs8Bytes, ref offset, halfModulus);

    if (offset != pkcs8Bytes.Length)
    {
        throw new InvalidOperationException(""Something didn't add up"");
    }

    RSA rsa = RSA.Create();
    rsa.ImportParameters(rsaParameters);
    return rsa;
}
</code></pre>
","4102","<c#><.net-core><x509certificate><private-key><pem>","7","4","1","2018-05-09 16:48:08","50236577","0","2","6535399","","2018-05-09 16:48:08","2018-05-08 06:53:15",""
"35292681","PSCP file from Windows to Linux using private/public keys","<p>I can transfer file using PSCP:</p>

<pre><code>C:\&gt;pscp -pw &lt;password&gt; -r -p &lt;path of the file&gt;  user@Server:&lt;path file to stored&gt;
</code></pre>

<p>But not using the public/private key.</p>

<p>Steps followed:</p>

<ol>
<li><p>Generate public and private keys using PuTTYgen.</p></li>
<li><p>Copy the public key to authorized_keys of Remote Server</p></li>
<li><p>Save the private key to key.ppk in Windows server</p></li>
<li><p>Then </p>

<pre><code>C:\&gt;pscp -i privatekey pathofthefile user@server:pathfiletostored
</code></pre></li>
</ol>

<p>It gives ""Fatal: Network error: Connection refused""</p>

<p>Can someone please help?</p>
","<p>Use the following code:</p>

<pre><code>C:\&gt;pscp -i ""path\of\the\privatekey\privatekey.ppk"" C:\temp\example_file.txt user@server:/path/file/to/be/stored
</code></pre>

<p>Note the quotes for the private key path and the private key should be in .ppk format.</p>

<p>The connection refused error may also be due to the wrong port. In that case, you need to mention the correct port by the following code :</p>

<pre><code>C:\&gt;pscp -i ""path\of\the\privatekey\privatekey.ppk"" -P 8022 C:\temp\example_file.txt user@server:path/file/to/be/stored
</code></pre>

<p>Note that 8022 is the port number and the P is uppercase. Hope this helps.</p>
","4094","<unix><private-key><pscp>","1","5","1","2019-09-18 19:07:56","","2","1","850848","","2019-09-18 19:07:56","2016-02-09 12:55:46",""
"15428482","Embedding private key into application code in Android","<p>In my application, I need to establish a <strong>SSL connection</strong>. Currently, I have a <strong>BKS</strong> type keystore file, but I don' t want to store it in my apk as a file. AFAIK private keys can be embedded within application code as a String or something and then they can be obfuscated. So my questions are;</p>

<p>1) Is it really possible and would it be more secure than storing it as a ""mykey.bks"" file in my assets folder?</p>

<p>2) How can I copy and paste the contents of my bks file to my application code and how can I access it to create a socket factory?</p>

<p>Thanks</p>
","<p><strong>1)</strong> Is it really possible and would it be more secure than storing it as a ""mykey.bks"" file in my assets folder?</p>

<p>Answer is no, because any one can extract assets folder from APK easily using APK <strong>Decompiler Tools</strong></p>

<p>Solution: </p>

<p><strong>a).</strong> put your <code>mykey.bks</code> file on secure server </p>

<p><strong>b).</strong>  secure server url using  JNI by creating a simple class in C++ or C with getter methods and which return server URL at runtime(To avoid extract file url from apk)</p>

<p><strong>c).</strong>  download <em>""mykey.bks""</em> file at runtime when u need to use in application and delete it when user close your Application </p>
","4008","<android><ssl><private-key>","2","4","3","2013-03-20 15:25:41","15428971","2","1","","","","2013-03-15 09:13:56",""
"15428482","Embedding private key into application code in Android","<p>In my application, I need to establish a <strong>SSL connection</strong>. Currently, I have a <strong>BKS</strong> type keystore file, but I don' t want to store it in my apk as a file. AFAIK private keys can be embedded within application code as a String or something and then they can be obfuscated. So my questions are;</p>

<p>1) Is it really possible and would it be more secure than storing it as a ""mykey.bks"" file in my assets folder?</p>

<p>2) How can I copy and paste the contents of my bks file to my application code and how can I access it to create a socket factory?</p>

<p>Thanks</p>
","<p>As mentioned in the comments, you want to keep you private key private, or everyone is able to login into your secure service. (Hence the name <em>private key</em>)</p>

<p>The only way to keep it really private is to not pass it around to others. For example, one your provide the private key using the UI of the application. If this key is not present, the user is unable to access the service!</p>

<p>This seems impossible in your current situation, at least from what it understand of your question. So a <em>second best solution</em> is to password protect the key. But then you need to provide the password to your users, which is fairly the same as providing the key itself to your users (previous option)...</p>

<p>The worse option is to embed the key into your application/APK without it being password protected. Any adept user is able to retrieve the key, using the same algorithm as the application uses: Deobfuscation, downloading, reading a file, etc.</p>

<p>The conclude, it seems silly that your service requires a private key, and your pass the key to (all? of) your users. So everyone is able to connect to the service... Why do you need the private key to access the service?</p>

<p>In the end the choice of the method to provide the key is yours!</p>

<hr>

<p><strong>UPDATE</strong> (was too long for a comment)</p>

<p>The general idea when using keys is, that the client has a (custom generated) <a href=""http://en.wikipedia.org/wiki/Public-key_cryptography"" rel=""nofollow"">private/public key-pair</a>. next, the public key part is send to the service. And the client is able to authenticate using the private key (by proving that the client has indeed the private key part).</p>

<p>In your situation, you need to provide a method to send public keys to your storage/service. The problem is that you need to somehow verify that the public key belongs to a client you want to grant access. This could be manually verified by administrators... Otherwise anyone is still able create nonsense subscriptions.</p>

<p>To be more concrete for your own application. It could include a SSL public/private key-pair  generator. After a new key-pair is generated, the public key could be send to your service from the application.</p>

<p>The service need to get it authenticated, until that moment the client could connect to the service (using the non-authenticated key-pair) to a read-only (guest) subscription (for example).</p>

<p>Again, the choice of the actual implementation is yours, these are only pointers.</p>
","4008","<android><ssl><private-key>","2","1","3","2013-03-20 15:25:41","15428971","2","1","","","","2013-03-15 09:13:56",""
"15428482","Embedding private key into application code in Android","<p>In my application, I need to establish a <strong>SSL connection</strong>. Currently, I have a <strong>BKS</strong> type keystore file, but I don' t want to store it in my apk as a file. AFAIK private keys can be embedded within application code as a String or something and then they can be obfuscated. So my questions are;</p>

<p>1) Is it really possible and would it be more secure than storing it as a ""mykey.bks"" file in my assets folder?</p>

<p>2) How can I copy and paste the contents of my bks file to my application code and how can I access it to create a socket factory?</p>

<p>Thanks</p>
","<p>This article is a good reference about storing private data in Android : <a href=""http://nelenkov.blogspot.fr/2012/05/storing-application-secrets-in-androids.html"" rel=""nofollow"">http://nelenkov.blogspot.fr/2012/05/storing-application-secrets-in-androids.html</a></p>
","4008","<android><ssl><private-key>","2","1","3","2013-03-20 15:25:41","15428971","2","1","","","","2013-03-15 09:13:56",""
"14193166","C RSA key generator","<p>I create a program on a microntroller (which does not run any OS), and I can't find any library in C which can give me a RSA (PKCS#1) key generator (public and private). </p>

<p>I suppose that OpenSSH isn't an option because it's link to Linux or Unix. I found some SSH implementation, but it supports only the client side (encoding through a public key).</p>

<p>Does a such C lib exists (RSA (PKCS#1) key generator (public and private) + encoding, decoding)?</p>
","<p>I highly doubt that there is a library like that, that makes no use of operating system functionality and runs on a microcontroller. A quick google search brought this up: </p>

<p><a href=""http://polarssl.org/rsa-source-code"" rel=""nofollow"">polarssl.org/rsa-source-code</a> </p>

<p>Maybe you can use or adapt that.</p>
","4001","<c><rsa><microcontroller><private-key><key-generator>","5","2","2","2014-02-17 10:20:46","14194506","7","1","","","","2013-01-07 09:32:19",""
"14193166","C RSA key generator","<p>I create a program on a microntroller (which does not run any OS), and I can't find any library in C which can give me a RSA (PKCS#1) key generator (public and private). </p>

<p>I suppose that OpenSSH isn't an option because it's link to Linux or Unix. I found some SSH implementation, but it supports only the client side (encoding through a public key).</p>

<p>Does a such C lib exists (RSA (PKCS#1) key generator (public and private) + encoding, decoding)?</p>
","<p>For the embedded project without OS you can use:</p>

<ol>
<li>PolarSSL (<a href=""https://polarssl.org/"" rel=""nofollow"">https://polarssl.org/</a>)</li>
<li>CyaSSL (<a href=""http://www.yassl.com/yaSSL/Home.html"" rel=""nofollow"">http://www.yassl.com/yaSSL/Home.html</a>)</li>
<li>RSAEuro (github.com/mort666/RSAEuro)</li>
</ol>

<p>Check the licenses for use this libraries in the comercial product.
Currently I am trying to use PolarSSL for generating RSA key pairs. 
I use my cuted down version of this library that support all hardware features (AES, DES, 3DES, TRNG, SHA1, MD5, HMAC) incorporated into STM32F4 MCU.</p>
","4001","<c><rsa><microcontroller><private-key><key-generator>","5","2","2","2014-02-17 10:20:46","14194506","7","1","","","","2013-01-07 09:32:19",""
"45647699","Generate private / public SSH key with Python","<p>I just need to create a private/public key pair with Python.
I want to get the same result as with the following <code>ssh-keygen</code> command:</p>

<pre><code>ssh-keygen -t rsa -b 4096 -C ""sample.key"" -N """" -f ""key"" &amp;&amp; mv ""key"" ""key.opk""
</code></pre>

<p>which generates the following:</p>

<p>key.opk</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
MIIJKAIBAAKCAgEAoipf1PVLTUHmW48doi5DSa3z4gKgXgtU51ofNRXwhe3EQkMt
Ia3AxVGzWQKdSjWjJdJm7mxNuO/5dbiOEX4MmhwNyLTl7+LTmhDy9M1jGAq61YAN
knkqIW+qK33+k1+Sr04PCryn16GzP3I8dBt09C4cgSLsvtcMyxHjjlGnzozLVTa5
jy1c9xRiJ6yQtHJdFosJEelEapuWLdIKsJMATaYIDQfCxplClrjpcGxdnlBGTAOB
cfJ/+S9G/UK7HIrzFMtfGVQkYZQ08Dtxj3gLGx/Ghpwt1NhBtUXW9gR4dQBBcirM
kCdGoV0tWpw2yktXBi86NKycXCinITNUKVxTl98m+bRf4dj8qgsjunkTzZ4oJ7e0
Y0fQS2hH6W7jp0aY+4DZi41Hj6moTaa926Ubbl5NUJsMfslqDRnrRHB2DuHcduN5
N83uSg9qLYwCLyPsYUgRTbU5HTWvb1R32W5FqLL4aI6bkdSl6oxMHLcALanBHC3Y
Flhycl8QRlY8ts9AfWfnvKsu85IUxlCsR7sHQbDAgVS434qKUJWhqg6t6WBL79Qi
SJgrZY9MjxpKfut5xf4LUU0dXyNFu/9tMetzstM1KtCBz9gTa/WXCMordl52xQFR
CtFLrQaMmyuCloXuPA9U4XFdKavW5q4X8pEYGTQANlDihLs40ekzZw4Gnx8CAwEA
AQKCAgEAnLRZ+s42wCdoVR3NQwV1nGNugv6KvZYxq4bZFVFoJeOHfYiwuhTPbV3v
85mlKSr/xvK06LzbtlSfOXToRFsMDngBkevNLqyAUicCwDEhCwCDXwDpHJvdbIYd
aP3N3dfDRYgm3PdFMghd0Hexl3lY4QUWImv/XsMs56cXwFWD1QMVEflaAtORPGoE
F9aX1ueUsM4WK6rApExJKWoJTmwfJOnGaeEQBR3gzQlO+4acSPnFlHrmwZfWtpNL
BD1R1tkm4PdNpIo8xdaT+XlX2Y3lHYbtLvMJDt8TT/p3KTFUvatLkuls1/g8Nn51
71N5Vq7LH3zPwEr0pdHa/yg8seM4GsaMcRHRqVjkqmIyhsPM90tFFyxg963FeKX/
A6hBJbkIYlbI39+jH0fQG8v7izo1c6IKuVNL6ZKCpskQbKo07sSh7caM1Ff9p2rH
W6VUq0WJsgexaYFxyfW01NdGvNIHOHuIe4P2pjMkOV89Ycc9loTUvr9M6xOpZsn+
Cg9EUjZMUfGMq2+T2/8EJ2jzd/GRxrDOhWN1ZzO+zlOcrrI9iL3WtqNaCh5WrAuX
Tt1ym0FYWccpmS6ErUutDRhZcKGBb2nlv4B6tiYC+YbV61+5xdb/6mr3yBZ+cNP8
IsrKElHa6W2V8OiK1BfxcyjLyl30sv11/Oac6QbprPeIbfGULIECggEBAM0EsBP7
1itYXwAm9fKuX7jInRWZBZX7G11TXxLZdOMQzS/XLjLu8G/hkWFxVA1YIHwB3ep5
8gxP0W8eUWUTbSAsfLDO1JRpn8Q9tbexg2VfQ5uTVVKJY7pa4zxKMYoAw3hUNtgM
4nhLwrhsxP+XwdJn/6H8p/kLhyQwhIrW29uYF7NXduQOPOMWoJl39NmTcowj6kEP
gb++MmlTeZ6D/fgMLs4mkNN2XlSM32pUuYWMgUI//4GeLLL0HkBucnX0snKAQKyG
FbpJQ/SRvY8FAHFj8DHeZZ5kN7Ih8I2CvRjyNQ9jC62M+qtGu249K4lcgBlldhCL
FxGQ2I2bEjsn+uECggEBAMp9tdBnClFdGk4kjFwVElg41JwbhwdGTmL3SFXT3C58
/HpfmBHOim+x+cUo/ieuz3E6ycLc7MY8uZg5rDRPs6hhMvEpUiN2ndNMt0p8qj9y
4g1VBEhZeuR99FyPVYGSXD9/ELfJGpqy/MuXOTweqHM06QPA768faI959pDUy3WJ
C0mLdU5xdOMjV8/JRX8UZKp/FqkYRMxEyfIVeWgFhtIadzn/QMLR+k8mH/a1+O4I
hGsQRaCHEGrLrMcgR2wsm3OtOHB4n7/bmtKgDJOZf6o5AmE+z3joKAXScA5x8445
OQy8s2c6oaW1ucfThVXh9sOHbV+QrVia1kYPXRHr2f8CggEAapFvPVQApZNP/nJC
Eh2V4CVXkexyvN1EAiTeHJwwZ/9JyP5fI1aUYHOt8CrKeA1BBXSq98DfkorC4LGv
uYx5gunc/sLkOSkWRRmWpZ9+H2l/aRUSms6TqkCoMaSXT5bKBHgx8efwqHspAlh3
piwqMcahWIBOh+P4IVWe79RzgBf06eIjCLRl7dzLKjryaU59kl7w21TGKvcgmSMs
6rrNfuxGQB5H1cOHkQeQ8mKL9OFuJxPBKo0fyv2d4/wFP08smtwTwhoInUaMLkq7
b+Y3rrk2F5X02HpbgRqnQcedp6Pu9MqVPWc0vWcM8maVhNcyNwFId5z1JspV5nWe
6mUDwQKCAQA94k93gpYvqZGJgjf3SGVT2wJ3Nx58RatdKY/M0zO+bWpICAEUqBe8
7RqVe+K4w/8X7syMpjIin5plAHM1hYo1koccFvHIbs7rLc3ykMkDHRwi0PG/HsGl
JS1SQGf0coOI0E+Oq4Ja9wq1OeE/E2uN0gTIpeVakvHEr5SATNhlcl2lu149fAUq
CbojgbKglN3zEWYehZE5EGjbeF6jQNUkTvxTGER1hfDG0bMBFjoenTHC+rUcy0pk
KR0DukS5taRIpQ7TqLnBy960Mj/FuCrBHi0xBR4pKGJa7SZb881okOpzjxQRH2UZ
nMFLZcShK67bsP7nLvMbWi7UOIvMF1WHAoIBADU2Olebvi98b+f+r2ATXPxtIwTE
B1m710sl4D9TxqOGFNLINqdzqKj3ajQ0hSwYH7pZOksjx5MP517KcCxcA/NY3n0m
ij98qTRyW/d7PBBo0cLQBiplq8+LEgiGpEzq5irAU1IDs1UXVp3+oWovpd4HPhYq
47pQHWhxbs/3Zt+ewEw73N2uN4VRWTJj4xjP6SSP11qrSzX7br3vhL5Em+iyl7cP
PoN7GZioon9+6Oy1+P+sm4cU9X4HW9Pv4nitlYjdMMm7DBP/YgVJk4F+imJ7yQKb
KC5dOg33sE/Uz7YPRIAbnFSFudgJiMendtK9qg645DOTdufAF2Jn79e1Its=
-----END RSA PRIVATE KEY-----
</code></pre>

<p>key.pub</p>

<pre><code>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCiKl/U9UtNQeZbjx2iLkNJrfPiAqBeC1TnWh81FfCF7cRCQy0hrcDFUbNZAp1KNaMl0mbubE247/l1uI4RfgyaHA3ItOXv4tOaEPL0zWMYCrrVgA2SeSohb6orff6TX5KvTg8KvKfXobM/cjx0G3T0LhyBIuy+1wzLEeOOUafOjMtVNrmPLVz3FGInrJC0cl0WiwkR6URqm5Yt0gqwkwBNpggNB8LGmUKWuOlwbF2eUEZMA4Fx8n/5L0b9QrscivMUy18ZVCRhlDTwO3GPeAsbH8aGnC3U2EG1Rdb2BHh1AEFyKsyQJ0ahXS1anDbKS1cGLzo0rJxcKKchM1QpXFOX3yb5tF/h2PyqCyO6eRPNnignt7RjR9BLaEfpbuOnRpj7gNmLjUePqahNpr3bpRtuXk1Qmwx+yWoNGetEcHYO4dx243k3ze5KD2otjAIvI+xhSBFNtTkdNa9vVHfZbkWosvhojpuR1KXqjEwctwAtqcEcLdgWWHJyXxBGVjy2z0B9Z+e8qy7zkhTGUKxHuwdBsMCBVLjfiopQlaGqDq3pYEvv1CJImCtlj0yPGkp+63nF/gtRTR1fI0W7/20x63Oy0zUq0IHP2BNr9ZcIyit2XnbFAVEK0UutBoybK4KWhe48D1ThcV0pq9bmrhfykRgZNAA2UOKEuzjR6TNnDgafHw== sample.key
</code></pre>

<p>So far I have the following Python code:</p>

<pre><code>from OpenSSL import crypto
k = crypto.PKey()
k.generate_key(crypto.TYPE_RSA, 4096)
print crypto.dump_privatekey(crypto.FILETYPE_PEM, k)
</code></pre>

<p>output</p>

<pre><code>-----BEGIN PRIVATE KEY-----
MIIJQgIBADANBgkqhkiG9w0BAQEFAASCCSwwggkoAgEAAoICAQDEA/w1LIvlF6ja
3Qzl2c89VdMAFpgZDVLvm0ZO4m7ktLO0jCggflkkjQTiEnjL+lHFxzp5YeP6/Y0L
+p+x5EQnL9lTYsfojDLlpQf8fR/KFinvo1a/NjjUOkstZoSnsnTGAdLgMxy+qMT0
nG7rSBZ5/e1/zj0UoUf482kzloBdBeURCC5xBQjAplLGL+Pi59f2DGQlsZoguQVX
7804fyrWzWDIQSlfV8xpZt/knfeJ8Mpui6XZTSuzJFITmJjXl+I0Vso3GKkeodjr
kN9XhAH+5Es0TDlAwpaImwDC/AwdDf2tqu2crDhB/g99SawK1QmQjuSoxac8QxXz
fPq4YK9a0pQm9IK0EWQaz2xW5cyiLFqd0eKGWTNwV8suVxjHDbBX2PWV35RThYYU
enBYhQIO6Bo5TfvxLM74PCalR6EkdYcVTlPtQgnB4DDgilWRcevPrqXkMm4IST+n
iRbPAGefzbptamgSLp6t5TGfkKkKOeLWNcnZOe3KxZ2Cii0daB1FCv6xkBiQOoqE
i/egzrbzKkrvLv2RoE3PUwLXP6Jh+sgJGhWAjRJgDbaTfnSLmKHdfM5AOVWDYvd0
cA4GakkIgD2rOa21yEOjllYwhdb2vU0uTn3YMZ4bisMArryuh3OHpakspJkvWYd5
pXa1WNx5thbTrGqqH/C53TzNMxNAswIDAQABAoICAGhMlo7UvTuRc0/B/3Luis9g
M34Ah74M0Oyd+rNO2SLo5BZV3aQsltJUFx0UJyKid5B9iie8ZsrOz5ZoLUFC7ODN
HR65mRWsRAjd33oCOkAVuwrAJxBnkaWbvxTRUBTLaEdUARk7GTh6JRLjikG3gf43
l4BCBU5M4zccjgXdN0BIOrLtX4jT3Oxlk/XQ1bmPE+LghQlpj1GKIcXA27oMMIdL
kQv9YD5TQXl0O/4x791+OrjHpeASqAYSdXnn4KwXLU4cQE1A2fxqsjnmRHEU1NsE
LuANDwnegKr/j1AxPWDYaPtX0EdlfCnhPey0ns7EvOomnpUPVwVBzRRalC43hBYn
i3At6gNQy/eZpmmL4S/7kU3y/OaFkkiq6XgpJEWd6rC6uVJ4bppJLKP/AA0D2Hdk
bPjoMhMSXb2CA28w5jkc4Xa8tCFyIyhFglqWuRZWLIqQD66GQUCJJBeAQ8B93qVa
+yNdH9DVxFsFWcXLbWCTBWhJjbrtaOEUDsDMFdUwd1tbNZS/H6L0x51afivsmSbE
JeWcYeCop1rshI/XQSO6taxDKirCxz7ecFHPlGpF+vaUibGiCheK2esSWVWBE3mb
IqHQfwnb+7YlERuM23AGcv7ONTG65SW1p2IgTWGSRhlJMgxpAxSxJdQd4N2M9T9x
JWiqmVV/TvlYXchhg0wBAoIBAQD8h1y9FeHcf5VrS7o3U693YRdAY3xvQJhllxkM
z7+hqMvP8ypEQTFNeSJ5L9Rx/eNBpbMoqE3X7SKEmgNvPyndY3zUFpcrG8zallLS
AdbItt4zeKbbd+HHwBS58e448owa7T8jeqCzJIQHOGGKS4i5EjM5EJWJyrDvwe2D
2ui9T9vK8bYf4aOSQ8ifSzcg4y9pSKEgzYYOH7Wrkmip673IO5tJiSiHNw6ghMV1
58Y1J99ZfSUR29u+V3TZS4TecVrbhLJ3n4y7t6oQT/rt+7rt2xEnom5alLVQcKHm
X9qyWNu09f6J8F+WrWgRgfKBRVqtWux6jbY1UiPcsWjE4jbzAoIBAQDGtcFlr/+G
Wup7OPYM44NSW/HGrxFpvLVRCQMfrJV4tnO9hw0ZSmv7+oZx+2vKYw2LhnS5XF1a
R37q0BpiWzXUQjnCzsNWneRHenyfOQds3vVh2RdbbTP+9+eU+nhY0W8grhEHLuHo
UqISrVdbjs8U07mbA1j7z5lq2shzVRL4HX1RE0Q6U+vchruskv6ngYTvBLMrjlO6
/yZAm731YDqiEJOwUUcSlhB9O8l0CX97wH4rxZRI7GZb2VVNUOzTmitVd0a6Lepc
5+3FoiFnw8PQINpeNZAhdGY1DrdKKE9XmkOGbz+GMjIZ7bRJ+sj3SJFzO6Ah7s5E
NQuGGc4HzL9BAoIBABcoaq7EZPQNlyxBw4/zUrIF61XySaUCLXeTha6RFqfCjP5C
9GtR9y19oFWwtzDE8aRBh86AsLLOgk3audnn1vUAfKAOekpvwDeDdZDgrku1yWa6
98JEmiXxTXVH5GrAg2ysuQ+N3VLQVHM9DmTaTG18Z8oh5TS/q74w8JEY8CL8QdG4
nNULoi51nN5OzX1smBp1mKEjd9mvur9DK+n5PmwwWytBMsBDoknCI0GOwbR6NZdF
TLL4kIxCBOswa7zidEyRPLSPox5L14Krcv2ECj5pyobx9GDGJmJ8EbzIqYuVboCH
1pHbw0hUGqkQW6bTL1+aaPlMKZt2Lue8NTlo7VUCggEAbUoYBWKoSnAEmSM6CNq1
Jn4VWy58iEhW/SvUwP3987d9rtbxeGB7RcqDWXtrzJNwJrYbyrsnSPkbr/AnIsOB
tq158VAhFamfnUSb+EK4d8Ok+F0bQJiuSWR1xXWA7XC7CyFRkj7R1yJjq5wU+PFx
qcXNRpmvvkdu3NtZ9jzrQvWNMCNFmkL/7XlZDVCHqP9OatuN473TBX1Bv7Uo5CU5
+lrdr9L0IR/SD97rLNvwdtLnUhHIPddvcML27KA+sR8RCF+i0dFhHhodp15Fuzlr
oDQBhmE1VYEcmb/vRWUoRkk9LFpRePBwp9waFbpN/9u0y8kWiLM8VT1LikT1EUsm
QQKCAQEA0tw15tVa8pch+P0N6HNBd4QbKrupMRg0B37IdD3kQiPsmo0pfKeSEm8O
kx/5FzPkPbnZtjLPszPHVHqTDXeSCMTSru1ddShy47RVKXR4RjhyK9T/wLc5cq/T
iMfVm5Iu+bfTZIt4QrHX2uNHPGusjD7NVTMiOJTbHV8rvnNozrzdbSPoQjxmewAv
5uLGcjsGfvWfbROkFcIDr/sEbr4950F/lQ6HsnxymJ6K2byAN03liOKVSUCVdSyp
bj91bAOjSMa1CohVy3uDQguG1YmZEHrOrGuIsUMfaNfwH/jpW81hVy3tJZy8mGX3
0LX5Cn0Lua+2YzXi4kWYLoQL6FVQug==
-----END PRIVATE KEY-----
</code></pre>

<p>But I also need the public key.</p>
","<p>You did this to get the private key:</p>

<pre><code>print crypto.dump_privatekey(crypto.FILETYPE_PEM, k)
</code></pre>

<p>Do <a href=""https://pyopenssl.org/en/stable/api/crypto.html#OpenSSL.crypto.dump_publickey"" rel=""nofollow noreferrer"">this</a> to get the public key:</p>

<pre><code>print crypto.dump_<b>public</b>key(crypto.FILETYPE_PEM, k)</code></pre>
","3998","<python><python-2.7><rsa><private-key><ssh-keygen>","1","3","2","2017-08-13 14:48:06","45647821","1","","7264030","","2017-08-12 07:36:47","2017-08-12 07:26:46",""
"45647699","Generate private / public SSH key with Python","<p>I just need to create a private/public key pair with Python.
I want to get the same result as with the following <code>ssh-keygen</code> command:</p>

<pre><code>ssh-keygen -t rsa -b 4096 -C ""sample.key"" -N """" -f ""key"" &amp;&amp; mv ""key"" ""key.opk""
</code></pre>

<p>which generates the following:</p>

<p>key.opk</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
MIIJKAIBAAKCAgEAoipf1PVLTUHmW48doi5DSa3z4gKgXgtU51ofNRXwhe3EQkMt
Ia3AxVGzWQKdSjWjJdJm7mxNuO/5dbiOEX4MmhwNyLTl7+LTmhDy9M1jGAq61YAN
knkqIW+qK33+k1+Sr04PCryn16GzP3I8dBt09C4cgSLsvtcMyxHjjlGnzozLVTa5
jy1c9xRiJ6yQtHJdFosJEelEapuWLdIKsJMATaYIDQfCxplClrjpcGxdnlBGTAOB
cfJ/+S9G/UK7HIrzFMtfGVQkYZQ08Dtxj3gLGx/Ghpwt1NhBtUXW9gR4dQBBcirM
kCdGoV0tWpw2yktXBi86NKycXCinITNUKVxTl98m+bRf4dj8qgsjunkTzZ4oJ7e0
Y0fQS2hH6W7jp0aY+4DZi41Hj6moTaa926Ubbl5NUJsMfslqDRnrRHB2DuHcduN5
N83uSg9qLYwCLyPsYUgRTbU5HTWvb1R32W5FqLL4aI6bkdSl6oxMHLcALanBHC3Y
Flhycl8QRlY8ts9AfWfnvKsu85IUxlCsR7sHQbDAgVS434qKUJWhqg6t6WBL79Qi
SJgrZY9MjxpKfut5xf4LUU0dXyNFu/9tMetzstM1KtCBz9gTa/WXCMordl52xQFR
CtFLrQaMmyuCloXuPA9U4XFdKavW5q4X8pEYGTQANlDihLs40ekzZw4Gnx8CAwEA
AQKCAgEAnLRZ+s42wCdoVR3NQwV1nGNugv6KvZYxq4bZFVFoJeOHfYiwuhTPbV3v
85mlKSr/xvK06LzbtlSfOXToRFsMDngBkevNLqyAUicCwDEhCwCDXwDpHJvdbIYd
aP3N3dfDRYgm3PdFMghd0Hexl3lY4QUWImv/XsMs56cXwFWD1QMVEflaAtORPGoE
F9aX1ueUsM4WK6rApExJKWoJTmwfJOnGaeEQBR3gzQlO+4acSPnFlHrmwZfWtpNL
BD1R1tkm4PdNpIo8xdaT+XlX2Y3lHYbtLvMJDt8TT/p3KTFUvatLkuls1/g8Nn51
71N5Vq7LH3zPwEr0pdHa/yg8seM4GsaMcRHRqVjkqmIyhsPM90tFFyxg963FeKX/
A6hBJbkIYlbI39+jH0fQG8v7izo1c6IKuVNL6ZKCpskQbKo07sSh7caM1Ff9p2rH
W6VUq0WJsgexaYFxyfW01NdGvNIHOHuIe4P2pjMkOV89Ycc9loTUvr9M6xOpZsn+
Cg9EUjZMUfGMq2+T2/8EJ2jzd/GRxrDOhWN1ZzO+zlOcrrI9iL3WtqNaCh5WrAuX
Tt1ym0FYWccpmS6ErUutDRhZcKGBb2nlv4B6tiYC+YbV61+5xdb/6mr3yBZ+cNP8
IsrKElHa6W2V8OiK1BfxcyjLyl30sv11/Oac6QbprPeIbfGULIECggEBAM0EsBP7
1itYXwAm9fKuX7jInRWZBZX7G11TXxLZdOMQzS/XLjLu8G/hkWFxVA1YIHwB3ep5
8gxP0W8eUWUTbSAsfLDO1JRpn8Q9tbexg2VfQ5uTVVKJY7pa4zxKMYoAw3hUNtgM
4nhLwrhsxP+XwdJn/6H8p/kLhyQwhIrW29uYF7NXduQOPOMWoJl39NmTcowj6kEP
gb++MmlTeZ6D/fgMLs4mkNN2XlSM32pUuYWMgUI//4GeLLL0HkBucnX0snKAQKyG
FbpJQ/SRvY8FAHFj8DHeZZ5kN7Ih8I2CvRjyNQ9jC62M+qtGu249K4lcgBlldhCL
FxGQ2I2bEjsn+uECggEBAMp9tdBnClFdGk4kjFwVElg41JwbhwdGTmL3SFXT3C58
/HpfmBHOim+x+cUo/ieuz3E6ycLc7MY8uZg5rDRPs6hhMvEpUiN2ndNMt0p8qj9y
4g1VBEhZeuR99FyPVYGSXD9/ELfJGpqy/MuXOTweqHM06QPA768faI959pDUy3WJ
C0mLdU5xdOMjV8/JRX8UZKp/FqkYRMxEyfIVeWgFhtIadzn/QMLR+k8mH/a1+O4I
hGsQRaCHEGrLrMcgR2wsm3OtOHB4n7/bmtKgDJOZf6o5AmE+z3joKAXScA5x8445
OQy8s2c6oaW1ucfThVXh9sOHbV+QrVia1kYPXRHr2f8CggEAapFvPVQApZNP/nJC
Eh2V4CVXkexyvN1EAiTeHJwwZ/9JyP5fI1aUYHOt8CrKeA1BBXSq98DfkorC4LGv
uYx5gunc/sLkOSkWRRmWpZ9+H2l/aRUSms6TqkCoMaSXT5bKBHgx8efwqHspAlh3
piwqMcahWIBOh+P4IVWe79RzgBf06eIjCLRl7dzLKjryaU59kl7w21TGKvcgmSMs
6rrNfuxGQB5H1cOHkQeQ8mKL9OFuJxPBKo0fyv2d4/wFP08smtwTwhoInUaMLkq7
b+Y3rrk2F5X02HpbgRqnQcedp6Pu9MqVPWc0vWcM8maVhNcyNwFId5z1JspV5nWe
6mUDwQKCAQA94k93gpYvqZGJgjf3SGVT2wJ3Nx58RatdKY/M0zO+bWpICAEUqBe8
7RqVe+K4w/8X7syMpjIin5plAHM1hYo1koccFvHIbs7rLc3ykMkDHRwi0PG/HsGl
JS1SQGf0coOI0E+Oq4Ja9wq1OeE/E2uN0gTIpeVakvHEr5SATNhlcl2lu149fAUq
CbojgbKglN3zEWYehZE5EGjbeF6jQNUkTvxTGER1hfDG0bMBFjoenTHC+rUcy0pk
KR0DukS5taRIpQ7TqLnBy960Mj/FuCrBHi0xBR4pKGJa7SZb881okOpzjxQRH2UZ
nMFLZcShK67bsP7nLvMbWi7UOIvMF1WHAoIBADU2Olebvi98b+f+r2ATXPxtIwTE
B1m710sl4D9TxqOGFNLINqdzqKj3ajQ0hSwYH7pZOksjx5MP517KcCxcA/NY3n0m
ij98qTRyW/d7PBBo0cLQBiplq8+LEgiGpEzq5irAU1IDs1UXVp3+oWovpd4HPhYq
47pQHWhxbs/3Zt+ewEw73N2uN4VRWTJj4xjP6SSP11qrSzX7br3vhL5Em+iyl7cP
PoN7GZioon9+6Oy1+P+sm4cU9X4HW9Pv4nitlYjdMMm7DBP/YgVJk4F+imJ7yQKb
KC5dOg33sE/Uz7YPRIAbnFSFudgJiMendtK9qg645DOTdufAF2Jn79e1Its=
-----END RSA PRIVATE KEY-----
</code></pre>

<p>key.pub</p>

<pre><code>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCiKl/U9UtNQeZbjx2iLkNJrfPiAqBeC1TnWh81FfCF7cRCQy0hrcDFUbNZAp1KNaMl0mbubE247/l1uI4RfgyaHA3ItOXv4tOaEPL0zWMYCrrVgA2SeSohb6orff6TX5KvTg8KvKfXobM/cjx0G3T0LhyBIuy+1wzLEeOOUafOjMtVNrmPLVz3FGInrJC0cl0WiwkR6URqm5Yt0gqwkwBNpggNB8LGmUKWuOlwbF2eUEZMA4Fx8n/5L0b9QrscivMUy18ZVCRhlDTwO3GPeAsbH8aGnC3U2EG1Rdb2BHh1AEFyKsyQJ0ahXS1anDbKS1cGLzo0rJxcKKchM1QpXFOX3yb5tF/h2PyqCyO6eRPNnignt7RjR9BLaEfpbuOnRpj7gNmLjUePqahNpr3bpRtuXk1Qmwx+yWoNGetEcHYO4dx243k3ze5KD2otjAIvI+xhSBFNtTkdNa9vVHfZbkWosvhojpuR1KXqjEwctwAtqcEcLdgWWHJyXxBGVjy2z0B9Z+e8qy7zkhTGUKxHuwdBsMCBVLjfiopQlaGqDq3pYEvv1CJImCtlj0yPGkp+63nF/gtRTR1fI0W7/20x63Oy0zUq0IHP2BNr9ZcIyit2XnbFAVEK0UutBoybK4KWhe48D1ThcV0pq9bmrhfykRgZNAA2UOKEuzjR6TNnDgafHw== sample.key
</code></pre>

<p>So far I have the following Python code:</p>

<pre><code>from OpenSSL import crypto
k = crypto.PKey()
k.generate_key(crypto.TYPE_RSA, 4096)
print crypto.dump_privatekey(crypto.FILETYPE_PEM, k)
</code></pre>

<p>output</p>

<pre><code>-----BEGIN PRIVATE KEY-----
MIIJQgIBADANBgkqhkiG9w0BAQEFAASCCSwwggkoAgEAAoICAQDEA/w1LIvlF6ja
3Qzl2c89VdMAFpgZDVLvm0ZO4m7ktLO0jCggflkkjQTiEnjL+lHFxzp5YeP6/Y0L
+p+x5EQnL9lTYsfojDLlpQf8fR/KFinvo1a/NjjUOkstZoSnsnTGAdLgMxy+qMT0
nG7rSBZ5/e1/zj0UoUf482kzloBdBeURCC5xBQjAplLGL+Pi59f2DGQlsZoguQVX
7804fyrWzWDIQSlfV8xpZt/knfeJ8Mpui6XZTSuzJFITmJjXl+I0Vso3GKkeodjr
kN9XhAH+5Es0TDlAwpaImwDC/AwdDf2tqu2crDhB/g99SawK1QmQjuSoxac8QxXz
fPq4YK9a0pQm9IK0EWQaz2xW5cyiLFqd0eKGWTNwV8suVxjHDbBX2PWV35RThYYU
enBYhQIO6Bo5TfvxLM74PCalR6EkdYcVTlPtQgnB4DDgilWRcevPrqXkMm4IST+n
iRbPAGefzbptamgSLp6t5TGfkKkKOeLWNcnZOe3KxZ2Cii0daB1FCv6xkBiQOoqE
i/egzrbzKkrvLv2RoE3PUwLXP6Jh+sgJGhWAjRJgDbaTfnSLmKHdfM5AOVWDYvd0
cA4GakkIgD2rOa21yEOjllYwhdb2vU0uTn3YMZ4bisMArryuh3OHpakspJkvWYd5
pXa1WNx5thbTrGqqH/C53TzNMxNAswIDAQABAoICAGhMlo7UvTuRc0/B/3Luis9g
M34Ah74M0Oyd+rNO2SLo5BZV3aQsltJUFx0UJyKid5B9iie8ZsrOz5ZoLUFC7ODN
HR65mRWsRAjd33oCOkAVuwrAJxBnkaWbvxTRUBTLaEdUARk7GTh6JRLjikG3gf43
l4BCBU5M4zccjgXdN0BIOrLtX4jT3Oxlk/XQ1bmPE+LghQlpj1GKIcXA27oMMIdL
kQv9YD5TQXl0O/4x791+OrjHpeASqAYSdXnn4KwXLU4cQE1A2fxqsjnmRHEU1NsE
LuANDwnegKr/j1AxPWDYaPtX0EdlfCnhPey0ns7EvOomnpUPVwVBzRRalC43hBYn
i3At6gNQy/eZpmmL4S/7kU3y/OaFkkiq6XgpJEWd6rC6uVJ4bppJLKP/AA0D2Hdk
bPjoMhMSXb2CA28w5jkc4Xa8tCFyIyhFglqWuRZWLIqQD66GQUCJJBeAQ8B93qVa
+yNdH9DVxFsFWcXLbWCTBWhJjbrtaOEUDsDMFdUwd1tbNZS/H6L0x51afivsmSbE
JeWcYeCop1rshI/XQSO6taxDKirCxz7ecFHPlGpF+vaUibGiCheK2esSWVWBE3mb
IqHQfwnb+7YlERuM23AGcv7ONTG65SW1p2IgTWGSRhlJMgxpAxSxJdQd4N2M9T9x
JWiqmVV/TvlYXchhg0wBAoIBAQD8h1y9FeHcf5VrS7o3U693YRdAY3xvQJhllxkM
z7+hqMvP8ypEQTFNeSJ5L9Rx/eNBpbMoqE3X7SKEmgNvPyndY3zUFpcrG8zallLS
AdbItt4zeKbbd+HHwBS58e448owa7T8jeqCzJIQHOGGKS4i5EjM5EJWJyrDvwe2D
2ui9T9vK8bYf4aOSQ8ifSzcg4y9pSKEgzYYOH7Wrkmip673IO5tJiSiHNw6ghMV1
58Y1J99ZfSUR29u+V3TZS4TecVrbhLJ3n4y7t6oQT/rt+7rt2xEnom5alLVQcKHm
X9qyWNu09f6J8F+WrWgRgfKBRVqtWux6jbY1UiPcsWjE4jbzAoIBAQDGtcFlr/+G
Wup7OPYM44NSW/HGrxFpvLVRCQMfrJV4tnO9hw0ZSmv7+oZx+2vKYw2LhnS5XF1a
R37q0BpiWzXUQjnCzsNWneRHenyfOQds3vVh2RdbbTP+9+eU+nhY0W8grhEHLuHo
UqISrVdbjs8U07mbA1j7z5lq2shzVRL4HX1RE0Q6U+vchruskv6ngYTvBLMrjlO6
/yZAm731YDqiEJOwUUcSlhB9O8l0CX97wH4rxZRI7GZb2VVNUOzTmitVd0a6Lepc
5+3FoiFnw8PQINpeNZAhdGY1DrdKKE9XmkOGbz+GMjIZ7bRJ+sj3SJFzO6Ah7s5E
NQuGGc4HzL9BAoIBABcoaq7EZPQNlyxBw4/zUrIF61XySaUCLXeTha6RFqfCjP5C
9GtR9y19oFWwtzDE8aRBh86AsLLOgk3audnn1vUAfKAOekpvwDeDdZDgrku1yWa6
98JEmiXxTXVH5GrAg2ysuQ+N3VLQVHM9DmTaTG18Z8oh5TS/q74w8JEY8CL8QdG4
nNULoi51nN5OzX1smBp1mKEjd9mvur9DK+n5PmwwWytBMsBDoknCI0GOwbR6NZdF
TLL4kIxCBOswa7zidEyRPLSPox5L14Krcv2ECj5pyobx9GDGJmJ8EbzIqYuVboCH
1pHbw0hUGqkQW6bTL1+aaPlMKZt2Lue8NTlo7VUCggEAbUoYBWKoSnAEmSM6CNq1
Jn4VWy58iEhW/SvUwP3987d9rtbxeGB7RcqDWXtrzJNwJrYbyrsnSPkbr/AnIsOB
tq158VAhFamfnUSb+EK4d8Ok+F0bQJiuSWR1xXWA7XC7CyFRkj7R1yJjq5wU+PFx
qcXNRpmvvkdu3NtZ9jzrQvWNMCNFmkL/7XlZDVCHqP9OatuN473TBX1Bv7Uo5CU5
+lrdr9L0IR/SD97rLNvwdtLnUhHIPddvcML27KA+sR8RCF+i0dFhHhodp15Fuzlr
oDQBhmE1VYEcmb/vRWUoRkk9LFpRePBwp9waFbpN/9u0y8kWiLM8VT1LikT1EUsm
QQKCAQEA0tw15tVa8pch+P0N6HNBd4QbKrupMRg0B37IdD3kQiPsmo0pfKeSEm8O
kx/5FzPkPbnZtjLPszPHVHqTDXeSCMTSru1ddShy47RVKXR4RjhyK9T/wLc5cq/T
iMfVm5Iu+bfTZIt4QrHX2uNHPGusjD7NVTMiOJTbHV8rvnNozrzdbSPoQjxmewAv
5uLGcjsGfvWfbROkFcIDr/sEbr4950F/lQ6HsnxymJ6K2byAN03liOKVSUCVdSyp
bj91bAOjSMa1CohVy3uDQguG1YmZEHrOrGuIsUMfaNfwH/jpW81hVy3tJZy8mGX3
0LX5Cn0Lua+2YzXi4kWYLoQL6FVQug==
-----END PRIVATE KEY-----
</code></pre>

<p>But I also need the public key.</p>
","<p>The easiest way is to use the <a href=""http://www.paramiko.org/"" rel=""nofollow noreferrer"">Paramiko library</a>. Install with </p>

<blockquote>
  <p>pip3 install paramiko</p>
</blockquote>

<p>(or ""pip install paramiko"" if using python2) Consider this short example.</p>

<pre><code>import sys
import paramiko

key = paramiko.RSAKey.generate(4096)
print(key.get_base64())  # print public key
key.write_private_key(sys.stdout)  # print private key
</code></pre>
","3998","<python><python-2.7><rsa><private-key><ssh-keygen>","1","0","2","2017-08-13 14:48:06","45647821","1","","7264030","","2017-08-12 07:36:47","2017-08-12 07:26:46",""
"20063760","How do I export a single private key from the command line in OSX?","<p>I need to export one private key (identity) from my OSX Keychain from the command line. Using <code>security</code>, I can only figure out how to export all private keys (identities) as a single pkcs12 (p12) file. How do I export a specific one?</p>
","<p><a href=""https://github.com/torsten/keychain_access"" rel=""nofollow"">https://github.com/torsten/keychain_access</a> works, but it doesn't support filtering by type. I submitted a <a href=""https://github.com/torsten/keychain_access/pull/1"" rel=""nofollow"">pull request</a> for this functionality. Until it is accepted, you can try <a href=""https://github.com/hborders/keychain_access/tree/added_type_parameter"" rel=""nofollow"">my fork</a>.</p>

<pre><code>./keychain_access -p password_for_exported_private_key ""Name of private key""
</code></pre>
","3961","<macos><command-line><keychain><private-key>","2","2","1","2013-11-19 16:03:03","20063761","0","2","","","","2013-11-19 05:17:27",""
"40063814","Convert .p10 file to a cert.pem and key.pem file","<p>I have a .p10 file and a password, however, I haven't been able to find what I need to do to convert this into a certificate and an RSA private key file, which needs to also include the bag attributes (localkeyid and friendlyname) and the key attributes as well as issuer and subject in the certificate. </p>

<p>I'm on OS X an I do have openSSL installed (if needed I can also use Ubuntu or Windows though), and was able to view the attributes and issuer/subject using openssl req -noout -text -in file.p10 but I'm not sure where to go from here. </p>

<p>I need these files for pybankid. </p>
","<p>You need to complete a few more steps in order to get what you need. </p>

<p>Let me explain the complete process to create a certificate:</p>

<ol>
<li><p>Generate a key (with or without a pass phrase).</p></li>
<li><p>Create a <em>Certificate Signing Request (CSR)</em> using your key.</p></li>
<li><p>Send your CSR to the <em>Certificate Authority (CA)</em> (in your case the partnering bank) and ask them to sign it.</p></li>
<li><p>Once you get the certificate from the CA, convert it to the desired format using you key.</p></li>
</ol>

<p>The .p10 file you have is most likely a CSR. To verify, try:</p>

<pre><code>openssl req -noout -text -in *.p10
</code></pre>

<p>and look for something like:</p>

<pre><code>Certificate Request:
Data:
    Version: 0 (0x0)...
</code></pre>

<p>You have a pass phrase, but it's not clear to me if you have access to the key used to generate the CSR, make sure you do before you send your request to the CA (step 3). Otherwise you will not be able to use the singed certificate.</p>

<p>Once you have a signed certificate (something like cert.crt), you can see the details using this command:</p>

<pre><code>openssl x509 -text -in cert.crt -noout
</code></pre>

<p>Now you are ready for the final step (4).</p>

<p>To generate a .pfx/.p12 file, use:</p>

<pre><code>openssl pkcs12 -inkey *.key -in *.crt -export -out certificate.pfx
</code></pre>

<p>to then convert certificate.pfx to .pem (including bag attributes), use:</p>

<pre><code>openssl pkcs12 -in *.pfx -out cert.pem -nodes
</code></pre>
","3918","<openssl><certificate><rsa><private-key><bankid>","0","1","1","2017-01-12 23:56:38","","7","2","","","","2016-10-15 20:20:10",""
"9429855","RSA in C# public key is same as private key?","<p>I searched a lot online but stuck with doubts in RSA public key and private key cryptography.</p>

<p>When I checked <a href=""http://msdn.microsoft.com/en-us/library/x8z5e11b.aspx"" rel=""nofollow noreferrer"">MSDN</a> site, I tried this</p>

<pre><code> RSACryptoServiceProvider rsaEncryptDecrypt = new RSACryptoServiceProvider();

 byte[] privateKeyByte = rsaEncryptDecrypt.ExportParameters(true).Modulus;
 byte[] publicKeyByte = rsaEncryptDecrypt.ExportParameters(false).Modulus;

 string privateKey = Convert.ToBase64String(privateKeyByte);
 string publicKey = Convert.ToBase64String(publicKeyByte);
</code></pre>

<p>The string public key and private key are <strong>Same</strong>!!!
Is it correct? I mean how can the strings be same? Isn't suppose to be two different keys?</p>

<p>Please correct me if I am wrong. I am confused !</p>

<p>Thank you in advance!</p>

<p><strong>UPDATE</strong></p>

<p>I mistook the parameters, </p>

<p>But then: When I saw</p>

<p><a href=""https://stackoverflow.com/questions/6592990/simple-rsa-encryption-decryption-in-net#answer-6593054%22"">https://stackoverflow.com/questions/6592990/simple-rsa-encryption-decryption-in-net#answer-6593054""</a></p>

<p>How can I get string value? because I have to store it in App.config and access it whenever I want. I mean I need to store the public and private keys both in App.config</p>

<p><strong>UPDATE2</strong></p>

<p>I am sorry, I just used ToXmlString property of RSACryptoServiceProvider's instance.
Got the private key and public key.</p>
","<p>The <code>Modulus</code> is the same for both.</p>

<p>The public key consists of the encryption exponent <code>e</code> and the modulus <code>n</code>.</p>

<p>Traditionally the decryption key consists of the decryption exponent <code>d</code> and the same modulus <code>n</code>. For better performance, it often includes some more numbers, such as the prime factors <code>p</code> and <code>q</code> of <code>n</code>.</p>

<p>To better visualize what a public key includes try <code>ToXmlString(false/true)</code></p>

<p>Public key <code>ToXmlString(false)</code>:</p>

<pre><code>&lt;RSAKeyValue&gt;
    &lt;Modulus&gt;4ZpwnuksQkLuqLczu5eJcS6aIFaPsTwGpS57/P9rviJWI7sweYZnE/eBVtPVKoanhgHxmcHyk4GbyvCnXKSzDw==&lt;/Modulus&gt;
    &lt;Exponent&gt;AQAB&lt;/Exponent&gt;
&lt;/RSAKeyValue&gt;
</code></pre>

<p>Public Key+Private Key <code>ToXmlString(true)</code>:</p>

<pre><code>&lt;RSAKeyValue&gt;
     &lt;Modulus&gt;4ZpwnuksQkLuqLczu5eJcS6aIFaPsTwGpS57/P9rviJWI7sweYZnE/eBVtPVKoanhgHxmcHyk4GbyvCnXKSzDw==&lt;/Modulus&gt;
     &lt;Exponent&gt;AQAB&lt;/Exponent&gt;
     &lt;P&gt;8lLDYv+MEBUdp0eUY3an4mlU7ovmyV6f60RJoXOB9Hs=&lt;/P&gt;
     &lt;Q&gt;7lYYef5/PvPOyrN0HGZPt/RWknfVd4c3Kc6WVEZICX0=&lt;/Q&gt;
     &lt;DP&gt;UI3GufAthWMfmm4nG/Fj2dYeD7aeH66/BpyKxYr6VmU=&lt;/DP&gt;
     &lt;DQ&gt;sBZkFx30nWo8in5zdtgQZfTcUXLAAIOiOf0sDC+w4XE=&lt;/DQ&gt;
     &lt;InverseQ&gt;GBkNq0KZ4ERaEO/oVQoQDONw6ZHixNimR5IJ7cbzKXw=&lt;/InverseQ&gt;
     &lt;D&gt;ErLyUrmQ6Y0SqvlEWHAe/DqYm8WQ82e+RUKtFDM3gvK9ygloqftx6rhn9XvM/ji1JnrDqiuepn5T3D3F+3GVQQ==&lt;/D&gt;
&lt;/RSAKeyValue&gt;
</code></pre>
","3912","<c#><rsa><public-key><private-key>","2","6","3","2012-04-20 15:27:33","9429897","1","1","-1","","2017-05-23 11:44:46","2012-02-24 11:19:06",""
"9429855","RSA in C# public key is same as private key?","<p>I searched a lot online but stuck with doubts in RSA public key and private key cryptography.</p>

<p>When I checked <a href=""http://msdn.microsoft.com/en-us/library/x8z5e11b.aspx"" rel=""nofollow noreferrer"">MSDN</a> site, I tried this</p>

<pre><code> RSACryptoServiceProvider rsaEncryptDecrypt = new RSACryptoServiceProvider();

 byte[] privateKeyByte = rsaEncryptDecrypt.ExportParameters(true).Modulus;
 byte[] publicKeyByte = rsaEncryptDecrypt.ExportParameters(false).Modulus;

 string privateKey = Convert.ToBase64String(privateKeyByte);
 string publicKey = Convert.ToBase64String(publicKeyByte);
</code></pre>

<p>The string public key and private key are <strong>Same</strong>!!!
Is it correct? I mean how can the strings be same? Isn't suppose to be two different keys?</p>

<p>Please correct me if I am wrong. I am confused !</p>

<p>Thank you in advance!</p>

<p><strong>UPDATE</strong></p>

<p>I mistook the parameters, </p>

<p>But then: When I saw</p>

<p><a href=""https://stackoverflow.com/questions/6592990/simple-rsa-encryption-decryption-in-net#answer-6593054%22"">https://stackoverflow.com/questions/6592990/simple-rsa-encryption-decryption-in-net#answer-6593054""</a></p>

<p>How can I get string value? because I have to store it in App.config and access it whenever I want. I mean I need to store the public and private keys both in App.config</p>

<p><strong>UPDATE2</strong></p>

<p>I am sorry, I just used ToXmlString property of RSACryptoServiceProvider's instance.
Got the private key and public key.</p>
","<p>Look at the documentation for <a href=""http://msdn.microsoft.com/en-us/library/system.security.cryptography.rsaparameters.aspx"" rel=""nofollow""><code>RSAParameters</code></a> - the public key is formed from <code>{e, n}</code> (<code>Exponent</code> and <code>Modulus</code>). The private key is formed from <code>{d, n}</code> (<code>D</code> and <code>Modulus</code>). so when you call <code>ExportParameters(false)</code> you <em>would</em> get the same Modulus as that's part of the <em>public</em> information - but you won't get a value for the <code>D</code> property.</p>
","3912","<c#><rsa><public-key><private-key>","2","1","3","2012-04-20 15:27:33","9429897","1","1","-1","","2017-05-23 11:44:46","2012-02-24 11:19:06",""
"9429855","RSA in C# public key is same as private key?","<p>I searched a lot online but stuck with doubts in RSA public key and private key cryptography.</p>

<p>When I checked <a href=""http://msdn.microsoft.com/en-us/library/x8z5e11b.aspx"" rel=""nofollow noreferrer"">MSDN</a> site, I tried this</p>

<pre><code> RSACryptoServiceProvider rsaEncryptDecrypt = new RSACryptoServiceProvider();

 byte[] privateKeyByte = rsaEncryptDecrypt.ExportParameters(true).Modulus;
 byte[] publicKeyByte = rsaEncryptDecrypt.ExportParameters(false).Modulus;

 string privateKey = Convert.ToBase64String(privateKeyByte);
 string publicKey = Convert.ToBase64String(publicKeyByte);
</code></pre>

<p>The string public key and private key are <strong>Same</strong>!!!
Is it correct? I mean how can the strings be same? Isn't suppose to be two different keys?</p>

<p>Please correct me if I am wrong. I am confused !</p>

<p>Thank you in advance!</p>

<p><strong>UPDATE</strong></p>

<p>I mistook the parameters, </p>

<p>But then: When I saw</p>

<p><a href=""https://stackoverflow.com/questions/6592990/simple-rsa-encryption-decryption-in-net#answer-6593054%22"">https://stackoverflow.com/questions/6592990/simple-rsa-encryption-decryption-in-net#answer-6593054""</a></p>

<p>How can I get string value? because I have to store it in App.config and access it whenever I want. I mean I need to store the public and private keys both in App.config</p>

<p><strong>UPDATE2</strong></p>

<p>I am sorry, I just used ToXmlString property of RSACryptoServiceProvider's instance.
Got the private key and public key.</p>
","<p>Hmm, I guess my comment is a good answer after all:</p>

<p>As you only transformed the modulus part of the keys and this part is there in both privat and public key it's no wonder.</p>

<p>See here: <a href=""http://en.wikipedia.org/wiki/RSA_%28algorithm%29#Key_generation"" rel=""nofollow"">http://en.wikipedia.org/wiki/RSA_%28algorithm%29#Key_generation</a></p>
","3912","<c#><rsa><public-key><private-key>","2","2","3","2012-04-20 15:27:33","9429897","1","1","-1","","2017-05-23 11:44:46","2012-02-24 11:19:06",""
"5049402","Key Size in RSA C# is not changing !","<p>I am generating key pair and store them in xml file using</p>

<pre><code>ToXmlString(true);
</code></pre>

<p>I need to set the key size to 2048
according to the MSDN the only place to do this is from the constructor of the RSACryptoServiceProvider</p>

<pre><code>    private void AssignParameter(ProviderType providerType)
    {
        CspParameters cspParams;

        cspParams = new CspParameters((int)providerType);
        cspParams.KeyContainerName = RSAEncryption.containerName;
        cspParams.Flags = CspProviderFlags.UseMachineKeyStore;
        cspParams.ProviderName = ""Microsoft Strong Cryptographic Provider"";
        cspParams.KeyNumber = (int)KeyNumber.Exchange;

        this.rsa = new RSACryptoServiceProvider(2048, cspParams);
    }
</code></pre>

<p>when I check the key size using</p>

<pre><code>int x = this.rsa.KeySize;
</code></pre>

<p>I always get 1024
so whats the wrong here??</p>
","<p>I've seen this before, try changing the container name or try </p>

<pre><code>using (this.rsa = new RSACryptoServiceProvider(2048, cspParams)) 
{

}
</code></pre>

<p>or <code>this.rsa.Clear();</code> after you are done with it.</p>

<p>If you already have a container with the same name it will re-use the container I believe.</p>
","3904","<c#><rsa><encryption-asymmetric><private-key>","3","3","2","2016-03-27 16:00:52","","3","1","","","","2011-02-19 07:01:39",""
"5049402","Key Size in RSA C# is not changing !","<p>I am generating key pair and store them in xml file using</p>

<pre><code>ToXmlString(true);
</code></pre>

<p>I need to set the key size to 2048
according to the MSDN the only place to do this is from the constructor of the RSACryptoServiceProvider</p>

<pre><code>    private void AssignParameter(ProviderType providerType)
    {
        CspParameters cspParams;

        cspParams = new CspParameters((int)providerType);
        cspParams.KeyContainerName = RSAEncryption.containerName;
        cspParams.Flags = CspProviderFlags.UseMachineKeyStore;
        cspParams.ProviderName = ""Microsoft Strong Cryptographic Provider"";
        cspParams.KeyNumber = (int)KeyNumber.Exchange;

        this.rsa = new RSACryptoServiceProvider(2048, cspParams);
    }
</code></pre>

<p>when I check the key size using</p>

<pre><code>int x = this.rsa.KeySize;
</code></pre>

<p>I always get 1024
so whats the wrong here??</p>
","<p>You need first to clear the existing container like this:</p>

<pre><code>rsa.PersistKeyInCsp = false;
rsa.Clear();
</code></pre>

<p>Then it should work with you.
Don't forget to set:</p>

<pre><code>rsa.PersistKeyInCsp = true;
</code></pre>
","3904","<c#><rsa><encryption-asymmetric><private-key>","3","0","2","2016-03-27 16:00:52","","3","1","","","","2011-02-19 07:01:39",""
"29789984","How to decrypt a pkcs8 encrypted private key using bouncy castle?","<p>i am trying to decrypt a pkcs8 encrypted private key using bouncy castle library. I parsed the file containing the private key using <code>PEMParser</code> provided by bouncy castle. I got <code>PKCS8EncryptedPrivateKeyInfo</code> object. I am unable to get the <code>PrivateKeyInfo</code> object from this.
I am getting the following exception while trying to decrypt.</p>

<blockquote>
  <p>org.bouncycastle.pkcs.PKCSException: unable to read encrypted data: 1.2.840.113549.1.5.13 not available: No such provider: 1.2.840.113549.1.5.13</p>
</blockquote>

<p>here is the code which I used</p>

<pre><code>PEMParser parser = new PEMParser(br);
PKCS8EncryptedPrivateKeyInfo pair =       (PKCS8EncryptedPrivateKeyInfo)parser.readObject();
JceOpenSSLPKCS8DecryptorProviderBuilder jce = new JceOpenSSLPKCS8DecryptorProviderBuilder();
                jce.setProvider(""1.2.840.113549.1.5.13"");
                InputDecryptorProvider decProv = jce.build(password.toCharArray());
                PrivateKeyInfo info = pair.decryptPrivateKeyInfo(decProv);
</code></pre>
","<p>Have you tried with jce.setProvider(""BC""); instead of  jce.setProvider(""1.2.840.113549.1.5.13"");</p>

<p><strong>Edit to add solution provided by @PeterDettman :</strong></p>

<p>In addition to use jce.setProvider(""BC""); also install the BC provider <a href=""http://bouncycastle.org/wiki/display/JA1/Provider+Installation"" rel=""nofollow noreferrer"">bouncycastle.org/wiki/display/JA1/Provider+Installation</a></p>
","3864","<java><encryption><bouncycastle><private-key>","5","5","1","2019-02-05 09:51:49","","1","","184201","","2019-02-05 09:51:49","2015-04-22 06:56:40",""
"45417379","Reading SSH Private key from application.yaml file in spring-boot?","<p>I have a camel application which connects to SFTP server using SSH Private key. If i read the id_rsa file from a file, i was able to connect to the server. As given in this <a href=""https://github.com/apache/camel/blob/3505e718db48cc0d8be5b47f6c4030c958d93a5f/components/camel-ftp/src/test/java/org/apache/camel/component/file/remote/sftp/SftpKeyConsumeTest.java"" rel=""nofollow noreferrer"">example</a>, it is working with loading from a file.</p>

<pre><code>registry.put(""privateKey"", getBytesFromFile(""./src/main/resources/id_rsa""));

private byte[] getBytesFromFile(String filename) throws IOException {
    InputStream input;
    input = new FileInputStream(new File(filename));
    ByteArrayOutputStream output = new ByteArrayOutputStream();
    IOHelper.copyAndCloseInput(input, output);
    return output.toByteArray();
}
</code></pre>

<p>I want to provide the private key dynamically at runtime. That means in application.yaml in spring-boot application, which will be replaced by docker container environment variables.</p>

<pre><code>@Value(""${sftp_private_key}"")
private String privateKey;

registry.put(""privateKey"", privateKey.getBytes());
</code></pre>

<p>I am getting this exception</p>

<pre><code>org.apache.camel.component.file.GenericFileOperationFailedException: Cannot connect to sftp://&lt;user&gt;@&lt;sftp_server&gt;:22
    at org.apache.camel.component.file.remote.SftpOperations.connect(SftpOperations.java:146) ~[camel-ftp-2.19.1.jar:2.19.1]
    at org.apache.camel.component.file.remote.RemoteFileConsumer.connectIfNecessary(RemoteFileConsumer.java:203) [camel-ftp-2.19.1.jar:2.19.1]
    at org.apache.camel.component.file.remote.RemoteFileConsumer.recoverableConnectIfNecessary(RemoteFileConsumer.java:171) [camel-ftp-2.19.1.jar:2.19.1]
    at org.apache.camel.component.file.remote.RemoteFileConsumer.prePollCheck(RemoteFileConsumer.java:59) [camel-ftp-2.19.1.jar:2.19.1]
    at org.apache.camel.component.file.GenericFileConsumer.poll(GenericFileConsumer.java:110) [camel-core-2.19.1.jar:2.19.1]
    at org.apache.camel.impl.ScheduledPollConsumer.doRun(ScheduledPollConsumer.java:174) [camel-core-2.19.1.jar:2.19.1]
    at org.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:101) [camel-core-2.19.1.jar:2.19.1]
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_121]
    at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [na:1.8.0_121]
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_121]
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [na:1.8.0_121]
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_121]
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_121]
    at java.lang.Thread.run(Thread.java:745) [na:1.8.0_121]
Caused by: com.jcraft.jsch.JSchException: invalid privatekey: [B@5e200110
    at com.jcraft.jsch.KeyPair.load(KeyPair.java:757) ~[jsch-0.1.54.jar:na]
    at com.jcraft.jsch.IdentityFile.newInstance(IdentityFile.java:46) ~[jsch-0.1.54.jar:na]
    at com.jcraft.jsch.JSch.addIdentity(JSch.java:442) ~[jsch-0.1.54.jar:na]
    at org.apache.camel.component.file.remote.SftpOperations.createSession(SftpOperations.java:220) ~[camel-ftp-2.19.1.jar:2.19.1]
    at org.apache.camel.component.file.remote.SftpOperations.connect(SftpOperations.java:115) ~[camel-ftp-2.19.1.jar:2.19.1]
    ... 13 common frames omitted
</code></pre>

<p>After some debugging, i understand that its an issue with <code>\n characters</code>. If i read from a file the private key contains \n characters. But if i read from .yaml file, it does not have \n characters. I replaced all new lines into \n characters and converted it into single line. Still it's not working.</p>

<p>How can i provide this value in <code>application.yaml</code> which is equivalent to reading from that file?</p>
","<p>Maybe it will be helpful: </p>

<p>Here is a part of my code which read PublicKey from given path:</p>

<pre><code>import com.google.common.io.BaseEncoding;
import java.io.DataInputStream;
import java.io.InputStream;
import java.security.KeyFactory;
import java.security.PublicKey;
import java.security.spec.X509EncodedKeySpec;

public class PublicKeyReader {

    public static PublicKey get(String filename)
            throws Exception {

        InputStream is = PublicKeyReader.class.getResourceAsStream(""/keystore/"" + filename);

        DataInputStream dis = new DataInputStream(is);

        byte[] keyBytes = new byte[is.available()];
        dis.readFully(keyBytes);
        dis.close();

        String base64 = new String(keyBytes);
        X509EncodedKeySpec spec
                = new X509EncodedKeySpec(BaseEncoding.base64().decode(base64));
        KeyFactory kf = KeyFactory.getInstance(""RSA"");
        return kf.generatePublic(spec);
    }
}
</code></pre>
","3840","<java><spring-boot><character-encoding><apache-camel><private-key>","2","-2","2","2019-05-15 05:02:06","45436412","1","","1986826","","2017-08-01 06:02:17","2017-07-31 13:31:51",""
"45417379","Reading SSH Private key from application.yaml file in spring-boot?","<p>I have a camel application which connects to SFTP server using SSH Private key. If i read the id_rsa file from a file, i was able to connect to the server. As given in this <a href=""https://github.com/apache/camel/blob/3505e718db48cc0d8be5b47f6c4030c958d93a5f/components/camel-ftp/src/test/java/org/apache/camel/component/file/remote/sftp/SftpKeyConsumeTest.java"" rel=""nofollow noreferrer"">example</a>, it is working with loading from a file.</p>

<pre><code>registry.put(""privateKey"", getBytesFromFile(""./src/main/resources/id_rsa""));

private byte[] getBytesFromFile(String filename) throws IOException {
    InputStream input;
    input = new FileInputStream(new File(filename));
    ByteArrayOutputStream output = new ByteArrayOutputStream();
    IOHelper.copyAndCloseInput(input, output);
    return output.toByteArray();
}
</code></pre>

<p>I want to provide the private key dynamically at runtime. That means in application.yaml in spring-boot application, which will be replaced by docker container environment variables.</p>

<pre><code>@Value(""${sftp_private_key}"")
private String privateKey;

registry.put(""privateKey"", privateKey.getBytes());
</code></pre>

<p>I am getting this exception</p>

<pre><code>org.apache.camel.component.file.GenericFileOperationFailedException: Cannot connect to sftp://&lt;user&gt;@&lt;sftp_server&gt;:22
    at org.apache.camel.component.file.remote.SftpOperations.connect(SftpOperations.java:146) ~[camel-ftp-2.19.1.jar:2.19.1]
    at org.apache.camel.component.file.remote.RemoteFileConsumer.connectIfNecessary(RemoteFileConsumer.java:203) [camel-ftp-2.19.1.jar:2.19.1]
    at org.apache.camel.component.file.remote.RemoteFileConsumer.recoverableConnectIfNecessary(RemoteFileConsumer.java:171) [camel-ftp-2.19.1.jar:2.19.1]
    at org.apache.camel.component.file.remote.RemoteFileConsumer.prePollCheck(RemoteFileConsumer.java:59) [camel-ftp-2.19.1.jar:2.19.1]
    at org.apache.camel.component.file.GenericFileConsumer.poll(GenericFileConsumer.java:110) [camel-core-2.19.1.jar:2.19.1]
    at org.apache.camel.impl.ScheduledPollConsumer.doRun(ScheduledPollConsumer.java:174) [camel-core-2.19.1.jar:2.19.1]
    at org.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:101) [camel-core-2.19.1.jar:2.19.1]
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_121]
    at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [na:1.8.0_121]
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_121]
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [na:1.8.0_121]
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_121]
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_121]
    at java.lang.Thread.run(Thread.java:745) [na:1.8.0_121]
Caused by: com.jcraft.jsch.JSchException: invalid privatekey: [B@5e200110
    at com.jcraft.jsch.KeyPair.load(KeyPair.java:757) ~[jsch-0.1.54.jar:na]
    at com.jcraft.jsch.IdentityFile.newInstance(IdentityFile.java:46) ~[jsch-0.1.54.jar:na]
    at com.jcraft.jsch.JSch.addIdentity(JSch.java:442) ~[jsch-0.1.54.jar:na]
    at org.apache.camel.component.file.remote.SftpOperations.createSession(SftpOperations.java:220) ~[camel-ftp-2.19.1.jar:2.19.1]
    at org.apache.camel.component.file.remote.SftpOperations.connect(SftpOperations.java:115) ~[camel-ftp-2.19.1.jar:2.19.1]
    ... 13 common frames omitted
</code></pre>

<p>After some debugging, i understand that its an issue with <code>\n characters</code>. If i read from a file the private key contains \n characters. But if i read from .yaml file, it does not have \n characters. I replaced all new lines into \n characters and converted it into single line. Still it's not working.</p>

<p>How can i provide this value in <code>application.yaml</code> which is equivalent to reading from that file?</p>
","<p>As explained <a href=""https://stackoverflow.com/questions/3790454/in-yaml-how-do-i-break-a-string-over-multiple-lines/21699210#21699210"">here</a>, it is working with <code>|</code></p>

<p>Example <code>application.yaml</code>:</p>

<pre><code>sftp_private_key: |
                  ----BEGIN RSA PRIVATE KEY-----
                     Remaining part of key
                  -----END RSA PRIVATE KEY-----
</code></pre>
","3840","<java><spring-boot><character-encoding><apache-camel><private-key>","2","3","2","2019-05-15 05:02:06","45436412","1","","1986826","","2017-08-01 06:02:17","2017-07-31 13:31:51",""
"20545078","How do I convert a private key from hexadecimal to a PrivateKey object?","<p>I generated the following key hexstring for my private key: </p>

<p><code>""30820278020100300d06092a864886f70d0101010500048202623082025e02010002818100cabba8c50391583b66de7b4a70203674f8fc01012f66763db207fc09233cf69b9b6c8ee3c1a5ff1cc7f50df8a5ccf3aad4eddb66c0cb4a92d200e6b66803009d3095bd2cd94b6a4a47609c0bdade4f985f241d2f7d2b1b3ea14effb6714891f946ce4fa7c27f046ea112c145bad943788debf36c6ae7170a1f5bc0e6990827d1020301000102818100a82dfb38ccd7e3290c125e9706e34229d16f44ea15c75b299d2a1084080e87c9d8aabaf2e7ef6bee15570e2b0a68366fae4a4fab331eb21390511d138ebf86de658b9992c8c9e7207c73c983d944dff1f4aa5a472f83a477f6477410217720640acaeb439bf233dfdb2246e8e4e0fe813b6b691dc5b079bc9a0b9fa772dabacd024100ead2828c300bc418bede7ece9a9c011c26a99b750578ecb94a15a97cc6f6e152379955b46d6438bb015c94df0af019ca68cc06c0a07d496ecf52498d0548ca4b024100dd0448cdc4e65a62bb6c2d25a812e9809ed3842ca562bed13b8ee49af80a5338929bf3962674c1cb50417796e6a2e3462d2a094dd55af0bbc7c9df141078c4d302401e9ee8cb2310c5b77c5c4328e9dc6200abc1fe359a4b14836cf7ba2c3d3dc0501a53f26b1ec0aced25d64ecb6effb43d42c128384235543810ece80e6d9bfa55024100c028bd73ca41cd4c12501760aa24e747a0cf9e178323bb6c073051aa3b061f1d0cbaf2aa157d6610f312387bc6c2d07f6f3d2121bee276738d5d02cb5b16e569024100b07310d8ee67ea67de5d2906cdd50376d45095a5c5320d6c558e9409e4b3f4911464450b7e30279d4c167a44e0a4b83e71423c322ffecb063dea26fb055a1608""</code></p>

<p>How can I convert this back to a private key object in Java? I have tried converting this string back to a byte array but I'm clueless as to how I should continue.</p>

<p>This is how I converted my private key to a hex string:</p>

<pre><code>public static String getHexString(byte[] b){
  String result = """";
  for (int i = 0; i &lt; b.length; i++){
    result += Integer.toString((b[i] &amp; 0xff) + 0x100, 16).substring(1);
   }
   return result;
 }
</code></pre>

<p>I then used the <code>getEncoded()</code> method on my private key as input for this method.</p>
","<p>When you call <code>getEncoded()</code> on an RSA private key, most providers will return the private key in PKCS #8 format. This is the case with your example.</p>

<p>To reverse the process, use a <a href=""http://docs.oracle.com/javase/7/docs/api/java/security/KeyFactory.html"" rel=""nofollow""><code>KeyFactory</code></a> with a <a href=""http://docs.oracle.com/javase/7/docs/api/java/security/spec/PKCS8EncodedKeySpec.html"" rel=""nofollow""><code>PKCS8EncodedKeySpec</code></a> as follows:</p>

<pre><code>String key = ""30820278020...1608""; // omitted for brevity

byte[] keyData = DatatypeConverter.parseHexBinary(key);
KeyFactory factory = KeyFactory.getInstance(""RSA"");
RSAPrivateKey privateKey = (RSAPrivateKey) factory
    .generatePrivate(new PKCS8EncodedKeySpec(keyData));

Signature signature = Signature.getInstance(""SHA512withRSA"");
signature.initSign(privateKey);
signature.update(""Hello, World"".getBytes());
System.out.println(DatatypeConverter.printHexBinary(signature.sign()));
</code></pre>
","3795","<java><rsa><private-key><asn.1>","1","4","1","2013-12-12 14:06:41","20545592","2","0","474189","","2013-12-12 14:05:31","2013-12-12 13:38:24",""
"22487792","Login to server using WinSCP.com (cmd line) without password","<p>I am using Windows machine and I have WinSCP installed. </p>

<p>I am writing a script that logs in to the server and downloads file.</p>

<p>I do not want to store account password in the script. Is there anyway I can login to server with some-kind of host-key or private-key or something.</p>
","<p>Yes, you can use the public key authentication. But for that you still have to store the private key along with your script. Normally the key is encrypted with a passphrase. To automate the login, you would have to store the passphrase to the script file anyway (using the <a href=""https://winscp.net/eng/docs/scriptcommand_open"" rel=""nofollow noreferrer""><code>-passphrase</code> switch</a>). So still, if anyone gets an access to your machine, he/she is still able to steal your identity, just as with the password. Though there's an advantage. You can have multiple keys (while only one password). If you use a special key for the script and the key is ever compromised, you can revoke it, while keeping the other keys.</p>

<p>Note that, if you are not absolutely sure of the physical and electronic security of the system on which you are connecting, there's hardly any way to setup an automatic authentication. If you are sure about the security, storing password in the script file is just ok.  </p>

<p>Anyway, your question is mostly duplicate of:<br>
<a href=""https://stackoverflow.com/q/7260/850848"">How do I setup Public-Key Authentication?</a></p>

<p>For WinSCP specifics, see the guide to <a href=""https://winscp.net/eng/docs/guide_public_key"" rel=""nofollow noreferrer"">Setting up SSH public key authentication</a>.</p>

<p>See also the WinSCP guide to <a href=""https://winscp.net/eng/docs/guide_protecting_credentials_for_automation"" rel=""nofollow noreferrer"">Protecting credentials used for automation</a>.</p>
","3790","<authentication><ssh><private-key><winscp>","1","3","2","2017-10-11 12:03:24","22497709","3","1","850848","","2014-03-19 06:13:29","2014-03-18 18:19:50",""
"22487792","Login to server using WinSCP.com (cmd line) without password","<p>I am using Windows machine and I have WinSCP installed. </p>

<p>I am writing a script that logs in to the server and downloads file.</p>

<p>I do not want to store account password in the script. Is there anyway I can login to server with some-kind of host-key or private-key or something.</p>
","<p>I had a similar issue on windows so I used Putty instead <a href=""http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html"" rel=""nofollow"">http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html</a></p>

<p>If you need to generate a public key then use: <a href=""http://the.earth.li/~sgtatham/putty/latest/x86/puttygen.exe"" rel=""nofollow"">http://the.earth.li/~sgtatham/putty/latest/x86/puttygen.exe</a></p>

<p>I gave the public key + password to whoever owned the SFTP server to install it on his side.
I saved the private key on my side lest say on ""C:\privatekey.ppk""
You don't use password on your script but you link to the private which you must have on you machine.</p>

<p>Then, when you want to automate a batch to download from the FTP server the Pageant in order to load the private key into session <a href=""http://the.earth.li/~sgtatham/putty/latest/x86/pageant.exe"" rel=""nofollow"">http://the.earth.li/~sgtatham/putty/latest/x86/pageant.exe</a></p>

<p>Then use the PSFTP to connect and perform actions <a href=""http://the.earth.li/~sgtatham/putty/latest/x86/psftp.exe"" rel=""nofollow"">http://the.earth.li/~sgtatham/putty/latest/x86/psftp.exe</a></p>

<p>So here is sample code for the batch file:</p>

<pre><code>!--Loading the key to session--!
@C:\pageant.exe ""C:\privatekey.ppk""
!--Calling the PSFTP.exe with the uaser and sftp address + command list file--!
@C:\psftp user@your.server.address -b C:\sftp_cmd.txt
</code></pre>

<p>Command list file (sftp_cmd.txt) will like like this:</p>

<pre><code>mget ""*.*"" !--downloading every thing
!--more commands can follow here
close
</code></pre>

<p>Now, all you need to to schedule it in scheduled tasks *I wish it was simple as unix's cron job....</p>
","3790","<authentication><ssh><private-key><winscp>","1","0","2","2017-10-11 12:03:24","22497709","3","1","850848","","2014-03-19 06:13:29","2014-03-18 18:19:50",""
"17182848","Best approch to decode the PKCS12 file and get the encrypted private key from it using JavaScript","<p>Please suggest any idea to decode the PKCS12 file and get the encrypted private key from it using JavaScript. I know that it can be done very easily using Java Keytool command and Java Security package. But I want it to be done by Java Script. Bellow is my actual requirement.</p>

<p>I have a "".p12"" extention file which is one of the formats of pkcs12.
It should be decoded first and need to trace out the decoded file where exactly the encrypted Private key is placed.
Need to get that encrypted Private key and Decrypt it and send it to the receiver.
And all this Should be done only in JAVASCRIPT.</p>
","<p>I think this might be what you are looking for:</p>

<p>""A native implementation of TLS (and various other cryptographic tools) in JavaScript.""</p>

<p><a href=""https://github.com/digitalbazaar/forge#pkcs12"" rel=""nofollow"">https://github.com/digitalbazaar/forge#pkcs12</a></p>

<p>It sounds like this example is close:</p>

<pre><code>// decode p12 from base64
var p12Der = forge.util.decode64(p12b64);
// get p12 as ASN.1 object
var p12Asn1 = forge.asn1.fromDer(p12Der);
// decrypt p12
var p12 = forge.pkcs12.pkcs12FromAsn1(p12Asn1, 'password');
// look at pkcs12.safeContents

// generate p12, base64 encode
var p12Asn1 = forge.pkcs12.toPkcs12Asn1(
  privateKey, certificateChain, 'password');
var p12Der = forge.asn1.ToDer(p12Asn1).getBytes();
var p12b64 = forge.util.encode64(p12Der);
</code></pre>

<p>Rgds....Hoonto/Matt</p>
","3773","<javascript><decode><public-key-encryption><private-key>","4","4","3","2019-10-03 22:15:31","","0","","2099644","","2013-06-19 04:27:45","2013-06-19 04:24:55",""
"17182848","Best approch to decode the PKCS12 file and get the encrypted private key from it using JavaScript","<p>Please suggest any idea to decode the PKCS12 file and get the encrypted private key from it using JavaScript. I know that it can be done very easily using Java Keytool command and Java Security package. But I want it to be done by Java Script. Bellow is my actual requirement.</p>

<p>I have a "".p12"" extention file which is one of the formats of pkcs12.
It should be decoded first and need to trace out the decoded file where exactly the encrypted Private key is placed.
Need to get that encrypted Private key and Decrypt it and send it to the receiver.
And all this Should be done only in JAVASCRIPT.</p>
","<p><strong>This will work Perfectly</strong> </p>

<pre><code>   // get p12 as ASN.1 object

  var p12Asn1 = forge.asn1.fromDer(buffer);
  // decrypt p12 using the password 'password'
  var p12 = forge.pkcs12.pkcs12FromAsn1(p12Asn1, password);
  // get bags by type
  var certBags = p12.getBags({bagType: forge.pki.oids.certBag});
  var pkeyBags = p12.getBags({bagType: forge.pki.oids.pkcs8ShroudedKeyBag});
  // fetching certBag
  var certBag = certBags[forge.pki.oids.certBag][0];
  // fetching keyBag
  var keybag = pkeyBags[forge.pki.oids.pkcs8ShroudedKeyBag][0];
  // generate pem from private key
  var privateKeyPem = forge.pki.privateKeyToPem(keybag.key);
  // generate pem from cert
  var certificate = forge.pki.certificateToPem(certBag.cert);
</code></pre>
","3773","<javascript><decode><public-key-encryption><private-key>","4","1","3","2019-10-03 22:15:31","","0","","2099644","","2013-06-19 04:27:45","2013-06-19 04:24:55",""
"17182848","Best approch to decode the PKCS12 file and get the encrypted private key from it using JavaScript","<p>Please suggest any idea to decode the PKCS12 file and get the encrypted private key from it using JavaScript. I know that it can be done very easily using Java Keytool command and Java Security package. But I want it to be done by Java Script. Bellow is my actual requirement.</p>

<p>I have a "".p12"" extention file which is one of the formats of pkcs12.
It should be decoded first and need to trace out the decoded file where exactly the encrypted Private key is placed.
Need to get that encrypted Private key and Decrypt it and send it to the receiver.
And all this Should be done only in JAVASCRIPT.</p>
","<p>Thanks to the examples from @Ujjawal and @hoonto I was able to get the following working well. </p>

<pre><code>const decodePKCS12 = (
  file // Dom File object
) =&gt; {
  return new Promise((resolve, reject) =&gt; {
    const reader = new FileReader()
    reader.onload = evt =&gt; {
      try {
        const binary = evt &amp;&amp; evt.target ? evt.target.result : null
        if (!binary) {
          reject(new Error('No file data'))
        }
        const p12Asn1 = asn1.fromDer(binary)
        const p12 = pkcs12.pkcs12FromAsn1(p12Asn1)

        const certBags = p12.getBags({bagType: pki.oids.certBag})
        const pkeyBags = p12.getBags({bagType: pki.oids.pkcs8ShroudedKeyBag})

        const certBag = certBags[pki.oids.certBag][0]
        const keybag = pkeyBags[pki.oids.pkcs8ShroudedKeyBag][0]

        const certificate = pki.certificateToPem(certBag.cert)
        const privateKey = pki.privateKeyToPem(keybag.key)
        resolve({certificate, privateKey})
      } catch (e) {
        reject(e)
      }
    }
    reader.onerror = reject
    reader.readAsBinaryString(file)
  })
}
</code></pre>
","3773","<javascript><decode><public-key-encryption><private-key>","4","0","3","2019-10-03 22:15:31","","0","","2099644","","2013-06-19 04:27:45","2013-06-19 04:24:55",""
"9378150","How to get the private key from a separate file?","<p>I have an Apache (xampp/wamp) server that provides a SSL connection on port 443.
It uses two certificate files: server.cert and server.key when the latter conains the private key.</p>

<p>I have another server configured to listen to requests on port 843 (flash policy stuff) and response to a certain request with some text reply written in C# which runs separately.</p>

<p>In order to achieve SSL connectivity, i use a flex object called SecureSocket which allowes that, however, it uses the original servers certificate in order to encrypt the request.</p>

<p>My goal is to teach my 843 C# server to decrypt the sent data and encrypt the reply and for this i'm using the X509Certificate object in C#.</p>

<p>However, since the pub and priv keys are on different files, i'm getting FALSE on the following:</p>

<pre><code>string text = System.IO.File.ReadAllText(@""C:\xampp\apache\conf\ssl.crt\server.crt"");
UTF8Encoding encoding = new System.Text.UTF8Encoding();
byte[] byteCert = encoding.GetBytes(text);
X509Certificate2 uberCert = new X509Certificate2();
uberCert.Import(byteCert);
Console.WriteLine(""Has privateKey:"" + uberCert.HasPrivateKey.ToString());
Console.WriteLine(""PrivateKey: \n"" + uberCert.PrivateKey);
</code></pre>

<p>Obviously, the False on uberCert.HasPrivateKey comes from the fact that the private key is on a different file, so my questions are: </p>

<p>1.How can i read the private key using the X509CErtificate2 object?
2.How can i use the public key in order to decrypt the received message and how to re-encrypt it with the private key (in order to send the encrypted response back) ?</p>

<p>Thanks in advance,</p>

<p>Mike.</p>
","<p>The private key is likely <a href=""http://www.faqs.org/qa/qa-14736.html"" rel=""nofollow"">PEM encoded</a> <a href=""http://www.rsa.com/rsalabs/node.asp?id=2130"" rel=""nofollow"">PKCS#8</a> structure.</p>

<p>The Mono project provides code to read this <a href=""https://github.com/mono/mono/blob/master/mcs/class/Mono.Security/Mono.Security.Cryptography/PKCS8.cs"" rel=""nofollow"">format</a> (among other) in the <a href=""https://github.com/mono/mono/tree/master/mcs/class/Mono.Security"" rel=""nofollow"">Mono.Security.dll</a> assembly. This assembly is purely managed and will work on Windows, Linux or OSX.</p>
","3728","<c#><openssl><private-key><x509certificate2><public-key>","2","0","3","2017-07-17 20:25:30","","0","","41071","","2012-02-21 14:55:50","2012-02-21 13:07:51",""
"9378150","How to get the private key from a separate file?","<p>I have an Apache (xampp/wamp) server that provides a SSL connection on port 443.
It uses two certificate files: server.cert and server.key when the latter conains the private key.</p>

<p>I have another server configured to listen to requests on port 843 (flash policy stuff) and response to a certain request with some text reply written in C# which runs separately.</p>

<p>In order to achieve SSL connectivity, i use a flex object called SecureSocket which allowes that, however, it uses the original servers certificate in order to encrypt the request.</p>

<p>My goal is to teach my 843 C# server to decrypt the sent data and encrypt the reply and for this i'm using the X509Certificate object in C#.</p>

<p>However, since the pub and priv keys are on different files, i'm getting FALSE on the following:</p>

<pre><code>string text = System.IO.File.ReadAllText(@""C:\xampp\apache\conf\ssl.crt\server.crt"");
UTF8Encoding encoding = new System.Text.UTF8Encoding();
byte[] byteCert = encoding.GetBytes(text);
X509Certificate2 uberCert = new X509Certificate2();
uberCert.Import(byteCert);
Console.WriteLine(""Has privateKey:"" + uberCert.HasPrivateKey.ToString());
Console.WriteLine(""PrivateKey: \n"" + uberCert.PrivateKey);
</code></pre>

<p>Obviously, the False on uberCert.HasPrivateKey comes from the fact that the private key is on a different file, so my questions are: </p>

<p>1.How can i read the private key using the X509CErtificate2 object?
2.How can i use the public key in order to decrypt the received message and how to re-encrypt it with the private key (in order to send the encrypted response back) ?</p>

<p>Thanks in advance,</p>

<p>Mike.</p>
","<p>You can't in straight .NET.</p>

<p>You can either use BouncyCastle (see this answer: <a href=""https://stackoverflow.com/questions/243646/how-to-read-a-pem-rsa-private-key-from-net"">How to read a PEM RSA private key from .NET</a>) or use a PKCS12 container instead for the username + password, which you can create using OpenSSL's tools from the PEM files.</p>
","3728","<c#><openssl><private-key><x509certificate2><public-key>","2","0","3","2017-07-17 20:25:30","","0","","41071","","2012-02-21 14:55:50","2012-02-21 13:07:51",""
"9378150","How to get the private key from a separate file?","<p>I have an Apache (xampp/wamp) server that provides a SSL connection on port 443.
It uses two certificate files: server.cert and server.key when the latter conains the private key.</p>

<p>I have another server configured to listen to requests on port 843 (flash policy stuff) and response to a certain request with some text reply written in C# which runs separately.</p>

<p>In order to achieve SSL connectivity, i use a flex object called SecureSocket which allowes that, however, it uses the original servers certificate in order to encrypt the request.</p>

<p>My goal is to teach my 843 C# server to decrypt the sent data and encrypt the reply and for this i'm using the X509Certificate object in C#.</p>

<p>However, since the pub and priv keys are on different files, i'm getting FALSE on the following:</p>

<pre><code>string text = System.IO.File.ReadAllText(@""C:\xampp\apache\conf\ssl.crt\server.crt"");
UTF8Encoding encoding = new System.Text.UTF8Encoding();
byte[] byteCert = encoding.GetBytes(text);
X509Certificate2 uberCert = new X509Certificate2();
uberCert.Import(byteCert);
Console.WriteLine(""Has privateKey:"" + uberCert.HasPrivateKey.ToString());
Console.WriteLine(""PrivateKey: \n"" + uberCert.PrivateKey);
</code></pre>

<p>Obviously, the False on uberCert.HasPrivateKey comes from the fact that the private key is on a different file, so my questions are: </p>

<p>1.How can i read the private key using the X509CErtificate2 object?
2.How can i use the public key in order to decrypt the received message and how to re-encrypt it with the private key (in order to send the encrypted response back) ?</p>

<p>Thanks in advance,</p>

<p>Mike.</p>
","<p>I've created a small helper NuGet package (based on <a href=""http://www.jensign.com/opensslkey/opensslkey.cs"" rel=""nofollow noreferrer"">opensslkey</a>) to create a <strong>X509 certificate based</strong> on <strong>public key</strong> and <strong>private (rsa) key</strong>.</p>

<pre><code>// Generate with: openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -keyout private.key -out certificate_pub.crt
string certificateText = File.ReadAllText(""certificate_pub.crt"");
string privateKeyText = File.ReadAllText(""private.key"");

ICertificateProvider provider = new CertificateFromFileProvider(certificateText, privateKeyText);
X509Certificate2 certificate = provider.Certificate;

// Example: use the PrivateKey from the certificate above for signing a JWT token using Jose.Jwt:
string token = Jose.JWT.Encode(payload, certificate.PrivateKey, JwsAlgorithm.RS256);
</code></pre>

<p>See <a href=""https://www.nuget.org/packages/OpenSSL.X509Certificate2.Provider"" rel=""nofollow noreferrer"">NuGet</a> and <a href=""https://github.com/StefH/OpenSSL-X509Certificate2-Provider"" rel=""nofollow noreferrer"">Github-project</a> for functionality and code-examples.</p>
","3728","<c#><openssl><private-key><x509certificate2><public-key>","2","1","3","2017-07-17 20:25:30","","0","","41071","","2012-02-21 14:55:50","2012-02-21 13:07:51",""
"27743045","EC private key recovery from PEM format with BouncyCastle","<p>My application stores private keys in PEM format, the existing code works for RSA keys but I am trying to switch to EC keys and there is a problem. The key recovery seems to work, and the equals method on the recovered key returns true for the original key, but getAlgorithm() on the original key returns ""EC"" and on the recovered key ""ECDSA"". The discrepancy in the algorithm later causes problems because it does not match the algorithm for the corresponding public key.</p>

<p>Am I doing something wrong or is this a bug in the PEM parser?</p>

<p>Here is a test program which demonstrates the problem:</p>

<pre><code>import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.StringReader;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PrivateKey;
import java.security.SecureRandom;
import java.security.spec.ECGenParameterSpec;

import org.bouncycastle.openssl.PEMKeyPair;
import org.bouncycastle.openssl.PEMParser;
import org.bouncycastle.openssl.PEMWriter;
import org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter;
import org.immutify.janus.keytool.KeyToolUtils;

public class TestPrivateKeyRecovery
{
    private static final String KEY_ALGORITHM           = ""EC"";
    private static final String SIGNATURE_ALGORITHM     = ""SHA512withECDSA"";
    private static final String PROVIDER                = ""BC"";
    private static final String CURVE_NAME              = ""secp521r1"";
    private static final String WRAPPING_CIPHER_SPEC    = ""ECIESwithAES"";

    private ECGenParameterSpec  ecGenSpec;
    private KeyPairGenerator    keyGen_;
    private SecureRandom        rand_;

    public void run()
    {
        try
        {
            rand_       = new SecureRandom();
            ecGenSpec   = new ECGenParameterSpec(CURVE_NAME);
            keyGen_     = KeyPairGenerator.getInstance(KEY_ALGORITHM, PROVIDER);

            keyGen_.initialize(ecGenSpec, rand_);


            PrivateKey privateKey = keyGen_.generateKeyPair().getPrivate();





            String der = privateKeyToDER(privateKey);

            PrivateKey recoveredKey = privateKeyFromDER(der);

            System.out.println(""privateKey="" + privateKey);
            System.out.println(""privateKey.getAlgorithm()="" + privateKey.getAlgorithm());
            System.out.println(""der="" + der);
            System.out.println(""recoveredKey="" + privateKey);
            System.out.println(""recoveredKey.getAlgorithm()="" + recoveredKey.getAlgorithm());
            System.out.println();

            if(privateKey.equals(recoveredKey))
                System.out.println(""Key recovery ok"");
            else
                System.err.println(""Private key recovery failed"");

            if(privateKey.getAlgorithm().equals(recoveredKey.getAlgorithm()))
                System.out.println(""Key algorithm ok"");
            else
                System.err.println(""Key algorithms do not match"");
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }

    public static   String      privateKeyToDER(PrivateKey key) throws IOException
    {
        ByteArrayOutputStream   bos = new ByteArrayOutputStream();
        PEMWriter               pemWriter = new PEMWriter(new OutputStreamWriter(bos));

        pemWriter.writeObject(key);

        pemWriter.close();

        return new String(bos.toByteArray());
    }

    public static   PrivateKey      privateKeyFromDER(String der) throws IOException
    {
        StringReader            reader = new StringReader(der);
        PEMParser               pemParser = new PEMParser(reader);

        try
        {
            Object o = pemParser.readObject();

            if (o == null || !(o instanceof PEMKeyPair))
            {
                throw new IOException(""Not an OpenSSL key"");
            }

            KeyPair kp = new JcaPEMKeyConverter().setProvider(""BC"").getKeyPair((PEMKeyPair)o);
            return kp.getPrivate();
        }
        finally
        {
            pemParser.close();
        }
    }
}
</code></pre>

<p>The output from the test program is:</p>

<pre>
privateKey=EC Private Key
             S: 13d19928468d14fabb9235a81fc1ec706ff5413a70a760b63e07d45a5d04a2f18425ef735500190291aacaf58c92306acd87fa01a47d907d5d3fc01531180353146

privateKey.getAlgorithm()=EC
der=-----BEGIN EC PRIVATE KEY-----
MIHcAgEBBEIBPRmShGjRT6u5I1qB/B7HBv9UE6cKdgtj4H1FpdBKLxhCXvc1UAGQ
KRqsr1jJIwas2H+gGkfZB9XT/AFTEYA1MUagBwYFK4EEACOhgYkDgYYABAFN5ZcE
zg9fV13u57ffwyN9bm9Wa9Pe0MtL2cd5CW2ku4mWzgS5m8IfNMAw2QMah5Z9fuXW
1fGJgUx1RsC09R6legFTgymlbqt+CaPhNsJkr12cjyzhT1NxR6uEzMUtBcYxqLHy
ANkhHmvAk221//YIRIWix7ZlRsRrs+iYrpWw4bMt9A==
-----END EC PRIVATE KEY-----

recoveredKey=EC Private Key
             S: 13d19928468d14fabb9235a81fc1ec706ff5413a70a760b63e07d45a5d04a2f18425ef735500190291aacaf58c92306acd87fa01a47d907d5d3fc01531180353146

recoveredKey.getAlgorithm()=ECDSA

Key recovery ok
Key algorithms do not match
</pre>
","<p>The problem is not the <code>PEMParser</code> but <code>JcaPEMKeyConverter</code> which treats EC keys as keys for ECDSA:</p>

<pre><code>algorithms.put(X9ObjectIdentifiers.id_ecPublicKey, ""ECDSA"");
...
private KeyFactory getKeyFactory(AlgorithmIdentifier algId)
throws NoSuchAlgorithmException, NoSuchProviderException
{
  ASN1ObjectIdentifier algorithm = algId.getAlgorithm();
  String algName = (String)algorithms.get(algorithm);
...
</code></pre>

<p>The algorithm identifier is id-ecPublicKey, which is also used for ECDSA keys, so the algorithm selection is not unique here and probably the BC devs have chosen ECDSA as the most suitable choice. You could do something similar like <code>JcaPEMKeyConverter</code> with you own <code>KeyFactory</code> but choose your correct algorithm for EC keys.</p>
","3685","<java><bouncycastle><private-key><pem><elliptic-curve>","7","5","1","2015-01-03 13:33:19","27743995","0","3","1852723","","2015-01-03 13:33:19","2015-01-02 13:32:17",""
"26369558","How to use a PKCS8 Encoded Private Key in PHP","<p>The following code in java does the job:</p>

<pre><code>        InputStream is = CipherRunnable.class.getClassLoader().getResourceAsStream(""privateKey.pem"");
        byte[] bytes = new byte[is.available()];
        is.read(bytes);
        PKCS8EncodedKeySpec privateKeySpec = new PKCS8EncodedKeySpec(bytes);
        KeyFactory keyFactory;
        keyFactory = KeyFactory.getInstance(""RSA"");
        Key key = keyFactory.generatePrivate(privateKeySpec);
</code></pre>

<p>What is the equivalent code in PHP?</p>
","<p>Here's how you can create PKCS8 public / private keys in PHP using <a href=""http://phpseclib.sourceforge.net/rsa/intro.html"" rel=""nofollow"">phpseclib, a pure PHP RSA implementation</a>:</p>

<pre><code>&lt;?php
include('Crypt/RSA.php');

$rsa = new Crypt_RSA();

$rsa-&gt;setPrivateKeyFormat(CRYPT_RSA_PRIVATE_FORMAT_PKCS8);
$rsa-&gt;setPublicKeyFormat(CRYPT_RSA_PUBLIC_FORMAT_PKCS8);

extract($rsa-&gt;createKey());

echo $privatekey . ""\r\n\r\n"";
echo $publickey;
</code></pre>
","3682","<java><php><openssl><rsa><private-key>","2","2","2","2015-03-24 05:52:21","26441329","0","","","","","2014-10-14 20:18:20",""
"26369558","How to use a PKCS8 Encoded Private Key in PHP","<p>The following code in java does the job:</p>

<pre><code>        InputStream is = CipherRunnable.class.getClassLoader().getResourceAsStream(""privateKey.pem"");
        byte[] bytes = new byte[is.available()];
        is.read(bytes);
        PKCS8EncodedKeySpec privateKeySpec = new PKCS8EncodedKeySpec(bytes);
        KeyFactory keyFactory;
        keyFactory = KeyFactory.getInstance(""RSA"");
        Key key = keyFactory.generatePrivate(privateKeySpec);
</code></pre>

<p>What is the equivalent code in PHP?</p>
","<p>If you want to use OpenSSL only, there don't appear to be any PKCS8 functions for PHP that I can find; whatever version of OpenSSL you have is the default format you get.</p>

<p>Here's what I ended up doing, courtesy of <a href=""https://superuser.com/questions/606215/openssl-pkcs8-default-format-gives-rsa-private-key"">this answer</a> and the <a href=""https://www.openssl.org/docs/apps/rsa.html"" rel=""nofollow noreferrer"">OpenSSL RSA Tool documentation</a>. Note I am creating entirely new self-signed certs/keys, so if you aren't you can skip all but the last few lines:</p>

<pre><code>&lt;?php
// Create the private and public key
$sslConfig = array(
    ""digest_alg"" =&gt; ""sha512"",
    ""private_key_bits"" =&gt; 4096,
    ""private_key_type"" =&gt; OPENSSL_KEYTYPE_RSA,
);

$privKey = openssl_pkey_new($sslConfig);

$csrConfig = array(
    ""countryName"" =&gt; ""yourcountry"",
    ""stateOrProvinceName"" =&gt; ""yourstate"",
    ""localityName"" =&gt; ""yourcity"",
    ""organizationName"" =&gt; ""yourcompany"",
    ""organizationalUnitName"" =&gt; ""yourorg"",
    ""commonName"" =&gt; ""your.domain.name""
);

// create a certificate signing request
$csr = openssl_csr_new($csrConfig, $privKey, $sslConfig);
// self-sign for 365 days
$signed = openssl_csr_sign($csr, null, $privKey, 365, $sslConfig);

// Extract the public certificate
openssl_x509_export($signed, $sslCert);

// Extract the private key (in default openssl format, which for 1.x will be PKCS8 / ""PRIVATE KEY"" format)
openssl_pkey_export($privKey, $sslKey);

// Convert private key to RSA (""traditional"" / ""SSLeay"" / ""RSA PRIVATE KEY"") format
exec('echo '.escapeshellarg($sslKey).' | openssl rsa -outform PEM 2&gt;/dev/null', $output, $return_var);

$traditionalSslKey = implode(""\n"", $output);

var_dump($traditionalSslKey); // private key
var_dump($sslcert); // certificate (public key is available via openssl_pkey_get_public($sslcert))
</code></pre>
","3682","<java><php><openssl><rsa><private-key>","2","0","2","2015-03-24 05:52:21","26441329","0","","","","","2014-10-14 20:18:20",""
"34665666","I can't transfer files using pscp to amazon AWS ec2 instances. Key refused","<p>I can connect to the server command line using Putty using the same private key.</p>

<p>But when I try to use the same key to transfer a file from my PC over to the server"":</p>

<p><strong>pscp -i C:\xxx.ppk  ""C:\xx\somefile.yy"" ec2-xx-xx-xxx-xxx.compute-1.amazonaws.com:/home/(some location)</strong></p>

<p>I receive the following error:</p>

<p><strong>Server refused our key
Fatal: Disconnected: No supported authentication methods available (server sent:
 publickey)</strong></p>

<p>Could someone help me with fixing this problem please?</p>
","<p>You may want to review the <a href=""http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesConnecting.html#TroubleshootingInstancesConnectingPuTTY"" rel=""noreferrer"">Error: Server refused our key or No supported authentication methods available</a> section of the <a href=""http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesConnecting.html#TroubleshootingInstancesConnectingPuTTY"" rel=""noreferrer"">Troubleshooting Connecting to Your Instance</a> document.</p>

<p>Try this: add the -l user name option to the pscp command line, with the proper username for your instance.</p>

<blockquote>
  <p>pscp -i C:\xxx.ppk -l user ec2-user ""C:\xx\somefile.yy"" ec2-xx-xx-xxx-xxx.compute-1.amazonaws.com:/home/(some location)</p>
</blockquote>

<p>The -l option allows you to connect with specified username. You may have a username mismatch.</p>
","3668","<amazon-ec2><putty><private-key><pscp>","4","8","3","2019-07-24 09:15:19","34668141","0","2","","","","2016-01-07 21:40:07",""
"34665666","I can't transfer files using pscp to amazon AWS ec2 instances. Key refused","<p>I can connect to the server command line using Putty using the same private key.</p>

<p>But when I try to use the same key to transfer a file from my PC over to the server"":</p>

<p><strong>pscp -i C:\xxx.ppk  ""C:\xx\somefile.yy"" ec2-xx-xx-xxx-xxx.compute-1.amazonaws.com:/home/(some location)</strong></p>

<p>I receive the following error:</p>

<p><strong>Server refused our key
Fatal: Disconnected: No supported authentication methods available (server sent:
 publickey)</strong></p>

<p>Could someone help me with fixing this problem please?</p>
","<p>FWIW, I was using a destination syntax of username@ipaddr:/dir and got this error.
I had to use username@hostname:/dir.  Surprised I had to specify the hostname...</p>
","3668","<amazon-ec2><putty><private-key><pscp>","4","2","3","2019-07-24 09:15:19","34668141","0","2","","","","2016-01-07 21:40:07",""
"34665666","I can't transfer files using pscp to amazon AWS ec2 instances. Key refused","<p>I can connect to the server command line using Putty using the same private key.</p>

<p>But when I try to use the same key to transfer a file from my PC over to the server"":</p>

<p><strong>pscp -i C:\xxx.ppk  ""C:\xx\somefile.yy"" ec2-xx-xx-xxx-xxx.compute-1.amazonaws.com:/home/(some location)</strong></p>

<p>I receive the following error:</p>

<p><strong>Server refused our key
Fatal: Disconnected: No supported authentication methods available (server sent:
 publickey)</strong></p>

<p>Could someone help me with fixing this problem please?</p>
","<p>btw guys none of the examples above didn't work for me and here is what I use:</p>

<ol>
<li>With putty I converted .pem file into .ppk: Conversions->importkey->save private key (now we have .ppk)</li>
<li><code>pscp -scp -i c:/ssh-key/ssh.ppk ./dist/* ubuntu@ec2-***.us-west-2.compute.amazonaws.com:/home/ubuntu/www</code></li>
</ol>
","3668","<amazon-ec2><putty><private-key><pscp>","4","1","3","2019-07-24 09:15:19","34668141","0","2","","","","2016-01-07 21:40:07",""
"36881029","Getting exception while trying to get the private key from certificate","<p>I'm doing <strong>RSA encryption and decryption</strong> in my application.I have two files placed in assets folder, public_key.cer for encryption and private_key.cer for decryption.Getting the public key from file I'm doing like below.</p>

<pre><code>CertificateFactory certFactory = CertificateFactory.getInstance(X.509, BC);
InputStream is = context.getAssets().open(""public_Key.cer"");
X509Certificate cert = (X509Certificate) certFactory.generateCertificate(is);
publicKey = cert.getPublicKey();
</code></pre>

<p>RSA encryption is working fine,while i'm facing problem while trying to get privae key from certificate.Below is the code using to get the private key</p>

<pre><code>InputStream is = context.getAssets().open(""private_key.cer"");
PKCS8EncodedKeySpec privSpec = new PKCS8EncodedKeySpec(new BASE64Decoder().decodeBuffer(is));
KeyFactory keyFactory = KeyFactory.getInstance(""RSA"", ""BC"");
PrivateKey privateKey = keyFactory.generatePrivate(privSpec);
</code></pre>

<p><strong>I'm getting exception.</strong></p>

<pre><code>    com.android.org.bouncycastle.jcajce.provider.asymmetric.util.ExtendedInvalidKeySpecException: unable to process key spec: java.lang.IllegalArgumentException: unknown object in getInstance: com.android.org.bouncycastle.asn1.DERApplicationSpecific
 at com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi.engineGeneratePrivate(KeyFactorySpi.java:105)
 at java.security.KeyFactory.generatePrivate(KeyFactory.java:186)
 at com.teknospire.ndasenda_agent.utils.Conversion.decryptUsingPrivateKey(Conversion.java:111)
 at com.teknospire.ndasenda_agent.utils.Conversion.getDecryptedSkey(Conversion.java:243)
 at com.teknospire.ndasenda_agent.json.JsonCreationAndExtraction.readLoginParams(JsonCreationAndExtraction.java:40)
 at com.mockUp.ndasenda.LoginActivity$LoginRequest.doInBackground(LoginActivity.java:283)
 at com.mockUp.ndasenda.LoginActivity$LoginRequest.doInBackground(LoginActivity.java:1)
 at android.os.AsyncTask$2.call(AsyncTask.java:288)
 at java.util.concurrent.FutureTask.run(FutureTask.java:237)
 at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)
 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
 at java.lang.Thread.run(Thread.java:848)
 Caused by: java.lang.IllegalArgumentException: unknown object in getInstance: com.android.org.bouncycastle.asn1.DERApplicationSpecific
 at com.android.org.bouncycastle.asn1.ASN1Sequence.getInstance(ASN1Sequence.java:50)
 at com.android.org.bouncycastle.asn1.ASN1Sequence.getInstance(ASN1Sequence.java:33)
 at com.android.org.bouncycastle.asn1.pkcs.PrivateKeyInfo.getInstance(PrivateKeyInfo.java:45)
 at com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi.engineGeneratePrivate(KeyFactorySpi.java:91)
 ... 12 more
 java.lang.NullPointerException
 at org.bouncycastle.crypto.params.KeyParameter.&lt;init&gt;(KeyParameter.java:13)
 at com.teknospire.ndasenda_agent.utils.Conversion.decryptUsingSessionKey(Conversion.java:145)
 at com.teknospire.ndasenda_agent.utils.Conversion.getDecryptionData(Conversion.java:185)
 at com.teknospire.ndasenda_agent.json.JsonCreationAndExtraction.readLoginParams(JsonCreationAndExtraction.java:41)
 at com.mockUp.ndasenda.LoginActivity$LoginRequest.doInBackground(LoginActivity.java:283)
 at com.mockUp.ndasenda.LoginActivity$LoginRequest.doInBackground(LoginActivity.java:1)
 at android.os.AsyncTask$2.call(AsyncTask.java:288)
 at java.util.concurrent.FutureTask.run(FutureTask.java:237)
 at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)
 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
 at java.lang.Thread.run(Thread.java:848)
</code></pre>

<p>Can anyone help me, how to read private key from .cer file.</p>

<p>Thanks in advance.</p>
","<p>Check <a href=""http://www.java2s.com/Tutorial/Java/0490__Security/BasicRSAexample.htm"" rel=""nofollow"">this</a> for the basic implementation</p>

<p>Excerpt from the site</p>

<pre><code>Security.addProvider(new org.bouncycastle.jce.provider.BouncyCastleProvider());

    byte[] input = new byte[] { (byte) 0xbe, (byte) 0xef };
    Cipher cipher = Cipher.getInstance(""RSA/None/NoPadding"", ""BC"");

    KeyFactory keyFactory = KeyFactory.getInstance(""RSA"", ""BC"");
    RSAPublicKeySpec pubKeySpec = new RSAPublicKeySpec(new BigInteger(
        ""12345678"", 16), new BigInteger(""11"", 16));
    RSAPrivateKeySpec privKeySpec = new RSAPrivateKeySpec(new BigInteger(
        ""12345678"", 16), new BigInteger(""12345678"",
        16));

    RSAPublicKey pubKey = (RSAPublicKey) keyFactory.generatePublic(pubKeySpec);
    RSAPrivateKey privKey = (RSAPrivateKey) keyFactory.generatePrivate(privKeySpec);

    cipher.init(Cipher.ENCRYPT_MODE, pubKey);

    byte[] cipherText = cipher.doFinal(input);
    System.out.println(""cipher: "" + new String(cipherText));

    cipher.init(Cipher.DECRYPT_MODE, privKey);
    byte[] plainText = cipher.doFinal(cipherText);
    System.out.println(""plain : "" + new String(plainText));
</code></pre>
","3648","<java><android><rsa><public-key-encryption><private-key>","0","0","2","2016-04-27 06:29:21","","1","3","4085470","","2016-04-27 05:37:53","2016-04-27 05:28:46",""
"36881029","Getting exception while trying to get the private key from certificate","<p>I'm doing <strong>RSA encryption and decryption</strong> in my application.I have two files placed in assets folder, public_key.cer for encryption and private_key.cer for decryption.Getting the public key from file I'm doing like below.</p>

<pre><code>CertificateFactory certFactory = CertificateFactory.getInstance(X.509, BC);
InputStream is = context.getAssets().open(""public_Key.cer"");
X509Certificate cert = (X509Certificate) certFactory.generateCertificate(is);
publicKey = cert.getPublicKey();
</code></pre>

<p>RSA encryption is working fine,while i'm facing problem while trying to get privae key from certificate.Below is the code using to get the private key</p>

<pre><code>InputStream is = context.getAssets().open(""private_key.cer"");
PKCS8EncodedKeySpec privSpec = new PKCS8EncodedKeySpec(new BASE64Decoder().decodeBuffer(is));
KeyFactory keyFactory = KeyFactory.getInstance(""RSA"", ""BC"");
PrivateKey privateKey = keyFactory.generatePrivate(privSpec);
</code></pre>

<p><strong>I'm getting exception.</strong></p>

<pre><code>    com.android.org.bouncycastle.jcajce.provider.asymmetric.util.ExtendedInvalidKeySpecException: unable to process key spec: java.lang.IllegalArgumentException: unknown object in getInstance: com.android.org.bouncycastle.asn1.DERApplicationSpecific
 at com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi.engineGeneratePrivate(KeyFactorySpi.java:105)
 at java.security.KeyFactory.generatePrivate(KeyFactory.java:186)
 at com.teknospire.ndasenda_agent.utils.Conversion.decryptUsingPrivateKey(Conversion.java:111)
 at com.teknospire.ndasenda_agent.utils.Conversion.getDecryptedSkey(Conversion.java:243)
 at com.teknospire.ndasenda_agent.json.JsonCreationAndExtraction.readLoginParams(JsonCreationAndExtraction.java:40)
 at com.mockUp.ndasenda.LoginActivity$LoginRequest.doInBackground(LoginActivity.java:283)
 at com.mockUp.ndasenda.LoginActivity$LoginRequest.doInBackground(LoginActivity.java:1)
 at android.os.AsyncTask$2.call(AsyncTask.java:288)
 at java.util.concurrent.FutureTask.run(FutureTask.java:237)
 at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)
 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
 at java.lang.Thread.run(Thread.java:848)
 Caused by: java.lang.IllegalArgumentException: unknown object in getInstance: com.android.org.bouncycastle.asn1.DERApplicationSpecific
 at com.android.org.bouncycastle.asn1.ASN1Sequence.getInstance(ASN1Sequence.java:50)
 at com.android.org.bouncycastle.asn1.ASN1Sequence.getInstance(ASN1Sequence.java:33)
 at com.android.org.bouncycastle.asn1.pkcs.PrivateKeyInfo.getInstance(PrivateKeyInfo.java:45)
 at com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi.engineGeneratePrivate(KeyFactorySpi.java:91)
 ... 12 more
 java.lang.NullPointerException
 at org.bouncycastle.crypto.params.KeyParameter.&lt;init&gt;(KeyParameter.java:13)
 at com.teknospire.ndasenda_agent.utils.Conversion.decryptUsingSessionKey(Conversion.java:145)
 at com.teknospire.ndasenda_agent.utils.Conversion.getDecryptionData(Conversion.java:185)
 at com.teknospire.ndasenda_agent.json.JsonCreationAndExtraction.readLoginParams(JsonCreationAndExtraction.java:41)
 at com.mockUp.ndasenda.LoginActivity$LoginRequest.doInBackground(LoginActivity.java:283)
 at com.mockUp.ndasenda.LoginActivity$LoginRequest.doInBackground(LoginActivity.java:1)
 at android.os.AsyncTask$2.call(AsyncTask.java:288)
 at java.util.concurrent.FutureTask.run(FutureTask.java:237)
 at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)
 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
 at java.lang.Thread.run(Thread.java:848)
</code></pre>

<p>Can anyone help me, how to read private key from .cer file.</p>

<p>Thanks in advance.</p>
","<p>Code for getting Private key from a file:</p>

<pre><code>    private KeyStore.PrivateKeyEntry getKeyFromFile(String keyStoreFile,
    String Password, Context cntx) {
    KeyStore.PrivateKeyEntry entry = null;
    try {
        AssetManager am = cntx.getAssets();
        char[] keyStorePassword = Password.toCharArray();
        // Load the KeyStore and get the signing key and certificate.
        KeyStore ks = KeyStore.getInstance(""PKCS12"");

        ks.load(am.open(keyStoreFile), keyStorePassword);
        String alias = ks.aliases().nextElement();

        Entry entry1 = ks.getEntry(alias, new KeyStore.PasswordProtection(
                keyStorePassword));
        entry = (KeyStore.PrivateKeyEntry) entry1;
    } catch (Exception e) {
        e.printStackTrace();
    }
    return entry;
}
</code></pre>

<p>You can decrypt your data using following method:</p>

<pre><code>  public byte[] decryptUsingPrivateKey(String encryptedData, Context cntx) {

    byte[] utf8 = null;
    try {
        KeyStore.PrivateKeyEntry privateKey = getKeyFromFile(
                ""PrivateKeyFile.pfx"", ""privatekeypassword"", cntx);

        Cipher rsa;
        rsa = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
        rsa.init(Cipher.DECRYPT_MODE, privateKey.getPrivateKey());
        utf8 = rsa.doFinal(Base64.decode(encryptedData));

    } catch (Exception e) {
        System.out.println(e);
    }

    return utf8;
}
</code></pre>

<p>Note: </p>

<ol>
<li>To use this you have to compile the library 'bcprov-jdk15on-152.jar' in your application</li>
<li>Using private key file in android is not a good practice. Hope you are using it in test server.</li>
</ol>
","3648","<java><android><rsa><public-key-encryption><private-key>","0","0","2","2016-04-27 06:29:21","","1","3","4085470","","2016-04-27 05:37:53","2016-04-27 05:28:46",""
"16357308","How to get private key from browser keystore?","<p>I read certificates from keystore browser, there is some problem with getting private key, but public key get perfect. Below is code:</p>

<pre><code>KeyStore keystore1 = KeyStore.getInstance(""Windows-MY"");
keystore1.load(null, null);

if (keystore1 != null) {
  Enumeration&lt;String&gt; enumeration = keystore1.aliases();

  while (enumeration.hasMoreElements()) {
    String alias = enumeration.nextElement();
    if (alias.equals(""myalias"")) {
       char[] keypwd = ""123456"".toCharArray();
       KeyStore.PrivateKeyEntry keyEnt = (KeyStore.PrivateKeyEntry) keystore1.getEntry(alias, new KeyStore.PasswordProtection(keypwd));     
       System.out.println(""getPublicKey: "" + keyEnt.getCertificate().getPublicKey().getEncoded());

       //show RSAPrivateKey [size=2048 bits, type=Exchange, container={5089EC94-FF45-4339-ACCF-E6ECCCB16899}]
       System.out.println(""privateKey111: "" + keyEnt.getPrivateKey()); 
    }
  }
}
</code></pre>

<p>Public key output is correct, but private key looks like this:</p>

<p><code>RSAPrivateKey [size=2048 bits, type=Exchange, container={5089EC94-FF45-4339-ACCF-E6ECCCB16899}]</code></p>

<p>Password is correct. How can I get private key?</p>
","<p>Here is a private key exporter I have used, it reads JKS keystore maybe you could somehow convert keystore first or modify your code accordingly.</p>

<p>c:\test>java -classes ./classes ExportPrivateKey mystore.ks JKS mystorepwd myalias mycert_priv.crt</p>

<pre><code>import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.security.Key;
import java.security.KeyPair;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.UnrecoverableKeyException;
import java.security.cert.Certificate;
import sun.misc.BASE64Encoder;

public class ExportPrivateKey {
    private File keystoreFile;
    private String keyStoreType;
    private char[] password;
    private String alias;
    private File exportedFile;

    public static KeyPair getPrivateKey(KeyStore keystore, String alias, char[] password) {
        try {
            Key key=keystore.getKey(alias,password);
            if(key instanceof PrivateKey) {
                Certificate cert=keystore.getCertificate(alias);
                PublicKey publicKey=cert.getPublicKey();
                return new KeyPair(publicKey,(PrivateKey)key);
            }
        } catch (UnrecoverableKeyException e) {
        } catch (NoSuchAlgorithmException e) {
        } catch (KeyStoreException e) { }
        return null;
    }

    public void export() throws Exception{
        KeyStore keystore=KeyStore.getInstance(keyStoreType);
        BASE64Encoder encoder=new BASE64Encoder();
        keystore.load(new FileInputStream(keystoreFile),password);
        KeyPair keyPair=getPrivateKey(keystore,alias,password);
        PrivateKey privateKey=keyPair.getPrivate();
        String encoded=encoder.encode(privateKey.getEncoded());
        FileWriter fw=new FileWriter(exportedFile);
        fw.write(“—–BEGIN PRIVATE KEY—–\n“);
        fw.write(encoded);
        fw.write(“\n“);
        fw.write(“—–END PRIVATE KEY—–”);
        fw.close();
    }

    public static void main(String args[]) throws Exception{
        ExportPrivateKey export=new ExportPrivateKey();
        export.keystoreFile=new File(args[0]);
        export.keyStoreType=args[1];
        export.password=args[2].toCharArray();
        export.alias=args[3];
        export.exportedFile=new File(args[4]);
        export.export();
    }
}
</code></pre>
","3594","<java><private-key><pkcs#12>","0","0","1","2013-05-04 02:16:02","","4","","2218241","","2013-05-04 02:16:02","2013-05-03 10:57:12",""
"21709817","Printing .pem key DER form in python","<p>I would like to print out the binary form (not sure if this is how I would refer to it) of a .pem key using python. To clarify, I want to do in python what this unix command would print out:</p>

<pre><code>cat privateKey.pem | openssl rsa -pubout -outform DER
</code></pre>

<p>I can't just call this command using subprocess because I want it to work on Windows. I've looked at the M2Crypto and PyCrypto libraries, and with the M2Crypto library I am able to load the key using</p>

<pre><code>from M2Crypto import RSA
rsaKey = RSA.load_key('privateKey.pem')
</code></pre>

<p>But I don't see any methods of rsaKey that print out the binary form.</p>

<p>Edit:</p>

<p>Here's what I have so far:</p>

<pre><code>import M2Crypto
key = M2Crypto.RSA.load_key('key.pem')
bio = M2Crypto.BIO.MemoryBuffer()

key.save_key_der_bio(bio)

der = bio.read()
</code></pre>

<p>But <code>der</code> isn't the same as what openssl printed out. I piped the output of openssl into hexdump to compare them.</p>
","<p>I figured it out. So the unix command </p>

<pre><code>cat privateKey.pem | openssl rsa -pubout -outform DER
</code></pre>

<p>Is actually printing out the DER form of the public key.
Here is what I had to do, using the M2Crypto library:</p>

<pre><code>import M2Crypto
privatekey = M2Crypto.RSA.load_key('privatekey.pem')

bio = M2Crypto.BIO.MemoryBuffer()
privatekey.save_pub_key_bio(bio)

pubkey = bio.read()
pubkey = ''.join(pubkey.split('\n')[1:-2]) # remove -----BEGIN PUB KEY... lines and concatenate
der = base64.b64decode(pubkey)
</code></pre>

<p>This is the form that I wanted. For some reason, if I did</p>

<pre><code>pubkey = M2Crypto.RSA.load_pub_key_bio(bio)
pubkey.save_key_der_bio(bio)
der = bio.read()
</code></pre>

<p>It gave me the wrong answer.</p>
","3586","<python><rsa><private-key><pycrypto><m2crypto>","1","1","2","2014-02-12 12:05:50","21727490","4","1","2451889","","2014-02-11 19:17:57","2014-02-11 18:14:38",""
"21709817","Printing .pem key DER form in python","<p>I would like to print out the binary form (not sure if this is how I would refer to it) of a .pem key using python. To clarify, I want to do in python what this unix command would print out:</p>

<pre><code>cat privateKey.pem | openssl rsa -pubout -outform DER
</code></pre>

<p>I can't just call this command using subprocess because I want it to work on Windows. I've looked at the M2Crypto and PyCrypto libraries, and with the M2Crypto library I am able to load the key using</p>

<pre><code>from M2Crypto import RSA
rsaKey = RSA.load_key('privateKey.pem')
</code></pre>

<p>But I don't see any methods of rsaKey that print out the binary form.</p>

<p>Edit:</p>

<p>Here's what I have so far:</p>

<pre><code>import M2Crypto
key = M2Crypto.RSA.load_key('key.pem')
bio = M2Crypto.BIO.MemoryBuffer()

key.save_key_der_bio(bio)

der = bio.read()
</code></pre>

<p>But <code>der</code> isn't the same as what openssl printed out. I piped the output of openssl into hexdump to compare them.</p>
","<p>I would do this:</p>

<pre><code>from Crypto.PublicKey import RSA

key = RSA.importKey(open(""privatekey.pem"").read())
der = key.publickey().exportKey(""DER"")
</code></pre>
","3586","<python><rsa><private-key><pycrypto><m2crypto>","1","4","2","2014-02-12 12:05:50","21727490","4","1","2451889","","2014-02-11 19:17:57","2014-02-11 18:14:38",""
"7618301","Can I get public/private key pair from a key container in smartcard?","<p>Can I get the public/private key pair from a key container inside a smartcard using PKCS #11 or CryptoAPI?</p>
","<p>I'm no expert in this, but I think the whole point of a smartcard is that you can't extract the private key.  You send the data to the card instead, and let it do the crypto operations on its own processor.</p>
","3583","<c++><smartcard><cryptoapi><private-key><pkcs#11>","3","6","2","2011-10-20 13:36:43","","0","1","220643","","2011-10-20 13:36:43","2011-10-01 05:03:49",""
"7618301","Can I get public/private key pair from a key container in smartcard?","<p>Can I get the public/private key pair from a key container inside a smartcard using PKCS #11 or CryptoAPI?</p>
","<p>It depends. Both CryptoAPI (well the CSP for the smart card) and PKCS#11 allows you to have <em>exportable</em> key pairs. However it's common to use <strong>non</strong> exportable private keys to use the smart card strength to its full potential.</p>

<p>So if you're writing an application it becomes your choice. Otherwise someone else already made that choice for you ;-)</p>
","3583","<c++><smartcard><cryptoapi><private-key><pkcs#11>","3","5","2","2011-10-20 13:36:43","","0","1","220643","","2011-10-20 13:36:43","2011-10-01 05:03:49",""
"14949661","Git clone using public private keys","<p>I have been trying for ages to clone a git repository using public and private keys for authentication instead of password. I generated my keys using puttygen on windows. I cannot log in from windows or from linux. I keep getting the following error:</p>

<blockquote>
  <p>git clone [git repo directory]</p>
  
  <p>Cloning into papers...</p>
  
  <p>Enter passphrase for key '/.ssh/id_dsa':</p>
  
  <p>Permission denied (publickey).</p>
</blockquote>

<p>I first created my private key with a passphrase, but that didn't work, after I resaved the private key without a passphrase (using puttygen) but it still didn't work.</p>

<p>How do I fix this problem? I have been trying to work it out for so long but now am just totally stuck.</p>

<p>Thanks a lot!</p>
","<ol>
<li>You must to know two things: private key can be created is putty and openssh-compatible formats - and these formats are not freely exchangeable (client-side tool can understand putty <strong>or</strong> openssh only), Linux understand only openssh-type keys</li>
<li>You must use on client-side (additional) tool, which provide non-interactive authentication by key on request</li>
</ol>

<p><strong>A consequence of points 1 and 2</strong></p>

<p><strong>Windows-client</strong>: run pageant, load putty's private key into it (enter passphrase for key). <em>Maybe</em> you have to redefine in Git ssh-client from system to plink</p>

<p><strong>Linux-client</strong>: on Windows-host load putty-type private key into puttygen and export into openssh-key. Save this file in Linux-box as <code>/.ssh/id_dsa</code>. Run ssh-agent, enter password once. ssh-agent will use password for key for all requests during session</p>

<p><strong>PS</strong>: Debug your issues with the help of Github ssh-related docs and testing shell</p>
","3554","<git><github><private-key><public-key><git-clone>","2","2","1","2013-04-20 10:12:11","14951999","4","1","960558","","2013-02-19 07:09:39","2013-02-19 04:06:06",""
"22151312","Exit code checking of WinSCP script","<p>I need to securely transmit files to a server using WinSCP as a function in a batch script.</p>

<p>I need WinSCP to use a <code>.ppk</code> file, I already have on the machine to authenticate instead of a password.</p>

<p>Once connected I need to upload files via WinSCP to the server.</p>

<p>If there are any issues/errors while running WinSCP, I need its exit code to be sent back to the script. The idea is; if there is any issues with transmission to show the exit code. I will write an <code>if</code> statement that if the exit code is anything other than zero to quit the program.</p>

<p>Any assistance on how to implement WinSCP into a script with exit code checking would be appreciated.</p>
","<p>There is a .NET API for WinSCP. You can learn more about it at:<br>
<a href=""https://winscp.net/eng/docs/library"" rel=""nofollow noreferrer"">https://winscp.net/eng/docs/library</a></p>

<p>You just need to write a little code to get your job done. Here is an example:<br>
<a href=""https://winscp.net/eng/docs/library#example"" rel=""nofollow noreferrer"">https://winscp.net/eng/docs/library#example</a></p>

<p>To see more browse any of the example of your choice at:<br>
<a href=""https://winscp.net/eng/docs/library_examples"" rel=""nofollow noreferrer"">https://winscp.net/eng/docs/library_examples</a></p>
","3547","<batch-file><private-key><public-key><winscp><errorlevel>","2","0","2","2017-03-06 07:36:43","","0","1","850848","","2014-03-17 08:08:42","2014-03-03 15:57:38",""
"22151312","Exit code checking of WinSCP script","<p>I need to securely transmit files to a server using WinSCP as a function in a batch script.</p>

<p>I need WinSCP to use a <code>.ppk</code> file, I already have on the machine to authenticate instead of a password.</p>

<p>Once connected I need to upload files via WinSCP to the server.</p>

<p>If there are any issues/errors while running WinSCP, I need its exit code to be sent back to the script. The idea is; if there is any issues with transmission to show the exit code. I will write an <code>if</code> statement that if the exit code is anything other than zero to quit the program.</p>

<p>Any assistance on how to implement WinSCP into a script with exit code checking would be appreciated.</p>
","<p>See the official example for <a href=""https://winscp.net/eng/docs/guide_automation#results"" rel=""nofollow noreferrer"">checking WinSCP script results</a>.</p>

<pre><code>winscp.com /script=example.txt
if errorlevel 1 goto error

echo Success
goto end

:error
echo Error!

:end
</code></pre>
","3547","<batch-file><private-key><public-key><winscp><errorlevel>","2","0","2","2017-03-06 07:36:43","","0","1","850848","","2014-03-17 08:08:42","2014-03-03 15:57:38",""
"13880744","RSA Decryption - BadPaddingException: Data must start with zero","<p>I am writing RSA ENcyrption/Decryption.
Here's the code.
But when i decrypt using Private Key, I am getting exception</p>

<pre><code>public class RSACrypto {

    private static SecureRandom sr = new SecureRandom();

    /**
     * @param rsabits
     * @return keyPair
     * @throws NoSuchAlgorithmException
     */
    public static KeyPair newKeyPair(int rsabits) throws NoSuchAlgorithmException {
        KeyPairGenerator generator = KeyPairGenerator.getInstance(""RSA"");
        generator.initialize(rsabits, sr);
        return generator.generateKeyPair();
    }

    /**
     * @param key
     * @return key
     */
    public static byte[] pubKeyToBytes(PublicKey key) {
        return key.getEncoded(); // X509 for a public key
    }

    /**
     * @param key
     * @return key
     */
    public static byte[] privKeyToBytes(PrivateKey key) {
        return key.getEncoded(); // PKCS8 for a private key
    }

    /**
     * @param bytes
     * @return key
     * @throws InvalidKeySpecException
     * @throws NoSuchAlgorithmException
     */
    public static PublicKey bytesToPubKey(byte[] bytes) throws InvalidKeySpecException, NoSuchAlgorithmException {
        return KeyFactory.getInstance(""RSA"").generatePublic(new X509EncodedKeySpec(bytes));
    }

    /**
     * @param bytes
     * @return key
     * @throws InvalidKeySpecException
     * @throws NoSuchAlgorithmException
     */
    public static PrivateKey bytesToPrivKey(byte[] bytes) throws InvalidKeySpecException, NoSuchAlgorithmException {
        return KeyFactory.getInstance(""RSA"").generatePrivate(new PKCS8EncodedKeySpec(bytes));
    }

    /**
     * @param input
     * @param key
     * @return encryptedText
     * @throws IllegalBlockSizeException
     * @throws BadPaddingException
     * @throws InvalidKeyException
     * @throws NoSuchAlgorithmException
     * @throws NoSuchPaddingException
     */
    public static byte[] encryptWithPubKey(byte[] input, PublicKey key) throws IllegalBlockSizeException, BadPaddingException, InvalidKeyException, NoSuchAlgorithmException, NoSuchPaddingException {
        Cipher cipher = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
        cipher.init(Cipher.ENCRYPT_MODE, key);
        return cipher.doFinal(input);
    }

    /**
     * @param input
     * @param key
     * @return decryptedText
     * @throws IllegalBlockSizeException
     * @throws BadPaddingException
     * @throws InvalidKeyException
     * @throws NoSuchAlgorithmException
     * @throws NoSuchPaddingException
     */
    public static byte[] decryptWithPrivKey(byte[] input, PrivateKey key) throws IllegalBlockSizeException, BadPaddingException, InvalidKeyException, NoSuchAlgorithmException, NoSuchPaddingException {
        Cipher cipher = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
        cipher.init(Cipher.DECRYPT_MODE, key);
        return cipher.doFinal(input);
    }

    /**
     * @param plainText
     * @return encryptedText
     * @throws InvalidKeyException
     * @throws IllegalBlockSizeException
     * @throws BadPaddingException
     * @throws NoSuchAlgorithmException
     * @throws NoSuchPaddingException
     * @throws UnsupportedEncodingException
     */
    public static String encrypt(String plainText) throws InvalidKeyException, IllegalBlockSizeException, BadPaddingException, NoSuchAlgorithmException, NoSuchPaddingException,
            UnsupportedEncodingException {
        KeyPair kp = newKeyPair(1 &lt;&lt; 11); // 2048 bit RSA; might take a second to generate keys
        PublicKey pubKey = kp.getPublic();
        PrivateKey priKey = kp.getPrivate();
        System.out.println(""Private Key: "" + new BASE64Encoder().encode(privKeyToBytes(priKey)));
        byte[] cipherText = encryptWithPubKey(plainText.getBytes(""UTF-8""), pubKey);
        return new BASE64Encoder().encode(cipherText);
    }

    /**
     * @param encrypted
     * @param privateKey
     * @return decryptedText
     * @throws NoSuchAlgorithmException
     * @throws InvalidKeySpecException
     * @throws IOException
     * @throws InvalidKeyException
     * @throws IllegalBlockSizeException
     * @throws BadPaddingException
     * @throws NoSuchPaddingException
     */
    public static String decrypt(String encrypted, String privateKey) throws NoSuchAlgorithmException, InvalidKeySpecException, IOException, InvalidKeyException, IllegalBlockSizeException,
            BadPaddingException, NoSuchPaddingException {
        PrivateKey privateKeyValue = bytesToPrivKey(new BASE64Decoder().decodeBuffer(privateKey));
        return new String(decryptWithPrivKey(new BASE64Decoder().decodeBuffer(encrypted), privateKeyValue), ""UTF-8"");
    }
}
</code></pre>

<p>I am getting below error while <strong>decrypting</strong> with generated privateKey and encrypted text. I have gone through many posts, but couldn't figure what's going wrong here.</p>

<pre><code>javax.crypto.BadPaddingException: Data must start with zero
        at sun.security.rsa.RSAPadding.unpadV15(Unknown Source)
        at sun.security.rsa.RSAPadding.unpad(Unknown Source)
        at com.sun.crypto.provider.RSACipher.a(DashoA13*..)
        at com.sun.crypto.provider.RSACipher.engineDoFinal(DashoA13*..)
        at javax.crypto.Cipher.doFinal(DashoA13*..)
</code></pre>

<p>Any idea, please help.</p>

<p><strong>Update</strong></p>

<p>I am calling from different class</p>

<pre><code>String encryptedText = RSACrypto.encrypt(""PLAIN TEXT""));

String privateKey = """"; //During encryption, it will print privatekey value, assigning the same here
String plaintext = RSACrypto.decrypt(encryptedText , privateKey);
</code></pre>

<p>After little work, I tried without encoding and decoding of Base64. it's working fine.</p>

<p>What I am messing up with base64 here? not getting any clue</p>
","<p>You must be making a mistake with your copy/paste. I edited your code to produce an (ugly) SSCCE that doesn't require copy paste. The methods that changed were:</p>

<pre><code>public static StringPair encrypt(String plainText) 
    throws GeneralSecurityException, UnsupportedEncodingException {

  // Note: this is a very confusing way to say 2048
  KeyPair kp = newKeyPair(1 &lt;&lt; 11); 

  PublicKey pubKey = kp.getPublic();
  PrivateKey priKey = kp.getPrivate();
  byte[] cipherText = encryptWithPubKey(plainText.getBytes(""UTF-8""), pubKey);

  // Here I return both items, to remove copy/paste problems
  StringPair result = new StringPair();
  result.encryptedText = new BASE64Encoder().encode(cipherText);
  result.key = new BASE64Encoder().encode(privKeyToBytes(priKey));
  return result;
}


private static class StringPair {
  public String encryptedText;
  public String key;
}


public static void main(String[] args) throws Exception {
  StringPair result = RSACrypto.encrypt(""PLAIN TEXT"");    
  System.out.println(RSACrypto.decrypt(result.encryptedText, result.key));       
}  
</code></pre>

<p>This prints <code>PLAIN TEXT</code>.</p>
","3513","<java><encryption><rsa><private-key>","1","3","1","2012-12-14 15:33:14","13881544","5","3","1503535","","2012-12-14 15:12:40","2012-12-14 14:37:36",""
"33181879","""USERAUTH fail"" using gradle-ssh-plugin with identity","<p>I can't connect to a SSH host using the <a href=""https://gradle-ssh-plugin.github.io/"" rel=""nofollow"">Gradle SSH Plugin</a> with my private key.</p>

<p>Specifying the password in the <code>build.gradle</code> works fine:</p>

<pre><code>remotes {
    webServer {
        host = '&lt;IP&gt;'
        user = '&lt;USER&gt;'
        password = '&lt;PASSWORD&gt;'
    }
}
</code></pre>

<p>But to avoid writing my password in the build file, I've set my environment to connect using my private key without entering the password from shell:</p>

<pre><code>ssh &lt;user&gt;@&lt;ip&gt;
</code></pre>

<p>This command works from the shell but I can't achieve this with the Gradle plugin. This is my configuration:</p>

<pre><code>remotes {
    webServer {
        host = '&lt;IP&gt;'
        user = '&lt;USER&gt;'
        identity = file(""${System.getProperty('user.home')}/.ssh/id_rsa"")
    }
}
</code></pre>

<p>The error is:</p>

<blockquote>
  <p>Caused by: com.jcraft.jsch.JSchException: USERAUTH fail at com.jcraft.jsch.UserAuthPublicKey.start(UserAuthPublicKey.java:119)</p>
</blockquote>

<p>Since I'm able to connect from the shell, what's wrong with my configuration?</p>
","<p>I fixed this by adding the <code>agent = true</code> property:</p>

<pre><code>remotes {
    webServer {
        host = '54.233.77.171'
        user = 'denis'
        agent = true
        identity = file(""${System.getProperty('user.home')}/.ssh/id_rsa"")
    }
}
</code></pre>

<blockquote>
  <p><strong>agent</strong> - If this is set, Putty Agent or ssh-agent will be used on
  authentication</p>
</blockquote>

<p>For more information: <a href=""https://gradle-ssh-plugin.github.io/docs/#_set_connection_settings"">Connections settings</a></p>

<p>I tried this property after analyzing the class <a href=""https://github.com/rtyley/jsch/blob/master/src/com/jcraft/jsch/UserAuthPublicKey.java"">UserAuthPublicKey</a>:</p>

<pre><code>if(userinfo==null) throw new JSchException(""USERAUTH fail"");
</code></pre>
","3512","<ssh><gradle><private-key><gradle-plugin>","4","11","1","2015-10-18 17:05:06","33192010","0","","542270","","2015-10-17 06:28:26","2015-10-17 01:46:34",""
"24941718","hash_hmac sha512 authentication in python","<p>I'm trying to write python authentication bot for: <a href=""https://comkort.com/page/private_api"" rel=""nofollow noreferrer"">https://comkort.com/page/private_api</a></p>

<p>There is no full php example. I'm guess somebody could put it here.</p>

<p>There is only snippet of php code:</p>

<pre><code>$query_string = http_build_query($_POST, '', '&amp;');
$ethalon_sign = hash_hmac(""sha512"", $query_string, $api_secret_key);
</code></pre>

<p>How to write authentication on python with hash_hmac sha512 ?</p>

<p>I want to extract my <code>open orders</code> <code>POST https://api.comkort.com/v1/private/order/list</code>.</p>

<p>My current variant is:</p>

<pre><code>import hashlib
import hmac
import requests
import time

privateKey = b'myprivatekey'
publicKey = 'my public key'

url = 'https://api.comkort.com/v1/private/order/list'
tosign = b'market_alias=doge_ltc'
signing = hmac.new( privateKey , tosign, hashlib.sha512 )
headers = {'sign': signing.digest(), ""apikey"": publicKey, ""nonce"": int( time.time() ) }

r = requests.get(url, headers=headers)
print r.text
</code></pre>

<p>I'm caught this</p>

<pre><code>{""code"":401,""error"":""Invalid sign"",""field"":""sign""}
</code></pre>

<p>May be hexdigest() instead digest()? I don't know, I'm playing around this <code>b</code> prefix and different output hmac's options, everytime I'm caught one error: ""Invalid sign"".</p>

<p>Related: <a href=""https://stackoverflow.com/questions/24429307/hmac-signing-requests-in-python"">HMAC signing requests in Python</a></p>
","<p>If somebody interesting, I've solve this by myself.</p>

<pre><code>#!/usr/bin/python

import hashlib
import hmac
import requests
import time

apikey = '';
apisecret = '';

def request_comkort( url, payload ):
        tosign = ""&amp;"".join( [i + '=' + payload[i] for i in payload] )
        sign = hmac.new( apisecret, tosign , hashlib.sha512);
        headers = {'sign': sign.hexdigest(), 'nonce': int( time.time() ), 'apikey': apikey }
        r = requests.post(url, data=payload, headers=headers)
        return r.text

# Get balance
print request_comkort( ""https://api.comkort.com/v1/private/user/balance"";, {} )
# Get Open Orders 
print request_comkort( ""https://api.comkort.com/v1/private/order/list"";, {'market_alias': ""DOGE_LTC"" } )
# Make Ask
print request_comkort( ""https://api.comkort.com/v1/private/order/sell"";, { 'market_alias':""HTML_DOGE"", ""amount"": ""1000"", ""price"": ""123123"" } )
# Cancel order
print request_comkort( ""https://api.comkort.com/v1/private/order/cancel"";, { 'order_id': 10943 } )
</code></pre>
","3408","<python><authentication><httprequest><private-key>","3","10","1","2014-08-04 02:38:04","25111089","0","2","-1","","2017-05-23 12:33:12","2014-07-24 18:50:47",""
"34265943","Android Decryption Error","<p>I am trying to encrypt and decrypt Strings in my Android application but I keep getting an InvalidKeyException error.</p>

<p>Here is my code:</p>

<p>//Generate Keys method</p>

<pre><code>public void generateKeys() {
    Calendar cal = Calendar.getInstance();
    Date now = cal.getTime();
    cal.add(Calendar.YEAR, 25);
    Date end = cal.getTime();

    KeyPairGenerator kpg = null;
    try {
        kpg = KeyPairGenerator.getInstance(""RSA"", ""AndroidKeyStore"");
    } catch (NoSuchAlgorithmException e) {
        e.printStackTrace();
    } catch (NoSuchProviderException e) {
        e.printStackTrace();
    }
    try {
        kpg.initialize(new KeyPairGeneratorSpec.Builder(context)
                .setAlias(KEY_ALIAS)
                .setStartDate(now)
                .setEndDate(end)
                .setSerialNumber(BigInteger.valueOf(1))
                .setSubject(new X500Principal(""CN="" + KEY_ALIAS))
                .build());
    } catch (InvalidAlgorithmParameterException e) {
        e.printStackTrace();
    }

    KeyPair kp = kpg.generateKeyPair();

    KeyStore ks = null;
    try {
        ks = KeyStore.getInstance(""AndroidKeyStore"");
        ks.load(null);
        Enumeration&lt;String&gt; aliases = ks.aliases();
    } catch (KeyStoreException e) {
        e.printStackTrace();
    } catch (CertificateException e) {
        e.printStackTrace();
    } catch (NoSuchAlgorithmException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }

    KeyStore.Entry entry = null;
    try {
        entry = ks.getEntry(KEY_ALIAS, null);
    } catch (NoSuchAlgorithmException e) {
        e.printStackTrace();
    } catch (UnrecoverableEntryException e) {
        e.printStackTrace();
    } catch (KeyStoreException e) {
        e.printStackTrace();
    }
    if (!(entry instanceof KeyStore.PrivateKeyEntry)) {
        Log.e(LOG_TAG, ""Not an instance of PrivateKeyEntry."");
    }
    else{
        privKey = ((KeyStore.PrivateKeyEntry) entry).getPrivateKey();
        pubKey = ((KeyStore.PrivateKeyEntry) entry).getCertificate().getPublicKey();
    }

}
</code></pre>

<p>//Encrypt Method</p>

<pre><code>private String encryptString(String value){
    byte[] encodedBytes = null;
    try {
        Cipher cipher = Cipher.getInstance(""RSA/ECB/PKCS1Padding"", ""AndroidOpenSSL"");
        cipher.init(Cipher.ENCRYPT_MODE,  pubKey);
        encodedBytes = cipher.doFinal(value.getBytes());
    } catch (Exception e) {
        e.printStackTrace();
    }

    return Base64.encodeToString(encodedBytes, Base64.DEFAULT);
}
</code></pre>

<p>//Decrypt Method</p>

<pre><code>private String decryptString(String value){
    byte[] decodedBytes = null;
    try {
        Cipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"", ""AndroidOpenSSL"");
        c.init(Cipher.DECRYPT_MODE,  privKey);
        decodedBytes = c.doFinal(Base64.decode(value, Base64.DEFAULT));
    } catch (Exception e) {
        e.printStackTrace();
        Log.e(""Error"", ""Error = "" + e);
        return ""SECURE_FAILURE"";
    }

    return new String(decodedBytes);
}
</code></pre>

<p>//Test Code</p>

<pre><code>    generateKeys();
    String encrypted = encryptString(""Hello World"");
    Log.e(""Encrypt"", ""encrypted = "" + encrypted);
    String decrypted = decryptString(encrypted);
    Log.e(""Decrypt"", ""decrypted = "" + decrypted);
</code></pre>

<p>It looks like the encryption works OK as it prints out something like this:</p>

<blockquote>
  <p>encrypted =
  SbA2iWWKQbDL7NTA9xvtjD/viYDdpx9fLRYTSZ8UQzdBy3QLqzkswBY21ErH7FPza3vZys4E4PZw
                                                                uxaGkRz0aC0FLqsYlbpcJernGm5+D5lRcBOaZmgkNY9pMf0YP75cBbcJdcmb1rDaH40nCRDnEoXv
                                                                rGESJRqT6p0NMzlZqdd9KO3tqfExwgservAWxPNtRDBbMgE4I/09418jM5Ock5eayfOuv/STwEy6
                                                                Ecd56UjFH63h+gP6ed2aMDhBVeExMxvdloY+VnsAxS5Dkoc2GdaljtjRuPK48HQASoJK8EwAMNpz</p>
</blockquote>

<p>But when I try to decrypt I get the following error:</p>

<blockquote>
  <p>java.security.InvalidKeyException: Need RSA private or public key</p>
</blockquote>

<p>I can't figure why I am getting this exception? Can anyone help?</p>
","<p>Try using a different provider, like this:</p>

<pre><code>Cipher.getInstance(""RSA/ECB/PKCS1Padding"", ""AndroidKeyStoreBCWorkaround"");
</code></pre>
","3391","<java><android><encryption><public-key-encryption><private-key>","10","10","3","2017-10-07 17:45:28","36434376","3","5","","","","2015-12-14 11:30:17",""
"34265943","Android Decryption Error","<p>I am trying to encrypt and decrypt Strings in my Android application but I keep getting an InvalidKeyException error.</p>

<p>Here is my code:</p>

<p>//Generate Keys method</p>

<pre><code>public void generateKeys() {
    Calendar cal = Calendar.getInstance();
    Date now = cal.getTime();
    cal.add(Calendar.YEAR, 25);
    Date end = cal.getTime();

    KeyPairGenerator kpg = null;
    try {
        kpg = KeyPairGenerator.getInstance(""RSA"", ""AndroidKeyStore"");
    } catch (NoSuchAlgorithmException e) {
        e.printStackTrace();
    } catch (NoSuchProviderException e) {
        e.printStackTrace();
    }
    try {
        kpg.initialize(new KeyPairGeneratorSpec.Builder(context)
                .setAlias(KEY_ALIAS)
                .setStartDate(now)
                .setEndDate(end)
                .setSerialNumber(BigInteger.valueOf(1))
                .setSubject(new X500Principal(""CN="" + KEY_ALIAS))
                .build());
    } catch (InvalidAlgorithmParameterException e) {
        e.printStackTrace();
    }

    KeyPair kp = kpg.generateKeyPair();

    KeyStore ks = null;
    try {
        ks = KeyStore.getInstance(""AndroidKeyStore"");
        ks.load(null);
        Enumeration&lt;String&gt; aliases = ks.aliases();
    } catch (KeyStoreException e) {
        e.printStackTrace();
    } catch (CertificateException e) {
        e.printStackTrace();
    } catch (NoSuchAlgorithmException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }

    KeyStore.Entry entry = null;
    try {
        entry = ks.getEntry(KEY_ALIAS, null);
    } catch (NoSuchAlgorithmException e) {
        e.printStackTrace();
    } catch (UnrecoverableEntryException e) {
        e.printStackTrace();
    } catch (KeyStoreException e) {
        e.printStackTrace();
    }
    if (!(entry instanceof KeyStore.PrivateKeyEntry)) {
        Log.e(LOG_TAG, ""Not an instance of PrivateKeyEntry."");
    }
    else{
        privKey = ((KeyStore.PrivateKeyEntry) entry).getPrivateKey();
        pubKey = ((KeyStore.PrivateKeyEntry) entry).getCertificate().getPublicKey();
    }

}
</code></pre>

<p>//Encrypt Method</p>

<pre><code>private String encryptString(String value){
    byte[] encodedBytes = null;
    try {
        Cipher cipher = Cipher.getInstance(""RSA/ECB/PKCS1Padding"", ""AndroidOpenSSL"");
        cipher.init(Cipher.ENCRYPT_MODE,  pubKey);
        encodedBytes = cipher.doFinal(value.getBytes());
    } catch (Exception e) {
        e.printStackTrace();
    }

    return Base64.encodeToString(encodedBytes, Base64.DEFAULT);
}
</code></pre>

<p>//Decrypt Method</p>

<pre><code>private String decryptString(String value){
    byte[] decodedBytes = null;
    try {
        Cipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"", ""AndroidOpenSSL"");
        c.init(Cipher.DECRYPT_MODE,  privKey);
        decodedBytes = c.doFinal(Base64.decode(value, Base64.DEFAULT));
    } catch (Exception e) {
        e.printStackTrace();
        Log.e(""Error"", ""Error = "" + e);
        return ""SECURE_FAILURE"";
    }

    return new String(decodedBytes);
}
</code></pre>

<p>//Test Code</p>

<pre><code>    generateKeys();
    String encrypted = encryptString(""Hello World"");
    Log.e(""Encrypt"", ""encrypted = "" + encrypted);
    String decrypted = decryptString(encrypted);
    Log.e(""Decrypt"", ""decrypted = "" + decrypted);
</code></pre>

<p>It looks like the encryption works OK as it prints out something like this:</p>

<blockquote>
  <p>encrypted =
  SbA2iWWKQbDL7NTA9xvtjD/viYDdpx9fLRYTSZ8UQzdBy3QLqzkswBY21ErH7FPza3vZys4E4PZw
                                                                uxaGkRz0aC0FLqsYlbpcJernGm5+D5lRcBOaZmgkNY9pMf0YP75cBbcJdcmb1rDaH40nCRDnEoXv
                                                                rGESJRqT6p0NMzlZqdd9KO3tqfExwgservAWxPNtRDBbMgE4I/09418jM5Ock5eayfOuv/STwEy6
                                                                Ecd56UjFH63h+gP6ed2aMDhBVeExMxvdloY+VnsAxS5Dkoc2GdaljtjRuPK48HQASoJK8EwAMNpz</p>
</blockquote>

<p>But when I try to decrypt I get the following error:</p>

<blockquote>
  <p>java.security.InvalidKeyException: Need RSA private or public key</p>
</blockquote>

<p>I can't figure why I am getting this exception? Can anyone help?</p>
","<p>this worked for me:</p>

<pre><code>private Cipher getCipher() {
    try {
        if (Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.M) { // below android m
            return Cipher.getInstance(""RSA/ECB/PKCS1Padding"", ""AndroidOpenSSL""); // error in android 6: InvalidKeyException: Need RSA private or public key
        }
        else { // android m and above
            return Cipher.getInstance(""RSA/ECB/PKCS1Padding"", ""AndroidKeyStoreBCWorkaround""); // error in android 5: NoSuchProviderException: Provider not available: AndroidKeyStoreBCWorkaround
        }
    } catch(Exception exception) {
        throw new RuntimeException(""getCipher: Failed to get an instance of Cipher"", exception);
    }
}
</code></pre>
","3391","<java><android><encryption><public-key-encryption><private-key>","10","13","3","2017-10-07 17:45:28","36434376","3","5","","","","2015-12-14 11:30:17",""
"34265943","Android Decryption Error","<p>I am trying to encrypt and decrypt Strings in my Android application but I keep getting an InvalidKeyException error.</p>

<p>Here is my code:</p>

<p>//Generate Keys method</p>

<pre><code>public void generateKeys() {
    Calendar cal = Calendar.getInstance();
    Date now = cal.getTime();
    cal.add(Calendar.YEAR, 25);
    Date end = cal.getTime();

    KeyPairGenerator kpg = null;
    try {
        kpg = KeyPairGenerator.getInstance(""RSA"", ""AndroidKeyStore"");
    } catch (NoSuchAlgorithmException e) {
        e.printStackTrace();
    } catch (NoSuchProviderException e) {
        e.printStackTrace();
    }
    try {
        kpg.initialize(new KeyPairGeneratorSpec.Builder(context)
                .setAlias(KEY_ALIAS)
                .setStartDate(now)
                .setEndDate(end)
                .setSerialNumber(BigInteger.valueOf(1))
                .setSubject(new X500Principal(""CN="" + KEY_ALIAS))
                .build());
    } catch (InvalidAlgorithmParameterException e) {
        e.printStackTrace();
    }

    KeyPair kp = kpg.generateKeyPair();

    KeyStore ks = null;
    try {
        ks = KeyStore.getInstance(""AndroidKeyStore"");
        ks.load(null);
        Enumeration&lt;String&gt; aliases = ks.aliases();
    } catch (KeyStoreException e) {
        e.printStackTrace();
    } catch (CertificateException e) {
        e.printStackTrace();
    } catch (NoSuchAlgorithmException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }

    KeyStore.Entry entry = null;
    try {
        entry = ks.getEntry(KEY_ALIAS, null);
    } catch (NoSuchAlgorithmException e) {
        e.printStackTrace();
    } catch (UnrecoverableEntryException e) {
        e.printStackTrace();
    } catch (KeyStoreException e) {
        e.printStackTrace();
    }
    if (!(entry instanceof KeyStore.PrivateKeyEntry)) {
        Log.e(LOG_TAG, ""Not an instance of PrivateKeyEntry."");
    }
    else{
        privKey = ((KeyStore.PrivateKeyEntry) entry).getPrivateKey();
        pubKey = ((KeyStore.PrivateKeyEntry) entry).getCertificate().getPublicKey();
    }

}
</code></pre>

<p>//Encrypt Method</p>

<pre><code>private String encryptString(String value){
    byte[] encodedBytes = null;
    try {
        Cipher cipher = Cipher.getInstance(""RSA/ECB/PKCS1Padding"", ""AndroidOpenSSL"");
        cipher.init(Cipher.ENCRYPT_MODE,  pubKey);
        encodedBytes = cipher.doFinal(value.getBytes());
    } catch (Exception e) {
        e.printStackTrace();
    }

    return Base64.encodeToString(encodedBytes, Base64.DEFAULT);
}
</code></pre>

<p>//Decrypt Method</p>

<pre><code>private String decryptString(String value){
    byte[] decodedBytes = null;
    try {
        Cipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"", ""AndroidOpenSSL"");
        c.init(Cipher.DECRYPT_MODE,  privKey);
        decodedBytes = c.doFinal(Base64.decode(value, Base64.DEFAULT));
    } catch (Exception e) {
        e.printStackTrace();
        Log.e(""Error"", ""Error = "" + e);
        return ""SECURE_FAILURE"";
    }

    return new String(decodedBytes);
}
</code></pre>

<p>//Test Code</p>

<pre><code>    generateKeys();
    String encrypted = encryptString(""Hello World"");
    Log.e(""Encrypt"", ""encrypted = "" + encrypted);
    String decrypted = decryptString(encrypted);
    Log.e(""Decrypt"", ""decrypted = "" + decrypted);
</code></pre>

<p>It looks like the encryption works OK as it prints out something like this:</p>

<blockquote>
  <p>encrypted =
  SbA2iWWKQbDL7NTA9xvtjD/viYDdpx9fLRYTSZ8UQzdBy3QLqzkswBY21ErH7FPza3vZys4E4PZw
                                                                uxaGkRz0aC0FLqsYlbpcJernGm5+D5lRcBOaZmgkNY9pMf0YP75cBbcJdcmb1rDaH40nCRDnEoXv
                                                                rGESJRqT6p0NMzlZqdd9KO3tqfExwgservAWxPNtRDBbMgE4I/09418jM5Ock5eayfOuv/STwEy6
                                                                Ecd56UjFH63h+gP6ed2aMDhBVeExMxvdloY+VnsAxS5Dkoc2GdaljtjRuPK48HQASoJK8EwAMNpz</p>
</blockquote>

<p>But when I try to decrypt I get the following error:</p>

<blockquote>
  <p>java.security.InvalidKeyException: Need RSA private or public key</p>
</blockquote>

<p>I can't figure why I am getting this exception? Can anyone help?</p>
","<p>Removing the provider worked for me:</p>

<pre><code>Cipher.getInstance(""RSA/ECB/PKCS1Padding"")
</code></pre>

<p>From <a href=""https://docs.oracle.com/javase/7/docs/api/javax/crypto/Cipher.html#getInstance(java.lang.String)"" rel=""noreferrer"">Java docs</a>: ""This method traverses the list of registered security Providers, starting with the most preferred Provider. A new Cipher object encapsulating the CipherSpi implementation from the first Provider that supports the specified algorithm is returned.""</p>
","3391","<java><android><encryption><public-key-encryption><private-key>","10","5","3","2017-10-07 17:45:28","36434376","3","5","","","","2015-12-14 11:30:17",""
"41967791","Java - Using a certificate and private key to make an HTTP POST request","<p>I am making an POST request in Java that requires an ssl certificate and private key combination. I have looked at Java KeyStore and create a .jks file from both the .key and .cert files using the two commands: </p>

<pre><code>winpty openssl pkcs12 -export -in certificate.crt -inkey privatekey.key -out abc.p12
</code></pre>

<p><code>keytool -importkeystore -srckeystore abc.p12 -srcstoretype PKCS12 -destkeystore abc.jks -deststoretype JKS</code></p>

<p>But this failed the request with a 403 exception. Effectively, I want to perform the following Javascript's functions in java:</p>

<pre><code>function cardBalance(intent, session, response) {
    var options = {
        key: fs.readFileSync('privatekey.key'),
        cert: fs.readFileSync('certificate.crt'),
        host: ""blah.blah.blah.com',
        path: '/abc/def/ghi/jkl/mno/pqr/creditcardsummary',
        method: 'POST',
        headers: {
            'Authorization': 'Bearer ' + session.user.accessToken,
            'Content-Type': 'application/json',
            'Version': '1.1.0',
            'zId': '1234',
            'aId': '123456789',
            'bId': 'bId',
            'AppName': 'AppName'
        }
    };

    var postData = JSON.stringify({
        'acctnum': '00002600452999820832'
    });

    console.log(options);

    var req = https.request(options, function (res) {
        console.log('Request Credit Card Balance');
        var data = '';

        res.on('data', function (chunk) {
            data += chunk;
        });

        res.on('end', function () {
            data = JSON.parse(data);
            console.log(data);

            if (data.CreditCardSummary.status === 'SUCCESS') {
                var balance = data.balance;
                console.log('Balance: ' + balance);
                var speechOutput = 'The current balance is $' + balance;
                response.tell(speechOutput);
            } else {
                response.tell('There was a problem getting your card balance.');
            }

        });
    });

    req.on('error', function (e) {
        console.log('An Error Occurred when calling the Gateway. ' + e);
        response.tell(e);
    });

    req.write(postData);
    req.end();
}
</code></pre>
","<p>I figured it out and I wanted to provide reference for other people. I had to convert my .key and .crt files to .p12 file and then convert that to a .jks file.
I did that by following this link here <a href=""https://stackoverflow.com/questions/906402/importing-an-existing-x509-certificate-and-private-key-in-java-keystore-to-use-i"">importing an existing x509 certificate and private key in Java keystore to use in ssl</a> 
Once I had my keystore properly set up I followed this page in java <a href=""https://stackoverflow.com/questions/3734613/how-to-request-a-url-that-requires-a-client-certificate-for-authentication"">How to request a URL that requires a client certificate for authentication</a>. Where I went wrong is that I did not correctly set my JVM arguments. I had to put these   <strong>javax.net.ssl.keyStore</strong> and 
<strong>javax.net.ssl.keyStorePassword</strong>. Once I added that to my JVM it ran perfectly.</p>
","3336","<java><ssl><certificate><keystore><private-key>","0","1","1","2017-02-04 13:56:16","42041196","2","","6815131","","2017-01-31 21:31:22","2017-01-31 21:28:03",""
"33637481","JSch to add private key from a string","<p>I have the contents of the key pair file for SFTP as a string. I need to use JSch to add the contents, but <code>addIdentity</code> only accepts a file path. Is there anyway I can do this? </p>

<p>I see that the <code>KeyPair</code> class has a method - </p>

<pre><code>KeyPair load(JSch jsch, byte[] bytes, byte[] bytes1)
</code></pre>

<p>I'm not sure what this does. </p>
","<p>There is an <a href=""https://epaul.github.io/jsch-documentation/javadoc/com/jcraft/jsch/JSch.html#addIdentity-java.lang.String-byte:A-byte:A-byte:A-"" rel=""nofollow noreferrer""><code>addIdentity</code> overload that takes the key from a buffer</a>:</p>

<pre><code>public class JSch {
    ...
    public void addIdentity(String name, byte[]prvkey, byte[]pubkey, byte[] passphrase)
</code></pre>

<hr>

<p>See also <a href=""https://stackoverflow.com/q/31931574/850848"">Java SFTP client that takes private key as a string</a>.</p>

<p>For an example of implementation, see <a href=""https://stackoverflow.com/q/50859100/850848#50930385"">JSch: addIdentity from private key stored on hdfs</a>.</p>

<p>See also <a href=""https://stackoverflow.com/q/56758040/850848"">Loading private key from string or resource in Java JSch in Android app</a> for a format of the key in the buffers.</p>
","3321","<java><ssh><sftp><jsch><private-key>","4","4","1","2019-07-03 08:53:49","33645778","0","1","850848","","2018-06-14 14:20:51","2015-11-10 18:58:25",""
"3957297","""Cannot find the certificate and private key for decryption"" for Certificate pfx pkcs#12 with private key","<p>I have the following .Net code (asp.net) for sign using client certificate.</p>

<p>I have client certificate stored under local computer and not the current user.</p>

<p>The client certificate  is pfx pkcs#12 and has private key</p>

<p>Imported private key are NOT marked as exportable.</p>

<p>my private key in client certificate protected  by password.</p>

<p>On the last line above, I get the error ""Cannot find the certificate
and private key for decryption "". </p>

<p>It looks like the Private Key is not accessible when using my code.</p>

<p>Is there anyway for me to associate the private key to my client certificate ? Any suggestions ?</p>

<pre><code>public void FirmarConCertificado(string nombreCertificado, X509Certificate2 certificate) 
{ 
    try 
    { 
 var mensaje = ""Datos de prueba""; 
                System.Text.Encoding enc = System.Text.Encoding.Default; 
                byte[] data = enc.GetBytes(mensaje); 

                var contentInfo = new System.Security.Cryptography.Pkcs.ContentInfo(data); 
                var signedCms = new System.Security.Cryptography.Pkcs.SignedCms(contentInfo, true); 

                var cmsSigner = new System.Security.Cryptography.Pkcs.CmsSigner(certificate); 

                //  Sign the CMS/PKCS #7 message 
                signedCms.ComputeSignature(cmsSigner);  // &lt;&lt;&lt;&lt;&lt;&lt;&lt; FAILS HERE

                //  Encode the CMS/PKCS #7 message 
               var ret = Convert.ToBase64String(signedCms.Encode()); 

 Message.Text += ""Firmado con Certificado "" + nombreCertificado + "" encontrado en "" + StoreLocation.LocalMachine; 
 } 
 catch (Exception ex) 
 { 
 Message.Text = ""Error al firmar con certificado: "" + ex.ToString(); 
 Message.Text += ""&lt;br /&gt;&lt;br /&gt;InnerException: "" + ex.InnerException; 
 } 

} 
</code></pre>

<p>EDIT: Perhaps problems with identity in AppPool. The user that install the certificate in LocalMachine Store must be identity of AppPool of WebSite, and are in IIS_WPG group.</p>

<p>SOLUTION: Create user in domain, add it in IIS_WPG group, add it as Identity AppPool. Install certificates in Store Local Computer using that user created.</p>
","<p>SOLUTION: Create user in domain, add it in IIS_WPG group, add it as Identity AppPool. Install certificates in Store Local Computer using that user created.</p>
","3264","<.net><encryption><x509certificate><private-key>","3","2","1","2010-12-29 07:40:45","4552329","1","","206730","","2010-12-17 09:29:59","2010-10-18 07:39:43",""
"37676785","How to Secure Private key(of Triple DES) in C# application?","<p>Tool : OS-Windows 7 64bit, Visual Studio 2012, 4.5 .NET Framework.
Language : C#.</p>

<p>I have created one console application. In this application I have used Data Encryption Algorithm (DES- Symmetric Algorithm) to encrypt and decrypt data.</p>

<p>Now in this approach, Private or secrete key is used. I want to secure this key from client/Hack. How can I secure it?</p>

<p>For now I have stored KEY to the registry, And read that key from registry to encryption and decryption when required. But from registry any knowledgeable developer like you guys can easily read key.</p>

<p>Below is my DES algorithm code(I got this code from MSDN):</p>

<pre><code>using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;

namespace DES_Encrypt_Decrypt
{
    public class Program
    {
        static void Main(string[] args)
        {
            var text = ""This is Plain Text"";

            var encryptedText = CryptoGraphyExample.EncryptPlainTextToCipherText(text);
            var decryptedText = CryptoGraphyExample.DecryptCipherTextToPlainText(encryptedText);

            Console.WriteLine(""Passed Text = "" + text);
            Console.WriteLine(""EncryptedText = "" + encryptedText);
            Console.WriteLine(""DecryptedText = "" + decryptedText);

            Console.ReadLine();
        }
    }

    public class CryptoGraphyExample
    {
        private const string _securityKey = ""MyComplexKey"";
        // This is my secret key and I want to secure it to the client machine. 


        public static string EncryptPlainTextToCipherText(string PlainText)
        {                
            byte[] toEncryptedArray = UTF8Encoding.UTF8.GetBytes(PlainText);

            MD5CryptoServiceProvider objMD5CryptoService = new MD5CryptoServiceProvider();

            byte[] securityKeyArray = objMD5CryptoService.ComputeHash(UTF8Encoding.UTF8.GetBytes(_securityKey));

            objMD5CryptoService.Clear();

            var objTripleDESCryptoService = new TripleDESCryptoServiceProvider();

            objTripleDESCryptoService.Key = securityKeyArray;

            objTripleDESCryptoService.Mode = CipherMode.ECB;

            objTripleDESCryptoService.Padding = PaddingMode.PKCS7;

            var objCrytpoTransform = objTripleDESCryptoService.CreateEncryptor();

            byte[] resultArray = objCrytpoTransform.TransformFinalBlock(toEncryptedArray, 0, toEncryptedArray.Length);

            objTripleDESCryptoService.Clear();

            return Convert.ToBase64String(resultArray, 0, resultArray.Length);
        }

        public static string DecryptCipherTextToPlainText(string CipherText)
        {
            byte[] toEncryptArray = Convert.FromBase64String(CipherText);

            MD5CryptoServiceProvider objMD5CryptoService = new MD5CryptoServiceProvider();

            byte[] securityKeyArray = objMD5CryptoService.ComputeHash(UTF8Encoding.UTF8.GetBytes(_securityKey));

            objMD5CryptoService.Clear();

            var objTripleDESCryptoService = new TripleDESCryptoServiceProvider();

            objTripleDESCryptoService.Key = securityKeyArray;

            objTripleDESCryptoService.Mode = CipherMode.ECB;

            objTripleDESCryptoService.Padding = PaddingMode.PKCS7;

            var objCrytpoTransform = objTripleDESCryptoService.CreateDecryptor();

            byte[] resultArray = objCrytpoTransform.TransformFinalBlock(toEncryptArray, 0, toEncryptArray.Length);

            objTripleDESCryptoService.Clear();

            return UTF8Encoding.UTF8.GetString(resultArray);
        }
    }
}
</code></pre>
","<p>Some machines have a TPM (Trusted Platform Module) and some also have a keychain or keystore that leverages the TPM. Macs do as do some Windows machines. Just encryption a key moves the problem to securing the encryption key.</p>

<p>When you get code look to see if it is current, old bad code is rarely removed from the Internet. The MDN code is completely out of date in every respect.</p>

<p>Do not use DES, it is no longer consider secure and 3DES is archaic and not recommended for new work. Instead use AES. DES, 3DES and AES are all symmetric keys.</p>

<p>Do not use MD5, it is no longer considered secure, use at least SHA256 but for password derivation use a method that uses a salt and iteration count such as PBKDF2 (Password Based Derivation Function 2).</p>

<p>Do not use ECB mode, it too is insecure, see <a href=""https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Electronic_Codebook_.28ECB.29"" rel=""nofollow"">ECB mode</a>, scroll down to the Penguin.</p>
","3251","<c#><security><registry><private-key><encryption-symmetric>","1","1","2","2017-09-27 09:19:19","","8","2","6113815","","2016-06-16 11:00:58","2016-06-07 10:26:31",""
"37676785","How to Secure Private key(of Triple DES) in C# application?","<p>Tool : OS-Windows 7 64bit, Visual Studio 2012, 4.5 .NET Framework.
Language : C#.</p>

<p>I have created one console application. In this application I have used Data Encryption Algorithm (DES- Symmetric Algorithm) to encrypt and decrypt data.</p>

<p>Now in this approach, Private or secrete key is used. I want to secure this key from client/Hack. How can I secure it?</p>

<p>For now I have stored KEY to the registry, And read that key from registry to encryption and decryption when required. But from registry any knowledgeable developer like you guys can easily read key.</p>

<p>Below is my DES algorithm code(I got this code from MSDN):</p>

<pre><code>using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;

namespace DES_Encrypt_Decrypt
{
    public class Program
    {
        static void Main(string[] args)
        {
            var text = ""This is Plain Text"";

            var encryptedText = CryptoGraphyExample.EncryptPlainTextToCipherText(text);
            var decryptedText = CryptoGraphyExample.DecryptCipherTextToPlainText(encryptedText);

            Console.WriteLine(""Passed Text = "" + text);
            Console.WriteLine(""EncryptedText = "" + encryptedText);
            Console.WriteLine(""DecryptedText = "" + decryptedText);

            Console.ReadLine();
        }
    }

    public class CryptoGraphyExample
    {
        private const string _securityKey = ""MyComplexKey"";
        // This is my secret key and I want to secure it to the client machine. 


        public static string EncryptPlainTextToCipherText(string PlainText)
        {                
            byte[] toEncryptedArray = UTF8Encoding.UTF8.GetBytes(PlainText);

            MD5CryptoServiceProvider objMD5CryptoService = new MD5CryptoServiceProvider();

            byte[] securityKeyArray = objMD5CryptoService.ComputeHash(UTF8Encoding.UTF8.GetBytes(_securityKey));

            objMD5CryptoService.Clear();

            var objTripleDESCryptoService = new TripleDESCryptoServiceProvider();

            objTripleDESCryptoService.Key = securityKeyArray;

            objTripleDESCryptoService.Mode = CipherMode.ECB;

            objTripleDESCryptoService.Padding = PaddingMode.PKCS7;

            var objCrytpoTransform = objTripleDESCryptoService.CreateEncryptor();

            byte[] resultArray = objCrytpoTransform.TransformFinalBlock(toEncryptedArray, 0, toEncryptedArray.Length);

            objTripleDESCryptoService.Clear();

            return Convert.ToBase64String(resultArray, 0, resultArray.Length);
        }

        public static string DecryptCipherTextToPlainText(string CipherText)
        {
            byte[] toEncryptArray = Convert.FromBase64String(CipherText);

            MD5CryptoServiceProvider objMD5CryptoService = new MD5CryptoServiceProvider();

            byte[] securityKeyArray = objMD5CryptoService.ComputeHash(UTF8Encoding.UTF8.GetBytes(_securityKey));

            objMD5CryptoService.Clear();

            var objTripleDESCryptoService = new TripleDESCryptoServiceProvider();

            objTripleDESCryptoService.Key = securityKeyArray;

            objTripleDESCryptoService.Mode = CipherMode.ECB;

            objTripleDESCryptoService.Padding = PaddingMode.PKCS7;

            var objCrytpoTransform = objTripleDESCryptoService.CreateDecryptor();

            byte[] resultArray = objCrytpoTransform.TransformFinalBlock(toEncryptArray, 0, toEncryptArray.Length);

            objTripleDESCryptoService.Clear();

            return UTF8Encoding.UTF8.GetString(resultArray);
        }
    }
}
</code></pre>
","<p>You can have a look at another answer of mine:</p>

<ul>
<li><a href=""https://stackoverflow.com/questions/9609840/where-to-store-db-passwords-when-using-windows-net-or-asp-net-applications/15342230#15342230"">Where to store db passwords when using Windows .NET or ASP.NET applications</a></li>
</ul>

<p>Or you can consider generating a key from a password, which you can use to encrypt the key itself:</p>

<ul>
<li><a href=""https://msdn.microsoft.com/en-us/library/system.security.cryptography.passwordderivebytes(v=vs.110).aspx#Anchor_6"" rel=""nofollow noreferrer"">Create a Key from a Password / Random SALT (in C#)</a></li>
</ul>

<p>Either way, you <strong>should not use DES any longer</strong> as it is not secure enough any more. Triple-DES is okay if you have no other option. I recommend to use <a href=""https://msdn.microsoft.com/en-us/library/system.security.cryptography.aes(v=vs.110).aspx#Anchor_6"" rel=""nofollow noreferrer"">AES</a> with a key size of 256 bit if you require a secure symmetric algorithm. </p>

<hr>

<p>In the former <strong>Documentation Beta - ""stackoverflow.com/documentation"",</strong> I had added some additional information (.Net Framework -> Encryption / Cryptography). Since Beta is offline, I will provide this information here:</p>

<p><strong>Create a Key from a Password / Random SALT (in C#)</strong></p>

<pre><code>using System;
using System.Security.Cryptography;
using System.Text;

public class PasswordDerivedBytesExample
{
    public static void Main(String[] args)
    {
        // Get a password from the user.
        Console.WriteLine(""Enter a password to produce a key:"");

        byte[] pwd = Encoding.Unicode.GetBytes(Console.ReadLine());

        byte[] salt = CreateRandomSalt(7);

        // Create a TripleDESCryptoServiceProvider object.
        TripleDESCryptoServiceProvider tdes = new TripleDESCryptoServiceProvider();

        try
        {
            Console.WriteLine(""Creating a key with PasswordDeriveBytes..."");

            // Create a PasswordDeriveBytes object and then create
            // a TripleDES key from the password and salt.
            PasswordDeriveBytes pdb = new PasswordDeriveBytes(pwd, salt);

            // Create the key and set it to the Key property
            // of the TripleDESCryptoServiceProvider object.
            tdes.Key = pdb.CryptDeriveKey(""TripleDES"", ""SHA1"", 192, tdes.IV);

            Console.WriteLine(""Operation complete."");
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
        finally
        {
            // Clear the buffers
            ClearBytes(pwd);
            ClearBytes(salt);

            // Clear the key.
            tdes.Clear();
        }

        Console.ReadLine();
    }

    #region Helper methods

    /// &lt;summary&gt;
    /// Generates a random salt value of the specified length.
    /// &lt;/summary&gt;
    public static byte[] CreateRandomSalt(int length)
    {
        // Create a buffer
        byte[] randBytes;

        if (length &gt;= 1)
        {
            randBytes = new byte[length];
        }
        else
        {
            randBytes = new byte[1];
        }

        // Create a new RNGCryptoServiceProvider.
        RNGCryptoServiceProvider rand = new RNGCryptoServiceProvider();

        // Fill the buffer with random bytes.
        rand.GetBytes(randBytes);

        // return the bytes.
        return randBytes;
    }

    /// &lt;summary&gt;
    /// Clear the bytes in a buffer so they can't later be read from memory.
    /// &lt;/summary&gt;
    public static void ClearBytes(byte[] buffer)
    {
        // Check arguments.
        if (buffer == null)
        {
            throw new ArgumentNullException(""buffer"");
        }

        // Set each byte in the buffer to 0.
        for (int x = 0; x &lt; buffer.Length; x++)
        {
            buffer[x] = 0;
        }
    }

    #endregion
}
</code></pre>

<p>This example is taken from <a href=""https://msdn.microsoft.com/en-us/library/system.security.cryptography.passwordderivebytes(v=vs.110).aspx#Anchor_6"" rel=""nofollow noreferrer"">MSDN.</a></p>

<p>It is a console demo, and it shows how to create a secure key based on a user-defined password, and how to create a random SALT based on the cryptographic random generator.</p>

<p><strong>Notes:</strong></p>

<ul>
<li><p>The built-in function PasswordDeriveBytes uses the standard PBKDF1 algorithm to generate a key from the password. Per default, it uses 100 iterations to generate the key to slow down brute force attacks. The SALT generated randomly further strenghens the key.</p></li>
<li><p>The function CryptDeriveKey converts the key generated by PasswordDeriveBytes into a key compatible with the specified encryption algorithm (here ""TripleDES"") by using the specified hash algorithm (here ""SHA1""). The keysize in this example is 192 bytes, and the initialization vector IV is taken from the triple-DES crypto provider</p></li>
<li><p>Usually, this mechanism is used to protect a stronger random generated key by a password, which encrypts large amount of data. You can also use it to provide multiple passwords of different users to give access to the same data (being protected by a different random key).</p></li>
<li><p>Unfortunately, CryptDeriveKey does currently not support <a href=""https://en.wikipedia.org/wiki/Advanced_Encryption_Standard"" rel=""nofollow noreferrer"">AES.</a> See <a href=""https://social.msdn.microsoft.com/Forums/vstudio/en-US/61d85001-2eae-4419-b4bf-ce98d46f4d21/passwordderivebytescryptderivekey-derives-an-aes-key-but-gets-object-identifier-oid-is-unknown?forum=netfxbcl"" rel=""nofollow noreferrer"">here.</a> 
NOTE: As a workaround, you can create a random AES key for encryption of the data to be protected with AES and store the AES key in a TripleDES-Container which uses the key generated by CryptDeriveKey. But that limits the security to TripleDES, does not take advantage of the larger keysizes of AES and creates a dependency to TripleDES.</p></li>
</ul>
","3251","<c#><security><registry><private-key><encryption-symmetric>","1","1","2","2017-09-27 09:19:19","","8","2","6113815","","2016-06-16 11:00:58","2016-06-07 10:26:31",""
"32272814","Error When Accessing Certificate: Keyset Does Not Exist","<p>I recently updated the certificate for two windows console application. In the past we have just renewed the certificate but this was not possible this time as our 3rd party provider no longer allows this. This time a new certificate was created with a slightly amended name. Two applications use this certificate one is working and the other is getting the below error each time it is run.</p>

<pre><code>Exception (CryptographicException)
System.Security.Cryptography.CryptographicException: Keyset does not exist 
Server stack trace: at 
System.Security.Cryptography.Utils.CreateProvHandle(CspParameters parameters, Boolean randomKeyContainer) at 
System.Security.Cryptography.Utils.GetKeyPairHelper(CspAlgorithmType keyType, CspParameters parameters, Boolean randomKeyContainer, Int32 dwKeySize, SafeProvHandle&amp; safeProvHandle, SafeKeyHandle&amp; safeKeyHandle) at 
System.Security.Cryptography.RSACryptoServiceProvider.GetKeyPair() at 
System.Security.Cryptography.X509Certificates.X509Certificate2.get_PrivateKey() at 
System.IdentityModel.Tokens.X509AsymmetricSecurityKey.get_PrivateKey() at 
System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(String algorithm) at 
System.IdentityModel.SignedXml.ComputeSignature(SecurityKey signingKey) at 
System.ServiceModel.Security.WSSecurityOneDotZeroSendSecurityHeader.CompletePrimarySignatureCore(SendSecurityHeaderElement[] signatureConfirmations, SecurityToken[] signedEndorsingTokens, SecurityToken[] signedTokens, SendSecurityHeaderElement[] basicTokens) at 
System.ServiceModel.Security.SendSecurityHeader.CompleteSignature() at 
System.ServiceModel.Security.SendSecurityHeader.CompleteSecurityApplication() at 
System.ServiceModel.Security.SecurityAppliedMessage.OnWriteMessage(XmlDictionaryWriter writer) at 
System.ServiceModel.Channels.BufferedMessageWriter.WriteMessage(Message message, BufferManager bufferManager, Int32 initialOffset, Int32 maxSizeQuota) at 
System.ServiceModel.Channels.TextMessageEncoderFactory.TextMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset) at 
System.ServiceModel.Channels.HttpOutput.SerializeBufferedMessage(Message message) at System.ServiceModel.Channels.HttpOutput.Send(TimeSpan timeout) at 
System.ServiceModel.Channels.HttpChannelFactory.HttpRequestChannel.HttpChannelRequest.SendRequest(Message message, TimeSpan timeout) at 
System.ServiceModel.Channels.RequestChannel.Request(Message message, TimeSpan timeout) at 
System.ServiceModel.Channels.SecurityChannelFactory`1.SecurityRequestChannel.Request(Message message, TimeSpan timeout) at 
System.ServiceModel.Channels.ServiceChannel.Call(String action, Boolean oneway, ProxyOperationRuntime operation, Object[] ins, Object[] outs, TimeSpan timeout) at 
System.ServiceModel.Channels.ServiceChannelProxy.InvokeService(IMethodCallMessage methodCall, ProxyOperationRuntime operation) at 
System.ServiceModel.Channels.ServiceChannelProxy.Invoke(IMessage message) 
Exception rethrown at [0]: at 
System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg) at 
System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData&amp; msgData, Int32 type)
</code></pre>

<p>I have loaded the certificate to the appropriate certificate store. I have given the users full access right. I have given ""everyone"" access to the certificate. I have even identified the physical file with the private and given the users full control to this. Still no success.</p>

<p>Below is an extract from the config file that sets the configuration for accessing the certificate:</p>

<pre><code>&lt;clientCertificate
      findValue=""certifcatesubjectishere""
      storeLocation=""LocalMachine""
      storeName=""TrustedPeople""
      x509FindType=""FindBySubjectName""
      /&gt;
</code></pre>

<p>Any help or suggestions would be greatly appreciated at this stage.</p>
","<p>I know that it is too late to answer but it can be useful for someone else. I had a same problem while installing WCF application in IIS and i solved it with <a href=""https://www.microsoft.com/en-us/download/details.aspx?id=19801"" rel=""nofollow noreferrer"">winhttpcertcfg</a>. it is an official program by Windows for granting/revoking permissions to certificates. <a href=""https://msdn.microsoft.com/en-us/library/windows/desktop/aa384088(v=vs.85).aspx"" rel=""nofollow noreferrer"">Here</a> you can find using instractions.</p>
","3250","<c#><permissions><x509certificate><private-key><system.security>","2","0","1","2016-11-05 09:14:15","","2","","3202885","","2015-08-28 14:21:48","2015-08-28 13:57:47",""
"8598033","Issues with private key / password and git repository on my Media Temple (dv) server","<p>I set up a git repository on my Media Temple (dv) server to start managing and deploying web projects more easily but I'm running into a wall. When trying to clone the remote repository to my local machine (using SmartGit or the console) I'm being asked for the private key file and/or the password. The specific message is:</p>

<blockquote>
  <p>Provide the credentials for authenticating to the SSH server
  'git.website.com' as user 'Brandon'.</p>
</blockquote>

<p>I already followed the instructions <a href=""http://kb.mediatemple.net/questions/1626/Using+SSH+keys+on+your+server"" rel=""nofollow"">laid out here</a> for uploading my Public Key. I thought this would solve this issue, but it hasn't. I've tried every password I have in this account, but to no avail.</p>

<p>Suggestions?</p>

<p><strong>UPDATE 1</strong></p>

<p>Here is what I'm doing in Terminal that leads me to the Password road block:</p>

<pre><code>$ cd /Users/.../project_name
$ git remote add web ssh://git.website.com/project_name.git
$ git push web +master:refs/heads/master
</code></pre>

<p>And this leads to this message:</p>

<pre><code>Brandon@git.website.com's password:
</code></pre>

<p><strong>UPDATE 2</strong></p>

<p>Here is a screenshot of the SmartGit screen, if it helps. <a href=""http://cloud.smallparade.com/Cpck"" rel=""nofollow"">http://cloud.smallparade.com/Cpck</a></p>
","<p>You appear to have a SSH problem, not a git problem.  First, troubleshoot it by taking git out of the equation.</p>

<p>Assuming you have an actual shell account on this machine, type this:</p>

<p>ssh git.website.com</p>

<p>If it prompts you for a password, then you did not upload your public key correctly.</p>

<p>Type in your password, log in, and then check out .ssh/authorized_keys to see what may be wrong.  If you had done it right, your key is the last one in the file (likely the only one).  If it's not there or the file doesn't exist, you did something wrong.</p>

<p>If your password doesn't work, you have a bigger problem.  Talk to your server tech support.</p>
","3205","<git><ssh><private-key>","0","0","2","2012-09-27 18:59:41","8599992","7","1","347884","","2011-12-22 03:12:44","2011-12-22 00:18:24",""
"8598033","Issues with private key / password and git repository on my Media Temple (dv) server","<p>I set up a git repository on my Media Temple (dv) server to start managing and deploying web projects more easily but I'm running into a wall. When trying to clone the remote repository to my local machine (using SmartGit or the console) I'm being asked for the private key file and/or the password. The specific message is:</p>

<blockquote>
  <p>Provide the credentials for authenticating to the SSH server
  'git.website.com' as user 'Brandon'.</p>
</blockquote>

<p>I already followed the instructions <a href=""http://kb.mediatemple.net/questions/1626/Using+SSH+keys+on+your+server"" rel=""nofollow"">laid out here</a> for uploading my Public Key. I thought this would solve this issue, but it hasn't. I've tried every password I have in this account, but to no avail.</p>

<p>Suggestions?</p>

<p><strong>UPDATE 1</strong></p>

<p>Here is what I'm doing in Terminal that leads me to the Password road block:</p>

<pre><code>$ cd /Users/.../project_name
$ git remote add web ssh://git.website.com/project_name.git
$ git push web +master:refs/heads/master
</code></pre>

<p>And this leads to this message:</p>

<pre><code>Brandon@git.website.com's password:
</code></pre>

<p><strong>UPDATE 2</strong></p>

<p>Here is a screenshot of the SmartGit screen, if it helps. <a href=""http://cloud.smallparade.com/Cpck"" rel=""nofollow"">http://cloud.smallparade.com/Cpck</a></p>
","<p>Change the repo permissions. 
For exemplo: chmod -R 755 </p>
","3205","<git><ssh><private-key>","0","-1","2","2012-09-27 18:59:41","8599992","7","1","347884","","2011-12-22 03:12:44","2011-12-22 00:18:24",""
"30233037","Get private key .pfx in PHP","<p>How to I extract private key/public key in digital signature <code>.pfx</code> format using PHP?</p>

<p>I want to encrypt data with my private key <code>.pfx</code> but I got an error when I open it using .pfx format. Another question: is it possible to extract the keys with <code>.pfx</code> format? or should I use the <code>.pem</code> format? Or is it possible to encrypt the data using <code>.pfx</code> format?</p>
","<p>PHP has a function to read this certificate:</p>

<pre><code>$data = file_get_contents('/path/to/cert.pfx');
$certPassword = 'your password';
openssl_pkcs12_read($data, $certs, $certPassword);
var_dump($certs);
</code></pre>

<p>But to encrypt data with this certificate, you'll need the other PHP openssl functions.</p>
","3169","<php><encryption><private-key>","2","5","1","2016-12-07 14:29:28","30233176","1","","561309","","2015-05-14 08:59:01","2015-05-14 08:48:51",""
"21176164","What does PEM stand for?","<p>This might sound like a silly question, but someone asked me what <code>PEM</code> stood for, and I just didn't know. I've been using <code>ec2</code> for a decent while now, and tried googling for it to no avail (lots of results, but none of them conclusively linked back to the <code>ec2</code> files).</p>

<p>Does anyone happen to know? Maybe also some explanation as to why that naming makes sense? My understanding is that the <code>pem</code> file basically just serves as a private key, but I'm starting to feel that's not quite the case.</p>
","<p>It stands for <strong>Privacy Enhanced Mail</strong>, as explained <a href=""https://en.wikipedia.org/wiki/X.509#Certificate_filename_extensions"" rel=""nofollow"">here</a>.</p>
","3117","<amazon-ec2><private-key><pem>","2","1","1","2014-01-17 01:20:49","21176187","2","","","","","2014-01-17 01:18:16","2014-09-09 23:58:15"
"28604842","Jsch connection with private key fails with com.jcraft.jsch.JSchException: Auth fail error","<p>I'm trying to connect to remote server via ssh using Jsch.
I can successfully connect with bash command:</p>

<pre><code>ssh -p 999 -i ~/.ssh/private_key.pem server_name
</code></pre>

<p>But when I try with Jsch with following configuration, connection fails with    <code>com.jcraft.jsch.JSchException: Auth fail</code> </p>

<pre><code>JSch jsch = new JSch();
Session session = jsch.getSession(""user_name"", ""server_name"", 999);
jsch.addIdentity(""~/.ssh/private_key.pem"");
session.connect(30000);
</code></pre>

<p>Tried with and without specifying hosts file. And also with <code>""PreferredAuthentications"" : ""privatekey""</code> - the same result</p>

<p>Thanks in advance for help.</p>
","<p>The problem was with the key, once I changed the key from a private to the proper public key I was able to connect.</p>
","3110","<ssh><jsch><private-key>","0","0","1","2016-04-07 03:37:06","28626289","0","","","","","2015-02-19 11:11:13",""
"27793619","Adding a private key to X509Certificate2 - C#","<p>I'm new to 2WaySSL.</p>

<p>What I'm trying to do:</p>

<pre><code>1. Retrieve a Client certificate which is stored in a certificate store,
I'm managing to do that by such code:



 certificates = store.Certificates.Find(X509FindType.FindBySerialNumber, serialNumber, false);
</code></pre>

<p>When attaching the certificate to the request, the authentication by the server fails,
since I the certificate object does not contain the private key.</p>

<p>I'm trying to find a way of associating the private key to the certificate (in c#),
Once I'll retrieve the key from where it's stored.</p>

<p>something like:</p>

<pre><code>   certificate.PrivateKey = key;
</code></pre>

<p>But I found no easy way of either initiating the key object, or assigning it to the certificate without getting some exception, even when the key is null, I'm getting an access denied exception.</p>

<p>Any help , especially followed by a code sample, would be appreciated.</p>
","<p>You have 2 easy options</p>

<ul>
<li>import certificate with private key (usually a pfx file) to certificate store. Then <code>store.Certificates.Find</code> will retrieve the certificate with private key.</li>
<li>Load pfx file into <code>X509Certificate2</code> istance with one of its constructors <code>new X509Certificate2(pfx_filename, password_to_pfx)</code></li>
</ul>
","3108","<c#><x509certificate><x509><private-key><x509certificate2>","0","0","1","2015-01-06 08:04:17","","0","","4217579","","2015-01-06 07:07:05","2015-01-06 06:57:04",""
"13842503","Retrieve PrivateKey from key storage in WebSphere Portal 6.1 (AS7)","<p>I need to use a digital signature in application running on WebSphere Portal 6.1. Is there any API for retriving java.security.PrivateKey from server key storage?
I want to avoid explicit path to key storage and storage password in my application source code.</p>
","<p>Check out the IBM <a href=""http://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/index.jsp?topic=/com.ibm.websphere.javadoc.doc/web/apidocs/com/ibm/websphere/crypto/KeySetHelper.html"" rel=""noreferrer"">KeySetHelper API</a>. </p>

<p>First, define a KeyStore in WAS admin. This is what will reference the key database (JKS, PKCS12, etc) on the filesystem via path.  Then define a named KeySet and reference the KeyStore. Create an alias in the key set that matches a label in the KeyStore. This limits access to specific keys if you have several in the store.  </p>

<p>You can then ""lookup"" the named keystore via KeySetHelper by name.  Note: you'll need to know what type of key is in the store.  You won't need to know labels within the key database (or even passwords) in your code.  However, you'll need to know whether or not the key is a shared secret (in which case you'll receive a <a href=""http://docs.oracle.com/javase/6/docs/api/javax/crypto/SecretKey.html"" rel=""noreferrer"">java.security.SecretKey</a> implementation.  Since you want a <a href=""http://docs.oracle.com/javase/6/docs/api/java/security/PrivateKey.html"" rel=""noreferrer"">java.security.PrivateKey</a>, make sure you load a personal certificate into the key database that is represented in WAS as your keystore.</p>

<p>If you manually load a certificate into your keydatabase backing your keystore, you can leave off the key generator class name parameter of the keyset.  That's used if you want to have WAS generate keys.  If you also need a <a href=""http://docs.oracle.com/javase/6/docs/api/java/security/PublicKey.html"" rel=""noreferrer"">java.security.PublicKey</a>, be sure to check the ""generates key pair"" option.  In that case, you are returned from your <a href=""http://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/topic/com.ibm.websphere.javadoc.doc/web/apidocs/com/ibm/websphere/crypto/KeySetHelper.html#getLatestKeyForKeySet%28java.lang.String%29"" rel=""noreferrer"">KeySetHelper::getLatestKeysForKeySet</a> call a com.ibm.websphere.crypto.KeyPair which contains both a java.security.PrivateKey and a java.security.PublicKey (plus access to a java.security.Certificate).</p>

<p>See also:</p>

<ul>
<li><a href=""http://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/index.jsp?topic=/com.ibm.websphere.nd.multiplatform.doc/info/ae/ae/tsec_sslconfkeyset.html"" rel=""noreferrer"">Creating a KeyStore</a> </li>
<li><a href=""http://pic.dhe.ibm.com/infocenter/wasinfo/v7r0/index.jsp?topic=/com.ibm.websphere.nd.multiplatform.doc/info/ae/ae/tsec_sslconfkeyset.html"" rel=""noreferrer"">Creating a KeySet</a></li>
</ul>
","3080","<digital-signature><websphere-7><private-key><websphere-portal>","0","5","1","2013-01-30 09:24:15","13872035","0","1","","","","2012-12-12 15:02:19",""
"25725956","Export Token Signing certificate private key from ADFS","<p>I am implementing a SSO mechanism with a <strong>Service Provider (SP)</strong> by using ADFS as <strong>Identity Provider (idp)</strong>.</p>

<p>The SP regular website offers integration with ADFS so it was enough to setup the SP as Relying Partner in my ADFS and provide them the <strong>Token Signing certificate</strong>. </p>

<p>The <strong>mobile app</strong> of the SP does not offer integration with ADFS, therefore they require a <strong>web application</strong> to be built (SSOApplication) that bridges the SSO mechanism between SP and ADFS. The SP redirects the request to SSOApplication that in the background, by using SAML, queries the ADFS and then, if authentication is approved, sends the response to the SP.</p>

<p>SSOApplication correctly communicates with ADFS but I cannot sign the <strong>SAML response</strong> for the SP because in the Token Signing certificate, contrarely to the SSL certificate, there is no option to export the private key (although MS claims it is possible <a href=""http://technet.microsoft.com/en-us/library/cc784075%28v=ws.10%29.aspx"" rel=""nofollow"">here</a>). The SP requires the same certificate for both Web and Mobile App entry points, therefore I cannot use two different Token Signing certificates.</p>

<p>Moreover, this very certificate is used by other SPs that communicate with my ADFS, therefore if I change certificate I have to communicate the new certificate to the other SP integrated with our ADFS. Is there any way to export the private key from the Signing Token certificate? Is there any way to use differnet Token Signing certificates for different realying parties in ADFS?</p>

<p>PS: In ADFS I can export the key of the SSL certificate but there is not the same option for Token Signing. </p>
","<p>The link is for ADFS 1.x. In ADFS 2.0 and above it is not possible. The official way is to create another signing cert and import in ADFS. Indeed then all SPs need to roll-over......</p>

<p>That is the official answer. Now the hack.
If you are using a farm with a service account, then it is in the user store of that account. But export is disabled. If you know how to work with mimikatz from gentlekiwi (and know how to read French :-) ), then you can even solve that too.</p>
","3047","<saml-2.0><private-key><signing><adfs2.0>","2","2","1","2014-09-09 23:29:37","25755082","0","","675082","","2014-09-08 15:10:08","2014-09-08 13:56:01",""
"44767290","Decrypt passphrase protected PEM containing private key","<p>I have the following method that creates an Encrypted Private Key using Bouncy Castle for C#:</p>

<pre><code>public string GetPrivateKey(AsymmetricCipherKeyPair keyPair, string password)
{
    var generator = new Pkcs8Generator(keyPair.Private, Pkcs8Generator.PbeSha1_3DES);
    generator.IterationCount = 4;
    generator.Password = password.ToCharArray();
    var pem = generator.Generate();

    TextWriter textWriter = new StringWriter();
    PemWriter pemWriter = new PemWriter(textWriter);
    pemWriter.WriteObject(pem);
    pemWriter.Writer.Flush();
    string privateKey = textWriter.ToString();
    return privateKey;
}
</code></pre>

<p>Which looks like this:</p>

<pre><code>-----BEGIN ENCRYPTED PRIVATE KEY-----
...
-----END ENCRYPTED PRIVATE KEY-----
</code></pre>

<p>What I don't know is how to consume the password used to encrypt the private key in my Decrypt method.  Right now, without knowing how to ""decrypt"" my private key using he <code>password</code>, I get the following Exception:</p>

<blockquote>
  <p>Org.BouncyCastle.OpenSsl.PemException : problem creating ENCRYPTED
  private key: System.NullReferenceException: Object reference not set
  to an instance of an object.    at
  Org.BouncyCastle.OpenSsl.PemReader.ReadPrivateKey(PemObject pemObject)</p>
</blockquote>

<p><strong>Here is the code for the Decrypt method:</strong></p>

<pre><code>public string Decrypt(string base64Input, string privateKey, string password)
{
    var bytesToDecrypt = Convert.FromBase64String(base64Input);

    //get a stream from the string
    AsymmetricCipherKeyPair keyPair;
    var decryptEngine = new Pkcs1Encoding(new RsaEngine());

    using (var txtreader = new StringReader(privateKey))
    {
        var obj = new PemReader(txtreader).ReadObject();
        keyPair = (AsymmetricCipherKeyPair) obj;

        decryptEngine.Init(false, keyPair.Private);
    }

    var decrypted = Encoding.UTF8.GetString(decryptEngine.ProcessBlock(bytesToDecrypt, 0, bytesToDecrypt.Length));
    return decrypted;
}
</code></pre>
","<p>It seems to me that you need to decrypt the private key to use it. Currently your password parameter isn't used. Unfortunately it doesn't seem to be all that easy to find out how do this.</p>

<hr>

<p>Bouncy Castle, as many other Java API's, use a password handler to retrieve the password. The reason to do this is to allow the program to ask the user for the password only when it is required. This allows the program to leave the password in memory for the shortest amount of time.</p>

<p>So to allow for decryption, use the following constructor:</p>

<pre><code>PemReader(TextReader reader, IPasswordFinder pFinder);
</code></pre>

<p>with an implementation of <code>IPasswordFinder</code> (Bouncy Castle for C# is mainly a Java port, otherwise a delegate would probably have been used).</p>

<hr>

<p>For your convenience, the code. This code also reconstructs the entire key pair, not just the private key.</p>

<p>Import statements:</p>

<pre><code>using Org.BouncyCastle.Crypto;
using Org.BouncyCastle.Crypto.Generators;
using Org.BouncyCastle.Crypto.Parameters;
using Org.BouncyCastle.Crypto.Prng;
using Org.BouncyCastle.OpenSsl;
using Org.BouncyCastle.Security;
using System.IO;
</code></pre>

<p>the decoder:</p>

<pre><code>private static AsymmetricCipherKeyPair DecodePrivateKey(string encryptedPrivateKey, string password)
{
    TextReader textReader = new StringReader(encryptedPrivateKey);
    PemReader pemReader = new PemReader(textReader, new PasswordFinder(password));
    object privateKeyObject = pemReader.ReadObject();
    RsaPrivateCrtKeyParameters rsaPrivatekey = (RsaPrivateCrtKeyParameters)privateKeyObject;
    RsaKeyParameters rsaPublicKey = new RsaKeyParameters(false, rsaPrivatekey.Modulus, rsaPrivatekey.PublicExponent);
    AsymmetricCipherKeyPair kp = new AsymmetricCipherKeyPair(rsaPublicKey, rsaPrivatekey);
    return kp;
}
</code></pre>

<p>required helper class:</p>

<pre><code>private class PasswordFinder : IPasswordFinder
{
    private string password;

    public PasswordFinder(string password)
    {
        this.password = password;
    }


    public char[] GetPassword()
    {
        return password.ToCharArray();
    }
}
</code></pre>

<hr>

<p>Note that normally you should only use <code>char[]</code> instead of <code>string</code> for passwords as <code>char[]</code> can be cleared after use, while <code>string</code> cannot.</p>

<p>Now you have the private key decryption should be easy.</p>
","3044","<c#><encryption><bouncycastle><private-key><pem>","5","6","1","2017-06-27 10:50:35","44770878","0","","589259","","2017-06-27 10:50:35","2017-06-26 19:28:27",""
"30806627","What is the best place to store my private keys?","<p>I recently started to change my SSH remote connections from password-authentication to SSH-key authentication. What's the best place to store my private keys? In the Cloud? External HD?</p>

<p>Thank you.  </p>
","","3019","<ssh><putty><ssh-keys><private-key>","4","","0","2015-06-12 15:17:48","","5","","","","","2015-06-12 15:17:48",""
"40899214","Adding private PGP key to key ring","<p>It is my understanding is if a file needs to be decrypted on my server I need to use a private key and give the party sending me the file the public key to encrypt it. The it's reversed if I am to encrypt a key. The other party provides me with their public key.</p>

<p>We have files that we encrypt using a public key ring. We have one public key ring that we use to encrypt files with. However, I see that there are two different secret key rings that are used to decyrpt files. One secret key ring decrypts a certain set of files and a second key ring decrypts another set.
Recently I've been working a project with two companies, A and B, where company A is playing the middle man.</p>

<p>Company A generated a key pair and sent the public key to Company B and me the private key. The private key was sent as a txt file. At this point I'm unsure what to do with the txt file as it was my understanding that it should be me that generated the public/private key pairing OR provide Company B with the public key that was already generated.
Do I name the txt file to have an asc exentsion  and run a command like: </p>

<pre><code>PGP --pgppath e:\pgp\pgp.cfg -- secring e:\pgp\secring.pkr --key-add gdsecring.asc 
</code></pre>

<p>Is that even possible? Or does it have to be a separate private key? If so do I just rename the private key to gdsecring.skr?</p>

<p>Any direction would be most appreciated!</p>
","<p>Open the key text file with a text editor and if it starts with this line </p>

<p><code>----- BEGIN PGP PRIVATE KEY ------</code></p>

<p>then just import into PGP:</p>

<pre><code>pgp --import &lt;keyname.txt&gt;
</code></pre>

<p>(Note: probably in addition to the private key you will have to receive its password from Company A)</p>
","2994","<encryption><private-key><pgp>","1","1","2","2016-12-27 19:27:45","","0","","","","","2016-11-30 22:14:10",""
"40899214","Adding private PGP key to key ring","<p>It is my understanding is if a file needs to be decrypted on my server I need to use a private key and give the party sending me the file the public key to encrypt it. The it's reversed if I am to encrypt a key. The other party provides me with their public key.</p>

<p>We have files that we encrypt using a public key ring. We have one public key ring that we use to encrypt files with. However, I see that there are two different secret key rings that are used to decyrpt files. One secret key ring decrypts a certain set of files and a second key ring decrypts another set.
Recently I've been working a project with two companies, A and B, where company A is playing the middle man.</p>

<p>Company A generated a key pair and sent the public key to Company B and me the private key. The private key was sent as a txt file. At this point I'm unsure what to do with the txt file as it was my understanding that it should be me that generated the public/private key pairing OR provide Company B with the public key that was already generated.
Do I name the txt file to have an asc exentsion  and run a command like: </p>

<pre><code>PGP --pgppath e:\pgp\pgp.cfg -- secring e:\pgp\secring.pkr --key-add gdsecring.asc 
</code></pre>

<p>Is that even possible? Or does it have to be a separate private key? If so do I just rename the private key to gdsecring.skr?</p>

<p>Any direction would be most appreciated!</p>
","<p>I did some more research into this and found that you cannot add a private key to the key ring. From what I understand a vendor shouldn't generate a private/public key, send the public key to another vendor who will be encrypting the files and the private key to a different vendor who is decrypting it. We had to either generate a private/public key pairing and provide the vendor with our public key for encryption. OR send an existing public key which is what I did.</p>
","2994","<encryption><private-key><pgp>","1","1","2","2016-12-27 19:27:45","","0","","","","","2016-11-30 22:14:10",""
"16905142","Private key security in windows certificate store","<p>When I import a public/private pair into windows certificate store, Windows does not require any password of any kind to encrypt the keys.</p>

<p>From that I conclude that if it is a user's store, it uses the user's password (or probably the user's hashed password) to encrypt the private key, and, if it is the local machine store, it is probably some kind of hardware-based key to encrypt the private key.</p>

<p>Did I get it right???</p>

<p>And if I did, what is the point of non-exportable keys if I can decrypt the keys???</p>

<p>And last question - If I got it right up to here, what are the alternatives?</p>
","<p>As ""SLanks"" link explains, the private keys are encrypted with the user's password or the machines's password (depends on the location of the keys in the store).</p>

<p>Therefore, anyone who can log to the machine can obtain to this user's keys and anyone who has access to the machine can obtain keys stored for the local machine.</p>
","2979","<windows><security><certificate><private-key><cryptoapi>","3","2","1","2013-06-09 13:15:27","17009971","1","","","","","2013-06-03 20:18:57",""
"51489637","What are the differences between JWT RS256, RS384, and RS512 algorithms?","<p>I'm using JWT RS256 algorithm in my current project, but I'm wondering what are the differences between algorithms RS256, RS384, and RS512. Can someone explain to me what are the key differences in these algorithms?</p>
","<p>This is the set of algorithms defined for use with JWS in <a href=""https://tools.ietf.org/html/rfc7518#section-3.1"" rel=""noreferrer"">RFC 7518 -JSON Web Algorithms (JWA)</a></p>

<p><a href=""https://i.stack.imgur.com/RR4yw.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/RR4yw.png"" alt=""algorithms""></a></p>

<p>The difference between <code>RS256</code>, <code>RS384</code>, and <code>RS512</code> is the hashing algorithm <code>SHA256</code>, <code>SHA384</code> and <code>SHA512</code></p>
","2956","<security><jwt><private-key><public-key>","7","11","1","2018-07-24 07:10:10","51491458","0","1","7329832","","2018-07-24 07:10:10","2018-07-24 02:33:05",""
"11350459","Using ssh private key on TortoiseGit","<p>I've created an ssh private key in one computer to use with TortoiseGit. Then I've sent my private key to my other computer, but I'm receiving an error message when I try to set my private key on Tortoise Git.</p>

<p>The error message is:</p>

<blockquote>
  <p>Saving config failed (key: ""remote.f1.puttykeyfile"", value:
  ""D:\Documentos Ronaldo\ronaldo_private_key.ppk"").</p>
</blockquote>

<p>I already reinstalled TortoiseGit, but the problem remains. Do you know what can I do?</p>
","<p>I've resolved the problem doing a new clone and using ssh to get the new clone.</p>
","2950","<git><ssh><private-key><tortoisegit>","0","1","1","2017-09-06 10:38:54","11477291","1","","3247152","","2017-09-06 10:38:54","2012-07-05 18:35:51",""
"6816694","What is the Android-counterpart of public-private-key-encryption with openssl_seal & openssl_open (both PHP)?","<p>I just began to develop a android-app which needs to communicate with a server/database. On server side I use PHP to collect data or execute queries. I read a lot about security (XSS, SQL injection, etc.). Because I also would like to encrypt data sent between client &amp; server I began to deal with openssl-functions in PHP.</p>

<p>The openssl_seal- and openssl_open-functions seem to be good for this purpose.
I wrote these two functions:</p>

<pre><code>function encryptRnd($data) {
$pubKey = file_get_contents(""public.key"");
$publicKeys = array(openssl_pkey_get_public($pubKey));
$res = openssl_seal($data, $encryptedData, $encryptedKeys, $publicKeys);
return array(""data"" =&gt; base64_encode($encryptedData), ""rndKey"" =&gt; base64_encode($encryptedKeys[0]));}

function decryptRnd($credentials) {
$privateKey = openssl_get_privatekey(file_get_contents(""private.key""));
$result = openssl_open(base64_decode($credentials[""data""]), $decryptedData, base64_decode($credentials[""rndKey""]), $privateKey);
if (!$result) echo ""ERROR during decryption.\n"";
return $decryptedData;}
</code></pre>

<p>""a"" is the data (to encrypt/encrypted) while ""b"" is the random-key produced by openssl_seal and used for the decryption.</p>

<p>The two keyfiles habe been produced on Windows by using </p>

<ul>
<li>""openssl.exe genrsa -out private.key 1024"" for the privateKey file</li>
<li>""openssl.exe rsa -in private.key -out public.pem -outform PEM -pubout"" for the publicKey file</li>
</ul>

<p>Within PHP this all works as expected.</p>

<p><strong>But how to implement the same technique in Android (and I'm a beginner!)?</strong></p>

<p>I searched the web for examples to use in conjunction with openssl_seal on PHP side but didn't find anything working.</p>

<ol>
<li>I would like to be able to encrypt data on Android side and decrypt
it on PHP.</li>
<li>And when the server is sending encrypted data, this shall be decrypted on Android side (with a second public/privateKey pair I assume)</li>
</ol>

<p>I also implemented the example mentioned <a href=""http://schneimi.wordpress.com/2008/11/25/rsa-encryption-between-java-and-php/"" rel=""nofollow"">here</a> but that didn't work (openssl_private_decrypt was always FALSE on PHP side). So that didn't help me whereas it would be only Android=>PHP encryption without the other way round.</p>

<p><strong>In sum: I'm looking for a way to encrypt and decrypt data sended between Android and PHP on each side where only the receiver can decrypt the data. Can somebody give me an example or even a clue?</strong></p>
","<p>The usual way to do this would not be (direct) asymmetric encryption, but using an encrypted (and authenticated) channel to send the data, for example using SSL/TLS.</p>

<p>On the server side, you simply have to configure your web server to also offer HTTPS access.</p>

<p>On the client side, I suppose the easiest would be to use an HTTPS URL to send the data:</p>

<pre><code>URL url = new URL(""https://example.com/myscript.php"");
URLConnection conn = url.openConnection();
conn.setDoOutput(true);
OutputStream out = conn.getOutputStream();

 // write data to stream

out.close();
InputStream in = conn.getInputStream();

// read answer from input stream

in.close();
</code></pre>

<p>I'm not sure on how to configure the accepted server certificates for Android, though.</p>

<p>This will (under the hoods) use the server's RSA key (in its certificate) to authenticate the connection and negotiate a session key for symmetric encryption.</p>
","2904","<php><android><encryption><public-key><private-key>","0","0","2","2011-07-25 16:10:36","","1","","856087","","2011-07-25 13:19:09","2011-07-25 13:13:06",""
"6816694","What is the Android-counterpart of public-private-key-encryption with openssl_seal & openssl_open (both PHP)?","<p>I just began to develop a android-app which needs to communicate with a server/database. On server side I use PHP to collect data or execute queries. I read a lot about security (XSS, SQL injection, etc.). Because I also would like to encrypt data sent between client &amp; server I began to deal with openssl-functions in PHP.</p>

<p>The openssl_seal- and openssl_open-functions seem to be good for this purpose.
I wrote these two functions:</p>

<pre><code>function encryptRnd($data) {
$pubKey = file_get_contents(""public.key"");
$publicKeys = array(openssl_pkey_get_public($pubKey));
$res = openssl_seal($data, $encryptedData, $encryptedKeys, $publicKeys);
return array(""data"" =&gt; base64_encode($encryptedData), ""rndKey"" =&gt; base64_encode($encryptedKeys[0]));}

function decryptRnd($credentials) {
$privateKey = openssl_get_privatekey(file_get_contents(""private.key""));
$result = openssl_open(base64_decode($credentials[""data""]), $decryptedData, base64_decode($credentials[""rndKey""]), $privateKey);
if (!$result) echo ""ERROR during decryption.\n"";
return $decryptedData;}
</code></pre>

<p>""a"" is the data (to encrypt/encrypted) while ""b"" is the random-key produced by openssl_seal and used for the decryption.</p>

<p>The two keyfiles habe been produced on Windows by using </p>

<ul>
<li>""openssl.exe genrsa -out private.key 1024"" for the privateKey file</li>
<li>""openssl.exe rsa -in private.key -out public.pem -outform PEM -pubout"" for the publicKey file</li>
</ul>

<p>Within PHP this all works as expected.</p>

<p><strong>But how to implement the same technique in Android (and I'm a beginner!)?</strong></p>

<p>I searched the web for examples to use in conjunction with openssl_seal on PHP side but didn't find anything working.</p>

<ol>
<li>I would like to be able to encrypt data on Android side and decrypt
it on PHP.</li>
<li>And when the server is sending encrypted data, this shall be decrypted on Android side (with a second public/privateKey pair I assume)</li>
</ol>

<p>I also implemented the example mentioned <a href=""http://schneimi.wordpress.com/2008/11/25/rsa-encryption-between-java-and-php/"" rel=""nofollow"">here</a> but that didn't work (openssl_private_decrypt was always FALSE on PHP side). So that didn't help me whereas it would be only Android=>PHP encryption without the other way round.</p>

<p><strong>In sum: I'm looking for a way to encrypt and decrypt data sended between Android and PHP on each side where only the receiver can decrypt the data. Can somebody give me an example or even a clue?</strong></p>
","<p>If you really want to do the encryption manually, this is possible, too.</p>

<p>The <a href=""http://developer.android.com/reference/javax/crypto/package-summary.html"" rel=""nofollow"">javax.crypto</a> package contains the necessary classes needed here (together with some from <a href=""http://developer.android.com/reference/java/security/package-summary.html"" rel=""nofollow"">java.security</a> and subpackages), primarily the <code>Cipher</code> class.</p>

<p>This page named <a href=""http://www.javamex.com/tutorials/cryptography/rsa_encryption_2.shtml"" rel=""nofollow"">RSA encryption in Java</a> shows an example of doing this.</p>

<p>Instead of loading the public key from a file in serialized format, you could use Java's KeyStore mechanism (and include the keystore in your jar or whatever format is used on Android).</p>
","2904","<php><android><encryption><public-key><private-key>","0","0","2","2011-07-25 16:10:36","","1","","856087","","2011-07-25 13:19:09","2011-07-25 13:13:06",""
"26358027","RSA private Key switch prime1/prime2 and exponent1/exponent2","<p>I have certificate issues with Firefox/Thunderbird versions newer than 31. The import fails for unknown reasons. I can import the certificate in an old version of F/T and export it again, after that it is working fine in current versions. The only difference I spotted between the certificates are the private key attributes. The certificates are in the pkcs12 format. 
<p> First I extracted the private key with </p>

<pre><code>openssl pkcs12 -in certificate.p12 -nocerts -out privatekey.pem
</code></pre>

<p>then I printed out the details with</p>

<pre><code>openssl rsa -in privatekey.pem -text -noout
</code></pre>

<p>I get the exact same output from my old certificate and the exported one, except that prime1, prime2 and exponent1, exponent2 are switched and the coefficient is different.
<br/></p>

<p>Is there a simple way to solve the problem with a command? Maybe an openssl command?</p>

<p>Additional Info: <br/>
The prime1 and prime2 from the working exported private key. In the old private key it is excatly the same output but prime1 ist prime2 and vice versa.</p>

<pre><code>prime1:
    00:f6:63:95:7c:1a:96:4f:33:c7:dd:3f:a4:dc:7d:
    00:5f:e3:0e:93:d7:2f:88:d1:44:f3:2b:75:38:00:
    18:bb:19:ba:af:ac:20:34:93:d0:42:fb:d7:73:66:
    f6:cc:d8:10:b1:31:ea:f8:79:5d:f5:08:56:2f:2d:
    d8:31:e6:6e:62:92:89:eb:1e:44:31:ed:92:0a:a1:
    02:ef:f5:f7:7c:2c:a0:26:60:5b:95:3a:a4:44:fa:
    dc:ce:99:88:88:d7:f2:25:1d:48:6f:c6:b4:72:d0:
    b0:50:59:18:e8:81:c7:13:45:e2:04:38:8f:d7:53:
    50:0a:7a:44:8f:21:e9:d4:bd

prime2:
    00:96:4a:84:35:b9:bd:0c:f4:00:e1:d4:2e:f7:49:
    ce:a5:0f:3d:90:83:ad:5b:7b:e0:06:a4:a1:6a:bd:
    2e:7c:3c:b8:1c:f1:b9:45:fc:41:00:ec:70:5b:ba:
    00:21:62:df:54:07:9a:b1:09:93:89:27:f8:29:55:
    bf:90:81:ea:07:ef:0f:dd:ca:11:da:d6:aa:e7:de:
    16:6c:68:52:fe:51:e6:20:46:3c:97:af:e2:a6:fd:
    ef:bb:e3:08:9d:13:18:88:51:73:ae:81:15:7c:1b:
    86:52:d5:16:cc:86:66:8e:b8:48:b9:6c:14:27:10:
    82:8e:04:e6:ea:25:af:20:53
</code></pre>
","<p>Here is the answer. </p>

<pre><code>prime1: p
prime2: q
modulus: N = p * q
publicExponent: e
privateExponent: d
</code></pre>

<p>Take a look at this article on <a href=""http://en.wikipedia.org/wiki/RSA#Using_the_Chinese_remainder_algorithm"" rel=""nofollow"">using the Chinese remainder algorithm</a>.</p>

<pre><code>exponent1 = dp
exponent2 = dq
coefficient = qInv
</code></pre>

<p>See this <a href=""http://comments.gmane.org/gmane.comp.encryption.openssl.user/40581"" rel=""nofollow"">reference</a>.</p>
","2884","<openssl><certificate><rsa><private-key>","1","4","1","2015-06-11 16:12:54","","3","2","4140922","","2014-10-14 16:19:14","2014-10-14 10:04:05",""
"41014428","invalid private key when opening SSH tunnel with jsch","<p>With <a href=""http://www.jcraft.com/jsch/"" rel=""nofollow noreferrer"">jsch</a> I'm calling <a href=""https://epaul.github.io/jsch-documentation/javadoc/com/jcraft/jsch/JSch.html#addIdentity(java.lang.String)"" rel=""nofollow noreferrer""><code>addIdentity()</code></a> to add a private key and <a href=""https://epaul.github.io/jsch-documentation/javadoc/com/jcraft/jsch/JSch.html#getSession(java.lang.String,%20java.lang.String,%20int)"" rel=""nofollow noreferrer""><code>getSession()</code></a> to open an SSH tunnel.</p>

<p>When running this code locally on my Windows machine the opening of the tunnel is working.</p>

<p>However when running that same code with the same private key on our CI the following error occurs:</p>

<pre><code>2016-12-07 01:01:32 ERROR SSHConnector:25 - invalid privatekey: [B@4bb4de6a
com.jcraft.jsch.JSchException: invalid privatekey: [B@4bb4de6a
    at com.jcraft.jsch.KeyPair.load(KeyPair.java:747)
    at com.jcraft.jsch.KeyPair.load(KeyPair.java:561)
    at com.jcraft.jsch.IdentityFile.newInstance(IdentityFile.java:40)
    at com.jcraft.jsch.JSch.addIdentity(JSch.java:408)
    at com.jcraft.jsch.JSch.addIdentity(JSch.java:389)
</code></pre>

<p>The private key looks something like this:</p>

<pre><code>PuTTY-User-Key-File-2: ssh-rsa
Encryption: none
Comment: imported-openssh-key
Public-Lines: 6
XXXXXXXXXXXXXXXXXXX
Private-Lines: 14
XXXXXXXXXXXXXXXXXX
Private-MAC: XXXXXXXXXXXXXXXX
</code></pre>

<p>What could be the error here?</p>
","<p>My educated guess is that jSCh does not support PuTTY key format, but rather standard PEM or OpenSSH format. You can convert the PPK to PEM in the PuTTYgen and it should solve your problems.</p>
","2827","<java><ssh><public-key-encryption><jsch><private-key>","1","1","2","2018-09-26 17:43:22","","2","","2196426","","2016-12-07 21:01:18","2016-12-07 10:00:06",""
"41014428","invalid private key when opening SSH tunnel with jsch","<p>With <a href=""http://www.jcraft.com/jsch/"" rel=""nofollow noreferrer"">jsch</a> I'm calling <a href=""https://epaul.github.io/jsch-documentation/javadoc/com/jcraft/jsch/JSch.html#addIdentity(java.lang.String)"" rel=""nofollow noreferrer""><code>addIdentity()</code></a> to add a private key and <a href=""https://epaul.github.io/jsch-documentation/javadoc/com/jcraft/jsch/JSch.html#getSession(java.lang.String,%20java.lang.String,%20int)"" rel=""nofollow noreferrer""><code>getSession()</code></a> to open an SSH tunnel.</p>

<p>When running this code locally on my Windows machine the opening of the tunnel is working.</p>

<p>However when running that same code with the same private key on our CI the following error occurs:</p>

<pre><code>2016-12-07 01:01:32 ERROR SSHConnector:25 - invalid privatekey: [B@4bb4de6a
com.jcraft.jsch.JSchException: invalid privatekey: [B@4bb4de6a
    at com.jcraft.jsch.KeyPair.load(KeyPair.java:747)
    at com.jcraft.jsch.KeyPair.load(KeyPair.java:561)
    at com.jcraft.jsch.IdentityFile.newInstance(IdentityFile.java:40)
    at com.jcraft.jsch.JSch.addIdentity(JSch.java:408)
    at com.jcraft.jsch.JSch.addIdentity(JSch.java:389)
</code></pre>

<p>The private key looks something like this:</p>

<pre><code>PuTTY-User-Key-File-2: ssh-rsa
Encryption: none
Comment: imported-openssh-key
Public-Lines: 6
XXXXXXXXXXXXXXXXXXX
Private-Lines: 14
XXXXXXXXXXXXXXXXXX
Private-MAC: XXXXXXXXXXXXXXXX
</code></pre>

<p>What could be the error here?</p>
","<p>My problem was solved by Using pem file instead of ppk.
pem file is in openssh format that com.jcraft.jsch.JSch jar requires</p>
","2827","<java><ssh><public-key-encryption><jsch><private-key>","1","1","2","2018-09-26 17:43:22","","2","","2196426","","2016-12-07 21:01:18","2016-12-07 10:00:06",""
"2149314","Do I need captcha public key and/or private key for localhost?","<p>I am developing locally with PHP on Xampp.</p>

<p>I am trying to use <a href=""http://recaptcha.net/"" rel=""nofollow noreferrer"">recaptcha</a>.</p>

<p>Do I need public and/or private key?</p>

<p>Thanks in advance.</p>
","<p>In order to use reCAPTCHA, you need <a href=""http://recaptcha.net/apidocs/captcha/client.html"" rel=""nofollow noreferrer"">a public/private API key <strong>pair</strong></a>.</p>

<p>Using the <a href=""http://recaptcha.net/plugins/php/"" rel=""nofollow noreferrer"">PHP Library</a>, to display the CAPTCHA:</p>

<pre><code>require_once('recaptchalib.php');
$publickey = ""...""; // you got this from the signup page
echo recaptcha_get_html($publickey);
</code></pre>

<p>and then to verify:</p>

<pre><code>require_once('recaptchalib.php');
$privatekey = ""..."";
$resp = recaptcha_check_answer ($privatekey,
                                $_SERVER[""REMOTE_ADDR""],
                                $_POST[""recaptcha_challenge_field""],
                                $_POST[""recaptcha_response_field""]);
</code></pre>
","2808","<php><recaptcha><public-key><private-key>","1","2","1","2010-01-27 19:29:12","2149331","0","","100754","","2010-01-27 18:25:48","2010-01-27 18:20:35",""
"9235596","How to tell if cert has private key","<p>I've got a keystore that is full of certificates. Another person has told me the certificates have a private key but when i check in my code i never see any. All of these keys were used in vs6 and cryptapi, i'm using c#. </p>

<p>I created my own certificate and ensured it had a private key by using the methods here 
<a href=""http://www.source-code.biz/snippets/vbasic/3.htm"" rel=""nofollow"">http://www.source-code.biz/snippets/vbasic/3.htm</a></p>

<p>When i imported that into the same keystore and then ran my code that cert showed that it did indeed have a private key, all of the other certs in the key store dont (according to my code). </p>

<p>Is there some flag or something i need to set in order to be able to use the private key within the certs in this keystore ? </p>

<pre><code>public void testForPrivateKey(string keystorename)
{
    X509Store teststore = new X509Store(keystorename);

    teststore.Open(OpenFlags.ReadOnly);
    foreach (X509Certificate2 cert in teststore.Certificates)
    {
        if(cert.HasPrivateKey)
        {
            System.Diagnostics.Debug.WriteLine(""Private key found certificate name: {0}"", cert.Subject);
        }

    }
    store.Close();

}
</code></pre>
","<p>A key is associated with a cert. You don't pick one, it's determined by the cert you're using. See the <a href=""http://msdn.microsoft.com/en-us/library/ms867080.aspx"" rel=""nofollow"">EncryptTo/DecryptTo: Encryption in .NET with CryptoAPI Certificate Stores</a> article on MSDN.</p>
","2796","<c#><rsa><certificate><private-key>","2","0","2","2015-01-07 04:00:57","","1","","635634","","2012-02-10 22:18:19","2012-02-10 22:17:31",""
"9235596","How to tell if cert has private key","<p>I've got a keystore that is full of certificates. Another person has told me the certificates have a private key but when i check in my code i never see any. All of these keys were used in vs6 and cryptapi, i'm using c#. </p>

<p>I created my own certificate and ensured it had a private key by using the methods here 
<a href=""http://www.source-code.biz/snippets/vbasic/3.htm"" rel=""nofollow"">http://www.source-code.biz/snippets/vbasic/3.htm</a></p>

<p>When i imported that into the same keystore and then ran my code that cert showed that it did indeed have a private key, all of the other certs in the key store dont (according to my code). </p>

<p>Is there some flag or something i need to set in order to be able to use the private key within the certs in this keystore ? </p>

<pre><code>public void testForPrivateKey(string keystorename)
{
    X509Store teststore = new X509Store(keystorename);

    teststore.Open(OpenFlags.ReadOnly);
    foreach (X509Certificate2 cert in teststore.Certificates)
    {
        if(cert.HasPrivateKey)
        {
            System.Diagnostics.Debug.WriteLine(""Private key found certificate name: {0}"", cert.Subject);
        }

    }
    store.Close();

}
</code></pre>
","<p>I got the same question, but resolved after investigating:
If a cert has private key, it has the property CERT_KEY_SPEC_PROP_ID also.</p>

<pre><code>DWORD  keySpec;
DWORD len = 4;
BOOL ret = CertGetCertificateContextProperty(pCertContext, CERT_KEY_SPEC_PROP_ID, &amp;keySpec, &amp;len);
if ( !ret ){
    //has no private key
}
</code></pre>
","2796","<c#><rsa><certificate><private-key>","2","1","2","2015-01-07 04:00:57","","1","","635634","","2012-02-10 22:18:19","2012-02-10 22:17:31",""
"31655938","JSch Key authentification exception Auth fail","<p>I get an exception <em>Auth fail</em> when I want to run this code block:</p>

<pre><code>String remoteHostUserName = ""me"";
String remoteHostName = ""xx.xxx.x.xx"";
int port = 22;
String key = ""/home/me/.ssh/id_rsa"";

String deployPath = ""/home/me/Schreibtisch/ssh_example"";
JSch jsch=new JSch();

//creating the identity
jsch.addIdentity(key);
System.out.println(""identity added "");

Session session=jsch.getSession(remoteHostUserName, remoteHostName, port);
System.out.println(""session created."");
Properties config = new Properties();
config.put(""StrictHostKeyChecking"", ""no"");
session.setConfig(config);
session.connect();
</code></pre>

<p>I don't want to set a phrase.</p>

<p>Here the <code>ls -l</code> of the <code>.ssh</code> folder:</p>



<pre class=""lang-none prettyprint-override""><code>drwxrwx---  2 root    me  4096 Jul 27 16:01 .ssh
</code></pre>

<p>and finally the long list within the <code>.ssh</code> folder:</p>

<pre class=""lang-none prettyprint-override""><code>-rwxrw---- 1 root me  416 Jul 27 15:51 authorized_keys
-rwxrw---- 1 root me 1675 Jul 27 15:49 id_rsa
-rwxrw---- 1 root me  416 Jul 27 15:49 id_rsa.pub
-rw-r--r-- 1 root me  222 Jul 27 16:01 known_hosts
</code></pre>

<p>I copied the <code>.pub</code> file and renamed it <code>authorized_keys</code>.</p>

<p>I also added a logger here is the result:</p>

<pre class=""lang-none prettyprint-override""><code>INFO: kex: server-&gt;client aes128-ctr hmac-sha1 none
INFO: kex: client-&gt;server aes128-ctr hmac-sha1 none
INFO: SSH_MSG_KEX_ECDH_INIT sent
INFO: expecting SSH_MSG_KEX_ECDH_REPLY
INFO: ssh_rsa_verify: signature true
WARN: Permanently added 'xx.xxx.x.xx' (RSA) to the list of known hosts.
INFO: SSH_MSG_NEWKEYS sent
INFO: SSH_MSG_NEWKEYS received
INFO: SSH_MSG_SERVICE_REQUEST sent
INFO: SSH_MSG_SERVICE_ACCEPT received
INFO: Authentications that can continue: publickey,keyboard-interactive,password
INFO: Next authentication method: publickey
INFO: Authentications that can continue: password
INFO: Next authentication method: password
INFO: Disconnecting from xx.xxx.x.xx port 22
Exception in thread ""main"" com.jcraft.jsch.JSchException: Auth fail
at com.jcraft.jsch.Session.connect(Session.java:512)
at com.jcraft.jsch.Session.connect(Session.java:183)
at SSHTestStandAlone.testConnection(SSHTestStandAlone.java:33)
at SSHTestStandAlone.main(SSHTestStandAlone.java:11)
</code></pre>

<p>I think after the key authentication JSch want the normal password?</p>

<p>Here the output of the ssh -v command in the shell:</p>

<p>Here the output of the ssh -v command:</p>

<pre class=""lang-none prettyprint-override""><code>florian@florian-HP-EliteBook-8540w:~$ ssh -v florian@xx.xxx.x.xx
OpenSSH_6.7p1 Ubuntu-5ubuntu1, OpenSSL 1.0.1f 6 Jan 2014
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: /etc/ssh/ssh_config line 19: Applying options for *
debug1: Connecting to xx.xxx.x.xx [xx.xxx.x.xx] port 22.
debug1: Connection established.
debug1: key_load_public: No such file or directory
debug1: identity file /home/florian/.ssh/identity type -1
debug1: key_load_public: No such file or directory
debug1: identity file /home/florian/.ssh/identity-cert type -1
debug1: identity file /home/florian/.ssh/id_rsa type 1
debug1: key_load_public: No such file or directory
debug1: identity file /home/florian/.ssh/id_rsa-cert type -1
debug1: key_load_public: No such file or directory
debug1: identity file /home/florian/.ssh/id_dsa type -1
debug1: key_load_public: No such file or directory
debug1: identity file /home/florian/.ssh/id_dsa-cert type -1
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_6.7p1 Ubuntu-5ubuntu1
debug1: Remote protocol version 2.0, remote software version OpenSSH_6.7p1 Ubuntu-5ubuntu1
debug1: match: OpenSSH_6.7p1 Ubuntu-5ubuntu1 pat OpenSSH* compat 0x04000000
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: server-&gt;client aes128-ctr umac-64-etm@openssh.com none
debug1: kex: client-&gt;server aes128-ctr umac-64-etm@openssh.com none
debug1: sending SSH2_MSG_KEX_ECDH_INIT
debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
debug1: Server host key: ECDSA 
xx:xx:xx:xx:xx:xx
The authenticity of host 'xx.xxx.xx.x (xx.xxx.x.xx)' can't be established.
ECDSA key fingerprint is 
xx:xx:xx:xx:xx:xx.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'xx.xxx.x.xx' (ECDSA) to the list of known hosts.
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: Roaming not allowed by server
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: publickey,password
debug1: Next authentication method: publickey
debug1: Trying private key: /home/florian/.ssh/identity
debug1: Offering RSA public key: /home/florian/.ssh/id_rsa
debug1: Authentications that can continue: publickey,password
debug1: Trying private key: /home/florian/.ssh/id_dsa
debug1: Next authentication method: password
</code></pre>

<p>Thank you very much and kind regards,
SirSandmann</p>
","<p>The <code>.ssh</code> folder and the <code>authorized_keys</code> file cannot be writtable by anyone except you.</p>

<p>Make sure you do</p>

<pre><code>chmod 700 .ssh
chmod 600 .ssh/authorized_keys
</code></pre>

<hr>

<p>Side note (unrelated to the problem):</p>

<p>Your private key cannot be readable by anyone else, but you. You compromise your security this way.</p>

<p>Also note that you do not need your private key, that you connect with to the server, in the server's <code>~/.ssh</code> folder.</p>

<hr>

<p>Next time, test the authentication using a GUI client first, to check if your have it setup correctly.</p>
","2791","<java><ssh><jsch><private-key>","-1","1","1","2015-07-28 10:40:17","","0","","4093450","","2015-07-28 10:40:17","2015-07-27 14:31:28",""
"16677197","How to import a certificate with private key on Certificate Management Tool","<p>By now the only way i'm able to import a certificate on Certificate Management Tool is by having a .pfx file. I'm using Makecert.exe utility to generate certificates. </p>

<p>First Step - I generate a Certification Authority by using the following command:</p>

<pre><code>makecert.exe -n ""CN=TestCA"" -r -sv TestCA.pvk TestCA.cer
</code></pre>

<p>Second Step - I generated the private key file and the certificate file</p>

<pre><code>makecert.exe -n ""CN=TestCert"" -sv TestCert.pvk -iv TestCA.pvk -ic TestCA.cer TestCert.cer -sky signature -pe
</code></pre>

<p>Now I'm able to see that I generated 4 Files, TestCA.pvk, TestCA.cer, TestCert.pvk, TestCert.cer</p>

<p>When importing i'm not able to choose a pvk file from the Certificate Management Tool.</p>
","<p>After researching a little, I found a microsoft utility named Pvk2Pfx.exe to overcome this issue.</p>

<p>This utility takes two files and merges them into one .PFX File which is what Certification Management Tool uses to import Certificates with private keys.</p>

<p>Here is the documentation to use it: <a href=""http://msdn.microsoft.com/en-us/library/windows/hardware/ff550672(v=vs.85).aspx"">http://msdn.microsoft.com/en-us/library/windows/hardware/ff550672(v=vs.85).aspx</a></p>

<p>And I will add the full command used to generate de .pfx File</p>

<pre><code>pvk2pfx -pvk TestCert.pvk -pi TestCertPassword -spc TestCert.cert -pfx TestCert.pfx -po TestCertPassword -f
</code></pre>
","2784","<certificate><private-key><makecert>","1","8","1","2014-05-02 11:51:01","16692331","0","1","321731","","2014-05-02 11:51:01","2013-05-21 18:39:49",""
"43714822","Krusader : is it possible to connect to remote server with identity file?","<p>I am using <a href=""https://krusader.org/"" rel=""nofollow noreferrer"">https://krusader.org/</a> in Ubuntu.
Do you know if it possible to connect using a private SSH key (pem/ppk file)? I cannot find documentation about that.</p>
","<p>I found an answer using <code>~/.ssh/config</code> file.
Essentially, (create &amp;) edit the above file to include text which looks something like:</p>

<pre><code>Host alias_name
    User user
    HostName host.com
    IdentityFile key.pem
</code></pre>

<p>See <a href=""http://nerderati.com/2011/03/17/simplify-your-life-with-an-ssh-config-file/"" rel=""noreferrer"">link</a> for details.</p>

<p>Then, tell Krusader (or ssh in terminal) to connect to alias_name without password or user information. </p>

<p>Ubuntu is FUN!</p>
","2772","<ubuntu><ssh><private-key>","1","6","1","2017-05-01 06:08:10","","0","","","","","2017-05-01 05:45:12",""
"5586325","c# RSA extract public key from private key","<p>Is there a way to extract public key from private key in c#? Becouse if i do <code>ToXMLString()</code> then i can set if i want public key information saved with the private key. So now im thinking that is there a way to extract public key from private?</p>
","<p>If you can save it, and include the private key, then what you're saving is not just the private key.</p>

<p>However, if you really do have only the private key, then no, you can't ""extract"" the public key from it. If you could do that, you would render most of todays security obsolete.</p>

<p>So basically, I don't believe you have only the private key, you have a key pair, and you should be able to extract the public key from that.</p>

<p>Whether that is easily doable in C# or .NET, I have no idea.</p>
","2771","<c#><rsa><public-key><private-key>","3","0","3","2011-04-07 19:34:29","5586512","2","","655134","","2011-04-07 19:34:29","2011-04-07 19:12:46",""
"5586325","c# RSA extract public key from private key","<p>Is there a way to extract public key from private key in c#? Becouse if i do <code>ToXMLString()</code> then i can set if i want public key information saved with the private key. So now im thinking that is there a way to extract public key from private?</p>
","<p>Take the modulus from the private key, and the public exponent is - most likely - 65537. All Microsoft cryptosystems I've seen so far produce public keys with that exponent. The combination of public exponent and modulus is the public key.</p>
","2771","<c#><rsa><public-key><private-key>","3","1","3","2011-04-07 19:34:29","5586512","2","","655134","","2011-04-07 19:34:29","2011-04-07 19:12:46",""
"5586325","c# RSA extract public key from private key","<p>Is there a way to extract public key from private key in c#? Becouse if i do <code>ToXMLString()</code> then i can set if i want public key information saved with the private key. So now im thinking that is there a way to extract public key from private?</p>
","<p>The normal private key format for RSA includes the public key (the ""public exponent"" is useful for implementation of private key operations in a way which resists timing attacks). Therefore, it is possible to extract the public key from the private key.</p>

<p>(It is theoretically possible to have a ""pure RSA private key"" which does NOT include the public exponent, but it has drawbacks, such as much harder protection against side-channel attacks, and reduced performance. Therefore nobody in their right mind does that. You can assume that when you have the private key you actually have the complete key pair.)</p>

<p>In the C#/.NET standard library, public and private RSA keys can be represented as XML strings (<code>ToXmlString()</code> and <code>FromXmlString()</code>) or a custom <code>RSAParameters</code> structure (<code>ExportParameters()</code> and <code>ImportParameters()</code>). If you can obtain the complete private key then you just have to pick the public fields (modulus and public exponent), which constitute together the public key. Note that <code>RSACryptoServiceProvider</code> may be an interface to an underlying RSA implementation which could refuse to export the private key (but will usually accept to export the public key).</p>
","2771","<c#><rsa><public-key><private-key>","3","2","3","2011-04-07 19:34:29","5586512","2","","655134","","2011-04-07 19:34:29","2011-04-07 19:12:46",""
"44917253","Certificate with private key .Net Core","<p>Anyone know how to create a <code>X509Certificate2</code> with a private key in .net core, there is no property <code>X509Certificate2.PrivateKey</code> which I can set?</p>

<p>I have the following code</p>

<p><code>byte[] rawData = ....;
var x509Certificate2 = new X509Certificate2(rawData.ToArray(), ""XXXX"");
bool hasPK = x509Certificate2.HasPrivateKey; // is false
</code></p>

<p>How do I add my PK to the certificate above so that I can pass it into my IdentityServer 4 signing mechanism using <code>services.AddIdentityServer().AddSigningCredential(x509Certificate2);</code></p>

<p>Any help on either topic is appreciated</p>
","<p>Probably you want to have a look at this answered question first: <a href=""https://stackoverflow.com/questions/35880187/how-would-i-generate-the-identity-server-signing-certificate"">How would I generate the Identity Server signing certificate</a> </p>

<p>Then you will find that <code>makecert</code> is obsolete. Instead you could use PowerShell's: <a href=""https://technet.microsoft.com/itpro/powershell/windows/pkiclient/new-selfsignedcertificate"" rel=""nofollow noreferrer"">New-SelfSignedCertificate</a> or maybe an extension/helper of that: <a href=""https://www.sysadmins.lv/projects/pspki/New-SelfSignedCertificateEx.aspx"" rel=""nofollow noreferrer"">New-SelfSignedCertificateEx</a></p>

<p>Once the certificate is generated, you could load it into the Identity Server as described above.</p>
","2757","<.net-core><x509certificate><private-key><identityserver4>","2","-1","1","2017-07-17 11:46:42","","3","1","","","","2017-07-05 04:52:08",""
"20490517","SSL Public and Private Keys","<p>Please help me fill out the blanks here - </p>

<ol>
<li><p>The server keeps its private key and the public key is shared to the users. So the client trusts the content thats coming from the server using the public key. How does the client encrypt the contents he is sending back to the server ?. Using the public key of the server ? or does the client send a autogenerated private key and encrypts it using the public key which is then decypted by the server along with the message and used for furthter communication by both parties.</p></li>
<li><p>A Public and a Private key is required to do ssl communication. This Key pair is generated using a self signed certificate ?. How can a single self signed certificate contain both public and private keys.</p></li>
</ol>

<p><strong>One more thing On message level security</strong> --  im looking at a current configuration and am pulling my hair out -- Using IBM Ikeyman to look at the producer and Consumer JKS files-- for Message level security(Digital Signing) there is a Personal certificate at the Consumer and a Signer certificate at the Producer ... Isnt this the other way around? Is this current configuration incorrect --- Both the keys are same by the way.</p>
","<p>Public-key encryption 101:</p>

<p>The public and private keys form a pair: each key in the pair can decrypt messages encrypted with the other, but cannot decrypt messages encrypted with itself.  If the client can decrypt a message with the public key, it knows the message was encrypted by the owner of the public key.  Conversely, a message encrypted with the public key can only be decrypted by the owner of the private key.</p>

<p>The basic idea is that the client generates a key for a symmetric-key cypher, encrypts it with the public key, and sends that to the server.  Both sides then use that symmetric key and cypher for the majority of the communication.</p>
","2725","<ssl><ssl-certificate><public-key-encryption><private-key><websphere-6.1>","-1","-1","3","2013-12-10 15:19:10","20494304","1","0","2772640","","2013-12-10 15:19:10","2013-12-10 09:25:19",""
"20490517","SSL Public and Private Keys","<p>Please help me fill out the blanks here - </p>

<ol>
<li><p>The server keeps its private key and the public key is shared to the users. So the client trusts the content thats coming from the server using the public key. How does the client encrypt the contents he is sending back to the server ?. Using the public key of the server ? or does the client send a autogenerated private key and encrypts it using the public key which is then decypted by the server along with the message and used for furthter communication by both parties.</p></li>
<li><p>A Public and a Private key is required to do ssl communication. This Key pair is generated using a self signed certificate ?. How can a single self signed certificate contain both public and private keys.</p></li>
</ol>

<p><strong>One more thing On message level security</strong> --  im looking at a current configuration and am pulling my hair out -- Using IBM Ikeyman to look at the producer and Consumer JKS files-- for Message level security(Digital Signing) there is a Personal certificate at the Consumer and a Signer certificate at the Producer ... Isnt this the other way around? Is this current configuration incorrect --- Both the keys are same by the way.</p>
","<p>In SSL communication,when the client wants to interact with some server, the server sends its public key. Always remember a certificate is nothing but a public key with a bunch of supporting information. 
The problem here is any hacker can masquerade as a server and can block the communication between server and client. So the server certificate must be signed by some certificate authority. The client only believes the server certificate if it is signed by a certificate authority.In that case the hacker in between can not masquerade as a server because its certificate will not be authenticated by the certificate authority.</p>

<p>So client accepts the certificate and gets the public key of server. Now the client can send its public key encrypted by the public key of the server. Since this encrypted message can only be decrypted by the private key of the server so only server can decrypt it.</p>

<p>But the use of public key and private key over the ssl communication can slow down the connection very much because these keys lengths are 1024 or 2048 bits. </p>

<p>So practically what happens is instead of sending its own public key, the client sends the symmetric key encrypted by the public key of the server. Server decrypts it with its private key and it gets to know the symmetric key. Now the further communication happens with this symmetric key encryption and decryption.Since no third party gets to know the symmetric key, the communication will be secure.
Remember symmetric key lengths are generally 64-128 unlike public keys hence less the time for encryption and decryption.  </p>
","2725","<ssl><ssl-certificate><public-key-encryption><private-key><websphere-6.1>","-1","-1","3","2013-12-10 15:19:10","20494304","1","0","2772640","","2013-12-10 15:19:10","2013-12-10 09:25:19",""
"20490517","SSL Public and Private Keys","<p>Please help me fill out the blanks here - </p>

<ol>
<li><p>The server keeps its private key and the public key is shared to the users. So the client trusts the content thats coming from the server using the public key. How does the client encrypt the contents he is sending back to the server ?. Using the public key of the server ? or does the client send a autogenerated private key and encrypts it using the public key which is then decypted by the server along with the message and used for furthter communication by both parties.</p></li>
<li><p>A Public and a Private key is required to do ssl communication. This Key pair is generated using a self signed certificate ?. How can a single self signed certificate contain both public and private keys.</p></li>
</ol>

<p><strong>One more thing On message level security</strong> --  im looking at a current configuration and am pulling my hair out -- Using IBM Ikeyman to look at the producer and Consumer JKS files-- for Message level security(Digital Signing) there is a Personal certificate at the Consumer and a Signer certificate at the Producer ... Isnt this the other way around? Is this current configuration incorrect --- Both the keys are same by the way.</p>
","<blockquote>
  <ol>
  <li>The server keeps its private key and the public key is shared to the users.</li>
  </ol>
</blockquote>

<p>Correct.</p>

<blockquote>
  <p>So the client trusts the content thats coming from the server using the public key.</p>
</blockquote>

<p>No. There is no 'so' about it. The client trusts the server <em>certificate</em> because it is signed by someone he trusts, and he knows it belongs to the server because the server provides a digital signature that the client can verify, which only the private key owner can do. Therefore he knows that the server owns that public key.</p>

<blockquote>
  <p>How does the client encrypt the contents he is sending back to the server ?.</p>
</blockquote>

<p>The client and server negotiate a shared session key independently using techniques described in RFC 2246. For the most part they don't involve PKI at all.</p>

<blockquote>
  <p>Using the public key of the server? or does the client send a autogenerated private key and encrypts it using the public key which is then decypted by the server along with the message and used for furthter communication by both parties.</p>
</blockquote>

<p>Neither, see above. This is quite a large subject.</p>

<blockquote>
  <ol>
  <li>A Public and a Private key is required to do ssl communication.</li>
  </ol>
</blockquote>

<p>No. <em>One</em> of the parties must have a private key and a corresponding certificate that the other party trusts, otherwise the communication is insecure.</p>

<blockquote>
  <p>This Key pair is generated using a self signed certificate</p>
</blockquote>

<p>No. The statement doesn't even make sense. Key pairs are generated first, nothing to do with certificates yet. The certificate is a wrapper for the public key.</p>

<blockquote>
  <p>How can a single self signed certificate contain both public and private keys.</p>
</blockquote>

<p>It can't, and it doesn't. Self-signing doesn't have anything to do with it either.</p>
","2725","<ssl><ssl-certificate><public-key-encryption><private-key><websphere-6.1>","-1","4","3","2013-12-10 15:19:10","20494304","1","0","2772640","","2013-12-10 15:19:10","2013-12-10 09:25:19",""
"40243239","Android Fingerprint API and Private/Public keys","<p>When I enrol first and only fingerprint and generate <code>KeyPair</code> the <code>PrivateKey</code> gets invalidated when I use it for the second time. This happens only once. Am I the only one having this issue? Is there something wrong with my code?</p>

<p>I cannot use any other key as I'm using <code>PrivateKey</code> to sign data.</p>

<p>Steps:</p>

<ol>
<li>Wipe all fingerprints</li>
<li>Enrol one fingerprint</li>
<li>Generate <code>KeyPair</code> and use <code>FingerprintManager :: authenticate</code></li>
<li>During next use of <code>FingerprintManager :: authenticate PrivateKey</code> gets permanently invalidated. This happens only for the first time</li>
</ol>

<p>Below the code where I generate the <code>KeyPair</code></p>

<pre><code>KeyStore keyStore = KeyStore.getInstance(""AndroidKeyStore"");
keystore.load(null);
KeyPairGenerator generator = KeyPairGenerator.getInstance(KeyProperties.KEY_ALGORITHM_EC, ""AndroidKeyStore"");
generator.initialize(new KeyGenParameterSpec.Builder(""key_name"", KeyProperties.PURPOSE_SIGN)
    .setDigests(digest) // I have defined digest before
    .setSignaturePaddings(paddings) // I have defined paddings before
    .setUserAuthenticationRequired(true)
    .build());
generator.generateKeyPair();
</code></pre>

<p>And here is the code where I invoke fingerprint authentication for data signing:</p>

<pre><code>KeyStore keyStore = KeyStore.getInstance(""AndroidKeyStore"");
keyStore.load(null);
Signature signature = Signature.getInstance(""signing_algorithm"");
PrivateKey privateKey = (PrivateKey) keyStore.getKey(""key_name"", null);
signature.initSign(privateKey); // Here I get KeyPermanentlyInvalidatedException
CryptoObject crypto = new CryptoObject(signature);
FingerprintManager fingerprintManager = context.getSystemService(FingerprintManager.class);
CancellationSignal cancellationSignal = new CancellationSignal();
AuthenticationCallback authenticationCallback = new AuthenticationCallback() {
    ...
};
fingerprintManager.authenticate(crypto, cancelationSignal, 0, authenticationCallback, null);
</code></pre>
","<p>i try this <a href=""http://www.androidhive.info/2016/11/android-add-fingerprint-authentication/"" rel=""nofollow noreferrer"">link</a> and work perfectly .</p>

<p>First you need to set Minimum sdk look like the Picture</p>

<p><a href=""https://i.stack.imgur.com/BFtwO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/BFtwO.png"" alt=""Image ""></a></p>

<p>Second set Permission in Mainfest</p>

<pre><code>   &lt;uses-permission android:name=""android.permission.USE_FINGERPRINT"" /&gt;
</code></pre>

<p>Third</p>

<blockquote>
  <p>generateKey() function which generates an encryption key which is then stored securely on the device.</p>
  
  <p>cipherInit() function that initializes the cipher that will be used to create the encrypted FingerprintManager.</p>
  
  <p>CryptoObject instance and various other checks before initiating the authentication process which is implemented inside onCreate() method.</p>
</blockquote>

<p><strong><code>FingerPrintActivty.java</code></strong></p>

<pre><code>import android.Manifest;
import android.annotation.TargetApi;
import android.app.KeyguardManager;
import android.content.pm.PackageManager;
import android.hardware.fingerprint.FingerprintManager;
import android.os.Build;
import android.security.keystore.KeyGenParameterSpec;
import android.security.keystore.KeyPermanentlyInvalidatedException;
import android.security.keystore.KeyProperties;
import android.support.v4.app.ActivityCompat;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.widget.TextView;
import java.io.IOException;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.UnrecoverableKeyException;
import java.security.cert.CertificateException;
import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;


public class FingerprintActivity extends AppCompatActivity {


   private KeyStore keyStore;
   // Variable used for storing the key in the Android Keystore container
   private static final String KEY_NAME = ""androidHive"";
   private Cipher cipher;
   private TextView textView;


   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       setContentView(R.layout.activity_fingerprint);


       // Initializing both Android Keyguard Manager and Fingerprint Manager
       KeyguardManager keyguardManager = (KeyguardManager) getSystemService(KEYGUARD_SERVICE);
       FingerprintManager fingerprintManager = (FingerprintManager) getSystemService(FINGERPRINT_SERVICE);


       textView = (TextView) findViewById(R.id.errorText);


       // Check whether the device has a Fingerprint sensor.
       if(!fingerprintManager.isHardwareDetected()){
           /**
            * An error message will be displayed if the device does not contain the fingerprint hardware.
            * However if you plan to implement a default authentication method,
            * you can redirect the user to a default authentication activity from here.
            * Example:
            * Intent intent = new Intent(this, DefaultAuthenticationActivity.class);
            * startActivity(intent);
            */
           textView.setText(""Your Device does not have a Fingerprint Sensor"");
       }else {
           // Checks whether fingerprint permission is set on manifest
           if (ActivityCompat.checkSelfPermission(this, Manifest.permission.USE_FINGERPRINT) != PackageManager.PERMISSION_GRANTED) {
               textView.setText(""Fingerprint authentication permission not enabled"");
           }else{
               // Check whether at least one fingerprint is registered
               if (!fingerprintManager.hasEnrolledFingerprints()) {
                   textView.setText(""Register at least one fingerprint in Settings"");
               }else{
                   // Checks whether lock screen security is enabled or not
                   if (!keyguardManager.isKeyguardSecure()) {
                       textView.setText(""Lock screen security not enabled in Settings"");
                   }else{
                       generateKey();


                       if (cipherInit()) {
                           FingerprintManager.CryptoObject cryptoObject = new FingerprintManager.CryptoObject(cipher);
                           FingerprintHandler helper = new FingerprintHandler(this);
                           helper.startAuth(fingerprintManager, cryptoObject);
                       }
                   }
               }
           }
       }
   }


   @TargetApi(Build.VERSION_CODES.M)
   protected void generateKey() {
       try {
           keyStore = KeyStore.getInstance(""AndroidKeyStore"");
       } catch (Exception e) {
           e.printStackTrace();
       }


       KeyGenerator keyGenerator;
       try {
           keyGenerator = KeyGenerator.getInstance(KeyProperties.KEY_ALGORITHM_AES, ""AndroidKeyStore"");
       } catch (NoSuchAlgorithmException | NoSuchProviderException e) {
           throw new RuntimeException(""Failed to get KeyGenerator instance"", e);
       }


       try {
           keyStore.load(null);
           keyGenerator.init(new
                   KeyGenParameterSpec.Builder(KEY_NAME,
                   KeyProperties.PURPOSE_ENCRYPT |
                           KeyProperties.PURPOSE_DECRYPT)
                   .setBlockModes(KeyProperties.BLOCK_MODE_CBC)
                   .setUserAuthenticationRequired(true)
                   .setEncryptionPaddings(
                           KeyProperties.ENCRYPTION_PADDING_PKCS7)
                   .build());
           keyGenerator.generateKey();
       } catch (NoSuchAlgorithmException |
               InvalidAlgorithmParameterException
               | CertificateException | IOException e) {
           throw new RuntimeException(e);
       }
   }


   @TargetApi(Build.VERSION_CODES.M)
   public boolean cipherInit() {
       try {
           cipher = Cipher.getInstance(KeyProperties.KEY_ALGORITHM_AES + ""/"" + KeyProperties.BLOCK_MODE_CBC + ""/"" + KeyProperties.ENCRYPTION_PADDING_PKCS7);
       } catch (NoSuchAlgorithmException | NoSuchPaddingException e) {
           throw new RuntimeException(""Failed to get Cipher"", e);
       }


       try {
           keyStore.load(null);
           SecretKey key = (SecretKey) keyStore.getKey(KEY_NAME,
                   null);
           cipher.init(Cipher.ENCRYPT_MODE, key);
           return true;
       } catch (KeyPermanentlyInvalidatedException e) {
           return false;
       } catch (KeyStoreException | CertificateException | UnrecoverableKeyException | IOException | NoSuchAlgorithmException | InvalidKeyException e) {
           throw new RuntimeException(""Failed to init Cipher"", e);
       }
   }
}
</code></pre>

<p><strong>FingerprintAuthenticationHandler.Class</strong></p>

<pre><code>import android.Manifest;
import android.app.Activity;
import android.content.Context;
import android.content.pm.PackageManager;
import android.hardware.fingerprint.FingerprintManager;
import android.os.CancellationSignal;
import android.support.v4.app.ActivityCompat;
import android.support.v4.content.ContextCompat;
import android.widget.TextView;


/**
* Created by whit3hawks on 11/16/16.
*/
public class FingerprintHandler extends FingerprintManager.AuthenticationCallback {


   private Context context;


   // Constructor
   public FingerprintHandler(Context mContext) {
       context = mContext;
   }


   public void startAuth(FingerprintManager manager, FingerprintManager.CryptoObject cryptoObject) {
       CancellationSignal cancellationSignal = new CancellationSignal();
       if (ActivityCompat.checkSelfPermission(context, Manifest.permission.USE_FINGERPRINT) != PackageManager.PERMISSION_GRANTED) {
           return;
       }
       manager.authenticate(cryptoObject, cancellationSignal, 0, this, null);
   }


   @Override
   public void onAuthenticationError(int errMsgId, CharSequence errString) {
       this.update(""Fingerprint Authentication error\n"" + errString, false);
   }


   @Override
   public void onAuthenticationHelp(int helpMsgId, CharSequence helpString) {
       this.update(""Fingerprint Authentication help\n"" + helpString, false);
   }


   @Override
   public void onAuthenticationFailed() {
       this.update(""Fingerprint Authentication failed."", false);
   }


   @Override
   public void onAuthenticationSucceeded(FingerprintManager.AuthenticationResult result) {
       this.update(""Fingerprint Authentication succeeded."", true);
   }


   public void update(String e, Boolean success){
       TextView textView = (TextView) ((Activity)context).findViewById(R.id.errorText);
       textView.setText(e);
       if(success){
           textView.setTextColor(ContextCompat.getColor(context,R.color.colorPrimaryDark));
       }
   }
}
</code></pre>

<p>Hope it help.</p>
","2699","<android><private-key><fingerprint>","19","2","2","2017-10-15 12:00:13","","7","3","1430390","","2016-12-05 08:11:10","2016-10-25 14:55:20",""
"40243239","Android Fingerprint API and Private/Public keys","<p>When I enrol first and only fingerprint and generate <code>KeyPair</code> the <code>PrivateKey</code> gets invalidated when I use it for the second time. This happens only once. Am I the only one having this issue? Is there something wrong with my code?</p>

<p>I cannot use any other key as I'm using <code>PrivateKey</code> to sign data.</p>

<p>Steps:</p>

<ol>
<li>Wipe all fingerprints</li>
<li>Enrol one fingerprint</li>
<li>Generate <code>KeyPair</code> and use <code>FingerprintManager :: authenticate</code></li>
<li>During next use of <code>FingerprintManager :: authenticate PrivateKey</code> gets permanently invalidated. This happens only for the first time</li>
</ol>

<p>Below the code where I generate the <code>KeyPair</code></p>

<pre><code>KeyStore keyStore = KeyStore.getInstance(""AndroidKeyStore"");
keystore.load(null);
KeyPairGenerator generator = KeyPairGenerator.getInstance(KeyProperties.KEY_ALGORITHM_EC, ""AndroidKeyStore"");
generator.initialize(new KeyGenParameterSpec.Builder(""key_name"", KeyProperties.PURPOSE_SIGN)
    .setDigests(digest) // I have defined digest before
    .setSignaturePaddings(paddings) // I have defined paddings before
    .setUserAuthenticationRequired(true)
    .build());
generator.generateKeyPair();
</code></pre>

<p>And here is the code where I invoke fingerprint authentication for data signing:</p>

<pre><code>KeyStore keyStore = KeyStore.getInstance(""AndroidKeyStore"");
keyStore.load(null);
Signature signature = Signature.getInstance(""signing_algorithm"");
PrivateKey privateKey = (PrivateKey) keyStore.getKey(""key_name"", null);
signature.initSign(privateKey); // Here I get KeyPermanentlyInvalidatedException
CryptoObject crypto = new CryptoObject(signature);
FingerprintManager fingerprintManager = context.getSystemService(FingerprintManager.class);
CancellationSignal cancellationSignal = new CancellationSignal();
AuthenticationCallback authenticationCallback = new AuthenticationCallback() {
    ...
};
fingerprintManager.authenticate(crypto, cancelationSignal, 0, authenticationCallback, null);
</code></pre>
","<p>you can see this one on github: hope it will help you : <a href=""https://github.com/abennsir/android-ConfirmCredential"" rel=""nofollow noreferrer"">Confirm Credentials </a></p>
","2699","<android><private-key><fingerprint>","19","0","2","2017-10-15 12:00:13","","7","3","1430390","","2016-12-05 08:11:10","2016-10-25 14:55:20",""
"10642237","Use PrivateKey of a X509Certificate2 stored in Certificate Store and marked as non-exportable using BouncyCastle and C#","<p>I'm trying to build a small certificate authority using bouncycastle.</p>

<p>The certificate is generated by using BouncyCastle and is stored in the Certificate Store of the current user, along with the private key.</p>

<p>However for security reasons the key is marked as non-exportable. I know that it is easy to circumvent this, but it's meant to be an additional barrier.</p>

<p>Now if a new certificate should be signed, I need to access the private key of the certificate. I tried using this code:</p>

<pre><code>X509Certificate2 caCert = GetRootKey(); // Fetches the certificate from the store
AsymmetricCipherKeyPair caPrivKey = DotNetUtilities.GetKeyPair(caCert.PrivateKey);
</code></pre>

<p>Unfortunately I get an CryptographicException - because the private key is marked as not exportable, and this is what I intended ;-)</p>

<p>My question is: How can I use the private key of the certificate without accessing it? I'm pretty sure I'm missing some important point as it would not make any sense to have a private key stored without any way to access it...</p>

<p>I'm searching now for hours for this, but don't find anything on stackoverflow or Google.</p>

<p>Can anyone tell me please what I do fundamentally wrong? Is there another approach to sign something?!</p>

<p>Thanks in advance!</p>

<p>Chris</p>
","<p>Short answer: Not with BouncyCastle.</p>

<p>You can't put the key into the BouncyCastle (or OpenSSL or any other) library and use it from there. There is no way to do this without circumventing the ""no export"" flag and exporting it, which as you point out is possible if you are an administrator and have the requisite Fu.</p>

<p>What you can do is get a CryptoAPI handle to the key, and ask CryptoAPI to do the signing or encryption operations for you. The DotNet crypto classes encapsulate CyptoAPI.</p>

<p>So essentially what you need is a tutorial on how to use the DotNet crypto classes. There are many, for example this MSDN Magazine article has an example of digital signatures about three quarters of the way down:</p>

<p><a href=""http://msdn.microsoft.com/en-us/magazine/cc163454.aspx"" rel=""nofollow"">http://msdn.microsoft.com/en-us/magazine/cc163454.aspx</a></p>
","2660","<c#><certificate><bouncycastle><private-key><x509certificate2>","1","0","2","2019-05-07 20:49:17","10642741","0","","","","","2012-05-17 19:25:22",""
"10642237","Use PrivateKey of a X509Certificate2 stored in Certificate Store and marked as non-exportable using BouncyCastle and C#","<p>I'm trying to build a small certificate authority using bouncycastle.</p>

<p>The certificate is generated by using BouncyCastle and is stored in the Certificate Store of the current user, along with the private key.</p>

<p>However for security reasons the key is marked as non-exportable. I know that it is easy to circumvent this, but it's meant to be an additional barrier.</p>

<p>Now if a new certificate should be signed, I need to access the private key of the certificate. I tried using this code:</p>

<pre><code>X509Certificate2 caCert = GetRootKey(); // Fetches the certificate from the store
AsymmetricCipherKeyPair caPrivKey = DotNetUtilities.GetKeyPair(caCert.PrivateKey);
</code></pre>

<p>Unfortunately I get an CryptographicException - because the private key is marked as not exportable, and this is what I intended ;-)</p>

<p>My question is: How can I use the private key of the certificate without accessing it? I'm pretty sure I'm missing some important point as it would not make any sense to have a private key stored without any way to access it...</p>

<p>I'm searching now for hours for this, but don't find anything on stackoverflow or Google.</p>

<p>Can anyone tell me please what I do fundamentally wrong? Is there another approach to sign something?!</p>

<p>Thanks in advance!</p>

<p>Chris</p>
","<p>This question is exactly what I need, but the answer has a link that is not working.
After searching for some time I found this implementation using NCrypt library:
<a href=""https://github.com/Microsoft/Windows-classic-samples/blob/master/Samples/Win7Samples/security/cryptoapi/CertSign/CPP/Sign.cpp"" rel=""nofollow noreferrer"">https://github.com/Microsoft/Windows-classic-samples/blob/master/Samples/Win7Samples/security/cryptoapi/CertSign/CPP/Sign.cpp</a></p>

<p>Unfortunately this is written in C, while I need a C# implementation. So I created this C++\CLI wrapper (SignerWrapper.h) that can be used in managed C# code:
<a href=""https://github.com/DmitriNymi/StoreCertificateSigner"" rel=""nofollow noreferrer"">https://github.com/DmitriNymi/StoreCertificateSigner</a></p>

<p>I also wrote a custom ISignatureFactory to be used in BouncyCastle, see PksAsn1SignatureFactory.cs in the same repo.  It is there only to have my custom ISigner to be created (my class: PksEcdsaSigner ).</p>

<p>Now you can pass PksAsn1SignatureFactory as ISignatureFactory to BouncyCastle for creating new certificates for example, see unit test PksAsn1SignatureFactoryTest.cs - explicit call to ISignatureFactory
and 
CertificateIssuerTest.cs - using helper class to create new certificates signed by private keys from another certificate in the store</p>
","2660","<c#><certificate><bouncycastle><private-key><x509certificate2>","1","0","2","2019-05-07 20:49:17","10642741","0","","","","","2012-05-17 19:25:22",""
"12956674","Does mysql have asymmetric encryption capabilities?","<p>My Question is simple - is there a build in functionality, like AES_ENCRYPT / AES_DECRYPT, for asymmetric (public / private key) encryption in MySQL?</p>

<p>Sadly, I only find answers that involve PHP (to encrypt it in php), and stuff like that. I would like to keep it in MySQL, since the whole application logic is handled by procedures - and I would like to avoid ruining that by bringing in external languages to solve this issue.</p>
","<p>There is no functionality for RSA encryption within MySQL.  it's sort of an odd use case, so the MySQL folks probably haven't seen fit to implement it</p>

<p>You'll have to do the RSA operations in the application layer, and pass the results into your procedures, unless you fancy implementing RSA within MySQL yourself (which I really cannot advise at all)</p>
","2652","<mysql><encryption><public-key-encryption><private-key><encryption-asymmetric>","4","3","3","2016-02-02 06:27:53","14165792","2","0","","","","2012-10-18 14:10:47",""
"12956674","Does mysql have asymmetric encryption capabilities?","<p>My Question is simple - is there a build in functionality, like AES_ENCRYPT / AES_DECRYPT, for asymmetric (public / private key) encryption in MySQL?</p>

<p>Sadly, I only find answers that involve PHP (to encrypt it in php), and stuff like that. I would like to keep it in MySQL, since the whole application logic is handled by procedures - and I would like to avoid ruining that by bringing in external languages to solve this issue.</p>
","<p>What you can do is something like this; Make a shared secret between multiple users using their pub/priv keys, then use that shared secret as the AES symetric key to unlock the data in mysql.</p>

<p>What this means is that you can utilize mysql's inbuilt AES encrypt function for convenience while still maintaining secure data given that you will never know the shared secret.</p>

<p>eg:
<img src=""https://i.stack.imgur.com/Vcn6J.png"" alt=""Alice / Bob shared secret / coloured paint""></p>

<p>Also you can try reading this <a href=""http://maths.straylight.co.uk/edb_files/crypto_colloquium.pdf"" rel=""nofollow noreferrer"">enter link description here</a></p>
","2652","<mysql><encryption><public-key-encryption><private-key><encryption-asymmetric>","4","2","3","2016-02-02 06:27:53","14165792","2","0","","","","2012-10-18 14:10:47",""
"12956674","Does mysql have asymmetric encryption capabilities?","<p>My Question is simple - is there a build in functionality, like AES_ENCRYPT / AES_DECRYPT, for asymmetric (public / private key) encryption in MySQL?</p>

<p>Sadly, I only find answers that involve PHP (to encrypt it in php), and stuff like that. I would like to keep it in MySQL, since the whole application logic is handled by procedures - and I would like to avoid ruining that by bringing in external languages to solve this issue.</p>
","<p>I am very much agree to @Peter Elliott. But as part of answer I would like to add that MySQL Enterprise Encryption provide that kind of facility such as :</p>

<p>MySQL Enterprise Encryption gives DBAs and Developers the tools they need for:</p>

<ul>
<li>Asymmetric Public Key Encryption (RSA) Asymmetric Private Key</li>
<li>Decryption (RSA) Generate Public/Private Key (RSA, DSA, DH) Derive</li>
<li>Symmetric Keys from Public and Private Key pairs (DH) Digitally Sign</li>
<li>Data (RSA, DSA) Verify Data Signature (RSA, DSA) Validation Data</li>
<li>Authenticity (RSA, DSA)</li>
</ul>

<p>For more information you can visit <a href=""https://www.mysql.com/products/enterprise/encryption.html"" rel=""nofollow"">MySQL Enterprise Encryption</a>, I hope this will be helpful to you.</p>
","2652","<mysql><encryption><public-key-encryption><private-key><encryption-asymmetric>","4","0","3","2016-02-02 06:27:53","14165792","2","0","","","","2012-10-18 14:10:47",""
"13903300","PHP Creating CSR using existing private key","<pre><code>&lt;?php 
$c = $_POST['c'];
$city = $_POST['city'];
$cn = $_POST['cn'];
$mail = $_POST['email'];
$p = $_POST['pass'];
echo ""$c&lt;BR&gt;$city&lt;br&gt;$cn&lt;br&gt;$mail"";
$key = $_POST['key'];
$dn = array(
""countryName"" =&gt; ""$c"",
""stateOrProvinceName"" =&gt; ""."",
""localityName"" =&gt; ""$city"",
""organizationName"" =&gt; ""."",
""organizationalUnitName"" =&gt; ""."",
""commonName"" =&gt; ""$cn"",
""emailAddress"" =&gt; ""$key""
//""passphase"" =&gt; ""$p""
);
// Generate a certificate signing request
$csr = openssl_csr_new($dn, $key);
var_dump($csr);
while ($msg = openssl_error_string())
echo $msg . ""&lt;br /&gt;\n"";
?&gt;
</code></pre>

<p>It is showing me an error:   </p>

<pre><code>Warning: openssl_csr_new(): dn: add_entry_by_NID 48 -&amp;gt; -----BEGIN RSA PRIVATE KEY----- M[...]= -----END RSA PRIVATE KEY----- (failed; check error queue and value of string_mask OpenSSL option if illegal characters are reported) in D:\wamp\www\csr.php on line 21
</code></pre>

<p>and  </p>

<pre><code>boolean false
error:0E06D06C:configuration file routines:NCONF_get_string:no value
error:0E06D06C:configuration file routines:NCONF_get_string:no value
error:0E06D06C:configuration file routines:NCONF_get_string:no value
error:0E06D06C:configuration file routines:NCONF_get_string:no value
error:0E06D06C:configuration file routines:NCONF_get_string:no value
error:0E06D06C:configuration file routines:NCONF_get_string:no value
error:0D07A097:asn1 encoding routines:ASN1_mbstring_ncopy:string too long
</code></pre>

<p>This is what I found on php.net  </p>

<pre><code>mixed openssl_csr_new ( array $dn , resource &amp;$privkey [, array $configargs [, array $extraattribs ]] )  
</code></pre>

<p><code>$pivkey</code> should be a resource type, what if I already have got a private key as string?</p>
","<p>Personally, I'd use <a href=""http://phpseclib.sourceforge.net/"" rel=""nofollow"">phpseclib, a pure PHP CSR implementation</a>. eg.</p>

<pre><code>&lt;?php
include('File/X509.php');
include('Crypt/RSA.php');

$key = new Crypt_RSA();
$key-&gt;loadKey($_POST['key']);

$x509 = new File_X509();
$x509-&gt;setPrivateKey($key);
$x509-&gt;setDN(array(
    'countryName' =&gt; $_POST['c'],
    'stateOrProvinceName' =&gt; '.',
    'localityName' =&gt; $_POST['city'],
    'organizationName' =&gt; '.',
    'organizationalUnitName' =&gt; '.',
    'commonName' =&gt; $_POST['cn'],
    'emailAddress' =&gt; $_POST['email']
));

$csr = $x509-&gt;signCSR();

echo $x509-&gt;saveCSR($csr);
?&gt;
</code></pre>
","2640","<php><openssl><private-key><csr>","1","4","1","2012-12-17 02:36:44","13907608","0","1","1292178","","2012-12-16 16:52:05","2012-12-16 16:38:09",""
"12545124","Two private key asymmetric encryption - possible?","<p>I am wondering if there exists some asymmetric encryption algorithm that would work with two different private keys, so that the encrypted message can be decrypted by either one of such private keys?</p>
","<p>There is no such algorithm as far as I know, but there is a common solution. The enciphered text is transferred together with a set of cryptograms of the symmetric key used to encipher the text itself. Each such cryptogram of the key is a result of enciphering the original key with the public key of one of recipients. Thus, all recipients knowing their private keys may decipher the key used to encipher the data and then decipher the message itself. </p>
","2626","<encryption><public-key-encryption><private-key><public-key><encryption-asymmetric>","8","2","4","2014-02-25 14:55:33","12546292","0","2","15168","","2012-09-22 21:19:23","2012-09-22 15:32:24",""
"12545124","Two private key asymmetric encryption - possible?","<p>I am wondering if there exists some asymmetric encryption algorithm that would work with two different private keys, so that the encrypted message can be decrypted by either one of such private keys?</p>
","<p>Typically a hybrid encryptions scheme is used. I.e. the message is encrypted with a symmetric key cryptosytem, then the symmetric keys are encrypted with the public keys of each of the intended receivers. </p>
","2626","<encryption><public-key-encryption><private-key><public-key><encryption-asymmetric>","8","1","4","2014-02-25 14:55:33","12546292","0","2","15168","","2012-09-22 21:19:23","2012-09-22 15:32:24",""
"12545124","Two private key asymmetric encryption - possible?","<p>I am wondering if there exists some asymmetric encryption algorithm that would work with two different private keys, so that the encrypted message can be decrypted by either one of such private keys?</p>
","<p>You could use a symmetric encryption and secret sharing scheme on top of that, ""splitting the key in half"".</p>

<p>More on secret sharing: <a href=""http://en.wikipedia.org/wiki/Secret_sharing"" rel=""nofollow"">http://en.wikipedia.org/wiki/Secret_sharing</a></p>

<p>Steps on how I see it:</p>

<ol>
<li>Encrypt the data using (pseudo) randomly generated key.</li>
<li>Distribute the secret using <a href=""http://en.wikipedia.org/wiki/Shamir%27s_Secret_Sharing"" rel=""nofollow"">Shamir's secret sharing</a> which is the key to two shares, where as one share will suffice to get the key.</li>
</ol>

<p>The end result is that one (or more) ""keys"" are required to get the data.</p>
","2626","<encryption><public-key-encryption><private-key><public-key><encryption-asymmetric>","8","3","4","2014-02-25 14:55:33","12546292","0","2","15168","","2012-09-22 21:19:23","2012-09-22 15:32:24",""
"12545124","Two private key asymmetric encryption - possible?","<p>I am wondering if there exists some asymmetric encryption algorithm that would work with two different private keys, so that the encrypted message can be decrypted by either one of such private keys?</p>
","<p>Asymmetric keys are never used for encrypting <em>messages</em> (too slow, has a size limit, etc.), only for encrypting small buffers, like symmetric keys for messages. </p>

<p>When you encrypt a message with an asymm. key, you are in fact encrypting a <em>symmetric</em> key which encrypts the message. </p>

<p>Simply encrypt the same symmetric key with two different asymm. keys and you'd get two different cipherblocks which both contain the same symmetric key for the message, so you can decrypt with either one.</p>
","2626","<encryption><public-key-encryption><private-key><public-key><encryption-asymmetric>","8","11","4","2014-02-25 14:55:33","12546292","0","2","15168","","2012-09-22 21:19:23","2012-09-22 15:32:24",""
"23037955","how to store private keys in database or server (php)","<p>I have  a web application that uses private and public keys to encrypte my fillable form. </p>

<p>I'm using OPENSSL and PHP. My question is that how can i store private keys for each user in database or server? I dont know which one is more safely. Additionaly, my encyrption code ;</p>

<pre><code>//create new private and public key

$new_key_pair = openssl_pkey_new(array(

    ""private_key_bits"" =&gt; 2048,

    ""private_key_type"" =&gt; OPENSSL_KEYTYPE_RSA,

));

openssl_pkey_export($new_key_pair, $private_key_pem);

$details = openssl_pkey_get_details($new_key_pair);

$public_key_pem = $details['key'];

//create signature

//openssl_sign($data, $signature, $private_key_pem, OPENSSL_ALGO_SHA256);

//save for later

file_put_contents('private_key.pem', $private_key_pem);

file_put_contents('public_key.pem', $public_key_pem);
//file_put_contents('signature.dat', $signature);

//verify signature
//$r = openssl_verify($data, $signature, $public_key_pem, ""sha256WithRSAEncryption"");
//var_dump($r);


echo $private_key_pem;

echo ""\r\n"";

echo $public_key_pem;

echo ""\r\n"";

echo $data;

echo ""\r\n"";
</code></pre>

<p>How can i prevent my private and public keys ? It shows on the screen</p>
","<p>The public key need no security, so you can save as clear text in the database.</p>

<p>with the private key you have different solution based on level of security and kinds of attacks you want to avoid.</p>

<p>1
save the pk as clear text in the db. Never write php code that echo the pk</p>

<p>2
save the pk in p12 format protect it with a password. You can prompt the password to the user every time you need</p>

<p>3
generete, store and use the pk using a HSM <a href=""http://en.m.wikipedia.org/wiki/Hardware_security_module"" rel=""nofollow"">http://en.m.wikipedia.org/wiki/Hardware_security_module</a></p>

<p>i suggest solution 2.</p>
","2601","<php><openssl><digital-signature><public-key-encryption><private-key>","1","1","1","2014-04-18 13:51:35","23120634","1","","608639","","2014-04-13 02:24:24","2014-04-13 01:00:31",""
"13795615","Keychain Assistant does not create public/private key pair, and my distribution certificates fail codesign verification","<p>My certificates were expiring today (and at this point, it's totally expired), so I set out to renew the certificates. But the problem is, I can't get matching private/public keys for proper code-signing verification with the renewed certificates.  All I've read says keychain will automatically create matching public/private keys, but it's not doing it for me.  I am totally stumped and I don't know what I can do at this point.  Please help.  Here's what I've done so far:</p>

<p>1)  I revoked the certificates from Apple Developer > iOS Provisioning Portal > Certificates > Developer and Distribution tabs.</p>

<p>2)  I launched Keychain Access.app from Applications > Utilities.</p>

<p>3)  I removed all outdated certificates, and eventually removed everything except for Apple Code Signing Certification Authority, Apple Worldwide Developer Relations Certification Authority, Dashboard Advisory and Software Signing.  (By the way, I have no idea what this ""Software Signing"" certificate is for, but it won't be expiring until 2015, I'm reluctant to delete it without knowing what it would do to the system if I deleted it.)</p>

<p>4)  I generated CertificateSigningRequest.certSigningRequest via Keychain Access > Certificate Assistant > Request a Certificate From a Certificate Authority</p>

<p>5)  Got the CertificateSigningRequest.certSigningRequest on desktop.  (At this point, I check the Keychain, and I still don't see my private or public keys.</p>

<p>6)  I submit the CertificateSigningRequest.certSigningRequest at Apple Developer > iOS Provisioning Portal > Certificates > Developer and Distribution tabs.</p>

<p>7)  I download the certificates, install them to keychain, and it looks like my certificates are now renewed for another year.</p>

<p>8)  I renew all provisioning profiles.</p>

<p>9)  I retrieve them to my Xcode.</p>

<p>10)  I generate new distribution build, then I get the warning that ""Application failed codesign verification.  The signature was invalid, contains disallowed entitlements, or it was not signed with an iPhone Distribution Certificate.""</p>

<p>11)  I look at the Keychain again, and I don't see my private or public keys. </p>

<p>12)  Well, I exported p12 file a year ago.  So, okay, I start all over again (i.e., take the steps 1, 2 and 3.)  Then I import the p12 file.  Now I see my private key in my Keychain.</p>

<p>13)  I then resume with step 4 above (i.e., get the CertificateSigningRequest.certSigningRequest via Keychain Access > Certificate Assistant > Request a Certificate From a Certificate Authority)</p>

<p>14)  I continue on with steps 5 through 8.  Just to make sure, I reboot my machine again.  Then I check my Keychain, and public key is still missing, and taking steps 9 and 10 results exactly the same.</p>

<p>What am I doing wrong?  What should I do to fix this problem?  I'd so appreciate any and all help.</p>

<hr>

<p>EDIT:  I'm not entirely sure which steps I took actually ended up fixing this, but I got it working now. Main thing was, deleting everything from keychain and look for possible cause all over the web, and and I did read this thread too:</p>

<p><a href=""http://hints.macworld.com/article.php?story=20060318124936642"" rel=""nofollow"">http://hints.macworld.com/article.php?story=20060318124936642</a></p>

<p>And run these commands:</p>

<p>sudo systemkeychain -vfcC</p>

<p>systemkeychain -vt</p>

<p>I also continued to look for how to repair keychain, run disk utility, repairing any and all permission issues, etc.</p>

<p>And eventually, my keychain access app started working as expected again, and it finally generated both private and public keys.  Ahhhh.  Once it did that, everything else worked fine, doing the steps I took earlier.</p>
","","2586","<keychain><private-key><public-key>","1","","0","2012-12-10 20:13:05","","0","2","1804179","","2012-12-10 20:13:05","2012-12-10 05:39:59",""
"12415613","Generating public and private key pairs in c# and saving public key as plain text","<p>I need to implement encryption between a C# application and a micro controller (pic32mx795). The issue I'm having is generating a public and private key pair I'm using RSACryptoServiceProvider, but I can only get the key attributes and not the complete public key.</p>

<pre><code>RSACryptoServiceProvider RSA = new RSACryptoServiceProvider();
RSAParameters RSAKeyInfo = RSA.ExportParameters(false);
</code></pre>

<p>I'm unable to supply the micro controller with the key parameters as it only takes the key (as bytes). There is a library that will be able to do this, but it will only be available sometime in November 2012 (<a href=""http://www.microchipdirect.com/productsearch.aspx?Keywords=SW300055"" rel=""nofollow noreferrer"">SW300055</a>). I am using the SW300052 library to perform encryption on the micro-controller (key size is limited to 256 bits).</p>

<p>I've also tried bouncycastle suggestion in this thread (<a href=""https://stackoverflow.com/questions/6531054/generate-public-private-key-pair-and-show-them-in-textbox-in-asp-net"">generating keys and showing them in a text box)</a>. It saves the keys in a PEM format. From what I understand the keys are saved in a base64 format. I've specified the key length to be 256 bits but when converting the public key back to bytes, it is 62 bytes.</p>

<pre><code>byte[] encodedDataAsBytes = Convert.FromBase64String (publicKeyString);
</code></pre>

<p>I've also looked at Microsoft's Strong Name tool (sn.exe), but the minimum key size it supports is 384 bits.</p>

<p>Is there any way that I can generate a public private key pair and get the public key in plain text/bytes using c# (or with any other tool)? Am I just better off using symmetric key encryption to encrypt a session key?</p>
","<p>You can set up a <a href=""http://msdn.microsoft.com/en-us/library/windows/desktop/aa376539%28v=vs.85%29.aspx"" rel=""nofollow"">certificate server</a> on a windows box and request them directly. You'll need to install MS certificate services.
You can also use <a href=""http://msdn.microsoft.com/en-us/library/bfsktky3.aspx"" rel=""nofollow"">makecert</a> and access the key with <a href=""http://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.publickey.aspx"" rel=""nofollow"">c#</a>.</p>

<p>Or you could <a href=""http://msdn.microsoft.com/en-us/library/5e9ft273.aspx"" rel=""nofollow"">generate the keypair programmatically</a>.</p>
","2586","<encryption><private-key><public-key><plaintext><rsacryptoserviceprovider>","4","0","1","2012-09-14 09:16:42","","0","","-1","","2017-05-23 12:06:07","2012-09-13 22:21:50",""
"7441915","Private Key storage in Android","<p>I have to store the private key of my app in a secure location in the android device, i read about certStore, but it doesnt allow to store a file in it.
Is there any location where I can store it securely and doesn't get deleted if app re-installs.</p>
","<pre><code>You can store the key in the Preferences of your App. This will protect the key from
getting read by other applications because of the underlying file system restrictions of
the Android system.
</code></pre>

<p>But this won't protect the key from being read by the user itself.</p>

<p>and if you want to use this shared preference after your application removed and again installed in device then try for Android Backup Manager.
I think its help you in re-installation of your activity's data. </p>

<pre><code>EDIT: Android (unfortunately) does not provide a way to do so. The approach I've used
      before is to encrypt this token with another key generated within the app.

      Your app key can be algorithmically generated. This, however, is only as secure as
      your algorithm. Once that is known this is equivalent to storing the token in plain text.
</code></pre>

<p>Thanks.</p>
","2582","<android><certificate><private-key>","2","1","1","2011-09-17 07:30:49","7452856","8","","","","","2011-09-16 08:19:22",""
"20397556","Generating CSR and Exporting Private Key With C#","<p>I am trying to write a code to generate CSR and export its private key with C# programmatically. I found <a href=""http://blogs.msdn.com/b/alejacma/archive/2008/09/05/how-to-create-a-certificate-request-with-certenroll-and-net-c.aspx"" rel=""nofollow"">this blog post</a> (it is almost the only one about)</p>

<p>With the codes below CSR and private key can be generated and exported as Base64 Strings. Also SSL sertificate can be issued by this CSR. However exported private key has some errors. I got ""Key Modulus Hash: Unable to decode. The key may be corrupt or in an incorrect format."" from <a href=""https://www.sslshopper.com/certificate-key-matcher.html"" rel=""nofollow"">online tool</a>.</p>

<p>I hope you can show my mistake and you can save my day.</p>

<pre><code>class Program {

        private const int CC_DEFAULTCONFIG = 0;
        private const int CC_UIPICKCONFIG = 0x1;
        private const int CR_IN_BASE64 = 0x1;
        private const int CR_IN_FORMATANY = 0;
        private const int CR_IN_PKCS10 = 0x100;
        private const int CR_DISP_ISSUED = 0x3;
        private const int CR_DISP_UNDER_SUBMISSION = 0x5;
        private const int CR_OUT_BASE64 = 0x1;
        private const int CR_OUT_CHAIN = 0x100;
        static void Main(string[] args) {
            //  Create all the objects that will be required
            CX509CertificateRequestPkcs10 objPkcs10 = new CX509CertificateRequestPkcs10Class();
            CX509PrivateKey objPrivateKey = new CX509PrivateKeyClass();
            CCspInformation objCSP = new CCspInformationClass();
            CCspInformations objCSPs = new CCspInformationsClass();
            CX500DistinguishedName objDN = new CX500DistinguishedNameClass();
            CX509Enrollment objEnroll = new CX509EnrollmentClass();
            CObjectIds objObjectIds = new CObjectIdsClass();
            CObjectId objObjectId = new CObjectIdClass();
            CX509ExtensionKeyUsage objExtensionKeyUsage = new CX509ExtensionKeyUsageClass();
            CX509ExtensionEnhancedKeyUsage objX509ExtensionEnhancedKeyUsage = new CX509ExtensionEnhancedKeyUsageClass();
            string strRequest;

            try {


                //  Initialize the csp object using the desired Cryptograhic Service Provider (CSP)
                objCSP.InitializeFromName(
                    ""Microsoft RSA SChannel Cryptographic Provider""
                );

                //  Add this CSP object to the CSP collection object
                objCSPs.Add(
                    objCSP
                );
                String date = DateTime.Now.ToString(""MMddHHmmss"") + DateTime.Now.Millisecond.ToString();
                //  Provide key container name, key length and key spec to the private key object
                objPrivateKey.ContainerName = ""Company-"" + date; 
                objPrivateKey.Length = 2048;
                objPrivateKey.ProviderName = ""Microsoft RSA SChannel Cryptographic Provider"";
                objPrivateKey.ProviderType = X509ProviderType.XCN_PROV_RSA_SCHANNEL;
                objPrivateKey.KeySpec = X509KeySpec.XCN_AT_KEYEXCHANGE;
                objPrivateKey.KeyUsage = X509PrivateKeyUsageFlags.XCN_NCRYPT_ALLOW_ALL_USAGES;

                objPrivateKey.MachineContext = false;

                //  Provide the CSP collection object (in this case containing only 1 CSP object)
                //  to the private key object
                objPrivateKey.CspInformations = objCSPs;
                objPrivateKey.ExportPolicy = 
                    X509PrivateKeyExportFlags.XCN_NCRYPT_ALLOW_ARCHIVING_FLAG | 
                    X509PrivateKeyExportFlags.XCN_NCRYPT_ALLOW_EXPORT_FLAG | 
                    X509PrivateKeyExportFlags.XCN_NCRYPT_ALLOW_PLAINTEXT_ARCHIVING_FLAG |
                    X509PrivateKeyExportFlags.XCN_NCRYPT_ALLOW_PLAINTEXT_EXPORT_FLAG;

                //  Create the actual key pair
                objPrivateKey.Create();


                //  Initialize the PKCS#10 certificate request object based on the private key.
                //  Using the context, indicate that this is a user certificate request and don't
                //  provide a template name
                objPkcs10.InitializeFromPrivateKey(
                    X509CertificateEnrollmentContext.ContextUser,
                    objPrivateKey,
                    """"
                );

                // Key Usage Extension 
                objExtensionKeyUsage.InitializeEncode(
                    CERTENROLLLib.X509KeyUsageFlags.XCN_CERT_DIGITAL_SIGNATURE_KEY_USAGE |
                    CERTENROLLLib.X509KeyUsageFlags.XCN_CERT_NON_REPUDIATION_KEY_USAGE |
                    CERTENROLLLib.X509KeyUsageFlags.XCN_CERT_KEY_ENCIPHERMENT_KEY_USAGE |
                    CERTENROLLLib.X509KeyUsageFlags.XCN_CERT_DATA_ENCIPHERMENT_KEY_USAGE
                );
                objPkcs10.X509Extensions.Add((CX509Extension)objExtensionKeyUsage);

                // Enhanced Key Usage Extension
                objObjectId.InitializeFromValue(""1.3.6.1.5.5.7.3.1""); // OID for Client Authentication usage
                objObjectIds.Add(objObjectId);
                objX509ExtensionEnhancedKeyUsage.InitializeEncode(objObjectIds);
                objPkcs10.X509Extensions.Add((CX509Extension)objX509ExtensionEnhancedKeyUsage);

                //  Encode the name in using the Distinguished Name object
                objDN.Encode(
                    ""CN=www.mydomain.com, O=Company, OU=IT, C=TR, S=Istanbul;L=Istanbul, E=postmaster@mydomain.com"",
                    X500NameFlags.XCN_CERT_NAME_STR_NONE
                );

                //  Assing the subject name by using the Distinguished Name object initialized above
                objPkcs10.Subject = objDN;

                // Create enrollment request
                objEnroll.InitializeFromRequest(objPkcs10);

                strRequest = objEnroll.CreateRequest(
                    EncodingType.XCN_CRYPT_STRING_BASE64REQUESTHEADER
                );
                string key = objPrivateKey.Export(""PUBLICBLOB"", EncodingType.XCN_CRYPT_STRING_BASE64);
                File.WriteAllText(""C:\\csr.txt"", key);

                File.AppendAllText(""C:\\csr.txt"", strRequest);

            }
            catch(Exception ex) {
                Console.WriteLine(ex.Message);
                Console.ReadLine();
            }
        }
    }
</code></pre>
","","2571","<c#><ssl><rsa><private-key><csr>","3","","0","2013-12-05 10:38:25","","4","1","423699","","2013-12-05 10:38:25","2013-12-05 10:31:29",""
"17797311","Extract multiple keys from one .p12 file using OpenSSL ruby","<p>I am wondering how to extract keys from an Apple .p12 file. From my limited understanding, a .p12 file is a combination of X504 certificates and private keys. </p>

<p>I am seeing that every .p12 file I run into has a X504 certificate and at least one key, and in some situations two keys. This is due to the fact that every .p12 has an Apple developer key, and some have an extra key (possibly an Apple root authorization key). I am considering only those .p12 files with two keys as valid. My goal here is to differentiate between those .p12 files that have one key and those that have two. </p>

<p>So far I have used OpenSSL to be able to inspect X504 files and the keys of any .p12. For example I have this code that does the inspections for all .p12 files in a directory:</p>

<pre><code>Dir.glob('*.p12').each do |p|
  file = File.read(p)
  p12 = OpenSSL::PKCS12.new(file, """")

  # note that this new certificate is in an X509 format
  cert = p12.certificate
  puts p12.inspect()
  puts cert.inspect()
end
</code></pre>

<p>This is my output:</p>

<pre><code>#&lt;OpenSSL::PKCS12:0x007fcf33018920&gt;
#&lt;OpenSSL::X509::Certificate subject=/UID=FFBMT4K5/CN=iPhone Distribution: A.H. Belo Management Services, Inc./OU=FFBMT4K5/O=FFBMT4K5/C=US, issuer=/C=US/O=Apple Inc./OU=Apple Worldwide Developer Relations/CN=Apple Worldwide Developer Relations Certification Authority, serial=36597980220620, not_before=2012-01-11 16:30:22 UTC, not_after=2013-01-10 16:30:22 UTC&gt;
</code></pre>

<p>Now my problem is getting keys. If I do something like this: </p>

<pre><code>puts p12.key
</code></pre>

<p>I get a long string on encrypted data like this:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEA4Pet7CZrPr4x/SKjMwy5avXmcguzQlix/vBq+qq7aKQhctKr
d5HE7wk4jWbDGj7Rf9ckeFFMktTTbKYmnKCywCct/uJmgavFl1+t45DIQL2V1JMU
JSXvtjDXoKFweKQgdiha5mBNL70+ivqxMzJJw19E+MhFoZ6tFOgQ5gPLcDLR5WTU
ezxH9RbXGWbq+CMBjJ+lw8/Ako7IOm+d95ZTM6u333qp0dsn+1/I/zGeWE1gJXIl
8mIkvrp7+BDTvXHYALADwXnXijqvd/bANfetsDQ+gxRnc06dFt114JUuptcXGwbg
//ykDzNYhuibQD1Z65KfTB/ntQ1aE5FtHEXirwIDAQABAoIBACNCrt/0pZqP9QXY
B/xYYjeBkz0M2GvtuvhadmoTmIwuLY/xtS5oipVsvJBtKudSMUP4VJ8HHxlkgj7l
S+gAyAOWIH9yvN5WLgIr3PVuG/UJwhIve1jXOVs1DJcAtsAx+WSLrrOtJGv3HXZr
FJsRpr4YkJbtzPwoArjkJsHmllxfT2zeQPMJy+RQ/qlHUqsude/ahC0I3RiW3SgB
EKTNM1vGTEkox8bUUhHqNY3ERlihFpZC2wSkroETDY3RkSjuPkNy7uT/b66a/qjj
qaIA0YLhNOYGdN2llJN5GJjYYVKakpiipqcHCFrV1+JtbFB2tKhqAvK6fjCZcSFF
fW58owECgYEA/g8FvAPcejPR3O8E1ydNWChhd9UZQUeQNCET+lY3Dxwklk+u1140
yw/u2hUoNdJLfev1HtlYruglD9jW/LGoLaPodQfcHcaCSfdJa1mmKfSieApOe15+
ijO3WpZK/MJUTteGVMW/B/QnxPBGtsDo6q2v2YxA7fOhzmImn5hgxlsCgYEA4q/A
DBKe1WDZPUyG3R/Cfl5AEqEHly6VkCPFF+uYFZzep/SN/ez34r7fmcfl0RL7H9kn
Q4WBaCMbCgG9dErORW99usoBsjys5pojstNJDZwACUg9rPnV/+uUqMyocjeN0Vrl
2Vg0dC8HH1hLZPLkp+MAy2nNzmnnHcTKiTqsDT0CgYEApVzfzaXxvvS1t4k37Fbf
h+8YqefhfVT4LoYNO9ccFVCrG88XrYTa9gUT4Yz91DJiAr8vl/m+OHJPlUX9gRKd
tb9HEc2g3xyTN1OmzSHX/t0FVv7WYIR79rZ8tJC4lFZki8DK5aikk6e+rvf5/wAH
WqDcocwhgwAeJHhMTXrgGpsCgYBGYqWx2fJBdNHfK6zQafUdAazJXACcW5WK7OBc
vgU56Lxl0BRqnLKXUAbjm+Lq2Qbqa6W6XHDC4euaXtHxkuybOLQEVIbUTeytqXye
IOaU+DQ2rZyg4e4liYNeKjW/SSqar6ugobefv55piCPY02ZWDrEHd/G0PsPJRXpR
w8r6TQKBgFMoEZKywokRIbMCUHHRR3TVeizBMhbNUUmOiRhzsHZPJ2V63PNp3L1c
0NsRo62mbekXDRH8J0C8fLG4R64Y7+rHBQo0tBpgYepPU0NCrsojF7brtYYb3VqI
baVEPRhIy2tJylDad6M36DeOCIhvXalh8GaV/HhEr4lxykth+mGH
-----END RSA PRIVATE KEY-----
</code></pre>

<p>My question is how can I determine whether this certificate has more than one key, and also how I can inspect the keys for information. If what I am asking or my understanding of this issue is fundamentally flawed, please let me know. This is my first time being exposed to certificates and any information will be greatly helpful. Any points in the right direction will be appreciated, thanks in advance. </p>

<p>EDIT:</p>

<p>Using OpenSSL I can view the two shrouded keybags of a .p12. Example:</p>

<pre><code>openssl pkcs12 -in some_p12.p12 -info -noout
</code></pre>

<p>output:</p>

<pre><code>Enter Import Password:
MAC Iteration 1
MAC verified OK
PKCS7 Encrypted data: pbeWithSHA1And40BitRC2-CBC, Iteration 2048
Certificate bag
Certificate bag
PKCS7 Data
Shrouded Keybag: pbeWithSHA1And3-KeyTripleDES-CBC, Iteration 2048
Shrouded Keybag: pbeWithSHA1And3-KeyTripleDES-CBC, Iteration 2048
</code></pre>

<p>So I'm looking for a couple things. Generally speaking, what exactly are these keybags? And also, how can I inspect them/determine how many I have per .p12 file using Ruby. Thanks. </p>
","<p>A .p12 contains only 1 private key, and contains 1 or more public keys. The public keys are the ones that make the chain of trust.</p>

<p>.p12 is a binary format. To convert it and extract to individual certificates, look for example <a href=""https://www.sslshopper.com/ssl-converter.html"" rel=""nofollow"">here</a>. The link contains all the openssl commands you need.</p>
","2516","<ruby><ssl><ssl-certificate><private-key>","6","0","1","2015-04-20 07:35:27","","0","1","1834523","","2013-07-22 22:15:12","2013-07-22 20:59:02",""
"13852997","Access PFX File ECC PrivateKey For Symmetric Key Generation in Java","<p>I'm writing a program (in Java using the Bouncy Castle API) that encrypts files with AES-256/GCM with a key generated by ONE EC key pair. I have the symmetric encryption portion working perfectly but now the key generation is proving to be difficult. When trying to use the ECPublicKey object in the javax.crypto.KeyAgreement.init() method, it returns this error:</p>

<pre><code>Exception in thread ""main"" java.security.InvalidKeyException: ECDH key agreement requires ECPrivateKey for initialisation
    at org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi.initFromKey(Unknown Source)
    at org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi.engineInit(Unknown Source)
    at javax.crypto.KeyAgreement.init(KeyAgreement.java:461)
    at javax.crypto.KeyAgreement.init(KeyAgreement.java:435)
    at Encrpytion.generateKey(Encrpytion.java:188)  ---aKA.init(key);---
    at Encrpytion.main(Encrpytion.java:40) ---byte[] key = generateKey();---
</code></pre>

<p>The source code for the method is as follows:</p>

<pre><code>public static byte[] generateKey() {
    KeyStore ks = KeyStore.getInstance(""PKCS12"");
    FileInputStream fis = new FileInputStream(""file.pfx"");
    Scanner input = new Scanner(System.in);
    char[] chars = {};
    System.out.println(""Enter the password for your .pfx: "");
    chars = input.nextLine().toCharArray();
    input.close();
    Enumeration aliasEnum = null;
    ks.load(fis, chars);
    aliasEnum = ks.aliases();
    Key key = null;
    Certificate cert = null;
    while (aliasEnum.hasMoreElements()){
        String param = (String)aliasEnum.nextElement();
        if (ks.isKeyEntry(param))  {
            String keyName = param;
            key = ks.getKey(keyName,chars);
        }
        cert = ks.getCertificateChain(param)[0];
    }
    KeyPair kp = new KeyPair(cert.getPublicKey(),(ECPrivateKey) key);
    KeyAgreement aKA = null;
    aKA = KeyAgreement.getInstance(""ECDH"", ""BC"");
    aKA.init(key);
    aKA.doPhase(kp.getPublic(), true);
    return aKA.generateSecret();
}
</code></pre>

<p>How can I access the PrivateKey of the certificate?</p>

<p>**UPDATE: **updated sourcecode</p>

<p>** EDIT **
The following commands and instructions can be used to create some test files to demonstrate the problem.</p>

<pre><code>#Make root key
openssl ecparam -name secp521r1 -genkey -out root.key
#password protect key
openssl ec -in root.key -out root.key -aes256
####change req x509_attributes to rootCA
#selfsign root
openssl req -new -x509 -key root.key -out root.crt -days 1825 -config openssl.cfg
###comment out req x509_attributes
#make new key for clientCA
openssl ecparam -name secp521r1 -genkey -out client.key
#make clientCA csr
openssl req -new -sha384 -key client.key -out client.csr -config openssl.cfg
#sign clientCA
openssl ca -out client.crt -name root -in client.csr -config openssl.cfg
#make client key
openssl ecparam -name secp521r1 -genkey -out client.key
#make server csr
openssl req -new -sha384 -key client.key -out client.csr -config openssl.cfg
#sign server cert
openssl ca -out client.crt -name client -in client.csr -config openssl.cfg
#MAKE CHAIN - copy base64 encoded root and intermidiate client ca into same ""chain.cer"" #export user cert 
openssl pkcs12 -export -chain -CAfile chain.crt -in client.crt -inkey client.key -out client.pfx -aes256
</code></pre>
","<p>For any given alias only one of <code>key</code> and <code>cert</code> will be non-null. In this case evidently <code>cert</code> was non-null and key was null. If there is an EC private key in your keystore you will need to work a little harder to find it. You can determine what <em>kind</em> of entry is at the alias by testing with <a href=""http://docs.oracle.com/javase/6/docs/api/java/security/KeyStore.html#isCertificateEntry%28java.lang.String%29"" rel=""nofollow""><code>isCertificateEntry</code></a> and <a href=""http://docs.oracle.com/javase/6/docs/api/java/security/KeyStore.html#isKeyEntry%28java.lang.String%29"" rel=""nofollow""><code>isKeyEntry</code></a>.</p>

<p><strong>EDIT 1</strong>   </p>

<p>The error message is unfortunately confusing because it is actually coming from the bouncycastle library. The class referred to in <code>ECDH key agreement requires ECPrivateKey</code> is <em>not</em> <a href=""http://docs.oracle.com/javase/6/docs/api/java/security/interfaces/ECPrivateKey.html"" rel=""nofollow""><code>java.security.interfaces.ECPrivateKey</code></a> but rather <a href=""http://www.bouncycastle.org/docs/docs1.6/org/bouncycastle/jce/interfaces/ECPrivateKey.html"" rel=""nofollow""><code>org.bouncycastle.jce.interfaces.ECPrivateKey</code></a></p>

<p>The following short adaptation of the OPs sample code illustrates one way to overcome this.  </p>

<pre><code>import org.bouncycastle.jce.provider.JCEECPrivateKey;
import org.bouncycastle.jce.provider.JCEECPublicKey;
// ...
// . &lt;original example code goes here&gt;
// .
JCEECPrivateKey ecPrivKey = new JCEECPrivateKey((ECPrivateKey) key);
JCEECPublicKey ecPubKey = new JCEECPublicKey((ECPublicKey) cert.getPublicKey());
KeyPair kp = new KeyPair(ecPubKey, ecPrivKey);
KeyAgreement aKA = null;
aKA = KeyAgreement.getInstance(""ECDH"", ""BC"");
aKA.init(ecPrivKey);
aKA.doPhase(kp.getPublic(), true);
return aKA.generateSecret();
// ...
</code></pre>
","2504","<bouncycastle><private-key><pkcs#12><elliptic-curve>","5","3","1","2014-10-26 20:14:34","13871178","0","","","user562566","2014-10-26 20:14:34","2012-12-13 04:32:32",""
"24960106","Exporting .p12 without password","<p>In order to use <code>Parse</code> for <code>push notification</code>, they ask that the <code>.p12</code> will NOT be protected with password.</p>

<p>When trying to export it from the keychain , the mac is force me to put the password, otherwise i can't export the file.</p>

<p>Is there a way to export it without the password ?</p>
","<p>Yes. You can export <code>.p12</code> file with empty password. In other words without password.</p>
","2499","<macos><keychain><private-key>","2","5","2","2014-07-25 16:46:54","","0","","2486394","","2014-07-25 16:22:03","2014-07-25 16:14:24",""
"24960106","Exporting .p12 without password","<p>In order to use <code>Parse</code> for <code>push notification</code>, they ask that the <code>.p12</code> will NOT be protected with password.</p>

<p>When trying to export it from the keychain , the mac is force me to put the password, otherwise i can't export the file.</p>

<p>Is there a way to export it without the password ?</p>
","<p>Ok , i found the solution .</p>

<p>When you create a certificate to your mac, (.cer) you need to restart the computer after it, otherwise the login will not be connected to the new .cer (i had a previous one hence when i entered the administrator password ,he didn't accept it,because this login was under another .cer) .</p>

<p>Restarting the mac just solve the problem.</p>
","2499","<macos><keychain><private-key>","2","0","2","2014-07-25 16:46:54","","0","","2486394","","2014-07-25 16:22:03","2014-07-25 16:14:24",""
"16978903","AWS EC2: How to REGENERATE the "".pem"" file from an Instance?","<p>I have Linux instance on EC2 and i lost the "".pem"" file. So now i can NOT access to my instance through SSH anymore from my terminal. </p>

<ul>
<li>How do i regenerate the "".pem"" file from AWS EC2 panel?</li>
</ul>
","<p>Regenerating the private key should be impossible. If not, that is a security breach.</p>
","2494","<ssh><amazon-web-services><amazon-ec2><private-key><pem>","0","1","1","2013-06-07 10:31:07","16981988","1","1","","","","2013-06-07 07:49:22","2013-06-07 10:36:48"
"23268542","Generate key files to connect to Bitbucket in Vagrant boxes","<p>We use Vagrant boxes for development. For every project or small snippet we simply start a new box and provision it with Ansible. This is working fantastic; however, we do get into trouble when connecting to a private Bitbucket repository within a <code>bower install</code> run.</p>

<p>The solution we have now is to generate a new key (<code>ssh-keygen</code>), accept all defaults (pressing <code>&lt;return&gt;</code>, <code>&lt;return&gt;</code>, <code>&lt;return&gt;</code>) and then grab the public key (<code>cat ~/.ssh/id_rsa.pub</code>). Copy it, go to Bitbucket, view your account and add this new ssh key. And repeat for every new box you instantiate.</p>

<p>We have to do this because of some closed source packages (hosted on Bitbucket) we install via Bower. We do have another experience, which is much better: composer (php's package manager) and private Github repositories. With that setup, you have to enter your username/password/2fa token via the command line and an OAuth token is generated for you. This works great.</p>

<p>So, is there a way we can mitigate this bower/bitbucket/ssh issue? For obvious reasons I don't want to provision the boxes with a standard private key, but there has to be another solution?</p>
","<p>While I'm not sure that my situation is as complex as yours (I'm not using Ansible or Bower), I solved this problem by using the Vagrant ssh forward agent.  This blog post gives you the details on how to get it working:</p>

<p><a href=""https://coderwall.com/p/p3bj2a"" rel=""nofollow"" title=""Cloning from GitHub in Vagrant using SSH agent forwarding"">Cloning from GitHub in Vagrant using SSH agent forwarding</a></p>

<p>So as long as each of the developers has access on their local machines to the bitbucket repos, it should work.</p>
","2486","<ssh><vagrant><bitbucket><bower><private-key>","0","0","1","2014-07-14 17:16:56","","0","","","","","2014-04-24 12:12:21",""
"9866822","Apple Xcode 4.3.2There are no valid certificate/private key pairs in the default keychain","<p>""There are no valid certificate/private key pairs in the default keychain""
please help.  I get this warning when i try to build or run my app.  It ran fine before I upgraded to Xcode 4.3.2
any suggestions would be really appreciated.</p>
","<p>I'm assuming you don't want so sign your code with the certificate. </p>

<p>In the scheme choser I switched from iOS Device to iPad/iPhone 5.1 simulator.
After that I could build the app again.
Earlier simulators need to be downloaded separately.</p>

<p>Hope this helps...</p>
","2482","<xcode><certificate><warnings><private-key>","0","0","1","2012-03-28 10:01:51","","2","","1137055","","2012-03-26 20:51:57","2012-03-26 05:03:45",""
"49330180","Generating a JWT using an existing private key and RS256 algorithm","<p>have the below RSA Private key with me and I have to generate a JWT 
token using <strong>RS256 algorithm</strong>.</p>

<p>Here is my sample <strong>Private Key</strong>:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY----- /
MIIEoAIBAAKCAQEAnFWdIwBbLRw4xfFDXYFmlXKB4BpKeuAtfh1dcs5mhod0WTo/
i/Z4DOpiiw/2H05luI4PzOZem8AlHI9hUhHq5p1+YHM68SyvBQ9OTl+O90nmLYOt
2Jzquks11bf29nJh7KwGVHOv2nh3eL39BVsqHSt0O/rjSa0bV+QtUc2DP9U4WzZ3
8RhT2bdiRcsDuMfI024u9JGG/O4iG3wDlXyS5j6G0NVw/KEJJtYYv8ruQVpvlKUd
Ntx7aE+u6F60SjJYQSfdjMoQNMDglBFwhY11RlHSmiJ/Ym8aE+Hj11JHhPcB1N+X
RWaHV9ply4TnE13PsQtGWVKsLDNQNUeIUljKdQIDAQABAoIBAAa4d3owYxBcDOTA
K7vdUDekezN9wy3nwozlXkW33G3JbOsDt1pLoiWL/eh/Kyl1XqdsaVQkTco28bbP
Qx5wFBUN4tzqlzdpoFcrV/EZPTV268+RFZbLnXDyGBez7N3zVNpZGtHj7JoLtmHD
vm4jLnr1NJik1G3aZI6GtJwLpaocwtKWHB59hVwF5NinW6BXN0ALNfwKwU4vMWYo
I65F2zvGMVl9rbfvU+E73DXK3TN5tLOAkqZMQ8+g/VnNd/XuZwh2ZADokEXV8aNR
7zVm3MCCcaa8IKJMrgnb9q47tzfyaoIu5aRYGYKZ/8wuItv4Dal30MK1CQoCD8cD
5uzorQECgYEA9+QTCXrVHzhJJm+QWQZrXu7ydk+tEix7WY9ZY702OHiTO2x9IT4d
4lKFbLhQrQMAFhO3B31Hq5ODGS4jB3bFzATrtOR9eLCR7l+0Az2FcU1Zmqsdkyv8
zlkD9oOYif6rICrVyLQ/lbQF7erVDRbxJUjeKqGAnvELrlzcr+rx+XECgYEAoXLQ
MdR+OLsP5XbcoA//Z2pgwwKZVs282MfYjZLVqeEAAC8BB9+8HHrtMaJGvADI06OV
7lTCDaE8UlqgzN2B55FmCTiLABjhk3fEDrhGVe4jhEZz1i8t0ArjsYTwXs/uXoUz
YP2rcJtkybOQEzjbvM4s5+B8iht+dYaqwoW5/0UCgYAp68UYZlBiXjdoq5dCpuZD
gK86ONEw8JrPk4Fvb5EazbFAbGFg3Mta+c+cijMCfy5ljWH3f0U+i8yw1m+QFJLw
pKhjx/w8C8gyArdDkQTfG1Ca6nMu71JqZv1Xk/uY4pt37iaHMYxLOc2C5aKv+wA+
6OrBVNyWhHcQPp4Hlfjj0QJ/de5oJf4SNV5vPi6U+la1OdV62PgNCls+lxtkFAYu
DOlOFtQ+7IGB50vj912STcJE8FOOMYm4NjyQ05df3kXvnjeXUST8ZBXIsO/LRvVU
a3CIgRb1hn7v+Af8Sq/Q5XD9rg2eejrSAG+CL9P6ahAecswoATj5v+hVd4PnODB2
rQKBgAwe3pkQRFHjameLHip+xcHQ85aASiLjhTvFhFjRHDpJ+FoiJ2H4xi4/jd1F
KGrhMpVnLXKwe1HaONFPV3yEFK2da1r66iIr/opcx1hyKmV1xvebcUxYYoRY6j/g
JMsceBR10oGEath+43rS78LASIQG83PmTYhkcEkQNftxEGqC
-----END RSA PRIVATE KEY-----
</code></pre>

<p><strong>Header</strong></p>

<pre><code>{
  ""alg"": ""RS256"",
  ""typ"": ""JWT""
}
</code></pre>

<p><strong>Body</strong>: </p>

<pre><code>{
  ""iss"": ""14a2fecb-ddd7-4823-46e2-67515bc01734"",
  ""sub"": ""13f7982d-1f78-46e2-4823-3273568fce89"",
  ""iat"": 1521132568,
  ""exp"": 1522136156,
  ""aud"": ""account-d.example.com"",
  ""scope"": ""signature""
}
</code></pre>

<p>Below is my sample Java code:</p>

<pre><code>package com.knyc.demo;
import java.security.spec.PKCS8EncodedKeySpec;
import org.bouncycastle.util.encoders.Base64;
import org.mule.api.MuleEventContext;
import org.mule.api.lifecycle.Callable;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import io.jsonwebtoken.*;
import java.util.Date;
import javax.crypto.spec.SecretKeySpec;
import javax.xml.bind.DatatypeConverter;
import java.security.Key;
public class GenerateJwtToken implements Callable{  
    protected final Logger logger = LoggerFactory.getLogger(getClass());
    @Override
    public String onCall(MuleEventContext eventContext) throws Exception {
        String issuer = ""14a2fecb-ddd7-4823-a9cc-67515bc01734"";
        String scope = ""signature"";
        String subject = ""13f7982d-1f78-46e2-a843-3273568fce89"";
        String audience = ""account-d.docusign.com"";
        String privateKeyPEM =""-----BEGIN RSA PRIVATE KEY-----\n"" +
""MIIEoAIBAAKCAQEAnFWdIwBbLRw4xfFDXYFmlXKB4BpKeuAtfh1dcs5mhod0WTo/\n"" +
""i/Z4DOpiiw/2H05luI4PzOZem8AlHI9hUhHq5p1+YHM68SyvBQ9OTl+O90nmLYOt\n"" +
""2Jzquks11bf29nJh7KwGVHOv2nh3eL39BVsqHSt0O/rjSa0bV+QtUc2DP9U4WzZ3\n"" +
""8RhT2bdiRcsDuMfI024u9JGG/O4iG3wDlXyS5j6G0NVw/KEJJtYYv8ruQVpvlKUd\n"" +
""Ntx7aE+u6F60SjJYQSfdjMoQNMDglBFwhY11RlHSmiJ/Ym8aE+Hj11JHhPcB1N+X\n"" +
""RWaHV9ply4TnE13PsQtGWVKsLDNQNUeIUljKdQIDAQABAoIBAAa4d3owYxBcDOTA\n"" +
""K7vdUDekezN9wy3nwozlXkW33G3JbOsDt1pLoiWL/eh/Kyl1XqdsaVQkTco28bbP\n"" +
""Qx5wFBUN4tzqlzdpoFcrV/EZPTV268+RFZbLnXDyGBez7N3zVNpZGtHj7JoLtmHD\n"" +
""vm4jLnr1NJik1G3aZI6GtJwLpaocwtKWHB59hVwF5NinW6BXN0ALNfwKwU4vMWYo\n"" +
""I65F2zvGMVl9rbfvU+E73DXK3TN5tLOAkqZMQ8+g/VnNd/XuZwh2ZADokEXV8aNR\n"" +
""7zVm3MCCcaa8IKJMrgnb9q47tzfyaoIu5aRYGYKZ/8wuItv4Dal30MK1CQoCD8cD\n"" +
""5uzorQECgYEA9+QTCXrVHzhJJm+QWQZrXu7ydk+tEix7WY9ZY702OHiTO2x9IT4d\n"" +
""4lKFbLhQrQMAFhO3B31Hq5ODGS4jB3bFzATrtOR9eLCR7l+0Az2FcU1Zmqsdkyv8\n"" +
""zlkD9oOYif6rICrVyLQ/lbQF7erVDRbxJUjeKqGAnvELrlzcr+rx+XECgYEAoXLQ\n"" +
""MdR+OLsP5XbcoA//Z2pgwwKZVs282MfYjZLVqeEAAC8BB9+8HHrtMaJGvADI06OV\n"" +
""7lTCDaE8UlqgzN2B55FmCTiLABjhk3fEDrhGVe4jhEZz1i8t0ArjsYTwXs/uXoUz\n"" +
""YP2rcJtkybOQEzjbvM4s5+B8iht+dYaqwoW5/0UCgYAp68UYZlBiXjdoq5dCpuZD\n"" +
""gK86ONEw8JrPk4Fvb5EazbFAbGFg3Mta+c+cijMCfy5ljWH3f0U+i8yw1m+QFJLw\n"" +
""pKhjx/w8C8gyArdDkQTfG1Ca6nMu71JqZv1Xk/uY4pt37iaHMYxLOc2C5aKv+wA+\n"" +
""6OrBVNyWhHcQPp4Hlfjj0QJ/de5oJf4SNV5vPi6U+la1OdV62PgNCls+lxtkFAYu\n"" +
""DOlOFtQ+7IGB50vj912STcJE8FOOMYm4NjyQ05df3kXvnjeXUST8ZBXIsO/LRvVU\n"" +
""a3CIgRb1hn7v+Af8Sq/Q5XD9rg2eejrSAG+CL9P6ahAecswoATj5v+hVd4PnODB2\n"" +
""rQKBgAwe3pkQRFHjameLHip+xcHQ85aASiLjhTvFhFjRHDpJ+FoiJ2H4xi4/jd1F\n"" +
""KGrhMpVnLXKwe1HaONFPV3yEFK2da1r66iIr/opcx1hyKmV1xvebcUxYYoRY6j/g\n"" +
""JMsceBR10oGEath+43rS78LASIQG83PmTYhkcEkQNftxEGqC\n"" +
""-----END RSA PRIVATE KEY-----"";
        String privKeyPEM = privateKeyPEM.replace(""-----BEGIN RSA PRIVATE KEY-----\n"", """");
        privKeyPEM = privKeyPEM.replace(""-----END RSA PRIVATE KEY-----"", """");
       /* byte [] encoded = Base64.decode(privKeyPEM);
        PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(encoded);
       */
       try {
            SignatureAlgorithm signatureAlgorithm = SignatureAlgorithm.RS256;
            long nowMs = System.currentTimeMillis()/1000;
            long expMs = nowMs + 3600;
            Date now = new Date(nowMs);
            Date exp = new Date(expMs);       
            byte[] apiKeySecretBytes = DatatypeConverter.parseBase64Binary(privKeyPEM);
            Key signingKey = new SecretKeySpec(apiKeySecretBytes, signatureAlgorithm.getJcaName());
            System.out.println(signingKey);

            JwtBuilder builder = Jwts.builder()
                                        .setIssuedAt(now)
                                        .setSubject(subject)
                                        .setIssuer(issuer)
                                        .setAudience(audience)
                                        .claim(""scope"",scope)
                                        .signWith(signatureAlgorithm, signingKey)
                                        .setExpiration(exp);         
            return builder.compact();
        } catch (Exception e) {
            e.printStackTrace();
            return """";
        }
    }
}
</code></pre>

<p>It is throwing exception saying: 
""RSA signatures must be computed using an RSA PrivateKey.  The specified key of type javax.crypto.spec.SecretKeySpec is not an RSA PrivateKey.""</p>

<p>Thanks in Advance...</p>
","<p>You could use this library <a href=""https://github.com/jwtk/jjwt"" rel=""nofollow noreferrer"">https://github.com/jwtk/jjwt</a></p>

<pre><code>package &lt;your package name&gt;;

import java.security.KeyFactory;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.spec.InvalidKeySpecException;
import java.security.spec.PKCS8EncodedKeySpec;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;

    public class JWT {

    private String privateKey;
    &lt;your other props such as issuer etc.&gt;

    public JWT(String privateKey) {
        this.privateKey = privateKey;
    }

    public String encode() {

        String retStr = null;

        Claims claims = Jwts.claims();
        claims.put(""issuer"", ""14a2fecb-ddd7-4823-a9cc-67515bc01734"");
        claims.put(""scope"", ""signature"");
        claims.put(""subject"", ""13f7982d-1f78-46e2-a843-3273568fce89"");
        claims.put(""audience"", ""account-d.docusign.com"");

        // strip the headers
        privateKey = privateKey.replace(""-----BEGIN RSA PRIVATE KEY-----"", """");
        privateKey = privateKey.replace(""-----END RSA PRIVATE KEY-----"", """");
        privateKey = privateKey.replaceAll(""\\s+"","""");

        byte[] encodedKey = android.util.Base64.decode(this.privateKey, android.util.Base64.DEFAULT);
        PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(encodedKey);

        try {

            KeyFactory kf = KeyFactory.getInstance(""RSA"");
            PrivateKey privKey = kf.generatePrivate(keySpec);

            retStr = Jwts.builder().setClaims(claims).signWith(privKey).compact();

        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        } catch (InvalidKeySpecException e) {
            e.printStackTrace();
        }
        return retStr;
    }
}
</code></pre>
","2466","<java><jwt><private-key>","4","1","1","2018-09-23 09:46:37","","0","","7064454","","2018-04-30 11:35:29","2018-03-16 22:10:05",""
"2959543","Load Java KeyStore for one alias?","<p>Does anyone know if it is possible to load a KeyStore so that it only prompts for the password for the given alias?</p>

<p>Example:</p>

<p>In my key store i have two private keys: Alice's Encryption Certificate and Bob's Encryption Certificate.</p>

<p>When i load my key store:</p>

<pre><code>keyStore = KeyStore.getInstance(""Windows-MY"", ""SunMSCAPI"");
keyStore.load(null);
</code></pre>

<p>I am prompted for both Alice's and Bob's key store password. Once they are entered i can use <code>getKey(""Alice's Encryption Certificate"", null);</code> to retrieve Alice's private key. My keys are protected by Entrust's Security Provider, it is who prompts me for the passwords upon loading the key store. If i do not enter Bob's password and try to get his key it will return null, which is fine, but i would like to avoid the password prompt.</p>

<p>Is it possible to somehow specify that i only want Alice's key before loading the key store so i am never prompted for Bob's password?</p>

<p>Thanks.</p>
","<p>We had the same issue and couldn't find a way to do it. Basically, you are asking if there is a way to load the keystore partially. It makes things more complicated that MSCAPI provider ignores any password you provide.</p>

<p>We get around the issue by storing only one key With MSCAPI keystore. It turns out this works better with the security model of Smartcard also.</p>
","2461","<java><certificate><keystore><private-key>","5","3","1","2010-06-02 18:37:57","2960509","4","3","104998","","2010-06-02 16:37:08","2010-06-02 16:18:49",""
"2975329","Confused about encryption with public and private keys (which to use for encryption)","<p>I am making a licensing system when clients ask my server for a license and I send them a license if they are permitted to have one.</p>

<p>On my current system I encrypt the license using a single private key and have the public key embedded into the client application that they use to decrypt the license.  It works!</p>

<p>Others have told me that I should be encrypting with the public key on the server and distributing the private key to clients.  I have searched the web and can see that sometimes they use the private key to encrypt and other times they use the public key to encrypt.</p>

<p>In this case what am I supposed to do?</p>
","<blockquote>
  <p>Others have told me that I should be
  encrypting with the public key on the
  server and distributing the private
  key to clients.</p>
</blockquote>

<p>Those people are wrong.  The name <em>private key</em> implies that it is private meaning that only you should have access to it.</p>

<blockquote>
  <p>In this case what am I supposed to do?</p>
</blockquote>

<p>Use digital signatures.  Sign the license file with your private key and use your public key in your application to verify that the signature on the license came from you.</p>
","2451","<java><encryption><drm><private-key><public-key-encryption>","7","8","6","2010-07-08 09:24:04","2975366","0","3","47773","","2010-06-04 15:17:57","2010-06-04 15:02:26",""
"2975329","Confused about encryption with public and private keys (which to use for encryption)","<p>I am making a licensing system when clients ask my server for a license and I send them a license if they are permitted to have one.</p>

<p>On my current system I encrypt the license using a single private key and have the public key embedded into the client application that they use to decrypt the license.  It works!</p>

<p>Others have told me that I should be encrypting with the public key on the server and distributing the private key to clients.  I have searched the web and can see that sometimes they use the private key to encrypt and other times they use the public key to encrypt.</p>

<p>In this case what am I supposed to do?</p>
","<p>If you are using public-private (asymmetric) encryption, you always encrypt with the recipient's public key, who decrypts with their private key.  For digital signatures, you sign with your private key and the recipient verifies the signature with their public key.</p>

<p>The question then arises, how do you make a secure DRM system?  If you use encryption, and give the recipients a private key, they can distribute either the key or the decrypted content.  If you use signatures, they can simply strip out the signature verification part of your program.</p>

<p>The answer is that it's impossible.  The concept of DRM is fundamentally flawed.</p>
","2451","<java><encryption><drm><private-key><public-key-encryption>","7","0","6","2010-07-08 09:24:04","2975366","0","3","47773","","2010-06-04 15:17:57","2010-06-04 15:02:26",""
"2975329","Confused about encryption with public and private keys (which to use for encryption)","<p>I am making a licensing system when clients ask my server for a license and I send them a license if they are permitted to have one.</p>

<p>On my current system I encrypt the license using a single private key and have the public key embedded into the client application that they use to decrypt the license.  It works!</p>

<p>Others have told me that I should be encrypting with the public key on the server and distributing the private key to clients.  I have searched the web and can see that sometimes they use the private key to encrypt and other times they use the public key to encrypt.</p>

<p>In this case what am I supposed to do?</p>
","<p>If you are encrypting something that is only to be read by a single recipient, then you encrypt with that recipients public key and they use their private key to read it.</p>

<p>If you are encrypting for multiple recipients, then you can encrypt with your private key and distribute your public key to those which you want to be able to read it.  This is usually called ""signing"" as anyone who has access to your public key can read it, so it's not really a form of private communication.</p>

<p>An overall more robust solution for you would be for your app to generate a key pair per installation, send the public key that it generated back to the server, which you would then use to encrypt so that only that single install could use the license that you created (by decrypting it with its private key).</p>
","2451","<java><encryption><drm><private-key><public-key-encryption>","7","1","6","2010-07-08 09:24:04","2975366","0","3","47773","","2010-06-04 15:17:57","2010-06-04 15:02:26",""
"2975329","Confused about encryption with public and private keys (which to use for encryption)","<p>I am making a licensing system when clients ask my server for a license and I send them a license if they are permitted to have one.</p>

<p>On my current system I encrypt the license using a single private key and have the public key embedded into the client application that they use to decrypt the license.  It works!</p>

<p>Others have told me that I should be encrypting with the public key on the server and distributing the private key to clients.  I have searched the web and can see that sometimes they use the private key to encrypt and other times they use the public key to encrypt.</p>

<p>In this case what am I supposed to do?</p>
","<p>At least in a typical public key encryption algorithm (e.g., RSA) there's not really a major difference between the public and the private key. When you generate keys, you get two keys. You keep one private and publish the other -- but it doesn't matter much which one you publish and which one you keep private. </p>

<p>Anything you encrypt with one key can be decrypted with the other key. For normal purposes, you publish one key, which lets anybody encrypt something that only you can decrypt. From a technical viewpoint, the reverse works fine though: if you encrypt something with your private key, anybody with the public key can decrypt it. This is typically used for things like signature verification (i.e., anybody with the public key can verify that the signature had to have been created with the private key). You usually want to use separate key pairs for encryption and signing though.</p>

<p>For your case, it's open to some question what you're really going to accomplish. You can certainly encrypt some data necessary to use the program, so the user needs the key to decrypt it and use the program -- but if the user is willing to give a copy of the <em>code</em> to an unauthorized person, they probably won't hesitate at giving a copy of the key to them as well. As such, even though the encryption/decryption will do it's job, it's unlikely to provide any real protection.</p>

<p>A more typical licensing scheme is tied to something like a specific IP address, so you do something like encrypting the IP address, then use the result as a key to decrypt data necessary to use the program. If the IP address is wrong, the data isn't decrypted correctly, and the program doesn't work. As long as the user has a static IP address this can work well -- but will cause problems in conjunction with DHCP.</p>

<p>My immediate advice would to just not do this at all. If you insist on doing it anyway, don't do it yourself -- get something like <a href=""http://www.flexerasoftware.com/promolanding/9979.htm?gclid=CKm2it3hhqICFR5Ogwod7AzzTw"" rel=""nofollow noreferrer"">FlexNet</a> to handle it for you. You're better off without it, but at least this way you'll get something that <em>sort of</em> works, and you won't waste time and effort on it that could be put to better purposes like improving your software.</p>
","2451","<java><encryption><drm><private-key><public-key-encryption>","7","1","6","2010-07-08 09:24:04","2975366","0","3","47773","","2010-06-04 15:17:57","2010-06-04 15:02:26",""
"2975329","Confused about encryption with public and private keys (which to use for encryption)","<p>I am making a licensing system when clients ask my server for a license and I send them a license if they are permitted to have one.</p>

<p>On my current system I encrypt the license using a single private key and have the public key embedded into the client application that they use to decrypt the license.  It works!</p>

<p>Others have told me that I should be encrypting with the public key on the server and distributing the private key to clients.  I have searched the web and can see that sometimes they use the private key to encrypt and other times they use the public key to encrypt.</p>

<p>In this case what am I supposed to do?</p>
","<p>Congratulations, you just invented the RSA signature.  (Which is what you should be using, anyway.)  To communicate with a public key system, you need to use the private key once and the public key once, but RSA supports two different orders:
1) Encrypt with the public key, decrypt with the private: The recipient doesn't know anything about the source of the message, but the sender knows that only the recipient (the holder of the private key) can read it.  This is classical ""encryption"".
2) ""Encrypt"" with the private key, then ""decrypt"" with the public.  This is a digital signature, and provides <em>authentication</em>.  Anyone can read the message, but only the private key holder could have sent it.</p>

<p>Assuming your license is customized to the client (which could be as simple as including a copy of a client-generated random number), then it's useless to anyone else, but the client can be sure that the server sent it.</p>

<p>The symmetry isn't quite that neat in practice; the different modes of operation have different weaknesses and gotchas, so the implementation is typically significantly different, but that's the general idea.</p>

<p>One of the first and most important lessons in cryptology is understanding authentication and when to use it.  It's needed at least as often as encryption, and not knowing when to use it leaves you in a <a href=""http://www.google.com/images?q=midvale+school+for+the+gifted"" rel=""nofollow noreferrer"">Midvale School for the Gifted</a> situation.</p>
","2451","<java><encryption><drm><private-key><public-key-encryption>","7","4","6","2010-07-08 09:24:04","2975366","0","3","47773","","2010-06-04 15:17:57","2010-06-04 15:02:26",""
"2975329","Confused about encryption with public and private keys (which to use for encryption)","<p>I am making a licensing system when clients ask my server for a license and I send them a license if they are permitted to have one.</p>

<p>On my current system I encrypt the license using a single private key and have the public key embedded into the client application that they use to decrypt the license.  It works!</p>

<p>Others have told me that I should be encrypting with the public key on the server and distributing the private key to clients.  I have searched the web and can see that sometimes they use the private key to encrypt and other times they use the public key to encrypt.</p>

<p>In this case what am I supposed to do?</p>
","<p>Hope this link from wikipedia helps. <a href=""http://en.wikipedia.org/wiki/Public_key_infrastructure"" rel=""nofollow noreferrer"">PKI</a> is based on mutual trust. However the private key has to be protected by the owner. Public as the name implies is open to all. The entire architecture is made inorder to help the scenario as defined above in your question.</p>
","2451","<java><encryption><drm><private-key><public-key-encryption>","7","0","6","2010-07-08 09:24:04","2975366","0","3","47773","","2010-06-04 15:17:57","2010-06-04 15:02:26",""
"35754695","How can I access a server if private key is lost","<p>My hard disk was broken so I've lost my private key. I still have the public key though and I know the passphrase for the private key.</p>

<p>I want to access a server which had my public key in the authorized keys. I tried to login using ssh:</p>

<pre><code>ssh debian@[server_ip]
</code></pre>

<p>but then it asks me for a password. I gave the passphrase but I get </p>

<blockquote>
  <p>""Permission denied, please try again.""</p>
</blockquote>

<p>Is there a way to access the server again?</p>
","<p>Either you should have physical access to the server Or should ask admin to enable password access for you.
Or If its VPS you can generate new pair using web panel of platform provider. 
If you lost the keys means you need to have another method to access and there is always a way for you to get access if you are genuine user of that system.</p>

<p>Hope it helps</p>
","2421","<ssh><private-key><public-key>","2","3","1","2017-01-31 12:56:29","","2","","","","","2016-03-02 17:57:16",""
"1236481","RSA decrypt with Java","<p>I am trying to decrypt a string with RSA. It was encrypted in C# on the iPhone and I have the private key.  This seems like a silly problem, but all of the examples I have seen show generating the private key.  I have the private key (it is a byte[] of hex).  It using PKCS#1 padding.  The part I cannot figure out how to do is create a java.security.Key object with the private key I already have.</p>

<p>Do I need to have them give me the private key in 2 parts...modulus and exponent?  </p>

<p>Thanks in advance.</p>
","<p>You need to go through a RSAPrivateKeySpec. Here's an example (based on <a href=""http://www.codase.com/search/call?owner=java.security.spec.RSAPrivateKeySpec"" rel=""nofollow noreferrer"">this</a>):</p>

<pre><code>        BigInteger n = new BigInteger(nBytes);
        BigInteger p = new BigInteger(pBytes);
        RSAPrivateKeySpec privateSpec = new RSAPrivateKeySpec(n, p);
        KeyFactory kf = KeyFactory.getInstance(""RSA"");
        Key privateKey = kf.generatePrivate(privateSpec);
</code></pre>
","2404","<java><rsa><encryption><private-key>","1","2","1","2009-08-06 01:14:54","","5","","","cici","2009-08-06 01:14:54","2009-08-06 00:57:10",""
"17463166","PEM_read_bio_PrivateKey() returns NULL in ECB mode only","<p><code>PEM_read_bio_PrivateKey()</code> returns <code>NULL</code> if a private key is encrypted by DES EDE in ECB mode. The issue happens in <code>EVP_DecryptFinal_ex()</code>:</p>

<p><code>4128:error:06065064:digital envelope routines:EVP_DecryptFinal_ex:bad decrypt:evp_enc.c:330:</code></p>

<p>If the same private key is encrypted by DES EDE in CBC mode, this function works OK.</p>

<p>I checked, this issue is reproducible on openssl 0.9.8r/y versions (without FIPS). If openssl is built with FIPS the issue doesn't happen.</p>

<p>What causes this behaviour?</p>

<p>Thanks!</p>
","<p>Looking at OpenSSL sources, this can happen only if padding in encrypted data is invalid. Does this happen with different keys, and can you provide a sample one? And, what tool is used to generate such keys (i.e. the same OpenSSL or not)? Probably, it omits padding/or writes zero padding instead of correct one.</p>
","2390","<encryption><openssl><private-key><pem>","58","1","1","2014-03-11 12:33:09","","5","0","1743849","","2014-03-11 12:33:09","2013-07-03 15:14:10",""
"9839291","Decrypt Rijndael 256 (from PhP) encoded text in java with little information","<p>I have some data from a external party which is encrypted according to them in: 'Rijndeal 256 with the private key'</p>

<p>Alongside these records there are a public and private key certificate which look like RSA certificates.</p>

<p>From what i've learned so far it seems the common way to use encryption with certifcates is to generate a 'secret key' or some kind in initialization vector and use this to encrypted text. So i'm thinking this is probably what they have done (the data was encrypted by a PHP application)</p>

<p>I'm trying to decrypt this text with javax.crypto.Cipher but i think i problably need more information on the specific encryption, but i dont really know what information to ask for, and think its likely the 'default options' will probably work. (Communication with the supplying party is difficult and slow).</p>

<p>i'm currently Using the following code to get the private key:</p>

<pre><code>  InputStreamReader ir = new InputStreamReader(the_inputstream_for_the_private_key_record);
   Security.addProvider(new BouncyCastleProvider());
   pemr = new PEMReader(ir);
   Object o = pemr.readObject();
   keyPair kp = (KeyPair) o;
   return kp.getPrivate();
</code></pre>

<p>This seems to work as i get a instantiated PrivateKey object without errors the toString looks like:</p>

<pre><code>RSA Private CRT Key
            modulus: c98faa50ba69&lt;trimmed&gt;
    public exponent: 10001
   private exponent: bb889fbe5cb2a6763f...&lt;trimmed&gt;
             primeP: eb73e85dc636f5751b...&lt;trimmed&gt;
             primeQ: db269bd603a2b81fc9...&lt;trimmed&gt;
     primeExponentP: 85b9f111c190595cc8...&lt;trimmed&gt;
     primeExponentQ: a66d59a75bb77530de...&lt;trimmed&gt;
     crtCoefficient: 79415b078c4c229746...&lt;trimmed&gt;
</code></pre>

<p>For each record i also have a entry like the following:</p>

<pre><code>{
""decryptedLength"":128389,
""symKeyLength"":32,
""symKey"":""SImE8VnSZaAu1Ve...&lt;trimmed (this is always 685 chars long) &gt;...ayaJcnpSeOqAGM7q=""
}
</code></pre>

<p>Basically this is where i'm a bit stuck.
My guess would be that that 'symkey' value is encrypted with RSA which in turn when decrypted would yield the secretKey for the AES part, but if i try:</p>

<pre><code>Cipher rsaCipher = Cipher.getInstance(""RSA"");
rsaCipher.init(Cipher.DECRYPT_MODE, key);
byte[] b = rsaCipher.doFinal('symkey'.getbytes());
</code></pre>

<p>this gets me ""javax.crypto.IllegalBlockSizeException: Data must not be longer than 512 bytes"", which seems logical since this string is 685characters long</p>

<p>I'm probably missing something very obvious here...
Any suggestions are appreciated.</p>
","<p>Just guessing, but I think the value</p>

<pre><code>""symKey"":""SImE8VnSZaAu1Ve...&lt;trimmed (this is always 685 chars long) &gt;...ayaJcnpSeOqAGM7q=""
</code></pre>

<p>is the base64 encoded output from RSA encryption using a 4096-bit public key. You need to first base64 decode the value into a byte[] array, then decrypt it with the private key, the result of which will be a 256-bit key. Note that ""Rijndael 256"" is ambiguous, since Rijndael supports both a 256 bit blocksize and also a 256 bit keysize.</p>
","2382","<java><aes><encryption><private-key>","1","2","3","2012-03-26 12:28:06","9872112","4","4","15355","","2012-03-23 14:06:59","2012-03-23 12:35:40",""
"9839291","Decrypt Rijndael 256 (from PhP) encoded text in java with little information","<p>I have some data from a external party which is encrypted according to them in: 'Rijndeal 256 with the private key'</p>

<p>Alongside these records there are a public and private key certificate which look like RSA certificates.</p>

<p>From what i've learned so far it seems the common way to use encryption with certifcates is to generate a 'secret key' or some kind in initialization vector and use this to encrypted text. So i'm thinking this is probably what they have done (the data was encrypted by a PHP application)</p>

<p>I'm trying to decrypt this text with javax.crypto.Cipher but i think i problably need more information on the specific encryption, but i dont really know what information to ask for, and think its likely the 'default options' will probably work. (Communication with the supplying party is difficult and slow).</p>

<p>i'm currently Using the following code to get the private key:</p>

<pre><code>  InputStreamReader ir = new InputStreamReader(the_inputstream_for_the_private_key_record);
   Security.addProvider(new BouncyCastleProvider());
   pemr = new PEMReader(ir);
   Object o = pemr.readObject();
   keyPair kp = (KeyPair) o;
   return kp.getPrivate();
</code></pre>

<p>This seems to work as i get a instantiated PrivateKey object without errors the toString looks like:</p>

<pre><code>RSA Private CRT Key
            modulus: c98faa50ba69&lt;trimmed&gt;
    public exponent: 10001
   private exponent: bb889fbe5cb2a6763f...&lt;trimmed&gt;
             primeP: eb73e85dc636f5751b...&lt;trimmed&gt;
             primeQ: db269bd603a2b81fc9...&lt;trimmed&gt;
     primeExponentP: 85b9f111c190595cc8...&lt;trimmed&gt;
     primeExponentQ: a66d59a75bb77530de...&lt;trimmed&gt;
     crtCoefficient: 79415b078c4c229746...&lt;trimmed&gt;
</code></pre>

<p>For each record i also have a entry like the following:</p>

<pre><code>{
""decryptedLength"":128389,
""symKeyLength"":32,
""symKey"":""SImE8VnSZaAu1Ve...&lt;trimmed (this is always 685 chars long) &gt;...ayaJcnpSeOqAGM7q=""
}
</code></pre>

<p>Basically this is where i'm a bit stuck.
My guess would be that that 'symkey' value is encrypted with RSA which in turn when decrypted would yield the secretKey for the AES part, but if i try:</p>

<pre><code>Cipher rsaCipher = Cipher.getInstance(""RSA"");
rsaCipher.init(Cipher.DECRYPT_MODE, key);
byte[] b = rsaCipher.doFinal('symkey'.getbytes());
</code></pre>

<p>this gets me ""javax.crypto.IllegalBlockSizeException: Data must not be longer than 512 bytes"", which seems logical since this string is 685characters long</p>

<p>I'm probably missing something very obvious here...
Any suggestions are appreciated.</p>
","<p>The <code>symKey</code> value is Base64 encoded and must be decoded before you can do the private key decryption on it.  Also, the symmetric encryption sounds like it is AES-256.  (AES is based on the Rijndael cipher).</p>
","2382","<java><aes><encryption><private-key>","1","0","3","2012-03-26 12:28:06","9872112","4","4","15355","","2012-03-23 14:06:59","2012-03-23 12:35:40",""
"9839291","Decrypt Rijndael 256 (from PhP) encoded text in java with little information","<p>I have some data from a external party which is encrypted according to them in: 'Rijndeal 256 with the private key'</p>

<p>Alongside these records there are a public and private key certificate which look like RSA certificates.</p>

<p>From what i've learned so far it seems the common way to use encryption with certifcates is to generate a 'secret key' or some kind in initialization vector and use this to encrypted text. So i'm thinking this is probably what they have done (the data was encrypted by a PHP application)</p>

<p>I'm trying to decrypt this text with javax.crypto.Cipher but i think i problably need more information on the specific encryption, but i dont really know what information to ask for, and think its likely the 'default options' will probably work. (Communication with the supplying party is difficult and slow).</p>

<p>i'm currently Using the following code to get the private key:</p>

<pre><code>  InputStreamReader ir = new InputStreamReader(the_inputstream_for_the_private_key_record);
   Security.addProvider(new BouncyCastleProvider());
   pemr = new PEMReader(ir);
   Object o = pemr.readObject();
   keyPair kp = (KeyPair) o;
   return kp.getPrivate();
</code></pre>

<p>This seems to work as i get a instantiated PrivateKey object without errors the toString looks like:</p>

<pre><code>RSA Private CRT Key
            modulus: c98faa50ba69&lt;trimmed&gt;
    public exponent: 10001
   private exponent: bb889fbe5cb2a6763f...&lt;trimmed&gt;
             primeP: eb73e85dc636f5751b...&lt;trimmed&gt;
             primeQ: db269bd603a2b81fc9...&lt;trimmed&gt;
     primeExponentP: 85b9f111c190595cc8...&lt;trimmed&gt;
     primeExponentQ: a66d59a75bb77530de...&lt;trimmed&gt;
     crtCoefficient: 79415b078c4c229746...&lt;trimmed&gt;
</code></pre>

<p>For each record i also have a entry like the following:</p>

<pre><code>{
""decryptedLength"":128389,
""symKeyLength"":32,
""symKey"":""SImE8VnSZaAu1Ve...&lt;trimmed (this is always 685 chars long) &gt;...ayaJcnpSeOqAGM7q=""
}
</code></pre>

<p>Basically this is where i'm a bit stuck.
My guess would be that that 'symkey' value is encrypted with RSA which in turn when decrypted would yield the secretKey for the AES part, but if i try:</p>

<pre><code>Cipher rsaCipher = Cipher.getInstance(""RSA"");
rsaCipher.init(Cipher.DECRYPT_MODE, key);
byte[] b = rsaCipher.doFinal('symkey'.getbytes());
</code></pre>

<p>this gets me ""javax.crypto.IllegalBlockSizeException: Data must not be longer than 512 bytes"", which seems logical since this string is 685characters long</p>

<p>I'm probably missing something very obvious here...
Any suggestions are appreciated.</p>
","<p>with GregS's answer i finaly got this to work.
(adding an answer in case someone else needs to decrypt similar php encoded stuff).</p>

<p>The first part was to decrypt de symmetricKey (""symkey"") from the metaData string
This was as Greg notes a Base64 encoded, RSA encrypted key which was decoded like so:</p>

<pre><code>Cipher rsaCipher = Cipher.getInstance(""RSA"");
rsaCipher.init(Cipher.DECRYPT_MODE, key);
byte[] encryptedRijndaelKey = Base64.decodeBase64(base64EncodedSymetricKey); //from the metaData
byte[] rijndaelKeyBytes = rsaCipher.doFinal(encryptedRijndaelKey);
</code></pre>

<p>This Rijndael key was then used to decrypt de actual encrypted data like so:</p>

<pre><code>RijndaelEngine rijndaelEngine = new RijndaelEngine(256); // *1 *2
KeyParameter keyParam = new KeyParameter(rijndaelKeyBytes)
rijndaelEngine.init(false, keyParam);  //false == decrypt
PaddedBufferedBlockCipher bbc = new PaddedBufferedBlockCipher(rijndaelEngine, new ZeroBytePadding()); // *3 

byte[] decryptedBytes = new byte[decryptedLenght]; //from the storageOptions string
int processed = bbc.processBytes(inputBytes, 0, inputBytes.length, decryptedBytes, 0);
bbc.doFinal(decryptedBytes, processed);
</code></pre>

<p>*1 because the Sun JCA only supports common AES which has a 128bits keysize i had to use a different provider (BouncyCastle).
*2 apparently the blocksize was also 256 bits (trail &amp; error)
*3 apparently there was no padding used, thus the ZeroPadding for padding (again trail &amp; error).</p>
","2382","<java><aes><encryption><private-key>","1","1","3","2012-03-26 12:28:06","9872112","4","4","15355","","2012-03-23 14:06:59","2012-03-23 12:35:40",""
"7273231","Creating a temporary client certificate (including a private key)","<p>As part of an application I am writing, I wish for my program to temporarily install a certificate on the local machine and for WinHTTP to use it as the client certificate when connecting to a web server. The aim of this is help protect the web server from unauthorised access (this certificate is only a layer of the security - I know someone could extract it from the .exe). I do not want the user to have to install the certificate and I do not want the certificate to be left on the PC when the application is not running.</p>

<p>At the moment, I'm trying this:</p>

<p>Install the certificate manually from a .p12 file</p>

<p>Use a C++ application to get the binary data out of the local certificate and into a C array in my application (using CryptExportKey and PCCERT_CONTEXT::pbCertEncoded)</p>

<p>Uninstall the certificate</p>

<p>When the application boots:</p>

<p>Open a temporary store for the certificate</p>

<pre><code>m_certificateStoreHandle = CertOpenStore( CERT_STORE_PROV_MEMORY, 0, NULL, 0, NULL );
</code></pre>

<p>Call CertAddEncodedCertificateToStore to add the certificate</p>

<pre><code>CertAddEncodedCertificateToStore( m_certificateStoreHandle,
X509_ASN_ENCODING | PKCS_7_ASN_ENCODING, 
reinterpret_cast&lt; const BYTE * &gt;( certificateData ),
dataSize, 
CERT_STORE_ADD_REPLACE_EXISTING,
&amp;m_clientCertificate )
</code></pre>

<p>Call CryptAcquireContext to get somewhere to store the private key (I change the name of the key on each run for the moment - ideally I plan to use CRYPT_VERIFYCONTEXT to make the key non-persistant, but that's something to ignore for now)</p>

<pre><code>HCRYPTPROV cryptProvider = NULL;
HCRYPTKEY cryptKey = NULL;
CryptAcquireContext( &amp;cryptProvider, ""MyTestKeyNumber123"", NULL, PROV_RSA_FULL, CRYPT_NEWKEYSET )
</code></pre>

<p>Call CryptImportKey to load the private key into the key store</p>

<pre><code>CryptImportKey( cryptProvider, reinterpret_cast&lt; BYTE * &gt;( privateKey ), keySize, 0, CRYPT_EXPORTABLE, &amp;cryptKey )
</code></pre>

<p>Call CertSetCertificateContextProperty to link the certificate to the private key</p>

<pre><code>char containerName[128];
DWORD containerNameSize = ARRAY_NUM_BYTES(containerName);
char providerName[128];
DWORD providerNameSize = ARRAY_NUM_BYTES(providerName);

CryptGetProvParam(cryptProvider, PP_CONTAINER, reinterpret_cast&lt;byte *&gt;(containerName), &amp;containerNameSize, 0)
CryptGetProvParam(cryptProvider, PP_NAME, reinterpret_cast&lt;byte *&gt;(providerName), &amp;providerNameSize, 0)

WCHAR containerNameWide[128];
convertCharToWChar(containerNameWide, containerName);
WCHAR providerNameWide[128];
convertCharToWChar(providerNameWide, providerName);

CRYPT_KEY_PROV_INFO privateKeyData;
neMemZero(&amp;privateKeyData, sizeof(privateKeyData));
privateKeyData.pwszContainerName = containerNameWide;
privateKeyData.pwszProvName = providerNameWide;
privateKeyData.dwProvType = 0;
privateKeyData.dwFlags = CRYPT_SILENT;
privateKeyData.dwKeySpec = AT_KEYEXCHANGE;

if ( CertSetCertificateContextProperty( m_clientCertificate, CERT_KEY_PROV_INFO_PROP_ID, 0, &amp;privateKeyData ) )
</code></pre>

<p>Verify I can access the private key (Works, outputs exactly the same data as I have hardcoded into the application)</p>

<pre><code>byte privateKeyBuffer[2048];
DWORD privateKeyBufferSize = ARRAY_NUM_BYTES(privateKeyBuffer);
memZero(privateKeyBuffer, privateKeyBufferSize);
if(CryptExportKey(cryptKey, 0, PRIVATEKEYBLOB, 0, privateKeyBuffer, &amp;privateKeyBufferSize))
{
   TRACE(""Got private key!"");
   LOG_BUFFER(privateKeyBuffer, privateKeyBufferSize);
}
</code></pre>

<p>Attempt to verify the client certificate works as expected</p>

<pre><code>char certNameBuffer[128] = """";
char certUrlBuffer[128] = """";
CertGetNameString(testValue, CERT_NAME_FRIENDLY_DISPLAY_TYPE, 0, NULL, certNameBuffer, ARRAY_NUM_BYTES(certNameBuffer));
CertGetNameString(testValue, CERT_NAME_URL_TYPE , 0, NULL, certUrlBuffer, ARRAY_NUM_BYTES(certUrlBuffer));
TRACE(""SSL Certificate %s [%s]"", certNameBuffer, certUrlBuffer);

HCRYPTPROV_OR_NCRYPT_KEY_HANDLE privateKey;
DWORD privateKeyType;
BOOL freeKeyAfter = false;
if(CryptAcquireCertificatePrivateKey(testValue, CRYPT_ACQUIRE_NO_HEALING, NULL, &amp;privateKey, &amp;privateKeyType, &amp;freeKeyAfter))
{
    HCRYPTPROV privateKeyProvider = static_cast&lt;HCRYPTPROV&gt;(privateKey);
    HCRYPTKEY privateKeyHandle;
    if(CryptGetUserKey(privateKeyProvider, privateKeyType, &amp;privateKeyHandle))
    {
        NEbyte privateKeyBuffer[2048];
        DWORD privateKeyBufferSize = NE_ARRAY_NUM_BYTES(privateKeyBuffer);
        neMemZero(privateKeyBuffer, privateKeyBufferSize);
        if(CryptExportKey(privateKeyHandle, 0, PRIVATEKEYBLOB, 0, privateKeyBuffer, &amp;privateKeyBufferSize))
        {
            NE_TRACE(""Got private key!"");
            HTTP_LOG_BUFFER(neGetGlobalTraceLog(), ""Key"", """", privateKeyBuffer, privateKeyBufferSize);
        }
</code></pre>

<p>At this stage, the private key is found but the call to CryptExportKey fails with NTE_BAD_KEY_STATE. When I try to use the client certificate with WinHTTP, I get ERROR_WINHTTP_CLIENT_CERT_NO_ACCESS_PRIVATE_KEY. If anyone is wondering, I tell WinHTTP to use the client certificate with this code:</p>

<pre><code>if ( !WinHttpSetOption( handle,
                                WINHTTP_OPTION_CLIENT_CERT_CONTEXT,
                                const_cast&lt;PCERT_CONTEXT&gt;(m_clientCertificate),
                                sizeof( CERT_CONTEXT ) ) )
        {
            HTTP_LOG_ERROR( getLog(), ""Setting the client certificate failed with error code %x"", GetLastError() );
        }
</code></pre>

<p>The way I see it, until I can somehow link the private key and the certificate together and make it so that I can use CryptAcquireCertificatePrivateKey with CryptExportKey to get the key data back out, WinHTTP doesn't stand a chance of being succesful. </p>

<p>Any thoughts as to why I can't seem to get my certificate to use the private key?</p>
","<p>I didn't manage to get this approach working. Instead, I ended up using PFXImportCertStore along with the raw .p12 file containing the certificate and private key I wanted to use. </p>

<p>From what I've seen, it seems that PFXImportCertStore will create a new store in memory. The only thing I haven't been able to find out is if the private key is also stored in memory or if it ends up permenently on the PC somewhere. If I find out either way, I'll update this answer.</p>

<pre><code>m_clientCertificateStoreHandle = PFXImportCertStore(&amp;pfxData, certificatePassword, 0);
if(NULL != m_clientCertificateStoreHandle)
{
m_clientCertificateHandle = CertFindCertificateInStore( m_clientCertificateStoreHandle, X509_ASN_ENCODING | PKCS_7_ASN_ENCODING, 0, CERT_FIND_ANY, NULL, NULL );
}
</code></pre>
","2379","<c++><ssl><certificate><private-key>","2","1","1","2016-10-24 14:58:22","7283680","0","1","","","","2011-09-01 16:17:18",""
"27649176","Unable to import .p12 keystore","<p>I created a .p12 keystore using openssl from a pkcs8 keystore. Now I'm trying to import the private key using java Keytool into a new JKS keystore. I tried the command:</p>

<blockquote>
  <p>keytool -importkeystore -srckeystore newKS.p12 -srcstoretype pkcs12
  -srcstorepass pass -destkeystore exportedJks.jks -deststoretype jks -deststorepass pass</p>
</blockquote>

<p>But I get the following error message:</p>

<blockquote>
  <p>keytool error: java.security.UnrecoverableKeyException: Get Key
  failed: EC KeyFactory not available</p>
</blockquote>

<p>How can I resolve this error so I can import this key into a new JKS keystore?</p>
","<p>The error message means that the Java runtime could not find a crypto provider for ECC (elliptic curve cryptography) algorithms. </p>

<p>Java 6 contains only basic support for ECC: It knows the OIDs of most EC algorithms and therefore knows that it must find an ""EC KeyFactory"". However, by default no provider is installed that can handle these algorithms. </p>

<p>The <a href=""http://docs.oracle.com/javase/7/docs/technotes/guides/security/SunProviders.html#SunEC"" rel=""noreferrer"">SunEC provider</a> with full ECC support was added in Java 7, so the easiest solution for this problem is to use keytool from a Java 7 or 8 runtime.</p>
","2360","<java><ssl><keytool><private-key><jks>","18","24","1","2014-12-31 14:43:12","27690499","1","0","759064","","2014-12-29 15:59:38","2014-12-25 17:01:37",""
"30175436","Load RSA private key to EVP_PKEY","<p>I currently have private key in a .pem file. In my App (iOS) I want to load the private Key into a EVP_PKEY struct to sign a X509_REQ. </p>

<p>My current problem is that I'm able to load the private key, but actually it is a different private key than the one in my file system. </p>

<p>Here's my code: </p>

<pre><code>BIO *bio_err;
X509_REQ *x509=NULL;
EVP_PKEY *pkey= NULL;
EVP_PKEY *pubKey = NULL;

NSString *privateKeyFile = [SecurityManager privateKeyFileAndProof:YES];
char const *privKeyPath =  [[NSFileManager defaultManager] fileSystemRepresentationWithPath:privateKeyFile];
FILE *fp = fopen(privKeyPath, ""r"");

PEM_read_PrivateKey(fp, &amp;pkey, NULL, NULL);

fclose(fp);
CRYPTO_mem_ctrl(CRYPTO_MEM_CHECK_ON);

bio_err=BIO_new_fp(stderr, BIO_NOCLOSE);

PEM_write_PrivateKey(stdout,pkey,NULL,NULL,0,NULL, NULL);
</code></pre>

<p>This is my actual private key file: </p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAzl8TJ46uLTo6ELLrEPRpS7S0IYBAhAXbxvvKaRLvjBi9khud
8ybfDSjoD//uoAlZDIfRak31tHIXqiJntaDZJ8ujIEK4DdRBVHowPNC/tKuYUti8
vZ94BkN48nyJwfFtYPtqaMI6XC0Vh0ffQnQ9jl1d8TVfvxuhlK2+C/WG8Gz9NmRu
JGgCiNuHOIIjaDtlJW36fj21KxW5de1dEW1GUF9GPctN0QjeU4xPFukbu0w8qrr7
ShiIlz0DCkzuj2ww1mr/Gpt4boGCmyM9u+IMg30WMGYacb1+qIpswHJIVaDx7Jmf
xnn8k2rVZT5FUpSjyusSeWFkU7Qh0cKm5BrFNQIDAQABAoIBAEJV2Uhb2qz7DHMV
r+2xQq9tFIG4QgSuBWk+wl9oEMwNn9H5QppIImaOgZmzALc8if03Ix9yk8o+6lBr
4r5FR8g88uCJ0bPQSHepFxxVVWnzxnDK7lBdlC0fPx9i3L0Up74G0rt9w1ihvUvQ
1Hj9+FNsu6evKmm5rgSmnHInqApbyivyogqqSFZ1WlbR9PlT7J15RJAL6lVL+6DP
bIyFDL38degVtOUCAekTsBj1tpewfpFYIb6g5ovVFMgbzXBFL8tEmTe40UheUD1R
LBSaBISQQdl1b6dp0A7jPisk6NE9RZRv0aXLf/t1GrCGIVNQ73+ZtJPETL5Ckk3n
+eEWizkCgYEA9Vmg3pfMHB6QAcsEASK+bdOx2p+Sq47Yd4wISWXKpiylYudKFv0I
bm/0fhU3QOwIUpD0/i5dvUetE08ARU8vXHS+Aar9Gr109KslgdoLFnwTp9A9MsJP
Kuo7ZV3/P3APYlsCdoA2YmR8ys6JIooNlwwV523vI0S7q0Jc277tHf8CgYEA11RO
7FpFMYgYniSyal4Sze+YLXbhvhTPdmbhY+zAh3U0aJ4WHckmofeyomgqQ9ZAdcfu
cUyZKqxJ6FQelc5voBjOTj6rNfziWrU618ldIgmW/0hsQ4Wb+j7W+csqJVTPPGCy
bg+jRIv0W9foIPFhXijC/HWS3Vq2QCklGO5kBMsCgYBC1B4AY4KCKkT5aA34LTmH
esEYFp0Bw8/siCT9sQ9IwiJuVSeWKWfxhOcorKi3M1N1Aezpi0GXO/3Fo6AkQNRa
r6XNmICGlxJTTobR3s1kW3mTHSJ+P/UGcHSrQLY01lYqaTW7h2LI3CwtpaIu2UGo
Ye9ZcVVQ2vjvRg07Ab9eiwKBgFrmWlLoYKFiRJIuB6tjfyi0Zld7Ah0OB+6By9A1
F6mXTsKDSe7VBZwGRsDMnFr6zUdrWTs3DMm45ZJQQIEZHoJFNoJNblViJeQI8Yg6
lzhROA8YcauncYsYkAPvQiF0Re/FGk3gCBpdwpAq+vE9NM9dAcM1lwQe0SUQuXpm
2I41AoGBALUMXfvtDKzcHnZ3UjXuVHM/H6gFiOLx9GhQ9K4BMe7nkbKsDnwbw6Z2
124ZdhkBMgFsL8XTyhyGo2upB/Sq9enLT5fNcD3OZcfRfBGgQO/27IV/A5/ofpG6
N3bDZhBhKHvriP683gXF/L2ki4OTtDI6gym/jaXn3RdNK0kL4tJu
-----END RSA PRIVATE KEY-----
</code></pre>

<p>This is my printed private key, when I've loaded a EVP_PKEY struct </p>

<pre><code>-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDOXxMnjq4tOjoQ
susQ9GlLtLQhgECEBdvG+8ppEu+MGL2SG53zJt8NKOgP/+6gCVkMh9FqTfW0cheq
Ime1oNkny6MgQrgN1EFUejA80L+0q5hS2Ly9n3gGQ3jyfInB8W1g+2powjpcLRWH
R99CdD2OXV3xNV+/G6GUrb4L9YbwbP02ZG4kaAKI24c4giNoO2Ulbfp+PbUrFbl1
7V0RbUZQX0Y9y03RCN5TjE8W6Ru7TDyquvtKGIiXPQMKTO6PbDDWav8am3hugYKb
Iz274gyDfRYwZhpxvX6oimzAckhVoPHsmZ/GefyTatVlPkVSlKPK6xJ5YWRTtCHR
wqbkGsU1AgMBAAECggEAQlXZSFvarPsMcxWv7bFCr20UgbhCBK4FaT7CX2gQzA2f
0flCmkgiZo6BmbMAtzyJ/TcjH3KTyj7qUGvivkVHyDzy4InRs9BId6kXHFVVafPG
cMruUF2ULR8/H2LcvRSnvgbSu33DWKG9S9DUeP34U2y7p68qabmuBKaccieoClvK
K/KiCqpIVnVaVtH0+VPsnXlEkAvqVUv7oM9sjIUMvfx16BW05QIB6ROwGPW2l7B+
kVghvqDmi9UUyBvNcEUvy0SZN7jRSF5QPVEsFJoEhJBB2XVvp2nQDuM+KyTo0T1F
lG/Rpct/+3UasIYhU1Dvf5m0k8RMvkKSTef54RaLOQKBgQD1WaDel8wcHpABywQB
Ir5t07Han5Krjth3jAhJZcqmLKVi50oW/Qhub/R+FTdA7AhSkPT+Ll29R60TTwBF
Ty9cdL4Bqv0avXT0qyWB2gsWfBOn0D0ywk8q6jtlXf8/cA9iWwJ2gDZiZHzKzoki
ig2XDBXnbe8jRLurQlzbvu0d/wKBgQDXVE7sWkUxiBieJLJqXhLN75gtduG+FM92
ZuFj7MCHdTRonhYdySah97KiaCpD1kB1x+5xTJkqrEnoVB6Vzm+gGM5OPqs1/OJa
tTrXyV0iCZb/SGxDhZv6Ptb5yyolVM88YLJuD6NEi/Rb1+gg8WFeKML8dZLdWrZA
KSUY7mQEywKBgELUHgBjgoIqRPloDfgtOYd6wRgWnQHDz+yIJP2xD0jCIm5VJ5Yp
Z/GE5yisqLczU3UB7OmLQZc7/cWjoCRA1Fqvpc2YgIaXElNOhtHezWRbeZMdIn4/
9QZwdKtAtjTWVippNbuHYsjcLC2loi7ZQahh71lxVVDa+O9GDTsBv16LAoGAWuZa
UuhgoWJEki4Hq2N/KLRmV3sCHQ4H7oHL0DUXqZdOwoNJ7tUFnAZGwMycWvrNR2tZ
OzcMybjlklBAgRkegkU2gk1uVWIl5AjxiDqXOFE4Dxhxq6dxixiQA+9CIXRF78Ua
TeAIGl3CkCr68T00z10BwzWXBB7RJRC5embYjjUCgYEAtQxd++0MrNwedndSNe5U
cz8fqAWI4vH0aFD0rgEx7ueRsqwOfBvDpnbXbhl2GQEyAWwvxdPKHIaja6kH9Kr1
6ctPl81wPc5lx9F8EaBA7/bshX8Dn+h+kbo3dsNmEGEoe+uI/rzeBcX8vaSLg5O0
MjqDKb+NpefdF00rSQvi0m4=
-----END PRIVATE KEY-----
</code></pre>
","<p>Since OpenSSL version, 1.0.0 , the routines like <code>PEM_write_PrivateKey</code> defaults to PKCS8 format which has header and footers like:</p>

<blockquote>
  <blockquote>
    <p>-----BEGIN PRIVATE KEY-----</p>
    
    <p>-----END PRIVATE KEY-----</p>
  </blockquote>
</blockquote>

<p>If you want to write in traditional formats in releases later than 1.0.0 call secifically the read and write routines like <code>PEM_read_RSAPrivateKey</code> and 
<code>PEM_write_RSAPrivateKey</code></p>

<p>Traditional key format's header and footer are like:</p>

<blockquote>
  <blockquote>
    <p>-----BEGIN RSA PRIVATE KEY-----</p>
    
    <p>-----END RSA PRIVATE KEY-----</p>
  </blockquote>
</blockquote>
","2352","<ios><objective-c><c><openssl><private-key>","3","2","1","2015-05-12 16:23:44","30176927","5","1","608639","","2015-05-12 16:23:44","2015-05-11 18:53:47",""
"14664723","SSH Key Authentification with users in group","<p>My problem is the login via ssh with key authentification. This work quite well so far: The login with e.g. putty to the server works. The public key is in the ~/.ssh directory stored and the private key is the right.</p>

<p>But if I add a user to the group of the user I would like to login, the login is not possible so far. I see an password prompt and am encouraged for enter password for the user, but my private key is not used anymore. After I had enter the right password, it works as well.</p>

<p>If I remove the user from the /etc/group again, the user is able again to login with key.</p>

<p>Only If at least one user in the group of the user, the ssh key login does not work anymore.</p>

<p>If anyone has a suggestion und would post this here, it would be very nice.</p>

<p>Regards</p>

<p>Sven</p>
","<p>Check the permissions of .ssh directory and the authorized_keys file.  If you have multiple users in the group and the directory is group writable, the keys are not used anymore. You can see it on the server from /var/log/auth.log where the sshd agent should report something like ""Authentication refused: bad ownership or modes""</p>

<p>The .ssh directory should have permissions 700 (only user can read, write, and execute). For files 600 (only user can read and write) are the best permissions. In some implementations also the home directory can't be group writable.</p>

<p>The reason for all this is that if the files are writable by group, anyone in that group could add their own key and login as you.</p>
","2320","<linux><ssh><private-key>","1","4","1","2013-02-02 18:54:01","","0","1","","","","2013-02-02 17:53:55",""
"32430835","Using X509Certificate2 to get PrivateKey causes CryptographicException ""Invalid provider type specified""","<p>everyone,</p>

<p>I am developing a web application that uses X509Certificate2 to get a private key from a certification file. Code snippet looks like following:</p>

<pre><code>    public static RSACryptoServiceProvider GetSignProviderFromPfx()
    {
        var strFileName = ""c:\cer\mycerfile.pfx"";
        var strPassword = ""000000"";            
        X509Certificate2 pc = new X509Certificate2(strFileName, strPassword, X509KeyStorageFlags.MachineKeySet);
        var ThePivateKey = pc.PrivateKey;

        return (RSACryptoServiceProvider)ThePivateKey;
    }
</code></pre>

<p>But the statement pc.Privatekey  causes a  System.Security.Cryptography.CryptographicException ""Invalid provider type specified"" . I'm sure the certification file has no problem, it really has a private key. And the property pc.HasPrivateKey is also return true. </p>

<p>The test environment is VS2013,  window 7. </p>

<p>I also tried following:</p>

<p>a. I debugged it in VS2013 with iis express, the problem occured.</p>

<p>b. I debugged it in another computer with same enviroment with mine, the problem occured too.</p>

<p>c. I published the application to a server with iis running on Windows Web Server 2008 R2,  it worked fine.</p>

<p>d. I published the application to widows azure website, it also worked fine.</p>

<p>Therefore, I guess the code snippet has no problem. The key reason raising the exception is that there may be some problem about running environment.  I checked and compared the reading/writing right on the certification file in different environment, all of them are same.</p>

<p>Anybody can help?</p>

<p>Thanks.</p>
","<p>I have been having the same problem and this is what I did to solve it. Hopefully this will help you too.</p>

<p>We had to set Load User Profile to True in the app pools advanced settings</p>

<p>You can also set it in the web.config I believe.</p>

<p><a href=""https://blogs.msdn.microsoft.com/vijaysk/2009/03/08/iis-7-tip-3-you-can-now-load-the-user-profile-of-the-application-pool-identity/"" rel=""noreferrer"">https://blogs.msdn.microsoft.com/vijaysk/2009/03/08/iis-7-tip-3-you-can-now-load-the-user-profile-of-the-application-pool-identity/</a></p>

<p><a href=""https://i.stack.imgur.com/bgpvy.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/bgpvy.png"" alt=""enter image description here""></a></p>
","2312","<private-key><cryptographicexception>","4","5","2","2018-06-04 05:36:28","","0","","","","","2015-09-07 03:52:26",""
"32430835","Using X509Certificate2 to get PrivateKey causes CryptographicException ""Invalid provider type specified""","<p>everyone,</p>

<p>I am developing a web application that uses X509Certificate2 to get a private key from a certification file. Code snippet looks like following:</p>

<pre><code>    public static RSACryptoServiceProvider GetSignProviderFromPfx()
    {
        var strFileName = ""c:\cer\mycerfile.pfx"";
        var strPassword = ""000000"";            
        X509Certificate2 pc = new X509Certificate2(strFileName, strPassword, X509KeyStorageFlags.MachineKeySet);
        var ThePivateKey = pc.PrivateKey;

        return (RSACryptoServiceProvider)ThePivateKey;
    }
</code></pre>

<p>But the statement pc.Privatekey  causes a  System.Security.Cryptography.CryptographicException ""Invalid provider type specified"" . I'm sure the certification file has no problem, it really has a private key. And the property pc.HasPrivateKey is also return true. </p>

<p>The test environment is VS2013,  window 7. </p>

<p>I also tried following:</p>

<p>a. I debugged it in VS2013 with iis express, the problem occured.</p>

<p>b. I debugged it in another computer with same enviroment with mine, the problem occured too.</p>

<p>c. I published the application to a server with iis running on Windows Web Server 2008 R2,  it worked fine.</p>

<p>d. I published the application to widows azure website, it also worked fine.</p>

<p>Therefore, I guess the code snippet has no problem. The key reason raising the exception is that there may be some problem about running environment.  I checked and compared the reading/writing right on the certification file in different environment, all of them are same.</p>

<p>Anybody can help?</p>

<p>Thanks.</p>
","<p>may be it useful to you;
On local try:</p>

<pre><code>X509Certificate2 pc = new X509Certificate2(strFileName, strPassword);
</code></pre>
","2312","<private-key><cryptographicexception>","4","0","2","2018-06-04 05:36:28","","0","","","","","2015-09-07 03:52:26",""
"14580958","Exception when Constructing EncryptedPrivateKeyInfo","<p>I have generated a private key and encrypted it with a password. Now I want to load it to EncryptedPrivateKeyInfo, so that I can construct and export it into a PEM format file. Below is the code I use,        </p>

<pre><code>final CertAndKeyGen keypair = new CertAndKeyGen(""RSA"", ""SHA1WithRSA"", null);
final X500Name x500Name =
    new X500Name(""IN"", ""AP"", ""HYD"", ""TEST"", ""TEST_ORG"", ""test@xyz.com"");
keypair.generate(1024);
final PrivateKey privKey = keypair.getPrivateKey();
final X509Certificate[] chain = new X509Certificate[1];
long validity = 123;
chain[0] = keypair.getSelfCertificate(x500Name, new Date(), 
    validity * 24 * 60 * 60);
Key key =  new SecretKeySpec(password.getBytes(), ALGO);
Cipher c = Cipher.getInstance(ALGO);
c.init(Cipher.ENCRYPT_MODE, key);
byte[] encVal = c.doFinal(privKey.getEncoded());
AlgorithmParameters params = AlgorithmParameters.getInstance(""DES"");
params.init(encVal); // &lt;--- exception thrown here
EncryptedPrivateKeyInfo encinfo = new EncryptedPrivateKeyInfo(params, encVal);

// displaying encrypting value
String encryptedValue = Base64.encodeBase64String(encinfo.getEncoded());
System.out.println(encryptedValue);
</code></pre>

<p>But while executing the above code, I get the below exception</p>

<pre><code>java.io.IOException: DER input not an octet string
  at sun.security.util.DerInputStream.getOctetString(DerInputStream.java:233)
  at com.sun.crypto.provider.SunJCE_t.a(DashoA13*..)
  at com.sun.crypto.provider.DESParameters.engineInit(DashoA13*..)
  at java.security.AlgorithmParameters.init(AlgorithmParameters.java:260)
</code></pre>

<p>in the line <code>params.init(encVal);</code>. I don't get what's going wrong from the exception. Any help or suggestion will be really appreciated. Thanks in advance.</p>
","<p>A PKCS #8 file containing an encrypted private key has the following ASN.1 structure:</p>

<pre><code>EncryptedPrivateKeyInfo ::= SEQUENCE {
  encryptionAlgorithm EncryptionAlgorithmIdentifier,
  encryptedData EncryptedData }
</code></pre>

<p>Notice how the encrypted data is only part of the total data package. You need to include this data in a sequence along with the encryption algorithm identifier. Your code above produces only the <code>encryptedData</code> part.</p>

<hr>

<p>I would suggest you consider using BouncyCastle. It looks like they may have <a href=""http://www.bouncycastle.org/jira/browse/BJA-243"" rel=""nofollow"">improved support for PKCS#8 recently</a>. Here's some sample code:</p>

<pre><code>KeyPairGenerator generator = KeyPairGenerator.getInstance(""RSA"");
KeyPair keyPair = generator.generateKeyPair();

final PrivateKey privKey = keyPair.getPrivate();

JceOpenSSLPKCS8EncryptorBuilder builder =
    new JceOpenSSLPKCS8EncryptorBuilder(PKCS8Generator.PBE_SHA1_3DES);

builder.setIterationCount(10000);
builder.setPasssword(""Hello, World!"".toCharArray());

OutputEncryptor outputEncryptor = builder.build();    
PKCS8Generator pkcs8Generator =
    new JcaPKCS8Generator(privKey, outputEncryptor);

try (PemWriter writer = new PemWriter(new PrintWriter(System.out))) {
  writer.writeObject(pkcs8Generator);
}
</code></pre>

<p>This will output an encrypted private key:</p>

<pre>
-----BEGIN ENCRYPTED PRIVATE KEY-----
MIICrjAoBgoqhkiG9w0BDAEDMBoEFM1kXgdc0vzEhCwQG5G2wAaSA7POAgInEASC
AoAkBPjKkNVpt9O9+Q63WMscX0eEiGyD6/kFwI+ZgH4/s98uKDHxWTB0fQ+HA+Iy
gQC1b+QhT2HVR0DIB6lfhou4FrcJXBAqf4h0ybkfmE4xTfVQcCpgKm4uUC/FYjks
dgTMajN9NHL06nUjd/0uVsM2bzbJHXlDmPRB0LdfvuxzcGN0Vvn13IJrjRnGwTGR
nv6ZyE3gbjCRanINhMtCDMtg9Ydm7+DHC53YOeqbbhgO9/aJHpRzX/H6zLYp/oa0
GpHM6NzsTfABS8QyqR+EaoFad/XHvC9nKUDqm8LVjmKdlXrLDmpHQ4kxZqMIbijE
/Pu2IfHB0jYYa93F2i0fKkIaeve4oo3/izBn0amXVnsPMnkyrIoUUaLzI/gb/419
vp+1kmAKsEFCRIDQlDCiR9CyuePOaR0d7EckVMDU0uR9MXYAV73Y3VRXe1votrQ/
5Wi8ueio9TBDYj9wYYoYmRpz454HqJ/71k0xr5IJugJIJkUzNN9VkjK9rhgT0Vz5
wY/E1yZZepqCR1xrYgDuu/n4t63EERMo+BgkpKBMnWliU3QdQT2r4qBnma+c9lq8
IWb3y3Phl4LsX3DnLed1rUIOcQKiN2T9/yl+7eEtk8APkKuLK5DDDytgAcOQ1MIF
7Ie2939OG1c3mAwrdeOk20zf0SSbpX17MDmUoMwKsP9u8bqHahNoucjtuVSRtjSe
94xntc0fHkiIueApffxjErJOd2pmjGxJ7D2lkjV4G3AEg3vqFXk6E8nPIqIZL4qI
9KzmAFv88+QDIVTM5fheIOxZpeBkXtq2e19gCijiysqLDWL2CLuN4LVzhKCkJF6x
QGN1FcLk95ikvhI/LEn6qrih
-----END ENCRYPTED PRIVATE KEY-----
</pre>
","2283","<java><encryption><openssl><ssl-certificate><private-key>","1","1","1","2014-09-16 07:54:40","14599034","3","3","474189","","2013-01-29 16:00:47","2013-01-29 10:38:30",""
"9612480","How to store public/private key in MS SQL Server?","<p>Within my code I generate public/private key pairs. I would like to store them to a MSSQL2008 database table. My current table has a column for public key and one for private key, both of which are of type varchar.</p>

<p>Is there a way for me to store the keys as they are, or do/should I convert them to String and store them as varchar?</p>
","<p>Apart from the fact that the idea of storing unencrypted private keys in unsecured storage is questionable, you could use <a href=""http://msdn.microsoft.com/en-us/library/ms188362.aspx"" rel=""nofollow""><code>binary</code> or <code>varbinary</code></a> data type to store the bytes of your keys without converting them to <code>varchar</code>.</p>
","2243","<java><sql-server><sql-server-2008><public-key><private-key>","1","4","1","2012-03-08 03:33:08","9612515","0","","","","","2012-03-08 03:26:22",""
"31274212","Empty PrivateKey in x509certificate2","<p>I have installed certificate on local machine store (win7) with private key.
In c# code I do that:</p>

<pre><code>        X509Certificate2 cert = null;
        var store = new X509Store(storeName, storeLocation);
        store.Open(OpenFlags.ReadOnly);
        try
        {
            var result = store.Certificates.Find(X509FindType.FindByThumbprint, thumbprint, false);
            ServicePointManager.Expect100Continue = true;
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls;
            ServicePointManager.ServerCertificateValidationCallback = delegate { return true; };
            cert = result.Count &gt; 0 
                ? result[0] 
                : null;
        }
        finally
        {
            store.Close();
        }
        return cert;
</code></pre>

<p>In <strong>cert</strong> variable I have my certificate BUT something wrong with it: HasPrivateKey is true but PrivateKey has no any object. And if I send it with REST request in C# code of my web application I have errors:</p>

<pre><code>AcquireCredentialsHandle() failed with error 0X8009030D.
The request was aborted: Could not create SSL/TLS secure channel.
</code></pre>

<p>All rights is granted for certificate in store. Please help with it, what is wrong?</p>

<p>Certutil result in Russian (I hide secure info with ""***""):</p>

<pre><code>certutil -store my ""cf 35 63 34 14 30 a0 32 ca 4a 58 b9 7a 7a ab 18 a4 47 7d a4""
================ Сертификат 0 ================
Серийный номер: 100030
Поставщик: ******************************
 NotBefore: 07.07.2015 5:00
 NotAfter: 24.12.2023 4:59
Субъект: ********************************
Не корневой сертификат
Шаблон:
Хеш сертификата(sha1): cf 35 63 34 14 30 a0 32 ca 4a 58 b9 7a 7a ab 18 a4 47 7d a4
  Контейнер ключа = 94c3b04b44d51674a1b7de89c10bd7d7_09614f03-cc81-44e6-a978-81773242876c
  Простое имя контейнера: CertReq-ceda22d5-2893-496a-b8c1-5c9ceaed82f1
  Поставщик = Microsoft Strong Cryptographic Provider
Тест шифрования пройден
</code></pre>
","<p>I've figured the problem. I deleted certificate from machine store, then export installed cerificate from current user store to .pfx file and import it in machine store. Now PrivateKey has object.
Onse more step, I changed protocol type from Tls to Tls12(works for Win7+):</p>

<pre><code>ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
</code></pre>
","2219","<c#><ssl><private-key><x509certificate2>","3","0","1","2015-07-08 11:03:06","31290771","6","","2575943","","2015-07-08 08:21:04","2015-07-07 16:21:21",""
"37804081","Use Crypto++ RSA::PublicKey to decrypt cipher text","<p>I have the n, d, e for RSA algorithm. However, I want to use private_key to encrypt some string, generate <em>USER_CERTIFICATION</em>, and use public_key for users to decrypt it and get the string. I know if I do so, the string can be easily decrypted by anyone, but security is <strong>not</strong> my concern at all, I just need that <strong>no one except me</strong> can generate the <em>USER_CERTIFICATION</em></p>

<p>I'm using CryptoPP, the code for encoding works fine:</p>

<pre><code>Integer _n(...), _e(...), _d(...);
AutoSeededRandomPool rng;
RSA::PrivateKey k;
k.Initialize(_n, _e, _d);
RSAES_PKCS1v15_Encryptor enc(k);
std::string cipher;
StringSource ss1( plain, true,
    new PK_EncryptorFilter( rng, enc,
        new StringSink( cipher )) // PK_EncryptorFilter
    ); // StringSource
</code></pre>

<p>but the decryption code throws an exception: ""class CryptoPP::InvertibleRSAFunction: Missing required parameter 'Prime1'""</p>

<pre><code>Integer _n(...), _e(...);

AutoSeededRandomPool rng;
RSA::PublicKey k;
k.Initialize(_n, _e);
RSAES_PKCS1v15_Decryptor dec(k);
std::string plain;
StringSource ss1( cipher, true,
    new PK_DecryptorFilter( rng, dec,
        new StringSink( plain ))
    ); // StringSource
</code></pre>

<p>Is it possible to do this with CryptoPP?</p>
","<blockquote>
  <p>I want to use private_key to encrypt some string</p>
</blockquote>

<p>Usually, when you ask for <em>encrypt with the private key</em>, what you want is a <em>Probablistic Signature with Recovery (PSSR)</em> scheme. By the way, <em>encrypt with the private key</em> is <strong><em>not</em></strong> a valid cryptographic transformation :)</p>

<p>The <a href=""http://www.cryptopp.com/docs/ref/cryptlib_8h.html"" rel=""nofollow""><code>cryptlib.h</code> header</a> is described as <em>Abstract base classes that provide a uniform interface to this library</em>. All Crypto++ Signers and Verifiers adhere to the <a href=""http://www.cryptopp.com/docs/ref/class_p_k___signature_scheme.html"" rel=""nofollow""><code>PK_SignatureScheme</code></a> interface. Signers further implement <a href=""http://www.cryptopp.com/docs/ref/class_p_k___signer.html"" rel=""nofollow""><code>PK_Signer</code></a>, while Verifiers further implement <a href=""http://www.cryptopp.com/docs/ref/class_p_k___verifier.html"" rel=""nofollow""><code>PK_Verifier</code></a>.</p>

<p>The Crypto++ RSA objects would look like so:</p>

<pre><code>RSASS&lt;PSSR, SHA256&gt;::Signer signer;
RSASS&lt;PSSR, SHA256&gt;::Verifier verifier;
</code></pre>

<p>The Crypto++ Rabin objects would look like so:</p>

<pre><code>RabinSS&lt;PSSR, SHA256&gt;::Signer signer;
RabinSS&lt;PSSR, SHA256&gt;::Verifier verifier;
</code></pre>

<p>The Crypto++ Rabin-Williams objects would look like so:</p>

<pre><code>RWSS&lt;PSSR, SHA256&gt;::Signer signer;
RWSS&lt;PSSR, SHA256&gt;::Verifier verifier;
</code></pre>

<p>the objects are consistent, and you can swap them in and out.</p>

<p>By the way, you should look into Rabin-Williams to see if it fits your needs. Also see Bernstein's <a href=""http://cr.yp.to/sigs/rwsota-20080131.pdf"" rel=""nofollow"">RSA signatures and Rabin–Williams signatures: the state of the art</a>.</p>

<hr>

<blockquote>
  <p>I'm using CryptoPP, the code for encoding works fine ...</p>
</blockquote>

<p>Scrap it. The exponent you are using is well known, so there's no real security in what you are doing. There are ways to improve the security, but it sounds like you want a PSSR instead.</p>

<p>Here are the two example of using RSA's PSSR from the wiki:</p>

<ul>
<li><p><a href=""http://www.cryptopp.com/wiki/RSA_Signature_Schemes#RSA_Probabilistic_Signature_Scheme_with_Recovery"" rel=""nofollow"">RSA Probabilistic Signature Scheme with Recovery</a></p></li>
<li><p><a href=""http://www.cryptopp.com/wiki/RSA_Signature_Schemes#RSA_Probabilistic_Signature_Scheme_with_Recovery_.28Filter.29"" rel=""nofollow"">RSA Probabilistic Signature Scheme with Recovery (Filter)</a></p></li>
</ul>

<p>And here's the signer code for <a href=""http://www.cryptopp.com/wiki/RSA_Signature_Schemes#RSA_Probabilistic_Signature_Scheme_with_Recovery"" rel=""nofollow"">RSA Probabilistic Signature Scheme with Recovery</a> with some of your stuff dialed in. Note that you need a real <a href=""http://www.cryptopp.com/wiki/RandomNumberGenerator"" rel=""nofollow""><code>RandomNumberGenerator</code></a> because the signature is randomized.</p>

<pre><code>Integer n(...), e(...), d(...);
RSA::PrivateKey key(n,e,d);
RSASS&lt;PSSR, SHA256&gt;::Signer signer(key);

////////////////////////////////////////////////
// Sign and Encode
SecByteBlock signature(signer.MaxSignatureLength(messageLen));

AutoSeededRandomPool rng;
size_t signatureLen = signer.SignMessageWithRecovery(rng, message, messageLen, NULL, 0, signature);

// Resize now we know the true size of the signature
signature.resize(signatureLen);
</code></pre>

<hr>

<p>And here's the verifier code for <a href=""http://www.cryptopp.com/wiki/RSA_Signature_Schemes#RSA_Probabilistic_Signature_Scheme_with_Recovery"" rel=""nofollow"">RSA Probabilistic Signature Scheme with Recovery</a> with some of your stuff dialed in. Note that you don't need <a href=""http://www.cryptopp.com/wiki/RandomNumberGenerator"" rel=""nofollow""><code>RandomNumberGenerator</code></a>, so you can use <code>NullRNG()</code> if its needed somewhere.</p>

<pre><code>Integer n(...), e(...);
RSA::PublicKey key(n,e);
RSASS&lt;PSSR, SHA256&gt;::Verifier verifier(key);

////////////////////////////////////////////////
// Verify and Recover
SecByteBlock recovered(
    verifier.MaxRecoverableLengthFromSignatureLength(signatureLen)
);

DecodingResult result = verifier.RecoverMessage(recovered, NULL, 0, signature, signatureLen);

if (!result.isValidCoding) {
    throw Exception(Exception::OTHER_ERROR, ""Invalid Signature"");
}

////////////////////////////////////////////////
// Use recovered message
//  MaxSignatureLength is likely larger than messageLength
recovered.resize(result.messageLength);
</code></pre>

<hr>

<blockquote>
  <p>... but the decryption code throws an exception: ""class CryptoPP::InvertibleRSAFunction: Missing required parameter 'Prime1'""</p>
</blockquote>

<p>Yep, <em>encrypt with the private key</em> is <strong><em>not</em></strong> a valid cryptographic transformation. I'm pretty sure <em>decrypt with the public key</em> is <strong><em>not</em></strong> valid, either :)</p>

<hr>

<p>I'm not going to provide the code for encryption and decryption since I don't believe you need it. But you can find it at <a href=""http://www.cryptopp.com/wiki/Rsa_encryption_schemes"" rel=""nofollow"">RSA Encryption Schemes</a> on the Crypto++ wiki.</p>
","2206","<c++><rsa><private-key><crypto++>","2","2","2","2016-06-15 06:56:37","37804461","1","","2219196","","2016-06-14 07:22:32","2016-06-14 06:04:02",""
"37804081","Use Crypto++ RSA::PublicKey to decrypt cipher text","<p>I have the n, d, e for RSA algorithm. However, I want to use private_key to encrypt some string, generate <em>USER_CERTIFICATION</em>, and use public_key for users to decrypt it and get the string. I know if I do so, the string can be easily decrypted by anyone, but security is <strong>not</strong> my concern at all, I just need that <strong>no one except me</strong> can generate the <em>USER_CERTIFICATION</em></p>

<p>I'm using CryptoPP, the code for encoding works fine:</p>

<pre><code>Integer _n(...), _e(...), _d(...);
AutoSeededRandomPool rng;
RSA::PrivateKey k;
k.Initialize(_n, _e, _d);
RSAES_PKCS1v15_Encryptor enc(k);
std::string cipher;
StringSource ss1( plain, true,
    new PK_EncryptorFilter( rng, enc,
        new StringSink( cipher )) // PK_EncryptorFilter
    ); // StringSource
</code></pre>

<p>but the decryption code throws an exception: ""class CryptoPP::InvertibleRSAFunction: Missing required parameter 'Prime1'""</p>

<pre><code>Integer _n(...), _e(...);

AutoSeededRandomPool rng;
RSA::PublicKey k;
k.Initialize(_n, _e);
RSAES_PKCS1v15_Decryptor dec(k);
std::string plain;
StringSource ss1( cipher, true,
    new PK_DecryptorFilter( rng, dec,
        new StringSink( plain ))
    ); // StringSource
</code></pre>

<p>Is it possible to do this with CryptoPP?</p>
","<p>So, you want to sign a message with your private key? This link has an example, maybe it helps (code and link below). Note also that not all signing is encryption. For example, ECDSA used by Bitcoin uses a signing operation that takes a random number as one input, no encryption is done as part of signing.</p>

<p><a href=""https://www.cryptopp.com/wiki/User_Guide:_rsa.h"" rel=""nofollow"">https://www.cryptopp.com/wiki/User_Guide:_rsa.h</a></p>

<pre><code>void Sign()
{
string strContents = ""A message to be signed"";
//FileSource(""tobesigned.dat"", true, new StringSink(strContents));

AutoSeededRandomPool rng;

//Read private key
CryptoPP::ByteQueue bytes;
FileSource file(""privkey.txt"", true, new Base64Decoder);
file.TransferTo(bytes);
bytes.MessageEnd();
RSA::PrivateKey privateKey;
privateKey.Load(bytes);

//Sign message
RSASSA_PKCS1v15_SHA_Signer privkey(privateKey);
SecByteBlock sbbSignature(privkey.SignatureLength());
privkey.SignMessage(
   rng,
   (byte const*) strContents.data(),
   strContents.size(),
   sbbSignature);

   //Save result
   FileSink sink(""signed.dat"");
   sink.Put((byte const*) strContents.data(), strContents.size());
   FileSink sinksig(""sig.dat"");
   sinksig.Put(sbbSignature, sbbSignature.size());
}
</code></pre>
","2206","<c++><rsa><private-key><crypto++>","2","0","2","2016-06-15 06:56:37","37804461","1","","2219196","","2016-06-14 07:22:32","2016-06-14 06:04:02",""
"30689365","Objective C: Exporting Private and Public Key from Keychain","<p>I am able to create a public-private keypair using <code>SecKeyGeneratePair</code> <a href=""https://developer.apple.com/library/ios/samplecode/CryptoExercise/Introduction/Intro.html"" rel=""nofollow noreferrer"">[Apple CryptoExercise]</a>function. </p>

<p>Q1. The keys in the keychain appear as  without displaying any name. How can we add a friendly name to the keys. <img src=""https://i.stack.imgur.com/E6I51.png"" alt=""enter image description here""></p>

<p>Q2. However how can i export public and private key that has been generated in the usable format: </p>

<pre><code>-----BEGIN RSA PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqCWtYiGnhAv... 
-----END RSA PUBLIC KEY-----
</code></pre>

<p>and:</p>

<pre><code>-----BEGIN PRIVATE KEY-----
-----END PRIVATE KEY-----
</code></pre>

<p>Note that they can be manually exported from the keychain but how can this be achieved using objective C Apis.</p>

<p>Any help would be appreciable.</p>

<p>There is a similar question here but without any answer: <a href=""https://stackoverflow.com/questions/10202774/iphone-how-do-you-export-a-seckeyref-or-an-nsdata-containing-public-key-bits-to?lq=1"">iPhone: How do you export a SecKeyRef or an NSData containing public key bits to the PEM format?</a> 
There is no need of using OpenSSL just for this purpose.</p>
","<p>Maybe you could refer to these documents from Apple:</p>

<p><a href=""https://developer.apple.com/library/mac/documentation/Security/Conceptual/SecTransformPG/SigningandVerifying/SigningandVerifying.html"" rel=""nofollow"">Obtaining a SecKeyRef Object for Public Key Cryptography</a> and 
<a href=""https://developer.apple.com/library/mac/documentation/Security/Conceptual/CertKeyTrustProgGuide/01introduction/introduction.html#//apple_ref/doc/uid/TP40001358"" rel=""nofollow"">Certificate, Key, and Trust Services Programmer’s Guide</a></p>

<blockquote>
  <p><strong>Obtaining a SecKeyRef Object for Public Key Cryptography</strong></p>
  
  <p>Extracting Keys from the Keychain If you are using existing public and
  private keys from your keychain, read Certificate, Key, and Trust
  Services Programming Guide to learn how to retrieve a
  SecKeychainItemRef object for that key.</p>
  
  <p>Once you have obtained a SecKeychainItemRef, you can cast it to a
  SecKeyRef for use with this API.</p>
  
  <p>Importing Existing Public and Private Keys Importing and exporting
  public and private key pairs is somewhat more complicated than
  generating new keys because of the number of different key formats in
  common use.</p>
  
  <p>This example describes how to import and export a key pair in PEM
  (Privacy Enhanced Mail) format.</p>
</blockquote>

<p>To export keys to a CFDataRef object</p>

<ol>
<li>Create and populate the key usage array.</li>
<li>Create and populate the key attributes array.</li>
<li>Set the key usage and attributes fields in the parameters object.</li>
<li>Set the external format and flag values appropriately.</li>
<li>Export the key with API as follows.</li>
</ol>

<blockquote>
<pre><code>OSStatus oserr = SecItemExport(publickey,
    externalFormat, // See SecExternalFormat for details
    flags, // See SecItemImportExportFlags for details
    &amp;params,
    (CFDataRef *)&amp;pkdata); if (oserr) {
    fprintf(stderr, ""SecItemExport failed (oserr=%d)\n"", oserr);
    exit(-1); }
</code></pre>
</blockquote>
","2192","<objective-c><keychain><public-key-encryption><private-key>","7","3","2","2017-06-28 16:01:53","","0","0","-1","","2017-05-23 12:16:55","2015-06-07 02:03:27",""
"30689365","Objective C: Exporting Private and Public Key from Keychain","<p>I am able to create a public-private keypair using <code>SecKeyGeneratePair</code> <a href=""https://developer.apple.com/library/ios/samplecode/CryptoExercise/Introduction/Intro.html"" rel=""nofollow noreferrer"">[Apple CryptoExercise]</a>function. </p>

<p>Q1. The keys in the keychain appear as  without displaying any name. How can we add a friendly name to the keys. <img src=""https://i.stack.imgur.com/E6I51.png"" alt=""enter image description here""></p>

<p>Q2. However how can i export public and private key that has been generated in the usable format: </p>

<pre><code>-----BEGIN RSA PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqCWtYiGnhAv... 
-----END RSA PUBLIC KEY-----
</code></pre>

<p>and:</p>

<pre><code>-----BEGIN PRIVATE KEY-----
-----END PRIVATE KEY-----
</code></pre>

<p>Note that they can be manually exported from the keychain but how can this be achieved using objective C Apis.</p>

<p>Any help would be appreciable.</p>

<p>There is a similar question here but without any answer: <a href=""https://stackoverflow.com/questions/10202774/iphone-how-do-you-export-a-seckeyref-or-an-nsdata-containing-public-key-bits-to?lq=1"">iPhone: How do you export a SecKeyRef or an NSData containing public key bits to the PEM format?</a> 
There is no need of using OpenSSL just for this purpose.</p>
","<h3>Q1. How can we add a friendly name to the keys?</h3>

<p>Use <a href=""https://developer.apple.com/documentation/security/ksecattrlabel?language=objc"" rel=""nofollow noreferrer"">kSecAttrLabel</a> key to pass label in parameters dictionary of <code>SecKeyGeneratePair()</code>.</p>

<h3>Q2. How to export keys to PEM format?</h3>

<p>PEM format is the same data as the DER-encoded file but it is encoded in base64 with additional header and footer lines. Data in DER format can received using <a href=""https://developer.apple.com/documentation/security/secexternalformat/ksecformatx509cert?language=objc"" rel=""nofollow noreferrer"">kSecFormatX509Cert</a> parameter and <a href=""https://developer.apple.com/documentation/security/secitemimportexportflags/ksecitempemarmour?language=objc"" rel=""nofollow noreferrer"">kSecItemPemArmour</a> flag when calling <code>SecItemExport()</code>.</p>

<pre><code>CFTypeRef key = NULL; // your key
CFDataRef data;
SecItemExport(key, kSecFormatX509Cert, kSecItemPemArmour, NULL, &amp;data);
NSString* base64EncodedString = [(__bridge NSData*)data base64EncodedStringWithOptions:NSDataBase64Encoding64CharacterLineLength];
NSString* pemString = [NSString stringWithFormat:@""-----BEGIN FOO BAR KEY-----\n%@\n-----END FOO BAR KEY-----"", base64EncodedString];
NSData* pemData = [pemString dataUsingEncoding:NSUTF8StringEncoding];
</code></pre>
","2192","<objective-c><keychain><public-key-encryption><private-key>","7","0","2","2017-06-28 16:01:53","","0","0","-1","","2017-05-23 12:16:55","2015-06-07 02:03:27",""
"38968456","Determine private key format","<p>I have been given a private key to use in signature. The private key is not very secret, only used locally. The problem is, that I don't know that in which format it is. </p>

<p>It doesn't have separate begin and end rows. It's in one line, base64 encoded, 2284 letters long (longer than regular x.509 that I have seen before). I got it with some other variables as well including: </p>

<ul>
<li>seed</li>
<li>id</li>
<li>compatibility</li>
</ul>

<p>In the beginning of the id, there's urn:uuid:, before the key value.</p>

<p>Any clues what it could be?</p>

<p>I tried to use the key with node module xmlCrypto, but got some errors:</p>

<blockquote>
  <p>Error: error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag</p>
</blockquote>
","","2192","<rsa><digital-signature><private-key><file-format><xml-signature>","1","","0","2016-08-16 18:00:27","","4","","1816580","","2016-08-16 18:00:27","2016-08-16 06:59:48",""
"45646808","Convert an RSA PKCS1 private key string to a Java PrivateKey object","<p>I have a RSA private key stored as a String that I need to convert into a PrivateKey object for use with an API. I can find examples of people converting from a private-key file to a string but not the other way around. </p>

<p>I managed to convert it to a PrivateKey object but it was in PKCS8, when I need it to be PKCS1, and I know Java doesn't have PKCS1EncodedKeySpec</p>

<pre class=""lang-java prettyprint-override""><code>byte[] key64 = Base64.decodeBase64(privateKeyString.getBytes());
KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
KeySpec privateKeySpec = new PKCS8EncodedKeySpec(privateKeyBytes);
PrivateKey privateKey = keyFactory.generatePrivate(privateKeySpec);
</code></pre>
","","2186","<java><rsa><private-key>","3","","0","2017-08-12 12:48:08","","3","","","","","2017-08-12 05:23:06",""
"3958816","Security of Exclusive-OR (XOR) encryption","<p>XOR encryption is known to be quite weak. But how weak is it if I have a key that is made up of multiple keys of different (ideally prime) lengths which are combined to make a longer key. eg I have a text keys of length 5, 9 and 11. If I just apply the first key using XOR encryption then it should be easy to break as the encryption byte will repeat every 5 bytes. However if I 'overlay' the 3 of these keys I get an effective non-repeating length of 5*9*11 = 495. This sounds to me pretty strong. If I use a couple of verses of a poem using each line as a key then my non-repeating length will be way bigger than most files. How strong would this be (providing the key remains secret! <code>:)</code> )</p>
","<p>XOR encryption is exactly as strong as the key stream. If you XOR with a ""One time pad"" - a sequence of physically generated random numbers that you only use once, then your encryption is theoretically unbreakable. You do have the problem however of hiding and distributing the key.</p>

<p>So your question comes down to - ""how secure/random is a keystream made of three text strings?"" The answer is ""not very secure at all"". Probably good enough to keep out your little sister, but not necessarily if you've got a smart little sister like I have.</p>
","2172","<security><encryption><private-key><computability>","3","7","3","2010-10-28 18:47:56","3959178","2","","","","","2010-10-18 11:52:00",""
"3958816","Security of Exclusive-OR (XOR) encryption","<p>XOR encryption is known to be quite weak. But how weak is it if I have a key that is made up of multiple keys of different (ideally prime) lengths which are combined to make a longer key. eg I have a text keys of length 5, 9 and 11. If I just apply the first key using XOR encryption then it should be easy to break as the encryption byte will repeat every 5 bytes. However if I 'overlay' the 3 of these keys I get an effective non-repeating length of 5*9*11 = 495. This sounds to me pretty strong. If I use a couple of verses of a poem using each line as a key then my non-repeating length will be way bigger than most files. How strong would this be (providing the key remains secret! <code>:)</code> )</p>
","<p>What about the 'known plaintext' attack?  If you know the encrypted and the cleartext versions of the same string, you can retrieve the key.</p>

<p><a href=""http://en.wikipedia.org/wiki/XOR_cipher"" rel=""nofollow"">http://en.wikipedia.org/wiki/XOR_cipher</a></p>

<p><a href=""http://en.wikipedia.org/wiki/Known-plaintext_attack"" rel=""nofollow"">http://en.wikipedia.org/wiki/Known-plaintext_attack</a></p>

<p><a href=""http://en.wikipedia.org/wiki/Stream_cipher_attack"" rel=""nofollow"">http://en.wikipedia.org/wiki/Stream_cipher_attack</a></p>
","2172","<security><encryption><private-key><computability>","3","4","3","2010-10-28 18:47:56","3959178","2","","","","","2010-10-18 11:52:00",""
"3958816","Security of Exclusive-OR (XOR) encryption","<p>XOR encryption is known to be quite weak. But how weak is it if I have a key that is made up of multiple keys of different (ideally prime) lengths which are combined to make a longer key. eg I have a text keys of length 5, 9 and 11. If I just apply the first key using XOR encryption then it should be easy to break as the encryption byte will repeat every 5 bytes. However if I 'overlay' the 3 of these keys I get an effective non-repeating length of 5*9*11 = 495. This sounds to me pretty strong. If I use a couple of verses of a poem using each line as a key then my non-repeating length will be way bigger than most files. How strong would this be (providing the key remains secret! <code>:)</code> )</p>
","<p>If P and Q are two independent cryptographic methods, the composite cryptographic function P(Q(x)) won't be any weaker than the stronger of P(x) or Q(x), but it won't necessarily be meaningfully stronger either.  In order for a composite cryptographic function to gain any strength, the operations comprising it have to meet certain criteria.  Combining weak ciphers arbitrarily, no matter how many one uses, is unlikely to yield a strong cipher.</p>
","2172","<security><encryption><private-key><computability>","3","2","3","2010-10-28 18:47:56","3959178","2","","","","","2010-10-18 11:52:00",""
"25366887","OpenSSL API Read private key in DER format instead of PEM","<p>I am looking for an equivalent of <code>PEM_read_bio_RSAPrivateKey()</code> that also returns a <code>RSA</code> struct but gets passed a pointer to the private key in <code>DER</code> format instead of <code>PEM</code>.
I could not find anything in the OpenSSL documentation though.</p>
","<p>Take a look at <a href=""https://github.com/openssl/openssl/blob/master/apps/apps.c#L1041"" rel=""nofollow"">d2i_PrivateKey_bio()</a> function.</p>
","2167","<c><openssl><rsa><private-key>","3","2","1","2014-08-18 19:13:20","","1","3","","","","2014-08-18 15:29:05","2014-08-19 14:00:05"
"23808405","Android get PrivateKey from String","<p>I tried to load my RSA privateKey from a string. I will take too long to explain why I have it as string, but it looks like this:</p>

<blockquote>
  <p>OpenSSLRSAPrivateCrtKey{modulus=a899b24592040d41c6106142f6bef8ab3be90f26ea385bc24d68363ea95667ea911b4b46612fdd40bde82a73368305ed4aa45a727852298bbec557248f5ef0118ab0d070ef0951a1016017e5c08612c895fe048fc5d4bc789849f3df8267bf32d89df6e2e063a3c2e64e252d69de5ceba90f2583338761a8744be7ea4b6e051f,publicExponent=10001,privateExponent=9e0adce27c1a5236faabf610286e21799a0240d2d0b19dca08778c89b680a98e671137c1b46e82af229553dd8616d1e27a9a8fb247f974ba6b4c5f008568900dcbada330c1e0277f85ed8996baf8e8fc4e326d68c69f59a5466b38eef9dc287739ad59b634ce540a1d581a1942d9c3210f0c1ff2384e8b5728f507efe1285519,primeP=d84c927f5ceb4ee1d17b1205cc9c5ec1479dce8261e855f43ee2af4024be681c53d3e3ff42d4b5dadee5304fc462448132b7f1fa98a606af1929221b6712af7d,primeQ=c78bdd1b200f0b82fc9e211f652a309efa124dccccac1f05dd1cb656bcd481997ba8206ae2049f5eddaab53e9a800448ffd7d0e44b26bf81efde5fa8cee0e1cb,primeExponentP=b3f03f8f24c5bc81afbb2a6b18a49d4f3d3cd2a734bc0b857d2b278fbd0189aac731e6e25bbe88eae3b2d65605919a5bc0cdb5c83b6522fa577c189ba34bb021,primeExponentQ=5e2a8b91f464052bb028b33acc93c7540e70bad42db60001d5616a4eae579e3d1ed4ad4fa30f49620c3b35c2b0483f3d6fb699b6521c9bfd26840b226f564257,crtCoefficient=8121b2049bb99d6fca16c9a2cdf29a8adf2edf1228e004487221a011f64e4bf4518d503417fdf4bd2a0d6abb18ede51a0f898a23989528a6eaa2c4986ba17e92,</p>
</blockquote>

<p>If I use Base64 to decode it, I get ""bad base64"", </p>

<pre><code>PrivateKey privateKey=  KeyFactory.getInstance(""RSA"").generatePrivate(new PKCS8EncodedKeySpec(privateKeyAsString.getBytes()));
</code></pre>

<p>I want to do it this way(I think this should work), but I get:</p>

<pre><code>java.security.spec.InvalidKeySpecException: java.lang.RuntimeException: error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag.
</code></pre>

<p>If I take a PrivateKey of the datatype ""PrivateKey"" and use this as Argument </p>

<pre><code> new PKCS8EncodedKeySpec(myRealPrivateKey.getEncoded()));
</code></pre>

<p>it works fine.</p>

<p>If I take the same key:</p>

<pre><code>myRealPrivateKey.toString()
</code></pre>

<p>it shows me EXACTLY the same like I posted here. It has also the same length. So it should be possible to convert this String back to PrivateKey?!</p>

<p>Thank you guys :)</p>
","<p>Use <code>Key.getEncoded()</code> for byte representation of your Key, and NOT the <code>toString()</code> method.</p>
","2140","<android><rsa><private-key>","1","1","2","2015-07-01 10:03:42","23808783","2","","","","","2014-05-22 13:32:31",""
"23808405","Android get PrivateKey from String","<p>I tried to load my RSA privateKey from a string. I will take too long to explain why I have it as string, but it looks like this:</p>

<blockquote>
  <p>OpenSSLRSAPrivateCrtKey{modulus=a899b24592040d41c6106142f6bef8ab3be90f26ea385bc24d68363ea95667ea911b4b46612fdd40bde82a73368305ed4aa45a727852298bbec557248f5ef0118ab0d070ef0951a1016017e5c08612c895fe048fc5d4bc789849f3df8267bf32d89df6e2e063a3c2e64e252d69de5ceba90f2583338761a8744be7ea4b6e051f,publicExponent=10001,privateExponent=9e0adce27c1a5236faabf610286e21799a0240d2d0b19dca08778c89b680a98e671137c1b46e82af229553dd8616d1e27a9a8fb247f974ba6b4c5f008568900dcbada330c1e0277f85ed8996baf8e8fc4e326d68c69f59a5466b38eef9dc287739ad59b634ce540a1d581a1942d9c3210f0c1ff2384e8b5728f507efe1285519,primeP=d84c927f5ceb4ee1d17b1205cc9c5ec1479dce8261e855f43ee2af4024be681c53d3e3ff42d4b5dadee5304fc462448132b7f1fa98a606af1929221b6712af7d,primeQ=c78bdd1b200f0b82fc9e211f652a309efa124dccccac1f05dd1cb656bcd481997ba8206ae2049f5eddaab53e9a800448ffd7d0e44b26bf81efde5fa8cee0e1cb,primeExponentP=b3f03f8f24c5bc81afbb2a6b18a49d4f3d3cd2a734bc0b857d2b278fbd0189aac731e6e25bbe88eae3b2d65605919a5bc0cdb5c83b6522fa577c189ba34bb021,primeExponentQ=5e2a8b91f464052bb028b33acc93c7540e70bad42db60001d5616a4eae579e3d1ed4ad4fa30f49620c3b35c2b0483f3d6fb699b6521c9bfd26840b226f564257,crtCoefficient=8121b2049bb99d6fca16c9a2cdf29a8adf2edf1228e004487221a011f64e4bf4518d503417fdf4bd2a0d6abb18ede51a0f898a23989528a6eaa2c4986ba17e92,</p>
</blockquote>

<p>If I use Base64 to decode it, I get ""bad base64"", </p>

<pre><code>PrivateKey privateKey=  KeyFactory.getInstance(""RSA"").generatePrivate(new PKCS8EncodedKeySpec(privateKeyAsString.getBytes()));
</code></pre>

<p>I want to do it this way(I think this should work), but I get:</p>

<pre><code>java.security.spec.InvalidKeySpecException: java.lang.RuntimeException: error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag.
</code></pre>

<p>If I take a PrivateKey of the datatype ""PrivateKey"" and use this as Argument </p>

<pre><code> new PKCS8EncodedKeySpec(myRealPrivateKey.getEncoded()));
</code></pre>

<p>it works fine.</p>

<p>If I take the same key:</p>

<pre><code>myRealPrivateKey.toString()
</code></pre>

<p>it shows me EXACTLY the same like I posted here. It has also the same length. So it should be possible to convert this String back to PrivateKey?!</p>

<p>Thank you guys :)</p>
","<p>Must use an extend package <a href=""http://search.maven.org/#search%7Cga%7C1%7Cg:com.madgag.spongycastle%20AND%20a:core"" rel=""nofollow"">http://search.maven.org/#search|ga|1|g:com.madgag.spongycastle AND a:core</a></p>

<pre><code>public static PrivateKey getRsaPrivateKey(Context context, String privateKeyString) {
    String privateKeyString = privateKeyString.replaceAll(TAG_RSA_PRIVATE_KEY_BEGIN, """").replaceAll(TAG_RSA_PRIVATE_KEY_END, """");

    byte[] encodedPrivateKey = Base64.decode(privateKeyString.getBytes(), 0);

    try {
        ASN1Sequence primitive = (ASN1Sequence) ASN1Sequence.fromByteArray(encodedPrivateKey);
        Enumeration&lt;ASN1Integer&gt; e = (Enumeration&lt;ASN1Integer&gt;) primitive.getObjects();

        e.nextElement().getValue();
        BigInteger modulus = e.nextElement().getValue();
        e.nextElement().getValue();
        BigInteger privateExponent = e.nextElement().getValue();

        RSAPrivateKeySpec spec = new RSAPrivateKeySpec(modulus, privateExponent);
        KeyFactory kf = KeyFactory.getInstance(""RSA"");
        return kf.generatePrivate(spec);
    } catch (Exception e) {
        Flog.e(e);
    }
    return null;
}
</code></pre>
","2140","<android><rsa><private-key>","1","0","2","2015-07-01 10:03:42","23808783","2","","","","","2014-05-22 13:32:31",""
"5994797","openssl ? Join a public and a private key","<p>Basicly, I have a private PEM key and a public certificate PEM key.
They work when I use them both (but don't work if I only use one of them).</p>

<p>I use and this works:
wget --no-check-certificate --private-key=dev-private.pem --certificate=dev.pem https://???.???.???.???
(This is self-signed certificate signed by java keytool. I have acces to this keystore.)
I also produce a jks and it's work great in browser.</p>

<p>The problem is one of my application I neeed to use a certificate and he only support 1 PEM key (only support certicate with ""-----BEGIN CERTIFICATE-----"" header).
I don't have figure out how to make 1 PEM key containing private and public key.</p>

<p>Did there is some way to join both for make 1 big PEM key ?</p>

<p>They're so many command line for openssl.</p>

<p>Thank you</p>
","<p>Not fully sure what you are asking, but you can just join both the public and private key into a single file and that may be all you need for your application.  Just cut and past the PEM key from each of the current files into a new file.  Then point your application to the new file.  I have used that technique myself for one of my applications.</p>

<p>Hope this helps.</p>

<p>Al</p>
","2135","<certificate><openssl><public-key><private-key><pem>","0","0","1","2011-05-16 13:04:44","","2","","752713","","2011-05-16 12:39:50","2011-05-13 16:15:32",""
"13351640","Passwordless ssh authentication fails because of 'Unable to load host key'","<p>Unable to set ssh passwordless authentication </p>

<hr>

<p>I am unable to ssh with passwordless authentication from Windows client onto UBuntu server. The ssh version on UBuntu is OpenSSH_5.8p1 Debian-7ubuntu1, OpenSSL 1.0.0e , while SSH on Windows Client is OpenSSH_5.1p1, OpenSSL 0.9.8k. I turned on ssh debugging and noticed these messages on server and client:</p>

<pre><code>/usr/bin/sshd -d -p 2222 on server

adminuser@server:~/.ssh$ /usr/sbin/sshd -d -p 2222

debug1: sshd version OpenSSH_5.8p1 Debian-7ubuntu1

debug1: could not open key file '/etc/ssh/ssh_host_rsa_key': Permission denied

Could not load host key: /etc/ssh/ssh_host_rsa_key

debug1: could not open key file '/etc/ssh/ssh_host_dsa_key': Permission denied

Could not load host key: /etc/ssh/ssh_host_dsa_key

debug1: could not open key file '/etc/ssh/ssh_host_ecdsa_key': Permission denied

Could not load host key: /etc/ssh/ssh_host_ecdsa_key

debug1: setgroups() failed: Operation not permitted

debug1: rexec_argv[0]='/usr/sbin/sshd'

debug1: rexec_argv[1]='-d'

debug1: rexec_argv[2]='-p'

debug1: rexec_argv[3]='2222'

Set /proc/self/oom_score_adj from 0 to -1000

debug1: Bind to port 2222 on 0.0.0.0.

Server listening on 0.0.0.0 port 2222.

debug1: Bind to port 2222 on ::.

Server listening on :: port 2222.

debug1: Server will not fork when running in debugging mode.

debug1: rexec start in 5 out 5 newsock 5 pipe -1 sock 8

debug1: inetd sockets after dupping: 3, 3

Connection from 10.221.84.65 port 2414

debug1: Client protocol version 2.0; client software version OpenSSH_5.1

debug1: match: OpenSSH_5.1 pat OpenSSH*

debug1: Enabling compatibility mode for protocol 2.0

debug1: Local version string SSH-2.0-OpenSSH_5.8p1 Debian-7ubuntu1

debug1: list_hostkey_types: 

No supported key exchange algorithms

debug1: do_cleanup

debug1: do_cleanup


ssh -vvv on client

C:\Documents and Settings\clientuser&gt;ssh -vvv -p 2222 adminuser@server.com

OpenSSH_5.1p1, OpenSSL 0.9.8k 25 Mar 2009

debug2: ssh_connect: needpriv 0

debug1: Connecting to server.com port 2222.

debug1: Connection established.

debug1: identity file /cygdrive/c/Documents and Settings/clientuser/.ssh/identity type -1

debug3: Not a RSA1 key file /cygdrive/c/Documents and Settings/clientuser/.ssh/
id_rsa.

debug2: key_type_from_name: unknown key type '-----BEGIN'

debug3: key_read: missing keytype

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug3: key_read: missing whitespace

debug2: key_type_from_name: unknown key type '-----END'

debug3: key_read: missing keytype

debug1: identity file /cygdrive/c/Documents and Settings/clientuser/.ssh/id_rsa
type 1

debug1: identity file /cygdrive/c/Documents and Settings/clientuser/.ssh/id_dsa
type -1

debug1: Remote protocol version 2.0, remote software version OpenSSH_5.8p1 Debia
n-7ubuntu1

debug1: match: OpenSSH_5.8p1 Debian-7ubuntu1 pat OpenSSH*

debug1: Enabling compatibility mode for protocol 2.0

debug1: Local version string SSH-2.0-OpenSSH_5.1

debug2: fd 3 setting O_NONBLOCK

debug1: SSH2_MSG_KEXINIT sent

Read from socket failed: Connection reset by peer
</code></pre>

<p>I verified that the permissions on authorized_keys, .ssh etc on host are correct. I regenerated host keys to get around the 'Could not load host keys' and restarted ssh services, but problem persists. Any suggestions on what could be wrong? The host private keys are unable to load because they are owned by 'root' user. Changing their permissions to anything other than mode 600 is not allowed. I am stuck at this point.. please help! Appreciate it!</p>
","<p>You need to run the SSH server as root <code>sudo /usr/sbin/sshd</code> in order to read the server's private key.</p>
","2129","<authentication><permissions><ssh><private-key>","3","0","1","2014-08-12 07:36:24","","1","1","2853824","","2014-08-12 07:36:24","2012-11-12 21:13:32",""
"31931574","Java SFTP client that takes private key as a string","<p>Apache Commons and JSch both require a private key file to set up an SFTP connection. The project I'm working on will be used to connect to multiple SFTP servers. Therefore, we do not hope to deploy multiple private key files, but rather keep these keys as strings in an encrypted config file. Is there an SFTP library that doesn't require a file object for private key?</p>
","<p>The JSch has an <a href=""https://epaul.github.io/jsch-documentation/javadoc/com/jcraft/jsch/JSch.html#addIdentity-java.lang.String-byte:A-byte:A-byte:A-"" rel=""nofollow noreferrer""><code>addIdentity</code> method overload</a> that takes the key from a buffer:</p>

<pre><code>public class JSch {
    ...
    public void addIdentity(String name, byte[]prvkey, byte[]pubkey, byte[] passphrase) throws JSchException{
</code></pre>

<p>For an example of implementation, see <a href=""https://stackoverflow.com/q/50859100/850848#50930385"">JSch: addIdentity from private key stored on hdfs</a>. </p>

<p>See also <a href=""https://stackoverflow.com/q/56758040/850848"">Loading private key from string or resource in Java JSch in Android app</a> for a format of the key in the buffers.</p>

<hr>

<p>Alternatives:</p>

<p>There is also an <a href=""https://epaul.github.io/jsch-documentation/javadoc/com/jcraft/jsch/JSch.html#addIdentity-com.jcraft.jsch.Identity-byte:A-"" rel=""nofollow noreferrer""><code>addIdentity</code> overload that takes an <code>Identity</code> interface</a>:</p>

<pre><code>public class JSch {
    ...
    public void addIdentity(Identity identity, byte[] passphrase)
</code></pre>

<p>Just implement the interface to get the private key from wherever you need.</p>

<p>See <code>IdentityFile</code> for an example implementation.</p>

<hr>

<p>Alternatively, store all your keys to <a href=""https://epaul.github.io/jsch-documentation/javadoc/com/jcraft/jsch/IdentityRepository.html"" rel=""nofollow noreferrer""><code>IdentityRepository</code></a>.</p>

<pre><code>public interface IdentityRepository {
    ...
    public boolean add(byte[] identity);
</code></pre>



<pre><code>public class JSch {
    ...
    public synchronized IdentityRepository getIdentityRepository()
</code></pre>
","2125","<java><ftp><sftp><private-key>","2","2","1","2019-07-03 08:53:26","31935723","5","1","850848","","2015-08-11 07:30:32","2015-08-11 01:04:53",""
"31244250","Remotely login to linux using New-SshSession in powerShell (with a private key)","<p>Am trying to log on to linux servers from windows powershell using a key with the 3 inputs listed below.</p>

<pre><code>New-SshSession -ComputerName [name] Username- [user] -KeyFile [path]
</code></pre>

<p>I've been sent the text for a private key from a colleague and need to know how to implement that. Saving it in a .ppk file hasn't yielded any results. Powershell spits out the following in response to running the line above .</p>

<pre><code>New-Object : Exception calling "".ctor"" with ""1"" argument(s): ""Invalid private key file.""
At C:\Windows\system32\WindowsPowerShell\v1.0\Modules\SSH-Sessions\SSH-Sessions.psm1:90 char:20
+             $Key = New-Object Renci.SshNet.PrivateKeyFile( $Keyfile ) -ErrorActi ...
+                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [New-Object], MethodInvocationException
    + FullyQualifiedErrorId : ConstructorInvokedThrowException,Microsoft.PowerShell.Commands.NewObjectCommand
</code></pre>

<p>So I guess I need to know how to save the string I've been sent as a key?</p>

<p>Thanks!</p>
","<p><a href=""http://www.powershelladmin.com/wiki/SSH_from_PowerShell_using_the_SSH.NET_library"" rel=""nofollow noreferrer"">The manual</a> states that <code>New-SshSession</code> accepts an OpenSSH key file for initiating and authenticating SSH connections. If you have been given a text file, you can make it into a compatible key file via <a href=""http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html"" rel=""nofollow noreferrer"">Puttygen.exe</a> (link grabbed from page), then you load the ppk into Puttygen, then copy&amp;paste generated data. If you've received a HEX2BIN string (the one that has only 0213456789ABCDEF in it), you have to convert that into a Base64 string. (use <a href=""http://base64decode.com/"" rel=""nofollow noreferrer"">http://base64decode.com/</a> or a similar service for that.)</p>

<p>If you'd fail to create a compatible file, request a text file starting with <code>ssh-rsa</code> from the issuer, probably linking this manual to him.</p>
","2104","<linux><windows><powershell><private-key>","1","1","1","2019-03-05 19:19:40","31245128","2","","","","","2015-07-06 11:05:53",""
"53410559","SSH stuck to client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0","<p>I am trying to connect to a vagrant machine on my mac (I'm using Mac OS High Sierra).
I'm using a private key to connect to it but I get stuck on this line:</p>

<pre><code>client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0
</code></pre>

<p>I use the following command line:</p>

<pre><code>ssh -v -N  -L localhost:5432:192.168.33.10:5432 -o ConnectTimeout=1 -o ServerAliveInterval=30 -o ServerAliveCountMax=3 -i /Users/MacUser/Desktop/Vagrant_Project/.vagrant/machines/default/virtualbox/private_key -p 22 vagrant@192.168.33.10
</code></pre>

<p>and this is the result:</p>

<pre><code>OpenSSH_7.6p1, LibreSSL 2.6.2
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: /etc/ssh/ssh_config line 48: Applying options for *
debug1: Connecting to 192.168.33.10 [192.168.33.10] port 22.
debug1: fd 3 clearing O_NONBLOCK
debug1: Connection established.
debug1: key_load_public: No such file or directory
debug1: identity file /Users/MacUser/Desktop/Vagrant_Project/.vagrant/machines/default/virtualbox/private_key type -1
debug1: key_load_public: No such file or directory
debug1: identity file /Users/MacUser/Desktop/Vagrant_Project/.vagrant/machines/default/virtualbox/private_key-cert type -1
debug1: Local version string SSH-2.0-OpenSSH_7.6
debug1: Remote protocol version 2.0, remote software version OpenSSH_7.2p2 Ubuntu-4ubuntu2.6
debug1: match: OpenSSH_7.2p2 Ubuntu-4ubuntu2.6 pat OpenSSH* compat 0x04000000
debug1: Authenticating to 192.168.33.10:22 as 'vagrant'
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: algorithm: curve25519-sha256@libssh.org
debug1: kex: host key algorithm: ecdsa-sha2-nistp256
debug1: kex: server-&gt;client cipher: chacha20-poly1305@openssh.com MAC: &lt;implicit&gt; compression: none
debug1: kex: client-&gt;server cipher: chacha20-poly1305@openssh.com MAC: &lt;implicit&gt; compression: none
debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
debug1: Server host key: ecdsa-sha2-nistp256 SHA256:Ju/ngomtpiyMPtrgFsK+ttKbFUR9BwW3CyDFjo5KITc
debug1: Host '192.168.33.10' is known and matches the ECDSA host key.
debug1: Found key in /Users/MacUser/.ssh/known_hosts:3
debug1: rekey after 134217728 blocks
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: rekey after 134217728 blocks
debug1: SSH2_MSG_EXT_INFO received
debug1: kex_input_ext_info: server-sig-algs=&lt;rsa-sha2-256,rsa-sha2-512&gt;
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: publickey
debug1: Next authentication method: publickey
debug1: Trying private key: /Users/MacUser/Desktop/Vagrant_Project/.vagrant/machines/default/virtualbox/private_key
debug1: Authentication succeeded (publickey).
Authenticated to 192.168.33.10 ([192.168.33.10]:22).
debug1: Local connections to localhost:5432 forwarded to remote address 192.168.33.10:5432
debug1: Local forwarding listening on ::1 port 5432.
debug1: channel 0: new [port listener]
debug1: Local forwarding listening on 127.0.0.1 port 5432.
debug1: channel 1: new [port listener]
debug1: Requesting no-more-sessions@openssh.com
debug1: Entering interactive session.
debug1: pledge: network
debug1: client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0
</code></pre>

<p>Could someone give me a hint to get rid of this problem? I get stuck to this point, forever.
I think the problem should be between Vagrant and Mac Os. The same vagrant virtual machine works under a Windows environment.</p>
","<p>I had the same problem with ProxyJump directive while connecting through bastion host to an instance. The process was timing out after the same line. Turned out there was a problem with Firewall dropping connection from bastion host. </p>

<p>As far as I can see your connection to <strong>192.168.33.10</strong> succeeds and hangs after opening listening port <strong>5423</strong> on localhost. So you either have a firewall blocking connections to localhost on port <strong>5423</strong> or a firewall on <strong>192.168.33.10</strong> blocking port <strong>5423</strong>.</p>

<p>To solve this you have to test these ports manually with <strong>telnet\nmap</strong> utilities
The syntax is as follows:</p>

<pre><code>telnet localhost 5423
</code></pre>

<p>or </p>

<pre><code>nmap -p 5423 192.168.33.10
</code></pre>

<p>If port is open you will see the following message </p>

<blockquote>
  <p>Escape character is '^]'.</p>
</blockquote>

<p>If port is closed by firewall telnet will hang with the following message</p>

<blockquote>
  <p>Trying 172.18.0.47...</p>
</blockquote>

<p>If port is closed by fireawll nmap will show you that its filtered</p>

<blockquote>
  <p>PORT   STATE    SERVICE </p>
  
  <p>80/tcp filtered http</p>
</blockquote>

<p>If port is open via firewall but there's no application listening on this port you will get a message</p>

<blockquote>
  <p>telnet: Unable to connect to remote host: Connection refused</p>
</blockquote>

<p>After that you need to open those ports. On linux machines simply issue following command</p>

<pre><code>iptables -I INPUT -p tcp --dport 5423 --syn -j ACCEPT &amp;&amp; service iptables save
</code></pre>

<p>On MacOS you need to modify this file <strong>/etc/pf.conf</strong> (found via this <a href=""https://gauravsohoni.wordpress.com/2015/04/14/mac-osx-open-port/"" rel=""nofollow noreferrer"">article</a>)</p>
","2062","<ssh><vagrant><private-key><macos-high-sierra><tunneling>","2","1","1","2019-01-09 12:29:31","54110105","0","1","3740652","","2018-11-21 16:35:24","2018-11-21 10:54:10",""
"8449799","decrypt p7m file in C# or .NET with privateKey from file","<p>Hopefully someone can help me with code because I am working on it 3 months without any success. I tried almost anything from internet but nothing does not work.</p>

<p>Problem: I have encrypted file p7m (size 158KB) (it is crypted text). I have certificate in file pfx, under password ""a"". In this certificate is the public key which is needed to decrypt p7m file.</p>

<p>I need something that will read xyyv.p7m file, decrypt it with public key, and save it as XYZ.xyz</p>

<p>I do not put here any my code to do not confuse you. thanks</p>
","<p>A PKCS#7 structure can be <strong>very</strong> messy (and that's actually true for most ASN.1 structures). There's not much specific advice that can be given if we don't know what was used to produce this file.</p>

<p>In general there's code for reading them in <a href=""http://msdn.microsoft.com/en-us/library/system.security.cryptography.pkcs.aspx"" rel=""nofollow""><code>System.Security.Cryptography.Pkcs</code></a> but it's easy to create files (valid or invalid) that won't be processed correctly. Even more if they were generated using different tools.</p>

<p>Mono provides classes, inside <a href=""https://github.com/mono/mono/tree/master/mcs/class/Mono.Security"" rel=""nofollow""><code>Mono.Security</code></a>, to read them. They are very low-level API (with some helpers) so, in theory, they should be able to read anything... as long as you don't mind coding the processing your format itself.</p>

<p>Other libraries, <a href=""http://www.bouncycastle.org/csharp/"" rel=""nofollow"">BouncyCastle</a> comes to mind, will offer similar (low or high level) API to process PKCS#7 files.</p>
","2061","<c#><.net><encryption><private-key><pkcs#7>","0","0","1","2011-12-09 18:19:02","","2","","220643","","2011-12-09 18:19:02","2011-12-09 18:04:40",""
"12507697","KeyChain.getPrivateKey(Context,String) on Android 4.1?","<p>I read that there is problem with method KeyChain.getPrivateKey(Context,String) on Android 4.1 although on older versions it works. Does anybody has solution how to get private key on JellyBean? </p>

<p>Saw this <a href=""https://stackoverflow.com/questions/11261774/using-android-4-1-keychain"">Using Android 4.1 Keychain</a> , but somehow could not get to work with my case.</p>

<p>Code that does not work on 4.1, but works great on older versions.</p>

<pre><code>PrivateKey pk;
try {
    pk = KeyChain.getPrivateKey(context,string);
    byte[] pkByte = pk.getEncoded();
    pkBase64 = new String(Base64.encode(pkByte, Base64.NO_WRAP));
}
</code></pre>

<p>Edited: Found out that if I do not change certificate alias(default hex-hex-hex) when adding it, then getPrivateKey returns null, but when I change alias to, for example, aaa method returns something, but still not the correct privatekey. (for example, returned private key with primeP =null primeQ =null. On Android 4.0.4 primeP and primeQ are not null values)</p>
","<p>You can't assume a <code>PrivateKey</code> can be encoded. If a <code>PrivateKey</code> returns <code>null</code> for <code>getEncoded()</code>, then it just doesn't support encoding. See the <a href=""http://developer.android.com/reference/java/security/Key.html#getEncoded%28%29"" rel=""nofollow"">documentation for Key.getEncoded()</a>.</p>

<p>In JellyBean, the private keys returned via <code>KeyChain</code> are never in the process. Any operation performed on them are actually done in another process because the actual key matter may be stored in a hardware security module of some sort. You may still call <a href=""http://developer.android.com/reference/java/security/Signature.html"" rel=""nofollow""><code>java.security.Signature</code></a> APIs with this key.</p>
","2057","<android><security><keychain><private-key><android-4.2-jelly-bean>","2","1","1","2012-09-21 23:28:19","","0","1","-1","","2017-05-23 11:51:11","2012-09-20 07:15:20",""
"11315650","Flash SecureSocket and RSA private key","<p>I am trying to communicate to a server through SSL. The PEM client file is consisted of a certificate and an rsa private key.</p>

<p>I managed to convert both the certificate and key to binary DER. I load the DER certificate to SecureSocket succesfully (with function  <strong><em>addBinaryChainBuildingCertificate</em></strong>) but when I try to connect to the server I get a ""principal mismatch"" error. If I try to use the aforementioned function to load the DER key, I get a ""wrong parameter"" error.</p>

<p>I suppose the ""principal mismatch"" is because I haven't loaded the private key. But I see no function to load an RSA key to SecureSocket. Is there any solution to this? Do I need to communicate to the server with only a certificate but remove the key from the equation?</p>

<p><strong>EDIT :</strong></p>

<p>Code :</p>

<pre><code>package {

    import flash.display.Sprite;
    import flash.net.SecureSocket;
    import flash.net.URLLoader;
    import flash.events.ProgressEvent;
    import flash.events.Event;
    import flash.events.IOErrorEvent;
    import flash.net.URLLoaderDataFormat;
    import flash.net.URLRequest;
    import flash.utils.ByteArray;

    public class TestSSL2 extends Sprite {

        private var mSocket:SecureSocket = new SecureSocket();

        private var certFile:String = ""ca.der"";
        private var keyFile:String = ""key.der"";

        private var cert:ByteArray;
        private var key:ByteArray;

        public function TestSSL2() {
            trace(""SecureSocket.isSupported"",SecureSocket.isSupported);

            var urlLoader:URLLoader = new URLLoader();
            urlLoader.addEventListener(Event.COMPLETE, certLoaded, false, 0, true);
            urlLoader.dataFormat = URLLoaderDataFormat.BINARY;
            urlLoader.load(new URLRequest(certFile));
        }
        private function certLoaded(e:Event):void {
            cert = (e.target as URLLoader).data;
            trace(""certificate"",cert.length);
            mSocket.addBinaryChainBuildingCertificate(cert, true);

            var urlLoader:URLLoader = new URLLoader();
            urlLoader.addEventListener(Event.COMPLETE, keyLoaded, false, 0, true);
            urlLoader.dataFormat = URLLoaderDataFormat.BINARY;
            urlLoader.load(new URLRequest(keyFile));
        }
        private function keyLoaded(e:Event):void {
            key = (e.target as URLLoader).data;
            trace(""key"",key.length);
            mSocket.addBinaryChainBuildingCertificate(key, true);

            mSocket.connect(""127.0.0.1"", 3000);
            mSocket.addEventListener(Event.CONNECT, socketConnected);
            mSocket.addEventListener(IOErrorEvent.IO_ERROR, onError);
            mSocket.addEventListener(ProgressEvent.SOCKET_DATA, socketData );
        }

        private function onError(error:IOErrorEvent):void {
            trace(""ERROR!"",error.text,"":"",mSocket.serverCertificateStatus);
        }

        private function socketConnected(e:Event):void {
            trace(""Connected"", e);
        }

        private function socketData(e:*):void {
            var data:String;
            data = mSocket.readUTFBytes(mSocket.bytesAvailable);
            trace(data);
        }
    }

}
</code></pre>

<p>Result :</p>

<pre><code>SecureSocket.isSupported true
certificate 497
key 607
ArgumentError: Error #2004: One of the parameters is invalid.
    at flash.net::SecureSocket/addBinaryChainBuildingCertificate()
    at TestSSL2/keyLoaded()
    at flash.events::EventDispatcher/dispatchEventFunction()
    at flash.events::EventDispatcher/dispatchEvent()
    at flash.net::URLLoader/onComplete()
</code></pre>

<p>If I comment the line :</p>

<p><code>//mSocket.addBinaryChainBuildingCertificate(key, true);</code></p>

<p>I get :</p>

<pre><code>SecureSocket.isSupported true
certificate 497
key 607
ERROR! Error #2031: Socket Error. URL: 127.0.0.1 : principalMismatch
</code></pre>
","<p>Firstly:</p>

<p>The ""principal mismatch"" indicates that the common name of the certificate on the secured server does not match the DNS name that you are connecting to.</p>

<p>Considering that you are making a connect to localhost (127.0.0.1) there will most certainly be a mismatch. Flash sockets are particularly strict when it comes to making secure connections and there is no mechanism to override security features unlike other runtimes (e.g. .NET and Java). The following must be true:</p>

<ol>
<li>The certificate common name mush match the DNS name (there is a relaxation here for 'star' certs i.e. a cert for <code>*.bob.com</code> is considered valid for <code>mr.bob.com</code>)</li>
<li>The certificate must be valid in terms of expiry and trust chain</li>
</ol>

<p>Secondly:</p>

<p>You seem to have some misconception on how certificates work. You do not need to add any certificates using the <code>addBinaryChainBuildingCertificate()</code> method if the server certificate is issued by a trusted root authority i.e. the certificate that signed the server certificate is in the local trust store of the target device.</p>

<p>To illustrate:</p>

<ul>
<li>I have a certificate for <code>this.is.awesome.com</code> installed on my server and a DNS entry that resolves <code>this.is.awesome.com</code> to my server's IP Address</li>
<li>This certificate is issued by the Entrust L1C certificate authority.</li>
<li>The L1C certificate is in turn issued by the Entrust 2048 root authority.</li>
</ul>

<p>On my PC I have the Entrust 2048 Root authority installed in my Trusted Root certificate store.
However I do not have the L1C certificate installed. When I attempt to connect to <code>this.is.awesome.com</code> the connection will fail as the server certificate cannot be validated against the L1C authority.</p>

<p>If I add the DER encoded L1C certificate using <code>addBinaryChainBuildingCertificate()</code> then the connection will succeed. The server certificate will be validated against the L1C certificate which will in turn be validated against the 2048 Root certificate which is a trusted root.</p>

<p>To summarize:</p>

<p>Your connection issues seem to stem from your attempt to connect to localhost.
Try adding an entry to your HOSTS file that maps the name on your certificate to 127.0.0.1 and then connecting to that name. If that fails check the issuer chain on your certificate and add the chain of issuers by calling <code>addBinaryChainBuildingCertificate()</code> once for each issuing certificate in the chain. The final or root certificate should be marked as such by passing <code>true</code> as the second parameter to <code>addBinaryChainBuildingCertificate()</code></p>
","2035","<actionscript-3><flash><ssl><private-key>","8","3","1","2012-11-21 05:56:08","13487234","7","4","113718","","2012-07-04 05:33:12","2012-07-03 16:58:15",""
"9605565","Digitally sign using client certificate in ASP.Net","<p>I am trying to digitally sign information with a private key.  I know how to do this on in a desktop client application with .Net, but am not sure how to do it in ASP.Net.  It would be used on an intranet using IE8.  If it is done via ASP.Net, I am guessing that the private key is not sent to the server when the user types in their certificate passowrd when going to the site (https, 2-way SSL), but am not sure.  If there is no way to access the client private key on the server, then how can I sign something in the browser?  Can I use javascript?</p>

<p>Edit: I guess what would be helpful to know first is if this can be done on the server or does it have to be done on the client?</p>
","<p>The private key of the client-cert is NOT transmitted to the server.</p>

<p>IF you really want/need to sign something with client-cert THEN you need a client-side component... AFAIK this is not possible with javascript... there are solutions out there using Flash, Silverlight, Java Applets as part of the ASP.NET page for doing what you ask...</p>

<p>Making it possible to do this purely on the server-side is a sure sign for <em>broken security</em> (regarding the client-cert) IMHO.</p>
","2032","<c#><asp.net><digital-signature><private-key>","2","3","2","2019-09-11 07:04:13","9607052","0","","41713","","2012-03-07 18:22:46","2012-03-07 16:39:44",""
"9605565","Digitally sign using client certificate in ASP.Net","<p>I am trying to digitally sign information with a private key.  I know how to do this on in a desktop client application with .Net, but am not sure how to do it in ASP.Net.  It would be used on an intranet using IE8.  If it is done via ASP.Net, I am guessing that the private key is not sent to the server when the user types in their certificate passowrd when going to the site (https, 2-way SSL), but am not sure.  If there is no way to access the client private key on the server, then how can I sign something in the browser?  Can I use javascript?</p>

<p>Edit: I guess what would be helpful to know first is if this can be done on the server or does it have to be done on the client?</p>
","<p>For Modern browsers not supporting Flash, Silverlight or Java Applets, Browser Extensions may be used to sign from Browser using JavaScript.</p>

<p>Your Question:</p>

<blockquote>
  <p>Edit: I guess what would be helpful to know first is if this can be done on the server or does it have to be done on the client?</p>
</blockquote>

<p>Answer:
The full content to be signed viz. PDF, or Data File or XML remains on the server and only hash of the content would be sent to client's browser to be signed using client's Digital Signature and Signed content would be sent back to server.</p>

<p>Please refer to Below SO answers depending on the content you need to sign:</p>

<p><a href=""https://stackoverflow.com/a/55676351/9659885"">Sign PDF with plain JavaScript</a></p>

<p><a href=""https://stackoverflow.com/a/55692742/9659885"">Sign Content or XML or Data</a></p>

<p><a href=""https://stackoverflow.com/a/55757349/9659885"">Register User's Digital Signature and Authenticate User</a></p>
","2032","<c#><asp.net><digital-signature><private-key>","2","0","2","2019-09-11 07:04:13","9607052","0","","41713","","2012-03-07 18:22:46","2012-03-07 16:39:44",""
"26211480","Use JKS keystore for public key authentication with Ganymed SSH","<p>I'm trying to extract a private key from a java keystore and then feed it to Ganymed SSH in order to establish a connection with public key authentication. It is however refusing to connect. </p>

<p>I can successfully connect through Cygwin (<code>ssh -i</code>) with files generated by the following program, but the program itself is unable to get past authentication on the same machine. What am I doing wrong? </p>

<p>I don't get an exception, <a href=""http://www.ganymed.ethz.ch/ssh2/javadoc/ch/ethz/ssh2/Connection.html#authenticateWithPublicKey%28java.lang.String,%20char[],%20java.lang.String%29"" rel=""nofollow"">Connection.authenticateWithPublicKey(String, char[], String)</a> simply returns false, so this should not be a formatting problem. It does not matter if I leave the private key unencrypted, the result is the same. Also, I was able to connect with a program similar to this with files generated by putty-gen and ssh-keygen.</p>

<p>You will need the following to compile (bouncycastle and ganymed):</p>

<ul>
<li><a href=""https://www.bouncycastle.org/download/bcprov-ext-jdk15on-151.jar"" rel=""nofollow"">bcprov</a></li>
<li><a href=""https://www.bouncycastle.org/download/bcpkix-jdk15on-151.jar"" rel=""nofollow"">bcpkix</a></li>
<li><a href=""http://central.maven.org/maven2/ch/ethz/ganymed/ganymed-ssh2/262/ganymed-ssh2-262.jar"" rel=""nofollow"">ganymed-ssh2</a></li>
</ul>

<p>Generate the keystore with:</p>

<pre><code>keytool -genkeypair -keystore keystore.jks -alias myalias -storepass password -keypass password -keyalg RSA -dname CN=myalias,O=example.com -storetype JKS -validity 365 -v
</code></pre>

<p>Code (expects host and port as args and the above keystore in working directory):</p>

<pre class=""lang-java prettyprint-override""><code>import ch.ethz.ssh2.Connection;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayWriter;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.security.GeneralSecurityException;
import java.security.Key;
import java.security.KeyStore;
import java.security.PublicKey;
import java.security.SecureRandom;
import java.security.cert.Certificate;
import java.security.interfaces.DSAParams;
import java.security.interfaces.DSAPublicKey;
import java.security.interfaces.RSAPublicKey;
import javax.xml.bind.DatatypeConverter;
import org.bouncycastle.openssl.PEMEncryptor;
import org.bouncycastle.openssl.jcajce.JcaPEMWriter;
import org.bouncycastle.openssl.jcajce.JcePEMEncryptorBuilder;

public class KeystoreGanymedSSH {

    public static void main(String[] args)
            throws Exception {
        String keystorePath = ""keystore.jks"";
        char[] password = ""password"".toCharArray();
        String alias = ""myalias"";

        String host = args[0];
        int port = Integer.parseInt(args[1]);

        // keystore init
        KeyStore keystore = KeyStore.getInstance(""JKS"");
        InputStream in;
        try {
            in = new FileInputStream(keystorePath);
        } catch (FileNotFoundException ex) {
            System.out.println(""Generate keystore using this command:"");
            System.out.println(""keytool -genkeypair -keystore keystore.jks""
                    + "" -alias myalias -storepass password -keypass password""
                    + "" -keyalg RSA -dname CN=myalias,O=example.com -storetype""
                    + "" JKS -validity 365 -v"");
            throw ex;
        }
        try {
            keystore.load(in, password);
        } finally {
            in.close();
        }

        // get public key in OpenSSH format
        String authorizedKeysEntry = genAuthorizedKeysEntry(keystore, alias);
        if (authorizedKeysEntry == null) {
            throw new Exception(""could not generate authorized_keys entry"");
        }
        System.out.println(""Public key for pasting into OpenSSH authorized_keys file (always same):"");
        System.out.println(authorizedKeysEntry);
        System.out.println();

        Writer writer;

        // write to file
        writer = new OutputStreamWriter(
                new FileOutputStream(new File(""authorized_keys"")), ""UTF-8"");
        try {
            writer.write(authorizedKeysEntry);
        } finally {
            writer.close();
        }

        // obtain PEM encrypted char[]
        Key key = keystore.getKey(alias, password);
        writer = new CharArrayWriter();
        JcaPEMWriter pw = new JcaPEMWriter(writer);
        SecureRandom random = SecureRandom.getInstance(""SHA1PRNG"");
        PEMEncryptor encryptor = new JcePEMEncryptorBuilder(""DES-EDE3-CBC"")
                .setSecureRandom(random).build(password);
        pw.writeObject(key, encryptor);
        pw.flush();
        char[] privateKey = ((CharArrayWriter)writer).toCharArray();

        System.out.println(""Encrypted private key (changes on each run):"");
        System.out.println(new String(privateKey));
        String name = ""RSA"".equals(key.getAlgorithm()) ? ""id_rsa"" : ""id_dsa"";
        writer = new OutputStreamWriter(
                new FileOutputStream(new File(name)), ""UTF-8"");
        try {
            writer.write(privateKey);
        } finally {
            writer.close();
        }

        // attempt ganymed connection   
        Connection connection = null;
        try {
            System.out.println(""Connecting to "" + host + "":"" + port);
            connection = new Connection(host, port);        
            connection.connect(); // no known_hosts

            if (!connection.isAuthMethodAvailable(alias, ""publickey"")) {
                System.out.println(""Public key auth is not available."");
                return;
            }

            boolean result = connection.authenticateWithPublicKey(
                    alias, privateKey, new String(password));

            System.out.println(result ? ""Authentication success."" : ""Authentication failure."");
        } finally {
            if (connection != null) {
                connection.close();
            }
        }

    }

    private static String genAuthorizedKeysEntry(
            KeyStore keystore, String alias) throws GeneralSecurityException, IOException {
        Certificate[] chain = keystore.getCertificateChain(alias);
        if (chain == null || chain.length &lt;= 0) {
            return null;
        }
        PublicKey publicKey = chain[0].getPublicKey();
        if (""RSA"".equals(publicKey.getAlgorithm())) {
            RSAPublicKey rsaPublicKey = (RSAPublicKey) publicKey;
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            DataOutputStream dos = new DataOutputStream(baos);
            String type = ""ssh-rsa"";
            dos.writeInt(type.getBytes(""UTF-8"").length);
            dos.write(type.getBytes(""UTF-8""));
            byte[] exponent = rsaPublicKey.getPublicExponent().toByteArray();
            dos.writeInt(exponent.length);
            dos.write(exponent);
            byte[] modulus = rsaPublicKey.getModulus().toByteArray();
            dos.writeInt(modulus.length);
            dos.write(modulus);
            String encoded = DatatypeConverter.printBase64Binary(
                    baos.toByteArray());
            return type + "" "" + encoded + "" "" + alias;
        } else if (""DSA"".equals(publicKey.getAlgorithm())) {
            DSAPublicKey dsaPublicKey = (DSAPublicKey) publicKey;
            DSAParams params = dsaPublicKey.getParams();
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            DataOutputStream dos = new DataOutputStream(baos);
            String type = ""ssh-dss"";
            dos.writeInt(type.getBytes(""UTF-8"").length);
            dos.write(type.getBytes(""UTF-8""));
            byte[] p = params.getP().toByteArray();
            dos.writeInt(p.length);
            dos.write(p);
            byte[] q = params.getQ().toByteArray();
            dos.writeInt(q.length);
            dos.write(q);
            byte[] g = params.getG().toByteArray();
            dos.writeInt(g.length);
            dos.write(g);
            byte[] y = dsaPublicKey.getY().toByteArray();
            dos.writeInt(y.length);
            dos.write(y);
            String encoded = DatatypeConverter.printBase64Binary(
                    baos.toByteArray());
            return type + "" "" + encoded + "" "" + alias;
        } else {
            return null;
        }
    }
}
</code></pre>

<p>Sample output:</p>

<pre><code>Public key for pasting into OpenSSH authorized_keys file (always same):
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCJLXgRaVdbZNuCsTgUsw2UPGdEA4La8ggQZWkevgAEMrgF+YYT2uN6BYDgD7hzs3ZTLXz2KUQLkMe7xLvimAsg6YXUi46IGEkTSOBFR0yYj+12O2BNbAxOXLIDIMBK5bsDwnuOsFedbeILFU4DaV+igJKO1zHWNbmbmd4RlfrIgH7Blfce8zSVkEdLkqEmydbg4xmj6r+MlzA5HSNZJILivb1XYNnoLjRH1SwUC8Rj6bjgBdNEXLOH0FNpCatHk9R00GaSZjcDZRKNAKnBSEIpw01TKaJlyQUTGqYGjK7UIbbafwMuYKR1rIzkyh4Usxvd3FvMdmKQSUeCnZU296YF myalias

Encrypted private key (changes on each run):
-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: DES-EDE3-CBC,86DF7B50D4E319F6

QGngqwq+NXQGee7pEVROnwvIX6cyzo9QjdKtlherLCIYQjD4zagCvCd4vOUmwe0S
g/KaPeq8tanU0KB6m/WfAsgfOAkR+ujIod0hkUoCZp/Jg9LO2Me7ZFDNW/cBqbW0
CifaqDmOVgJ+HnZHJouMZyPf+To8SDdMSJZQ/3Wc2ZQn6BIhEjLzdz0hSVXGz2Gs
wmVYy4oedjB2f+dQliEnwFXBOusRMfqgiPqkdQj38voipqYBmPHUYSity0HGsRlo
KgovSeQhEDPT8GyYVJcKZLV3BUipvNvKJBP613wBZsuCtvhUNNNOfVFeTkD8+7PG
q2YzF3nasOM471EHyj18zPZ+DdPQMDPHtpVFQXJCFlf7xlGVAesPPUFJICXFE5OZ
JRAJC8+7WuT8O974uT9zDLeV5XLJRJK6o8dYXtZBK0YMpZy91b9axYDeVQh+Sfd+
V/T5RQ2osXg72lDBtz6vzeyMGj+Y9PQwZb97tdRW1X/ON4Eiiz/+1SVeDbWilo29
gMSPl4wb379Dvi7Z+b5OTGoF+F1p7Cp48sUEgIP8vPXinoOhBLdy1zq8oNVbo7PS
M5+41PKL4ao8pL9BCOALZpzP2R9LxoHjjL1auaWMzKLECtiEDvgu4GJeTVXvg7sO
yptecswVCF8fY+pV8dTtYU3vUs4UsdC9PG9IhqeRbML9dX7htsgkBmHdYAq5WOS/
RREuU+jyrCnc6kpOhIK/1wMOoIMOBnJ8EJXpMJaZtNwOQr05bOfFvozOEe35JwnP
NElP7CYBIvQrTyfrRxtJE+ntQO+uJbIvxFDY0EoQJX6YPFr0V7rnWy4W1yH0Yv6E
pmwERGYr1lbBIpxjTzTwZ3r845EUEwiwEt3+xfepBh3HUXg/mZYUw4cEz3HbzZDT
tWRPFpsBaicfatzbqvL7Teq1V8baUj1CW0wrANZbHc0FvSzuHMygub2ARgM3QAMj
L5yaITjH8/Tnbew7jPi5kSTXdNUnAJf3M/m6DC7svJtx+1Xwd0tfzp3GHYLaT+Mm
vOu8R5g/JJvBVMTzP8gyI32jDViRuHHwyFOlyJ35IrRCkW8i+aBmG1iT2WANWRai
2ujX4Gc+M2VncUdFR9MoCxUOy/7qKDcGNMpk8sgIi6Pc8SLiodueiWP3W6AXJKvs
u5akyk7jj8zq9+fe85T/cZ8lYe81hd3oA/9b/9cs8sdlhTmYjfUr1FgFHNyFPwdV
QnyayxeAy3xvoYXBBr7JrmWXLDTHghhMBHGHW7imoLNN8QZtTF+pGWzsxNcAVbEz
kmLll9ki0CUIbfufszp/b05OBC2M0EHn9uW61bwbiZfWxhfTlC2zHNHpig6zQhHu
q8n//KgHB5LDctGHoeqlUwoLbt78wd0bAD23GeZ2q1CdB6FYxoMYL8FuVOnxoUh3
fquXzH0wjv3Qm4Rwit+8zSdbD/+QbtJ2c/ZguUy4T3phI5BGzhLh2IDO8T9B6y5B
MmTyFjfZjVj+zU4F0BAIzzLlYTl332ecMj87StoNazqIF5Dj2ZqjUtF46MDeMZjO
tRvpIi8bWBm78rFNC51TZSBcfw714yOxHsPU0PqUMQMCgXawcDkTt2645/+ZZQtk
-----END RSA PRIVATE KEY-----

Connecting to 10.0.3.138:22
Authentication failure.
</code></pre>

<p><strong>Edit01</strong></p>

<p>I've tried this with <a href=""http://www.jcraft.com/jsch/"" rel=""nofollow"">jsch</a> and <a href=""https://github.com/hierynomus/sshj"" rel=""nofollow"">sshj</a> and all of them fail to connect. There has to be something wrong with the above code for private key extraction. What baffles me is that I can connect with <code>ssh -i</code>. Also, if I load the above private key into putty-gen, I get the same authorized_keys string as in output from my program (already present in my remote machine's <code>.ssh/authorized_keys</code>). But if I save it as a ppk file and then try to establish a putty session with it, it doesn't go through either (server refused our key).</p>
","<p><strong>There's noting wrong with the code I posted.</strong> It was just a huge fail on my part. </p>

<p>I used the keystore alias name as a username which <em>did not exist as a user account</em> on the remote linux box. After creating the account, everything works. I was editing the wrong <code>authorized_keys</code> file (on some other account) and expecting it to work through some obscure dark magic known only to leprechauns, unicorns and apparently my brain.</p>

<p>As for why it worked when I did <code>ssh -i</code>... Defaults. Stupid defaults. I did not specify a username at all so it defaulted to the one Cygwin was currently using and it just so happened that it had the same name as the account on the remote where I was editing the <code>authorized_keys</code> file.</p>

<p>Great. Awesome. Just..perfect. I need to go find a bridge to throw myself off from now.</p>

<p>Doing what I do in my code works with ganymed, jsch and sshj (with some small modifications for the other two APIs).</p>
","2027","<java><ssh><keystore><private-key><public-key>","3","4","1","2014-10-06 14:06:35","","0","1","878469","","2014-10-06 12:17:48","2014-10-06 07:19:05",""
"10674117","private key distribution techniques?","<p>I made a chat application with java rmi client server. For the security of my messages using the RSA algorithm, but my difficulty in distributing the private key into the opponent's chat. Perhaps from my friends there who can help how to distribute a private key to the opponent so that he can decrypt the chat messages sent.</p>
","<p>What you need to use is an asymmetric scheme to transfer the info. With asymmetric encryption, even if someone is listening in, they can't know what they key is. You can encrypt the message using this, but generally you use it to encrypt a symmetric key and then use that from there on.</p>

<p>Have a look at <a href=""http://en.wikipedia.org/wiki/Public-key_cryptography"" rel=""nofollow"">this</a> for more information about the background.</p>

<p>As for how to do it in your code, I would suggest googling something along the lines of ""java public key library"".</p>
","2019","<java><encryption><rsa><private-key>","1","0","3","2014-11-06 20:08:22","","3","","605744","","2012-05-20 14:18:49","2012-05-20 14:10:46",""
"10674117","private key distribution techniques?","<p>I made a chat application with java rmi client server. For the security of my messages using the RSA algorithm, but my difficulty in distributing the private key into the opponent's chat. Perhaps from my friends there who can help how to distribute a private key to the opponent so that he can decrypt the chat messages sent.</p>
","<p>First of all you never distribute private key, whilst public key can be publicly (duh!) available. You encrypt your message using the public key of the person on the second side of the chat, and they use their private key to decrypt it. You can send your public key using plaintext, via e-mail or publish it on your website so others can encrypt their messages to you with it.</p>

<p>To make your life easier invest in using e.g. <a href=""/questions/tagged/ssl"" class=""post-tag"" title=""show questions tagged &#39;ssl&#39;"" rel=""tag"">ssl</a> - which is much faster since after establishing secure channel using asymmetric encryption it exchanges symmetric session keys and uses much faster symmetric encryption.</p>

<p>Actually, distributing of a public key might be an issue as well. If your opponent can also modify the transmission (as opposed to only listening to your transmission channel) he/she can send bogus public key of yours. That's why public keys (e.g. on website) need to be signed by the chain of trusted authorities (whose public keys are hard-coded in the web browser).</p>
","2019","<java><encryption><rsa><private-key>","1","3","3","2014-11-06 20:08:22","","3","","605744","","2012-05-20 14:18:49","2012-05-20 14:10:46",""
"10674117","private key distribution techniques?","<p>I made a chat application with java rmi client server. For the security of my messages using the RSA algorithm, but my difficulty in distributing the private key into the opponent's chat. Perhaps from my friends there who can help how to distribute a private key to the opponent so that he can decrypt the chat messages sent.</p>
","<p>RSA is a public key cryptography where your clients have a public key and you have a private key using which you decrypt the message that is the message is encryprted using clients public key and decrypted using your private key.
you can check this out <a href=""http://www.di-mgt.com.au/rsa_alg.html"" rel=""nofollow"">http://www.di-mgt.com.au/rsa_alg.html</a>
it very much explains in detail that how it works.
this PPT explains how it can be implemented in java 
<a href=""http://www.cs.cityu.edu.hk/~cs4288/Java/RSA.doc"" rel=""nofollow"">www.cs.cityu.edu.hk/~cs4288/Java/RSA.doc</a>
its really helpful. </p>

<p>Hope it helps!!</p>
","2019","<java><encryption><rsa><private-key>","1","0","3","2014-11-06 20:08:22","","3","","605744","","2012-05-20 14:18:49","2012-05-20 14:10:46",""
"51152008","Issue Connection to server using Remote-FTP atom package and Private Keys","<p>I'm trying to connect to my server using the atom package ""Remote-FTP"" and using a private key.</p>

<p>I have the SSH keys set up on my server and can connect successfully using putty.</p>

<p>The private key is saved in my project folder and I have an existing .ftpconfig file (without a private key) that connects successfully when I replace the information inside the file. </p>

<p>The Key has been converted to the necessary ssh format and I have no passphrase at the moment. I have also gave the full path of the private key file</p>

<p>Here is my .ftpconfig file -</p>

<pre><code>{
""protocol"": ""sftp"",
""host"": ""user@server"",
""port"": 22,
""user"": """",
""pass"": """",
""promptForPass"": false,
""remote"": """",
""local"": """",
""agent"": """",
""privatekey"": ""putty_private_key_sbappsupconvrted.ppk"",
""passphrase"": """",
""hosthash"": """",
""ignorehost"": true,
""connTimeout"": 10000,
""keepalive"": 10000,
""keyboardInteractive"": true,
""watch"": [],
""watchTimeout"": 500
}
</code></pre>

<p>The error code I am receiving is:</p>

<blockquote>
  <p>REMOTE FTP: Connection...</p>
  
  <p>REMOTE FTP: Connection failed Error: getaddrinfo EAI_FAIL user@server:
  22</p>
  
  <p>REMOTE FTP: Connection closed</p>
</blockquote>

<p>I have also given the full path of the private key file</p>

<pre><code>C:\Users\user\.atom\server\putty_private_key_sbappsupconvrted.ppk
</code></pre>

<p>and I get this error</p>

<blockquote>
  <p>Could not parse .ftpconfig Unexpected token U in JSON at position 219</p>
</blockquote>

<p>Any help would be greatly appreciated</p>
","<p>Put your private key in following path: <code>C:\Users\USER\AppData\Local\atom\app-1.30.0</code></p>

<p>Replace <code>USER</code>. It seems it looks in this folder for the keys.</p>
","2009","<ftp><sftp><remote-access><ssh-keys><private-key>","2","1","2","2019-01-29 18:43:22","52251110","2","1","4889267","","2018-07-03 10:21:03","2018-07-03 10:14:16",""
"51152008","Issue Connection to server using Remote-FTP atom package and Private Keys","<p>I'm trying to connect to my server using the atom package ""Remote-FTP"" and using a private key.</p>

<p>I have the SSH keys set up on my server and can connect successfully using putty.</p>

<p>The private key is saved in my project folder and I have an existing .ftpconfig file (without a private key) that connects successfully when I replace the information inside the file. </p>

<p>The Key has been converted to the necessary ssh format and I have no passphrase at the moment. I have also gave the full path of the private key file</p>

<p>Here is my .ftpconfig file -</p>

<pre><code>{
""protocol"": ""sftp"",
""host"": ""user@server"",
""port"": 22,
""user"": """",
""pass"": """",
""promptForPass"": false,
""remote"": """",
""local"": """",
""agent"": """",
""privatekey"": ""putty_private_key_sbappsupconvrted.ppk"",
""passphrase"": """",
""hosthash"": """",
""ignorehost"": true,
""connTimeout"": 10000,
""keepalive"": 10000,
""keyboardInteractive"": true,
""watch"": [],
""watchTimeout"": 500
}
</code></pre>

<p>The error code I am receiving is:</p>

<blockquote>
  <p>REMOTE FTP: Connection...</p>
  
  <p>REMOTE FTP: Connection failed Error: getaddrinfo EAI_FAIL user@server:
  22</p>
  
  <p>REMOTE FTP: Connection closed</p>
</blockquote>

<p>I have also given the full path of the private key file</p>

<pre><code>C:\Users\user\.atom\server\putty_private_key_sbappsupconvrted.ppk
</code></pre>

<p>and I get this error</p>

<blockquote>
  <p>Could not parse .ftpconfig Unexpected token U in JSON at position 219</p>
</blockquote>

<p>Any help would be greatly appreciated</p>
","<p>The problem is the backslashes. The .ftpconfig file is in JSON format and slash followed by character has a special meaning. To use your ssh key you just have to escape the slashes. In other words change : </p>

<p><code>C:\Users\user\.atom\server\putty_private_key_sbappsupconvrted.ppk</code></p>

<p>To : </p>

<p><code>C:\\Users\\user\\.atom\\server\\putty_private_key_sbappsupconvrted.ppk</code></p>

<p>Then it will work with no issues.</p>
","2009","<ftp><sftp><remote-access><ssh-keys><private-key>","2","3","2","2019-01-29 18:43:22","52251110","2","1","4889267","","2018-07-03 10:21:03","2018-07-03 10:14:16",""
"48878387","Convert .der to .pem using Java","<p>I am attempting to export the contents of a PrivateKey (assumed DER) format into a stream of bytes encoded as PEM format.</p>

<p>The link <a href=""https://stackoverflow.com/a/14835614/5107016"">here</a> discusses the use of BouncyCastle and PemWriter to dump a key to PEM format. </p>

<p>Is there a way to create a BouncyCastle object from a PrivateKey object, or some other way to export PrivateKey as PEM byte stream?</p>
","<p>This process uses OpenSSL to convert a DER-encoded certificate to an ASCII (Base64) encoded certificate. Typically, DER-encoded certificates use .CRT or .CER for the file extension, but regardless of the extension, a DER encoded certificate is one that is not readable as plain text (unlike PEM encoded certificate).</p>

<p>A PEM-encoded certificate may also use .CRT or CER as the extension for the file name, in which case, you can simply copy the file to a new name using the .PEM extension:</p>

<p>$ cp hostname.cer hostname.pem</p>

<p>To convert a DER-encoded certificate to PEM encoding, the OpenSSL command is as follows:</p>

<p>$ openssl x509 -inform der -in hostname.cer -out hostname.pem</p>

<p>For example:</p>

<p>$ openssl x509 -inform der -in /opt/cloudera/security/pki/hostname.cer -out /tmp/hostname.pem</p>
","1941","<private-key><pem><der>","0","-1","2","2018-02-20 06:29:54","","1","","","","","2018-02-20 05:23:57",""
"48878387","Convert .der to .pem using Java","<p>I am attempting to export the contents of a PrivateKey (assumed DER) format into a stream of bytes encoded as PEM format.</p>

<p>The link <a href=""https://stackoverflow.com/a/14835614/5107016"">here</a> discusses the use of BouncyCastle and PemWriter to dump a key to PEM format. </p>

<p>Is there a way to create a BouncyCastle object from a PrivateKey object, or some other way to export PrivateKey as PEM byte stream?</p>
","<p>The code snippet seems to do the job:</p>

<pre><code>KeyStore keystore = KeyStore.Instance(""JKS"");
InputStream stream = new FileInputStream(""path-to-jks-file"");
keystore.load(stream, null);
PrivateKey key = (PrivateKey) keystore.getKey(""mykey"", ""password"".toCharArray());
byte[] prvkey = key.getEncoded();
String encoded = Base64.getEncoder().encodeToString(prvkey);
String key_pem = ""-----BEGIN PRIVATE KEY-----"" + encoded + ""-----END PRIVATE KEY-----"";
</code></pre>
","1941","<private-key><pem><der>","0","1","2","2018-02-20 06:29:54","","1","","","","","2018-02-20 05:23:57",""
"37730649","SSH connection using private key authentication in Ubuntu","<p>I was given a <code>ppk</code> to access the server of my client. It was working perfectly using puTTY in windows as I can easily browse the private key. However, I need to access the server in Ubuntu environment I tried the command</p>

<p>ssh -i /path/to/private_key.ppk user@myserver.com</p>

<p>But it was asking for paraphrase which I wasn't ask when connecting using PuTTY in Windows.</p>
","","1940","<ubuntu><authentication><ssh><private-key>","1","","0","2016-06-09 16:51:50","","2","","2196426","","2016-06-09 16:51:50","2016-06-09 15:44:41",""
"18657311","Instantiating a X509Certificate object in C# which holds a private key as well","<p>I'm trying to implement a secure TCP server and as the result I need to create an object of class <code>X509Certificate2</code> in order to authenticate the clients.</p>

<p>I believe such a certificate object should contain the private key (as well) in order to be able to decrypt incoming messages, isn't that true? Well no matter how I generate a certificate file, when I give its file address to <code>X509Certificate2</code>'s constructor the object's <code>HasPrivateKey</code> property is false and clients are not authenticated!</p>

<p>In the Microsoft's page on <a href=""http://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509certificate2.aspx"" rel=""nofollow noreferrer"">how to use the <code>X509Certificate2</code> class</a>, in source code's comments it indicates that the certificate can be generated using <code>makecert</code> program like this:</p>

<pre><code>makecert -r -pe -n ""CN=CERT_SIGN_TEST_CERT"" -b 01/01/2010 -e 01/01/2012 -sky exchange -ss my
</code></pre>

<p>In which <code>-pe</code> switch should include the private key in certificate but looking at the generated file I can tell that it does not do that.</p>

<p>Since I'm implementing this software in Ubuntu using Mono I thought I can use <code>openssl</code> instead. So following the instructions given in <a href=""https://help.ubuntu.com/10.04/serverguide/certificates-and-security.html"" rel=""nofollow noreferrer"">this page</a> I created a private key and a public key. <code>X509Certificate2</code> class accepts the public key as if it was created by <code>makecert</code> command but not the private key (it throws an exception when it is constructed).</p>

<p>There is a <a href=""https://stackoverflow.com/questions/437039a4/importing-an-openssl-created-self-signed-cert-into-a-x509certificate2-mono-ca"">relatively old post</a> in SO which asks the same question but it has no accepted answer. And the two given ones suggest using two different formats for certificates, PKCS8 and PKCS12 while in <a href=""http://msdn.microsoft.com/en-us/library/ykwkw5f9.aspx"" rel=""nofollow noreferrer"">the documentation</a> it is clearly said that <code>X509Certificate</code> make use of PKCS7!</p>

<p>Anyway I'm all confused. Has anyone ever been able to use <code>X509Certificate2</code> with a private key loaded? How?</p>
","<p>An X509 certificate should only contain a public key.  It binds the public key to an identity and is signed.  <a href=""http://www.ietf.org/rfc/rfc5280.txt"" rel=""nofollow noreferrer"">RFC 5280</a> contains the details on X509 certificates.</p>

<p>However, the <code>X509Certificate2</code> object can contain a private key according to the <a href=""http://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509certificate2.aspx"" rel=""nofollow noreferrer"">MSDN documentation</a>.</p>

<p>Also, a keystore, such as a PKCS12 keystore can contain a private key and a corresponding certificate.</p>

<p>PKCS7 is a specification for signing and encrypting messages.</p>

<p>PKCS8 is a specification for private keys.</p>

<p>See <a href=""http://en.wikipedia.org/wiki/PKCS"" rel=""nofollow noreferrer"">PKCS</a> for the differences between different PKCS standards.</p>

<p>The MSDN link above has some example C# code to encrypt and decrypt files.  It also has an example <code>makecert</code> command line to generate a certificate.  However this certificate and associated private key is stored in the Windows local user store, so I'm not sure if that will translate correctly to Ubuntu.</p>

<p>There is also some discussion in this <a href=""https://stackoverflow.com/questions/5471716/how-to-get-private-key-from-pkcs12-p12-file-using-c-sharp?rq=1"">SO question</a> about using PKCS12 keystores to instantiate the <code>X509Certificate2</code> object and then to access the private key.  This might be the better way for you to accomplish your goal.  You can use openssl to generate a private key, a signed certificate, and import them into a PKCS12 keystore.  You can create a PKCS12 keystore using the commands <a href=""http://www.openssl.org/docs/apps/pkcs12.html"" rel=""nofollow noreferrer"">here</a>.  For example, create a text file (file.pem) containing both the PEM format of your private key and corresponding X509 certificate.  Then run this command:</p>

<pre><code>openssl pkcs12 -export -in file.pem -out file.p12 -name ""My Certificate""
</code></pre>

<p>Also on the <code>makecert</code> documentation page, it says, ""for testing purposes only"".  So I wouldn't depend on those certificates for a production secure server.</p>
","1925","<c#><openssl><private-key><x509certificate2><makecert>","2","2","1","2013-09-07 18:36:55","18667498","0","1","-1","","2017-05-23 12:14:46","2013-09-06 11:57:21",""
"18670201","Smartgit keep popup the login form all the time","<p>Smartgit keep popup the login form all the time!</p>

<p>I have deployed git on my server. Follow exactly the instruction of git setting.</p>

<p>Then I generate open SSH private key by puttygen, fill the passpharse, put the code inside ""public key...authorized_keys file:"" box to notepad ++.</p>

<p>After that, I copied the key and put to authorized_keys file ""git/.ssh/authorized_keys"" and remove all endline character in it.</p>

<p>Then I clone repository via ""ssh://git@mygitserver:myport/myproject.git"", point to open SSH private key generated before, fill the passphrase and login.</p>

<p>I have googled alot and try to change owner to git user, change permission, edit key file but still hopeless.</p>

<p>Smartgit keep popup the login form all the time. How can I fix it?</p>

<p>I cannot connect to repository using SmartGit, neither command line. This is my log content:
`</p>

<pre><code>19143347 (2013-09-07 13:24:00,907) [QThreadPoolThread-2 (smartgit.aES)] WARN  smartgit.ssh.client.ui  - could not authenticate, trying again
java.io.IOException: Publickey authentication failed.
    at com.trilead.ssh2.auth.AuthenticationManager.authenticatePublicKey(AuthenticationManager.java:314)
    at com.trilead.ssh2.Connection.authenticateWithPublicKey(Connection.java:466)
    at com.trilead.ssh2.Connection.authenticateWithPublicKey(Connection.java:519)
    at com.syntevo.dvcs.transport.ssh.f.a(SourceFile:39)
    at com.syntevo.dvcs.transport.ssh.m.a(SourceFile:150)
    at com.syntevo.dvcs.transport.ssh.h.a(SourceFile:141)
    at smartgit.aES.a(SourceFile:61)
    at smartgit.UL.run(SourceFile:24)
    at smartgit.UQ.run(SourceFile:65)
Caused by: java.io.IOException: Sorry, this connection is closed.
    at com.trilead.ssh2.transport.TransportManager.sendMessage(TransportManager.java:647)
    at com.trilead.ssh2.auth.AuthenticationManager.authenticatePublicKey(AuthenticationManager.java:282)
    ... 8 more
Caused by: java.io.IOException: Cannot read full block, EOF reached.
    at com.trilead.ssh2.crypto.cipher.CipherInputStream.getBlock(CipherInputStream.java:81)
    at com.trilead.ssh2.crypto.cipher.CipherInputStream.read(CipherInputStream.java:108)
    at com.trilead.ssh2.transport.TransportConnection.receiveMessage(TransportConnection.java:232)
    at com.trilead.ssh2.transport.TransportManager.receiveLoop(TransportManager.java:681)
    at com.trilead.ssh2.transport.TransportManager$1.run(TransportManager.java:480)
    at java.lang.Thread.run(Unknown Source)
19144230 (2013-09-07 13:24:01,790) [QThreadPoolThread-2 (smartgit.aES)] WARN  smartgit.ssh.client.ui  - could not authenticate, trying again
java.io.IOException: pubkey authentication failed
    at com.syntevo.dvcs.transport.ssh.f.a(SourceFile:40)
    at com.syntevo.dvcs.transport.ssh.m.a(SourceFile:150)
    at com.syntevo.dvcs.transport.ssh.h.a(SourceFile:141)
    at smartgit.aES.a(SourceFile:61)
    at smartgit.UL.run(SourceFile:24)
    at smartgit.UQ.run(SourceFile:65)
19144231 (2013-09-07 13:24:01,791) [Thread-163] ERROR smartgit.ssh.trilead  - com.trilead.ssh2.transport.TransportManager: Receive thread: error in receiveLoop: socket closed
19144841 (2013-09-07 13:24:02,401) [main] INFO              q.dialog  - Showing dialog 75 (@1E95534) '@1D8EDCE - SSH Authentication' (owner: @520C83)
19144859 (2013-09-07 13:24:02,419) [main] INFO  q.swt.shellActivation  - shell deactivated Shell {Clone}@520C83
19144860 (2013-09-07 13:24:02,420) [main] INFO  q.swt.shellActivation  - shell activated Shell {SSH Authentication}@1E95534
19144860 (2013-09-07 13:24:02,420) [main] INFO  q.swt.shellActivation  - Activation change from Shell {Clone}@520C83 to Shell {SSH Authentication}@1E95534
19146675 (2013-09-07 13:24:04,235) [main] INFO  q.swt.shellActivation  - shell deactivated Shell {SSH Authentication}@1E95534
19146677 (2013-09-07 13:24:04,237) [main] INFO  q.swt.shellActivation  - Activation change from Shell {SSH Authentication}@1E95534 to null
19264293 (2013-09-07 13:26:01,853) [Thread-165] ERROR smartgit.ssh.trilead  - com.trilead.ssh2.transport.TransportManager: Receive thread: error in receiveLoop: Cannot read full block, EOF reached.
23254777 (2013-09-07 14:32:32,337) [main] INFO  q.swt.shellActivation  - shell activated Shell {SSH Authentication}@1E95534
23254777 (2013-09-07 14:32:32,337) [main] INFO  q.swt.shellActivation  - Activation change from null to Shell {SSH Authentication}@1E95534
23257318 (2013-09-07 14:32:34,878) [main] INFO  q.swt.shellActivation  - shell deactivated Shell {SSH Authentication}@1E95534
23257320 (2013-09-07 14:32:34,880) [main] INFO  q.swt.shellActivation  - Activation change from Shell {SSH Authentication}@1E95534 to null
23325752 (2013-09-07 14:33:43,312) [main] INFO  q.swt.shellActivation  - shell activated Shell {SSH Authentication}@1E95534
23325752 (2013-09-07 14:33:43,312) [main] INFO  q.swt.shellActivation  - Activation change from null to Shell {SSH Authentication}@1E95534
23326238 (2013-09-07 14:33:43,798) [main] INFO  q.swt.shellActivation  - shell deactivated Shell {SSH Authentication}@1E95534
23326239 (2013-09-07 14:33:43,799) [main] INFO  q.swt.shellActivation  - Activation change from Shell {SSH Authentication}@1E95534 to null
</code></pre>

<p>`</p>
","<ul>
<li>SmartGit can process only OpenSSH-type keys</li>
<li>Puttygen generates Putty-type keys</li>
</ul>

<p>You <strong>must</strong> convert (with Puttygen) previously created Putty's *.ppk</p>

<pre><code>PuTTY-User-Key-File-2: ssh-rsa
...
</code></pre>

<p>to OpenSSH's private key file</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
...
-----END RSA PRIVATE KEY-----
</code></pre>

<p>and use with Smart* line only OpenSSH-version of keys</p>
","1925","<git><openssl><private-key><smartgit>","2","3","2","2013-09-09 00:25:20","18672104","3","","1436469","","2013-09-07 07:39:18","2013-09-07 05:49:31",""
"18670201","Smartgit keep popup the login form all the time","<p>Smartgit keep popup the login form all the time!</p>

<p>I have deployed git on my server. Follow exactly the instruction of git setting.</p>

<p>Then I generate open SSH private key by puttygen, fill the passpharse, put the code inside ""public key...authorized_keys file:"" box to notepad ++.</p>

<p>After that, I copied the key and put to authorized_keys file ""git/.ssh/authorized_keys"" and remove all endline character in it.</p>

<p>Then I clone repository via ""ssh://git@mygitserver:myport/myproject.git"", point to open SSH private key generated before, fill the passphrase and login.</p>

<p>I have googled alot and try to change owner to git user, change permission, edit key file but still hopeless.</p>

<p>Smartgit keep popup the login form all the time. How can I fix it?</p>

<p>I cannot connect to repository using SmartGit, neither command line. This is my log content:
`</p>

<pre><code>19143347 (2013-09-07 13:24:00,907) [QThreadPoolThread-2 (smartgit.aES)] WARN  smartgit.ssh.client.ui  - could not authenticate, trying again
java.io.IOException: Publickey authentication failed.
    at com.trilead.ssh2.auth.AuthenticationManager.authenticatePublicKey(AuthenticationManager.java:314)
    at com.trilead.ssh2.Connection.authenticateWithPublicKey(Connection.java:466)
    at com.trilead.ssh2.Connection.authenticateWithPublicKey(Connection.java:519)
    at com.syntevo.dvcs.transport.ssh.f.a(SourceFile:39)
    at com.syntevo.dvcs.transport.ssh.m.a(SourceFile:150)
    at com.syntevo.dvcs.transport.ssh.h.a(SourceFile:141)
    at smartgit.aES.a(SourceFile:61)
    at smartgit.UL.run(SourceFile:24)
    at smartgit.UQ.run(SourceFile:65)
Caused by: java.io.IOException: Sorry, this connection is closed.
    at com.trilead.ssh2.transport.TransportManager.sendMessage(TransportManager.java:647)
    at com.trilead.ssh2.auth.AuthenticationManager.authenticatePublicKey(AuthenticationManager.java:282)
    ... 8 more
Caused by: java.io.IOException: Cannot read full block, EOF reached.
    at com.trilead.ssh2.crypto.cipher.CipherInputStream.getBlock(CipherInputStream.java:81)
    at com.trilead.ssh2.crypto.cipher.CipherInputStream.read(CipherInputStream.java:108)
    at com.trilead.ssh2.transport.TransportConnection.receiveMessage(TransportConnection.java:232)
    at com.trilead.ssh2.transport.TransportManager.receiveLoop(TransportManager.java:681)
    at com.trilead.ssh2.transport.TransportManager$1.run(TransportManager.java:480)
    at java.lang.Thread.run(Unknown Source)
19144230 (2013-09-07 13:24:01,790) [QThreadPoolThread-2 (smartgit.aES)] WARN  smartgit.ssh.client.ui  - could not authenticate, trying again
java.io.IOException: pubkey authentication failed
    at com.syntevo.dvcs.transport.ssh.f.a(SourceFile:40)
    at com.syntevo.dvcs.transport.ssh.m.a(SourceFile:150)
    at com.syntevo.dvcs.transport.ssh.h.a(SourceFile:141)
    at smartgit.aES.a(SourceFile:61)
    at smartgit.UL.run(SourceFile:24)
    at smartgit.UQ.run(SourceFile:65)
19144231 (2013-09-07 13:24:01,791) [Thread-163] ERROR smartgit.ssh.trilead  - com.trilead.ssh2.transport.TransportManager: Receive thread: error in receiveLoop: socket closed
19144841 (2013-09-07 13:24:02,401) [main] INFO              q.dialog  - Showing dialog 75 (@1E95534) '@1D8EDCE - SSH Authentication' (owner: @520C83)
19144859 (2013-09-07 13:24:02,419) [main] INFO  q.swt.shellActivation  - shell deactivated Shell {Clone}@520C83
19144860 (2013-09-07 13:24:02,420) [main] INFO  q.swt.shellActivation  - shell activated Shell {SSH Authentication}@1E95534
19144860 (2013-09-07 13:24:02,420) [main] INFO  q.swt.shellActivation  - Activation change from Shell {Clone}@520C83 to Shell {SSH Authentication}@1E95534
19146675 (2013-09-07 13:24:04,235) [main] INFO  q.swt.shellActivation  - shell deactivated Shell {SSH Authentication}@1E95534
19146677 (2013-09-07 13:24:04,237) [main] INFO  q.swt.shellActivation  - Activation change from Shell {SSH Authentication}@1E95534 to null
19264293 (2013-09-07 13:26:01,853) [Thread-165] ERROR smartgit.ssh.trilead  - com.trilead.ssh2.transport.TransportManager: Receive thread: error in receiveLoop: Cannot read full block, EOF reached.
23254777 (2013-09-07 14:32:32,337) [main] INFO  q.swt.shellActivation  - shell activated Shell {SSH Authentication}@1E95534
23254777 (2013-09-07 14:32:32,337) [main] INFO  q.swt.shellActivation  - Activation change from null to Shell {SSH Authentication}@1E95534
23257318 (2013-09-07 14:32:34,878) [main] INFO  q.swt.shellActivation  - shell deactivated Shell {SSH Authentication}@1E95534
23257320 (2013-09-07 14:32:34,880) [main] INFO  q.swt.shellActivation  - Activation change from Shell {SSH Authentication}@1E95534 to null
23325752 (2013-09-07 14:33:43,312) [main] INFO  q.swt.shellActivation  - shell activated Shell {SSH Authentication}@1E95534
23325752 (2013-09-07 14:33:43,312) [main] INFO  q.swt.shellActivation  - Activation change from null to Shell {SSH Authentication}@1E95534
23326238 (2013-09-07 14:33:43,798) [main] INFO  q.swt.shellActivation  - shell deactivated Shell {SSH Authentication}@1E95534
23326239 (2013-09-07 14:33:43,799) [main] INFO  q.swt.shellActivation  - Activation change from Shell {SSH Authentication}@1E95534 to null
</code></pre>

<p>`</p>
","<p>Thank all! I have solved it myself. My mistake is did not use the absolute path in git link. Also, I didn't set git user's home directory correctly so cause the error permission denied too.</p>

<p>Then remove end line characters from each SSH key on authorized_keys. That'll did the trick!</p>
","1925","<git><openssl><private-key><smartgit>","2","0","2","2013-09-09 00:25:20","18672104","3","","1436469","","2013-09-07 07:39:18","2013-09-07 05:49:31",""
"34549899","SSL Connection, Windows Certificate Store and CAPI engine","<p>I am creating an <code>SSL</code> connection using OpenSSL API. As we know in a SSL handshake, series of Certificate Authentication occurs for Server or Client. Now for client certificate authentication, the client's certificate and associated private key are stored in <code>Windows Certificate Store</code>.</p>

<p>This certificate with <code>private key</code> is imported into the store after combining them into a <code>pfx</code> format and then that <code>pfx</code> file is imported to the windows Cert store. Now while importing this pfx file using <code>mmc</code> snap-in it asks whether we want to make the private key <code>exportable</code> or not. Now OpenSSL comes into picture for making SSL connection.</p>

<p>For that we have to create <code>SSL_CTX</code> object in which all the connection related properties are loaded. Now for loading private key from windows certificate store into <code>SSL_CTX</code> object, i have marked that private key <code>exportable</code> that i am exporting the key using <code>Crypto API</code>. But I think marking a private key exportable does not make any sense, it's a security breach.</p>

<p>Since private key will always be marked <code>Non-Exportable</code> so, is there any method or API of OpenSSL, etc that can directly read and load private key from windows cert store into SST_CTX object for making a SSL connection.</p>

<p>I know definitely there is some way for this to work but i am not getting it.
I have searched a lot for this but not got the required thing.</p>

<p><strong><em>Summarized Question</em></strong>: The Certificate Store holds many certificates and associated private keys. How are the certificates and private keys accessed when making an SSL connection ?</p>

<p><strong><em>EDIT</em></strong> : I have gone through an openssl engine API called </p>

<pre><code> `EVP_PKEY *ENGINE_load_private_key(ENGINE *e, const char *key_id,
      UI_METHOD *ui_method, void *callback_data);`
</code></pre>

<p>Now how can i get this <code>key_id</code> of the private key and also i think this api internally called crypto api <code>CryptExportKey</code> and this api fails if private key is marked <code>non-exportable</code>. </p>
","","1921","<ssl><openssl><private-key><cryptoapi><certificate-store>","3","","0","2018-02-22 16:43:24","","12","1","608639","","2016-01-03 14:13:36","2015-12-31 17:49:39",""
"42413592","java - need to import private key from jks(java keystore)","<p>I have a stored my certificate in Java KeyStore which is required for accessing Restful API. To access this API I need to create JWT (Json Web Token) which I am implementing in Java. For generating JWT I need to sign the payload with given private key.
So, what I am doing is, importing private key from .jks file into my code </p>

<pre><code>FileInputStream is = new FileInputStream(""src/main/resources/file.jks"");
            KeyStore keystore = KeyStore.getInstance(KeyStore.getDefaultType());
            keystore.load(is, ""password"".toCharArray());  
PrivateKey privateKey = (PrivateKey) keystore.getKey(""key"", """".toCharArray());
JWTClaimsSet claimsSetOne = new JWTClaimsSet.Builder()
                .subject(""alias"")
                .issueTime(new Date(123000L))
                .issuer(""https://issuer"")
                .audience(""https://audience"")
                .build();

JWSSigner signer = new RSASSASigner(privateKey);
SignedJWT signedJWT = new SignedJWT (new JWSHeader(JWSAlgorithm.RS256), claimsSetOne);
signedJWT.sign(signer);
String orderOne = signedJWT.serialize();
</code></pre>

<p>Now, with this piece of code, It returns private key as ""null"" value. which results into failure of my code.
So, what could be my code so that I can read private key to sign the payload to generate JWT.
Or any other alternative to achieve same.
Thanks in advance.<br>
Edit :
Then I tried this command,</p>

<pre><code>File file = new File(""src/main/resources/sho1.jks"");
InputStream   is = new FileInputStream(file);
KeyStore keystore = KeyStore.getInstance(KeyStore.getDefaultType());
String password = ""sho123"";
keystore.load(is, password.toCharArray());

KeyStore.PrivateKeyEntry keyEnt = 
   (KeyStore.PrivateKeyEntry) keystore.getEntry(""sho"",new KeyStore.PasswordProtection(password.toCharArray()));
PrivateKey privateKey = keyEnt.getPrivateKey();
</code></pre>

<p>It gives me error as Invalid_Signature.</p>
","<p>Nothing is wrong in the implementation of JAVA code. This code works fine. Error which I getting as INVALID_SIGNATURE is due to JKS. The certificate which I importing that is not the proper i.e. It does not have  correct certificate path. I tried importing correct way then it works.
So make sure in this type of scenario you are importing certificate with correct keypair to get correct fingerprint in the JKS.
Thanks all.  </p>
","1915","<java><jwt><private-key><jks>","1","1","1","2017-03-01 05:46:30","42524119","11","","6371459","","2017-02-24 09:26:21","2017-02-23 10:49:31",""
"34945941","APNs certificate missing private key when generating with custom keychain","<p>I was trying to generate a new APNs certificate for my app on our <strong>build server</strong> but when I got to the <em>""Export 2 items""</em> step for the Certificate and Private Key, I found that I didn’t have two items.  My certificate didn’t have any private key with it.</p>

<p>I can see in my keychain that the certificate belongs to the <strong>System keychain</strong> whilst the public and private key are in my <strong>CI-Jenkins keychain</strong>.</p>

<p>I repeated the process on my development machine and it worked fine there.</p>

<p>The only difference being that the build server is currently set to use our custom <strong>CI-Jenkins keychain</strong> as opposed to the default <strong>login keychain</strong>.</p>

<p>Anybody knows what is happening there and if it makes sense? Do I need to swap keychain before generating the certificate and then swap back on my build server?</p>
","<p>The solution is to just drag the certificate from the <code>System</code> keychain to the <code>login</code> keychain. Then it will automatically associate the correct private key with it.</p>
","1895","<ios><apple-push-notifications><keychain><private-key>","1","6","1","2017-03-20 17:42:22","","3","","1860122","","2016-01-22 14:57:46","2016-01-22 11:42:38",""
"24319498","RSA private key parameter not a valid private key","<p>My private key string sample (in file - private.key):<br>
""aced 0005 7372 0014 6a61 7661 2e73 6563
7572 6974 792e 4b65 7952 6570 bdf9 4fb3
889a a543 0200 044c 0009 616c 676f 7269
7468 6d74 0012 4c6a 6176 612f 6c61 6e67
2f53 7472 696e 673b 5b00 0765 6e63 6f64
6564 7400 025b 424c 0006 666f 726d 6174
7100 7e00 014c 0004 7479 7065 7400 1b4c
6a61 7661 2f73 6563 7572 6974 792f 4b65
7952 6570 2454 7970 653b 7870 7400 0352
5341 7572 0002 5b42 acf3 17f8 0608 54e0
0200 0078 7000 0001 5830 8201 5402 0100
300d 0609 2a86 4886 f70d 0101 0105 0004
8201 3e30 8201 3a02 0100 0241 008d 442f
2df6 7e5d 6e48 16a9 70a1 9006 c932 1c47
71de 6cb7 81eb 8483 e5e4 73ee b06f 5e73
ed1e 851d 54f1 2d86 6491 479a d314 8897
f7e6 85dc 65ca f1f9 318e cc41 4702 0301
0001 0240 2306 f713 d47c bcb9 ed92 00ed
7681 f9cc c56a 11a5 005b c09c ac43 2d59
416e 258e a6a3 c4bb cc6d bcf1 7b5b 24d6
ff95 a146 2040 4d27 a92d cb9e ccaa 3519
fc85 50d1 0221 00db b9b2 a4c4 3ef6 4780
303c 6798 819f 1a9a 04ca dced 0f9e 0cfd
b4a5 75f5 bdf0 f502 2100 a496 8e0e d531
5e0b b427 6966 2b55 546b 2a8a a5d0 dcf4
bbfd 7ce9 1c56 d79c 13cb 0220 2736 8cdb
3aea c1a9 2107 7ac0 4247 5fcd af8f 0b65
4229 775b 7a2b b31b ca2f 8bc1 0220 28e3
e6a3 34c0 3117 4348 cf5c bcc3 5457 d397
e29e 4366 e215 9624 ec0f 7f3d 9d85 0221
00b4 fdab 7ff3 9804 f6f5 00bf 32a1 3c5c
7517 b0ab 90e1 f20a c9df 8d30 f778 c729
e074 0006 504b 4353 2338 7e72 0019 6a61
7661 2e73 6563 7572 6974 792e 4b65 7952
6570 2454 7970 6500 0000 0000 0000 0012
0000 7872 000e 6a61 7661 2e6c 616e 672e
456e 756d 0000 0000 0000 0000 1200 0078
7074 0007 5052 4956 4154 45""</p>

<p>sample code in php:</p>

<pre><code>echo $crypttext=""PzTy-l1AWHHJ3CrynbmAfv-YWi1hpPSfv-gZbU3HeguShy_NbjytMVDKbSfkfw7afWrhH4_Weq5Lwu_jsJKM4w"";
$fp=fopen(""private.key"",""r"");
$priv_key=fread($fp,8192);
fclose($fp);

openssl_private_decrypt(base64_decode($crypttext ), $newsource, $priv_key ) ;
echo ""String decrypt : $newsource"";
</code></pre>

<p>I get the error as ""openssl_private_decrypt(): key parameter is not a valid private key"".</p>

<p>source for generating and encryption</p>

<pre><code>package ia;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.util.Date;
import javax.crypto.Cipher;
import org.apache.commons.codec.binary.Base64;


public class EncryptionUntil {
/**
 * String to hold name of the encryption algorithm.
 */
public static final String ALGORITHM = ""RSA"";

/**
 * String to hold the name of the private key file.
 */
public static final String PRIVATE_KEY_FILE = ""C:/keys/private/private.key"";

/**
 * String to hold name of the public key file.
 */
public static final String PUBLIC_KEY_FILE = ""C:/keys/public/public.key"";

/**
 * Generate key which contains a pair of private and public key using 1024
 * bytes. Store the set of keys in Prvate.key and Public.key files.
 * 
 * @throws NoSuchAlgorithmException
 * @throws IOException
 * @throws FileNotFoundException
 */
public static void generateKey() {
    try {
        final KeyPairGenerator keyGen = KeyPairGenerator
                .getInstance(ALGORITHM);
        keyGen.initialize(512);
        final KeyPair key = keyGen.generateKeyPair();

        File privateKeyFile = new File(PRIVATE_KEY_FILE);
        File publicKeyFile = new File(PUBLIC_KEY_FILE);

        // Create files to store public and private key
        if (privateKeyFile.getParentFile() != null) {
            privateKeyFile.getParentFile().mkdirs();
        }
        privateKeyFile.createNewFile();

        if (publicKeyFile.getParentFile() != null) {
            publicKeyFile.getParentFile().mkdirs();
        }
        publicKeyFile.createNewFile();

        // Saving the Public key in a file
        ObjectOutputStream publicKeyOS = new ObjectOutputStream(
                new FileOutputStream(publicKeyFile));
        publicKeyOS.writeObject(key.getPublic());
        publicKeyOS.close();

        // Saving the Private key in a file
        ObjectOutputStream privateKeyOS = new ObjectOutputStream(
                new FileOutputStream(privateKeyFile));
        privateKeyOS.writeObject(key.getPrivate());
        privateKeyOS.close();
    } catch (Exception e) {
        e.printStackTrace();
    }

}

/**
 * The method checks if the pair of public and private key has been
 * generated.
 * 
 * @return flag indicating if the pair of keys were generated.
 */
public static boolean areKeysPresent() {

    File privateKey = new File(PRIVATE_KEY_FILE);
    File publicKey = new File(PUBLIC_KEY_FILE);

    if (privateKey.exists() &amp;&amp; publicKey.exists()) {
        return true;
    }
    return false;
}

/**
 * Encrypt the plain text using public key.
 * 
 * @param text
 *            : original plain text
 * @param key
 *            :The public key
 * @return Encrypted text
 * @throws java.lang.Exception
 */
public static byte[] encrypt(String text, PublicKey key) {
    byte[] cipherText = null;
    try {
        // get an RSA cipher object and print the provider
        final Cipher cipher = Cipher.getInstance(ALGORITHM);
        // encrypt the plain text using the public key
        cipher.init(Cipher.ENCRYPT_MODE, key);
        cipherText = cipher.doFinal(text.getBytes());

    } catch (Exception e) {
        e.printStackTrace();
    }
    return cipherText;
}

/**
 * Decrypt text using private key.
 * 
 * @param text
 *            :encrypted text
 * @param key
 *            :The private key
 * @return plain text
 * @throws java.lang.Exception
 */
public static String decrypt(byte[] text, PrivateKey key) {
    byte[] dectyptedText = null;
    try {
        // get an RSA cipher object and print the provider
        final Cipher cipher = Cipher.getInstance(ALGORITHM);

        // decrypt the text using the private key
        cipher.init(Cipher.DECRYPT_MODE, key);
        dectyptedText = cipher.doFinal(text);

    } catch (Exception ex) {
        ex.printStackTrace();
    }

    return new String(dectyptedText);
}

    public static void encDecrypt (String originalText) throws FileNotFoundException, IOException, ClassNotFoundException{
        ObjectInputStream inputStream = null;

        // Encrypt the string using the public key
        inputStream = new ObjectInputStream(new FileInputStream(
                PUBLIC_KEY_FILE));
        final PublicKey publicKey = (PublicKey) inputStream.readObject();
        final byte[] cipherText = encrypt(originalText, publicKey);
        final String cipherText64 = Base64.encodeBase64URLSafeString(cipherText);


        // Decrypt the cipher text using the private key.
        inputStream = new ObjectInputStream(new FileInputStream(
                PRIVATE_KEY_FILE));
        final PrivateKey privateKey = (PrivateKey) inputStream.readObject();
        final String plainText = decrypt(Base64.decodeBase64(cipherText64), privateKey);

        // Printing the Original, Encrypted and Decrypted Text
        System.out.println(""Original Text: "" + originalText);
        //System.out.println(""Encrypted Text: "" + new String(cipherText));
        System.out.println(""Base 64 Text: "" +cipherText64);
        System.out.println(""Decrypted Text: "" + plainText);


    }
/**
 * Test the EncryptionUntil
 */
public static void main(String[] args) {

    try {

        // Check if the pair of keys are present else generate those.
        if (!areKeysPresent()) {
            // Method generates a pair of keys using the RSA algorithm and
            // stores it
            // in their respective files
            generateKey();
        }

        final String originalText = ""004477"";
        Date dd = new Date();
        System.out.println(dd);
        final String currentTime = String.valueOf(dd.getTime());

        encDecrypt(originalText);
        encDecrypt(currentTime);

    } catch (Exception e) {
        e.printStackTrace();
    }
}
}
</code></pre>
","<p>The data you're trying to decode is not in an expected format for an RSA key. Doing a hex dump of it reveals:</p>

<pre><code>0000000: aced 0005 7372 0014 6a61 7661 2e73 6563  ....sr..java.sec
0000010: 7572 6974 792e 4b65 7952 6570 bdf9 4fb3  urity.KeyRep..O.
0000020: 889a a543 0200 044c 0009 616c 676f 7269  ...C...L..algori
0000030: 7468 6d74 0012 4c6a 6176 612f 6c61 6e67  thmt..Ljava/lang
0000040: 2f53 7472 696e 673b 5b00 0765 6e63 6f64  /String;[..encod
0000050: 6564 7400 025b 424c 0006 666f 726d 6174  edt..[BL..format
0000060: 7100 7e00 014c 0004 7479 7065 7400 1b4c  q.~..L..typet..L
0000070: 6a61 7661 2f73 6563 7572 6974 792f 4b65  java/security/Ke
0000080: 7952 6570 2454 7970 653b 7870 7400 0352  yRep$Type;xpt..R
0000090: 5341 7572 0002 5b42 acf3 17f8 0608 54e0  SAur..[B......T.
00000a0: 0200 0078 7000 0001 5830 8201 5402 0100  ...xp...X0..T...
00000b0: 300d 0609 2a86 4886 f70d 0101 0105 0004  0...*.H.........
00000c0: 8201 3e30 8201 3a02 0100 0241 008d 442f  ..&gt;0..:....A..D/
00000d0: 2df6 7e5d 6e48 16a9 70a1 9006 c932 1c47  -.~]nH..p....2.G
00000e0: 71de 6cb7 81eb 8483 e5e4 73ee b06f 5e73  q.l.......s..o^s
00000f0: ed1e 851d 54f1 2d86 6491 479a d314 8897  ....T.-.d.G.....
0000100: f7e6 85dc 65ca f1f9 318e cc41 4702 0301  ....e...1..AG...
0000110: 0001 0240 2306 f713 d47c bcb9 ed92 00ed  ...@#....|......
0000120: 7681 f9cc c56a 11a5 005b c09c ac43 2d59  v....j...[...C-Y
0000130: 416e 258e a6a3 c4bb cc6d bcf1 7b5b 24d6  An%......m..{[$.
</code></pre>

<p>This looks like some sort of Java serialization format. You will need to convert it to a format which OpenSSL supports (e.g, DER), then load it using <a href=""http://php.net/openssl_pkey_get_private"" rel=""nofollow""><code>openssl_pkey_get_private()</code></a>.</p>
","1892","<java><php><encryption><rsa><private-key>","-1","2","2","2014-06-20 23:07:32","","2","3","569976","","2014-06-20 15:14:39","2014-06-20 03:33:26",""
"24319498","RSA private key parameter not a valid private key","<p>My private key string sample (in file - private.key):<br>
""aced 0005 7372 0014 6a61 7661 2e73 6563
7572 6974 792e 4b65 7952 6570 bdf9 4fb3
889a a543 0200 044c 0009 616c 676f 7269
7468 6d74 0012 4c6a 6176 612f 6c61 6e67
2f53 7472 696e 673b 5b00 0765 6e63 6f64
6564 7400 025b 424c 0006 666f 726d 6174
7100 7e00 014c 0004 7479 7065 7400 1b4c
6a61 7661 2f73 6563 7572 6974 792f 4b65
7952 6570 2454 7970 653b 7870 7400 0352
5341 7572 0002 5b42 acf3 17f8 0608 54e0
0200 0078 7000 0001 5830 8201 5402 0100
300d 0609 2a86 4886 f70d 0101 0105 0004
8201 3e30 8201 3a02 0100 0241 008d 442f
2df6 7e5d 6e48 16a9 70a1 9006 c932 1c47
71de 6cb7 81eb 8483 e5e4 73ee b06f 5e73
ed1e 851d 54f1 2d86 6491 479a d314 8897
f7e6 85dc 65ca f1f9 318e cc41 4702 0301
0001 0240 2306 f713 d47c bcb9 ed92 00ed
7681 f9cc c56a 11a5 005b c09c ac43 2d59
416e 258e a6a3 c4bb cc6d bcf1 7b5b 24d6
ff95 a146 2040 4d27 a92d cb9e ccaa 3519
fc85 50d1 0221 00db b9b2 a4c4 3ef6 4780
303c 6798 819f 1a9a 04ca dced 0f9e 0cfd
b4a5 75f5 bdf0 f502 2100 a496 8e0e d531
5e0b b427 6966 2b55 546b 2a8a a5d0 dcf4
bbfd 7ce9 1c56 d79c 13cb 0220 2736 8cdb
3aea c1a9 2107 7ac0 4247 5fcd af8f 0b65
4229 775b 7a2b b31b ca2f 8bc1 0220 28e3
e6a3 34c0 3117 4348 cf5c bcc3 5457 d397
e29e 4366 e215 9624 ec0f 7f3d 9d85 0221
00b4 fdab 7ff3 9804 f6f5 00bf 32a1 3c5c
7517 b0ab 90e1 f20a c9df 8d30 f778 c729
e074 0006 504b 4353 2338 7e72 0019 6a61
7661 2e73 6563 7572 6974 792e 4b65 7952
6570 2454 7970 6500 0000 0000 0000 0012
0000 7872 000e 6a61 7661 2e6c 616e 672e
456e 756d 0000 0000 0000 0000 1200 0078
7074 0007 5052 4956 4154 45""</p>

<p>sample code in php:</p>

<pre><code>echo $crypttext=""PzTy-l1AWHHJ3CrynbmAfv-YWi1hpPSfv-gZbU3HeguShy_NbjytMVDKbSfkfw7afWrhH4_Weq5Lwu_jsJKM4w"";
$fp=fopen(""private.key"",""r"");
$priv_key=fread($fp,8192);
fclose($fp);

openssl_private_decrypt(base64_decode($crypttext ), $newsource, $priv_key ) ;
echo ""String decrypt : $newsource"";
</code></pre>

<p>I get the error as ""openssl_private_decrypt(): key parameter is not a valid private key"".</p>

<p>source for generating and encryption</p>

<pre><code>package ia;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.util.Date;
import javax.crypto.Cipher;
import org.apache.commons.codec.binary.Base64;


public class EncryptionUntil {
/**
 * String to hold name of the encryption algorithm.
 */
public static final String ALGORITHM = ""RSA"";

/**
 * String to hold the name of the private key file.
 */
public static final String PRIVATE_KEY_FILE = ""C:/keys/private/private.key"";

/**
 * String to hold name of the public key file.
 */
public static final String PUBLIC_KEY_FILE = ""C:/keys/public/public.key"";

/**
 * Generate key which contains a pair of private and public key using 1024
 * bytes. Store the set of keys in Prvate.key and Public.key files.
 * 
 * @throws NoSuchAlgorithmException
 * @throws IOException
 * @throws FileNotFoundException
 */
public static void generateKey() {
    try {
        final KeyPairGenerator keyGen = KeyPairGenerator
                .getInstance(ALGORITHM);
        keyGen.initialize(512);
        final KeyPair key = keyGen.generateKeyPair();

        File privateKeyFile = new File(PRIVATE_KEY_FILE);
        File publicKeyFile = new File(PUBLIC_KEY_FILE);

        // Create files to store public and private key
        if (privateKeyFile.getParentFile() != null) {
            privateKeyFile.getParentFile().mkdirs();
        }
        privateKeyFile.createNewFile();

        if (publicKeyFile.getParentFile() != null) {
            publicKeyFile.getParentFile().mkdirs();
        }
        publicKeyFile.createNewFile();

        // Saving the Public key in a file
        ObjectOutputStream publicKeyOS = new ObjectOutputStream(
                new FileOutputStream(publicKeyFile));
        publicKeyOS.writeObject(key.getPublic());
        publicKeyOS.close();

        // Saving the Private key in a file
        ObjectOutputStream privateKeyOS = new ObjectOutputStream(
                new FileOutputStream(privateKeyFile));
        privateKeyOS.writeObject(key.getPrivate());
        privateKeyOS.close();
    } catch (Exception e) {
        e.printStackTrace();
    }

}

/**
 * The method checks if the pair of public and private key has been
 * generated.
 * 
 * @return flag indicating if the pair of keys were generated.
 */
public static boolean areKeysPresent() {

    File privateKey = new File(PRIVATE_KEY_FILE);
    File publicKey = new File(PUBLIC_KEY_FILE);

    if (privateKey.exists() &amp;&amp; publicKey.exists()) {
        return true;
    }
    return false;
}

/**
 * Encrypt the plain text using public key.
 * 
 * @param text
 *            : original plain text
 * @param key
 *            :The public key
 * @return Encrypted text
 * @throws java.lang.Exception
 */
public static byte[] encrypt(String text, PublicKey key) {
    byte[] cipherText = null;
    try {
        // get an RSA cipher object and print the provider
        final Cipher cipher = Cipher.getInstance(ALGORITHM);
        // encrypt the plain text using the public key
        cipher.init(Cipher.ENCRYPT_MODE, key);
        cipherText = cipher.doFinal(text.getBytes());

    } catch (Exception e) {
        e.printStackTrace();
    }
    return cipherText;
}

/**
 * Decrypt text using private key.
 * 
 * @param text
 *            :encrypted text
 * @param key
 *            :The private key
 * @return plain text
 * @throws java.lang.Exception
 */
public static String decrypt(byte[] text, PrivateKey key) {
    byte[] dectyptedText = null;
    try {
        // get an RSA cipher object and print the provider
        final Cipher cipher = Cipher.getInstance(ALGORITHM);

        // decrypt the text using the private key
        cipher.init(Cipher.DECRYPT_MODE, key);
        dectyptedText = cipher.doFinal(text);

    } catch (Exception ex) {
        ex.printStackTrace();
    }

    return new String(dectyptedText);
}

    public static void encDecrypt (String originalText) throws FileNotFoundException, IOException, ClassNotFoundException{
        ObjectInputStream inputStream = null;

        // Encrypt the string using the public key
        inputStream = new ObjectInputStream(new FileInputStream(
                PUBLIC_KEY_FILE));
        final PublicKey publicKey = (PublicKey) inputStream.readObject();
        final byte[] cipherText = encrypt(originalText, publicKey);
        final String cipherText64 = Base64.encodeBase64URLSafeString(cipherText);


        // Decrypt the cipher text using the private key.
        inputStream = new ObjectInputStream(new FileInputStream(
                PRIVATE_KEY_FILE));
        final PrivateKey privateKey = (PrivateKey) inputStream.readObject();
        final String plainText = decrypt(Base64.decodeBase64(cipherText64), privateKey);

        // Printing the Original, Encrypted and Decrypted Text
        System.out.println(""Original Text: "" + originalText);
        //System.out.println(""Encrypted Text: "" + new String(cipherText));
        System.out.println(""Base 64 Text: "" +cipherText64);
        System.out.println(""Decrypted Text: "" + plainText);


    }
/**
 * Test the EncryptionUntil
 */
public static void main(String[] args) {

    try {

        // Check if the pair of keys are present else generate those.
        if (!areKeysPresent()) {
            // Method generates a pair of keys using the RSA algorithm and
            // stores it
            // in their respective files
            generateKey();
        }

        final String originalText = ""004477"";
        Date dd = new Date();
        System.out.println(dd);
        final String currentTime = String.valueOf(dd.getTime());

        encDecrypt(originalText);
        encDecrypt(currentTime);

    } catch (Exception e) {
        e.printStackTrace();
    }
}
}
</code></pre>
","<p>You are serializing Java objects, then reading them as byte arrays in PHP and trying to use them directly as keys. This just won't work.</p>

<p>First, you need to output the key pair in an interchangeable format. Next, you can't just read those bytes into memory and treat them as a key pair. You need to decode the format in PHP to reconstitute the key pair. You can use openssl to do this.</p>

<p>In Java, you can write out the key pair in <strong>DER format</strong>. Modify your code like this, for example:</p>

<pre><code>// Saving the Public key in a file
FileOutputStream publicKeyOS = new FileOutputStream(publicKeyFile);
publicKeyOS.write(key.getPublic().getEncoded());
publicKeyOS.close();

// Saving the Private key in a file
FileOutputStream privateKeyOS = new FileOutputStream(privateKeyFile);
privateKeyOS.write(key.getPrivate().getEncoded());
privateKeyOS.close();
</code></pre>

<p>You can verify these files using openssl at the shell prompt like this:</p>

<pre><code>$ openssl rsa -inform DER -in private.key
$ openssl rsa -inform DER -pubin -in public.key
</code></pre>

<p>In PHP, you can read these binary files and have openssl decode the DER... well, it appears that you cannot use DER directly in the PHP implementation of openssl, so you'll have to first <strong>convert the DER to PEM</strong>.</p>

<p>Finally, you can use openssl to <strong>decode the PEM</strong> into the public and private keys.</p>

<p>For example, in PHP:</p>

<pre><code>// (You could also convert the DER to PEM elsewhere, before PHP reads the files.)
function der2pem($der_data, $kind)
{
  $pem = chunk_split(base64_encode($der_data), 64, ""\n"");
  $pem = ""-----BEGIN "".$kind.""-----\n"".$pem.""-----END "".$kind.""-----\n"";
  return $pem;
}

function to_pem($filename, $kind)
{
  // TODO: handle errors
  $f = fopen($filename, ""r"");
  $der = fread($f, filesize($filename));
  $pem = der2pem($der, $kind);
  fclose($f);
  return $pem;
}

function load_private_key($filename)
{
  $pem = to_pem($filename, ""PRIVATE KEY"");
  return openssl_pkey_get_private($pem);
}

function load_public_key($filename)
{
  $pem = to_pem($filename, ""PUBLIC KEY"");
  return openssl_pkey_get_public($pem);
}

$private_key = load_private_key(""private.key"");

$public_key = load_public_key(""public.key"");

if (openssl_public_encrypt(""Hello"", $ciphertext, $public_key))
{
  if (openssl_private_decrypt($ciphertext, $recovered_plaintext, $private_key))
  {
    echo $recovered_plaintext;
  }
}
</code></pre>
","1892","<java><php><encryption><rsa><private-key>","-1","1","2","2014-06-20 23:07:32","","2","3","569976","","2014-06-20 15:14:39","2014-06-20 03:33:26",""
"10907502","PHP OpenSSL Error","<p>I am getting the error <code>Warning: openssl_get_publickey() [function.openssl-get-publickey]: Don't know how to get public key from this private key on line 5</code> When trying to get a public key from a private key. Here is my PHP code:</p>

<pre><code>&lt;?php
$privatekeyorig = openssl_pkey_new();
openssl_pkey_export($privatekeyorig,$privatekey);
echo '&lt;b&gt;Private Key:&lt;/b&gt; ' . $privatekey . '&lt;br&gt;';
$publickey = openssl_get_publickey($privatekeyorig);
echo '&lt;b&gt;Public Key:&lt;/b&gt; ' . $publickey . '&lt;br&gt;';
?&gt;
</code></pre>

<p>According to the PHP manual I am doing this correctly. Anyone spot an error? Help would be greatly appreciated!</p>
","<p>Check out the last comment on <a href=""http://php.net/manual/en/function.openssl-pkey-new.php"" rel=""nofollow"">http://php.net/manual/en/function.openssl-pkey-new.php</a></p>

<p>[UPDATE]
From the comment right before the above :) and it works on my system to give you a textual public key:</p>

<pre><code>// Create the keypair
$res=openssl_pkey_new();

// Get private key
openssl_pkey_export($res, $privkey);

// Get public key
$pubkey=openssl_pkey_get_details($res);
$pubkey=$pubkey[""key""];
</code></pre>
","1885","<php><openssl><private-key><public-key>","2","1","2","2012-06-07 00:00:51","10907741","0","","","","","2012-06-06 02:37:05",""
"10907502","PHP OpenSSL Error","<p>I am getting the error <code>Warning: openssl_get_publickey() [function.openssl-get-publickey]: Don't know how to get public key from this private key on line 5</code> When trying to get a public key from a private key. Here is my PHP code:</p>

<pre><code>&lt;?php
$privatekeyorig = openssl_pkey_new();
openssl_pkey_export($privatekeyorig,$privatekey);
echo '&lt;b&gt;Private Key:&lt;/b&gt; ' . $privatekey . '&lt;br&gt;';
$publickey = openssl_get_publickey($privatekeyorig);
echo '&lt;b&gt;Public Key:&lt;/b&gt; ' . $publickey . '&lt;br&gt;';
?&gt;
</code></pre>

<p>According to the PHP manual I am doing this correctly. Anyone spot an error? Help would be greatly appreciated!</p>
","<p>My recommendation would be to use <a href=""http://phpseclib.sourceforge.net/"" rel=""nofollow"">phpseclib, a pure PHP RSA implementation</a>. eg.</p>

<pre><code>&lt;?php
include('Crypt/RSA.php');

$rsa = new Crypt_RSA();
$rsa-&gt;loadKey('...');

$privatekey = $rsa-&gt;getPrivateKey();
$publickey = $rsa-&gt;getPublicKey();
?&gt;
</code></pre>
","1885","<php><openssl><private-key><public-key>","2","2","2","2012-06-07 00:00:51","10907741","0","","","","","2012-06-06 02:37:05",""
"11858420","Manage Keys with Puppet for puppet-vcsrepo","<p>I'm setting up some server configuration in my company and we have some internal repositories that run over ssh through bzr that I need to get. I wanted to use puppet-vcsrepo to pull these in and I saw that it has a way we can use a keyfile to get what we want. What is the best way to go about this?</p>

<p>I'm probably going to make a user account for each of us, but do I have to put my private key into puppet as a file and then transfer it over? How do I manage keys inside of puppet so I can checkout repositories ssh without using username and password?</p>

<p>Here is a link to the information: <a href=""https://github.com/puppetlabs/puppetlabs-vcsrepo/blob/master/README.BZR.markdown"">https://github.com/puppetlabs/puppetlabs-vcsrepo/blob/master/README.BZR.markdown</a></p>

<p>It says to manage keys with puppet, but I couldn't exactly find what I need to know in order to manage the keys correctly.</p>
","<p>Don't know much about BZR... will answer as if it was a git/github based question</p>

<ul>
<li>If you are github based, use <a href=""https://help.github.com/articles/managing-deploy-keys#deploy-keys"" rel=""nofollow"">deploy keys</a> (readonly access, easily revokable) and not a developer key. </li>
<li>You can manage the key by copying them in ~/.ssh and configure ssh to use it ?</li>
</ul>

<p><pre><code>
file { '/user/home/.ssh/id_rsa-github-mycompany' :
 ... # access right ....
}</p>

<p>vcsrepo { ""/path/to/repo"":
  ...
  require => File[ '/user/home/.ssh']
}</p>

<p></pre></code></p>

<p>you may need to tweek also the .ssh/config to use this identify file and modify the host name of the git repository</p>

<p><pre><code>
Host github-mycompany-project
HostName github.com
  User git
  PreferredAuthentications publickey
  IdentityFile ~/.ssh/id_rsa-github-mycompany
  IdentitiesOnly yes
</pre></code></p>

<p>Another option use an exec and the <a href=""https://github.com/martinemde/git-ssh-wrapper"" rel=""nofollow"">git_ssh_wrapper</a> gem instead of vcsrepo ?</p>
","1875","<git><bazaar><private-key><puppet>","8","1","1","2013-12-26 07:19:25","20780827","2","1","","","","2012-08-08 05:53:34",""
"23208813","How do you generate, sign and read digital signatures in java?","<p>I am becoming intermediate java programmer. I have tried hard to find out how to sign and read digital signatures in java for a net program i have been working on. I have been able to generate private and public keys with the tutorial at <a href=""http://docs.oracle.com/javase/tutorial/security/apisign/index.html"" rel=""nofollow"">http://docs.oracle.com/javase/tutorial/security/apisign/index.html</a> but have not been able to do anything with them. Although I know how to generate keys i didn't put it in because i wasn't sure if i had done them correctly.
Here is a simplified version of my code:
Main class:</p>

<pre><code>    import java.io.File;
    import java.io.FileInputStream;
    import java.io.IOException;
    import java.security.KeyFactory;
    import java.security.KeyPair;
    import java.security.NoSuchAlgorithmException;
    import java.security.PrivateKey;
    import java.security.PublicKey;
    import java.security.spec.InvalidKeySpecException;
    import java.security.spec.PKCS8EncodedKeySpec;
    import java.security.spec.X509EncodedKeySpec;
    import java.util.Scanner;

public class Main {
public static void main(String[] args) throws IOException {
    Main main = new Main();
    Scanner s = new Scanner(System.in);
    while (true) {
        //This is where i added a command detector so that the program can be in one class
        System.out.println(""Choose a command from the following:\nGenerate keys\nSign message\nRead message"");
        String command = s.nextLine();
        if (command.equalsIgnoreCase(""Generate key"")
                || command.equalsIgnoreCase(""Generate"")) {

            /* The code for generating the keys is here */
            File f = new File(""C:\\Users\\spencer\\Documents\\Stack ex\\src\\app"",""public.key"");
            File fi = new File(""C:\\Users\\spencer\\Documents\\Stack ex\\src\\app"",""private.key"");
            if(!f.isFile()||!fi.isFile()) {
                Make make =new Make();
                Make.main(args);
            }
            else{
                try {
                    String path = ""C:\\Users\\spencer\\Documents\\ds test 3\\src\\app"";

                    KeyPair loadedKeyPair = main.LoadKeyPair(path, ""DSA"");
                    System.out.println(""Key pair already exists!"");
                    System.out.println(""Loaded Key Pair:"");
                    main.dumpKeyPair(loadedKeyPair);
                } catch (Exception e) {
                    e.printStackTrace();
                    return;
                }
            }

        }
        if (command.equalsIgnoreCase(""Sign message"")
                || command.equalsIgnoreCase(""Sign"")) {
            long signature = 0;
            System.out.println(""What is your private key"");
            String pkey = s.nextLine();
            long prkey = Long.parseLong(pkey);
            System.out.println(""What is you message"");
            String message = s.nextLine();
            /* The code for signing the message goes here */
            System.out.println(""Signature:""+signature);
        } else if (command.equalsIgnoreCase(""Read message"")
                || command.equalsIgnoreCase(""Read"")) {
            String message = null;
            System.out.println(""What is the signature"");
            String sign = s.nextLine();
            long signature = Long.parseLong(sign);
            /* The code for reading the message goes here */
            System.out.println(message);
        }
    }
}
private void dumpKeyPair(KeyPair keyPair) {
    PublicKey pub = keyPair.getPublic();
    System.out.println(""Public Key: "" + getHexString(pub.getEncoded()));

    PrivateKey priv = keyPair.getPrivate();
    System.out.println(""Private Key: "" + getHexString(priv.getEncoded()));
}
private String getHexString(byte[] b) {
    String result = """";
    for (int i = 0; i &lt; b.length; i++) {
        result += Integer.toString((b[i] &amp; 0xff) + 0x100, 16).substring(1);
    }
    return result;
}
public KeyPair LoadKeyPair(String path, String algorithm)
        throws IOException, NoSuchAlgorithmException,
        InvalidKeySpecException {
    // Read Public Key.
    File filePublicKey = new File(path + ""/public.key"");
    FileInputStream fis = new FileInputStream(path + ""/public.key"");
    byte[] encodedPublicKey = new byte[(int) filePublicKey.length()];
    fis.read(encodedPublicKey);
    fis.close();

    // Read Private Key.
    File filePrivateKey = new File(path + ""/private.key"");
    fis = new FileInputStream(path + ""/private.key"");
    byte[] encodedPrivateKey = new byte[(int) filePrivateKey.length()];
    fis.read(encodedPrivateKey);
    fis.close();

    // Generate KeyPair.
    KeyFactory keyFactory = KeyFactory.getInstance(algorithm);
    X509EncodedKeySpec publicKeySpec = new X509EncodedKeySpec(
            encodedPublicKey);
    PublicKey publicKey = keyFactory.generatePublic(publicKeySpec);

    PKCS8EncodedKeySpec privateKeySpec = new PKCS8EncodedKeySpec(
            encodedPrivateKey);
    PrivateKey privateKey = keyFactory.generatePrivate(privateKeySpec);

    return new KeyPair(publicKey, privateKey);
}
    }
</code></pre>

<p>Make class:</p>

<pre><code>    import java.io.*;
    import java.security.*;
    import java.security.spec.*;

  public class Make {

public static void main(String args[]) {
    Make adam = new Make();
    try {
        String path = ""C:\\Users\\spencer\\Documents\\Stack ex\\src\\app"";

        KeyPairGenerator keyGen = KeyPairGenerator.getInstance(""DSA"");

        keyGen.initialize(512);
        KeyPair generatedKeyPair = keyGen.genKeyPair();

        System.out.println(""Generated Key Pair"");
        adam.dumpKeyPair(generatedKeyPair);
        adam.SaveKeyPair(path, generatedKeyPair);


    } catch (Exception e) {
        e.printStackTrace();
        return;
    }
}

private void dumpKeyPair(KeyPair keyPair) {
    PublicKey pub = keyPair.getPublic();
    System.out.println(""Public Key: "" + getHexString(pub.getEncoded()));

    PrivateKey priv = keyPair.getPrivate();
    System.out.println(""Private Key: "" + getHexString(priv.getEncoded()));
}

private String getHexString(byte[] b) {
    String result = """";
    for (int i = 0; i &lt; b.length; i++) {
        result += Integer.toString((b[i] &amp; 0xff) + 0x100, 16).substring(1);
    }
    return result;
}

public void SaveKeyPair(String path, KeyPair keyPair) throws IOException {
    PrivateKey privateKey = keyPair.getPrivate();
    PublicKey publicKey = keyPair.getPublic();

    // Store Public Key.
    X509EncodedKeySpec x509EncodedKeySpec = new X509EncodedKeySpec(
            publicKey.getEncoded());
    FileOutputStream fos = new FileOutputStream(path + ""/public.key"");
    fos.write(x509EncodedKeySpec.getEncoded());
    fos.close();

    // Store Private Key.
    PKCS8EncodedKeySpec pkcs8EncodedKeySpec = new PKCS8EncodedKeySpec(
            privateKey.getEncoded());
    fos = new FileOutputStream(path + ""/private.key"");
    fos.write(pkcs8EncodedKeySpec.getEncoded());
    fos.close();
}
    }
</code></pre>

<p>I need a little help with signing and reading the signature.</p>
","","1864","<java><digital-signature><public-key-encryption><private-key><digital-certificate>","1","","0","2014-10-11 23:39:24","","5","1","3558475","","2014-10-11 23:39:24","2014-04-22 01:27:03",""
"32571366","addIdentity in JSch is private key of calling program's Server","<p>""Server 1"" is reading from and writing to ""Server 2"" using SSH.</p>

<ul>
<li>""Server 1"" is having ""Server 1's"" private key and public key of ""Server 2"".</li>
<li>""Server 2"" is having ""Server 2's"" private key and public key of ""Server 1"".</li>
</ul>

<p>In JSch, when I use a Java program to communicate from ""Server 1"" to ""Server 2"", the program is using <code>addIdentity</code> method. This method is using ""Server 1's"" private key and JSch will not send this to anybody (""Server 2""), am I right?</p>

<p>Am confused with mentioning private key in this in <code>addIdentity</code> method. If possible please give me some JSch related doc which enlighten me more.</p>
","<p>Your understanding is correct.</p>

<p>The <code>.addIdentity</code> is used to specify what private key should be used to locally encrypt the data before sending them to the remote server (and to decrypt the incoming data). The private key itself is not sent anywhere. Only a public key is.</p>

<p>Note that the <code>.addIdentity</code> loads a key pair (both the public and the private key). Even if you use an overload that takes <code>prvkey</code> path only, the JSch assumes that the public key file has the same name, just <code>.pub</code> extension; or that the ""private key"" file actually contains both public and private key.</p>

<hr>

<p>For details, read about <a href=""https://en.wikipedia.org/wiki/Public-key_cryptography"" rel=""nofollow"">Public-key/asymmetric cryptography</a>.</p>

<hr>

<p><em>Though note that the key is a private key of the account you are connecting with to the remote server. It's not (should not be) a private key of the local machine (even if the machine happens to be a [SSH] server).</em></p>
","1852","<java><ssh><public-key-encryption><jsch><private-key>","1","4","1","2015-09-29 06:56:25","32579140","0","1","850848","","2015-09-15 06:33:05","2015-09-14 18:18:56",""
"44205888","Unable to retrieve Private Key from KeyStore","<p>I am trying to make an Chat app which uses RSA algorithm for encryption. After But when I try to decrypt messages I am getting this error below.</p>

<p>Here is how I am creating keys;</p>

<pre><code>  if (!keyStore.containsAlias(alias)) {
                Calendar start = Calendar.getInstance();
                Calendar end = Calendar.getInstance();
                end.add(Calendar.YEAR, 25);
                KeyPairGeneratorSpec spec = new KeyPairGeneratorSpec.Builder(getApplicationContext())
                        .setAlias(alias)
                        .setSubject(new X500Principal(""CN=Sample Name, O=Android Authority""))
                        .setSerialNumber(BigInteger.ONE)
                        .setStartDate(start.getTime())
                        .setEndDate(end.getTime())
                        .build();
                KeyPairGenerator generator = KeyPairGenerator.getInstance(""RSA"", ""AndroidKeyStore"");
                generator.initialize(spec);

            }
</code></pre>

<p>And here is how I tryed to decrypt messages;</p>

<p>Definition the KeyStore;</p>

<pre><code> static KeyStore keyStore;
</code></pre>

<p>Loading keyStore in onCreate method:</p>

<pre><code>  try{
        keyStore = KeyStore.getInstance(""AndroidKeyStore"");
        keyStore.load(null);
    } 
    catch (CertificateException | NoSuchAlgorithmException | KeyStoreException | IOException e) {
        e.printStackTrace();
    } 
</code></pre>

<p>Decrypt Function:</p>

<pre><code>      public String decryptString(String alias, String decrypted) {
    try {

        KeyStore.Entry entry;
        //ERROR HAPPENS HERE.
        entry = keyStore.getEntry(alias, null);

        KeyStore.PrivateKeyEntry privateKeyEntry = (KeyStore.PrivateKeyEntry) entry;

        Cipher output = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
        output.init(Cipher.DECRYPT_MODE, privateKeyEntry.getPrivateKey());


        CipherInputStream cipherInputStream = new CipherInputStream(
                new ByteArrayInputStream(Base64.decode(decrypted, Base64.DEFAULT)), output);
        ArrayList&lt;Byte&gt; values = new ArrayList&lt;&gt;();
        int nextByte;
        while ((nextByte = cipherInputStream.read()) != -1) {
            values.add((byte) nextByte);
        }

        byte[] bytes = new byte[values.size()];
        for (int i = 0; i &lt; bytes.length; i++) {
            bytes[i] = values.get(i);
        }

        String finalText = new String(bytes, 0, bytes.length, ""UTF-8"");
        return finalText;

    } catch (IOException | KeyStoreException | NoSuchPaddingException | UnrecoverableEntryException | InvalidKeyException | NoSuchAlgorithmException e) {
        e.printStackTrace();
    }
    return ""Error"";
}
</code></pre>

<p>I am getting this error below;</p>

<pre><code>E/AndroidRuntime: FATAL EXCEPTION: main
                                                               Process: com.furkan.profil, PID: 10591
                                                               java.lang.NullPointerException: Attempt to invoke virtual method 'java.security.KeyStore$Entry java.security.KeyStore.getEntry(java.lang.String, java.security.KeyStore$ProtectionParameter)' on a null object reference
                                                                   at com.furkan.profil.RSAHelper.decryptString(RSAHelper.java:180)
                                                                   at com.furkan.profil.Chat.ChatActivity$4.onChildAdded(ChatActivity.java:251)
                                                                   at com.google.android.gms.internal.zzblz.zza(Unknown Source)
                                                                   at com.google.android.gms.internal.zzbnz.zzYj(Unknown Source)
                                                                   at com.google.android.gms.internal.zzboc$1.run(Unknown Source)
                                                                   at android.os.Handler.handleCallback(Handler.java:739)
                                                                   at android.os.Handler.dispatchMessage(Handler.java:95)
                                                                   at android.os.Looper.loop(Looper.java:148)
                                                                   at android.app.ActivityThread.main(ActivityThread.java:5417)
                                                                   at java.lang.reflect.Method.invoke(Native Method)
                                                                   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
                                                                   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
</code></pre>
","<p>I've just noticed that I am accessing this method from another activity and this I am not triggering onCreate() method when I try to access method. I added; </p>

<pre><code>try{
            keyStore = KeyStore.getInstance(""AndroidKeyStore"");
            keyStore.load(null);
        } catch (CertificateException | NoSuchAlgorithmException | KeyStoreException | IOException e) {
            throw new IllegalStateException(""KeyStore could not be initialized"", e);
        }
</code></pre>

<p>lines to decryptString() method. After that my problems are solved.</p>
","1846","<android><encryption><rsa><private-key><android-keystore>","2","0","1","2017-05-28 00:14:44","44222681","10","","5673373","","2017-05-26 18:45:23","2017-05-26 16:07:26",""
"22943634","CryptographicException ""Object was not found"" opening key store","<p>I'm stymied by an error I'm getting trying to open a p12 keystore. This works fine in development but when I compile and move to a production server, an ""Object was not found"" error is thrown.</p>

<p>About all I know about this is that it's not because the keystore file doesn't exist. When I remove the store from the server, the error message changes to ""The system cannot find the file specified.""</p>

<p>Any ideas what the problem could be or how to debug? Unfortunately I cannot step through because this is compiled code.</p>

<p>Here's the trace:</p>

<pre><code>System.Security.Cryptography.CryptographicException: Object was not found.

   at System.Security.Cryptography.CryptographicException.ThrowCryptographicException(Int32 hr)
   at System.Security.Cryptography.X509Certificates.X509Utils._LoadCertFromFile(String fileName, IntPtr password, UInt32 dwFlags, Boolean persistKeySet, SafeCertContextHandle&amp; pCertCtx)
   at System.Security.Cryptography.X509Certificates.X509Certificate.LoadCertificateFromFile(String fileName, Object password, X509KeyStorageFlags keyStorageFlags)
   at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(String fileName, String password)
   at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(String fileName, String password)
</code></pre>
","<p>Solved the problem soon afterward. Here is the resolution:</p>

<ul>
<li>On IIS, open application pool advanced settings.</li>
<li>Set Load User Profile to TRUE</li>
<li>Set Identity to LocalService</li>
<li>Recycle application pool</li>
</ul>
","1844","<asp.net><vb.net><private-key>","1","9","2","2018-04-09 10:34:27","22943771","0","","","","","2014-04-08 17:01:33",""
"22943634","CryptographicException ""Object was not found"" opening key store","<p>I'm stymied by an error I'm getting trying to open a p12 keystore. This works fine in development but when I compile and move to a production server, an ""Object was not found"" error is thrown.</p>

<p>About all I know about this is that it's not because the keystore file doesn't exist. When I remove the store from the server, the error message changes to ""The system cannot find the file specified.""</p>

<p>Any ideas what the problem could be or how to debug? Unfortunately I cannot step through because this is compiled code.</p>

<p>Here's the trace:</p>

<pre><code>System.Security.Cryptography.CryptographicException: Object was not found.

   at System.Security.Cryptography.CryptographicException.ThrowCryptographicException(Int32 hr)
   at System.Security.Cryptography.X509Certificates.X509Utils._LoadCertFromFile(String fileName, IntPtr password, UInt32 dwFlags, Boolean persistKeySet, SafeCertContextHandle&amp; pCertCtx)
   at System.Security.Cryptography.X509Certificates.X509Certificate.LoadCertificateFromFile(String fileName, Object password, X509KeyStorageFlags keyStorageFlags)
   at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(String fileName, String password)
   at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(String fileName, String password)
</code></pre>
","<p>Setting the IIS app pool to use the NetworkService identity rather than the ApplicationPoolIdentity worked for me.</p>
","1844","<asp.net><vb.net><private-key>","1","1","2","2018-04-09 10:34:27","22943771","0","","","","","2014-04-08 17:01:33",""
"38178683","In Android, how to ensure that Private Key is stored inside secure hardware","<p>KeyInfo's isInsideSecureHardware-method's return value seems to depend on device model, os version, and some other random factors.</p>

<p>For example when using Sony xperia z5 compact with older os version isInsideSecureHardware() could return true for some time and then suddenly start returning false for the same Private Key.
With the latest os version (32.2.A.0.224) it seems to return only false.
Huawei Nexus 6P returns always true.</p>

<p>Is there a way to make sure that the key is stored in secure hardware?</p>

<p>Here is my current code:</p>

<pre><code>KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance(KeyProperties.KEY_ALGORITHM_RSA, ""AndroidKeyStore"");
keyPairGenerator.initialize(new KeyGenParameterSpec.Builder(KEY_NAME, KeyProperties.PURPOSE_DECRYPT | KeyProperties.PURPOSE_ENCRYPT)
                                    .setUserAuthenticationRequired(true)
                                    .setBlockModes(KeyProperties.BLOCK_MODE_ECB)
                                    .setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_RSA_PKCS1)
                                    .build());
KeyPair keyPair = keyPairGenerator.generateKeyPair();
// Check that private key is inside secure hardware
KeyFactory factory = KeyFactory.getInstance(key.getAlgorithm(), ""AndroidKeyStore"");
KeyInfo keyInfo = factory.getKeySpec(key, KeyInfo.class);
boolean secure = keyInfo.isInsideSecureHardware(); //  this usually returns false
</code></pre>

<p>Thanks!</p>

<p>Edit:
In sony support forum there is a topic about the same problem:
<a href=""https://talk.sonymobile.com/t5/Android-development/hardware-backed-keystore/td-p/1154124"" rel=""nofollow"">https://talk.sonymobile.com/t5/Android-development/hardware-backed-keystore/td-p/1154124</a></p>

<p>It was mentioned that following warning is printed to logs:</p>

<blockquote>
  <p>W keystore: Primary keymaster device failed to generate key, falling back to SW.</p>
</blockquote>
","<p>According to the Android API, the only way to verify it is to first create the key then look at the information to ensure it is hardware-backed. </p>

<p>Looking at the specs for the phone, it was originally released on Lollipop.  That was before the official Marshmallow Fingerprint API/hardware specs and manufacturers were doing their own thing.  This article mentions the device you are using specifically (<a href=""http://blog.elcomsoft.com/2016/06/fingerprint-unlock-security-ios-vs-google-android-part-ii/"" rel=""nofollow"">http://blog.elcomsoft.com/2016/06/fingerprint-unlock-security-ios-vs-google-android-part-ii/</a>).  I am wondering if whether the true values you were getting back were incorrect and then due to your O/S upgrade it fixed the logic (or broke it?). The O/S upgrade version you mention contains ""1 April 2016 Google security patches""</p>

<p>I have a few questions:</p>

<ol>
<li><p>What does isUserAuthenticationRequirementEnforcedBySecureHardware() return on your device now?  Is the value consistent?  If it's false that could tell you that the fingerprint reader is not considered secure (or there is an O/S defect)</p></li>
<li><p>What does older OS version mean, exactly? Lollipop? Have you tried resetting to factory defaults? </p></li>
</ol>
","1842","<android><security><private-key><android-keystore>","4","3","1","2016-09-29 10:31:32","","0","","5649725","","2016-09-29 10:31:32","2016-07-04 07:04:04",""
"34961673","generate CSR & RSA Private key (for SSL Certificate)","<p>I purchased SSL certificate for my domain, but I didn't receive PRIVATE key, and provider told me to generate RSA private key from my domain hosting... But in my dashboard, there is no option for this..
Is there available any php commands for this? </p>

<p>p.s. (<code>shell_exec</code> or similar not allowed on hosting)</p>
","<p>I have found the way! :</p>

<h1>=======STEP 1 ====</h1>

<p>&lt;&lt;&lt; <strong>Generating Private Key (rsa/key/pem) &amp; CSR [Certificate Signing Request]</strong> >>></p>

<p>Although there is a <strong><a href=""https://stackoverflow.com/a/34962604/2377343"">PHP code</a></strong>,it can only generate PRIVATE KEY, not CSR.
You should better to use <strong>openSSL</strong> commands to get PRIVATE+ CSR keys
<br/>
<br/>For <strong>openssl</strong> commands (typical <a href=""http://www.thawte.nl/en/support/manuals/openssl/openssl+commands/"" rel=""nofollow noreferrer""><strong>examples</strong></a>) use your Hosting SSH terminal (if it supports) or your Localhost (if you use <strong>Apache/Wampserver/</strong> or etc..):</p>

<p>-in CMD, type: <code>cd c:\wamp\bin\apache\apache2.4.9\bin</code>, then execute such  command:</p>

<pre><code>openssl req -new -newkey rsa:2048 -nodes -keyout server.key -out server.csr -config c:\wamp\bin\apache\apache2.4.9\conf\openssl.cnf
</code></pre>

<p>then it will ask you some questions... you should input <strong>domain</strong> name when it asks for ""<strong>common name</strong>"" (i.e.  <strong>example.com</strong>).... After you are done, in the same location <code>c:\wamp\bin\apache\apache2.4.9\</code> you will see  Private key(<strong>server.key</strong>) and CSR key (<strong>server.csr</strong>). Go on...</p>

<p><br/><br/></p>

<h1>========STEP 2 - Add CERTIFICATE (.crt) ========</h1>

<p>Now, enter your <strong>DOMAIN Register</strong> dashboard (where you have SSL issued), and re-issue that. when it asks for CSR and PRIVATE KEY, enter the contents of the files we generated (open them in text editor)... Then you can go on (EMAIL verification is quickest way) and then you should get confirmation mail from your SSL provider (or Domain dashboard), where you can download the CERTIFICATE (xxxxxxxx.crt and xxxxxx.ca-bundle files)....  Then go to <strong>HOSTING</strong> dashboard,and in SSL section, use the codes CSR/PRIVATE/CRT keys appropriately !!!!!!</p>

<p>p.s. If you will get REDIRECT LOOP error, then you might have to re-install site/Wordpress.</p>
","1838","<ssl-certificate><rsa><private-key>","0","1","1","2017-05-29 08:32:18","","1","","1816580","","2016-01-23 19:37:34","2016-01-23 09:13:31",""
"39119848","Chain is null when retrieving private key","<p>I'm encrypting data in my app using a RSA keypair that I am storing in the Android keystore.</p>

<p>I've been seeing <code>NullPointerException</code>s in the Play Store, but I have not been able to reproduce them:</p>

<pre><code>java.lang.NullPointerException: chain == null
    at java.security.KeyStore$PrivateKeyEntry.&lt;init&gt;(KeyStore.java:1205)
    at java.security.KeyStoreSpi.engineGetEntry(KeyStoreSpi.java:374)
    at java.security.KeyStore.getEntry(KeyStore.java:644)
    at MyClass.getKeyStoreEntry(MyClass.java:111)
</code></pre>

<p>The source code to create the key pair</p>

<pre><code>Calendar start = Calendar.getInstance();
start.setTimeInMillis(0);
Calendar end = Calendar.getInstance();
end.set(Calendar.YEAR, 3000);

KeyPairGeneratorSpec.Builder keySpecBuilder = new KeyPairGeneratorSpec.Builder(context)
    .setAlias(keyName)
    .setSubject(new X500Principal(""CN="" + keyName))
    .setSerialNumber(BigInteger.TEN)
    .setStartDate(start.getTime())
    .setEndDate(end.getTime())
    .setKeySize(RSA_KEY_SIZE);

KeyPairGeneratorSpec spec = keySpecBuilder.build();
KeyPairGenerator gen = KeyPairGenerator.getInstance(""RSA"", ""AndroidKeyStore"");
gen.initialize(spec);
gen.generateKeyPair();
</code></pre>

<p>And then to retrieve the key:</p>

<pre><code>private KeyStore.PrivateKeyEntry getKeyStoreEntry() {
    KeyStore keyStore = KeyStore.getInstance(ANDROID_KEY_STORE);
    keyStore.load(null);

    if (!keyStore.containsAlias(keyName)) {
        throw new KeyNotFoundException();
    }
    return (KeyStore.PrivateKeyEntry) keyStore.getEntry(keyName, null);
}
</code></pre>

<p>This is only happening when I make use of the <code>KeyPairGeneratorSpec</code> on API level 19-22. The 23+ implementation works fine.</p>

<p>I <a href=""https://stackoverflow.com/questions/23977407/android-4-3-keystore-chain-null-while-trying-to-retrieve-keys"">do not have another key with the same name</a> and I also have not <a href=""https://stackoverflow.com/questions/37094464/android-keystore-issue-keystore-getentryalias-null-returns-null-sometimes"">deleted the key</a>.</p>
","<p>I believe you are simply facing Keystore bugs. See this article for example: <a href=""http://doridori.github.io/android-security-the-forgetful-keystore/#sthash.19wVBg3j.ZJ8A2Czb.dpbs"" rel=""nofollow"">Android Security: The Forgetful Keystore</a>. There are also numberous bug reports in Android tracker related to keystore, like <a href=""https://code.google.com/p/android/issues/detail?id=61989"" rel=""nofollow"">AndroidKeyStore deleted after changing screen lock type</a>. </p>
","1838","<android><private-key><android-keystore><android-security>","33","0","1","2018-05-23 15:05:40","","3","6","-1","","2017-05-23 10:27:33","2016-08-24 09:47:56",""
"25360072","How to view a .key file on windows","<p>I have a .key file that is supposedly a 2048 bit private key used to sign an android app.</p>

<p>What windows tool can I use to view the content of this key file ?</p>
","<p>The .key is a zip archive: if you unzip you may be able to see a thumbnail for each slide, so just rename the .key file to .zip and unzip it to see the slide thumbnails or you can convert it to pdf to view on windows using the following:
<a href=""http://www.zamzar.com/"" rel=""nofollow"">www.zamzar.com/</a></p>
","1833","<private-key>","0","2","1","2014-08-18 09:52:48","","0","","","","","2014-08-18 09:28:22",""
"45083891","Private key not accessible / PEM / AWS","<p>I'm trying to run a program on AWS/EC2 and am stuck into the launching of the instance. </p>

<ol>
<li>.pem key file is created and linked to the instance. The key is saved in my documents.</li>
<li>Command ""chmod 400 /Users/name_of_user/Documents/AI/AWS/cle/name_of_key.pem"" reports no error</li>
<li><p>Command ""ssh -i ""name_of_key.pem"" ubuntu@ec2-XX-YY-ZZZ-76.us-west-2.compute.amazonaws.com"" reports:</p>

<pre><code>Warning: Identity file name_of_key.pem not accessible: No such file or directory.
</code></pre></li>
<li><p>It then says: </p></li>
</ol>

<blockquote>
  <p>The authenticity of host
  'ec2-XX-YY-ZZZ-76.us-west2.compute.amazonaws.com (XX.YY.ZZZ.76)' can't
  be established.ECDSA key fingerprint is
  SHA256:o6Vv2Doje9CyLv+YxbrlJaDcEGydZTYOmP0l3FBa5ps. Are you sure you
  want to continue connecting (yes/no)? yes</p>
</blockquote>

<ol start=""5"">
<li>I say 'yes' anyway. And then again the warning </li>
</ol>

<blockquote>
  <p>Warning: Identity file name_of_key.pem not accessible: No such file or
  directory. Permission denied (publickey).</p>
</blockquote>

<p>Do you know why the private key is not accessible? Should I save it in a special place?</p>

<p>Thank you very much 😱😊😁 </p>
","<p>Looks like ssh cannot find your key. You should use the key's absolute path:</p>

<pre><code>ssh -i ""/Users/name_of_user/Documents/AI/AWS/cle/name_of_key.pem"" ubuntu@ec2-XX-YY-ZZZ-76.us-west-2.compute.amazonaws.com
</code></pre>

<p>or <code>cd</code> into <code>/Users/name_of_user/Documents/AI/AWS/cle</code> and run</p>

<pre><code>ssh -i ""name_of_key.pem"" ubuntu@ec2-XX-YY-ZZZ-76.us-west-2.compute.amazonaws.com
</code></pre>
","1831","<amazon-web-services><private-key><pem>","1","1","1","2017-07-14 07:15:11","45084546","4","","4972721","","2017-07-14 07:15:11","2017-07-13 14:38:43",""
"35593015","Google Cloud SSh from one instance to another","<p>I have been trying to ssh from one google cloud instance to another.   I am able to SSH from my local machine which the host OS is windows and the VM OS which is Ubuntu.  </p>

<p>I am running the commands straight from the website. </p>

<p>1.</p>

<pre><code>me@local:~$ eval `ssh-agent`
</code></pre>

<p>2.</p>

<pre><code>me@local:~$ ssh-add ~/.ssh/google_compute_engine
</code></pre>

<p>3.</p>

<pre><code>gcloud compute ssh --ssh-flag=""-A"" INSTANCE
</code></pre>

<p>The error I am getting is </p>

<p>ERROR: (gcloud.compute) Invalid choice: 'ssh-flag=-A'.</p>

<p>Everything I see on internet is how to SSH into the VM but not how to SSH from one VM to another.   </p>
","<p>I can still do this, with <code>gcloud</code> version 97.0.0:</p>

<pre><code>&gt; gcloud compute ssh --ssh-flag=""-A"" --zone=us-central1-f user@ssh-test
Warning: Permanently added '104.197.77.90' (ECDSA) to the list of known hosts.

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
user@ssh-test:~$
</code></pre>

<p>Are you sure the command in #3 is copied correctly?</p>
","1829","<ssh><google-compute-engine><google-cloud-platform><private-key><gcloud>","2","4","2","2019-05-10 16:42:07","35611035","2","","","","","2016-02-24 04:02:24",""
"35593015","Google Cloud SSh from one instance to another","<p>I have been trying to ssh from one google cloud instance to another.   I am able to SSH from my local machine which the host OS is windows and the VM OS which is Ubuntu.  </p>

<p>I am running the commands straight from the website. </p>

<p>1.</p>

<pre><code>me@local:~$ eval `ssh-agent`
</code></pre>

<p>2.</p>

<pre><code>me@local:~$ ssh-add ~/.ssh/google_compute_engine
</code></pre>

<p>3.</p>

<pre><code>gcloud compute ssh --ssh-flag=""-A"" INSTANCE
</code></pre>

<p>The error I am getting is </p>

<p>ERROR: (gcloud.compute) Invalid choice: 'ssh-flag=-A'.</p>

<p>Everything I see on internet is how to SSH into the VM but not how to SSH from one VM to another.   </p>
","<p>From your <strong>first instance</strong> do:</p>

<pre><code>gcloud auth login
</code></pre>

<p>and you will be given a link, paste that into your browser, then login with the account of your <strong>second instance</strong>.<br>
You will then get a <strong>key</strong> paste that in your <strong>first instance</strong> terminal.</p>
","1829","<ssh><google-compute-engine><google-cloud-platform><private-key><gcloud>","2","1","2","2019-05-10 16:42:07","35611035","2","","","","","2016-02-24 04:02:24",""
"40449500","Digital Signature using epass2003","<p>I have a tried to extract the private key from epass2003 and make the signature on pdf but when I am extracting private key it is throwing null pointer exception I have attached the code that I have tried below can anyone update the solution for this.</p>

<pre><code>public class DigitalSignature {
public static void main(String args[]) throws IOException, GeneralSecurityException,DocumentException, CertificateVerificationException{
// Create instance of SunPKCS11 provider

String userFile = ""C:/results/test.pdf"";
String userFile_signed = ""C:/results/test_signed.pdf"";
sun.security.pkcs11.SunPKCS11 providerPKCS11 = new sun.security.pkcs11.SunPKCS11(""Config.cfg"");
java.security.Security.addProvider(providerPKCS11);

// Get provider KeyStore and login with PIN
String pin = ""12345678"";
java.security.KeyStore keyStore = java.security.KeyStore.getInstance(""PKCS11"", providerPKCS11);
keyStore.load(null, pin.toCharArray());

// Enumerate items (certificates and private keys) in the KeyStore
java.util.Enumeration&lt;String&gt; aliases = keyStore.aliases();
String alias = null;
while (aliases.hasMoreElements()) {
    alias = aliases.nextElement();
    System.out.println(alias);
    }

   PrivateKey pk = (PrivateKey)keyStore.getKey(alias,pin.toCharArray());
    Certificate[] chain = keyStore.getCertificateChain(alias);

    OcspClient ocspClient = new OcspClientBouncyCastle();
    TSAClient tsaClient = null;  
    //System.out.println(chain); 

   for (int i = 0; i &lt; chain.length; i++) {
        X509Certificate cert = (X509Certificate)chain[i];
        String tsaUrl = CertificateUtil.getTSAURL(cert);
        if (tsaUrl != null) {
            tsaClient = new TSAClientBouncyCastle(tsaUrl);
            break;
        }
    }
    List&lt;CrlClient&gt; crlList = new ArrayList&lt;CrlClient&gt;();
    crlList.add(new CrlClientOnline(chain));
    Test t = new Test();
    t.sign(userFile, userFile_signed, chain, pk, DigestAlgorithms.SHA256, providerPKCS11.getName(),
                 CryptoStandard.CMS, ""Test"", ""Signature"", crlList, ocspClient, tsaClient, 0);
}

public void sign(String src, String dest,
        Certificate[] chain, PrivateKey pk,
        String digestAlgorithm, String provider, CryptoStandard subfilter,
        String reason, String location,
        Collection&lt;CrlClient&gt; crlList,
        OcspClient ocspClient,
        TSAClient tsaClient,
        int estimatedSize)
                throws GeneralSecurityException, IOException, DocumentException {
    // Creating the reader and the stamper
    PdfReader reader = new PdfReader(src);
    FileOutputStream os = new FileOutputStream(dest);
    PdfStamper stamper = PdfStamper.createSignature(reader, os, '\0');

    // Creating the appearance
    PdfSignatureAppearance appearance = stamper.getSignatureAppearance();
    appearance.setReason(reason);
    appearance.setLocation(location);
    appearance.setVisibleSignature(new Rectangle(100, 100, 200, 200), 1, ""sig"");

    // Creating the signature
    ExternalSignature pks = new PrivateKeySignature(pk, digestAlgorithm, provider);
    ExternalDigest digest = new BouncyCastleDigest();
    MakeSignature.signDetached(appearance, digest, pks, chain, crlList, ocspClient, tsaClient, estimatedSize, subfilter);
}
} 
</code></pre>
","","1809","<java><digital-signature><private-key><e-token>","0","","0","2016-11-06 13:27:06","","2","","3625036","","2016-11-06 13:27:06","2016-11-06 12:46:21",""
"3389077","Storage of private and public key in MySQL-DB","<p>Probably somebody asked that already, but I couldn't find any usefull information and I've never done it before.</p>

<p>So here is the problem.</p>

<p>If I'll get a set of key pairs (DSA public and private keys) with different time validity and unique ID, what is the best way to store them in MySQL-DB using Java?</p>

<p>Is it a good idea at all to store them in DB?</p>

<p>Thank you in advance.</p>

<p>Mur</p>

<p>Ps.
another problem, i cann't really imagine, how do the both keys look like? just byte arrays?</p>
","<p>Your best bet is to use blobs when storing them. </p>

<p>The decision of whether or not it's a good idea to store the keys in the database depends on the specifics of your application. I can imagine a secure database dedicated to storing this type of information might work for some situations.</p>
","1806","<java><mysql><public-key><private-key><dsa>","3","0","1","2011-02-08 22:39:06","4939346","0","","220819","","2010-08-02 15:12:13","2010-08-02 15:11:14",""
"13640650","Calculating VS_KEY container name","<p>How does one calculate VS_KEY container name? They are generally something like this: VS_KEY_71E582524B5DDE29.</p>

<p>I'm assuming it's based on computer name but what if we have a cloud service running that changes the computer name randomly every time the instance restarts?</p>

<p>We need to have the container name when the instance goes up so we know what container to store our private keys into so build tools and all work as they should. We need to automatically set the container name.</p>

<p>So basically we need to figure out a way to generate correct container name every time the computer reboots. Any tips or help?</p>
","<p>We stepped upon this question while trying to automatically register the key on an integration server. Having to run Visual Studio or MSBuild to extract the VS_KEY was unacceptable. Then by investigating the logs of MSBuild with the maximal verbosity, I came upon the following.</p>

<p>This key is generated via Microsoft.Build.Tasks.v4.0.dll (present in GAC). There's a class called ""ResolveKeySource"" within this DLL. By looking at the code with ILSpy or Reflector, you will see an Execute method calling ResolveAssemblyKey. This method is the heart of the VS_KEY_xxxxxx mystery. </p>

<p>The VS_KEY_xxxxx value is generated by hashing the content of the key with Environment.UserDomainName and Environment.UserName.</p>

<p><strong>First solution</strong>: you create an ResolveKeySource instance and call the appropriate method. As you don't provide a password and other information, it will raise an exception whose message contains the mighty VS_KEY thing.</p>

<pre><code>var key = new ResolveKeySource();
key.KeyFile = path_to_key_file;
try {
   key.Execute();
} catch (Exception e) {
  var match = Regex.Match(e.Message, ""VS_KEY_[A-F0-9]+"");
   if (match.Success) {
       return match.Value;
   }
}
</code></pre>

<p><strong>Second solution</strong>: grab the code that is generating this hashcode and use it to directly get the value without exceptions. This is more or less an extract from the DLL.</p>

<pre><code>    public static string GetLocalUserKeyContainerByGeneration(string keyFile) {

        string localName = Environment.UserDomainName + ""\\"" + Environment.UserName;

        FileStream keyFileStream = null;

        try {
            keyFileStream = File.OpenRead(keyFile);

            int num = (int)keyFileStream.Length;
            byte[] array = new byte[num];

            keyFileStream.Read(array, 0, num);

            ulong hash1 = HashFromBlob(array);
            byte[] bytes = Encoding.Unicode.GetBytes(localName.ToLower(CultureInfo.InvariantCulture));

            return ""VS_KEY_"" + (hash1 ^ HashFromBlob(bytes)).ToString(""X016"", CultureInfo.InvariantCulture);
        }
        finally {
            if (keyFileStream != null) {
                keyFileStream.Close();
            }
        }
    }

    private static ulong HashFromBlob(byte[] data) {

        uint num = 17339221u;
        uint num2 = 19619429u;
        uint num3 = 10803503u;

        for (int i = 0; i &lt; data.Length; i++) {
            byte b = data[i];
            uint num4 = (uint)b ^ num3;
            num3 *= 10803503u;
            num += (num4 ^ num2) * 15816943u + 17368321u;
            num2 ^= ((num4 + num) * 14984549u ^ 11746499u);
        }

        ulong num5 = (ulong)num;
        num5 &lt;&lt;= 32;

        return num5 | (ulong)num2;
    }
</code></pre>
","1803","<c#><visual-studio-2010><msbuild><private-key>","2","7","2","2014-08-27 17:06:39","","0","4","","","","2012-11-30 07:18:07",""
"13640650","Calculating VS_KEY container name","<p>How does one calculate VS_KEY container name? They are generally something like this: VS_KEY_71E582524B5DDE29.</p>

<p>I'm assuming it's based on computer name but what if we have a cloud service running that changes the computer name randomly every time the instance restarts?</p>

<p>We need to have the container name when the instance goes up so we know what container to store our private keys into so build tools and all work as they should. We need to automatically set the container name.</p>

<p>So basically we need to figure out a way to generate correct container name every time the computer reboots. Any tips or help?</p>
","<p>This answer goes along with @kdrapel's, but I couldn't put it in a comment. I had to hack it for a bit to figure out how to actually use it in an inline task, so I figured I'd share.</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;
&lt;Project xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"" DefaultTargets=""Test"" ToolsVersion=""4.0"" &gt;

  &lt;Target Name=""Test""&gt;
    &lt;CalcKey InputKey=""c:\path\to\your\key.pfx""&gt;
      &lt;Output PropertyName=""VSKEY"" TaskParameter=""VSKEY""/&gt;
    &lt;/CalcKey&gt;
    &lt;Message Text=""VSKey = $(VSKEY)""/&gt;
  &lt;/Target&gt;

  &lt;UsingTask
      TaskName=""CalcKey""
      TaskFactory=""CodeTaskFactory""
      AssemblyFile=""$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll"" &gt;
    &lt;ParameterGroup&gt;
      &lt;InputKey ParameterType=""System.String"" Required=""true""/&gt;
      &lt;VSKEY ParameterType=""System.String"" Output=""true""/&gt;
    &lt;/ParameterGroup&gt;
    &lt;Task&gt;
      &lt;Reference Include=""$(MSBuildBinPath)\Microsoft.Build.Framework.dll""/&gt;
      &lt;Reference Include=""$(MSBuildBinPath)\Microsoft.Build.Utilities.v12.0.dll""/&gt;
      &lt;Reference Include=""$(MSBuildBinPath)\Microsoft.Build.Tasks.v12.0.dll""/&gt;
      &lt;Using Namespace=""System.Text.RegularExpressions""/&gt;
      &lt;Using Namespace=""Microsoft.Build.Tasks""/&gt;
      &lt;Code Type=""Fragment"" Language=""cs""&gt;
        &lt;![CDATA[
            var key = new ResolveKeySource();
            key.KeyFile = InputKey;
            try
            {
                key.Execute();
            }
            catch (Exception e)
            {
                var match = Regex.Match(e.Message, ""VS_KEY_[A-F0-9]+"");
                if (match.Success)
                {
                    this.VSKEY = match.Value;
                }
            }
]]&gt;
      &lt;/Code&gt;
    &lt;/Task&gt;
  &lt;/UsingTask&gt;

&lt;/Project&gt;
</code></pre>
","1803","<c#><visual-studio-2010><msbuild><private-key>","2","1","2","2014-08-27 17:06:39","","0","4","","","","2012-11-30 07:18:07",""
"10305616","Any concern to share private key for distribution certificate among different group under a team account in itune provisioning portal","<p>We are a large university and have a single team account in apple itunes provisioning portal. We have serval different groups developing iOS apps, which will be published under the team account (university name). It seems apple only allows to create one distribution certificate. To publish apps, each group will need the private key to sign the app. If we choose to share the private key among all groups, is there any concern?</p>

<p>Someone also suggested revoking the current certificate. I understand it will not affect the current apps in store. But others will have to revoke the certificate again when they want to publish an update, will they?</p>

<p>Otherwise, is there any other solution to this problem if not sharing the private key?</p>
","<p>Application distribution is the team agent's task so she is the only person supposed to be in the possession of the distribution certificate's private key. The provisioning portal doesn't have any method of sharing the private key, and I don't think it would ever have such kind of functionality.</p>

<p>The expected way(expected by Apple) is that all apps developed by different groups in an organization are sent to the team agent, who then signs and uploads them to the store.</p>

<p>The normal way(what I have seen in 4 organizations I have worked with) is that the agent shares the private key with leads of the different groups, working on an app.</p>

<p>Revoking the distribution certificate every time, although may not hurt the apps already on the store but definitely would cause unnecessary headaches.</p>
","1802","<iphone><ios><certificate><private-key>","5","5","1","2012-05-02 16:27:04","10308664","0","2","107899","","2012-05-02 16:27:04","2012-04-24 20:36:10",""
"26508854","Sign NSData with RSA private key","<p>I am facing an issue which from my side lacks a lot of description in Apples documentation.</p>

<p>I need to sign NSData with RSA private key which is provided from backoffice. Private key is received in form of string.</p>

<p>How to achieve this? I do not want to create my own key pairs, I just want to use that single PRIVATE key to sign NSData. </p>

<p>I found several solutions using OPENSSL, but none of them works and I am not able to find any suitable solution for my problem with native CommonCrypto library.</p>

<p>In fact, this is a piece of Android code I need to replicate:</p>

<pre><code>public static PrivateKey getPrivateKey() throws Exception {
String key = ContentHolder.getInstance(context).getClientPrivateKey();
PKCS8EncodedKeySpec spec = new PKCS8EncodedKeySpec(android.util.Base64.decode(key, android.util.Base64.NO_WRAP));
KeyFactory kf = KeyFactory.getInstance(""RSA"");
return kf.generatePrivate(spec);
</code></pre>

<p><em>- this one returns Private key which is generated from string stored in app's database</em></p>

<pre><code>public String sign(byte[] array) throws SignatureException {
        try {
            Signature sign = Signature.getInstance(""SHA1withRSA"");
            sign.initSign(privateKey);
            sign.update(array);
            return android.util.Base64.encodeToString(sign.sign(), android.util.Base64.NO_WRAP);
        } catch (Exception ex) {
            throw new SignatureException(ex);
        }
    }
</code></pre>

<p><em>- this returns signed byte array in form of base64 string</em></p>

<p>How to achieve this in iOS? I spent many hours searching web and trying several approaches, none of them was successful.</p>

<p>I would be very thankful for any code snippets, since hints like ""CommonCrypto should do this"" do not work for me.</p>

<p>Thank you very much</p>
","<p>The main problem is that Apple officially doesn't support signing using a string-key (<a href=""https://devforums.apple.com/message/641836#641836"" rel=""nofollow noreferrer"">https://devforums.apple.com/message/641836#641836</a>). They insist on using .p12 and importing it using SecPKCS12Import.</p>

<p><strong>Check this answer</strong>: <a href=""https://stackoverflow.com/a/27945240/4324866"">https://stackoverflow.com/a/27945240/4324866</a></p>
","1797","<ios><objective-c><openssl><private-key><commoncrypto>","1","0","1","2016-10-24 16:00:45","","2","2","","","","2014-10-22 13:40:30",""
"16724681","Mercurial: How to clone using SSH and .ppk file?","<pre><code>hg clone ssh://denis@medsecop.com//var/www/vhosts/medsecop.com/stage/symphony
</code></pre>

<p>returns </p>

<pre><code>remote: Permission denied (publickey).
abort: no suitable response from remote hg!
</code></pre>

<p>I have the <code>.ppk</code> file but I don't know how to add options to the <code>ssh</code> command above to use (it says ""hg clone doesn't take more arguments"")</p>

<pre><code> -i /path/to/keys.ppk
</code></pre>

<p>I connect to SSH with this:</p>

<pre><code>sudo ssh -v denis@medsecop.com -i /home/denis/Desktop/MedSec/my-openssh-key
</code></pre>

<p>Any ideas?</p>
","<p>If you tag question with putty tag, I suppose, you use Windows at your side (and some Win-specific details I'll mention later)?</p>

<blockquote>
  <p>I don't know how to add options to the ssh command above to use</p>
</blockquote>

<p>Well, for any ssh-powered repositories you <strong>must</strong> to define used ssh-client in (global, user- or repository-specific) config file. For key-based authorization you can define private-key file as parameter of used command or use special additional tool (ssh-agent in *Nix or pageant in Win or...)</p>

<p><strong>Sample</strong></p>

<p>Windows-box with Mercurial (TortoiseHG), full Putty, without Cygwin</p>

<p>Key-based authorization for ssh-repositories: Plink + Pageant</p>

<p>Global mercurial.ini part</p>

<pre><code>[ui]
merge = ...
username = ...
ssh = ""PATH\TO\TortoisePlink.exe"" 
</code></pre>

<p>Also Pageant is running and (putty-type) private keys for published public keys loaded into it</p>

<p>When I connect to any ssh-repo, authorization happens automagically</p>

<p>Pageant-less version may include</p>

<ul>
<li><code>-i KEYFILE</code> option for TortoisePlink at the repository level - in the .hg\hgrc</li>
<li><code>--load SESSION</code> option for TortoisePlink (same location as above) for using previously created Putty's session, which have all needed authorization predefined</li>
</ul>
","1774","<ssh><mercurial><putty><private-key>","0","0","2","2013-05-24 16:06:13","16739221","1","","850848","","2013-05-24 08:36:19","2013-05-23 22:05:32",""
"16724681","Mercurial: How to clone using SSH and .ppk file?","<pre><code>hg clone ssh://denis@medsecop.com//var/www/vhosts/medsecop.com/stage/symphony
</code></pre>

<p>returns </p>

<pre><code>remote: Permission denied (publickey).
abort: no suitable response from remote hg!
</code></pre>

<p>I have the <code>.ppk</code> file but I don't know how to add options to the <code>ssh</code> command above to use (it says ""hg clone doesn't take more arguments"")</p>

<pre><code> -i /path/to/keys.ppk
</code></pre>

<p>I connect to SSH with this:</p>

<pre><code>sudo ssh -v denis@medsecop.com -i /home/denis/Desktop/MedSec/my-openssh-key
</code></pre>

<p>Any ideas?</p>
","<p>I solved it by adding the public key</p>

<pre><code>ssh-add file.ppk
</code></pre>
","1774","<ssh><mercurial><putty><private-key>","0","0","2","2013-05-24 16:06:13","16739221","1","","850848","","2013-05-24 08:36:19","2013-05-23 22:05:32",""
"45218441","Unable to load private key to request a certificate","<p>I have a private key with passphrase and when I try to do anything using OpenSSL, like <code>openssl req -key myprivatekey.key -new -out mydemande.csr</code>, I have this error :</p>

<pre><code>unable to load Private Key
22100:error:0607607D:digital envelope routines:PKCS5_v2_PBE_keyivgen:unsupported prf:./crypto/evp/p5_crpt2.c:230:    
22100:error:06074078:digital envelope routines:EVP_PBE_CipherInit:keygen failure:./crypto/evp/evp_pbe.c:101:    
22100:error:23077073:PKCS12 routines:PKCS12_pbe_crypt:pkcs12 algor cipherinit error:./crypto/pkcs12/p12_decr.c:83:    
22100:error:2306A075:PKCS12 routines:PKCS12_item_decrypt_d2i:pkcs12 pbe crypt error:./crypto/pkcs12/p12_decr.c:123:    
22100:error:0907B00D:PEM routines:PEM_READ_BIO_PRIVATEKEY:ASN1 lib:./crypto/pem/pem_pkey.c:125:
</code></pre>

<p>hHelp!!</p>
","<p>The problème was the version of openSSl.
When i change the version of my openssl it works fine !!!</p>
","1770","<openssl><certificate><key><keystore><private-key>","-1","0","1","2017-07-21 15:30:44","","0","","608639","","2017-07-20 15:34:55","2017-07-20 14:59:27",""
"47306335","Unable to start Apache on CentOS Private Key Not Found","<p>I am unable to start Apache on a CentOS Server with SELinux. The error log gives.</p>

<pre><code>[root@server httpd]# cat test-error_log
[Wed Nov 15 05:42:34 2017] [error] Init: Private key not found
[Wed Nov 15 05:42:34 2017] [error] SSL Library Error: 218529960 error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag
[Wed Nov 15 05:42:34 2017] [error] SSL Library Error: 218640442 error:0D08303A:asn1 encoding routines:ASN1_TEMPLATE_NOEXP_D2I:nested asn1 error
[Wed Nov 15 05:42:34 2017] [error] SSL Library Error: 218529960 error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag
[Wed Nov 15 05:42:34 2017] [error] SSL Library Error: 218595386 error:0D07803A:asn1 encoding routines:ASN1_ITEM_EX_D2I:nested asn1 error
[Wed Nov 15 05:42:34 2017] [error] SSL Library Error: 67710980 error:04093004:rsa routines:OLD_RSA_PRIV_DECODE:RSA lib
[Wed Nov 15 05:42:34 2017] [error] SSL Library Error: 218529960 error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag
[Wed Nov 15 05:42:34 2017] [error] SSL Library Error: 218595386 error:0D07803A:asn1 encoding routines:ASN1_ITEM_EX_D2I:nested asn1 error
</code></pre>

<p>It fails here also</p>

<pre><code>[root@server private]#  openssl rsa -in test.key -check -noout
unable to load Private Key
140598241089352:error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag:tasn_dec.c:1319:
140598241089352:error:0D07803A:asn1 encoding routines:ASN1_ITEM_EX_D2I:nested asn1 error:tasn_dec.c:381:Type=RSA
140598241089352:error:04093004:rsa routines:OLD_RSA_PRIV_DECODE:RSA lib:rsa_ameth.c:115:
140598241089352:error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag:tasn_dec.c:1319:
140598241089352:error:0D07803A:asn1 encoding routines:ASN1_ITEM_EX_D2I:nested asn1 error:tasn_dec.c:381:Type=PKCS8_PRIV_KEY_INFO
140598241089352:error:0907B00D:PEM routines:PEM_READ_BIO_PRIVATEKEY:ASN1 lib:pem_pkey.c:132:
</code></pre>

<p>The path is in the conf file</p>

<pre><code>[root@server conf]# cat /etc/httpd/conf.d/test.conf
&lt;VirtualHost *:443&gt;
ServerAdmin webmaster@server.com
DocumentRoot /var/www/html/test
ServerName server.server.com

SSLEngine on
SSLProtocol all -SSLv2 -SSLv3
SSLCipherSuite ALL:!ADH:!EXPORT:!SSLv2:RC4+RSA:+HIGH:+MEDIUM:+LOW
SSLCertificateFile /etc/pki/tls/certs/test.crt
SSLCertificateKeyFile /etc/pki/tls/private/test.key


ErrorLog logs/test-error_log
CustomLog logs/test-access_log common
</code></pre>

<p></p>

<p>I also checked there are no spaces in the Private Key. Any other ideas where this is going wrong?</p>

<p>Also</p>

<pre><code>[root@server etc]#  ls -dZ /etc/pki/tls/private/
drwxr-xr-x. root root system_u:object_r:httpd_sys_content_t:s0 /etc/pki/tls/private/
[root@server etc]#  ls -dZ /etc/pki/tls/certs/
drwxr-xr-x. root root system_u:object_r:httpd_sys_content_t:s0 /etc/pki/tls/certs/
</code></pre>

<p>I have also checked there are no spaces in the Private Key and appropriate number of dashes.</p>

<p>EDIT: Output of ls -al /etc/pki/tls/private/ and ls -al /etc/pki/tls/certs/</p>

<pre><code>[root@server ~]# ls -al /etc/pki/tls/certs/
total 1788
drwxr-xr-x. 2 root root    4096 Nov 15 08:51 .
drwxr-xr-x. 5 root root    4096 Feb 11  2015 ..
-rw-r--r--. 1 root root  786601 Jul 14  2014 ca-bundle.crt
-rw-r--r--. 1 root root 1005005 Jul 14  2014 ca-bundle.trust.crt
-rw-------. 1 root root    1513 Feb 11  2015 localhost.crt
-rwxr-xr-x. 1 root root     610 Jan 20  2015 make-dummy-cert
-rw-r--r--. 1 root root    2242 Jan 20  2015 Makefile
-rwxr-xr-x. 1 root root     829 Jan 20  2015 renew-dummy-cert
-rw-r--r--. 1 root root    1208 Feb 11  2015 test.crt
-rw-------. 1 root root    3258 Nov 15 08:51 test_1.cert
[root@ip-10-155-16-219 ~]# ls -al /etc/pki/tls/private/
total 16
drwxr-xr-x. 2 root root 4096 Nov 18 21:15 .
drwxr-xr-x. 5 root root 4096 Feb 11  2015 ..
-rw-------. 1 root root 1679 Feb 11  2015 localhost.key
-rw-r--r--. 1 root root 1679 Nov 18 21:15 test.key
[root@server ~]#
</code></pre>
","<p>Is you private key encrypted?
To determine if your private key is encrypted:</p>

<pre><code>grep ENCRYPTED /etc/pki/tls/private/test.key
</code></pre>

<p>If yes, remove the password from the private key:</p>

<pre><code>openssl rsa -in /etc/pki/tls/private/test.key -out /etc/pki/tls/private/test-new.key
</code></pre>

<p>Check the header of your private key, should look like this:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
</code></pre>

<p>And check the footer, should look like this:</p>

<pre><code>-----END RSA PRIVATE KEY-----
</code></pre>

<p>Remove any space or newline after the footer.</p>

<p>Hope this helps</p>
","1762","<apache><ssl><centos><private-key>","1","0","1","2017-11-22 09:06:41","","0","","8944113","","2017-11-21 08:12:29","2017-11-15 11:33:50",""
"19138715","Using sftp private and public key for authentication","<p>I'm trying to set authentication for sftp server using private and public key pair.</p>

<p>I have set an sftp server with Bitvise SSH Server on a local machine. I generated private and public keys with SSH Server. I have set the private key on the host key section of SSH Server, and have created a virtual account and set the public key to that account.</p>

<p>I want to create a c# application with SharpSSH to connect to the sftp server.</p>

<p>But which key should I put in the c# code? the private or the public key?</p>

<p>Thanks</p>
","<p>the public host key (in order to ensure that you are connecting to the right server) and the private user key (in order to authenticate the user).</p>
","1760","<sftp><private-key>","0","0","1","2015-02-25 06:58:28","","0","1","1336983","","2013-10-02 14:41:22","2013-10-02 13:58:00",""
"2766029","how do i convert RSAParameters from .net to .pem file so i can use it in php","<p>Hello i have a private and public keys for RSA generated in .net </p>

<p>in this format</p>

<pre><code>string privateKey = ""&lt;RSAKeyValue&gt;"" +
                         ""&lt;Modulus&gt;...kCFhsjB4xMW49mrx5B/Ga...&lt;/Modulus&gt;"" +
                         ""&lt;Exponent&gt;...&lt;/Exponent&gt;"" +
                         ""&lt;P&gt;...7bRCrQVgVIfXdTIH3iY8x...&lt;/P&gt;"" +
                         ""&lt;Q&gt;...4SiQDhrAZADuFDTr7bRCrQVgVIfXdTIH3iY8x...&lt;/Q&gt;"" +
                         ""&lt;DP&gt;...ZADuFDTr7bRCrQVgVIfXdT...&lt;/DP&gt;"" +
                         ""&lt;DQ&gt;...4SiQDhrAZADuFDTr...&lt;/DQ&gt;"" +
                         ""&lt;InverseQ&gt;...sjB4xMW49mrx5B/Ga...&lt;/InverseQ&gt;"" +
                         ""&lt;D&gt;...SiQDhrAZADuFDTr7bRCrQVgVIf...&lt;/D&gt;"" +
                     ""&lt;/RSAKeyValue&gt;"";
</code></pre>

<p>how can i convert this so i can use it in php openssl functions to encrypt and decrypt data?
i need both public and private keys converted.</p>

<p>maybe with openssl bash command in linux where i can specify my own modulus, exponent and so on?</p>

<p>any ideas?</p>

<p>thanks</p>
","<p>Unfortunately, I haven't found a solution to the exact problem you've described, however, there are a few work-arounds you may find useful:</p>

<ul>
<li>If you have access to the .NET source, you can export your keys as PEM.  (I'm not positive if this is possible through the standard system libraries, but it is certainly supported by <a href=""http://www.bouncycastle.org/csharp/"" rel=""nofollow noreferrer"">BouncyCastle</a>. </li>
<li><p>If you can afford to use another language to translate the key, this can be done relatively easy in perl.</p>

<p>use Crypt::OpenSSL::RSA;<br>
use Crypt::OpenSSL::Bignum;<br>
use MIME::Base64;<br>
$modulus = Crypt::OpenSSL::Bignum->new_from_bin(decode_base64($XMLModulus));<br>
$exponent=  Crypt::OpenSSL::Bignum->new_from_bin(decode_base64($XMLExponent));<br>
# You can reading in the remaining parameters is the same as the first two<br>
# dq, dp, and inverseQ are not needed<br>
$privateKey = Crypt::OpenSSL::RSA->($modulus, $exponent, $d, $p, $q)<br>
# Outputs it in a standard binary form (DER) which PHP should support.
print $privateKey->get_private_key_string()<br>
# If you need PEM, openssl can definitely convert it.</p></li>
</ul>

<p>Sorry I couldn't get you a solution in PHP proper.  Hopefully the C# solution will work though.</p>
","1759","<c#><php><rsa><private-key>","4","1","1","2010-05-04 20:16:53","2767144","0","2","332417","","2010-05-04 20:16:53","2010-05-04 14:14:53",""
"16132200","PHP / Bash: Creating PPK out of OpenSSH Key with passphrase","<p>I would like to create a php script that creates keys for ssh-authentication.
I've started with a</p>

<pre><code>exec(""ssh-keygen -b 1024 -t dsa -N *pwd* -f *path-to-file* -q"");
</code></pre>

<p>to create the private and public-key-pair. No problem till here ;)</p>

<p>Now I've to convert the OpenSSL-Key to the ppk-format of PuTTY (in the cmd, not in the GUI). If anyone have an Idea on how to manage that, please let me know.</p>

<p>Thanks</p>
","<p>You have not specified, what OS you run at. On *nix, you can use PuTTYgen (from PuTTY):</p>

<pre><code>puttygen openssl-key -o mykey.ppk
</code></pre>

<p>For details see: <a href=""https://linux.die.net/man/1/puttygen"" rel=""nofollow noreferrer"">https://linux.die.net/man/1/puttygen</a></p>

<p>On Windows, PuTTYgen is a GUI application only. Though, you can use WinSCP, it has <a href=""https://winscp.net/eng/docs/commandline#keygen"" rel=""nofollow noreferrer"">PuTTYgen-compatible command-line interface</a>:</p>

<pre><code>winscp.com /keygen openssl-key -o mykey.ppk
</code></pre>
","1740","<php><openssl><putty><private-key>","0","1","2","2017-02-17 15:11:23","16215054","0","1","850848","","2013-04-23 15:28:13","2013-04-21 14:30:53",""
"16132200","PHP / Bash: Creating PPK out of OpenSSH Key with passphrase","<p>I would like to create a php script that creates keys for ssh-authentication.
I've started with a</p>

<pre><code>exec(""ssh-keygen -b 1024 -t dsa -N *pwd* -f *path-to-file* -q"");
</code></pre>

<p>to create the private and public-key-pair. No problem till here ;)</p>

<p>Now I've to convert the OpenSSL-Key to the ppk-format of PuTTY (in the cmd, not in the GUI). If anyone have an Idea on how to manage that, please let me know.</p>

<p>Thanks</p>
","<p>If you were working with RSA keys you could do this (requires <a href=""http://phpseclib.sourceforge.net/"" rel=""nofollow"">phpseclib</a>):</p>

<pre><code>&lt;?php
include('Crypt/RSA.php');

$rsa = new Crypt_RSA();
$rsa-&gt;setPassword('password');
$rsa-&gt;loadKey('...');

//$rsa-&gt;setPassword(); // clear the password if there was one
echo $rsa-&gt;getPrivateKey(CRYPT_RSA_PRIVATE_FORMAT_PUTTY);
?&gt;
</code></pre>
","1740","<php><openssl><putty><private-key>","0","2","2","2017-02-17 15:11:23","16215054","0","1","850848","","2013-04-23 15:28:13","2013-04-21 14:30:53",""
"25741092","APDU: ""Conditions of use not satisfied"" (69 85) while calculate signature","<p>With a smart card Gemalto (IAS ECC), I would to calculate a signature by using private key stored on smart card. For this, I use APDU commands:</p>

<pre><code>// Verify PIN
00 20 00 01 04 31 32 33 34
-&gt; 90 00

// Create a context for security operation
00 22 41 B6 06 84 01 84 80 01 12
-&gt; 90 00

// Set the hash of the document
00 2A 90 A0 14 HASH OF DOCUMENT
-&gt; 69 85

// Calculating the signature
00 2A 9E 9A 80
-&gt; 69 85
</code></pre>

<p>My problem is the following: the las two commands return the error code ""69 85"", meaning ""Conditions of use not satisfied"".</p>

<p>I have already tried several solutions, but I obtain always the same error. How to resolve it? What does this code can mean?</p>

<p>After some tests, I discovered something interesting. When I replace cla ""00"" by ""10"", smart card returns a different response:</p>

<pre><code>// Create a context for security operation
00 22 41 B6 06 84 01 84 80 01 12

// Verify PIN
00 20 00 01 04 31 32 33 34

// Calculating the signature (I replace ""00"" by ""10"")
10 2A 9E 9A 23 30 21 30 09 06 05 2B 0E 03 02 1A 05 00 04 14 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 10 12 13 14 15
</code></pre>

<p>I don't know if it's the good solution because smart card returns ""90 00"". But, it would return the content of my signature!</p>

<p>Thank you for your help!</p>

<p>Best regards</p>
","<p>You are getting SW 6985 for</p>

<pre><code>// Set the hash of the document
00 2A 90 A0 14 HASH OF DOCUMENT
-&gt; 69 85
</code></pre>

<p>Since you have not set the correct context in current security environment.</p>

<p>Let me explain this below</p>

<p>First you performed VERIFY PIN command which was successful</p>

<pre><code>// Verify PIN
00 20 00 01 04 31 32 33 34
-&gt; 90 00
</code></pre>

<p>Then you performed MSE SET command,Where you set the security context.For this you have to understood how SE works(Please refer to section 3.5 fron IAS ECC v1.01).</p>

<p>At the time of personalisation, the Personaliser agent create SDO(Secure Data Object) inside the card.The reference to this SDO are mentioned in SE(Security Environment) in form of CRT(Control reference template).</p>

<pre><code>// Create a context for security operation
00 22 41 B6 06 84 01 84 80 01 12
-&gt; 90 00
</code></pre>

<p>Generally speaking, MSE SET command will always return SW 900 even if the SDO reference is wrong. Since it only return SW 6A80 when the template is wrong not when the reference is wrong.(The SDO reference is passed in tag 84)</p>

<p>After that you performed PSO HASH command</p>

<pre><code>// Set the hash of the document
00 2A 90 A0 14 HASH OF DOCUMENT
-&gt; 69 85
</code></pre>

<p>where the card return SW 6985(Condition of use not satisfied), This indicate the algorithm and SDO reference used for calculating Hash may  wrong. Which is probably happening since the SDO reference which was sent during the time of MSE SET command is not available</p>

<p>Detecting error coming from MSE SET could be tricky since it return SW 9000.
For these type of situation you have to check the personalisation file carefully and need to match the MSE SET command with regard to SDO reference and supported ALGOs.</p>

<p>It may be useful to put the default context (e.g., cryptographic algorithms or
security operations) into the current SE in order to have few exchanges of MSE set commands.</p>
","1735","<certificate><smartcard><private-key><apdu>","0","0","1","2018-05-10 12:24:23","","2","","2454731","","2014-09-12 12:52:48","2014-09-09 09:27:15",""
"42868879","C code to clean up memory for openssl EVP_PKEY private keys","<p>I'm starting learn OpenSSL programming in C/C++. An issue I encountered is, how could I safely wipe out the memory for private keys?</p>

<p>For example, I may have code:</p>

<pre><code>EVP_PKEY *private_key = PEM_read_bio_PrivateKey( bio, ,,,)
RSA *r = EVP_PKEY_get1_RSA( private_key);
</code></pre>

<p>I'd like to wipe out private_key from memory cleanly before using EVP_PKEY_free() to free it.</p>

<p>I'd appreciate for helps and/or your suggestions. 
Thanks.</p>
","<blockquote>
  <p><code>EVP_PKEY *private_key = PEM_read_bio_PrivateKey( bio, ,,,)</code></p>
  
  <p>I'd like to wipe out private_key from memory cleanly before using <code>EVP_PKEY_free</code> to free it.</p>
</blockquote>

<p>OpenSSL's <code>EVP_PKEY_free</code> wipes the private key for you. You don't have to do anything special.</p>

<blockquote>
  <p><code>RSA *r = EVP_PKEY_get1_RSA( private_key);</code></p>
</blockquote>

<p>The <code>get1</code> means the reference count was bumped and you effectively got your own copy of the object. A <code>get0</code> means you got a pointer to an existing object, and you should <em>not</em> call <code>free</code> on it. Because of <code>get1</code>, you must call <code>RSA_free</code> on it to ensure it gets deleted. As with <code>EVP_PKEY_free</code>, <code>RSA_free</code> will wipe the key.</p>

<p>Please don't call <code>memset</code>. These are opaque structures, and you have to follow a number of pointers to correctly clear the sub-objects. A lot more fields have been hidden in OpenSSL 1.1.0, so its going to be more difficult to follow the pointers (if you wanted to).  Also see <a href=""https://stackoverflow.com/q/40549318/608639"">Error: “invalid use of incomplete type ‘RSA {aka struct rsa_st}” in OpenSSL 1.1.0</a>, <a href=""https://stackoverflow.com/q/41348281/608639"">Visual Studio and error C2027: use of undefined type 'rsa_st' in OpenSSL 1.1.0</a>, <a href=""https://stackoverflow.com/q/41909017/608639"">EVP_get_cipherbyname and “undefined struct/union evp_cipher_st” in OpenSSL 1.1.0</a>, etc.</p>

<hr>

<p>Here's some additional reading you might be interested in:</p>

<ul>
<li><a href=""https://stackoverflow.com/q/26433772/608639"">Why does OPENSSL_cleanse look so complex and thread-unsafe?</a></li>
<li><a href=""https://stackoverflow.com/q/35684899/608639"">Removing OPENSSL_cleanse from OpenSSL-1.0.1r</a></li>
</ul>

<p>When functions like <code>EVP_PKEY_free</code> and <code>RSA_free</code> are called, they eventually end in a call to <code>OPENSSL_cleanse</code> before memory is returned to the operating system. In the case of an RSA private key, its called at leats 8 times to wipe the byte arrays associated with <code>n</code>, <code>e</code>, <code>d</code>, <code>p</code>, <code>q</code>, <code>dp</code>, <code>dq</code>, and <code>invq</code>.</p>
","1727","<c><openssl><private-key>","4","1","1","2017-03-18 16:36:41","","2","","608639","","2017-03-18 16:22:10","2017-03-18 00:04:35",""
"28825137","Swift how to import rsa key","<p>Now,I have a keypair pem already.</p>

<p>I want to import this keypair in my Swift,and use this keypair to encrypt </p>

<p>something or decrypt something i got from restclint</p>

<p>I see many paper is saying how to general keypair, but i have it already.</p>

<p>and what is kSecAttrApplicationTag mean?</p>

<p>plz help me  </p>

<pre><code>var dataPtr:Unmanaged&lt;AnyObject&gt;?
let query: [String:AnyObject] = [
kSecClass: kSecClassKey,
kSecAttrApplicationTag: ""com.example.site.public"",
kSecReturnData: kCFBooleanTrue
]
let qResult = SecItemCopyMatching(query, &amp;dataPtr)
// error handling with `qResult` ...
let publicKeyData = dataPtr!.takeRetainedValue() as NSData
// convert to Base64 string
let base64PublicKey = publicKeyData.base64EncodedStringWithOptions(nil)
</code></pre>
","<p>Have a look at <a href=""https://github.com/btnguyen2k/swift-rsautils"" rel=""noreferrer"">Swift-RSAUtils</a>, it provides what you need. I cannot thank Thanh Ba Nguyen enough for his fantastic pioneer work in this field. Apple, shame on you for making developers' lives so miserable!</p>

<p>Basically, the story is this: you must load the keys in their DER or PEM format (and decode base64 in case of PEM), then strip some parts from it, then import the keys to the system's keyring. Once this is done you can fetch them from the keyring and use them. Unfortunately, Apple hasn't documented this, particularly for Swift. The only reference documentation I could find was <a href=""https://developer.apple.com/library/prerelease/ios/documentation/Security/Reference/certifkeytrustservices/index.html"" rel=""noreferrer"">Certificate, Key, and Trust Services Reference</a>, and be sure you click ""both"" not only ""Swift"" or you won't see much. Or forget about it and go with Swift-RSAUtils, the code is pretty much self-explaining.</p>
","1717","<swift><encryption><rsa><private-key>","1","5","2","2016-09-18 17:49:22","","0","1","","","","2015-03-03 06:03:12",""
"28825137","Swift how to import rsa key","<p>Now,I have a keypair pem already.</p>

<p>I want to import this keypair in my Swift,and use this keypair to encrypt </p>

<p>something or decrypt something i got from restclint</p>

<p>I see many paper is saying how to general keypair, but i have it already.</p>

<p>and what is kSecAttrApplicationTag mean?</p>

<p>plz help me  </p>

<pre><code>var dataPtr:Unmanaged&lt;AnyObject&gt;?
let query: [String:AnyObject] = [
kSecClass: kSecClassKey,
kSecAttrApplicationTag: ""com.example.site.public"",
kSecReturnData: kCFBooleanTrue
]
let qResult = SecItemCopyMatching(query, &amp;dataPtr)
// error handling with `qResult` ...
let publicKeyData = dataPtr!.takeRetainedValue() as NSData
// convert to Base64 string
let base64PublicKey = publicKeyData.base64EncodedStringWithOptions(nil)
</code></pre>
","<p>Simplest explanation: when you store something in keychain, it has a unique key (for identifying purpose). kSecAttrApplicationTag: ""com.example.site.public"" means ""hey, the unique key I use is 'com.example.site.public'""</p>

<p>Cheers,</p>
","1717","<swift><encryption><rsa><private-key>","1","1","2","2016-09-18 17:49:22","","0","1","","","","2015-03-03 06:03:12",""
"22624416","how can I identify my SSL public key certificate?","<p>Amazon Cloudfront is giving me errors, either my private key doesn't match my public key certificate or my public key certificate cannot be parsed as it's invalid.</p>

<p>Using Godaddy for my SSL certificate middle man/provider, I got a:</p>

<p>.pem whoose contents beings with ""-----BEGIN RSA PRIVATE KEY-----""</p>

<p>(I'm assuming that's my private key)</p>

<p>Inside Godaddy I am able to download some certs for the SSL, they are:</p>

<p>.crt (type = Security Certificate)
.p7b (type = PKCS #7 Certificate)</p>

<p>Is one of the above my public key? Or is there another way I am supposed to get my public key?</p>
","<p>I have encountered this issue before with bad CSR Request. 
According to GoDaddy:
To install a digital certificate, you must first generate and submit a Certificate Signing Request (CSR) to the Certification Authority (CA). The CSR contains your certificate-application information, including your public key. Use your Web server software to generate the CSR, which will also create your public/private key pair used for encrypting and decrypting secure transactions.</p>

<p><a href=""http://support.godaddy.com/help/article/5343/generating-a-certificate-signing-request"" rel=""nofollow"">http://support.godaddy.com/help/article/5343/generating-a-certificate-signing-request</a></p>

<p>It also states: NOTE: When generating your CSR, <strong>specify a key size of 2048 or higher</strong>.</p>

<p>The key size is sometimes the culprit. Hope it helps.</p>
","1715","<ssl><ssl-certificate><private-key><public-key>","0","0","1","2014-03-25 02:52:46","","3","","","","","2014-03-25 02:31:37",""
"29709720","How to Encrypt AJAX GET & POST with javaScript and Node.js","<p>I would like to encrypt ajax post and get request with javascript. </p>

<p>The flow should be - </p>

<ol>
<li>Server generated private and public key on request</li>
<li>Server sends the public key to client</li>
<li>Client encrypts the data with public key</li>
<li>Sever decrypts the data with the private key</li>
</ol>

<p>I know SSL is an option, but my application is a small plugin which can be installed on any website that allows a user to purchase products on that website. Is there a way i can encrypt all the data at front end and decrypt at back end.</p>

<p>Thanks in advance! </p>
","<p>Generally speaking, in browser cryptography can be considered a <a href=""http://matasano.com/articles/javascript-cryptography/"" rel=""nofollow"">bad idea</a>. Sending the data over ssl-tls would likely be much more secure than a home-brewed crypto solution, like you seem to be suggesting. This can be considered especially bad when transmitting data like credit card info, as it appears you will be.</p>

<p>http allows for extremely easy man in the middle attacks to eavesdrop on any data being sent either way, so there would almost certainly be no secure way to transmit the keys in the first place, let alone the secure information. </p>

<p>If you really <em>really</em> want to go this route, then have a look at <a href=""https://code.google.com/p/crypto-js/"" rel=""nofollow"">crypto-js</a>.</p>

<p>This is not a good idea, and you should use SSL. Probably hence the downvotes.</p>

<p>Considering your use case, the best way to do this would probably be to host your own central service with SSL enabled, and route all ajax requests to your service, not theirs. Their servers could then poll your server using your SSL certificate, to view any relevant information. So you would be acting as some sort of centralised API, with both the clients and businesses connecting. You still need to consider however, that any information sent in the clear, ie over http, not https, can be tampered with before it reaches the user.</p>

<p>As far as I am aware, no, you cannot generate SSL certificates on the fly. </p>
","1691","<javascript><node.js><public-key-encryption><private-key>","-1","1","1","2015-04-17 22:43:18","","0","","","","","2015-04-17 21:33:02",""
"17424861","How to store private key in android without pin code","<p>I'm new to android and security.</p>

<p>My app uses an encrypted DB which is encrypted by a private key. I want to find a way to store this private key in a protected place, without adding any additional password/pin code.</p>

<p>From what I've read, Android's keystore is the place to do it, but from my understanding, if I'll use it, it demands that I'll set a pin code for the device (which I don't want to do!).</p>

<p>Any suggestions regarding where to store this key and how? (any keystore related solution is acceptable as long as I don't have to set a pin code)</p>

<p>My direction is using some external open source keystore (any suggestions?) which I'll compile as part of my app (and because android doesn't share information between apps it will be ok to use).</p>

<p>I'm aware that my last assumption isn't correct when using a rooted device, but for my case I use only non-rooted devices.</p>

<p>I've searched a lot (here and else where) and couldn't find what I was looking for...</p>

<p>Any help is highly appreciated!!
10x</p>
","<p>One thing you need to keep in mind is that the <code>KeyChain</code> isn't available until API 14. If you intend on targeting earlier API versions you need another option. You could use <a href=""http://rtyley.github.io/spongycastle/"" rel=""nofollow"">SpongyCastle</a> to create your own KeyStore. </p>

<p>If you are not going to ask the user for a password you should at the very least obscure the password.</p>

<pre><code>public class MainActivity extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        KeyStore ks = null;
        try {
            ks = KeyStore.getInstance(KeyStore.getDefaultType());
            ks.load(null,null);

            // Add certs or keys

            ks.store(new FileOutputStream(new File(getFilesDir(),""out.bks"")),""password"".toCharArray());
        } catch (KeyStoreException e) {
            e.printStackTrace();
        } catch (CertificateException e) {
            e.printStackTrace();
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    static {
        Security.insertProviderAt(new org.spongycastle.jce.provider.BouncyCastleProvider(), 1);
    }
}
</code></pre>
","1642","<android><security><keystore><private-key><pin-code>","3","1","1","2013-07-02 12:08:59","","0","2","","","","2013-07-02 11:50:35",""
"42285185","SSH Public Key Authentication with Libssh2 C++","<p>I am working on a project where I am doing port forwarding to MySQL using libssh2 in C++. I've got it working for username/password authentication but I now want do it using public/private key authentication. The documentation for libssh2 is pretty poor so I am having difficult working out what I need to do. </p>

<p>What I am trying to do is have an Android app post data to my C++ app, where C++ will be given the SSH details along with the auth key and it creates the SSH tunnel. C++ is getting the key fine and then I am doing the following to do the public key authentication. </p>

<pre><code>else if (this-&gt;getAuthMethod() == SupportedAuthMethods::AUTH_PUBLICKEY)
    {

        string test = this-&gt;getSSHPrivateKey();

        boost::replace_all(test, ""\n"", """");

        unsigned char * key = (unsigned char *)test.c_str();

        size_t sizeofkey = strlen((char*)key);
        cout &lt;&lt; key &lt;&lt; endl;
        stringstream logstream;
        logstream &lt;&lt; ""Using public key authentication for SSH Host: "" &lt;&lt; this-&gt;getSSHHostnameOrIPAddress();
        this-&gt;bitsLibrary-&gt;writeToLog(logstream.str(), ""SSHTunnelForwarder"", ""authenticateSSHServer"");
        if (chosenAuthMethod &amp; SupportedAuthMethods::AUTH_PUBLICKEY)
        {
            //int result = 0;
            int result = libssh2_userauth_publickey(this-&gt;session, this-&gt;getUsername().c_str(), key, sizeofkey, SSHTunnelForwarder::publicKeyAuthComplete, 0);
            if (result != 0)
            {
                char * error = NULL;
                int len = 0;
                int errbuf = 0;
                libssh2_session_last_error(this-&gt;session, &amp;error, &amp;len, errbuf);
                this-&gt;bitsLibrary-&gt;writeToLog(std::string(error), ""SSHTunnelForwarder"", ""auth"");
                JSONResponseGenerator jsonResponse;
                jsonResponse.generateJSONResponse(API_AUTH_FAILURE, ""InvalidPublicKey"");
                return jsonResponse.getJSONString();

            }
        }
    }
</code></pre>

<p>I read somewhere that it shouldn't have new lines, that's why I'm replacing the \n for blank characters but with or without this it doesn't make a difference. </p>

<p>The very basic documentation mentions that one of the arguments for <code>libssh2_userauth_publickey</code> is a callback as follows:</p>

<p><code>int name(LIBSSH2_SESSION *session, unsigned char **sig, size_t *sig_len, const unsigned char *data, size_t data_len, void **abstract);</code></p>

<p>but I cannot find any information anywhere as to what this callback is or what it should contain. In my function call to libssh2_userauth_publickey I pass in <code>SSHTunnelForwarder::publicKeyAuthComplete</code> and currently this function just has the following:</p>

<pre><code>int SSHTunnelForwarder::publicKeyAuthComplete(LIBSSH2_SESSION *session, unsigned char **sig, size_t *sig_len,
    const unsigned char *data, size_t data_len, void **abstract)
{
    cout &lt;&lt; ""In SSH Auth Callback"" &lt;&lt; endl;
    return 0;
}
</code></pre>

<p>This method above doesn't get called, although I'm expecting that this isn't even close to being correct. </p>

<p>When I run my code above the result of libssh2_userauth_publickey is 19 and the error that is returned from the <code>get_last_message()</code> method is <code>invalid public key</code>. I know the public key file is fine as I can use it in an SSH app on Android and can successfully authenticate with my server. </p>

<p><strong>UPDATE 1</strong></p>

<p>I've managed to make some progress, I found there is a function called:</p>

<pre><code>libssh2_userauth_publickey_frommemory(LIBSSH2_SESSION *session, const char *username, size_t username_len, const char *publickeyfiledata, size_t publickeyfiledata_len, const char *privatekeyfiledata, size_t privatekeyfiledata_len, const char *passphrase);
</code></pre>

<p>The libssh2 version that I had was from NuGet Package manager and found that the latest version in this is actually quite old, so I've build the latest 1.7.0 version from GitHub inside Visual Studio and relinked my project to this new version. </p>

<p>I have now replaced the original publickey auth function I was using with this version so my code now looks like this instead:</p>

<pre><code>int result = libssh2_userauth_publickey_frommemory(this-&gt;session, username.c_str(), username.length(), nullptr, 0, test.c_str(), sizeofkey, nullptr);
</code></pre>

<p>This function confuses me a little that it wants the public key and the private key, for everything I know about SSH (admittedly not a huge amount) the public key stays on the server, and the user wanting to login only has access to the private key. </p>

<p>I found that someone else was asking this and a patch was done to allow a null pointer for the public key, so I have passed nullptr for the public key and 0 for the public key length. I've also put a nullptr for the certificate passphrase as this hasn't been set. </p>

<p>When I run this code now I now get the error -18 which is <code>invalid username/public key combination</code>. Again though, I know the username and private key file I am using is correct as I can use it in an SSH client application on Android to connect to my SSH server. </p>
","<p>I've found the solution. What I did in update 1 was the actual fix but my server key got changed for some reason not sure why, so when it said that it couldn't link the username with the key it was correct. </p>

<p>The complete fix is as follows:</p>

<p>Don't use the libssh2 from NuGet its very old. I downloaded the latest source from GitHub at <a href=""https://github.com/libssh2/libssh2/releases"" rel=""noreferrer"">https://github.com/libssh2/libssh2/releases</a> and then completed the follwing steps to build libssh2 within Visual Studio. </p>

<ul>
<li>Shove all the .c files in libssh2/src into an empty Win32 C++ (DLL 
or Static Library) project except libgcrypt.c/openssl.c of which you 
only pick the one appropriate to your crypto library. </li>
<li>Add your OpenSSL or libgcrypt include directory to the project include path </li>
<li>Add libssh2/include to the project include path </li>
<li>Add libssh2/win32 to the project include path </li>
<li>Add the appropriate crypto libraries to the project Additonal Libraries list </li>
<li>Build </li>
<li>Job done </li>
</ul>

<p>Steps above taken from <a href=""https://www.libssh2.org/mail/libssh2-devel-archive-2012-09/0029.shtml"" rel=""noreferrer"">https://www.libssh2.org/mail/libssh2-devel-archive-2012-09/0029.shtml</a></p>

<p>The libssh2 was linked to openssl during compilation. </p>

<p>Link your project to the latest build you've just done for libssh2 and use the method </p>

<pre><code>libssh2_userauth_publickey_frommemory(LIBSSH2_SESSION *session, const char *username, size_t username_len, const char *publickeyfiledata, size_t publickeyfiledata_len, const char *privatekeyfiledata, size_t privatekeyfiledata_len, const char *passphrase);
</code></pre>

<p>And that's it. </p>
","1613","<c++><ssh><private-key><public-key><libssh2>","17","6","1","2018-05-01 21:17:17","42333686","0","1","472495","","2018-05-01 21:17:17","2017-02-16 21:39:59",""
"13921207","Install Private Key of a pkcs12 into Mono Cert Store on Linux Programmatically","<p>On .NET in a Windows Environment, if a .pfx/.p12 contains a Private Key, it could be programmatically installed into the Certificate Store in the following way (where rawData is a byte array containing the full .pfx/.p12, both public and private key, and password is the password to the .pfx/.p12):</p>

<pre><code>X509Store store = new X509Store(StoreName.My, StoreLocation.LocalMachine);
X509Certificate2 certificate = new X509Certificate2(rawData, password, X509KeyStorageFlags.MachineKeySet | X509KeyStorageFlags.PersistKeySet | X509KeyStorageFlags.Exportable);
store.Open(OpenFlags.ReadWrite);
store.Add(certificate);
store.Close();
</code></pre>

<p>I am looking to do the exact same thing on Mono in a Linux environment. The above code, which works on Windows, will only install the public key of the Certificate on Linux and not the private key. I've been able to manually install the private key of a .p12 using Mono's certmgr utility, but I'm looking for a programmatic solution.</p>

<p>Thanks!</p>
","<p>Sorry for this answer that won't solve your problem.
Mono doesn't support persisting a private key to a certificate store.
The (highly) technical ang gory details can be found in 
<a href=""http://lists.ximian.com/pipermail/mono-devel-list/2010-October/036101.html"" rel=""nofollow"">this interesting discussion</a>.</p>

<p>In my app I ended up storing certificates and private keys in database, because anyway my app design required a kind of centralized certificate storage.</p>
","1606","<c#><linux><mono><private-key><pkcs#12>","1","1","1","2012-12-18 15:58:38","","0","","","","","2012-12-17 19:55:29",""
"15879938","Storing certificates in pkcs11 keystore","<p>I am generating an RSA keypair in pkcs11 keystore, it was storing into smartcard and i am generating pkcs10 request. when i download the equivalent certificate how can i store it into smartcard(without privatekey since the key is already stored into smartcard) since i dont have access to the private key in the pkcs11 keystore.</p>

<pre><code>    String wdtokenpath = ""path to dll file"";
    String pkcs11ConfigSettings = ""name = SmartCard\n"" + ""library ="" + wdtokenpath;
    byte[] pkcs11ConfigBytes = pkcs11ConfigSettings.getBytes();
    ByteArrayInputStream confStream = new ByteArrayInputStream(pkcs11ConfigBytes);
    Provider pkcs11Provider = null;

    Class sunPkcs11Class = Class.forName(""sun.security.pkcs11.SunPKCS11"");
    Constructor pkcs11Constr = sunPkcs11Class.getConstructor(
            java.io.InputStream.class);
    pkcs11Provider = (Provider) pkcs11Constr.newInstance(confStream);
    CallbackHandler call = new TextCallbackHandler();
    Subject token = new Subject();
    AuthProvider aprov = (AuthProvider) pkcs11Provider;
    aprov.login(token, call);

    System.out.println(""Login successfully"");
    KeyPairGenerator keyGen1 = KeyPairGenerator.getInstance(""RSA"", aprov);
    keyGen1.initialize(2048);
    KeyPair pair1 = keyGen1.generateKeyPair();
    PublicKey publicKey1 = pair1.getPublic();

    String sigAlg = ""SHA1withRSA"";
    PKCS10 pkcs10 = new PKCS10(publicKey1);
    Signature signature = Signature.getInstance(""SHA1withRSA"", pkcs11Provider);
    signature.initSign(pair1.getPrivate());
</code></pre>
","<p>It depends on what kind of smart card you have, or what kind of PKCS#11 device you have. The implementation may differ.</p>

<p>When you are using <code>SunPKCS11</code>, you can do it like this:</p>

<pre><code>public boolean uploadCertificate(X509Certificate cert, String label, String id) {
        CK_ATTRIBUTE[] certificate = new CK_ATTRIBUTE[9];

        certificate[0] = new CK_ATTRIBUTE(PKCS11Constants.CKA_CLASS, PKCS11Constants.CKO_CERTIFICATE);
        certificate[1] = new CK_ATTRIBUTE(PKCS11Constants.CKA_TOKEN, true);
        certificate[2] = new CK_ATTRIBUTE(PKCS11Constants.CKA_PRIVATE, false);
        certificate[3] = new CK_ATTRIBUTE(PKCS11Constants.CKA_LABEL, label.toCharArray());
        certificate[4] = new CK_ATTRIBUTE(PKCS11Constants.CKA_SUBJECT, cert.getSubjectX500Principal().getEncoded());
        certificate[5] = new CK_ATTRIBUTE(PKCS11Constants.CKA_ID, HexUtils.hexStringToByteArray(id));
        certificate[6] = new CK_ATTRIBUTE(PKCS11Constants.CKA_ISSUER, cert.getIssuerX500Principal().getEncoded());
        certificate[7] = new CK_ATTRIBUTE(PKCS11Constants.CKA_SERIAL_NUMBER, cert.getSerialNumber().toByteArray());

        try {
            certificate[8] = new CK_ATTRIBUTE(PKCS11Constants.CKA_VALUE, cert.getEncoded());
            p11.C_CreateObject(hSession, certificate);
        } catch (Exception e) {
            logger.log(Level.SEVERE, ""Upload Certificate Exception"", e);
            return false;
        }

        return true;
    }
</code></pre>

<p>Or with IAIK PKCS#11 Wrapper:</p>

<pre><code>// create certificate object template
        X509PublicKeyCertificate pkcs11X509PublicKeyCertificate = new X509PublicKeyCertificate();

        pkcs11X509PublicKeyCertificate.getToken().setBooleanValue(Boolean.TRUE);
        pkcs11X509PublicKeyCertificate.getPrivate().setBooleanValue(Boolean.FALSE);
        pkcs11X509PublicKeyCertificate.getLabel().setCharArrayValue(""test"".toCharArray());
        pkcs11X509PublicKeyCertificate.getSubject().setByteArrayValue(cert.getSubjectX500Principal().getEncoded());
        pkcs11X509PublicKeyCertificate.getId().setByteArrayValue(objectId);
        pkcs11X509PublicKeyCertificate.getIssuer().setByteArrayValue(cert.getIssuerX500Principal().getEncoded());
        // serial number should be an DER encoded ASN.1 integer
        /*
         INTEGER asn1Integer = new INTEGER(userCertificate.getSerialNumber());
         ByteArrayOutputStream buffer = new ByteArrayOutputStream();
         DerCoder.encodeTo(asn1Integer, buffer);
         pkcs11X509PublicKeyCertificate.getSerialNumber().setByteArrayValue(buffer.toByteArray());
         */
        // Netscape deviates from the standard here, for use with Netscape rather use
        pkcs11X509PublicKeyCertificate.getSerialNumber().setByteArrayValue(cert.getSerialNumber().toByteArray());
        pkcs11X509PublicKeyCertificate.getValue().setByteArrayValue(cert.getEncoded());

        session.createObject(pkcs11X509PublicKeyCertificate);
</code></pre>

<p>The ID of the certificate object should be the same as the ID of generated keys.</p>
","1594","<rsa><smartcard><private-key><pkcs#11><key-pair>","1","2","1","2018-02-07 08:49:01","","0","","2201899","","2013-04-09 07:01:08","2013-04-08 13:10:01",""
"17832462","How to hardcode private key which can be used to encrypt once and decrypt many times?","<p>In my application I want to use Private key which will encrypt password once and decrypt as many times the tool will be run.</p>

<p>Application will run like:</p>

<ul>
<li>User will encrypt the password using the tool.</li>
<li>Then user will paste that password in properties file.</li>
<li>When next time tool will run it will read that password and decrypt it to login.</li>
</ul>

<p>Here I am facing problem like, when I encrypt the password I am doing it using another tool just for encryption perpose. So when I try to decrypt it the key is different than key generated. How can I share private key between these two tools..</p>

<p>Thanks..</p>
","<p>I think you are confusing symetric and asymetric encryption. When doing symetric encryption you can use the same key. In asymetric encryption you have two keys. A <em>public key</em> with which you can encrypt your passwords, but you can't decrypt them with this key. This is only possible with the <em>private key</em>.
Therefore you don't need to share a key between those tools. Like the name suggests the private key should never leave you system.</p>
","1590","<java><encryption><private-key>","0","0","4","2013-07-24 19:23:09","17833221","4","","","","","2013-07-24 11:19:20",""
"17832462","How to hardcode private key which can be used to encrypt once and decrypt many times?","<p>In my application I want to use Private key which will encrypt password once and decrypt as many times the tool will be run.</p>

<p>Application will run like:</p>

<ul>
<li>User will encrypt the password using the tool.</li>
<li>Then user will paste that password in properties file.</li>
<li>When next time tool will run it will read that password and decrypt it to login.</li>
</ul>

<p>Here I am facing problem like, when I encrypt the password I am doing it using another tool just for encryption perpose. So when I try to decrypt it the key is different than key generated. How can I share private key between these two tools..</p>

<p>Thanks..</p>
","<p>You mixed up different things...</p>

<p>When you use a private key to encrypt something you will need the corresponding public key to decrypt.</p>

<p>If you really want to do this then you can put the path to the public key into the properties file also.</p>

<p>What you have described is some symmetric cipher which uses only one key.</p>

<p>Also, as dasblinkenlight noted, make a password decryptable yields some security issues so test if you can design your application different...</p>
","1590","<java><encryption><private-key>","0","0","4","2013-07-24 19:23:09","17833221","4","","","","","2013-07-24 11:19:20",""
"17832462","How to hardcode private key which can be used to encrypt once and decrypt many times?","<p>In my application I want to use Private key which will encrypt password once and decrypt as many times the tool will be run.</p>

<p>Application will run like:</p>

<ul>
<li>User will encrypt the password using the tool.</li>
<li>Then user will paste that password in properties file.</li>
<li>When next time tool will run it will read that password and decrypt it to login.</li>
</ul>

<p>Here I am facing problem like, when I encrypt the password I am doing it using another tool just for encryption perpose. So when I try to decrypt it the key is different than key generated. How can I share private key between these two tools..</p>

<p>Thanks..</p>
","<p>Thanks to all of you for your replies,</p>

<p>I am very new in data encryption. Trying it for the first time..</p>

<p>I am working on a tool which is basically run using script. The code will be kept on secured server where very few people have access. Just the concern was the Users do not want to keep password in properties file without encrypting it. So if any one else try to configure properties file they should not be able to figure out the password. As there are there will be three different loging credential will be there for three differnt sources. And respective admins will configure them from the same file.</p>

<p>I found one solution over it. </p>

<p><a href=""http://www.code2learn.com/2011/06/encryption-and-decryption-of-data-using.html"" rel=""nofollow"">http://www.code2learn.com/2011/06/encryption-and-decryption-of-data-using.html</a></p>

<p>Which is best suited solution for my problem...</p>

<p>:)</p>
","1590","<java><encryption><private-key>","0","0","4","2013-07-24 19:23:09","17833221","4","","","","","2013-07-24 11:19:20",""
"17832462","How to hardcode private key which can be used to encrypt once and decrypt many times?","<p>In my application I want to use Private key which will encrypt password once and decrypt as many times the tool will be run.</p>

<p>Application will run like:</p>

<ul>
<li>User will encrypt the password using the tool.</li>
<li>Then user will paste that password in properties file.</li>
<li>When next time tool will run it will read that password and decrypt it to login.</li>
</ul>

<p>Here I am facing problem like, when I encrypt the password I am doing it using another tool just for encryption perpose. So when I try to decrypt it the key is different than key generated. How can I share private key between these two tools..</p>

<p>Thanks..</p>
","<p>I think your main concern is sharing the key between applications.</p>

<p>In my opinion, the best way to do this would be to use a Public-Private Keypair. You could distribute the public key and keep your private key safe.</p>

<p>If several apps are used to generate passwords, then use the public key to encrypt.
If one app generates the password and several apps use it then you could encrypt with private key and all your other apps can use their bundled public key to decrypt the password.</p>

<p>Point is, once you have figured out your keypair distribution, you could you either public or private to encrypt or decrypt depending on how the application is designed.</p>

<p>Please refer Beginning Crypto examples for more details on how to create keypair and encrypt/decrypt data.</p>
","1590","<java><encryption><private-key>","0","0","4","2013-07-24 19:23:09","17833221","4","","","","","2013-07-24 11:19:20",""
"9047943","Cheap SSL vs Expensive SSL","<p>I was wondering what is the different between SSL certificate from verisign,
<a href=""http://www.verisign.com/ssl/buy-ssl-certificates/compare-ssl-certificates/index.html"" rel=""noreferrer"">http://www.verisign.com/ssl/buy-ssl-certificates/compare-ssl-certificates/index.html</a></p>

<p>which is expensive , and a certificate from godady which is cheap though,
<a href=""http://www.godaddy.com/ssl/ssl-certificates.aspx"" rel=""noreferrer"">http://www.godaddy.com/ssl/ssl-certificates.aspx</a></p>

<p>is it like more secure or browser compatible ? they both generate a public/private and certificate keys ?</p>

<p>Thanks 
Alaa </p>
","<p>It's all about trust. Verisign is a more highly-regarded authority than GoDaddy, so they command a higher price. Furthermore, Verisign verify the legitimacy of your organisation, whereas GoDaddy are only verifying your ownership of the domain.</p>
","1590","<encryption><ssl><certificate><public-key><private-key>","8","7","1","2012-01-28 19:41:20","9047989","1","","","","","2012-01-28 19:33:17","2012-01-30 00:25:47"
"6374273","Is there any method to directly load a certificate & private key to SSLServerSocket (Java) programmatically?","<p>I am from a 'C' background. I am trying to analyze how to write a Java SSL Server.</p>

<p>So, far the examples I found talk about loading certificate and private to a Key Store and the programmatically associating the KeyStore to SSLContext and then create a SSLServerSocket from the same.</p>

<p>But, are there any methods for directly mentioning which certificate the SSLServerSocket should use? Also, even if I use keystore and if there are multiple certificates and keys how can I specify to SSLServerSocket which one it should use?</p>

<p>Any sample link will be helpful.</p>
","<p>As I was saying in a comment, in an <a href=""https://stackoverflow.com/questions/6370745/can-we-load-multiple-certificates-keys-in-a-key-store/6371359#6371359"">answer to one of your questions earlier</a>, you'll need to use a <code>KeyManager</code> to do this.</p>

<p>There are various ways of doing this. <a href=""http://www.jsslutils.org/"" rel=""nofollow noreferrer"">jSSLutils</a> is a library that can make it a bit more convenient (but you could also do it more manually). There's an example with the <a href=""http://code.google.com/p/jsslutils/wiki/SSLContextFactory#FixedServerAliasKeyManager"" rel=""nofollow noreferrer"">FixedServerAliasKeyManager</a>. One of the shortest ways to do it would be to use something like this:</p>

<pre><code>X509SSLContextFactory sslContextFactory = new X509SSLContextFactory();
// By default, this would use the keystore passed with the usual system properties.

sslContextFactory.setKeyManagerWrapper(
    new FixedServerAliasKeyManager.Wrapper(""the-alias-you-want""));
// You could read the alias name from a custom system property, for example.

SSLContext sslContext = sslContextFactory.buildSSLContext(""TLS"");
SSLServerSocketFactory sslServerSocketFactory = sslContext.getServerSocketFactory();
</code></pre>
","1581","<java><ssl><certificate><private-key>","2","2","1","2011-06-16 19:07:33","6377208","1","1","","","","2011-06-16 15:20:06",""
"6016992","Encryption in java - best practices?","<p>I am working on a client-server application in Java which is going to use <strong>private-key encryption</strong>.</p>

<p>Currently I have a class with a static object of the <code>Cipher</code> class which I initialise like this: <code>myCipher.init(Cipher.DECRYPT_MODE, secretKey, ivParameterSpec);</code>.</p>

<p>Now my question is: I have two-way communication, should I have a separate <code>Cipher</code> object for each way (one for encrypting and one for decrypting) and use the same initialisation vector? Or should I just use the same object and call <code>Cipher.init()</code> to change the modes depending on whether I am encrypting or decrypting?</p>

<p>It makes sense to have separate objects in my head, but I just wanted to be sure. I tried googling but most examples only show encryption one way.</p>

<p>Currently I send the initialisation vector to the server unencrypted, is this correct, or is there a security flaw?</p>

<p>Or am I approaching it completely the wrong way?</p>

<p>Thanks.</p>
","<p>Your question is two fold:</p>

<ol>
<li><p>You should use one object. This saves memory. But if memory is spendable, go ahead with two. At least that'll make your code more readable.</p></li>
<li><p>IV needs not encrypted. IV is a random value, sync'd by both the sender and receiver. The most important thing about IV is it must not be repeated, or re-used, with the same key!</p></li>
</ol>
","1578","<java><encryption><private-key>","0","1","1","2011-05-16 12:02:27","6017041","2","","","","","2011-05-16 11:58:15",""
"45298354","how to sign a token with RSA SHA-256, in python?","<p>I am trying to encode a JWT with python, I need to encode it in base64, with i did. and then I have to sign it with a private key before sending to the server. actually I am blocked, when to sign it I don't know how, I am searching on the web since yesterday, I am little bit lost. here is my code. </p>

<pre><code>import jwt

print (""\nStart.."")

encoded = jwt.encode({'some': 'payload'}, 'secret', algorithm='HS256')

print(""\nJWT : "",encoded)

try:
    decoded = jwt.decode(encoded, 'secret', algorithms=['HS256'])
except jwt.InvalidTokenError:
    print(""Invalid token!!"")

print(""\ndecoded : "", decoded)

print(""\nencodage : "")

#LOAD THE PRIVATE KEY


#SIGN THE ENCODED token
</code></pre>

<p>and there is the format of my key, it is an RSA private key. </p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
dsjkfhsdfkshkdfhks...
-----END RSA PRIVATE KEY-----
</code></pre>

<p>I gave a certificate to the server crt.crt, i think i need to encrypt with my private key, and then they will be able to decrypt the message, with a key from the certificate, that is what i understood.</p>

<p>Thanks in advance, 
G. B</p>
","<p>You can try and refer :</p>

<pre><code>from Crypto.PublicKey import RSA
from Crypto.Cipher import HS256

def encrypt_text(input_text):
   utf8_text = input_text.encode('utf-8')
   pub_key = RSA.importKey(open(settings.RSA).read())
   cipher = HS256.new(public_key)
   cipher_text = base64.encodebytes(cipher.encrypt(utf8_text))
   return cipher_text.decode('utf-8')
</code></pre>

<p>Create Public and private key :</p>

<pre><code>ssh-keygen -t rsa -C ""your_email@example.com""
</code></pre>

<p>Hope helpful</p>
","1576","<python><jwt><private-key><sha256><rsa-sha256>","3","1","2","2018-09-13 20:47:02","","0","","","","","2017-07-25 08:51:50",""
"45298354","how to sign a token with RSA SHA-256, in python?","<p>I am trying to encode a JWT with python, I need to encode it in base64, with i did. and then I have to sign it with a private key before sending to the server. actually I am blocked, when to sign it I don't know how, I am searching on the web since yesterday, I am little bit lost. here is my code. </p>

<pre><code>import jwt

print (""\nStart.."")

encoded = jwt.encode({'some': 'payload'}, 'secret', algorithm='HS256')

print(""\nJWT : "",encoded)

try:
    decoded = jwt.decode(encoded, 'secret', algorithms=['HS256'])
except jwt.InvalidTokenError:
    print(""Invalid token!!"")

print(""\ndecoded : "", decoded)

print(""\nencodage : "")

#LOAD THE PRIVATE KEY


#SIGN THE ENCODED token
</code></pre>

<p>and there is the format of my key, it is an RSA private key. </p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
dsjkfhsdfkshkdfhks...
-----END RSA PRIVATE KEY-----
</code></pre>

<p>I gave a certificate to the server crt.crt, i think i need to encrypt with my private key, and then they will be able to decrypt the message, with a key from the certificate, that is what i understood.</p>

<p>Thanks in advance, 
G. B</p>
","<p>according to the <a href=""https://tools.ietf.org/html/rfc7519"" rel=""nofollow noreferrer"">JWT RFC</a>, the algorithm type for RSA + SHA256 is ""RS256"", but you're using ""HS256""</p>
","1576","<python><jwt><private-key><sha256><rsa-sha256>","3","0","2","2018-09-13 20:47:02","","0","","","","","2017-07-25 08:51:50",""
"30136162","error when decrypt data","<p>I use RSA cryptography to Enc/Dec message 
Encryption is work well but when Decrypting I got This error on this line .</p>

<pre><code>rsa.Decrypt(dataByte, false);
</code></pre>

<blockquote>
  <p>Description: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code. </p>
  
  <p>Exception Details: System.Security.Cryptography.CryptographicException: The parameter is incorrect.</p>
</blockquote>

<p>code  is:</p>

<pre><code>string en=   x509_Encrypt(Current_Record_Hmac, PFXFile, s_pass);
string de=  ByteToString( X509_Decrypt(en, PFXFile, s_pass));


public static byte[] X509_Decrypt(string data, string certificateFile, string password)
 {

      var dataArray = data.Split(new char[] { ',' });
      byte[] dataByte = new byte[dataArray.Length];
      for (int i = 0; i &lt; dataArray.Length; i++)
      {
          dataByte[i] = Convert.ToByte(dataArray[i]);
      }


      X509Certificate2 cert = new X509Certificate2(certificateFile, password);
      var rsa = new RSACryptoServiceProvider();    
      var x509_privateKey = cert.PrivateKey;
      string pri = x509_privateKey.ToString();   
      string x509_privateKey_ToString = x509_privateKey.ToString();   
      string X509_publicKey = ByteToString(cert.GetPublicKey());
      x509_privateKey_ToString = rsa.ToXmlString(true);
      X509_publicKey = rsa.ToXmlString(false);       
      rsa.FromXmlString(x509_privateKey_ToString);
      var decryptedByte = rsa.Decrypt(dataByte, false);
      return (decryptedByte);                
  }

  public string x509_Encrypt(string input, string certificateFile, string password)
  {


      var dataToEncrypt = _encoder.GetBytes(input);           
      var encoding = new System.Text.ASCIIEncoding();

      X509Certificate2 cert = new X509Certificate2(certificateFile, password);
      var x509_privateKey = cert.PrivateKey;
      string x509_privateKey_ToString = ByteToString(encoding.GetBytes(x509_privateKey.ToString()));

      string X509_publicKey = ByteToString(cert.GetPublicKey());


     //Encrypting the text using the public key
      RSACryptoServiceProvider cipher = new RSACryptoServiceProvider();
      x509_privateKey_ToString = cipher.ToXmlString(true);
      X509_publicKey = cipher.ToXmlString(false);      
      cipher.FromXmlString(X509_publicKey);

     var encryptedByteArray = cipher.Encrypt(dataToEncrypt, false).ToArray();
     var length = encryptedByteArray.Count();
     var item = 0;
     var sb = new StringBuilder();
     foreach (var x in encryptedByteArray)
     {
         item++;
         sb.Append(x);

         if (item &lt; length)
             sb.Append("","");
     }

     return sb.ToString();

  }
</code></pre>
","<p>You cannot just convert bytes to characters like that. If you want to transmit the ciphertext as a string you need to use an encoding such as base 64 encoding and decode before decryption.</p>
","1572","<c#><encryption><private-key><pfx>","1","0","2","2015-05-13 13:12:39","","0","","1816580","","2015-05-09 09:31:05","2015-05-09 04:54:50",""
"30136162","error when decrypt data","<p>I use RSA cryptography to Enc/Dec message 
Encryption is work well but when Decrypting I got This error on this line .</p>

<pre><code>rsa.Decrypt(dataByte, false);
</code></pre>

<blockquote>
  <p>Description: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code. </p>
  
  <p>Exception Details: System.Security.Cryptography.CryptographicException: The parameter is incorrect.</p>
</blockquote>

<p>code  is:</p>

<pre><code>string en=   x509_Encrypt(Current_Record_Hmac, PFXFile, s_pass);
string de=  ByteToString( X509_Decrypt(en, PFXFile, s_pass));


public static byte[] X509_Decrypt(string data, string certificateFile, string password)
 {

      var dataArray = data.Split(new char[] { ',' });
      byte[] dataByte = new byte[dataArray.Length];
      for (int i = 0; i &lt; dataArray.Length; i++)
      {
          dataByte[i] = Convert.ToByte(dataArray[i]);
      }


      X509Certificate2 cert = new X509Certificate2(certificateFile, password);
      var rsa = new RSACryptoServiceProvider();    
      var x509_privateKey = cert.PrivateKey;
      string pri = x509_privateKey.ToString();   
      string x509_privateKey_ToString = x509_privateKey.ToString();   
      string X509_publicKey = ByteToString(cert.GetPublicKey());
      x509_privateKey_ToString = rsa.ToXmlString(true);
      X509_publicKey = rsa.ToXmlString(false);       
      rsa.FromXmlString(x509_privateKey_ToString);
      var decryptedByte = rsa.Decrypt(dataByte, false);
      return (decryptedByte);                
  }

  public string x509_Encrypt(string input, string certificateFile, string password)
  {


      var dataToEncrypt = _encoder.GetBytes(input);           
      var encoding = new System.Text.ASCIIEncoding();

      X509Certificate2 cert = new X509Certificate2(certificateFile, password);
      var x509_privateKey = cert.PrivateKey;
      string x509_privateKey_ToString = ByteToString(encoding.GetBytes(x509_privateKey.ToString()));

      string X509_publicKey = ByteToString(cert.GetPublicKey());


     //Encrypting the text using the public key
      RSACryptoServiceProvider cipher = new RSACryptoServiceProvider();
      x509_privateKey_ToString = cipher.ToXmlString(true);
      X509_publicKey = cipher.ToXmlString(false);      
      cipher.FromXmlString(X509_publicKey);

     var encryptedByteArray = cipher.Encrypt(dataToEncrypt, false).ToArray();
     var length = encryptedByteArray.Count();
     var item = 0;
     var sb = new StringBuilder();
     foreach (var x in encryptedByteArray)
     {
         item++;
         sb.Append(x);

         if (item &lt; length)
             sb.Append("","");
     }

     return sb.ToString();

  }
</code></pre>
","<p>Try this for your decrypt method:</p>

<pre><code>    public string X509_Decrypt(string inputString, string pathToCertFile, string password)
    {
        if (inputString == null)
        {
            return null;
        }

        X509Certificate2 certificate = new X509Certificate2(pathToCertFile, password, X509KeyStorageFlags.MachineKeySet);

        try
        {
            var cryptoProvider = (RSACryptoServiceProvider)certificate.PrivateKey;
            int dwKeySize = cryptoProvider.KeySize;
            int blockSize = ((dwKeySize / 8) % 3 != 0) ? (((dwKeySize / 8) / 3) * 4) + 4 : ((dwKeySize / 8) / 3) * 4;
            int iterations = inputString.Length / blockSize;

            var arrayList = new ArrayList();
            for (int i = 0; i &lt; iterations; i++)
            {
                byte[] encryptedBytes = Convert.FromBase64String(
                    inputString.Substring(blockSize * i, blockSize));

                Array.Reverse(encryptedBytes);
                arrayList.AddRange(cryptoProvider.Decrypt(encryptedBytes, true));
            }

            return Encoding.UTF32.GetString(arrayList.ToArray(Type.GetType(""System.Byte"")) as byte[]);
        }
        catch (Exception ex)
        {
            throw new SystemException(ex.Message);
        }
    }
</code></pre>

<p>And try this for your encrypt message:</p>

<pre><code>    public string X509_Encrypt(string inputString, string pathToCertFile, string password)
    {
        if (inputString == null)
        {
            return null;
        }

        X509Certificate2 certificate = new X509Certificate2(pathToCertFile, password, X509KeyStorageFlags.MachineKeySet);

        try
        {
            // TODO: Add Proper Exception Handlers
            var rsaCryptoServiceProvider = (RSACryptoServiceProvider)certificate.PublicKey.Key;

            int keySize = rsaCryptoServiceProvider.KeySize / 8;
            byte[] bytes = Encoding.UTF32.GetBytes(inputString);
            int maxLength = keySize - 42;
            int dataLength = bytes.Length;
            int iterations = dataLength / maxLength;

            var stringBuilder = new StringBuilder();
            for (int i = 0; i &lt;= iterations; i++)
            {
                var tempBytes = new byte[ (dataLength - maxLength * i &gt; maxLength) ? maxLength : dataLength - maxLength * i];

                Buffer.BlockCopy(bytes, maxLength * i, tempBytes, 0, tempBytes.Length);
                byte[] encryptedBytes = rsaCryptoServiceProvider.Encrypt(tempBytes, true);
                Array.Reverse(encryptedBytes);
                stringBuilder.Append(Convert.ToBase64String(encryptedBytes));
            }
            return stringBuilder.ToString();
        }
        catch (Exception ex)
        {
            throw new SystemException(ex.Message);
        }
    }
</code></pre>
","1572","<c#><encryption><private-key><pfx>","1","1","2","2015-05-13 13:12:39","","0","","1816580","","2015-05-09 09:31:05","2015-05-09 04:54:50",""
"49057905","Calculating d value in RSA","<p>I saw a couple questions about this but most of them were answered in unhelpful way or didn't get a proper answer at all. <br/> I have these variables:</p>

<ul>
<li>p = 31</li>
<li>q = 23</li>
<li>e - public key exponent = 223</li>
<li>phi - (p-1)*(q-1) = 660
<br/></li>
</ul>

<p>Now I need to calculate <code>d</code> variable (which I know is equal 367). The problem is that I don't know how. I found this equation on the internet but it doesn't work (or I can't use it):</p>

<pre><code>e⋅d=1modϕ(n)
</code></pre>

<p>When I see that equation i think that it means this:</p>

<pre><code>d=(1modϕ(n))/e
</code></pre>

<p>But apparently it doesn't because 367 (1modϕ(n))/e = 1%660/223 = 1/223 != 367
<br/> Maybe I don't understand and I did something wrong - that's why I ask.</p>

<p>I did some more research and I found second equation:</p>

<pre><code>d=1/e mod ϕ(n)
or
d=e^-1 mod ϕ(n)
</code></pre>

<p>But in the end it gives the same result:
1/e mod ϕ(n) = 1/223 % 660 = 1/223 != 367</p>

<p>Then I saw some guy saying that to solve that equation you need <a href=""https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm"" rel=""nofollow noreferrer"">extended Euclidean algorithm</a> If anyone knows how to use it to solve that problem then I'd be very thankful if you help me.</p>
","<p>If you want to calculate something like a / b mod p, you can't just divide it and take division remainder from it. Instead, you have to find such b<sup>-1</sup> that b<sup>-1</sup> = 1/b mod p (b<sup>-1</sup> is a modular multiplicative inverse of b mod p). If p is a prime, you can use <a href=""https://en.wikipedia.org/wiki/Fermat%27s_little_theorem"" rel=""nofollow noreferrer"">Fermat's little theorem</a>. It states that for any prime p, a<sup>p</sup> = a mod p &lt;=> a<sup>(p - 2)</sup> = 1/a mod p. So, instead of a / b mod p, you have to compute something like a * b<sup>(p - 2)</sup> mod p. b<sup>(p - 2)</sup> can be computed in O(log(p))
 using <a href=""https://en.wikipedia.org/wiki/Exponentiation_by_squaring"" rel=""nofollow noreferrer"">exponentiation by squaring</a>. If p is not a prime, modular multiplicative inverse exists if and only if GCD(b, p) = 1. Here, we can use <a href=""https://en.wikipedia.org/wiki/Euclidean_algorithm#Extended_Euclidean_algorithm"" rel=""nofollow noreferrer"">extended euclidean algorithm</a> to solve equation bx + py = 1 in logarithmic time. When we have bx + py = 1, we can take it mod p and we have bx = 1 mod p &lt;=> x = 1/b mod p, so x is our b<sup>-1</sup>. If GCD(b, p) ≠ 1, b<sup>-1</sup> mod p doesn't exist.</p>

<p>Using either Fermat's theorem or the euclidean algorithm gives us same result in same time complexity, but the euclidean algorithm can also be used when we want to compute something modulo number that's not a prime (but it has to be coprime with numer want to divide by).</p>
","1565","<rsa><private-key><public-key>","1","0","1","2018-03-02 00:34:16","49058308","1","1","6923127","","2018-03-01 20:18:01","2018-03-01 20:08:48",""
"20143260","TortoiseGit asking for password on password-less login setup","<p>After months of uninterrupted password-less work, my TortoiseGit started to ask me for a password on some of my remotes, when pushing / pulling. I'm seeking a solution to fix this, as this can drive me crazy.</p>

<p><strong>To underline</strong>: I want to remain on SSH-based password-less login, so any solutions that assume <a href=""https://stackoverflow.com/a/14000229/1469208"">adding password to URL</a> or permanently <a href=""https://stackoverflow.com/a/17260660/1469208"">storing password in TortoiseGit configuration</a> is not an option for me.</p>

<p>What I found out so far:</p>

<ol>
<li><p>My problem is <em>not</em> related to GitHub; I don't use it in TortoiseGit and it happens on other remotes.</p></li>
<li><p>I <em>do have</em> SSH, not HTTPS, address as repo's URL and I <em>don't have</em> <code>git clone</code>-like stuff in it.</p></li>
<li><p>I <em>can</em> push/pull <em>the same</em> repository using Netbeans (and my Netbeans has <code>Select Configured Git Repository Location</code> option checked, so it uses the same remote configuration).</p></li>
<li><p>I <em>can't</em> push/pull remote using Git GUI, reason the same: asking for user password.</p></li>
<li><p>This is <em>not</em> related to a particular system or machine (SSH key), as it happens on both my work computer (32-bit Win 7) and home one (64-bit Win 7). Both of course uses different SSH key (see comment to <a href=""https://stackoverflow.com/a/8848529/1469208"">this answer</a>, which claims, that problem is related to 32-bit version of Windows; this is not true, it happens on 64-bit Windows as well).</p></li>
<li><p>Repository, this happens on, isn't empty -- I heard and even been personally affected, that sometimes TortoiseGit gets wako and asks for password on password-less login remote, until that remote is empty.</p></li>
<li><p>This is <em>not</em> related to a particular remote -- TortoiseGit works fine, without asking for password on some repositories (i.e. BitBucket) but ""dies"" asking for it on some other (i.e. in local dev network).</p></li>
</ol>

<p>To make things even worse, there are certain remotes, on which TortoiseGit on my home computer fails, asking for password, while the very same remote accessed from home computer works just fine. And vice-versa. I set both machines for password-less login using the same steps; only SSH keys differs.</p>

<p>Things I did so far (and didn't solve the problem):</p>

<ol>
<li><p>Changing SSH client (<code>TortoiseGit -&gt; Settings -&gt; Network</code>) to both <code>Git\bin\ssh.exe</code> (as suggested in <a href=""https://stackoverflow.com/a/8848529/1469208"">here</a>) and to <code>C:\Program Files\PuTTy\plink.exe</code>.</p></li>
<li><p>Using <a href=""https://stackoverflow.com/a/15351702/1469208"">credential helper</a> doesn't helped and I heard that it works for HTTPS only, not for SSL.</p></li>
<li><p><a href=""https://stackoverflow.com/a/14000482/1469208"">Downloading <code>git-credential-wincred.exe</code></a> and putting it to Git for Windows / msysgit folder didn't help as well; I've already had it there (different version / filesize; checked on both).</p></li>
<li><p>This issue is clearly bind to asking for user password, so <code>git did not exit cleanly (exit code 128)</code> error following it doesn't have any other source except missing password and most solutions given <a href=""https://stackoverflow.com/questions/9617336/how-to-resolve-git-did-not-exit-cleanly-exit-code-128-error-on-tortoisegit"">here</a>, like crashed git, locked file, missing user e-mail are not solution for me.</p></li>
</ol>

<p>OK, that's the farest point I've reached. And still nothing. Can anyone come up with something new, that I should try to solve this issue?</p>
","<p>I confirm that ""storing password"" or <code>_netrc</code> file, or any credential helpers are for https url only, and have <em>nothing</em> to do with SSH.</p>

<p>The usual debugging ssh steps apply, starting by <a href=""https://stackoverflow.com/a/13524792/6309"">making sure that <code>%HOME%</code> is defined when TortoiseGit is launched</a>, and <code>%HOME%/.ssh</code> exists, and contains the default keys <code>id_rsa</code> and <code>id_rsa.pub</code>.</p>

<p>In a git bash session, you can do a <code>ssh -Tvvv yourRemoteServer</code> to see what the debug error message sequence is, as <a href=""https://stackoverflow.com/a/922461/6309"">explained here</a>.</p>

<p>You also can check the result of a <code>GIT_TRACE=2 git push test master</code>, to see if the issue is limited to TortoiseGit and if the verbose output leaves any clue (<a href=""https://stackoverflow.com/a/16119444/6309"">see here</a>).<br>
Try <a href=""https://stackoverflow.com/q/13653319/6309"">switching ssh client between putty and openssh</a> to see if TortoiseGit fairs better with one or the other.</p>
","1562","<putty><private-key><tortoisegit>","5","2","2","2014-01-25 12:00:38","","0","2","-1","","2017-05-23 11:45:26","2013-11-22 11:02:15",""
"20143260","TortoiseGit asking for password on password-less login setup","<p>After months of uninterrupted password-less work, my TortoiseGit started to ask me for a password on some of my remotes, when pushing / pulling. I'm seeking a solution to fix this, as this can drive me crazy.</p>

<p><strong>To underline</strong>: I want to remain on SSH-based password-less login, so any solutions that assume <a href=""https://stackoverflow.com/a/14000229/1469208"">adding password to URL</a> or permanently <a href=""https://stackoverflow.com/a/17260660/1469208"">storing password in TortoiseGit configuration</a> is not an option for me.</p>

<p>What I found out so far:</p>

<ol>
<li><p>My problem is <em>not</em> related to GitHub; I don't use it in TortoiseGit and it happens on other remotes.</p></li>
<li><p>I <em>do have</em> SSH, not HTTPS, address as repo's URL and I <em>don't have</em> <code>git clone</code>-like stuff in it.</p></li>
<li><p>I <em>can</em> push/pull <em>the same</em> repository using Netbeans (and my Netbeans has <code>Select Configured Git Repository Location</code> option checked, so it uses the same remote configuration).</p></li>
<li><p>I <em>can't</em> push/pull remote using Git GUI, reason the same: asking for user password.</p></li>
<li><p>This is <em>not</em> related to a particular system or machine (SSH key), as it happens on both my work computer (32-bit Win 7) and home one (64-bit Win 7). Both of course uses different SSH key (see comment to <a href=""https://stackoverflow.com/a/8848529/1469208"">this answer</a>, which claims, that problem is related to 32-bit version of Windows; this is not true, it happens on 64-bit Windows as well).</p></li>
<li><p>Repository, this happens on, isn't empty -- I heard and even been personally affected, that sometimes TortoiseGit gets wako and asks for password on password-less login remote, until that remote is empty.</p></li>
<li><p>This is <em>not</em> related to a particular remote -- TortoiseGit works fine, without asking for password on some repositories (i.e. BitBucket) but ""dies"" asking for it on some other (i.e. in local dev network).</p></li>
</ol>

<p>To make things even worse, there are certain remotes, on which TortoiseGit on my home computer fails, asking for password, while the very same remote accessed from home computer works just fine. And vice-versa. I set both machines for password-less login using the same steps; only SSH keys differs.</p>

<p>Things I did so far (and didn't solve the problem):</p>

<ol>
<li><p>Changing SSH client (<code>TortoiseGit -&gt; Settings -&gt; Network</code>) to both <code>Git\bin\ssh.exe</code> (as suggested in <a href=""https://stackoverflow.com/a/8848529/1469208"">here</a>) and to <code>C:\Program Files\PuTTy\plink.exe</code>.</p></li>
<li><p>Using <a href=""https://stackoverflow.com/a/15351702/1469208"">credential helper</a> doesn't helped and I heard that it works for HTTPS only, not for SSL.</p></li>
<li><p><a href=""https://stackoverflow.com/a/14000482/1469208"">Downloading <code>git-credential-wincred.exe</code></a> and putting it to Git for Windows / msysgit folder didn't help as well; I've already had it there (different version / filesize; checked on both).</p></li>
<li><p>This issue is clearly bind to asking for user password, so <code>git did not exit cleanly (exit code 128)</code> error following it doesn't have any other source except missing password and most solutions given <a href=""https://stackoverflow.com/questions/9617336/how-to-resolve-git-did-not-exit-cleanly-exit-code-128-error-on-tortoisegit"">here</a>, like crashed git, locked file, missing user e-mail are not solution for me.</p></li>
</ol>

<p>OK, that's the farest point I've reached. And still nothing. Can anyone come up with something new, that I should try to solve this issue?</p>
","<p>The issue appeared yesterday and it took me 2-3 hours of trying all sorts of stuff to fix it. I also contacted server administrator, who claimed not to have done any changes in config in the past days. Hence I put bounty on this question. I also gave it a try today, but still negative. Finally, right now, I made another attempt just to copy the message to my friend, and, <strong>all of the sudden, all my repos started to work</strong>!</p>

<p>I am absolutely sure I didn't touch configs, it must have been some sort of timeout which took more than 16 hours. I have no idea what the problem was. All I can conclude is that waiting till the next day might help...</p>
","1562","<putty><private-key><tortoisegit>","5","2","2","2014-01-25 12:00:38","","0","2","-1","","2017-05-23 11:45:26","2013-11-22 11:02:15",""
"673604","Internet Explorer and client authetication","<p>I would like to have Intenet Explorer allow me to choose an identity when connecting to a client-authentication enabled web server.  </p>

<p>Currently I have my Tomcat web server configured to use client authentication.  I also have an ssl client accessing a keystore and successfully connecting to the web server.  However when trying to get IE 7 to successfully connect to the web server the methodology failed.  I did the following:  </p>

<p>I've created a pkcs12 file containing a private key as well as the associated digital certificate (it's currently self signed).  </p>

<p>I then went into IE Tools-Internet-Options-Content and imported the pkcs12 file into the personal certificate box.  When the browser attempts to make a connection with the web server, I get a popup message entitled ""Choose A Digital Certificate""  </p>

<p>HOWEVER the View-Certificate button is grayed out. I presume that this button should have allowed me to choose the certificate associated with the key-pair that I imported.  </p>

<ol>
<li>Why is it grayed out?  </li>
<li>Is the methodology for what I'm trying to accomplish all together different?</li>
</ol>

<p>thanks,
Mike</p>
","<p>I'll now answer my own question as I have found the problem.</p>

<p>I did not yet update the web server trust store with the CA certificate (same certificate as it is self signed).  I finally did this but only out of desperation as my only aim at this point was to be able to choose a certificate but not necessarily have the connection succeed.</p>

<p>Evidently the handshake workflow is such that IE knows which certificates the web server will trust so that if there are no matches, no certificate option is shown.  I would have thought that IE would allow you to pick any certificate and if it was not trusted by the web server then the connection would simply fail.  Interesting.</p>
","1556","<internet-explorer><authentication><certificate><private-key><pkcs#12>","1","1","1","2009-03-23 15:53:08","","1","","22459","&#211;lafur Waage","2009-03-23 14:39:33","2009-03-23 14:37:27",""
"23252726","How to convert Base64 encoded pkcs12 content to java.security.PrivateKey?","<p>I'm consuming Google Directory API via service account and I received a <code>pkcs12</code> key at service account creation.</p>

<p>Google does support two different ways to use this  as taking the key as <code>java.io.File</code> or <code>java.security.PrivateKey</code> and for PoC, I have used first way which is creating <code>GoogleCredential</code> object using the <code>java.io.File</code>,</p>

<pre><code>        GoogleCredential credential = new GoogleCredential.Builder()
                .setTransport(httpTransport)
                .setJsonFactory(jsonFactory)
                .setServiceAccountId(serviceAccountId)
                .setServiceAccountScopes(Arrays.asList(DirectoryScopes.ADMIN_DIRECTORY_USER))
                .setServiceAccountUser(serviceAccountUser)
                .setServiceAccountPrivateKeyFromP12File(serviceAccountPrivateKeyFile)
                .build();
</code></pre>

<p>It's working as expected but in my actual use case i cannot rely on filesystem so i cannot use first method. So i wanted to implement actual use case using second way which is using <code>java.security.PrivateKey</code> and would look like following when its done.</p>

<pre><code>    GoogleCredential credential = new GoogleCredential.Builder()
            .setTransport(httpTransport)
            .setJsonFactory(jsonFactory)
            .setServiceAccountId(serviceAccountId)
            .setServiceAccountScopes(Arrays.asList(DirectoryScopes.ADMIN_DIRECTORY_USER))
            .setServiceAccountUser(serviceAccountUser)
            .setServiceAccountPrivateKey(serviceAccountPrivateKey)
            .build();
</code></pre>

<p>Im my use case, i need make possible to upload the private key and store it in the database with base64 encoded. Now i need to pass that content of <code>pkcs12</code> key and create the <code>Googlecredential</code> object. To do i think the second option is the most suited way, but couldn't find any example to create java.security.PrivateKey from the base64 encoded content of the uploaded key.</p>

<p>Is that possible to create <code>java.security.PrivateKey</code> object from a base64 encoded content of <code>pkcs12</code> key?</p>

<p>Or is there any other way around to achieve my usecase?</p>

<p>Thanks in advance</p>

<p>DarRay</p>
","<p>java.securty.KeyStore takes any InputStream for the load() method, so you could create this using whatever method you have of obtaining the .p12 bytes.  Here's an alternate method I used.  While this is still using a file for the .p12 bytes, you could bring in a ByteArrayInputStream or any InputStream subclass:</p>

<pre><code>    private PrivateKey getPrivateKeyFromP12() {
        // Google p12 files all have ""notasecret"" as the pass and ""privatekey"" as the PK name
        String p12p = ""notasecret"";    // not cool!  Change this before exporting your .p12
        try {
            KeyStore keystore = KeyStore.getInstance(""PKCS12"");
            // This is where you'd adjust to bring in your .p12 bytes or chars
            // as an input stream.  Passwords are a char array!
            keystore.load(
                this.getClass().getClassLoader()
                        .getResourceAsStream(""the.p12""),
                p12p.toCharArray());
            // This key name is fixed by Google, but could be changed
            PrivateKey key = (PrivateKey) keystore.getKey(""privatekey"",
                p12p.toCharArray());
            return key;
        } catch (Exception e) {
            LOG.error(""Exception while trying to obtain private key"",e);
            return null;
        } 

    }
</code></pre>
","1545","<java><google-api-java-client><private-key><google-admin-sdk><pkcs#12>","1","0","1","2014-11-12 14:42:33","","0","","565835","","2014-04-25 14:53:05","2014-04-23 18:45:13",""
"50250582","Convert PKCS#1-formatted private key to PKCS#8-formatted private key by java","<p>I have a PKCS#1-formatted private key (generated by opendkim-genkey) like this</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----

Base64 encoded data

-----END RSA PRIVATE KEY-----
</code></pre>

<p>Now I have to use it in Java to generate java.security.PrivateKey</p>

<p>But Java only support PKCS#8-formatted private key.</p>

<p>I know there is a way to convert from PKCS#8 to PKCS#1 by Java (using Bouncycastle), but is there anyway convert from PKCS#1 to PKCS#8 by Java?</p>
","<p><strong>Disclaimer</strong>: I did not come up with this solution myself, it was written by marcoscottwright over at github. <a href=""https://gist.github.com/markscottwright/4bd563fa91e9a72bf1ce12a0ff6567aa"" rel=""nofollow noreferrer"">Find the original code here</a></p>

<hr>

<p>You can do so using BouncyCastle given you have a <code>PrivateKey k</code> object.</p>

<pre><code>try (ASN1InputStream asn1InputStream = new ASN1InputStream(k.getEncoded()))
{
    DERObject rsaPrivateKey = asn1InputStream.readObject();
    return new PrivateKeyInfo(new AlgorithmIdentifier(PKCSObjectIdentifiers.rsaEncryption), rsaPrivateKey).getDEREncoded();
}
</code></pre>
","1544","<java><private-key><pkcs#1><pkcs#8>","0","0","1","2018-05-09 10:15:48","50250867","3","","4823977","","2018-05-09 10:15:48","2018-05-09 10:00:53",""
"23840654","Adding users to Google Compute Engine","<p>I have managed to set up my server with a default user 'admin'. The sshKeys in the metadata is set with the following format, described in the google documentation.</p>

<pre><code>key: sshKeys 
value: admin:ssh-rsa XXXXXXXXXX
</code></pre>

<p>However, I am trying to add a new user to the system, hence I updated the metadata to the following</p>

<pre><code>key: sshKeys 
value: admin:ssh-rsa XXXXXXXXXX newuser:ssh-rsa YYYYYYYYY
</code></pre>

<p>This has worked perfectly for me on one instance of server that I have set up sometime back. However I was unable to set it up on the new one. Can someone help me out with this?</p>
","<p>To add users to the system, I removed changed the <code>sshKeys</code> metadata back to the original one, comprising values for only one user:</p>

<pre><code>key: sshKeys 
value: admin:ssh-rsa XXXXXXXXXX
</code></pre>

<p>Logged into the admin account, and added the new user using <code>useradd</code> command or whichever applicable to your own Linux distribution.</p>

<p>Under <code>/home/newuser</code>, I ran the following commands to create a new ssh folder (with reference from <a href=""https://stackoverflow.com/questions/15190391/ssh-directory-not-being-created"">.ssh directory not being created</a>)</p>

<pre><code>  mkdir ~/.ssh
  chmod 700 ~/.ssh
</code></pre>

<p>After which, I manually updated the ssh keys in the authorized_keys file location at <code>/home/newuser/.ssh/authorized_keys</code> and everything works perfectly!</p>
","1540","<ssh><debian><private-key><google-compute-engine>","1","2","1","2014-05-25 19:25:48","23851410","0","0","","","","2014-05-24 02:08:38",""
"14853590","Communicate with APNS from PHP","<p>I would like to communicate with the Apple Push Notification Service from a PHP script. 
But I keep getting following error:</p>

<blockquote>
  <p>Warning: stream_socket_client(): Unable to set private key file</p>
</blockquote>

<p>I have a .pem-file which looks like this:</p>

<pre><code>-----BEGIN CERTIFICATE-----
     Encrypted String
-----END CERTIFICATE-----
     Bag Attributes
     friendlyName: ...
     localKeyID: ...
     Key Attributes: ...
-----BEGIN RSA PRIVATE KEY-----
     Proc-Type: ...
     DEK-Info: ...

     Encrypted String
-----END RSA PRIVATE KEY-----
</code></pre>

<p>I am running the PHP script from sudo. It can find my <code>.pem file</code>, because if I remove it, I get a <code>""handshake failure""</code> error instead.</p>

<p>What could be wrong here?</p>
","<p>I recently made a script to send remote pushnotifications.
This is how I did it:</p>

<pre><code>  $message = ""A cool message!"";
  $deviceid = """";

  $count = 0;

  $ctx = stream_context_create();
  stream_context_set_option($ctx, 'ssl', 'local_cert', 'apns-dev.pem'); 

  $fp = stream_socket_client('ssl://gateway.sandbox.push.apple.com:2195', $err, $errstr, 60, STREAM_CLIENT_CONNECT, $ctx);

  if (!$fp) {
     echo 'Failed to connect ' . $err . $errstr;
  } else {

     $payloads['aps'] = array('alert' =&gt; $message, 'badge' =&gt; 1, 'sound' =&gt; 'default');
     $payload = json_encode($payloads);

     $msg = chr(0) . pack('n',32) . pack('H*', $deviceid) . pack('n',strlen($payload)) . $payload;
     fwrite($fp, $msg);
     $count += 1;
     fclose($fp);

  }   

  echo 'Sended: ' . $count;
</code></pre>
","1527","<php><ssl><apple-push-notifications><private-key>","0","1","2","2013-02-13 13:54:01","14855167","0","","1572528","","2013-02-13 12:45:39","2013-02-13 12:28:39",""
"14853590","Communicate with APNS from PHP","<p>I would like to communicate with the Apple Push Notification Service from a PHP script. 
But I keep getting following error:</p>

<blockquote>
  <p>Warning: stream_socket_client(): Unable to set private key file</p>
</blockquote>

<p>I have a .pem-file which looks like this:</p>

<pre><code>-----BEGIN CERTIFICATE-----
     Encrypted String
-----END CERTIFICATE-----
     Bag Attributes
     friendlyName: ...
     localKeyID: ...
     Key Attributes: ...
-----BEGIN RSA PRIVATE KEY-----
     Proc-Type: ...
     DEK-Info: ...

     Encrypted String
-----END RSA PRIVATE KEY-----
</code></pre>

<p>I am running the PHP script from sudo. It can find my <code>.pem file</code>, because if I remove it, I get a <code>""handshake failure""</code> error instead.</p>

<p>What could be wrong here?</p>
","<p>I got it working. It turns out I exported my private key which I generated for the push notifications instead of the corresponding certificate.</p>
","1527","<php><ssl><apple-push-notifications><private-key>","0","0","2","2013-02-13 13:54:01","14855167","0","","1572528","","2013-02-13 12:45:39","2013-02-13 12:28:39",""
"32365546","Use a .p12 File from classpath for GoogleCredential","<p>I am making a java command line application packaged in a single JAR file that uses some of Google's API.</p>

<p>I need to set up a GoogleCredential object from a private key ""Credentials.p12"".</p>

<pre><code>GoogleCredential credential = new GoogleCredential.Builder()
                    .setTransport(httpTransport)
                    .setJsonFactory(jsonFactory)
                    .setServiceAccountId(""xxxxx@developer.gserviceaccount.com"")
                    .setServiceAccountScopes(Arrays.asList(DirectoryScopes.ADMIN_DIRECTORY_GROUP, DirectoryScopes.ADMIN_DIRECTORY_USER, DirectoryScopes.ADMIN_DIRECTORY_ORGUNIT))
                    .setServiceAccountUser(emailAccount)
                    //THE CODE BELOW IS IMPORTANT: I need to change this
                    .setServiceAccountPrivateKeyFromP12File(new File(""Credentials.p12""))
                    .build();

        directory = new Directory.Builder(httpTransport, jsonFactory, credential)
                .setApplicationName(""My Cmd App"")
                .build();
</code></pre>

<p>Right now I was able to make it work, but the file ""Credentials.p12"" is located outside the packaged JAR file.</p>

<p>How do I make it work using a p12 file from inside the JAR? </p>

<p>From this <a href=""https://developers.google.com/api-client-library/java/google-api-java-client/reference/1.19.1/com/google/api/client/googleapis/auth/oauth2/GoogleCredential.Builder#setServiceAccountPrivateKey(java.security.PrivateKey)"" rel=""nofollow"">documentation</a>, the only other alternative that I think I can use is the method variant that uses a PrivateKey object. I am thinking of using InputStream to get the p12 file from the classpath:</p>

<pre><code>InputStream is = this.getClass().getResourceAsStream(""Credentials.p12"");
</code></pre>

<p>I absolutely have no idea how to do that. </p>

<p>Before you answer, please make sure that you have experience using the Google OAuth2 library. And Please, no hacks like copying the resource to a temporary file: the singular version of Credential.p12 should remain inside the JAR for a reason.</p>
","<p>After digging through the <code>GoogleCredential.Builder</code> class source code I realized the following:</p>

<ul>
<li>the password for the p12 file generated from Google's developer
console is always <code>""notasecret""</code> as well as the password for  the alias</li>
<li>the alias for the private key is always <code>""privatekey""</code></li>
</ul>

<p>using the following code to build the private key from the resource InputStream:</p>

<pre><code>KeyStore keystore = KeyStore.getInstance(""PKCS12"");
keystore.load(this.getClass().getClassLoader().getResourceAsStream(""Credentials.p12""), ""notasecret"".toCharArray());
PrivateKey pk = (PrivateKey)keystore.getKey(""privatekey"", ""notasecret"".toCharArray());
</code></pre>

<p>I was able to load the private key into the GoogleCredential Builder:</p>

<pre><code>GoogleCredential credential = new GoogleCredential.Builder()
                    .setTransport(httpTransport)
                    .setJsonFactory(jsonFactory)
                    .setServiceAccountId(""xxxxxx@developer.gserviceaccount.com"")
                    .setServiceAccountScopes(Arrays.asList(DirectoryScopes.ADMIN_DIRECTORY_GROUP, DirectoryScopes.ADMIN_DIRECTORY_USER, DirectoryScopes.ADMIN_DIRECTORY_ORGUNIT))
                    .setServiceAccountUser(emailAccount)
                    .setServiceAccountPrivateKey(pk) //&lt;----THIS
                    .build();
</code></pre>
","1507","<java><private-key><google-oauth2>","4","5","2","2019-05-23 20:18:42","32393892","3","","3239047","","2015-09-03 01:25:24","2015-09-03 01:19:24",""
"32365546","Use a .p12 File from classpath for GoogleCredential","<p>I am making a java command line application packaged in a single JAR file that uses some of Google's API.</p>

<p>I need to set up a GoogleCredential object from a private key ""Credentials.p12"".</p>

<pre><code>GoogleCredential credential = new GoogleCredential.Builder()
                    .setTransport(httpTransport)
                    .setJsonFactory(jsonFactory)
                    .setServiceAccountId(""xxxxx@developer.gserviceaccount.com"")
                    .setServiceAccountScopes(Arrays.asList(DirectoryScopes.ADMIN_DIRECTORY_GROUP, DirectoryScopes.ADMIN_DIRECTORY_USER, DirectoryScopes.ADMIN_DIRECTORY_ORGUNIT))
                    .setServiceAccountUser(emailAccount)
                    //THE CODE BELOW IS IMPORTANT: I need to change this
                    .setServiceAccountPrivateKeyFromP12File(new File(""Credentials.p12""))
                    .build();

        directory = new Directory.Builder(httpTransport, jsonFactory, credential)
                .setApplicationName(""My Cmd App"")
                .build();
</code></pre>

<p>Right now I was able to make it work, but the file ""Credentials.p12"" is located outside the packaged JAR file.</p>

<p>How do I make it work using a p12 file from inside the JAR? </p>

<p>From this <a href=""https://developers.google.com/api-client-library/java/google-api-java-client/reference/1.19.1/com/google/api/client/googleapis/auth/oauth2/GoogleCredential.Builder#setServiceAccountPrivateKey(java.security.PrivateKey)"" rel=""nofollow"">documentation</a>, the only other alternative that I think I can use is the method variant that uses a PrivateKey object. I am thinking of using InputStream to get the p12 file from the classpath:</p>

<pre><code>InputStream is = this.getClass().getResourceAsStream(""Credentials.p12"");
</code></pre>

<p>I absolutely have no idea how to do that. </p>

<p>Before you answer, please make sure that you have experience using the Google OAuth2 library. And Please, no hacks like copying the resource to a temporary file: the singular version of Credential.p12 should remain inside the JAR for a reason.</p>
","<p>Or you can just specify the key file when instantiating the the credential.</p>

<pre><code>GoogleCredential credential = new GoogleCredential.Builder()
            .setTransport(httpTransport)
            .setJsonFactory(JSON_FACTORY)
            .setServiceAccountId(SERVICE_ACCOUNT_EMAIL)
            .setServiceAccountPrivateKeyFromP12File(new File(KEY_FILE_LOCATION))
            .setServiceAccountScopes(AnalyticsScopes.all())
            .build();
</code></pre>
","1507","<java><private-key><google-oauth2>","4","0","2","2019-05-23 20:18:42","32393892","3","","3239047","","2015-09-03 01:25:24","2015-09-03 01:19:24",""
"14982273","Always asking password while SCPing a file to Linux Server from a Windows machine using Maven 2.2:","<p>I followed below steps:</p>

<ol>
<li><p>Created SSH key with userid ABC on windows machine using git bash.</p></li>
<li><p>Copied public key to linux server with userid root:</p>

<p><code>scp ~/.ssh/id_rsa.pub root@Linuxserver:~/.ssh/.</code></p>

<p>It asked for a password and copied the file.</p></li>
<li><p>SSH root@Linuxserver using git bash -> entered Linux server password -> logged in to linux server.</p></li>
<li><p>Copied public key to authorized_keys in .ssh of Linux server:</p>

<p><code>cat id_rsa.pub &gt;&gt; authorized_keys</code></p></li>
<li><p>SSH root@Linuxserver using git bash -> logs in without asking for password</p></li>
<li>SCP thru Maven doesn't work seamlessly and always asks for password. Even Linux root's password doesn't work and it keeps on asking for password again and again.</li>
</ol>

<p>Below in Maven setting's file:</p>



<pre class=""lang-xml prettyprint-override""><code>&lt;server&gt;
    &lt;id&gt;Linuxserver&lt;/id&gt;
    &lt;username&gt;ABC&lt;/username&gt;
    &lt;privateKey&gt;${user.home}/.ssh/id_rsa&lt;/privateKey&gt;
    &lt;filePermissions&gt;664&lt;/filePermissions&gt;
    &lt;directoryPermissions&gt;775&lt;/directoryPermissions&gt;
    &lt;configuration&gt;&lt;/configuration&gt;
&lt;/server&gt;
</code></pre>

<p>Below is excerpt from pom.xml:<br></p>

<pre class=""lang-xml prettyprint-override""><code>&lt;extensions&gt;
      &lt;extension&gt;
       &lt;groupId&gt;org.apache.maven.wagon&lt;/groupId&gt;
       &lt;artifactId&gt;wagon-ssh&lt;/artifactId&gt;
       &lt;version&gt;1.0-beta-6&lt;/version&gt;
     &lt;/extension&gt;
&lt;/extensions&gt;

...

&lt;plugin&gt;
      &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;
      &lt;artifactId&gt;wagon-maven-plugin&lt;/artifactId&gt;
      &lt;version&gt;1.0-beta-3&lt;/version&gt;
      &lt;configuration&gt;
         &lt;serverId&gt;Linuxserver&lt;/serverId&gt;
         &lt;fromFile&gt;${project.parent.basedir}/projectname/filename&lt;/fromFile&gt;
         &lt;url&gt;scp://Linuxserver.com/testdirectory&lt;/url&gt;
       &lt;/configuration&gt;
       &lt;executions&gt;
         &lt;execution&gt;
           &lt;id&gt;upload-file-to-server&lt;/id&gt;
           &lt;phase&gt;verify&lt;/phase&gt;
           &lt;goals&gt;
             &lt;goal&gt;upload-single&lt;/goal&gt;
           &lt;/goals&gt;
         &lt;/execution&gt;
       &lt;/executions&gt;
&lt;/plugin&gt;
</code></pre>

<p>I want SCP to happen without any user interaction. In nutshell, the problem seems to be Maven SCP not picking up the private key. </p>
","<p>Let us take an example :</p>

<p><code>localuser $ ssh remoteuser@server.com</code></p>

<p>Now SCP or SSH using checks two things(considering public key authorization):</p>

<ol>
<li><p>The private key of the using issuing the ssh command, usually ~/.ssh/id_rsa. In the example it would be /home/localuser/.ssh/id_rsa</p></li>
<li><p>The public key of the user, in the ~/.ssh/authorized_keys file of the user you are loggin in as. In our e.g. at remote server it would be /home/remoteuser/.ssh/authorized_keys</p></li>
</ol>

<p>I don't know much about Maven config but it seems like you are trying to login as ABC user, in which case ABC user should have the key of your localuser in it's authorized_keys file</p>
","1492","<maven><ssh><passwords><scp><private-key>","1","0","1","2018-04-03 12:43:02","","2","","474189","","2013-02-20 15:18:27","2013-02-20 14:27:32",""
"1699149","What are some efficient ways to generate challenge/response for a backdoor entry scheme?","<p>We have a system that uses password authentication to access a database, the usernames and encrypted passwords are stored in the database. when a user forgets their password, (or the administrator leaves for greener pastures) we want to be able to generate a new password for the current administrator or generate a new administrator.</p>

<p>We deal with our clients via telephone support. So we want to use this scenario:</p>

<p>user rings up - forgotten password.</p>

<p>client software generates a challenge code based on their site license</p>

<p>user tells phone support staff the challenge code</p>

<p>phone support staff give a response code</p>

<p>user enters challenge and response code, and goes in the backdoor (either new user created or password of current user reset)</p>

<p>We want the challenge/response to only work once, we dont want to leave the backdoor open.</p>

<p>how should we go about it?</p>
","<p>generate challenge code based on both site license and database stored password. With the new password, necessarily the next challenge code will be different. No backdoor.</p>
","1476","<c#><security><private-key><challenge-response>","1","0","2","2009-11-18 18:00:53","1699172","2","","1337","","2009-11-18 18:00:53","2009-11-09 04:52:11",""
"1699149","What are some efficient ways to generate challenge/response for a backdoor entry scheme?","<p>We have a system that uses password authentication to access a database, the usernames and encrypted passwords are stored in the database. when a user forgets their password, (or the administrator leaves for greener pastures) we want to be able to generate a new password for the current administrator or generate a new administrator.</p>

<p>We deal with our clients via telephone support. So we want to use this scenario:</p>

<p>user rings up - forgotten password.</p>

<p>client software generates a challenge code based on their site license</p>

<p>user tells phone support staff the challenge code</p>

<p>phone support staff give a response code</p>

<p>user enters challenge and response code, and goes in the backdoor (either new user created or password of current user reset)</p>

<p>We want the challenge/response to only work once, we dont want to leave the backdoor open.</p>

<p>how should we go about it?</p>
","<p><a href=""http://www.ietf.org/rfc/rfc4226.txt"" rel=""nofollow noreferrer"">RFC4226, HTOP</a></p>

<p>This is the theory behind PIN calculators and you can get different implementations for it, so that you even don't have to pick up the phone but the client can generate it herself, with a <a href=""http://sourceforge.net/projects/otp-j2me/"" rel=""nofollow noreferrer"">mobile phone</a> for example.</p>
","1476","<c#><security><private-key><challenge-response>","1","3","2","2009-11-18 18:00:53","1699172","2","","1337","","2009-11-18 18:00:53","2009-11-09 04:52:11",""
"37743315","Issue in generating private key","<p>Private key generation </p>

<pre><code>          public PrivateKey getStoredPrivateKey(String filePath) {
    PrivateKey privateKey = null;
    byte[] keydata = getKeyData(filePath);
    PKCS8EncodedKeySpec encodedPrivateKey = new PKCS8EncodedKeySpec(keydata);
    KeyFactory keyFactory = null;
    try {
        keyFactory = KeyFactory.getInstance(""RSA"");
    } catch (NoSuchAlgorithmException e) {
        e.printStackTrace();
    }
    try {
        System.out.println(""hello"");
        privateKey = keyFactory.generatePrivate(encodedPrivateKey);
    } catch (InvalidKeySpecException e) {
        e.printStackTrace();
    }
    return privateKey;
}
</code></pre>

<p>I am using it here</p>

<pre><code>  PrivateKey privateKey = new KryptoUtil().getStoredPrivateKey(privateKeyFilePath);
</code></pre>

<p>but its showing error</p>

<pre><code>    hello
    java.security.spec.InvalidKeySpecException:                          
    java.security.InvalidKeyException: IOException : version mismatch: (supported:     00, parsed:     03
at sun.security.rsa.RSAKeyFactory.engineGeneratePrivate(Unknown Source)
</code></pre>

<p>I am passing a (.p12) file in getStoredPrivateKey(String filePath) function.</p>

<p>why its giving error?</p>
","<p>P12 is is keystore type where multiple keys and certificates can be stored and a password can be used to protect them. You can search about P12 (PKCS12) on Internet. Your file is P12 file, so most likely it is PKCS12 format file.</p>

<p>To get private key from P12 file use below code. You need below things before calling this code.</p>

<blockquote>
  <p><strong>filePath</strong>. String path (absolute) of P12 file.</p>
  
  <p><strong>filePassword</strong>. It is a char[]. Represents password of p12 file.</p>
  
  <p><strong>keyPassword</strong>. It is a char[]. Represents password for private key. Most
  likely it is same as filePassword.</p>
  
  <p><strong>alias</strong>. A String. Represents by which alias a private key stored in P12
  archive/keystore.</p>
</blockquote>

<p>To check what is the alias of your private key you can use below command</p>

<pre><code>keytool -list -v -keystore &lt;yourfile&gt;.p12 -storetype pkcs12
</code></pre>

<p>It will ask for password then print multiple lines. Look for </p>

<pre><code>Entry Type: PrivatKeyEntry
</code></pre>

<p>There you will find the alias.</p>

<p>Initialize these variables and then use below code to get private key. You can also get Certificates/Public key associate with this key. Look for API of PrivateKeyEntry </p>

<pre><code>KeyStore keyStore = KeyStore.getInstance(""PKCS12"");
keyStore.load(new FileInputStream(filePath), filePassword);
PrivateKeyEntry keyEntry = (PrivateKeyEntry) ks.getEntry(alias, new KeyStore.PasswordProtection(keyPassword));
PrivateKey key = privateKeyEntry.getPrivateKey();
</code></pre>
","1467","<java><key><private-key><key-pair>","0","1","1","2016-06-10 10:28:04","","2","","","","","2016-06-10 08:20:39",""
"36572261","Encryption using public/private keys between mobile client and server PHP","<p><strong>Case 1:Encrypted Data from client to Server</strong></p>

<p>Need to create a public/private key in server.Public key provided to client.The client encrypts it with public key.The server decrypts it using the private key that was generated.</p>

<p><strong>Case2: But what about the case when the data from server is sent to the 
client side.??</strong></p>

<p>That  data should also be encrypted.Does the same public/private that was created for case 1 work or new key should be generated?can anybody please explain case2 for my requirements.</p>

<p>Thanks in advance.</p>
","<p>You can use public / private key encryption in any direction.</p>

<p>So your client can encrypt with public key, then the server can decrypt with private key.
If your server encrypts with private key, the client can decrypt with public key.</p>
","1463","<php><android><encryption><public-key-encryption><private-key>","1","0","2","2016-04-12 14:47:12","36572390","3","","","","","2016-04-12 11:41:03",""
"36572261","Encryption using public/private keys between mobile client and server PHP","<p><strong>Case 1:Encrypted Data from client to Server</strong></p>

<p>Need to create a public/private key in server.Public key provided to client.The client encrypts it with public key.The server decrypts it using the private key that was generated.</p>

<p><strong>Case2: But what about the case when the data from server is sent to the 
client side.??</strong></p>

<p>That  data should also be encrypted.Does the same public/private that was created for case 1 work or new key should be generated?can anybody please explain case2 for my requirements.</p>

<p>Thanks in advance.</p>
","<p>As outlined in this <a href=""https://paragonie.com/white-paper/2015-secure-php-data-encryption#crypto-seal"" rel=""nofollow"">white paper on secure data encryption</a> and its supporting material:</p>

<ol>
<li>Use HTTPS.</li>
<li>For a second layer of authenticated encryption, use <a href=""https://download.libsodium.org/doc/"" rel=""nofollow"">libsodium</a> (a modern, cross-platfrom cryptography library) with pinned public keys.</li>
</ol>

<h3>PHP Example</h3>

<p><strong>Key Generation</strong></p>

<pre><code>$bob_box_kp = \Sodium\crypto_box_keypair();
$bob_box_secretkey = \Sodium\crypto_box_secretkey($bob_box_kp);
$bob_box_publickey = \Sodium\crypto_box_publickey($bob_box_kp);
</code></pre>

<p><strong>Encryption</strong></p>

<pre><code>$anonymous_message_to_bob = \Sodium\crypto_box_seal(
    $message,
    $bob_box_publickey
);
</code></pre>

<p><strong>Decryption</strong></p>

<pre><code>$decrypted_message = \Sodium\crypto_box_seal_open(
    $anonymous_message_to_bob,
    $bob_box_kp
);
if ($decrypted_message === false) {
    // You have the wrong keypair or the message was tampered with.
}
</code></pre>

<h3>Android Example (using <a href=""https://github.com/ArteMisc/libstodium"" rel=""nofollow"">Libstodium</a>)</h3>

<p><strong>Key Generation</strong></p>

<pre><code>byte[] secret_key = new byte[Box.SECRETKEYBYTES];
byte[] public_key = new byte[Box.PUBLICKEYBYTES];
Box.keypair(public_key, secret_key);
</code></pre>

<p><strong>Encryption</strong></p>

<pre><code>Box.seal(
    ciphertextByteArray, // Output goes here
    plaintextByteArray,  // Your message
    public_key
);
</code></pre>

<p><strong>Decryption</strong></p>

<pre><code>Box.sealOpen(
    plaintextOutputByteArray, // Decrypted data goes here
    ciphertextByteArray,      // Encrypted message received over the wire
    public_key,
    secret_key
);
</code></pre>
","1463","<php><android><encryption><public-key-encryption><private-key>","1","2","2","2016-04-12 14:47:12","36572390","3","","","","","2016-04-12 11:41:03",""
"17776186","X.509 Self Signed Certificates","<p>I'm trying to understand more about X.509 Digital Certificates.  There seems to be lots of contradiction around.  I am using <code>Bouncy Castle</code> to generate a key pair, using</p>

<pre class=""lang-cs prettyprint-override""><code>public static void SaveToFile(X509Certificate newCert, AsymmetricCipherKeyPair kp, string filePath, string certAlias, string password)
{
    var newStore = new Pkcs12Store();
    var certEntry = new X509CertificateEntry(newCert);
    newStore.SetCertificateEntry(certAlias, certEntry);
    newStore.SetKeyEntry(certAlias, 
          new AsymmetricKeyEntry(kp.Private), new[] { certEntry });

    using (var certFile = File.Create(filePath))
        newStore.Save(certFile, password.ToCharArray(), new SecureRandom(new CryptoApiRandomGenerator()));
}
</code></pre>

<p>This saves the generated certificate to disk. Some articles tell us there is no need to password protect the certificate as there is no <code>PRIVATE KEY</code> stored in there. Then <a href=""https://stackoverflow.com/questions/5829812/x509-certificate-multi-passwords"">this article</a> says the certificate does indeed contain the <code>PRIVATE KEY</code>.</p>

<p>I guess I have two questions that will hopefully help me understand this:</p>

<ol>
<li>If I generate my keys in this way, should the password be the SAME as the passphrase for the <code>PRIVATE KEY</code>?</li>
<li>Do I distribute the X.509 certificate to prove the <code>PUBLIC KEY</code> is mine (being paired to my name in the certificate) or should the certificate be kept as safe and secret as the <code>PRIVATE KEY</code> and what use is a self-signed certificate?</li>
</ol>
","<p>Certificate is actually the block of information which binds your identity (i.e. your name, email, whatever else) to some public key. It is public so everyone can know that this key belongs to you.
So when you will sign something they will know that actually you signed this. 
The other thing is validating certificate - that's for what trusted root certificates are used.</p>

<p>Private key is your own secret information, and MUST be kept secret.</p>
","1463","<private-key><pki><public-key><x509>","0","0","2","2015-12-15 02:12:34","17818214","0","1","-1","","2017-05-23 10:31:25","2013-07-21 19:45:55",""
"17776186","X.509 Self Signed Certificates","<p>I'm trying to understand more about X.509 Digital Certificates.  There seems to be lots of contradiction around.  I am using <code>Bouncy Castle</code> to generate a key pair, using</p>

<pre class=""lang-cs prettyprint-override""><code>public static void SaveToFile(X509Certificate newCert, AsymmetricCipherKeyPair kp, string filePath, string certAlias, string password)
{
    var newStore = new Pkcs12Store();
    var certEntry = new X509CertificateEntry(newCert);
    newStore.SetCertificateEntry(certAlias, certEntry);
    newStore.SetKeyEntry(certAlias, 
          new AsymmetricKeyEntry(kp.Private), new[] { certEntry });

    using (var certFile = File.Create(filePath))
        newStore.Save(certFile, password.ToCharArray(), new SecureRandom(new CryptoApiRandomGenerator()));
}
</code></pre>

<p>This saves the generated certificate to disk. Some articles tell us there is no need to password protect the certificate as there is no <code>PRIVATE KEY</code> stored in there. Then <a href=""https://stackoverflow.com/questions/5829812/x509-certificate-multi-passwords"">this article</a> says the certificate does indeed contain the <code>PRIVATE KEY</code>.</p>

<p>I guess I have two questions that will hopefully help me understand this:</p>

<ol>
<li>If I generate my keys in this way, should the password be the SAME as the passphrase for the <code>PRIVATE KEY</code>?</li>
<li>Do I distribute the X.509 certificate to prove the <code>PUBLIC KEY</code> is mine (being paired to my name in the certificate) or should the certificate be kept as safe and secret as the <code>PRIVATE KEY</code> and what use is a self-signed certificate?</li>
</ol>
","<p>A PKCS#12 file can contain <strong><em>both</em></strong> the certificate and the private key.  They are, however, stored as separate, distinct objects.  The certificate itself has the <em>public key</em> embedded within it.  Since the certificate only contains the public key, it is considered ""public"" as well.  You can feel free to distribute the certificate, as it does not contain the <strong><em>private key</em></strong>, which should be kept confidential.  This is the basis of the security in asymmetric cryptography.</p>

<p>Because a PKCS#12 file contains <strong><em>both</em></strong> items, it is encrypted with a password to protect the private key within it.  That said, you would <em>use</em> the private key to prove that the <em>certificate</em> you distribute belongs to you.  For example, through the use of a digital signature on a document.</p>

<p>Hope that helps!</p>
","1463","<private-key><pki><public-key><x509>","0","1","2","2015-12-15 02:12:34","17818214","0","1","-1","","2017-05-23 10:31:25","2013-07-21 19:45:55",""
"3085675","How to add PrivateKeyUsage extension to a certificate using bouncycastle in java?","<p>i have an X509Certificate that i want to add extensions to... i want to add the PrivateKeyUsage extension, but i dont know how to create a PrivateKeyUsage object or how to give it notBefore &amp; notAfter values ... thanks</p>
","<p>You can do something like this,</p>

<pre><code>    Date notBeforeDate = new Date();
    Date notAfterDate = new Date(System.currentMillis() + 24L*3600*365*1000);

    PrivateKeyUsagePeriod pkup = new PrivateKeyUsagePeriod(notBeforeDate,
            notAfterDate);
    V3Extension[] v3 = {pkup};

    cert = CertificateFactory.createCertificate(subject, kp.getPublic(), issuer,
           kp.getPrivate(), algorithm, 1, v3);
</code></pre>
","1462","<java><x509certificate><bouncycastle><pki><private-key>","1","1","2","2010-06-29 11:09:12","3092163","0","1","","","","2010-06-21 14:47:36",""
"3085675","How to add PrivateKeyUsage extension to a certificate using bouncycastle in java?","<p>i have an X509Certificate that i want to add extensions to... i want to add the PrivateKeyUsage extension, but i dont know how to create a PrivateKeyUsage object or how to give it notBefore &amp; notAfter values ... thanks</p>
","<pre><code>Date from = new Date();
Date to = new Date(System.currentTimeMillis()+ 30*1000*60*60l);

ASN1EncodableVector v = new ASN1EncodableVector();
DERGeneralizedTime fromTime = new DERGeneralizedTime(from);    
v.add(new DERTaggedObject(false, 0, fromTime));

DERGeneralizedTime toTime = new DERGeneralizedTime(to);    
v.add(new DERTaggedObject(false, 1, toTime));

DERObject o = new DERSequence(v);    
PrivateKeyUsagePeriod pkup = PrivateKeyUsagePeriod.getInstance(o);    
v3CertGen.addExtension(x509Extensions.PrivateKeyUsagePeriod, false, pkup);
</code></pre>
","1462","<java><x509certificate><bouncycastle><pki><private-key>","1","2","2","2010-06-29 11:09:12","3092163","0","1","","","","2010-06-21 14:47:36",""
"22185412","remote mysql connection using private key in php","<p>I checked other threads but couldnt find an answer for this specific question.</p>

<p>To make things easier, here is the setup I use to connect to db using mysqlworkbench</p>

<pre><code>ssh hostname :somehostname.com:22
ssh username: ec2-user
ssh password : my private key password
ssh keyfile /Users/me/.ssh/id_rsa   : this is my private key stored on my local machine
mysql hostname: qa.cbhasfasupvz.us-east-1.rds.amazonaws.com
port: 3306
username: root
passowrd : mysql database password
</code></pre>

<p>my public key is set on the server already and I can connect to the database through mysqlworkbench.</p>

<p>But i need to connect to this database using the private key I have, from another server through php. So i can make some queries and present them in html tables etc.</p>

<p>My guess is to create a php file on my server, 
store my private key somewhere on this server safely.
connect to database using the private key, db location, password etc.</p>

<p>I am asking the connection code I need in that php file. This is what I would use if the db was located on the local server</p>

<pre><code>mysql_connect(""localhost"", ""root"", ""pass"") or die(mysql_error()) ;
mysql_select_db(""my_db"") or die(mysql_error()) ;
</code></pre>
","<p>If you wanna connect to the server remotely,use this command</p>

<pre><code>ssh -i private_key_file.cert user@host
</code></pre>

<p>and then connect to your mysql using </p>

<pre><code>mysql -u user -p
</code></pre>

<p>which prompts you to insert your password.</p>

<p>Practically, when you're connected like this,you can do whatever you need.</p>
","1448","<php><mysql><database><private-key>","0","-1","1","2014-03-05 00:08:31","","0","","","","","2014-03-04 23:29:28",""
"27232053","Creation of ECDSA private key given curve and private exponent?","<p>I am new to cryptopp and have been struggling for a while with the creation of  private keys for ECDSA signing.</p>

<p>I have a hex encoded private exponent <code>E4A6CFB431471CFCAE491FD566D19C87082CF9FA7722D7FA24B2B3F5669DBEFB</code>. This is stored as a string.</p>

<p>I want to use this to sign a text block using ECDSA.  My code looks a bit like this</p>

<pre><code>string Sig::genSignature(const string&amp; privKeyIn, const string&amp; messageIn)
{
   AutoSeededRandomPool prng;
   ECDSA&lt;ECP, SHA256&gt;::PrivateKey privateKey;
   privateKey.AccessGroupParameters().Initialize(ASN1::secp256r1());
   privateKey.Load(StringSource(privKeyIn, true, NULL).Ref());
   ECDSA&lt;ECP, SHA256&gt;::Signer signer(privateKey);

   // Determine maximum size, allocate a string with that size
   size_t siglen = signer.MaxSignatureLength();
   string signature(siglen, 0x00);

   // Sign, and trim signature to actual size
   siglen = signer.SignMessage(prng, (const byte *) messageIn.data(), (size_t) messageIn.length(),       (byte*)signature.data());
   signature.resize(siglen);
   cout &lt;&lt; signature.data() &lt;&lt; endl;
   return signature;
}
</code></pre>

<p>This code generates the following error in Visual studio on the when I try to do privateKey.load(...)</p>

<pre><code>First-chance exception at 0x7693C42D in DLLTest.exe: Microsoft C++ exception: CryptoPP::BERDecodeErr at memory location 0x0033EEA8.
Unhandled exception at 0x7693C42D in DLLTest.exe: Microsoft C++ exception: CryptoPP::BERDecodeErr at memory location 0x0033EEA8.
</code></pre>

<p>I am guessing I am doing something a bit stupid... any help would be great???</p>

<p>PS I had a similar issue using ECDH for GMAC generation but got round this by saving the key as a SECByteBlock but this 'trick' doesnt seem to work in this case.</p>
","<blockquote>
  <p>DLLTest.exe: Microsoft C++ exception: CryptoPP::BERDecodeErr ...</p>
</blockquote>

<p>You have a private exponent, and <em>not</em> a private key. So you should <em>not</em> call <code>Load</code> on it. That's causing the Crypto++ <code>BERDecodeErr</code> exception.</p>

<p>The answer is detailed on the <a href=""http://www.cryptopp.com/wiki/Ecdsa#Private_Key_2"" rel=""nofollow"">ECDSA wiki page</a>, but its not readily apparent. You need to perform the following to initialize the <code>privateKey</code> given the curve and exponent::</p>

<pre><code>string exp = ""E4A6CFB431471CFCAE491FD566D19C87082CF9FA7722D7FA24B2B3F5669DBEFB"";
exp.insert(0, ""0x"");

Integer x(exp.c_str());
privateKey.Initialize(ASN1::secp256r1(), x);
</code></pre>

<p>Prepending the <code>""0x""</code> ensures the <code>Integer</code> class will parse the ASCII string correctly. You can also append a <code>""h""</code> character to the string. You can see the parsing code for <code>Integer</code> class at <a href=""http://www.cryptopp.com/docs/ref/integer_8cpp_source.html"" rel=""nofollow"">Integer.cpp</a> around line 2960 in the <code>StringToInteger</code> function.</p>

<hr>

<p>Here's another way to do the same thing:</p>

<pre><code>string exp = ""E4A6CFB431471CFCAE491FD566D19C87082CF9FA7722D7FA24B2B3F5669DBEFB"";

HexDecoder decoder;
decoder.Put((byte*)exp.data(), exp.size());
decoder.MessageEnd();

Integer x;
x.Decode(decoder, decoder.MaxRetrievable());

privateKey.Initialize(ASN1::secp256r1(), x);
</code></pre>

<p>The <a href=""http://www.cryptopp.com/wiki/Hexdecoder"" rel=""nofollow""><code>HexDecoder</code></a> will perform the ASCII to binary conversion for you. The buffer held by the <code>HexDecoder</code> will then be consumed by the <code>Integer</code> using its <a href=""http://www.cryptopp.com/docs/ref/class_integer.html"" rel=""nofollow""><code>Decode (BufferedTransformation &amp;bt, size_t inputLen, Signedness=UNSIGNED)</code></a> method.</p>

<hr>

<p>And here is another way using <a href=""http://www.cryptopp.com/wiki/Hexdecoder"" rel=""nofollow""><code>HexDecoder</code></a> (Crypto++ is as bad as scripting languages at times :)...</p>

<pre><code>string exp = ""E4A6CFB431471CFCAE491FD566D19C87082CF9FA7722D7FA24B2B3F5669DBEFB"";
StringSource ss(exp, true /*punpAll*/, new HexDecoder);

Integer x;
x.Decode(ss, ss.MaxRetrievable());

privateKey.Initialize(ASN1::secp256r1(), x);
</code></pre>

<hr>

<p>After initializing the key, you should validate it:</p>

<pre><code>bool result = privateKey.Validate( prng, 3 );
if( !result ) { /* Handle error */ }
</code></pre>

<hr>

<p>This will output binary data:</p>

<pre><code>cout &lt;&lt; signature.data() &lt;&lt; endl;
</code></pre>

<p>If you want something printable/readable, run it though a Crypto++ <a href=""http://www.cryptopp.com/wiki/HexEncoder"" rel=""nofollow"">HexEncoder</a>.</p>
","1447","<c++><private-key><crypto++><ecdsa><signer>","2","2","2","2015-06-16 23:05:21","27232308","2","1","15541","","2014-12-02 05:22:13","2014-12-01 15:50:43",""
"27232053","Creation of ECDSA private key given curve and private exponent?","<p>I am new to cryptopp and have been struggling for a while with the creation of  private keys for ECDSA signing.</p>

<p>I have a hex encoded private exponent <code>E4A6CFB431471CFCAE491FD566D19C87082CF9FA7722D7FA24B2B3F5669DBEFB</code>. This is stored as a string.</p>

<p>I want to use this to sign a text block using ECDSA.  My code looks a bit like this</p>

<pre><code>string Sig::genSignature(const string&amp; privKeyIn, const string&amp; messageIn)
{
   AutoSeededRandomPool prng;
   ECDSA&lt;ECP, SHA256&gt;::PrivateKey privateKey;
   privateKey.AccessGroupParameters().Initialize(ASN1::secp256r1());
   privateKey.Load(StringSource(privKeyIn, true, NULL).Ref());
   ECDSA&lt;ECP, SHA256&gt;::Signer signer(privateKey);

   // Determine maximum size, allocate a string with that size
   size_t siglen = signer.MaxSignatureLength();
   string signature(siglen, 0x00);

   // Sign, and trim signature to actual size
   siglen = signer.SignMessage(prng, (const byte *) messageIn.data(), (size_t) messageIn.length(),       (byte*)signature.data());
   signature.resize(siglen);
   cout &lt;&lt; signature.data() &lt;&lt; endl;
   return signature;
}
</code></pre>

<p>This code generates the following error in Visual studio on the when I try to do privateKey.load(...)</p>

<pre><code>First-chance exception at 0x7693C42D in DLLTest.exe: Microsoft C++ exception: CryptoPP::BERDecodeErr at memory location 0x0033EEA8.
Unhandled exception at 0x7693C42D in DLLTest.exe: Microsoft C++ exception: CryptoPP::BERDecodeErr at memory location 0x0033EEA8.
</code></pre>

<p>I am guessing I am doing something a bit stupid... any help would be great???</p>

<p>PS I had a similar issue using ECDH for GMAC generation but got round this by saving the key as a SECByteBlock but this 'trick' doesnt seem to work in this case.</p>
","<p>for others looking for this later </p>

<pre><code>string genSignature(const string&amp; privKeyIn, const string&amp; messageIn)
{
    CryptoPP::Integer secretNumber(genSecretNumber(privKeyIn, messageIn));
    AutoSeededRandomPool secretNumberGenerator;

    if (encryptBase::debug)
    {
        cout &lt;&lt; ""secret number: "" &lt;&lt; secretNumber &lt;&lt; endl;
    }

    SecByteBlock message(convertHexStrToSecByteBlock(messageIn));
    ECDSA&lt;ECP, SHA256&gt;::PrivateKey privateKey;
    string exp(privKeyIn);
    exp.insert(0, ""0x"");
    Integer x(exp.c_str());
    privateKey.Initialize(ASN1::secp256r1(), x);
    AutoSeededRandomPool prng;
    if (!privateKey.Validate(prng, 3))
    {
        cout &lt;&lt; ""unable to verify key"" &lt;&lt; endl;
        return ""failed to verify key"";
    }

    ECDSA&lt;ECP, SHA256&gt;::Signer signer(privateKey);
    size_t siglen = signer.MaxSignatureLength();
    string signature(siglen, 0x00);
    siglen = signer.SignMessage(secretNumberGenerator, message.BytePtr(), message.size(),     (byte*)signature.data());
    signature.resize(siglen);

    string encoded;
    HexEncoder encoder;
    encoder.Put((byte *) signature.data(), signature.size());
    encoder.MessageEnd();
    word64 size = encoder.MaxRetrievable();
    if (size)
    {
        encoded.resize(size);
        encoder.Get((byte*)encoded.data(), encoded.size());
    }

    return encoded;
}
</code></pre>
","1447","<c++><private-key><crypto++><ecdsa><signer>","2","0","2","2015-06-16 23:05:21","27232308","2","1","15541","","2014-12-02 05:22:13","2014-12-01 15:50:43",""
"34917512","“System.Security.Cryptography.CryptographicException: Keyset does not exist” when reading private key from remote machine","<p>I am trying to decrypt some data using a certificate private key. It all works fine when the certificate is installed on the local machine (I am using a self signed certificate for testing and I have the private key for the certificate) but When I try to access the private key from a remote machine using the same code, I get the ""Keyset does not exist"" exception.</p>

<p>I am using a console application for testing, and I have made sure that my id have read permissions on the private key on the remote server. Here is the sample code I am using:</p>

<pre><code>var store = new X509Store(@""\\server1\My"", StoreLocation.LocalMachine);
store.Open(OpenFlags.ReadOnly);
var result = store.Certificates.Find(X509FindType.FindBySubjectName, ""server1.test.com"", false);
var certificate = result[0];
store.Close();

//This succeeds from both local and remote server
var rsaPublic = (RSACryptoServiceProvider)certificate.PublicKey.Key;

//This succeeds from local, but fails from remote server
var rsaPrivate = (RSACryptoServiceProvider)certificate.PrivateKey;
</code></pre>

<p>Here is the exception call stack</p>

<pre><code>Unhandled Exception: System.Security.Cryptography.CryptographicException: Keyset does not exist

   at System.Security.Cryptography.Utils.CreateProvHandle(CspParameters parameters, Boolean randomKeyContainer)
   at System.Security.Cryptography.Utils.GetKeyPairHelper(CspAlgorithmType keyType, CspParameters parameters, Boolean randomKeyContainer, Int32 dwKeySize, SafeProvHandle&amp; safeProvHandle, SafeKeyHandle&amp; safeKeyHandle)
   at System.Security.Cryptography.RSACryptoServiceProvider.GetKeyPair()
   at System.Security.Cryptography.RSACryptoServiceProvider..ctor(Int32 dwKeySize, CspParameters parameters, Boolean useDefaultKeySize)
   at System.Security.Cryptography.X509Certificates.X509Certificate2.get_PrivateKey()
   at RsaPoc.Program.Main(String[] args)
</code></pre>

<p>I have found a <a href=""https://stackoverflow.com/questions/21989024/system-security-cryptography-cryptographicexception-keyset-does-not-exist-whe"">similar</a> unanswered question on SO, but it is using un-managed code, whereas I am using the managed API, but both seems to be having the same root cause.</p>
","<p>We contacted Microsoft support for a solution and here is the response that we got:</p>

<ol>
<li><p>Why is the private key not available when the code is executed on server2?<br>
A: This is actually by design.  Certificate stores are different from private key storage.  While you can enumerate certificates remotely, private keys cannot be accessed remotely.  </p></li>
<li><p>Can this issue be fixed by giving the user extra privileges or by changes in group policy settings? 
A: No.  This doesn’t involve privileges or permission to the file.  </p></li>
<li><p>If not both of the above then can you suggest the suitable solution?<br>
A: 1. You can install the certificate on all machines so each one has a copy of the private key.<br>
            2. You can create a roaming domain user.  A roaming certificate is the only situation where private keys can be roamed between machines.
                 Roaming profiles are located on a server, when the user logs on, a temporary copy of the profile (including private key) is created.<br>
             3. Use a third party cryptographic provider.  There are some cryptographic providers that do allow remote private key access and cryptographic operations.</p></li>
</ol>
","1446","<c#><ssl-certificate><x509certificate><private-key><cryptoapi>","0","0","1","2016-02-01 07:11:27","35124801","0","","-1","","2017-05-23 11:59:15","2016-01-21 07:14:10",""
"19890576","Connecting with SSH to Amazon EC2 requires pwd","<p>I have just launched a new Amazon AWS EC2 instance. It is a Suse server.</p>

<p>I am attempting to connect to it through SSH using my private key. It has been 'Permanently added' to my 'to the list of known hosts.' with my private key. </p>

<p>However - </p>

<p>I am not logged in to the server. It is requesting a password. Though it is supposed to use my private key without a password. (as described here: <a href=""http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstancesLinux.html"" rel=""nofollow"">http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstancesLinux.html</a>)</p>

<p>What should I do?</p>

<p>--</p>

<p>More details:</p>

<p>I ran it again with debug: added <code>-v</code>: <code>ssh -v -i ...</code></p>

<p>These are the last few lines in the shell (up to here it seems to be fine) before I am asked for pwd:</p>

<pre><code>    debug1: Authentications that can continue: publickey,keyboard-interactive
    debug1: Next authentication method: publickey
    debug1: Trying private key: my-private-key.pem
    debug1: read PEM private key done: type RSA
    debug1: Authentications that can continue: publickey,keyboard-interactive
    debug1: Next authentication method: keyboard-interactive
</code></pre>
","<p>I have just solved this. It is a bit of a workaround. The problem may have been the type of server used, Suse. I used <code>ec2-user</code> for username, but it may be different for different servers. This is the one for Amazon Linux AMI (and also for Ubuntu I believe), but apparently not for Suse.
I stopped (/terminated) this instance, and launched a new AMI Amazon Linux server instance instead.</p>

<p>Connecting to SSH there worked like a charm. Using <code>ssh -v -i my-private-key.pem ec2-user@publicaddressblahblah.compute.amazonaws.com</code>
I was not asked for a pwd here.</p>
","1422","<amazon-web-services><ssh><amazon-ec2><private-key>","0","1","3","2014-07-28 19:32:11","","0","","1043612","","2013-11-10 14:06:03","2013-11-10 14:00:12",""
"19890576","Connecting with SSH to Amazon EC2 requires pwd","<p>I have just launched a new Amazon AWS EC2 instance. It is a Suse server.</p>

<p>I am attempting to connect to it through SSH using my private key. It has been 'Permanently added' to my 'to the list of known hosts.' with my private key. </p>

<p>However - </p>

<p>I am not logged in to the server. It is requesting a password. Though it is supposed to use my private key without a password. (as described here: <a href=""http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstancesLinux.html"" rel=""nofollow"">http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstancesLinux.html</a>)</p>

<p>What should I do?</p>

<p>--</p>

<p>More details:</p>

<p>I ran it again with debug: added <code>-v</code>: <code>ssh -v -i ...</code></p>

<p>These are the last few lines in the shell (up to here it seems to be fine) before I am asked for pwd:</p>

<pre><code>    debug1: Authentications that can continue: publickey,keyboard-interactive
    debug1: Next authentication method: publickey
    debug1: Trying private key: my-private-key.pem
    debug1: read PEM private key done: type RSA
    debug1: Authentications that can continue: publickey,keyboard-interactive
    debug1: Next authentication method: keyboard-interactive
</code></pre>
","<h1>If your local box is Linux</h1>

<p>The first thing you want to make sure of is that you have your key loaded into <code>ssh-agent</code> and into <code>ssh-add</code> (on your client machine).</p>

<pre><code>08:10:51 ~$ ssh-agent
SSH_AUTH_SOCK=/var/folders/ps/1dvr90bd6p3blnyrnpyxnryhv45qg1/T//ssh-K8VbUYmYYj4w/agent.9087; export SSH_AUTH_SOCK;
SSH_AGENT_PID=9088; export SSH_AGENT_PID;
echo Agent pid 9088;
</code></pre>

<p>Run each of these lines (to declare the variables you need). Then run <code>ssh-add</code>.</p>

<pre><code>08:17:33 ~$ ssh-add
Enter passphrase for /Users/kyle/.ssh/id_rsa:
Identity added: /Users/kyle/.ssh/id_rsa (/Users/kyle/.ssh/id_rsa)
</code></pre>

<p>To put it all in one line:</p>

<pre><code>$ eval `ssh-agent`; ssh-add
</code></pre>

<h1>Workaround to make sure you're loading the right key</h1>

<p>You can tell SSH to load a specific key using the <code>-i</code> option.</p>

<pre><code>$ ssh -i ~/.ssh/other_rsa ec2-user@&lt;ip&gt;
</code></pre>

<h1>Username woes</h1>

<p>If this is an Amazon Linux box, the user is <code>ec2-user</code>. For some AMIs, they have other users set up (<code>ubuntu</code> on ubuntu). Check the documentation to see if they have any specific requirements.</p>

<pre><code>$ ssh ubuntu@IP
</code></pre>
","1422","<amazon-web-services><ssh><amazon-ec2><private-key>","0","0","3","2014-07-28 19:32:11","","0","","1043612","","2013-11-10 14:06:03","2013-11-10 14:00:12",""
"19890576","Connecting with SSH to Amazon EC2 requires pwd","<p>I have just launched a new Amazon AWS EC2 instance. It is a Suse server.</p>

<p>I am attempting to connect to it through SSH using my private key. It has been 'Permanently added' to my 'to the list of known hosts.' with my private key. </p>

<p>However - </p>

<p>I am not logged in to the server. It is requesting a password. Though it is supposed to use my private key without a password. (as described here: <a href=""http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstancesLinux.html"" rel=""nofollow"">http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstancesLinux.html</a>)</p>

<p>What should I do?</p>

<p>--</p>

<p>More details:</p>

<p>I ran it again with debug: added <code>-v</code>: <code>ssh -v -i ...</code></p>

<p>These are the last few lines in the shell (up to here it seems to be fine) before I am asked for pwd:</p>

<pre><code>    debug1: Authentications that can continue: publickey,keyboard-interactive
    debug1: Next authentication method: publickey
    debug1: Trying private key: my-private-key.pem
    debug1: read PEM private key done: type RSA
    debug1: Authentications that can continue: publickey,keyboard-interactive
    debug1: Next authentication method: keyboard-interactive
</code></pre>
","<p>On trying with user ""root"", it worked for me.</p>

<p>ssh -i  root@server-name</p>

<p>The documentation says the user could be either ec2-user or root:
<a href=""http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstancesLinux.html"" rel=""nofollow"">http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstancesLinux.html</a></p>
","1422","<amazon-web-services><ssh><amazon-ec2><private-key>","0","0","3","2014-07-28 19:32:11","","0","","1043612","","2013-11-10 14:06:03","2013-11-10 14:00:12",""
"36024102","Script to generate unique token","<p>I need generate a public key and secret key.</p>

<p>Is the following code would be enough?</p>

<pre><code>&lt;?php

function genToken($salt) {
    $secret = openssl_random_pseudo_bytes(16);

    $apiKey = hash_hmac('sha256', $salt, $secret);
    $apiKey = base64_encode($apiKey);
    $apiKey = str_replace('=', '', $apiKey);

    return $apiKey;
}

$salt = 'UsernameEmail@gmail.com';
echo 'pk_' . genToken($salt);
echo ""\n"";
echo 'sk_' . genToken($salt);
echo ""\n"";
</code></pre>
","<p>Do not use as salt the user email because it can be guessed.Instead of doing it yourself with a risk of error use a library instead.</p>

<p>I suggest you to use this PHP library <a href=""https://github.com/IcyApril/CryptoLib"" rel=""nofollow noreferrer"">https://github.com/IcyApril/CryptoLib</a> (like proposed in this post :<a href=""https://stackoverflow.com/questions/18830839/generating-cryptographically-secure-tokens"">Generating cryptographically secure tokens</a>). This library enables you to generate a random string then to hash it using a salt by exposing very practical methods : </p>

<p>This example (provided by the documentation that you can find here : <a href=""https://cryptolib.ju.je/#intro"" rel=""nofollow noreferrer"">https://cryptolib.ju.je/#intro</a>) generate a salt to hash a token, that you can provide to your user as a key :</p>

<pre><code>&lt;?php
// Require the library
require_once('path/to/cryptolib.php');
// Generate a token of 16 char with the library by calling the randomString method.
$token = CryptoLib::randomString(16);
// Generate a salt with the library by calling the generateSalt method
$salt = CryptoLib::generateSalt();
// Hash the token with the salt that was generated
$hash = CryptoLib::hash($token, $salt);

// Salt and hash are then stored in the database.

// $hash and $salt are gotten later from the database, and the token is provided via a POST variable by the user
$isHashCorrect = CryptoLib::validateHash($hash, $_POST['token']);

// If isHashCorrect is true, the user has provided the correct token.
?&gt;
</code></pre>

<p>I hope it will help you.</p>
","1419","<php><security><token><private-key><public-key>","1","1","1","2016-03-16 00:01:58","","5","1","2109568","","2016-03-15 23:31:23","2016-03-15 23:20:26",""
"14133367","OpenSSL hanging when trying to encrypt","<p>I am hoping there is someone here who knows something about OpenSSL. I am completely new to OpenSSL and I'm trying to implement it to encrypt dynamically generated PayPal buttons for a web store. I have a PHP script that does this, however it was not working, so I decided to try to run the command in command prompt and realized that it is hanging when I try to encrypt. </p>

<p>I have generated a public certificate and a private key and also I have downloaded PayPal's public certificate.</p>

<p>This is the command I tried:</p>

<pre><code>(openssl smime -sign -signer C:\Users\MyName\Desktop\OpenSSLTest\my-pubcert.pem -inkey 
C:\Users\MyName\Desktop\OpenSSLTest\my-prvkey.pem -outform der -nodetach -binary 
C:\Users\MyName\Desktop\OpenSSLTest\DataToEncrypt.txt) | openssl smime -encrypt -des3 
-binary -outform pem C:\Users\MyName\Desktop\OpenSSLTest\paypal_cert.pem
</code></pre>

<p>When I run this command I get the following message:</p>

<pre><code>Loading 'screen' into random state -Loading 'screen' into random state -done done
</code></pre>

<p>At this point it hangs. Does anyone with any OpenSSL experience know why this is happening to me? Please keep in mind I have never used OpenSSL before so I might be overlooking something simple, which is why I hope someone can point me in the right direction.</p>

<p>I appreciate any suggestions! Thanks!</p>
","<p>You're missing an <code>-in</code> in the first half of the command, which is subsequently trying to read data from standard input (and thus hanging).</p>

<p>The correct command line should be </p>

<pre><code>openssl smime -sign -signer C:\Users\MyName\Desktop\OpenSSLTest\my-pubcert.pem -inkey 
C:\Users\MyName\Desktop\OpenSSLTest\my-prvkey.pem -outform der -nodetach -binary 
-in C:\Users\MyName\Desktop\OpenSSLTest\DataToEncrypt.txt | openssl smime -encrypt -des3 
-binary -outform pem C:\Users\MyName\Desktop\OpenSSLTest\paypal_cert.pem
</code></pre>

<p>Notice the addition of <code>-in</code> to line 3.</p>

<p>Then DataToEncrypt.txt will be correctly read as an input file.</p>
","1387","<openssl><rsa><public-key-encryption><private-key>","1","1","1","2013-01-04 04:09:21","14134136","0","","1676624","","2013-01-04 04:09:21","2013-01-03 05:08:45",""
"14577120","Using Java to Encrypt a private key","<p>I have a generated a private key using CertAndKeyGen class. Now I want to encrypt the private key with a password and use it as key while starting PostgreSQL server. Can some one please help me with java code to encrypt the private key, where googling dint help me out. Below is my code I use to generate Private Key.</p>

<pre><code>    CertAndKeyGen keypair = new CertAndKeyGen(""RSA"", ""SHA1WithRSA"", null);
    PrivateKey privKey = keypair.getPrivateKey();
</code></pre>

<p>Any help or suggestion will be really appreciated.</p>
","<pre><code>public class KeyEncryptExample {

    public static void main(String[] args) {
        try {
            String key = ""mariahussain""; // needs to be at least 8 characters for DES

            FileInputStream fis = new FileInputStream(""C:/Users/hussain.a/Desktop/original.txt"");
            FileOutputStream fos = new FileOutputStream(""C:/Users/hussain.a/Desktop/encrypted.txt"");
            encrypt(key, fis, fos);

            FileInputStream fis2 = new FileInputStream(""C:/Users/hussain.a/Desktop/encrypted.txt"");
            FileOutputStream fos2 = new FileOutputStream(""C:/Users/hussain.a/Desktop/decrypted.txt"");
            decrypt(key, fis2, fos2);
        } catch (Throwable e) {
            e.printStackTrace();
        }
    }

    public static void encrypt(String key, InputStream is, OutputStream os) throws Throwable {
        encryptOrDecrypt(key, Cipher.ENCRYPT_MODE, is, os);
    }

    public static void decrypt(String key, InputStream is, OutputStream os) throws Throwable {
        encryptOrDecrypt(key, Cipher.DECRYPT_MODE, is, os);
    }

    public static void encryptOrDecrypt(String key, int mode, InputStream is, OutputStream os) throws Throwable {

        DESKeySpec dks = new DESKeySpec(key.getBytes());
        SecretKeyFactory skf = SecretKeyFactory.getInstance(""DES"");
        SecretKey desKey = skf.generateSecret(dks);
        Cipher cipher = Cipher.getInstance(""DES""); // DES/ECB/PKCS5Padding for SunJCE

        if (mode == Cipher.ENCRYPT_MODE) {
            cipher.init(Cipher.ENCRYPT_MODE, desKey);
            CipherInputStream cis = new CipherInputStream(is, cipher);
            doCopy(cis, os);
        } else if (mode == Cipher.DECRYPT_MODE) {
            cipher.init(Cipher.DECRYPT_MODE, desKey);
            CipherOutputStream cos = new CipherOutputStream(os, cipher);
            doCopy(is, cos);
        }
    }

    public static void doCopy(InputStream is, OutputStream os) throws IOException {
        byte[] bytes = new byte[64];
        int numBytes;
        while ((numBytes = is.read(bytes)) != -1) {
            os.write(bytes, 0, numBytes);
        }
        os.flush();
        os.close();
        is.close();
    }

}
</code></pre>
","1367","<java><ssl><x509certificate><public-key-encryption><private-key>","0","0","1","2013-01-29 06:51:00","14577215","2","2","","","","2013-01-29 06:44:09","2013-05-16 08:22:40"
"19496950","Restore passphrase rsa/dsa keys","<p>I've installed new Ubuntu from scratch on my new machine and want to have an access to the remote host using <code>ssh</code>. The problem is that even if I have both public and private keys I forgot the passphrase used whilst creating keys because right after that I've passed it to <code>ssh-agent</code>. But I still have it (the <code>passphrase</code>) stored in the <code>ssh-agent</code> in my laptop. How can I restore the passphrase from <code>ssh-agent</code> if I have <code>root</code> access and both keys?</p>
","<p>As far as I understand it, the passphrase is used to encrypt the private key. ssh-agent doesn't remember the passphrase - it remembers the decrypted private key.</p>

<p>And, as a damienfrancois mentioned, it shouldn't remember it past a reboot.</p>

<p>If you wished to extract the decrypted private keys from <code>ssh-agent</code> itself, you would have to find a tool written to search the memory of the running process and locate keys. One such tool can be found <a href=""http://www.hsc.fr/ressources/breves/passe-partout.html.en"" rel=""nofollow"" title=""in-memory extraction of private keys"">here</a>, but you may well find it very challenging to use.</p>

<p>For a more practical answer, you can just delete your keys from <code>~/.ssh/id*</code>, make new ones that you know the passphrase for, and move on - for a new machine, you probably haven't gotten too reliant on them yet.</p>
","1361","<ssh><rsa><private-key><public-key><passphrase>","0","1","1","2013-10-21 16:53:22","19500361","3","","","","","2013-10-21 14:14:54",""
"25337188","Missing private key","<p>I add my ios developer account to xCode and I got this:</p>

<p><img src=""https://i.stack.imgur.com/PzsYf.png"" alt=""Missing private key""></p>

<p>I installed all certificates and provision profiles on my mac.</p>

<p>What does it mean and how can I solve it.</p>
","<p>Install the certificate on the same machine from which you've created your CSR. Then go to your KeyChain, expand the certificate, select both certificate and PrivateKey and export them to <code>.p12</code> format.</p>

<p>In your new machine import the <code>.p12</code> file. You'll have both <code>Certificate</code> along with <code>Private Key</code></p>
","1361","<ios><xcode><certificate><private-key><ios-provisioning>","0","1","1","2014-08-16 05:54:00","25337367","2","","","","","2014-08-16 05:23:01",""
"31954482","Why do I have to create a certificate request (CSR) from the private key?","<p>I am trying to create a Certificate Request (CSR) from the below method where I need to give the private key, my understanding is that CSR needs/contains only the public key information with the other details about the requestor like Company Name, etc. But if extract the public key and pass while creating the CSR it throws the below error, So I am wondering why it requires a private key , although I understand private key contains the public key as well , Is it just because the public key is  trusted  when it's with the private key in the form of key-pair or something else ?</p>

<pre><code>openssl genrsa -out ~/domain.com.ssl/domain.com.key 2048

openssl req -new -sha256 -key ~/domain.com.ssl/domain.com.key -out ~/domain.com.ssl/domain.com.csr
</code></pre>

<p>Trying to generate using public key:</p>

<pre><code>openssl rsa -in  domain.com.key.pem -pubout domain.publickey

openssl req -new -sha256 -key domain.publickey -out cert.csr

unable to load Private Key
140258108909384:error:0906D06C:PEM routines:PEM_read_bio:no start line:pem_lib.c:703:Expecting: ANY PRIVATE KEY
</code></pre>
","<p>The whole point of the certificate is to establish a relationship between the private key and you as the identity in the certificate.</p>

<ul>
<li>The CSR is signed by the private key and verified by the CA (with the public key in the CSR), so he knows you have that key pair.</li>
<li>So he verifies offline that you are who you say you are, own that domain, etc., then <em>he</em> signs it with <em>his</em> private key.</li>
<li>So then if a third party trusts <em>him,</em> he can trust what the certificate says, which is that its owner is who it says.</li>
<li>Then if he can establish that the peer he is talking to owns that certificate, via another signature in the SSL handshake using your private key, he knows that the peer is you. </li>
</ul>
","1356","<ssl><openssl><certificate><private-key><csr>","2","6","1","2018-04-02 19:15:50","","0","","1527018","","2018-04-02 19:15:50","2015-08-12 01:11:34",""
"16415458","Connect to server using smart card for client authentication","<p>We developed software where a GUI client connects to an openssl Server using either login/password or a client certificate. We have to implement a new solution which where the the connection establishment is performed by a smart card instead of an embedded certificate.</p>

<p>The problem is that the private key used to sign the client certificate is not exportable.
So, in the server, I don't know how to change the <code>ssl_ctx_use_privatekey_file</code> which takes the file containing the private key in the second argument .</p>

<p>Is it possible to deal with smart card authentication using the openssl library?</p>
","<p>Look into <a href=""https://www.openssl.org/docs/crypto/engine.html"" rel=""nofollow"">ENGINE</a> (and possibly <a href=""https://www.opensc-project.org/opensc/wiki/engine_pkcs11"" rel=""nofollow"">engine_pkcs11</a>)</p>
","1356","<openssl><certificate><smartcard><private-key>","2","0","1","2013-05-09 10:45:20","","1","0","589259","","2013-05-09 10:45:20","2013-05-07 09:18:51",""
"26561939","How to use id_rsa.pub file with JSch","<p>I am facing problem to connect a remote SFTP server using JSch(). I don't have any access or information about the remote server to connect except a <strong>id_rsa.pub</strong> file and the <strong>hostname</strong> and the <strong>host_ip_address</strong>. And the key in that file is registered as authorized key in the remote server. As I am able to login to the remote server from shell.</p>

<pre><code>sftp -o BindAddress=SOME_IP_ADDRRESS myUserName@HOST_IP_ADDR
</code></pre>

<p>Its working fine. But when I am trying the same with JSch, its not working. What I have done is:</p>

<ol>
<li><p>I have created a private key from the public key available in id_rsa.pub file using ssh keygen.</p></li>
<li><p>The public key format is </p>

<p><strong><code>ssh-rsa AA.... == someuser@something.com</code></strong></p></li>
<li><p>The private key I generated from keygen is like </p></li>
</ol>

<p>-----BEGIN RSA PRIVATE KEY-----</p>

<pre><code>  KIOPU.....
</code></pre>

<p>-----END RSA PRIVATE KEY-----</p>

<p>I am using this private key file with my <code>session.addIdentity(private_key_file_path);</code> </p>

<p>But it is giving auth_failure exception , am I doing something wrong</p>

<p>The code is:</p>

<pre><code>/* KEY_FILE_NAME = is a file with rsa public key */
ClassLoader classLoader = getClass().getClassLoader();
File file = new File(classLoader.getResource(KEY_FILE_NAME).getFile());
JSch jsch = new JSch();
jsch.addIdentity(file.getAbsolutePath());
Properties hash = new Properties();
hash.put(""StrictHostKeyChecking"", ""no"");
logger.debug(""SSh Server Host name &gt;&gt;"" + SSH_SERVER_HOST_NAME + "" || User Name &gt;&gt;"" +  SSH_SERVER_USER_NAME);

session = jsch.getSession(SSH_SERVER_USER_NAME, SSH_SERVER_HOST_NAME);
UserInfo ui = new MyUserInfo();
session.setUserInfo(ui);
session.setConfig(hash);
session.setPort(22);
session.setTimeout(45000);
session.setSocketFactory(new SocketFactory() 
{
    InputStream in = null;
    OutputStream out = null;

    public InputStream getInputStream(Socket socket) throws IOException 
    {
        if (in == null)
            in = socket.getInputStream();
        return in;
    }

    public OutputStream getOutputStream(Socket socket) throws IOException 
    {
        if (out == null)
            out = socket.getOutputStream();
        return out;
    }

    public Socket createSocket(String host, int port) throws IOException, UnknownHostException 
    {
       // The IP Addresses are changed ....
       // using the original IP in my code
        byte[] remoteIpAddr = new byte[] { (byte) 11,(byte) 11, 11, 11 }; 
        byte[] localIpAddr = new byte[] { 55, 55, 55, 55 };

        InetAddress remoteIp = InetAddress.getByAddress(remoteIpAddr);
        InetAddress localIp = InetAddress.getByAddress(localIpAddr);

        logger.debug(""remoteIp &gt;&gt;"" + remoteIp.toString());
        logger.debug(""localIp &gt;&gt;"" + localIp.toString());
        Socket socket = new Socket(remoteIp, 22, localIp, 0);
        logger.debug(""socket created &gt;&gt; "" + socket.toString());
        return socket;
    }
});
session.connect();
</code></pre>

<p>Please help, what I am doing wrong...</p>
","","1348","<java><ssh><sftp><jsch><private-key>","2","","0","2014-10-25 13:10:08","","4","2","850848","","2014-10-25 13:10:08","2014-10-25 11:38:10",""
"38159990","Generate CSR from private key or Key Store","<p>How can i generate CSR from the Key Store.</p>

<p>I have generated CSR from key pair. Below is my code.</p>

<pre><code>public static PKCS10CertificationRequest generateCSR(KeyPair keyPair, String cn) throws IOException,
        OperatorCreationException {
    String principal = String.format(CN_PATTERN, cn);

    ContentSigner signer = new JCESigner (keyPair.getPrivate(),DEFAULT_SIGNATURE_ALGORITHM);

    PKCS10CertificationRequestBuilder csrBuilder = new JcaPKCS10CertificationRequestBuilder(
            new X500Name(principal), keyPair.getPublic());
    ExtensionsGenerator extensionsGenerator = new ExtensionsGenerator();
    extensionsGenerator.addExtension(Extension.basicConstraints, true, new BasicConstraints(
            true));
    csrBuilder.addAttribute(PKCSObjectIdentifiers.pkcs_9_at_extensionRequest,
            extensionsGenerator.generate());
    Log.e(""csr builder "",""csr ""+csrBuilder.toString());
    PKCS10CertificationRequest csr = csrBuilder.build(signer);

    return csr;
}
</code></pre>

<p>But i cannot generate CSR from Keystore(Private Key).
Is there any way i can generate key pair from Keystore?</p>

<p>Please help me.Thanks in Advance.</p>
","<p>Your code is compatible with Android KeyStore. You just need to generate the <code>KeyPair</code> into the <code>Keystore</code></p>

<p>The KeyStore is available from Android 4.3 (API level 18). There are slight differences between versions</p>

<p><strong>Android >=18 &lt; 23</strong></p>

<pre><code>KeyPairGeneratorSpec spec = new KeyPairGeneratorSpec.Builder(context)
                .setAlias(alias)
                .setSubject(new X500Principal(""CN="" + alias + "", O=Android Authority""))
                .setSerialNumber(BigInteger.ONE)
                .setStartDate(start.getTime())
                .setEndDate(end.getTime())
                .build();

KeyPairGenerator kpg = KeyPairGenerator.getInstance(
                KeyProperties.KEY_ALGORITHM_RSA, ""AndroidKeyStore"");

kpg.initialize(spec);
KeyPair keyPair = kpg.generateKeyPair();
</code></pre>

<p><strong>Android >=23</strong></p>

<pre><code>KeyPairGenerator kpg = KeyPairGenerator.getInstance(
                KeyProperties.KEY_ALGORITHM_RSA, ""AndroidKeyStore"");


kpg.initialize(new KeyGenParameterSpec.Builder(
                alias,
                KeyProperties.PURPOSE_SIGN | KeyProperties.PURPOSE_VERIFY)
                .setDigests(KeyProperties.DIGEST_SHA256, KeyProperties.DIGEST_SHA512)
                .setSignaturePaddings(KeyProperties.SIGNATURE_PADDING_RSA_PKCS1)
                .build());

KeyPair keyPair = kpg.generateKeyPair();
</code></pre>
","1347","<android><keystore><private-key><public-key><csr>","3","2","2","2016-07-13 00:45:41","38210193","0","","","","","2016-07-02 12:08:31",""
"38159990","Generate CSR from private key or Key Store","<p>How can i generate CSR from the Key Store.</p>

<p>I have generated CSR from key pair. Below is my code.</p>

<pre><code>public static PKCS10CertificationRequest generateCSR(KeyPair keyPair, String cn) throws IOException,
        OperatorCreationException {
    String principal = String.format(CN_PATTERN, cn);

    ContentSigner signer = new JCESigner (keyPair.getPrivate(),DEFAULT_SIGNATURE_ALGORITHM);

    PKCS10CertificationRequestBuilder csrBuilder = new JcaPKCS10CertificationRequestBuilder(
            new X500Name(principal), keyPair.getPublic());
    ExtensionsGenerator extensionsGenerator = new ExtensionsGenerator();
    extensionsGenerator.addExtension(Extension.basicConstraints, true, new BasicConstraints(
            true));
    csrBuilder.addAttribute(PKCSObjectIdentifiers.pkcs_9_at_extensionRequest,
            extensionsGenerator.generate());
    Log.e(""csr builder "",""csr ""+csrBuilder.toString());
    PKCS10CertificationRequest csr = csrBuilder.build(signer);

    return csr;
}
</code></pre>

<p>But i cannot generate CSR from Keystore(Private Key).
Is there any way i can generate key pair from Keystore?</p>

<p>Please help me.Thanks in Advance.</p>
","<p>I presume you're talking about <code>java.security.KeyStore</code>. This abstraction requires that each stored <code>PrivateKey</code> has a corresponding chain of <code>Certificate</code> instances (one or more certificate). This means you should be able to create a <code>KeyPair</code> from a private key entry of <code>KeyStore</code>. For example, if the private key is stored under ""test"":</p>

<pre><code>String alias = ""test"";
KeyStore keyStore = KeyStore.getInstance(...);
keyStore.load(...;);
PrivateKey privateKey = (PrivateKey) keyStore.getKey(alias, null);
PublicKey publicKey = keyStore.getCertificate(alias).getPublicKey();
KeyPair keyPair = new KeyPair(publicKey, privateKey);
generateCsr(keyPair, ...);
</code></pre>
","1347","<android><keystore><private-key><public-key><csr>","3","0","2","2016-07-13 00:45:41","38210193","0","","","","","2016-07-02 12:08:31",""
"7563732","What is the best way to encode string by public-key in python","<p>Is there any way to encode string by public-key?</p>

<p>I found two packages, pycrypto and m2crypto.
But I can not find how to use them.</p>
","<p>To encode a string using public key:</p>

<pre><code>#!/usr/bin/env python 
from M2Crypto import RSA, X509

x509 = X509.load_cert(""recipient_cert.pem"")
rsa = x509.get_pubkey().get_rsa()
print rsa.public_encrypt(""your string to encrypt"", RSA.pkcs1_oaep_padding)
</code></pre>
","1344","<python><public-key-encryption><private-key><pycrypto>","0","1","1","2016-11-12 21:22:17","","4","0","520771","","2011-09-27 05:46:09","2011-09-27 02:59:16",""
"20180354","Change KeyPair for the whole Amazon OpsWorks stack","<p>I have an Amazon OpsWorks stack with EC2 instances. Now it has Default SSH key (.pem) which I have no access to. What I've tried:</p>

<ol>
<li>I've created a new one, saved it and did <code>chmod 600</code>.</li>
<li>Tried to change KeyPair for an instance and tried to <code>ssh -v -i path/to/.pem ubuntu@host</code> after restarting it: <code>permission denied (public key)</code> </li>
<li>Tried to change KeyPair for the whole stack at the <code>Stack Settings</code> page after restarting the whole stack: still getting <code>permission denied (public key)</code></li>
<li>Tried to change <code>ubuntu</code> to <code>ec2-user</code>. Still nothing!</li>
</ol>

<p>Noticed that keys changed at <a href=""https://console.aws.amazon.com/opsworks/home"" rel=""nofollow"">OpsWorks Home</a> but remained the same at <a href=""https://console.aws.amazon.com/ec2/v2/home#Instances%3a"" rel=""nofollow"">EC2 Management Console</a>. Strange.</p>

<p>Am I missing anything? Doing wrong? Any help appreciated. Thanks</p>
","<p>You cannot change the key associated with an instance after that instance has been created.</p>

<p>If you need access to an instance where you no longer have the key, create an AMI of the instance, and launch a new instance from that AMI with a new key.</p>
","1343","<amazon-web-services><ssh><amazon-ec2><private-key><aws-opsworks>","3","1","2","2013-11-25 17:47:29","20199623","0","2","","","","2013-11-24 20:09:02",""
"20180354","Change KeyPair for the whole Amazon OpsWorks stack","<p>I have an Amazon OpsWorks stack with EC2 instances. Now it has Default SSH key (.pem) which I have no access to. What I've tried:</p>

<ol>
<li>I've created a new one, saved it and did <code>chmod 600</code>.</li>
<li>Tried to change KeyPair for an instance and tried to <code>ssh -v -i path/to/.pem ubuntu@host</code> after restarting it: <code>permission denied (public key)</code> </li>
<li>Tried to change KeyPair for the whole stack at the <code>Stack Settings</code> page after restarting the whole stack: still getting <code>permission denied (public key)</code></li>
<li>Tried to change <code>ubuntu</code> to <code>ec2-user</code>. Still nothing!</li>
</ol>

<p>Noticed that keys changed at <a href=""https://console.aws.amazon.com/opsworks/home"" rel=""nofollow"">OpsWorks Home</a> but remained the same at <a href=""https://console.aws.amazon.com/ec2/v2/home#Instances%3a"" rel=""nofollow"">EC2 Management Console</a>. Strange.</p>

<p>Am I missing anything? Doing wrong? Any help appreciated. Thanks</p>
","<p>Like @chris said, there is no way to change the key associated with the instance. You will need to launch a new one with the new key assigned to it. </p>

<p>BUT If SSH access is what you need, don't bother trying to change or update the key associated with the instance. It has been a while since I stopped assigning keys to instances over allowing OpsWorks manage user access in the permissions section. </p>

<p>This gives you great flexibility because you don't need to share keys amongst users or start new instances every time you need to change or set a new SSH key. You can add or remove users any time, and you control who has SSH and/or Sudo access.</p>

<p>To start either grant one of your users access to OpsWorks or import IAM users: </p>

<p><img src=""https://i.stack.imgur.com/qkBJR.png"" alt=""Import-iam-user""></p>

<p>After access has been granted, ask the user to add their own public key in the ""My Settings"" > Edit page:</p>

<p><img src=""https://i.stack.imgur.com/OuMeH.png"" alt=""enter image description here""></p>

<p><img src=""https://i.stack.imgur.com/jaYQo.png"" alt=""enter image description here""></p>

<p>If you gave this user access to SSH all you have to do is wait for the recipes to finish running and the user will be able to connect to the instance like this:</p>

<pre><code> $ ssh -i ~/.ssh/[your-key-file] [user-name]@[instance-ip-address]
</code></pre>

<p>Note that any time you make changes to the permissions or settings section, recipes will be run in your instances updating the user access. </p>

<p>For more information on how to grant user permissions in OpsWorks see the <a href=""http://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html"" rel=""nofollow noreferrer"">AWS Documentation</a>  </p>
","1343","<amazon-web-services><ssh><amazon-ec2><private-key><aws-opsworks>","3","7","2","2013-11-25 17:47:29","20199623","0","2","","","","2013-11-24 20:09:02",""
"4704083","OS X Keychain: Extracting Private Keys -- possible?","<p>I am attempting to extract the raw bytes of a private key stored in a <code>SecKeyRef</code> on OS X. How would I go about doing this?</p>

<p>I have read <a href=""http://lists.apple.com/archives/apple-cdsa/2003/Sep/msg00008.html"" rel=""nofollow"">this</a> ~7 year old thread on the Apple CDSA discussion lists, but have found nothing more recent. I am not having the same issue as the original poster in that thread, but it might be on account of me doing the wrong thing. This is what I am currently trying (to no avail):</p>

<pre><code>SecKeyRef keyRef = ...;
CSSM_KEY *cssmKey = NULL;
CSSM_WRAP_KEY wrappedKey = {0};

CSSM_CSP_HANDLE cspHandle = 0;
CSSM_CC_HANDLE ccHandle = 0;

CSSM_ACCESS_CREDENTIALS *creds = NULL;
SecKeyGetCredentials(keyRef, CSSM_ACL_AUTHORIZATION_EXPORT_WRAPPED, kSecCredentialTypeDefault, &amp;creds);

// Tried the following, too.
//CSSM_ACCESS_CREDENTIALS *creds = malloc(sizeof(CSSM_ACCESS_CREDENTIALS));
//memset(creds, 0, sizeof(CSSM_ACCESS_CREDENTIALS));

SecKeyGetCSSMKey(keyRef, &amp;cssmKey);
SecKeyGetCSPHandle(keyRef, &amp;cspHandle);

CSSM_CSP_CreateSymmetricContext(cspHandle, 
    CSSM_ALGID_NONE,
    // Have also tried CSSM_ALGMODE_WRAP 
    CSSM_ALGMODE_NONE, 
    creds, 
    NULL, 
    NULL, 
    CSSM_PADDING_NONE, 
    0, 
    &amp;ccHandle);

CSSM_WrapKey(ccHandle, 
    creds, 
    key, 
    NULL, 
    &amp;wrappedKey);
</code></pre>

<p>The error code returned by <code>CSSM_WrapKey</code> is <code>CSSMERR_CSP_INVALID_KEYATTR_MASK</code>. Any ideas?</p>
","<p>I have found the reason I have been having issues: the key I was trying to extract had the <code>CSSM_KEYATTR_SENSITIVE</code> attributed enabled and I was attempting to perform a ""null wrap"", i.e. access the unobscured raw bytes.</p>

<p>Lines 285-287 of <a href=""http://www.opensource.apple.com/source/libsecurity_apple_csp/libsecurity_apple_csp-36859/lib/wrapKey.cpp"" rel=""nofollow"">libsecurity_apple_csp/lib/wrapKey.cpp</a> are as follows:</p>

<pre><code>if(isNullWrap &amp;&amp; (keyAttr &amp; CSSM_KEYATTR_SENSITIVE)) {
    CssmError::throwMe(CSSMERR_CSP_INVALID_KEYATTR_MASK);
}
</code></pre>

<p>If one has to extract a sensitive private key, it <strong>must</strong> be wrapped -- the default wrapping option for private keys as per the Apple CSP is <code>CSSM_KEYBLOB_WRAPPED_FORMAT_PKCS8</code>.  </p>
","1326","<security><macos><keychain><private-key>","0","1","1","2011-07-04 10:30:07","4721329","0","","","","","2011-01-16 06:00:09",""
"31793241","Transferring public and private key on mac","<p>How do I transfer both private / public keys from one mac to the other?</p>

<p>I know how to export the private key to .p12 with Keychain Access, and then when I double click it in the destination mac, it's added to Keychain Access.
However, when I export the public key to .pem file, double clicking it in the destination mac just spits out:</p>

<p><code>An error has occurred. Unable to import an item. The contents of this item cannot be retrieved.</code></p>

<p>When I tried <a href=""https://stackoverflow.com/questions/8874164/export-public-key-from-keychain-access"">the solution</a> of <code>security import pub.pem -k login.keychain</code>, it said <code>1 key imported.</code>, but it doesn't show on Keychain Access.</p>

<ul>
<li>Am I missing anything?</li>
<li>Should I not bother with transferring the public key?</li>
<li>Is importing just that private key enough?</li>
<li>Is the only way just <a href=""https://stackoverflow.com/questions/16847081/i-lost-my-public-key-can-i-recover-it-from-a-private-key"">recovering the public key from the private key</a>?</li>
</ul>

<p>Thanks</p>
","<p>According to <a href=""https://superuser.com/questions/704692/cant-import-public-key-into-osx-keychain"">this</a>, it looks like when running the <code>security import...</code> command, it's added to the keychain with the generic name <code>Imported Public Key</code>.</p>

<p>Now you just need to rename it to the relevant one (e.g. like the private key name).</p>
","1313","<macos><certificate><keychain><private-key><public-key>","1","0","1","2015-08-03 17:52:09","","0","","-1","","2017-05-23 12:17:16","2015-08-03 17:27:17",""
"39634920","how to get private key from exponent , modulus and private exponent in PHP?","<p>im new in <strong>PHP Crypto</strong> and im using openssl to do crypto operations. 
Openssl Rsa is need PEM format , but i have hexadecimal modulus(n) , private exponent(d) and public exponent (e).
How can i generate Private key from this components?
And sorry for my english.</p>
","<p>RSA private keys usually also have a bunch of other parameters too. The primes that were used to create the modulus (p and q) and other parameters to facilitate the use of the Chinese remainder theorem to speed up decryption. If you don't have that then I'd just create a public key. You might be able to replace PUBLIC with PRIVATE idk.</p>

<p>Anyway, here's some code (uses <a href=""http://phpseclib.sourceforge.net/"" rel=""nofollow"">phpseclib 1.0.3</a>):</p>

<pre><code>&lt;?php
include('Crypt/RSA.php');
include('Math/BigInteger.php');

$rsa = new Crypt_RSA();
$rsa-&gt;loadKey([
    'e' =&gt; new Math_BigInteger('...'), // base-10 by default
    'n' =&gt; new Math_BigInteger('...') // base-10 by default
]);

echo $rsa;
</code></pre>

<p>I used 15 as both e and n (which isn't actually a valid combo for RSA purposes but for demo purposes it's fine) and got this back:</p>

<pre><code>-----BEGIN PUBLIC KEY-----
MBowDQYJKoZIhvcNAQEBBQADCQAwBgIBDwIBDw==
-----END PUBLIC KEY-----
</code></pre>
","1308","<php><rsa><private-key>","0","0","1","2016-09-22 21:58:03","","4","","","","","2016-09-22 09:14:18",""
"30677234","Generate RSA key given modulus, public exponent and prime1","<p>So I have to generate a private key (RSA) given its bit length, the modulus, the first prime and the public exponent.</p>

<p>The problem is that I have the modulus and prime1 in hexadecimal pairs. I've tried doing it manually but the number gets really long (obviously). I've also tried to use the <code>openssl genpkey</code> but for RSA it doesn't have the parameters I'd need.</p>

<p>Does someone know any way to do it or I will have to operate manually in hex/binary?</p>
","<p>As James K Polk comments on the question, openssl doesn't support generating keys in this manner. You'll have to write a program yourself to do this.</p>

<p>For example, the following Java code would work. You'll need to handle the exceptions as well.</p>

<pre><code>BigInteger modulus = /* modulus here */;
BigInteger exponent = /* exponent here */;
KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
keyFactory.generatePrivate(new RSAPrivateKeySpec(modulus, exponent));
</code></pre>
","1306","<openssl><rsa><private-key>","1","-1","1","2019-06-05 18:09:08","","3","","608639","","2015-06-06 22:54:06","2015-06-05 23:24:18",""
"17678017","Java equivalent of ssh bash command","<p>I would like to execute</p>

<pre><code>ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=dev/null -i key.txt user@host 'cd some/directory; ./check status'
</code></pre>

<p>on Java and read the response it gives me. Can someone please tell me how I would go about doing this?<br>
As you see from the command, the problem is that I need to execute only one command, and I am using a private key to get into the server without using any passwords or anything of the kind. Any help will be immensely appreciated, I am bashing my head against the wall trying to solve this.</p>
","<p>You could use Runtime and Process:</p>

<pre><code>Process cmdProc = Runtime.getRuntime().exec(""ssh -o ..."");
</code></pre>

<p>Then you can process the output:</p>

<pre><code>BufferedReader outReader = new BufferedReader(
                              new InputStreamReader(cmdProc.getInputStream()));
String l;
while ((l= outReader.readLine()) != null) {
   // process standard output here
}
</code></pre>
","1300","<java><ssh><ssh-keys><private-key>","0","1","3","2013-07-16 13:57:41","17678085","1","","","","","2013-07-16 13:34:44","2013-07-17 13:07:09"
"17678017","Java equivalent of ssh bash command","<p>I would like to execute</p>

<pre><code>ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=dev/null -i key.txt user@host 'cd some/directory; ./check status'
</code></pre>

<p>on Java and read the response it gives me. Can someone please tell me how I would go about doing this?<br>
As you see from the command, the problem is that I need to execute only one command, and I am using a private key to get into the server without using any passwords or anything of the kind. Any help will be immensely appreciated, I am bashing my head against the wall trying to solve this.</p>
","<p>You can use the <code>Runtime</code> class and split the command into pieces, stored as element of a <code>String[]</code> array object. Then, pass this array as an argument of the <a href=""http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Runtime.html#exec%28java.lang.String%5B%5D%29"" rel=""nofollow"">Runtime#exec(String[] args)</a> method, which will automatically <em>execute the specified command and arguments in a separate process.</em></p>

<pre><code>public static void main(String[] args) throws IOException {
    Runtime rt = Runtime.getRuntime();
    String[] cmd = { ""/bin/ssh"", ""-o"", ""..."" };
    Process proc = rt.exec(cmd);
    BufferedReader is = 
          new BufferedReader(new InputStreamReader(proc.getInputStream()));
    String line;
    while ((line = is.readLine()) != null) {
        System.out.println(line);
    }
}
</code></pre>
","1300","<java><ssh><ssh-keys><private-key>","0","1","3","2013-07-16 13:57:41","17678085","1","","","","","2013-07-16 13:34:44","2013-07-17 13:07:09"
"17678017","Java equivalent of ssh bash command","<p>I would like to execute</p>

<pre><code>ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=dev/null -i key.txt user@host 'cd some/directory; ./check status'
</code></pre>

<p>on Java and read the response it gives me. Can someone please tell me how I would go about doing this?<br>
As you see from the command, the problem is that I need to execute only one command, and I am using a private key to get into the server without using any passwords or anything of the kind. Any help will be immensely appreciated, I am bashing my head against the wall trying to solve this.</p>
","<p>You can use java  ProcessBuilder  to execute any commands including ssh calls.</p>

<pre><code>//java 7

Process p = new ProcessBuilder(""ssh command here"", ""myArg"").start();
</code></pre>

<p>here is more information on process builder from O<a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/ProcessBuilder.html"" rel=""nofollow"">racle Java site</a></p>
","1300","<java><ssh><ssh-keys><private-key>","0","0","3","2013-07-16 13:57:41","17678085","1","","","","","2013-07-16 13:34:44","2013-07-17 13:07:09"
"45420848","KeyStore not saving to file","<p>I am trying to store multiple private keys in a JKS file using the Java KeyStore library. I created a method which writes and reads to the JKS file but the private key isn't being saved in the file. </p>

<p>When I store something into the KeyStore I can get all the aliases in the keystore and the new key is there. Once the method is closed and the same key is attempted to be pulled it does not find the key.</p>

<p>Main.java</p>

<pre><code>public static void main(String[] args) throws Exception {
    //Create keys
    main m = new main();
    m.getOrSetPrivateKey(""123"", ""123"", privateKey, false);

    PrivateKey p = m.getOrSetPrivateKey(""123"", ""123"", null, true);

    if (p.equals(c.getPriv_key()))
        System.err.println(""Equal"");
    else
        System.err.println(""Not equal !!!!!!!!"");

}


private synchronized PrivateKey getOrSetPrivateKey(String alias, String id, PrivateKey c, boolean read ) throws InterruptedException, IOException, KeyStoreException, NoSuchAlgorithmException, CertificateException, InvalidKeySpecException, NotSupportedException, UnrecoverableKeyException {
    PrivateKey key = null; 

    InputStream inpusStream = new FileInputStream(getFile2(Constants.JKS_PRIVATE_FILE_NAME));
    KeyStore keyStore = null;
    try {
        keyStore = KeyStore.getInstance(KeyStore.getDefaultType());
        keyStore.load(inpusStream, Constants.JKS_PRIVATE_FILE_PASSWORD);
    } finally {
        if (inpusStream != null)
            inpusStream.close();
    }
    Enumeration&lt;String&gt; s = keyStore.aliases();

    while (s.hasMoreElements())
        System.err.println(""[ "" + s.nextElement() + "" ]"");

    //Generate password for this private key
    char [] pass = getKeyPassword(c, alias, id);


    if (read == true) { //If reading/getting private key from file store
        boolean isKeyEntry = keyStore.isKeyEntry(alias);//Check if there is a key with the alias deviceSerialnumber
        if (!isKeyEntry) {//No key with this alias exists
            throw new KeyStoreException(""No key with alias "" + alias + "" exists!"");
        }

        key = (PrivateKey) keyStore.getKey(alias, pass);

    } else { //Writing/ saving key to the file store
        keyStore.setKeyEntry(alias, c , pass, new Certificate[] { createCertificate() });
        FileOutputStream out = new FileOutputStream(new File(Constants.JKS_PRIVATE_FILE_NAME), true);
        try { 
            keyStore.store(out, pass);

            System.out.println(""Alias exists = "" + keyStore.containsAlias(alias));
        } finally { 
            if (out != null)
                out.close();
        } 
    }

    s = keyStore.aliases();

    while (s.hasMoreElements())
        System.err.println(""( "" + s.nextElement() + "" )"");

    return key;
}
</code></pre>

<p>Output:</p>

<pre><code>[ mykey ]
( 123 )
( mykey )
Alias exists = true
[ mykey ]
Exception in thread ""main"" java.security.KeyStoreException: No key with alias 123 exists!
</code></pre>

<p>Why is the key not being saved to the JKS file file?</p>
","<p>You are appending to the existing keystore instead of replacing it because you are passing ""true"" to the FileOutputStream constructor.</p>

<pre><code>FileOutputStream out = new FileOutputStream(new File(Constants.JKS_PRIVATE_FILE_NAME), true);
</code></pre>

<p>Replace the line above with the following:</p>

<pre><code>FileOutputStream out = new FileOutputStream(new File(Constants.JKS_PRIVATE_FILE_NAME));
</code></pre>
","1297","<java><security><keystore><private-key>","0","3","2","2017-08-03 00:27:33","45421513","0","1","","","","2017-07-31 16:19:45",""
"45420848","KeyStore not saving to file","<p>I am trying to store multiple private keys in a JKS file using the Java KeyStore library. I created a method which writes and reads to the JKS file but the private key isn't being saved in the file. </p>

<p>When I store something into the KeyStore I can get all the aliases in the keystore and the new key is there. Once the method is closed and the same key is attempted to be pulled it does not find the key.</p>

<p>Main.java</p>

<pre><code>public static void main(String[] args) throws Exception {
    //Create keys
    main m = new main();
    m.getOrSetPrivateKey(""123"", ""123"", privateKey, false);

    PrivateKey p = m.getOrSetPrivateKey(""123"", ""123"", null, true);

    if (p.equals(c.getPriv_key()))
        System.err.println(""Equal"");
    else
        System.err.println(""Not equal !!!!!!!!"");

}


private synchronized PrivateKey getOrSetPrivateKey(String alias, String id, PrivateKey c, boolean read ) throws InterruptedException, IOException, KeyStoreException, NoSuchAlgorithmException, CertificateException, InvalidKeySpecException, NotSupportedException, UnrecoverableKeyException {
    PrivateKey key = null; 

    InputStream inpusStream = new FileInputStream(getFile2(Constants.JKS_PRIVATE_FILE_NAME));
    KeyStore keyStore = null;
    try {
        keyStore = KeyStore.getInstance(KeyStore.getDefaultType());
        keyStore.load(inpusStream, Constants.JKS_PRIVATE_FILE_PASSWORD);
    } finally {
        if (inpusStream != null)
            inpusStream.close();
    }
    Enumeration&lt;String&gt; s = keyStore.aliases();

    while (s.hasMoreElements())
        System.err.println(""[ "" + s.nextElement() + "" ]"");

    //Generate password for this private key
    char [] pass = getKeyPassword(c, alias, id);


    if (read == true) { //If reading/getting private key from file store
        boolean isKeyEntry = keyStore.isKeyEntry(alias);//Check if there is a key with the alias deviceSerialnumber
        if (!isKeyEntry) {//No key with this alias exists
            throw new KeyStoreException(""No key with alias "" + alias + "" exists!"");
        }

        key = (PrivateKey) keyStore.getKey(alias, pass);

    } else { //Writing/ saving key to the file store
        keyStore.setKeyEntry(alias, c , pass, new Certificate[] { createCertificate() });
        FileOutputStream out = new FileOutputStream(new File(Constants.JKS_PRIVATE_FILE_NAME), true);
        try { 
            keyStore.store(out, pass);

            System.out.println(""Alias exists = "" + keyStore.containsAlias(alias));
        } finally { 
            if (out != null)
                out.close();
        } 
    }

    s = keyStore.aliases();

    while (s.hasMoreElements())
        System.err.println(""( "" + s.nextElement() + "" )"");

    return key;
}
</code></pre>

<p>Output:</p>

<pre><code>[ mykey ]
( 123 )
( mykey )
Alias exists = true
[ mykey ]
Exception in thread ""main"" java.security.KeyStoreException: No key with alias 123 exists!
</code></pre>

<p>Why is the key not being saved to the JKS file file?</p>
","<p>The problem was in the <code>FileOutputStream</code> was pointing to the wrong file. </p>

<pre><code>FileOutputStream out = new FileOutputStream(new File(Constants.JKS_PRIVATE_FILE_NAME), true);
</code></pre>

<p>Should be using the <code>getFile2</code> method like this:</p>

<pre><code>FileOutputStream out = new FileOutputStream(getFile2(Constants.JKS_PRIVATE_FILE_NAME));
</code></pre>

<p>As Palamino pointed out, don't need to include <code>true</code> in the <code>FileOutputStream</code> constructor.</p>

<p>Also the key store should have been using the JKS file password, not the password that is generated by <code>getKeyPassword()</code>.</p>

<p>Changed this: </p>

<pre><code>keyStore.store(out, pass);
</code></pre>

<p>To use the JKS file password, like this:</p>

<pre><code>keyStore.store(out, Constants.JKS_PRIVATE_FILE_PASSWORD);
</code></pre>
","1297","<java><security><keystore><private-key>","0","-1","2","2017-08-03 00:27:33","45421513","0","1","","","","2017-07-31 16:19:45",""
"39696888","Unable to sign a file with nodejs crypto","<p>I've created a private Key with nodejs crypto and want to sign a file with this key.
My code is following: </p>

<pre><code>var ecdh = crypto.createECDH('brainpoolP512t1');
        ecdh.generateKeys();
        var key = ecdh.getPrivateKey('buffer');

        var data= fs.readFileSync(req.file.path);
        var sign = crypto.createSign('sha512');
        sign.update(data);
        var signature = sign.sign(key, 'hex');
</code></pre>

<p>But I get the error: </p>

<pre><code>Error: error:0906D06C:PEM routines:PEM_read_bio:no start line
    at Error (native)
    at Sign.sign (crypto.js:283:26)
    at /....js:32:27
    at Immediate.&lt;anonymous&gt; (/.../node_modules/multer/lib/make-middleware.js:52:37)
    at runCallback (timers.js:578:20)
    at tryOnImmediate (timers.js:554:5)
    at processImmediate [as _immediateCallback] (timers.js:533:5)
</code></pre>

<p>I know it has something to do with the key format, but I don't know how to fix this. Can anyone help?</p>

<p>UPDATE: 
I edited the privateKey to fit the pem format:</p>

<pre><code>var KEY_START = '-----BEGIN EC PRIVATE KEY-----\n';
var KEY_END = '\n-----END EC PRIVATE KEY-----';

const ecdh = crypto.createECDH('brainpoolP512t1');
            ecdh.generateKeys();
            var key =KEY_START + ecdh.getPrivateKey('base64') + KEY_END;        
            var data= fs.readFileSync(req.file.path);
            const sign = crypto.createSign('sha512');
            sign.update(data);
            var signature = sign.sign(key, 'hex');
</code></pre>

<p>And now I geht a different error: </p>

<pre><code>Error: error:0D07207B:asn1 encoding routines:ASN1_get_object:header too long
    at Error (native)
    at Sign.sign (crypto.js:283:26)
    at /...js:37:27
    at Immediate.&lt;anonymous&gt; (/.../node_modules/multer/lib/make-middleware.js:52:37)
    at runCallback (timers.js:578:20)
    at tryOnImmediate (timers.js:554:5)
    at processImmediate [as _immediateCallback] (timers.js:533:5)
</code></pre>
","<p>The key you sign the data with needs to be a valid PEM-encoded private key. The DH <code>getPrivateKey()</code> function does not return a key in this format, it returns the bare private key data.</p>

<p>Your options include:</p>

<ul>
<li>Generating a private key via the OpenSSL key generator utility or similar</li>
<li><p>Using third-party node modules to properly encode the private key as outlined in <a href=""https://tools.ietf.org/html/rfc5915"" rel=""nofollow"">RFC 5915</a>. Full example using the <code>asn1.js</code> and <code>bn.js</code> modules:</p>

<pre><code>var crypto = require('crypto');

var asn1 = require('asn1.js');
var BN = require('bn.js');

function toOIDArray(oid) {
  return oid.split('.').map(function(s) {
    return parseInt(s, 10)
  });
}

// Define ECPrivateKey from RFC 5915
var ECPrivateKey = asn1.define('ECPrivateKey', function() {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('parameters').explicit(0).objid().optional(),
    this.key('publicKey').explicit(1).bitstr().optional()
  );
});

// Generate the DH keys
var ecdh = crypto.createECDH('brainpoolP512t1');
ecdh.generateKeys();

// Generate the PEM-encoded private key
var pemKey = ECPrivateKey.encode({
  version: new BN(1),
  privateKey: ecdh.getPrivateKey(),
  // OID for brainpoolP512t1
  parameters: toOIDArray('1.3.36.3.3.2.8.1.1.14')
}, 'pem', { label: 'EC PRIVATE KEY' });

// Sign data
var sign = crypto.createSign('sha512');
sign.update('hello world');
var signature = sign.sign(pemKey, 'hex');

console.log('signature', signature);
</code></pre></li>
</ul>
","1289","<node.js><header><signature><private-key><elliptic-curve>","2","4","1","2018-06-15 10:24:20","39697032","0","1","5654908","","2016-09-26 10:59:12","2016-09-26 07:21:00",""
"17013022","Is it possible to sign a Passbook manifest using node.js and crypto?","<p>I'm trying to figure out how to sign an iOS Passbook pass manifest.json using node.js and crypto. It seems like it should be possible but I can't seem to create a proper signature.</p>

<p>Here's is what I've tried:</p>

<pre><code>var crypto = require(""crypto"");
var fs = require('fs');

var manifest = fs.readFileSync('manifest.json');
var pem = fs.readFileSync('passbookdemo.pem');
var key = pem.toString('ascii');

var sign = crypto.createSign('RSA-SHA256');
sign.update(manifest);
var sig = sign.sign(key);

fs.writeFileSync('signature');
</code></pre>

<p>I generated the passbookdemo.pem earlier using:</p>

<pre><code>openssl pkcs12 -in passbookdemo.p12 -out passbookdemo.pem -nodes
</code></pre>

<p>There is no passphrase associated with passbookdemo.pem.</p>

<p>One possible problem I can see is that I'm not incorporating the Apple developer relations certificate during the signing process, which I believe is a requirement.</p>

<p>Another possibility is that I'm using the incorrect argument in <code>crypto.createSign('RSA-SHA256');</code>. I'm not sure what I should use instead.</p>

<p>Here's a sample of ruby code that Apple supplied that I was able to use to sign the manifest correctly.</p>

<pre><code>def sign_manifest
    puts ""Signing the manifest""
    # Import the certificates
    p12_certificate = OpenSSL::PKCS12::new(File.read(self.certificate_url), self.certificate_password)
    wwdr_certificate = OpenSSL::X509::Certificate.new(File.read(self.wwdr_intermediate_certificate_path))

    # Sign the data
    flag = OpenSSL::PKCS7::BINARY|OpenSSL::PKCS7::DETACHED
    signed = OpenSSL::PKCS7::sign(p12_certificate.certificate, p12_certificate.key, File.read(self.manifest_url), [wwdr_certificate], flag)

    # Create an output path for the signed data
    self.signature_url = self.temporary_path + ""/signature""

    # Write out the data
    File.open(self.signature_url, ""w"") do |f|
        f.syswrite signed.to_der
    end
end
</code></pre>

<p>Some related resources:</p>

<ul>
<li><a href=""https://stackoverflow.com/questions/12683189/how-to-use-nodejs-crypto-to-sign-a-file"">How to use NodeJS crypto to sign a file?</a></li>
<li>Signing a pass using openssl - <a href=""https://github.com/assaf/node-passbook/blob/master/lib/pass.js#L342"" rel=""nofollow noreferrer"">https://github.com/assaf/node-passbook/blob/master/lib/pass.js#L342</a></li>
<li>Crypto docs - <a href=""http://nodejs.org/api/crypto.html#crypto_class_sign"" rel=""nofollow noreferrer"">http://nodejs.org/api/crypto.html#crypto_class_sign</a></li>
<li><a href=""https://stackoverflow.com/questions/12650075/cannot-generate-apple-passbook-signature?rq=1"">Cannot generate Apple Passbook signature</a></li>
</ul>
","<p>I know it's been five years since this was written but I came across it and thought it deserved an answer. 
Yes it is possible.
<a href=""https://github.com/destinationstransfers/passkit/blob/master/bin/passkit-keys"" rel=""nofollow noreferrer"">Here is an example script</a> that calls <code>openssl</code> from node.</p>
","1284","<node.js><certificate><digital-signature><private-key><passbook>","4","1","1","2018-07-10 12:42:38","51265545","0","1","-1","","2017-05-23 11:58:13","2013-06-09 18:53:47",""
"3026827","OpenSSL.NET can't export private key with null Cipher","<p>I've recently discovered <a href=""http://sourceforge.net/projects/openssl-net/"" rel=""nofollow noreferrer"">OpenSSL.NET</a> and it's a pretty sweet little wrapper.</p>

<p>I'm trying to execute the following code:</p>

<pre><code>    public static void DoSomething(byte[] buf)
    {
        OpenSSL.Core.BIO input = new OpenSSL.Core.BIO(buf);
        OpenSSL.X509.X509Certificate b = OpenSSL.X509.X509Certificate.FromPKCS12(input, ""passphrase"");
        OpenSSL.Core.BIO outs = OpenSSL.Core.BIO.MemoryBuffer(false);
        b.PrivateKey.WritePrivateKey(outs, OpenSSL.Crypto.Cipher.Null, ""passphrase"");
        outs.SetClose(OpenSSL.Core.BIO.CloseOption.Close);
        Console.WriteLine(outs.ReadString());
    }
</code></pre>

<p>Problem comes at the ""b.PrivateKey.WritePrivateKey(.."" line.  I want to write the private key out without any encryption.  According to spec, if I use a Null cipher type this should do the trick, but it never works, regardless of the cert I use in buf.</p>

<p>Here's the exception:</p>

<p>error:0D0A706C:asn1 encoding routines:PKCS5_pbe2_set:cipher has no object identifier
error:2307D00D:PKCS12 routines:PKCS8_encrypt:ASN1 lib</p>

<p>I know this part works fine because if I specify any other cipher type, it exports the private key without fail.  Anyone have any suggestions?</p>
","<p>I don't really use that but perhaps this may help:</p>

<blockquote>
  <p>If OpenSSL is being compiled for a
  development system in which SSL will
  be debugged at the protocol level,
  omitting the command
  -DSSL_FORBID_ENULLis acceptable. -DSSL_FORBID_ENULL causes OpenSSL to omit null ciphers in the SSL cipher
  suite. Null ciphers permit cleartext
  (unencrypted information) to traverse
  the wire. Null ciphers provide no
  confidentiality and aren't encouraged
  for use on production systems.</p>
</blockquote>
","1281","<.net><openssl><private-key>","1","0","2","2010-06-21 17:53:22","3086223","0","1","","","","2010-06-11 23:14:47",""
"3026827","OpenSSL.NET can't export private key with null Cipher","<p>I've recently discovered <a href=""http://sourceforge.net/projects/openssl-net/"" rel=""nofollow noreferrer"">OpenSSL.NET</a> and it's a pretty sweet little wrapper.</p>

<p>I'm trying to execute the following code:</p>

<pre><code>    public static void DoSomething(byte[] buf)
    {
        OpenSSL.Core.BIO input = new OpenSSL.Core.BIO(buf);
        OpenSSL.X509.X509Certificate b = OpenSSL.X509.X509Certificate.FromPKCS12(input, ""passphrase"");
        OpenSSL.Core.BIO outs = OpenSSL.Core.BIO.MemoryBuffer(false);
        b.PrivateKey.WritePrivateKey(outs, OpenSSL.Crypto.Cipher.Null, ""passphrase"");
        outs.SetClose(OpenSSL.Core.BIO.CloseOption.Close);
        Console.WriteLine(outs.ReadString());
    }
</code></pre>

<p>Problem comes at the ""b.PrivateKey.WritePrivateKey(.."" line.  I want to write the private key out without any encryption.  According to spec, if I use a Null cipher type this should do the trick, but it never works, regardless of the cert I use in buf.</p>

<p>Here's the exception:</p>

<p>error:0D0A706C:asn1 encoding routines:PKCS5_pbe2_set:cipher has no object identifier
error:2307D00D:PKCS12 routines:PKCS8_encrypt:ASN1 lib</p>

<p>I know this part works fine because if I specify any other cipher type, it exports the private key without fail.  Anyone have any suggestions?</p>
","<p>Why can't you use:</p>

<pre><code>    OpenSSL.Core.BIO outs = OpenSSL.Core.BIO.MemoryBuffer(false);
    outs.Write(b.PrivateKey.ToString());
    outs.SetClose(OpenSSL.Core.BIO.CloseOption.Close);
    Console.WriteLine(outs.ReadString());
</code></pre>

<p>this way you can write unencrypted keys.</p>

<p>I see, change that to:</p>

<pre><code>    OpenSSL.Core.BIO outs = OpenSSL.Core.BIO.MemoryBuffer(false);
    outs.Write(b.PrivateKey.GetRSA().PrivateKeyAsPEM);
    outs.SetClose(OpenSSL.Core.BIO.CloseOption.Close);
    Console.WriteLine(outs.ReadString());
</code></pre>
","1281","<.net><openssl><private-key>","1","1","2","2010-06-21 17:53:22","3086223","0","1","","","","2010-06-11 23:14:47",""
"16068830","Dumping public key from private using libopenssl","<p>Let say I want to have a code doing something like this openssl command in my c++ application. </p>

<pre><code>openssl rsa -in private.pem -pubout -outform der -out ./out.pub
</code></pre>

<p>How can I do that?</p>

<p>I was look for a sample on github and came up with follow scheme.</p>

<pre><code>key  = PEM_read_bio_RSAPrivateKey(bio, NULL, 0, NULL);
len = i2d_RSAPublicKey(key, &amp;bufp);
</code></pre>

<p>It returns different value than I'm getting from command line tool. I suppose there was no conversion from private key to public and it just saves the private key. Could any one tell me the right approach for getting pub key from private using openssl lib. I would also greatly appreciate any links to pub\priv key examples for openssl.</p>
","<p>Finally I've just find proper sources inside openssl itself. Here is exactly what happens during </p>

<blockquote>
  <p>openssl rsa -in private.pem -pubout -outform der -out ./out.pub</p>
</blockquote>

<p>I've dropped lots of checks from original code to make it smaller.</p>

<pre><code>#include &lt;openssl/pem.h&gt;
#include &lt;openssl/x509.h&gt;

EVP_PKEY *load_key(const char *file)
{
    BIO *key=NULL;
    EVP_PKEY *pkey=NULL;

    key=BIO_new(BIO_s_file());
    BIO_read_filename(key,file);
    pkey=PEM_read_bio_PrivateKey(key,NULL,NULL,NULL);

    return pkey;
}

int _tmain(int argc, _TCHAR* argv[])
{
    BIO *out=NULL;
    out=BIO_new(BIO_s_file());
    EVP_PKEY    *pkey;
    RSA *rsa=NULL;

    char *infile = path_to_pem;
    char *outfile = path_to_der;

    pkey = load_key(infile);

    if (pkey != NULL)
        rsa = EVP_PKEY_get1_RSA(pkey);
    EVP_PKEY_free(pkey);

    BIO_write_filename(out,outfile);

    i2d_RSA_PUBKEY_bio(out,rsa);
}
</code></pre>
","1277","<c++><openssl><rsa><private-key><public-key>","1","1","1","2013-04-18 11:10:49","","1","","","","","2013-04-17 19:44:01",""
"16811024","How to use putty private key file to make sftp connection","<p>I'm able to connect to sftp site using username and password by using below code:</p>

<pre><code>FtpWebRequest reqFTP;
reqFTP = (FtpWebRequest)FtpWebRequest.Create(new Uri(""ftp://"" + ftpURI + ""/"" + clientFolder + ""/""));
reqFTP.UseBinary = true;
reqFTP.Credentials = new NetworkCredential(ftpUserID, ftpPassword);
</code></pre>

<p>But I'm not able to connect to sftp using username and .ppk file (putty private key file) and no password by using in built library of c#. Can you please help me by giving a small example to conner to sftp using .ppk file, I don't want to use third party library.</p>
","","1276","<c#><ftp><private-key><ftpwebrequest>","2","","0","2013-05-31 08:54:43","","3","","1001007","","2013-05-31 08:54:43","2013-05-29 10:07:05",""
"14303333","Bouncy Castle J2ME load existing private key","<p>Im so stuck at this project. Can somebody please help me out here?</p>

<p>I have a PEM or DER private key. An existing key. How can I load this key with</p>

<p><code>PrivateKeyFactory.createKey or into an AsymmetricCipherKeyPair</code> ?</p>

<p>I tried this:</p>

<pre><code>InputStream inKey = getClass().getResourceAsStream(""/samsjava/user_key_pk8.der"");
                byte[] binKey = new byte[inKey.available()];
                inKey.read(binKey, 0, binKey.length);
                inKey.close();


                privKey = PrivateKeyFactory.createKey(binKey);
                keyPair = new AsymmetricCipherKeyPair(new AsymmetricKeyParameter(false), privKey);

                rsaPriv = (RSAPrivateCrtKeyParameters)keyPair.getPrivate();
                rsaPub = (RSAPrivateCrtKeyParameters)keyPair.getPublic();
</code></pre>

<p>Please help me out here. Cheers</p>
","<p>Ok since nobody could help me out with this, i tried the thing in Java, which should get me on the right track for J2ME.
Here is the code:</p>

<pre><code>public class EncrypDecrypt {
private RSAPrivateCrtKey rsaPriv;
private RSAPublicKey rsaPub;
private BASE64Decoder decoder;
private BASE64Encoder encoder;

public EncrypDecrypt(){
    decoder = new BASE64Decoder();
    encoder = new BASE64Encoder();
    byte[] buffer;
    try {
        FileInputStream in = new FileInputStream(""pathtofile.pfx"");
        KeyStore kStore = KeyStore.getInstance(""PKCS12"");
        kStore.load(in, null);

        PrivateKey privKeyEntry = (PrivateKey)kStore.getKey(""Key Alias"", null); 
        rsaPriv = (RSAPrivateCrtKey) privKeyEntry;
    } catch (Exception ex) {
        Logger.getLogger(EncrypDecrypt.class.getName()).log(Level.SEVERE, null, ex);
    }       
}

public String encrypt(String data){
    try{
        AsymmetricBlockCipher eng = new RSAEngine();
        eng = new PKCS1Encoding(eng);
        RSAKeyParameters publicKey = new RSAKeyParameters(true, rsaPriv.getModulus(), rsaPriv.getPublicExponent());
        eng.init(true, publicKey);

        byte[] encrypted = eng.processBlock(data.getBytes(), 0, data.getBytes().length);
        return encoder.encode(encrypted);
    }
    catch(Exception err){
        return """";
    }
}

public String decrypt(String data){
    try
    {
        byte[] encrypted = decoder.decodeBuffer(data);
        AsymmetricBlockCipher eng = new RSAEngine();
        eng = new PKCS1Encoding(eng);
        RSAKeyParameters privateKey = new RSAKeyParameters(true, rsaPriv.getModulus(), rsaPriv.getPrivateExponent());
        eng.init(false, privateKey);

        byte[] decrypted = eng.processBlock(encrypted, 0, encrypted.length);
        return new String(decrypted);
    }
    catch(Exception err){
        return """";
    }
}
</code></pre>

<p>}</p>
","1276","<java><java-me><rsa><bouncycastle><private-key>","2","3","1","2013-01-14 07:45:52","","0","1","366990","","2013-01-13 12:21:36","2013-01-13 12:15:40",""
"41102504","RSACryptoServiceProvider Public/Private Keys Import","<p>I want to Sign and Verify Data via <strong>RSACryptoServiceProvider</strong></p>

<p>For this, I need Public and Private keys.</p>

<p>In my project, I store MyPublic and Private keys in XML files.</p>

<p>One time, I generate MyPublic and Private Keys</p>

<pre><code>public bool SignutureCheckForVerify(string myData, byte[] SignedData)
    {
        ...

        RSACryptoServiceProvider RSAalg = new RSACryptoServiceProvider();
             RSAalg.FromXmlString(MyPublicKey());
        return RSAalg.VerifyData(Encoding.ASCII.GetBytes(myData), new   MineCryptoService(), SignedData);

       ...

    }

    private static string MyPublicKey()
    {
        return ""&lt;RSAKeyValue&gt;&lt;Modulus&gt;-----Pubic Key Here ----&lt;/RSAKeyValue&gt;"";
    }
</code></pre>

<p>At the Above, I showed that ""Verify Data Via Public Keys""</p>

<p>My SignData method is similar.</p>

<p>At there,</p>

<pre><code>  RSAalg.FromXmlString(GetPrivateKey());
   ...
  RSAalg.SignData(...)
</code></pre>

<p>My question si that; At some example, I recognized that; Public and Private keys import via crt/pem/cert etc. certificate files. On there I stored on XML files.</p>

<p>İs My solution wrong?  </p>

<p>The second question that, </p>

<p>If I use this method to import keys</p>

<p><a href=""https://msdn.microsoft.com/en-us/library/tswxhw92(v=vs.110).aspx"" rel=""nofollow noreferrer"">https://msdn.microsoft.com/en-us/library/tswxhw92(v=vs.110).aspx</a></p>

<p>GetKeyFromContainer(""MyKeyContainer"");</p>

<p>IS MyKeyContainer private and public keys  static?</p>

<p>At each run, Can I have same <strong>private key/public key</strong> </p>

<p>or each running I have different key set?<em>emphasized text</em></p>
","<blockquote>
  <p>Is My solution wrong?</p>
</blockquote>

<p>That depends on your requirements and threat model. The signature generation of <code>RSACryptoServiceProvider</code> should be explicitly set to a hash other than MD5 or SHA-1. It's not clear from your question if this has taken place.</p>

<blockquote>
  <p>If I use this method to import keys</p>
  
  <p><a href=""https://msdn.microsoft.com/en-us/library/tswxhw92(v=vs.110).aspx"" rel=""nofollow noreferrer"">https://msdn.microsoft.com/en-us/library/tswxhw92(v=vs.110).aspx</a></p>
  
  <p><code>GetKeyFromContainer(""MyKeyContainer"");</code></p>
  
  <p>Is MyKeyContainer private and public keys static?</p>
</blockquote>

<p>Yes, that's the general idea of using a key store anyway.</p>

<blockquote>
  <p>At each run, Can I have same private key/public key? Or should I have different key set each time I generate a signature?</p>
</blockquote>

<p>Yes you can, given that you use an ample key size, say 2048 bit or higher.</p>

<hr>

<p>Actually, for your solution to be secure the receiver needs to <em>trust</em> the public key. When no trust is established, anybody could send you their public key instead.</p>
","1269","<c#><.net><rsa><public-key-encryption><private-key>","0","0","1","2016-12-14 10:31:20","41107036","0","","","","","2016-12-12 13:57:01",""
"24489097","Encryption and Decryption in and out of codeigniter","<p>I am creating an application based on codeigniter and will work as a API Centric application, i want to implement security , so that the user accessing the API from their own portal should get a public and private key from my portal and then every request they send to my server to get data should be encrypted by the public key and the server should decrypt the data using the private key getting the private key stored in the database</p>

<p>Now the problem is that how can i implement that, so that the user shouldn't go to hard proceedures to encrypt the data using the public key, and i should also be able to decrypt the information using private key within the codeigniter. and also if the encryption is made by javascript still it should be decrypted via codeigniter. I need some secure method to do that, so that i can avoid man in middle attacks and other threats</p>

<p>Thanks</p>
","<p>Create Signature for the both end client and server.</p>

<pre><code>$key='any key';

$timestamp='current time stamp'

$url='url to access the file'

$signature = $sha1($key,$timestamp,$url);
</code></pre>

<p>use this function at both end and <strong>match the signature</strong> value and then let it <strong>access the data</strong>.</p>
","1268","<javascript><codeigniter><encryption><public-key-encryption><private-key>","0","0","2","2014-06-30 14:57:51","","5","1","","","","2014-06-30 11:27:48",""
"24489097","Encryption and Decryption in and out of codeigniter","<p>I am creating an application based on codeigniter and will work as a API Centric application, i want to implement security , so that the user accessing the API from their own portal should get a public and private key from my portal and then every request they send to my server to get data should be encrypted by the public key and the server should decrypt the data using the private key getting the private key stored in the database</p>

<p>Now the problem is that how can i implement that, so that the user shouldn't go to hard proceedures to encrypt the data using the public key, and i should also be able to decrypt the information using private key within the codeigniter. and also if the encryption is made by javascript still it should be decrypted via codeigniter. I need some secure method to do that, so that i can avoid man in middle attacks and other threats</p>

<p>Thanks</p>
","<p>The easy answer is, use <a href=""//en.wikipedia.org/wiki/Transport_Layer_Security"" rel=""nofollow noreferrer"">TLS</a>.</p>

<p>If you've implemented your server interface as a web API, then this is as simple as configuring your web server front-end to accept connections over <a href=""//en.wikipedia.org/wiki/HTTPS"" rel=""nofollow noreferrer"">HTTPS</a>.  Your web server (and the browser / HTTPS client library on the client side) will then take care of most of the complicated handshaking, authentication and encryption details for you.</p>

<p>TLS is far from a perfect security protocol, but if used properly, it generally does the job, and it does it with <em>much</em> less hassle or opportunities for mistakes than designing your own protocol would.</p>

<hr>

<p>If you really want to ""roll your own"" secure communications scheme, you're first going to have to familiarize yourself with the theory of cryptography and the various available algorithms.  In particular, to implement an effective <a href=""http://en.wikipedia.org/wiki/Hybrid_cryptosystem"" rel=""nofollow noreferrer"">hybrid cryptosystem</a>, you're going to need:</p>

<ol>
<li><p>an authenticated public-key based <a href=""//en.wikipedia.org/wiki/Key_agreement"" rel=""nofollow noreferrer"">key agreement protocol</a> (preferably something based on the <a href=""//en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange"" rel=""nofollow noreferrer"">Diffie&ndash;Hellman key exchange</a>, and thus providing <a href=""//en.wikipedia.org/wiki/Forward_secrecy"" rel=""nofollow noreferrer"">forward secrecy</a>) to provide the client and server with a temporary shared key;</p></li>
<li><p>an <a href=""//en.wikipedia.org/wiki/Authenticated_encryption"" rel=""nofollow noreferrer"">authenticated symmetric encryption</a> algorithm, to provide a secure channel between the client and the server using the shared key; and</p></li>
<li><p>if the data is transmitted as discrete messages within the secure channel, a communications protocol capable of detecting <a href=""http://en.wikipedia.org/wiki/Replay_attack"" rel=""nofollow noreferrer"">message replay attacks</a> (e.g. through the use of sequential message numbers).</p></li>
</ol>

<p>While all of these can be implemented using only a few discrete crypto primitives &mdash; a block cipher (e.g. AES), a public-key encryption/signature algorithm (e.g. RSA), and possibly a hash function (e.g. SHA-256) and some way to do modular exponentiation for Diffie&ndash;Hellman &mdash; it's generally easier to use protocols and schemes that you crypto library already implements a high-level interface for.</p>

<p>Unfortunately, the most widely implemented schemes also tend to be the older ones, which may be slower and have weaker security guarantees than more modern schemes.  That said, if I had the choice (and keep in mind that I'm by no means a true crypto expert), here's what I'd pick:</p>

<ul>
<li><p>If the client needs to authenticate itself using a password, I'd pick <a href=""//en.wikipedia.org/wiki/Secure_remote_password_protocol"" rel=""nofollow noreferrer"">SRP</a> for the key agreement protocol.  If both sides have public <a href=""//en.wikipedia.org/wiki/Digital_signature"" rel=""nofollow noreferrer"">signature</a> keys known to the other, the problem is somewhat simpler, and could be handled simply by using raw Diffie&ndash;Hellman and then having both parties sign the D&ndash;H shared secret, or by using something like <a href=""//en.wikipedia.org/wiki/Station-to-Station_protocol"" rel=""nofollow noreferrer"">STS</a>.  (Note that, even with SRP, you may still want the server to authenticate itself to the client using something stronger than just knowledge of the client's password verifier.)</p>

<p>For the signature algorithm, any of <a href=""//en.wikipedia.org/wiki/RSA_%28cryptosystem%29"" rel=""nofollow noreferrer"">RSA</a> (with <a href=""//en.wikipedia.org/wiki/RSA-PSS"" rel=""nofollow noreferrer"">proper padding</a>), <a href=""//en.wikipedia.org/wiki/Digital_Signature_Algorithm"" rel=""nofollow noreferrer"">DSA</a> or <a href=""//en.wikipedia.org/wiki/Elliptic_Curve_DSA"" rel=""nofollow noreferrer"">ECDSA</a> should do, as long as the key length is sufficient.  (What counts as sufficient depends on the algorithm.)  Where hash algorithms are required, I would, for now, use <a href=""//en.wikipedia.org/wiki/SHA-2"" rel=""nofollow noreferrer"">SHA-2</a>; once the <a href=""//en.wikipedia.org/wiki/SHA-2"" rel=""nofollow noreferrer"">SHA-3</a> standard is finalized, it should also be a valid choice.</p></li>
<li><p>For the symmetric encryption part, I'd go with SIV (<a href=""http://tools.ietf.org/html/rfc5297"" rel=""nofollow noreferrer"">RFC 5297</a>) for maximum fool-proofness, or with <a href=""//en.wikipedia.org/wiki/Galois/Counter_Mode"" rel=""nofollow noreferrer"">GCM</a> if speed is critical or ""on-line"" encryption of large messages is required (and you don't have to implement it yourself).  <a href=""//en.wikipedia.org/wiki/OCB_mode"" rel=""nofollow noreferrer"">OCB</a> could also be an option, if the <a href=""http://www.cs.ucdavis.edu/~rogaway/ocb/license.htm"" rel=""nofollow noreferrer"">patent exemptions</a> are enough for your purposes, and <a href=""//en.wikipedia.org/wiki/EAX_mode"" rel=""nofollow noreferrer"">EAX</a> is perfectly good too, if not the absolute fastest.  See also <a href=""http://blog.cryptographyengineering.com/2012/05/how-to-choose-authenticated-encryption.html"" rel=""nofollow noreferrer"">How to choose an Authenticated Encryption mode</a>.</p>

<p>Generic composition of a block cipher (e.g. in <a href=""//en.wikipedia.org/wiki/CTR_mode"" rel=""nofollow noreferrer"">CTR mode</a>) and a <a href=""//en.wikipedia.org/wiki/Message_authentication_code"" rel=""nofollow noreferrer"">MAC</a> would also work, as long you make sure to apply the MAC to the message <em>after</em> encryption (end verify it before decryption).  Any decent MAC should do, but <a href=""http://en.wikipedia.org/wiki/HMAC"" rel=""nofollow noreferrer"">HMAC</a> is generally a safe and robust choice, if you have a good hash function available and don't need extreme speed.  (If you do, a fast Carter&ndash;Wegman MAC like <a href=""http://en.wikipedia.org/wiki/Poly1305-AES"" rel=""nofollow noreferrer"">poly1305-AES</a> may be worth considering.) Try to avoid the old CBC-MAC if you can; <a href=""//en.wikipedia.org/wiki/CMAC"" rel=""nofollow noreferrer"">CMAC</a> is much better.</p></li>
<li><p>In any case, I see no good reason to choose anything other than <a href=""//en.wikipedia.org/wiki/Advanced_Encryption_Standard"" rel=""nofollow noreferrer"">AES</a> for the underlying block cipher at the moment, although it's always good to design your protocol so that new cipher options may be easily introduced (and old insecure ones deprecated) in the future.</p></li>
<li><p>To derive the symmetric encryption key(s) from the D&ndash;H / SRP shared secret, you'll <a href=""https://crypto.stackexchange.com/questions/9418/how-random-is-the-shared-secret-in-the-diffie-hellman-key-agreement/9428#9428"">generally</a> need a <a href=""//en.wikipedia.org/wiki/Key_derivation_function"" rel=""nofollow noreferrer"">key derivation function</a>; HKDF (<a href=""http://tools.ietf.org/html/rfc5869"" rel=""nofollow noreferrer"">RFC 5869</a>) is a good choice for this job, especially if you already use a hash function anyway.  (It shouldn't be used &mdash; <a href=""https://crypto.stackexchange.com/questions/5976/how-to-salt-pbkdf2-when-generating-both-an-aes-key-and-a-hmac-key-for-encrypt-t/5978#5978"">alone, at least</a> &mdash; for hashing passwords, though; for that, you need a key-stretching KDF like <a href=""//en.wikipedia.org/wiki/PBKDF2"" rel=""nofollow noreferrer"">PBKDF2</a> or <a href=""//en.wikipedia.org/wiki/Scrypt"" rel=""nofollow noreferrer"">scrypt</a>.)</p></li>
<li><p>Also, as noted, I would design my communications protocol so that all messages carry a sequential message number and explicit sender/receiver designations, and so that messages with duplicate message numbers or invalid designations are discarded as forgeries.  Conveniently, these message numbers + designators can also be used as <a href=""//en.wikipedia.org/wiki/Cryptographic_nonce"" rel=""nofollow noreferrer"">nonces</a> for the symmetric encryption protocol (possibly after hashing, if they would otherwise be too long).</p>

<p>These message numbers and designators don't necessarily have to be encrypted (although they <em>do</em> need to be authenticated as ""associated data""); not encrypting them has the advantage that you can immediately reject any messages with bogus numbers or designators, even before attempting decryption.</p></li>
<li><p>Finally, always keep in mind that there may be exploitable gaps in what I've suggested above, or in the way you choose to apply my suggestions.  Make sure to get as many competent security experts as possible to review your protocol and implementation before you use it for anything actually important.</p></li>
</ul>

<p>As for specific crypto libraries or APIs in the various languages you mention, I'm not particularly familiar with those, and thus cannot offer detailed advice.  Just look at the documentation of standard crypto libraries and see what they offer.</p>
","1268","<javascript><codeigniter><encryption><public-key-encryption><private-key>","0","3","2","2014-06-30 14:57:51","","5","1","","","","2014-06-30 11:27:48",""
"48290355","UnrecoverableKeyException Failed to obtain information about private key, KeyStoreException: Invalid key blob","<p>In our app we've been having issues with data in the Android Keystore suddenly becoming inaccessible. The specific exception we're seeing is here:</p>

<pre><code>java.security.UnrecoverableKeyException: Failed to obtain information about private key
 at android.security.keystore.AndroidKeyStoreProvider.loadAndroidKeyStorePublicKeyFromKeystore(AndroidKeyStoreProvider.java:223)
 at android.security.keystore.AndroidKeyStoreProvider.loadAndroidKeyStoreKeyPairFromKeystore(AndroidKeyStoreProvider.java:259)
 at android.security.keystore.AndroidKeyStoreProvider.loadAndroidKeyStorePrivateKeyFromKeystore(AndroidKeyStoreProvider.java:269)
 at android.security.keystore.AndroidKeyStoreSpi.engineGetKey(AndroidKeyStoreSpi.java:94)
 at java.security.KeyStoreSpi.engineGetEntry(KeyStoreSpi.java:474)
 at java.security.KeyStore.getEntry(KeyStore.java:1560)
 at &lt;PACKAGE_NAME&gt;.EncryptionInteractor.generateKeys(EncryptionInteractor.java:104)
 at &lt;PACKAGE_NAME&gt;.EncryptionInteractor.generateKeys(EncryptionInteractor.java:100)
 at &lt;PACKAGE_NAME&gt;.EncryptionInteractor.init(EncryptionInteractor.java:93)
 at &lt;PACKAGE_NAME&gt;.EncryptionInteractor.&lt;init&gt;(EncryptionInteractor.java:80)
 at &lt;PACKAGE_NAME&gt;.EncryptionInteractor.init(EncryptionInteractor.java:65)
 at &lt;PACKAGE_NAME&gt;.&lt;APPLICATION_CLASS&gt;.onCreate(APPLICATION_CLASS.java:17)
 at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1118)
 at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5791)
 at android.app.ActivityThread.-wrap1(Unknown Source:0)
 at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1661)
 at android.os.Handler.dispatchMessage(Handler.java:105)
 at android.os.Looper.loop(Looper.java:164)
 at android.app.ActivityThread.main(ActivityThread.java:6541)
 at java.lang.reflect.Method.invoke(Native Method)
 at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)
 at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)
Caused by: android.security.KeyStoreException: Invalid key blob
 at android.security.KeyStore.getKeyStoreException(KeyStore.java:695)
 at android.security.keystore.AndroidKeyStoreProvider.loadAndroidKeyStorePublicKeyFromKeystore(AndroidKeyStoreProvider.java:224)
  ... 21 more
</code></pre>

<p>We have not been able to come up with a reliable way of reproducing the issue. Several articles mention possible states that can cause the Keystore to ""forget"" a Key or become locked such as <a href=""https://doridori.github.io/android-security-the-forgetful-keystore/#sthash.SPGO7JXV.wE9npzuE.dpbs"" rel=""noreferrer"">here</a>. However, as far as I can tell we have not fallen into any of these edge cases. It seems to happen after letting the device sit for a while after the first setup of the key. We have seen this happen across multiple emulators and devices, ranging from  21 to 26. Additionally these devices have used either swipe to unlock or a PIN. Changing the PIN or security method does not seem to cause the issue. Again, this issue seems to occur after the device has been sitting unused for several days. </p>

<p>I have found two other SOs <a href=""https://stackoverflow.com/questions/36652675/java-security-unrecoverablekeyexception-failed-to-obtain-information-about-priv"">here</a> and <a href=""https://stackoverflow.com/questions/36488219/android-security-keystoreexception-invalid-key-blob"">here</a> as well as one Google <a href=""https://issuetracker.google.com/u/1/issues/63786177"" rel=""noreferrer"">issue</a>. If I'm understanding correctly, the answer linked in both seems to rely upon the premise that the caller has called <code>setUserAuthenticationValidityDurationSeconds</code> when creating the Key, and we have not done so. Additionally the given solution seems to rely upon just deleting the key and generating a new one. </p>

<p>Below is our setup for the key on for versions >= API 23. I've left out our key generation for versions older than 23, since we've primarily seen this on APIs >= 23. </p>

<pre><code>private static final int RSA_KEY_SIZE = 2048;
private static final String CERT_SUBJECT_STRING = ""CN=&lt;COMPANY_NAME&gt; Android App O=&lt;COMPANY_NAME&gt;"";
private static final String ANDROID_KEY_STORE = ""AndroidKeyStore"";

try {
        String alias = KEY_NAME;
        KeyPairGenerator generator = KeyPairGenerator.getInstance(KeyProperties.KEY_ALGORITHM_RSA, ANDROID_KEY_STORE);

        Calendar start = Calendar.getInstance();
        Calendar end = Calendar.getInstance();
        end.add(Calendar.YEAR, 1);
        KeyGenParameterSpec spec = new KeyGenParameterSpec.Builder(alias, KeyProperties.PURPOSE_ENCRYPT | KeyProperties.PURPOSE_DECRYPT)
            .setAlgorithmParameterSpec(new RSAKeyGenParameterSpec(RSA_KEY_SIZE, RSAKeyGenParameterSpec.F4))
            .setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_RSA_PKCS1)
            .setBlockModes(KeyProperties.BLOCK_MODE_ECB)
            .setCertificateNotAfter(end.getTime())
            .setCertificateNotBefore(start.getTime())
            .setCertificateSerialNumber(BigInteger.ONE)
            .setCertificateSubject(new X500Principal(CERT_SUBJECT_STRING))
            .build();
        generator.initialize(spec);
        generator.generateKeyPair();
    } catch (NoSuchAlgorithmException | NoSuchProviderException | InvalidAlgorithmParameterException e) {
        e.printStackTrace();
    }
</code></pre>

<p>We then attempt to access the keys later via <code>keyStore.getEntry(KEY_NAME, null)</code>. Again, this works for a while, but then will begin to throw the above exception.</p>
","<p>I also faced issues with stability in KeyStore.</p>

<p>The solution was to use for <a href=""https://docs.oracle.com/javase/7/docs/api/java/security/KeyStore.html#getKey(java.lang.String,%20char[])"" rel=""nofollow noreferrer"">private key</a></p>

<pre><code>PrivateKey privKey = ks.getKey(alias, password)

</code></pre>

<p>And this to public key</p>

<pre><code>PublicKey pubKey = ks.getCertificate(alias).getPublicKey();
</code></pre>

<p>instead of <a href=""https://docs.oracle.com/javase/7/docs/api/java/security/KeyStore.html#getEntry(java.lang.String,%20java.security.KeyStore.ProtectionParameter)"" rel=""nofollow noreferrer"">getEntry</a></p>

<pre><code>ks.getEntry(alias, password)
</code></pre>

<p>The problem wasn't in the way you're creating the key but the way you're reading it.</p>

<p>Over more than a year never saw this issue again.</p>
","1267","<android><private-key><android-keystore><android-security><java-security>","17","0","1","2019-10-15 06:28:54","","1","3","","","","2018-01-16 21:47:35",""
"42756447","is PKCS8EncodedKeySpec capable to read both PKCS1 and PKCS8 private key","<p>Although the title is a question but I just managed to do this with the same code, while I am just not sure whether <code>PKCS8EncodedKeySpec</code> is designed to do this job, or my private key is generated by accident to make this work(key generated by <code>openssl</code>).  </p>

<p>my code(<code>pemPath</code> is pem type private key file path):</p>

<pre><code>try (BufferedReader bufferedReader = new BufferedReader(new FileReader(pemPath))) {
    StringBuilder stringBuilder = new StringBuilder();
    String line;

    while ((line = bufferedReader.readLine()) != null) {
        if (!line.startsWith(""--"")) {
            stringBuilder.append(line);
        }
    }

    PKCS8EncodedKeySpec priPKCS8 = new PKCS8EncodedKeySpec(
            Base64.getDecoder().decode(stringBuilder.toString()));
    KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
    PrivateKey key = keyFactory.generatePrivate(priPKCS8);
}
</code></pre>

<p>And also I paste PKCS1 file content:  </p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAoRVeLT5PrbQmFbmbc1zLFJuz5Sx3yTc9IIem13/+gNcrdqqa
QVd/2noPmIm1xUkdQfvRm72k0Mm1s78bcadTsZt4XL2OvAKBA0hyox2re/PLLp05
NP2WKFyF+O2OteZhzQHPxQFBn/Nt1pYbYctV7bbw4RsdQXXz72TY+WBfIg6m/LeG
uPG/4UM5IAw9G2IEOkA/V00rsjOLzRvHyqu473zaFNbaObN9rnakCUFeU07L3Eeo
EBQoZPiIyTAJ8eN/EnaudLrvErOog2E4LcpAOpoUDBdi2XYT0iE0stDoj62zP+gL
ubZQKV81N0qk1KehxeLcHtpXtvlWaITnmIovVQIDAQABAoIBAFw/W2Z3h7PHNgQ8
/cvr+RS9MiFs/NBLhQMLDD3fO8VW87oKazo+PKbGPgYx3tmzTEEMT/ZrfWZgDWF5
cOL+WwycJyqdF4+Ns4pIw/WruRfL/rCcMzWof4Rvr/1lNdPvslRv1CdS190cz+sS
nW28v2HZ4UpYd8GUJfUTgLoXOYPLjYEQx8wri5tOPvAJuCFHCdpx59Fu0xaQP+Uz
3+CSAqdsBL4UKoz0lQ27128BEg/2a6kqhGvC/QHu+Mn0N4wbto8ndfpF8noSAhx2
s38q/E9gVYxKjA1g2yl74irPsPWT+gq97nQJ4jYRog2W4I+KYYDAL9xP3ux+kGis
6h1GWcECgYEA1Bh/EgwlamT+y5oJhZgYEQAFtCZEOjyjWuJRwYTuaKrTJjudk0xZ
KPsGy8+Wi3QYsGUowAsQNws+3hzD1dIqWO92CXgkaJ1iZ3mVMsR+xgdb67jFrzZM
PerqXK3wOlaDe/Mikfyqcp9KERuSVKi/XMv7G/1ZaYk4/SPElqcXy1ECgYEAwm2Z
1Wy/E0uQ8Aj7x1nujCUQjvmTWhkU2aHW/1+STjERfXv5XdaR2N6tFSpWRRHAezHG
5b1NmskNKHCtYAdWFuZC2TXUoCVpnhZnS5gAf1H+konKjeknlLgYIZDB59hzMmCE
uOGEHk/rtZQuB4nR0jYk1eE14IOCQe6j73EsmsUCgYEAoINBd6kVj+WLJw8WcbJf
VE5OAr6LF//YKOnqsagmvbO6RM8NO/Kl72u7AvfBmRxtquGD64Lz7JRoKbRfSSza
u5/OFvCDrWCenmzXSyqGPtxG5qhZg3Z2UM2+PBGvIpdivqWM3ir32/NNHJFfNw7W
dCYzjkU4K7ScGoe9Ob6PNWECgYBrm514sidO1pPxRgeT3gJZLmprt1YGl7sieKA1
1v9yp1W2zdbGSOuPzC6feD8nGxwdEv+yR4OcF4pgx3wtmeHb6rU04sY7nHlINb4V
6Jrd3NO45upkgJaXiQxSB3xKhVG8oA7VBHvLCxC5/rk7Etw+LBlXBr569E4zj5DM
BSdawQKBgQC55RdlSLarKyEF9bMVPQDQ0Qko6pS+pw2kmg2CMXhk7eBsTUAMuVh4
/FNu3h6QiGpHstV1NRmF9oPRTltd8Mh3aCy8JAOY9/hZ7NScxKy2j91jQl+geSOC
FPSvfPlyMwPDvR3urCQKYq3NMJ4jWqcle4YX0w/rG5yY05gpQNVWiQ==
-----END RSA PRIVATE KEY-----
</code></pre>

<p>and PKCS8 file content:</p>

<pre><code>-----BEGIN PRIVATE KEY-----
MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQChFV4tPk+ttCYV
uZtzXMsUm7PlLHfJNz0gh6bXf/6A1yt2qppBV3/aeg+YibXFSR1B+9GbvaTQybWz
vxtxp1Oxm3hcvY68AoEDSHKjHat788sunTk0/ZYoXIX47Y615mHNAc/FAUGf823W
lhthy1XttvDhGx1BdfPvZNj5YF8iDqb8t4a48b/hQzkgDD0bYgQ6QD9XTSuyM4vN
G8fKq7jvfNoU1to5s32udqQJQV5TTsvcR6gQFChk+IjJMAnx438Sdq50uu8Ss6iD
YTgtykA6mhQMF2LZdhPSITSy0OiPrbM/6Au5tlApXzU3SqTUp6HF4twe2le2+VZo
hOeYii9VAgMBAAECggEAXD9bZneHs8c2BDz9y+v5FL0yIWz80EuFAwsMPd87xVbz
ugprOj48psY+BjHe2bNMQQxP9mt9ZmANYXlw4v5bDJwnKp0Xj42zikjD9au5F8v+
sJwzNah/hG+v/WU10++yVG/UJ1LX3RzP6xKdbby/YdnhSlh3wZQl9ROAuhc5g8uN
gRDHzCuLm04+8Am4IUcJ2nHn0W7TFpA/5TPf4JICp2wEvhQqjPSVDbvXbwESD/Zr
qSqEa8L9Ae74yfQ3jBu2jyd1+kXyehICHHazfyr8T2BVjEqMDWDbKXviKs+w9ZP6
Cr3udAniNhGiDZbgj4phgMAv3E/e7H6QaKzqHUZZwQKBgQDUGH8SDCVqZP7LmgmF
mBgRAAW0JkQ6PKNa4lHBhO5oqtMmO52TTFko+wbLz5aLdBiwZSjACxA3Cz7eHMPV
0ipY73YJeCRonWJneZUyxH7GB1vruMWvNkw96upcrfA6VoN78yKR/Kpyn0oRG5JU
qL9cy/sb/VlpiTj9I8SWpxfLUQKBgQDCbZnVbL8TS5DwCPvHWe6MJRCO+ZNaGRTZ
odb/X5JOMRF9e/ld1pHY3q0VKlZFEcB7McblvU2ayQ0ocK1gB1YW5kLZNdSgJWme
FmdLmAB/Uf6SicqN6SeUuBghkMHn2HMyYIS44YQeT+u1lC4HidHSNiTV4TXgg4JB
7qPvcSyaxQKBgQCgg0F3qRWP5YsnDxZxsl9UTk4CvosX/9go6eqxqCa9s7pEzw07
8qXva7sC98GZHG2q4YPrgvPslGgptF9JLNq7n84W8IOtYJ6ebNdLKoY+3EbmqFmD
dnZQzb48Ea8il2K+pYzeKvfb800ckV83DtZ0JjOORTgrtJwah705vo81YQKBgGub
nXiyJ07Wk/FGB5PeAlkuamu3VgaXuyJ4oDXW/3KnVbbN1sZI64/MLp94PycbHB0S
/7JHg5wXimDHfC2Z4dvqtTTixjuceUg1vhXomt3c07jm6mSAlpeJDFIHfEqFUbyg
DtUEe8sLELn+uTsS3D4sGVcGvnr0TjOPkMwFJ1rBAoGBALnlF2VItqsrIQX1sxU9
ANDRCSjqlL6nDaSaDYIxeGTt4GxNQAy5WHj8U27eHpCIakey1XU1GYX2g9FOW13w
yHdoLLwkA5j3+Fns1JzErLaP3WNCX6B5I4IU9K98+XIzA8O9He6sJApirc0wniNa
pyV7hhfTD+sbnJjTmClA1VaJ
-----END PRIVATE KEY-----
</code></pre>

<p>By the way, both private keys succeed to decrypt the same cipher text.<br>
And the openssl command:</p>

<pre><code>openssl genrsa -out rsa_private_key_2048.pem 2048
openssl pkcs8 -topk8 -in rsa_private_key_2048.pem -out pkcs8_rsa_private_key_2048.pem -nocrypt
</code></pre>
","<p>What if the private key in PEM format(PKCS#1 format)string being passed in a json payload input. PKCS8EncodedKeySpec  is currently working for both PKCS#1 and PKCS#8. The provider is SunRsaSign.</p>
","1267","<java><rsa><private-key><jce><pkcs#8>","1","-1","1","2019-02-20 17:01:50","","8","","608639","","2017-03-13 14:26:26","2017-03-13 04:00:33",""
"44447762","convert PEM encoded RSA private key to AsymmetricKeyParameter","<p>I am trying (but failing) to create a method that constructs an <code>AsymmetricKeyParameter</code> from a PEM encoded private key.  How can I complete this method?</p>

<p>It seems that an older version of <code>BouncyCastle</code> had a <code>pemReader.ReadObject()</code> method whose results could be casted, but that no longer exists.</p>

<p>I have tried various combinations of using <code>PrivateKeyFactory</code>, <code>PrivateKeyInfo</code>, <code>Asn1Object</code> and perhaps 10 other types, but all are throwing an exception at some point.</p>

<pre><code>static AsymmetricKeyParameter ReadPrivateKeyFromPemEncodedString(string pemEncodedKey)
{
    AsymmetricKeyParameter result = null;
    using (var stringReader = new StringReader(pemEncodedKey))
    {
        var pemReader = new PemReader(stringReader);
        var pemObject = pemReader.ReadPemObject();
        // WHAT NEXT???
    }            

    return result;
}
</code></pre>

<p>Here is the PEM-encoded key I am testing with:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
MIIEoAIBAAKCAQEAk0AmagKx285Ufbri/olc+f3WagL1Ho+DrYdDSbuU7cJAq+uD
9xGvvP9m2JavSP4wO9i9pB/cmCFMPoIj3oGJt1/cnLb/U2juneOw6Uo0N3F8TXdy
XfZNAIPhq/jw0YfIypTFTTvFkKXfTArIwW/bQBW8/dujFR8i5CxPjRKRDOBEy0PP
OLJDD0iUr9GX/h/EO4jQ7B/GszjhPiPx+gJCilaMY+jrSczjxpsKOXzpZEdT1NqM
rzgvIZPHYhQzAiw9vQzov3vezDwKgKcRrUixZ2B8uiEQNn7Wa2QzWF3vL+6CGflF
NYQcc0leDQBe86baYhCollouP4jfaH9KcMkYYwIBJQKCAQA7sjkWOHGeTLp4KSuX
n3i4X/z6i5POHoF9s2B31mzPF2ZTiP4l5JNadWELsrXDpVHTEq2/E9X4fDOqo3ZT
SUWrNLNiIKyzHLPDd/uc2OS8h/QfZ8aUy6KtLovrxclps5aXURG3hu86pBxBbCff
t7nACNAT42ugx28CjoEdhBFKaCNcw/S3gZOkcotVdDUTCB+epveXNybAoZcuVNtu
Y84hx+st8i0sXY+vpIJ8HOanbpdS/Q9UqDGNvg1zBlvnJ7PGOO4Jnc0EOa1Eoym2
vJNItDAkK59KPKjuBLWTvTz/XLrZirkY57BQgUKnXHU6YGI7bvu8+iDnNAP1C90U
/MllAoGBANstq/L7WOgcOhfbWEmcd59/vBtDbgf0pNwYyhmpIrG2SD6XaljQvOvo
2/2oqNzCG+xZbTnbdkODRIXMDGcCzVkQAEkNvwWYHxb2XHUOhUPr+4zNfGtnJ1gv
o7w6FVI3tD4buSmhcFZUGpNyzSbS+6FdXD37qjOFCPKcJMCY4BSPAoGBAKv9CdXw
Ksyhr62sWqlU2F9FhjDNS9afJ5A7mZjrPraAusVsOkUtwsij9g74SH5agQNIUnFH
NBwNenW+kbYahX6Q5pjNN5s6weG+2kbK8kZyuYo+Fuix0u6bTnL2IH35zP+hYWQS
YM7yNDdBpH1deTWlTVL7vnZeEK/WTldw8PDtAoGAZLQekjwh7hrOlVbxNpP/nE9y
Gl1AZIUpJtr1ErV+pK2yfZ+D454tScvastDzo7MhlhtABdOJXUomZvzjGpKVs0yK
gm4ZfxxhT71NEzAvZGWBajTmI4JsBexf/Iljvf3rB8eMbRLSv+Fz/o6xSTCBc6dv
khmvEMCVaIzuSqca2QMCgYAue714F2WDafghGdNQXB7NpBZuDfjSONpCqFMGvB7J
ipNX87y4wEJ7apWHgV+zcmgOuZm9wDeY4QxXLJYViqCev2DrBwgcHbfcJb5z/3/A
A1S9lD2K/6DK3d3Z4afqsjdnrxNnJ4/JOoqnJn971BLr53yupOdeQu/A0iMC4EEe
hQKBgBCJteVdDk/0gK5c/++q88VIYplEDeDCiO2nIjXK7kHrm0q3DuUsr3D6VOjL
VUViiU2nBKn40R8tNnxagPkL/uec0kZMGnnFsJLLKd48DGr34nQjsrGare0Pr8yo
3uwlkKwtDUg5Zf2vLIIKqcX6tvHSQ2Zc57dAdAPvhpM5TtDJ
-----END RSA PRIVATE KEY-----
</code></pre>
","<p>Here's a working solution:</p>

<pre><code>using Org.BouncyCastle.OpenSsl;

private static AsymmetricKeyParameter ReadPrivateKeyFromPemEncodedString(string pemEncodedKey)
{
    AsymmetricKeyParameter result;
    using (var stringReader = new StringReader(pemEncodedKey))
    {
        var pemReader = new PemReader(stringReader);
        var pemObject = pemReader.ReadObject();
        result = ((AsymmetricCipherKeyPair)pemObject).Private;
    }

    return result;
}
</code></pre>
","1266","<c#><bouncycastle><private-key><pem>","2","1","1","2017-06-11 18:35:21","44487334","6","","356790","","2017-06-11 18:35:21","2017-06-09 01:06:00",""
"6210963","Retrieve Private Key for the generated CSR","<p>I am create CSR using certenroll object.
Primary key is created on the same machine(Ccertificate store).</p>

<p>How to retrieve primary key which is stored on local store for the CSR generated.</p>
","<p>You can get the private key from <a href=""http://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509certificate2.privatekey.aspx"" rel=""nofollow"">X509Certificate2.PrivateKey</a>.</p>

<pre><code>var store = new X509Store (StoreName.My, StoreLocation.CurrentUser);
store.Open(OpenFlags.ReadOnly);

var thumbprint = ""AA99202885098B541C1ECD09C85351ED084A4A12"";
var certificate = store.Certificates.Find (X509FindType.FindByThumbprint, thumbprint, false) [0];

var privateKey = (RSACryptoServiceProvider) certificate.PrivateKey;
</code></pre>

<p>Also, X509Certificate offers methods to export as various formats including pfx.</p>
","1262","<c#><windows><keystore><private-key><csr>","0","1","1","2011-06-03 15:16:14","","0","","741474","","2011-06-03 13:33:24","2011-06-02 05:53:39",""
"22356651","Digital Signatures of XML, PDF and Office Documents on every platform","<p>I'm trying to develop a website that performs digital signatures on client-side and then sent the signed document to the server-side.
I want to do the signatures on client, due to the fact of not sending away the user's private key. This key (in theory) must be always with the user and it must not be sent to the web (even if protected with SSL, for example).</p>

<p>I want that every platform may be able to sign the documents. I've already developed a Java Applet with the signing algorithms, but Java is not supported in iOS or Android.. In .NET is impossible too. So I think I'm restricted to JavaScript, but I'm not aware of any javascript library that signs XML, PDF and Office documents.. What should I do? Only with Javascript every platform works..</p>

<p>Can u help me?</p>

<p>Regards,
William.</p>
","<p>Disclosure: I work for <a href=""http://www.arx.com"" rel=""nofollow"">CoSign</a>.</p>

<p>The solution is to use a secure, hardware hardened digital signature appliance.</p>

<p>You're raising the common question of digitally signing data at the network ""edge.""</p>

<p>Good luck on the idea of signing at the client/edge, for the reasons that you discuss. And forget Javascript, it is <a href=""http://www.matasano.com/articles/javascript-cryptography/"" rel=""nofollow"">completely insecure from the cryptography point of view</a>. </p>

<p>You're right that the signers' private key shouldn't be sent anywhere. </p>

<p>Good news: there is an alternative architecture that will:</p>

<ul>
<li>Not require that the private keys be sent anywhere</li>
<li>Protect the private keys</li>
<li>Enable signing from clients of all types including mobile, Android, .Net, iOS, etc.</li>
<li>Decrease administrative costs by centralizing the keys and key management</li>
</ul>

<p>The answer: use a centralized signing appliance. The appliance is hardened at the hardware level: if you try to open the box, the keys are destroyed. Signing appliances are made by my company and some others. </p>

<p>In this system, the document (or better, just its hash) is sent from the edge device to the centralized signing appliance. The user also authenticates with the appliance (using any one of a number of techniques). The appliance holds the private keys. It signs the hash, and returns the digital signature to the edge client. </p>

<p>Depending on the capabilities of the client, it can:</p>

<p><strong>Assemble the signed document itself</strong> (combining the digital signature with the source document). Benefit: less data needs to be sent between the edge client and the signing appliance. Issue: requires more sw on the client. Or:</p>

<p><strong>The appliance can return the complete signed document.</strong> Benefit simpler implementation on the client but requires that the document be sent to the signing appliance from the edge client.</p>

<p>Note that an entire PDF document doesn't have to be sent back--the PDF digital signature is simply appended to the source document. So the flow can be:</p>

<ol>
<li>Send the entire PDF for signing. (Or just send the hash if the client can calculate it.)</li>
<li>Receive back either the entire PDF (signed), or just a ""tail"" that, when appended to the source PDF creates the signed document.</li>
</ol>

<p><strong>Multiple data types</strong>
My company supports signing of PDF, Word, Excel, XML and other document types out of the box. Eg Word documents are signed using the Word ""standard"" -- a digitally signed Word document can be verified by a recipient (relying party) <strong>without</strong> installing anything beyond Word. No plugins, etc.</p>

<p><strong>Signer Authentication</strong>
Signers need to authenticate themselves with the centralized appliance. My company supports multiple types of authentication including OTP and 2FA.</p>
","1256","<javascript><cross-platform><client-side><digital-signature><private-key>","2","2","1","2014-03-13 07:56:14","","1","","","","","2014-03-12 15:44:24",""
"42821496","KeyPairGenerator not available","<p>I am creating a program to generate a key pair but i have this error:</p>

<pre><code>Exception in thread ""main"" java.lang.NullPointerException
at generateAESKey.main(generateAESKey.java:43)
</code></pre>

<p>This is currently what I have been working. The </p>

<blockquote>
  <p>key.getEncoded());</p>
</blockquote>

<p>is not being read.</p>

<pre><code>public class generateAESKey {
    public static void main(String[] args) throws Exception {
        generateAESKey generatekey = new generateAESKey();    
        KeyGenerator keyGen = KeyGenerator.getInstance(""AES"");
        keyGen.init(256);
        SecretKey skey = keyGen.generateKey();
        byte[] raw = skey.getEncoded();
        FileOutputStream fos2 = new FileOutputStream(""C:\\Users\\win8.1\\Desktop\\AES\\test.txt"");
        fos2.write(raw);
        fos2.close();


        KeyPairGenerator keyGen1 = KeyPairGenerator.getInstance(""RSA"");
        SecureRandom random = SecureRandom.getInstance(""SHA1PRNG"", ""SUN"");
        keyGen1.initialize(1024, random);
        KeyPair generatedKeyPair = keyGen1.genKeyPair();
        savePublicKey(generatedKeyPair.getPublic(), ""C:\\Users\\win8.1\\Desktop\\AES\\public"");
        savePrivateKey(generatedKeyPair.getPrivate(), ""C:\\Users\\win8.1\\Desktop\\AES\\private"");


        PublicKey key = null;

        X509EncodedKeySpec x509EncodedKeySpec = new X509EncodedKeySpec(
        key.getEncoded());
        FileOutputStream fos3 = new FileOutputStream(""C:\\Users\\win8.1\\Desktop\\AES\\public.txt"");
        fos3.write(x509EncodedKeySpec.getEncoded());
        fos3.close();

        PrivateKey key1 = null;
        PKCS8EncodedKeySpec pkcs8EncodedKeySpec = new PKCS8EncodedKeySpec(
        key1.getEncoded());
        FileOutputStream fos4 = new FileOutputStream(""C:\\Users\\win8.1\\Desktop\\AES\\private.txt"");
        fos4.write(pkcs8EncodedKeySpec.getEncoded());
        fos4.close();
        System.out.println(""SAVE"");

    }
        private static void savePrivateKey(PrivateKey private1, String string) {
        // TODO Auto-generated method stub

    }
        private static void savePublicKey(PublicKey public1, String string) {
        // TODO Auto-generated method stub

    }

        public SecretKeySpec getKeySpec() throws IOException, NoSuchAlgorithmException {
            byte[] bytes = new byte[16];
            File f = new File(""aes.key"");
            SecretKey key = null;
            SecretKeySpec spec = null;
            if (f.exists()) {
              new FileInputStream(f).read(bytes);
            } else {
               KeyGenerator kgen = KeyGenerator.getInstance(""AES"");
               kgen.init(256);  //128 kalagay
               key = kgen.generateKey();
               bytes = key.getEncoded();
               new FileOutputStream(f).write(bytes);
            }
            spec = new SecretKeySpec(bytes,""AES"");
            return spec;
          }
}
</code></pre>

<p>Any help will be greatly appreciated. Thanks. </p>

<p>I have already edited it. </p>
","<p>This line is wrong:</p>

<pre><code>KeyPairGenerator keyGen1 = KeyPairGenerator.getInstance(""ALGORITHM"");
</code></pre>

<p>You must supply the name of the algorithm that you want to use, e.g.:</p>

<pre><code>KeyPairGenerator keyGen1 = KeyPairGenerator.getInstance(""RSA"");
</code></pre>
","1250","<java><private-key><public-key>","-4","0","2","2017-03-15 22:26:38","42821724","2","","7026284","","2017-03-15 22:19:39","2017-03-15 22:01:07",""
"42821496","KeyPairGenerator not available","<p>I am creating a program to generate a key pair but i have this error:</p>

<pre><code>Exception in thread ""main"" java.lang.NullPointerException
at generateAESKey.main(generateAESKey.java:43)
</code></pre>

<p>This is currently what I have been working. The </p>

<blockquote>
  <p>key.getEncoded());</p>
</blockquote>

<p>is not being read.</p>

<pre><code>public class generateAESKey {
    public static void main(String[] args) throws Exception {
        generateAESKey generatekey = new generateAESKey();    
        KeyGenerator keyGen = KeyGenerator.getInstance(""AES"");
        keyGen.init(256);
        SecretKey skey = keyGen.generateKey();
        byte[] raw = skey.getEncoded();
        FileOutputStream fos2 = new FileOutputStream(""C:\\Users\\win8.1\\Desktop\\AES\\test.txt"");
        fos2.write(raw);
        fos2.close();


        KeyPairGenerator keyGen1 = KeyPairGenerator.getInstance(""RSA"");
        SecureRandom random = SecureRandom.getInstance(""SHA1PRNG"", ""SUN"");
        keyGen1.initialize(1024, random);
        KeyPair generatedKeyPair = keyGen1.genKeyPair();
        savePublicKey(generatedKeyPair.getPublic(), ""C:\\Users\\win8.1\\Desktop\\AES\\public"");
        savePrivateKey(generatedKeyPair.getPrivate(), ""C:\\Users\\win8.1\\Desktop\\AES\\private"");


        PublicKey key = null;

        X509EncodedKeySpec x509EncodedKeySpec = new X509EncodedKeySpec(
        key.getEncoded());
        FileOutputStream fos3 = new FileOutputStream(""C:\\Users\\win8.1\\Desktop\\AES\\public.txt"");
        fos3.write(x509EncodedKeySpec.getEncoded());
        fos3.close();

        PrivateKey key1 = null;
        PKCS8EncodedKeySpec pkcs8EncodedKeySpec = new PKCS8EncodedKeySpec(
        key1.getEncoded());
        FileOutputStream fos4 = new FileOutputStream(""C:\\Users\\win8.1\\Desktop\\AES\\private.txt"");
        fos4.write(pkcs8EncodedKeySpec.getEncoded());
        fos4.close();
        System.out.println(""SAVE"");

    }
        private static void savePrivateKey(PrivateKey private1, String string) {
        // TODO Auto-generated method stub

    }
        private static void savePublicKey(PublicKey public1, String string) {
        // TODO Auto-generated method stub

    }

        public SecretKeySpec getKeySpec() throws IOException, NoSuchAlgorithmException {
            byte[] bytes = new byte[16];
            File f = new File(""aes.key"");
            SecretKey key = null;
            SecretKeySpec spec = null;
            if (f.exists()) {
              new FileInputStream(f).read(bytes);
            } else {
               KeyGenerator kgen = KeyGenerator.getInstance(""AES"");
               kgen.init(256);  //128 kalagay
               key = kgen.generateKey();
               bytes = key.getEncoded();
               new FileOutputStream(f).write(bytes);
            }
            spec = new SecretKeySpec(bytes,""AES"");
            return spec;
          }
}
</code></pre>

<p>Any help will be greatly appreciated. Thanks. </p>

<p>I have already edited it. </p>
","<p><strong>First error</strong>: <code>KeyPairGenerator.getInstance(String algorithm)</code> can only handle the following input <code>String</code>s:</p>

<ul>
<li>DiffieHellman</li>
<li>DSA</li>
<li>RSA</li>
<li>EC</li>
</ul>

<p>For mor infos look <a href=""https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#KeyPairGenerator"" rel=""nofollow noreferrer"">in the docs</a></p>

<p>Possible call 
<code>KeyPairGenerator.getInstance(""RSA"");</code></p>

<p><strong>Second error (nullptr)</strong>:
You have to create a <code>PublicKey</code>! You are doing <code>PublicKey key = null;</code> and then you Fall:</p>

<pre><code>X509EncodedKeySpec x509EncodedKeySpec = new X509EncodedKeySpec(
key.getEncoded());//key is null so nullpointer will occur
</code></pre>

<p>You have to assign a value to your <code>key</code> variable. I assume you want to take your created <code>PublicKey</code> so do:
<code>PublicKey key = generatedKeyPair.getPublic();</code></p>
","1250","<java><private-key><public-key>","-4","1","2","2017-03-15 22:26:38","42821724","2","","7026284","","2017-03-15 22:19:39","2017-03-15 22:01:07",""
"34283431","Generate EVP_PKEY from Private Key Bytes In PEM Format","<p>I have a private key bytes stored in PEM format, in a variable of Type <code>LPSTR</code>. i.e </p>

<pre><code>LPSTR pPrivateKeyInPem; 
</code></pre>

<p>Now I need to generate an <code>EVP_PKEY</code> using <code>pPrivateKeyInPem</code>, so that it can be loaded into an <code>SSL_CTX</code> Object using the <code>SSL_CTX_use_PrivateKey()</code> API of Openssl.</p>

<p>How can I do this?</p>
","<p>I'll omit conversion from LPSTR to char*, which is covered here: <a href=""https://stackoverflow.com/questions/342772/convert-lptstr-to-char"">Convert lptstr to char*</a></p>

<p>For the OpenSSL part</p>

<pre><code>BIO *mem;
mem = BIO_new_mem_buf(pkey, -1); //pkey is of type char*

key = PEM_read_bio_PrivateKey(mem, NULL, NULL, 0);
</code></pre>
","1250","<openssl><private-key>","1","3","1","2015-12-15 09:55:13","34285859","2","","940098","","2015-12-15 08:01:36","2015-12-15 07:35:30",""
"26182257","Guacamole 0.9.3 SSH private key to connect to AWS EC2 Linux Instances","<p>Installed Guacamole 0.9.3 from source and war files on Ubuntu 14.04 and Tomcat 7 with MySQL authentication. RDP and SSH with password work fine. Have been trying to connect to AWS EC2 linux instances using Private Key. But when trying to connect it fails saying login failed. no idea what is going wrong. Need help to configure Guacamole connection to connect to AWS EC2 linux instance with private key</p>
","<p>If connecting to the very AWS instance you are running the guacamole-client from try using <code>localhost</code> as the <em>Hostname</em>. If connecting to another AWS instance be sure that your Security Group allows access from the Guacamole instance. Perhaps you can you your internal IP.</p>

<p>One thing that was preventing me from logging in to my AWS instances was that even though I set the correct Private Key I neglected to set an appropriate username in the Guacamole connection properties.</p>
","1247","<linux><amazon-web-services><ssh><amazon-ec2><private-key>","0","2","1","2015-02-23 05:16:01","","0","","","","","2014-10-03 15:43:15",""
"7774625","sftp login with private key & public key no username and domain given","<p>My client send me today a public and a private rsa key to login to the sftp server. Is it possible to derive the domain and username from these files, or did he simply forget to mention them? He send me an email with the keys in the attachement and said i could find all information in the attached files. </p>
","<p>Take a look at the public key.  At the end of the key, there should be a string that looks like this:</p>

<pre><code>= user@host
</code></pre>

<p>Assuming he created the key on the server, that's the host name.</p>
","1246","<ssh><rsa><sftp><public-key-encryption><private-key>","0","1","1","2011-10-14 23:34:55","","0","","","","","2011-10-14 23:31:01","2011-11-12 18:30:40"
"37865765","Put RSA private key in iPhone keychain using SecItemAdd","<p>I generated a private PKCS#12 key and then put it in PEM format, and sent it over to the iPhone app. I want to save this private key in the iPhone Keychain. </p>

<p>First, I removed the headers like ""BEGIN RSA PRIVATE KEY"". Then I converted the rest of it into <code>NSData</code>. Then, using code like this:</p>

<p><a href=""https://stackoverflow.com/questions/32704394/cfdictionaryref-issues-in-swift"">CFDictionaryRef issues in Swift</a></p>

<p>I was able to get a <code>SecKeyRef</code> from this private key.  </p>

<p>Now I want to know how I can insert this <code>SecKeyRef</code> into the keychain using <code>SecItemAdd</code>?</p>
","<p>Try to use this method to convert <code>SecKeyRef</code> to <code>NSData</code></p>

<pre><code>- (NSData *)getPublicKeyBitsFromKey:(SecKeyRef)givenKey {

    static const uint8_t publicKeyIdentifier[] = ""com.your.company.publickey"";
    NSData *publicTag = [[NSData alloc] initWithBytes:publicKeyIdentifier length:sizeof(publicKeyIdentifier)];

    OSStatus sanityCheck = noErr;
    NSData * publicKeyBits = nil;

    NSMutableDictionary * queryPublicKey = [[NSMutableDictionary alloc] init];
    [queryPublicKey setObject:(__bridge id)kSecClassKey forKey:(__bridge id)kSecClass];
    [queryPublicKey setObject:publicTag forKey:(__bridge id)kSecAttrApplicationTag];
    [queryPublicKey setObject:(__bridge id)kSecAttrKeyTypeRSA forKey:(__bridge id)kSecAttrKeyType];

    // Temporarily add key to the Keychain, return as data:
    NSMutableDictionary * attributes = [queryPublicKey mutableCopy];
    [attributes setObject:(__bridge id)givenKey forKey:(__bridge id)kSecValueRef];
    [attributes setObject:@YES forKey:(__bridge id)kSecReturnData];
    CFTypeRef result;
    sanityCheck = SecItemAdd((__bridge CFDictionaryRef) attributes, &amp;result);
    if (sanityCheck == errSecSuccess) {
        publicKeyBits = CFBridgingRelease(result);

        // Remove from Keychain again:
        (void)SecItemDelete((__bridge CFDictionaryRef) queryPublicKey);
    }

    return publicKeyBits;
}
</code></pre>

<p>And then add it to keychain.<br>
I hope this will solve your problem.</p>
","1244","<ios><rsa><keychain><private-key><seckeyref>","0","0","2","2016-09-18 18:14:03","","6","","-1","","2017-05-23 12:08:19","2016-06-16 17:28:12",""
"37865765","Put RSA private key in iPhone keychain using SecItemAdd","<p>I generated a private PKCS#12 key and then put it in PEM format, and sent it over to the iPhone app. I want to save this private key in the iPhone Keychain. </p>

<p>First, I removed the headers like ""BEGIN RSA PRIVATE KEY"". Then I converted the rest of it into <code>NSData</code>. Then, using code like this:</p>

<p><a href=""https://stackoverflow.com/questions/32704394/cfdictionaryref-issues-in-swift"">CFDictionaryRef issues in Swift</a></p>

<p>I was able to get a <code>SecKeyRef</code> from this private key.  </p>

<p>Now I want to know how I can insert this <code>SecKeyRef</code> into the keychain using <code>SecItemAdd</code>?</p>
","<p>This works for me:</p>

<ol>
<li>Convert the private key to PKCS#8 format.</li>
<li>Strip header</li>
<li>Add to keychain</li>
</ol>

<p>These two libs could help:
Swift: <a href=""https://github.com/btnguyen2k/swift-rsautils"" rel=""nofollow"">https://github.com/btnguyen2k/swift-rsautils</a>
Obj-C: <a href=""https://github.com/ideawu/Objective-C-RSA"" rel=""nofollow"">https://github.com/ideawu/Objective-C-RSA</a></p>
","1244","<ios><rsa><keychain><private-key><seckeyref>","0","0","2","2016-09-18 18:14:03","","6","","-1","","2017-05-23 12:08:19","2016-06-16 17:28:12",""
"18165932","Save RSA PublicKey / PrivateKey safely","<p>I create and use RSA public/private key to encrypt/decrypt some message.I store them to a sharedpreferences as string and when i need them i create from string. Everything is works perfectly, but is it secure to store my private key in sharedpreferences as string.
With this question :</p>

<p><a href=""https://stackoverflow.com/questions/18165468/sharedpreferences-mode-private-security/18165789"">SharedPreferences MODE_PRIVATE security</a></p>

<p>I learned that, someone can reach my sharedpreferences and can generate my private key from string. What can i do to make my private key secure while save it on my phone?</p>
","<p>It all depends on the the level of sensitivity of the private/public key pair. I think, storing them in a sharedpreferences is not a bad idea. Your key pair is stored relative to the app directory and has system protection from external access. But, as the word ""shared""Preferences implied, your key pair shared among your app components. So, if you need a better protection, consider storing the key pair in the <a href=""http://developer.android.com/reference/java/security/KeyStore.html"" rel=""nofollow"">KeyStore class</a> instead . As of now, it is the best solution for key pair protection. It provides you password based key protection.</p>

<p>Update: There is a great article on android keystore and keychain usage <a href=""http://nelenkov.blogspot.com/2012/05/storing-application-secrets-in-androids.html"" rel=""nofollow"">here</a>.</p>
","1242","<android><rsa><private-key>","3","2","1","2015-11-20 11:50:44","18169861","2","","-1","","2017-05-23 10:27:19","2013-08-10 20:13:08",""
"15182572","Decryption with openssl not working","<p>Here is my php script</p>

<pre><code>&lt;?php
$pubfile = fopen(""public_key.pem"", ""r"");
$public = fread($pubfile, 8192);
fclose($pubfile);
openssl_get_publickey($public);

$prifile = fopen(""private_key.pem"", ""r"");
$private = fread($prifile, 8192);
fclose($prifile);
openssl_get_privatekey($private);

$plaintext = ""hello"";

openssl_public_encrypt ($plaintext , $crypted , $public);

openssl_private_decrypt($crypted, $decrypted, $private);
echo $decrypted;
?&gt;
</code></pre>

<p>my respective public and private keys</p>

<p>private_key.pem</p>

<pre><code>    -----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAtwxvPpbvbeJCztWlQCC0w2mQTNICarpIkbFTzlEooXA8Zo30
sN9cdH0Ifa/pIhfx0Lbm+e03Fz5NZelJZ5QRiRfoN9tcb5zYrwvVWx1SR6Zo5moS
S5YEvVSWVpu3D7x3IO2XVtTHlWTTRZk2c+ZuFR3eIwDZbmuOiTmuJMQCJiRd8pqf
4sVCoKzWrUmBuT2pc/sdUQ4IPylGK3yGVyxHNa8gCkBs/zVq3I0Zu7Nx8mW8DTn9
EvP02mkFHynJZgKE0SJftu6Mp9BDl4qR4T8896K+Z1Fi3qx3iK6nkjYjXCYYZB90
6uWiqm7BK/4zbzuc604+BZ4LOPgCsO+aZjx3ywIDAQABAoIBABgTfp5Q4/UkCX2D
BFVG9/+r5trz1HWNQvZGyKseaaWySX+DtGd/OX3o5DED7joZxCibpg3BcbmQ7EU3
RfxlsVjC2DxgkevsSWPcvpdZZ/UcojeMRBPFC6KLeaqymIVtWI3wMjOtkQLJXDCP
UmY0LM6COzGHbxHi+8B44brcPRwe+zJK5ALhPfFEyPsnz9Rw2PLBWceXNeZYN0ja
C699r+a/t0kdJ0+49LLTvFjFECZLArZTK1GZbzACeM/fFl7XvK3tsdAkizys0Dwl
eyDtINkWlg+hzt8uijVY78MvP36RM8k4QIjSX/2p/jupsyZD4I2R9OW+ml9sImok
Ud5YKaECgYEA7xbLLvZ5ddpf/yBSVpGytfU/PzWK5L9cPRbrQPll6iKgimAOTULi
VQAQYaCDL/er/zjVU+a2Kxv1G8yX/LXHXtpSbxIVvgTqtAuGYT0hGkCFtUQaviJG
z/r3DnGiFu+l8FPxw+CQEgeeyNG49TzyA7aODswWm3o6aWElptJDdQ8CgYEAw/7p
RQkgLaKzLNidCNDNq/4/8zmJoMe6GVLGl+HVHKzn6pPZfctI201yaJ5LbyPaYD/2
2MlDleg4A9zZILykS3QRo/ex3H+7exYA4qQcLqXJT8D5oMlNvFiF6NWHu7WJtXlt
q05vcBXdRy6s3by1+SXyH42H6H930AIER1366YUCgYAxfLlPniqjzzCBgTIpwvyH
lxyhO7blBArWhjDpgPWsUcCDA8DSEx7/0wSRAIVG32/VYvEc7asVHzNLrrxizUlY
A75+SPMBIsllvODyrZF1epdyXodehX+8ush6T+Dp+G6TYPywu4F2iec+z9IFyLib
NiUPQQUI53LBrx74+ZqG1wKBgBhFlTXLb4S3RWEkYi4ZTZ8jGWBRm82hblZ8fcOJ
YA7xCrduH90IM7mU2bpDACx/UCfjQ/qM0iXaYDV6QBlhwybk9NpNbmVUHC+eBfYL
RMIyHcAWsdNLmqjcfZjb+LcyQB+NLhus1vgWfRS3nwjGufJk1Js7t7z/LCNCXK1J
4izRAoGBANSNXXYF32hQ8CJt/LqbtQaRcffdwoytFVps1lIlSfmu+huxZ5/yLuZt
AWy9Ob5SiAXeEbPTqYA24qn8ACYL/Ar2CskY22HRJz/poQ1FuMRjf+/qsRP0VF2a
pS4yn7u/iKCSIRheFY8w/u8gzxx/rSks/xEmoBCgOq8nguQkqa1h
-----END RSA PRIVATE KEY-----
</code></pre>

<p>public_key.pem</p>

<pre><code>    -----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnDI+Q/tbVToQ30DBB0y6
89ivB01gRhuAEYCqMeezhE8CrzQN3WGsox3Q3ortLZkbuFrMQdBN6ZjD1w0k9utx
Lr3MFRbXqAxeXd7NlCz9biBaQw1LboKr10kVyENPTRT2NrQnfsFsI6WfvMKiu62/
ZEHT80DMUvilSSuRbNKrfwMqhKiRbM83Olxepk8XBNyRimvypxaPhcEiQYFlirVq
/jvyUaJg01VjXxp1PKqXwIurF+Eu+W6b4OotLHY0EAPckNiP4XOHMNWd/NG5jV3F
mEzz5Cn9IdMDHSewcA6/rsOqVx0bZOBnSsmVLu9fPsCyrs7eBSXZSlIFKHD39HR6
eQIDAQAB
-----END PUBLIC KEY-----
</code></pre>

<p><code>$crypted</code> returns to me encrypted data however decryption echos nothing. </p>

<p>I did an echo of the result and it comes back as <code>NULL</code> any ideas?</p>
","<p>Solved. I don't know what happened but after generating new key pairs script worked. I might have possibly mixed up my key pairs</p>
","1236","<php><openssl><rsa><private-key><encryption-asymmetric>","1","1","2","2013-03-03 11:03:34","15182891","2","","","","","2013-03-03 04:53:43",""
"15182572","Decryption with openssl not working","<p>Here is my php script</p>

<pre><code>&lt;?php
$pubfile = fopen(""public_key.pem"", ""r"");
$public = fread($pubfile, 8192);
fclose($pubfile);
openssl_get_publickey($public);

$prifile = fopen(""private_key.pem"", ""r"");
$private = fread($prifile, 8192);
fclose($prifile);
openssl_get_privatekey($private);

$plaintext = ""hello"";

openssl_public_encrypt ($plaintext , $crypted , $public);

openssl_private_decrypt($crypted, $decrypted, $private);
echo $decrypted;
?&gt;
</code></pre>

<p>my respective public and private keys</p>

<p>private_key.pem</p>

<pre><code>    -----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAtwxvPpbvbeJCztWlQCC0w2mQTNICarpIkbFTzlEooXA8Zo30
sN9cdH0Ifa/pIhfx0Lbm+e03Fz5NZelJZ5QRiRfoN9tcb5zYrwvVWx1SR6Zo5moS
S5YEvVSWVpu3D7x3IO2XVtTHlWTTRZk2c+ZuFR3eIwDZbmuOiTmuJMQCJiRd8pqf
4sVCoKzWrUmBuT2pc/sdUQ4IPylGK3yGVyxHNa8gCkBs/zVq3I0Zu7Nx8mW8DTn9
EvP02mkFHynJZgKE0SJftu6Mp9BDl4qR4T8896K+Z1Fi3qx3iK6nkjYjXCYYZB90
6uWiqm7BK/4zbzuc604+BZ4LOPgCsO+aZjx3ywIDAQABAoIBABgTfp5Q4/UkCX2D
BFVG9/+r5trz1HWNQvZGyKseaaWySX+DtGd/OX3o5DED7joZxCibpg3BcbmQ7EU3
RfxlsVjC2DxgkevsSWPcvpdZZ/UcojeMRBPFC6KLeaqymIVtWI3wMjOtkQLJXDCP
UmY0LM6COzGHbxHi+8B44brcPRwe+zJK5ALhPfFEyPsnz9Rw2PLBWceXNeZYN0ja
C699r+a/t0kdJ0+49LLTvFjFECZLArZTK1GZbzACeM/fFl7XvK3tsdAkizys0Dwl
eyDtINkWlg+hzt8uijVY78MvP36RM8k4QIjSX/2p/jupsyZD4I2R9OW+ml9sImok
Ud5YKaECgYEA7xbLLvZ5ddpf/yBSVpGytfU/PzWK5L9cPRbrQPll6iKgimAOTULi
VQAQYaCDL/er/zjVU+a2Kxv1G8yX/LXHXtpSbxIVvgTqtAuGYT0hGkCFtUQaviJG
z/r3DnGiFu+l8FPxw+CQEgeeyNG49TzyA7aODswWm3o6aWElptJDdQ8CgYEAw/7p
RQkgLaKzLNidCNDNq/4/8zmJoMe6GVLGl+HVHKzn6pPZfctI201yaJ5LbyPaYD/2
2MlDleg4A9zZILykS3QRo/ex3H+7exYA4qQcLqXJT8D5oMlNvFiF6NWHu7WJtXlt
q05vcBXdRy6s3by1+SXyH42H6H930AIER1366YUCgYAxfLlPniqjzzCBgTIpwvyH
lxyhO7blBArWhjDpgPWsUcCDA8DSEx7/0wSRAIVG32/VYvEc7asVHzNLrrxizUlY
A75+SPMBIsllvODyrZF1epdyXodehX+8ush6T+Dp+G6TYPywu4F2iec+z9IFyLib
NiUPQQUI53LBrx74+ZqG1wKBgBhFlTXLb4S3RWEkYi4ZTZ8jGWBRm82hblZ8fcOJ
YA7xCrduH90IM7mU2bpDACx/UCfjQ/qM0iXaYDV6QBlhwybk9NpNbmVUHC+eBfYL
RMIyHcAWsdNLmqjcfZjb+LcyQB+NLhus1vgWfRS3nwjGufJk1Js7t7z/LCNCXK1J
4izRAoGBANSNXXYF32hQ8CJt/LqbtQaRcffdwoytFVps1lIlSfmu+huxZ5/yLuZt
AWy9Ob5SiAXeEbPTqYA24qn8ACYL/Ar2CskY22HRJz/poQ1FuMRjf+/qsRP0VF2a
pS4yn7u/iKCSIRheFY8w/u8gzxx/rSks/xEmoBCgOq8nguQkqa1h
-----END RSA PRIVATE KEY-----
</code></pre>

<p>public_key.pem</p>

<pre><code>    -----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnDI+Q/tbVToQ30DBB0y6
89ivB01gRhuAEYCqMeezhE8CrzQN3WGsox3Q3ortLZkbuFrMQdBN6ZjD1w0k9utx
Lr3MFRbXqAxeXd7NlCz9biBaQw1LboKr10kVyENPTRT2NrQnfsFsI6WfvMKiu62/
ZEHT80DMUvilSSuRbNKrfwMqhKiRbM83Olxepk8XBNyRimvypxaPhcEiQYFlirVq
/jvyUaJg01VjXxp1PKqXwIurF+Eu+W6b4OotLHY0EAPckNiP4XOHMNWd/NG5jV3F
mEzz5Cn9IdMDHSewcA6/rsOqVx0bZOBnSsmVLu9fPsCyrs7eBSXZSlIFKHD39HR6
eQIDAQAB
-----END PUBLIC KEY-----
</code></pre>

<p><code>$crypted</code> returns to me encrypted data however decryption echos nothing. </p>

<p>I did an echo of the result and it comes back as <code>NULL</code> any ideas?</p>
","<p>Using <code>openssl rsa</code> to dump the key contents reveals that the private and public keys you posted above have a different modulus.  For a matching keypair, the modulus would be identical in the private and public keys.  In other words, you definately mixed up different keys there.</p>

<p>To detect this, OpenSSL proper has the <a href=""https://www.openssl.org/docs/crypto/RSA_check_key.html"" rel=""nofollow""><code>RSA_check_key()</code></a> function to check whether an RSA keypair is usable, but the <a href=""http://php.net/manual/en/book.openssl.php"" rel=""nofollow"">PHP wrapper for OpenSSL</a> does not seem to expose that function to the user.</p>

<p>Public key:</p>

<pre><code>% openssl rsa -in public_key.pem -pubin -text
Public-Key: (2048 bit)
Modulus:
    00:9c:32:3e:43:fb:5b:55:3a:10:df:40:c1:07:4c:
    ba:f3:d8:af:07:4d:60:46:1b:80:11:80:aa:31:e7:
    b3:84:4f:02:af:34:0d:dd:61:ac:a3:1d:d0:de:8a:
    ed:2d:99:1b:b8:5a:cc:41:d0:4d:e9:98:c3:d7:0d:
    24:f6:eb:71:2e:bd:cc:15:16:d7:a8:0c:5e:5d:de:
    cd:94:2c:fd:6e:20:5a:43:0d:4b:6e:82:ab:d7:49:
    15:c8:43:4f:4d:14:f6:36:b4:27:7e:c1:6c:23:a5:
    9f:bc:c2:a2:bb:ad:bf:64:41:d3:f3:40:cc:52:f8:
    a5:49:2b:91:6c:d2:ab:7f:03:2a:84:a8:91:6c:cf:
    37:3a:5c:5e:a6:4f:17:04:dc:91:8a:6b:f2:a7:16:
    8f:85:c1:22:41:81:65:8a:b5:6a:fe:3b:f2:51:a2:
    60:d3:55:63:5f:1a:75:3c:aa:97:c0:8b:ab:17:e1:
    2e:f9:6e:9b:e0:ea:2d:2c:76:34:10:03:dc:90:d8:
    8f:e1:73:87:30:d5:9d:fc:d1:b9:8d:5d:c5:98:4c:
    f3:e4:29:fd:21:d3:03:1d:27:b0:70:0e:bf:ae:c3:
    aa:57:1d:1b:64:e0:67:4a:c9:95:2e:ef:5f:3e:c0:
    b2:ae:ce:de:05:25:d9:4a:52:05:28:70:f7:f4:74:
    7a:79
Exponent: 65537 (0x10001)
writing RSA key
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnDI+Q/tbVToQ30DBB0y6
89ivB01gRhuAEYCqMeezhE8CrzQN3WGsox3Q3ortLZkbuFrMQdBN6ZjD1w0k9utx
Lr3MFRbXqAxeXd7NlCz9biBaQw1LboKr10kVyENPTRT2NrQnfsFsI6WfvMKiu62/
ZEHT80DMUvilSSuRbNKrfwMqhKiRbM83Olxepk8XBNyRimvypxaPhcEiQYFlirVq
/jvyUaJg01VjXxp1PKqXwIurF+Eu+W6b4OotLHY0EAPckNiP4XOHMNWd/NG5jV3F
mEzz5Cn9IdMDHSewcA6/rsOqVx0bZOBnSsmVLu9fPsCyrs7eBSXZSlIFKHD39HR6
eQIDAQAB
-----END PUBLIC KEY-----
</code></pre>

<p>Private key:</p>

<pre><code>% openssl rsa -in private_key.pem -text
Private-Key: (2048 bit)
modulus:
    00:b7:0c:6f:3e:96:ef:6d:e2:42:ce:d5:a5:40:20:
    b4:c3:69:90:4c:d2:02:6a:ba:48:91:b1:53:ce:51:
    28:a1:70:3c:66:8d:f4:b0:df:5c:74:7d:08:7d:af:
    e9:22:17:f1:d0:b6:e6:f9:ed:37:17:3e:4d:65:e9:
    49:67:94:11:89:17:e8:37:db:5c:6f:9c:d8:af:0b:
    d5:5b:1d:52:47:a6:68:e6:6a:12:4b:96:04:bd:54:
    96:56:9b:b7:0f:bc:77:20:ed:97:56:d4:c7:95:64:
    d3:45:99:36:73:e6:6e:15:1d:de:23:00:d9:6e:6b:
    8e:89:39:ae:24:c4:02:26:24:5d:f2:9a:9f:e2:c5:
    42:a0:ac:d6:ad:49:81:b9:3d:a9:73:fb:1d:51:0e:
    08:3f:29:46:2b:7c:86:57:2c:47:35:af:20:0a:40:
    6c:ff:35:6a:dc:8d:19:bb:b3:71:f2:65:bc:0d:39:
    fd:12:f3:f4:da:69:05:1f:29:c9:66:02:84:d1:22:
    5f:b6:ee:8c:a7:d0:43:97:8a:91:e1:3f:3c:f7:a2:
    be:67:51:62:de:ac:77:88:ae:a7:92:36:23:5c:26:
    18:64:1f:74:ea:e5:a2:aa:6e:c1:2b:fe:33:6f:3b:
    9c:eb:4e:3e:05:9e:0b:38:f8:02:b0:ef:9a:66:3c:
    77:cb
publicExponent: 65537 (0x10001)
privateExponent:
    18:13:7e:9e:50:e3:f5:24:09:7d:83:04:55:46:f7:
    ff:ab:e6:da:f3:d4:75:8d:42:f6:46:c8:ab:1e:69:
    a5:b2:49:7f:83:b4:67:7f:39:7d:e8:e4:31:03:ee:
    3a:19:c4:28:9b:a6:0d:c1:71:b9:90:ec:45:37:45:
    fc:65:b1:58:c2:d8:3c:60:91:eb:ec:49:63:dc:be:
    97:59:67:f5:1c:a2:37:8c:44:13:c5:0b:a2:8b:79:
    aa:b2:98:85:6d:58:8d:f0:32:33:ad:91:02:c9:5c:
    30:8f:52:66:34:2c:ce:82:3b:31:87:6f:11:e2:fb:
    c0:78:e1:ba:dc:3d:1c:1e:fb:32:4a:e4:02:e1:3d:
    f1:44:c8:fb:27:cf:d4:70:d8:f2:c1:59:c7:97:35:
    e6:58:37:48:da:0b:af:7d:af:e6:bf:b7:49:1d:27:
    4f:b8:f4:b2:d3:bc:58:c5:10:26:4b:02:b6:53:2b:
    51:99:6f:30:02:78:cf:df:16:5e:d7:bc:ad:ed:b1:
    d0:24:8b:3c:ac:d0:3c:25:7b:20:ed:20:d9:16:96:
    0f:a1:ce:df:2e:8a:35:58:ef:c3:2f:3f:7e:91:33:
    c9:38:40:88:d2:5f:fd:a9:fe:3b:a9:b3:26:43:e0:
    8d:91:f4:e5:be:9a:5f:6c:22:6a:24:51:de:58:29:
    a1
prime1:
    00:ef:16:cb:2e:f6:79:75:da:5f:ff:20:52:56:91:
    b2:b5:f5:3f:3f:35:8a:e4:bf:5c:3d:16:eb:40:f9:
    65:ea:22:a0:8a:60:0e:4d:42:e2:55:00:10:61:a0:
    83:2f:f7:ab:ff:38:d5:53:e6:b6:2b:1b:f5:1b:cc:
    97:fc:b5:c7:5e:da:52:6f:12:15:be:04:ea:b4:0b:
    86:61:3d:21:1a:40:85:b5:44:1a:be:22:46:cf:fa:
    f7:0e:71:a2:16:ef:a5:f0:53:f1:c3:e0:90:12:07:
    9e:c8:d1:b8:f5:3c:f2:03:b6:8e:0e:cc:16:9b:7a:
    3a:69:61:25:a6:d2:43:75:0f
prime2:
    00:c3:fe:e9:45:09:20:2d:a2:b3:2c:d8:9d:08:d0:
    cd:ab:fe:3f:f3:39:89:a0:c7:ba:19:52:c6:97:e1:
    d5:1c:ac:e7:ea:93:d9:7d:cb:48:db:4d:72:68:9e:
    4b:6f:23:da:60:3f:f6:d8:c9:43:95:e8:38:03:dc:
    d9:20:bc:a4:4b:74:11:a3:f7:b1:dc:7f:bb:7b:16:
    00:e2:a4:1c:2e:a5:c9:4f:c0:f9:a0:c9:4d:bc:58:
    85:e8:d5:87:bb:b5:89:b5:79:6d:ab:4e:6f:70:15:
    dd:47:2e:ac:dd:bc:b5:f9:25:f2:1f:8d:87:e8:7f:
    77:d0:02:04:47:5d:fa:e9:85
exponent1:
    31:7c:b9:4f:9e:2a:a3:cf:30:81:81:32:29:c2:fc:
    87:97:1c:a1:3b:b6:e5:04:0a:d6:86:30:e9:80:f5:
    ac:51:c0:83:03:c0:d2:13:1e:ff:d3:04:91:00:85:
    46:df:6f:d5:62:f1:1c:ed:ab:15:1f:33:4b:ae:bc:
    62:cd:49:58:03:be:7e:48:f3:01:22:c9:65:bc:e0:
    f2:ad:91:75:7a:97:72:5e:87:5e:85:7f:bc:ba:c8:
    7a:4f:e0:e9:f8:6e:93:60:fc:b0:bb:81:76:89:e7:
    3e:cf:d2:05:c8:b8:9b:36:25:0f:41:05:08:e7:72:
    c1:af:1e:f8:f9:9a:86:d7
exponent2:
    18:45:95:35:cb:6f:84:b7:45:61:24:62:2e:19:4d:
    9f:23:19:60:51:9b:cd:a1:6e:56:7c:7d:c3:89:60:
    0e:f1:0a:b7:6e:1f:dd:08:33:b9:94:d9:ba:43:00:
    2c:7f:50:27:e3:43:fa:8c:d2:25:da:60:35:7a:40:
    19:61:c3:26:e4:f4:da:4d:6e:65:54:1c:2f:9e:05:
    f6:0b:44:c2:32:1d:c0:16:b1:d3:4b:9a:a8:dc:7d:
    98:db:f8:b7:32:40:1f:8d:2e:1b:ac:d6:f8:16:7d:
    14:b7:9f:08:c6:b9:f2:64:d4:9b:3b:b7:bc:ff:2c:
    23:42:5c:ad:49:e2:2c:d1
coefficient:
    00:d4:8d:5d:76:05:df:68:50:f0:22:6d:fc:ba:9b:
    b5:06:91:71:f7:dd:c2:8c:ad:15:5a:6c:d6:52:25:
    49:f9:ae:fa:1b:b1:67:9f:f2:2e:e6:6d:01:6c:bd:
    39:be:52:88:05:de:11:b3:d3:a9:80:36:e2:a9:fc:
    00:26:0b:fc:0a:f6:0a:c9:18:db:61:d1:27:3f:e9:
    a1:0d:45:b8:c4:63:7f:ef:ea:b1:13:f4:54:5d:9a:
    a5:2e:32:9f:bb:bf:88:a0:92:21:18:5e:15:8f:30:
    fe:ef:20:cf:1c:7f:ad:29:2c:ff:11:26:a0:10:a0:
    3a:af:27:82:e4:24:a9:ad:61
writing RSA key
-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAtwxvPpbvbeJCztWlQCC0w2mQTNICarpIkbFTzlEooXA8Zo30
sN9cdH0Ifa/pIhfx0Lbm+e03Fz5NZelJZ5QRiRfoN9tcb5zYrwvVWx1SR6Zo5moS
S5YEvVSWVpu3D7x3IO2XVtTHlWTTRZk2c+ZuFR3eIwDZbmuOiTmuJMQCJiRd8pqf
4sVCoKzWrUmBuT2pc/sdUQ4IPylGK3yGVyxHNa8gCkBs/zVq3I0Zu7Nx8mW8DTn9
EvP02mkFHynJZgKE0SJftu6Mp9BDl4qR4T8896K+Z1Fi3qx3iK6nkjYjXCYYZB90
6uWiqm7BK/4zbzuc604+BZ4LOPgCsO+aZjx3ywIDAQABAoIBABgTfp5Q4/UkCX2D
BFVG9/+r5trz1HWNQvZGyKseaaWySX+DtGd/OX3o5DED7joZxCibpg3BcbmQ7EU3
RfxlsVjC2DxgkevsSWPcvpdZZ/UcojeMRBPFC6KLeaqymIVtWI3wMjOtkQLJXDCP
UmY0LM6COzGHbxHi+8B44brcPRwe+zJK5ALhPfFEyPsnz9Rw2PLBWceXNeZYN0ja
C699r+a/t0kdJ0+49LLTvFjFECZLArZTK1GZbzACeM/fFl7XvK3tsdAkizys0Dwl
eyDtINkWlg+hzt8uijVY78MvP36RM8k4QIjSX/2p/jupsyZD4I2R9OW+ml9sImok
Ud5YKaECgYEA7xbLLvZ5ddpf/yBSVpGytfU/PzWK5L9cPRbrQPll6iKgimAOTULi
VQAQYaCDL/er/zjVU+a2Kxv1G8yX/LXHXtpSbxIVvgTqtAuGYT0hGkCFtUQaviJG
z/r3DnGiFu+l8FPxw+CQEgeeyNG49TzyA7aODswWm3o6aWElptJDdQ8CgYEAw/7p
RQkgLaKzLNidCNDNq/4/8zmJoMe6GVLGl+HVHKzn6pPZfctI201yaJ5LbyPaYD/2
2MlDleg4A9zZILykS3QRo/ex3H+7exYA4qQcLqXJT8D5oMlNvFiF6NWHu7WJtXlt
q05vcBXdRy6s3by1+SXyH42H6H930AIER1366YUCgYAxfLlPniqjzzCBgTIpwvyH
lxyhO7blBArWhjDpgPWsUcCDA8DSEx7/0wSRAIVG32/VYvEc7asVHzNLrrxizUlY
A75+SPMBIsllvODyrZF1epdyXodehX+8ush6T+Dp+G6TYPywu4F2iec+z9IFyLib
NiUPQQUI53LBrx74+ZqG1wKBgBhFlTXLb4S3RWEkYi4ZTZ8jGWBRm82hblZ8fcOJ
YA7xCrduH90IM7mU2bpDACx/UCfjQ/qM0iXaYDV6QBlhwybk9NpNbmVUHC+eBfYL
RMIyHcAWsdNLmqjcfZjb+LcyQB+NLhus1vgWfRS3nwjGufJk1Js7t7z/LCNCXK1J
4izRAoGBANSNXXYF32hQ8CJt/LqbtQaRcffdwoytFVps1lIlSfmu+huxZ5/yLuZt
AWy9Ob5SiAXeEbPTqYA24qn8ACYL/Ar2CskY22HRJz/poQ1FuMRjf+/qsRP0VF2a
pS4yn7u/iKCSIRheFY8w/u8gzxx/rSks/xEmoBCgOq8nguQkqa1h
-----END RSA PRIVATE KEY-----
</code></pre>
","1236","<php><openssl><rsa><private-key><encryption-asymmetric>","1","0","2","2013-03-03 11:03:34","15182891","2","","","","","2013-03-03 04:53:43",""
"46968514","How to fix bad length error for DecodeRSAPrivateKey?","<p>I'm getting this error: </p>

<blockquote>
  <ol>
  <li>Bad length</li>
  <li>Object reference not set to an instance of an object.</li>
  </ol>
</blockquote>

<p>I'm using this code: </p>

<pre class=""lang-cs prettyprint-override""><code>    public string RSASign(string data, string PhysicalApplicationPath)
    {
        RSACryptoServiceProvider rsaCsp = LoadCertificateFile(PhysicalApplicationPath);
        byte[] dataBytes = System.Text.Encoding.Default.GetBytes(data);
        byte[] signatureBytes = rsaCsp.SignData(dataBytes, ""SHA256"");    &lt;--------error here:Object reference not set to an instance of an object.
        return BitConverter.ToString(signatureBytes).Replace(""-"", null);
    }

    byte[] GetPem(string type, byte[] data)
    {
        string pem = Encoding.UTF8.GetString(data);
        string header = String.Format(""-----BEGIN {0}-----\\n"", type);
        string footer = String.Format(""-----END {0}-----"", type);
        int start = pem.IndexOf(header) + header.Length;
        int end = pem.IndexOf(footer, start);
        string base64 = pem.Substring(start, (end - start));
        return Convert.FromBase64String(base64);
    }

    public byte[] HexToBytes(string hex)
    {
        hex = hex.Trim();

        byte[] bytes = new byte[hex.Length / 2];

        for (int index = 0; index &lt; bytes.Length; index++)
        {
            bytes[index] = byte.Parse(hex.Substring(index * 2, 2), NumberStyles.HexNumber);
            //  Console.WriteLine(""bytes: "" + bytes);
        }

        return bytes;
    }

    RSACryptoServiceProvider LoadCertificateFile(string filename)
    {
        using (System.IO.FileStream fs = System.IO.File.OpenRead(filename))
        {
            byte[] data = new byte[fs.Length];
            byte[] res = null;
            fs.Read(data, 0, data.Length);
            if (data[0] != 0x30)
            {
                res = GetPem(""PRIVATE KEY"", data);
            }
            try
            {
                RSACryptoServiceProvider rsa = DecodeRSAPrivateKey(res);

                return rsa;


            }
            catch (Exception ex)
            {
                Console.WriteLine(""ex :"" + ex);

            }

            return null;
        }
    }

    bool verbose = false;

    public RSACryptoServiceProvider DecodeRSAPrivateKey(byte[] privkey)
    {
        byte[] MODULUS, E, D, P, Q, DP, DQ, IQ;

        // --------- Set up stream to decode the asn.1 encoded RSA private key ------
        MemoryStream mem = new MemoryStream(privkey);
        BinaryReader binr = new BinaryReader(mem);  //wrap Memory Stream with BinaryReader for easy reading
        byte bt = 0;
        ushort twobytes = 0;
        int elems = 0;
        try
        {
            twobytes = binr.ReadUInt16();
            if (twobytes == 0x8130) //data read as little endian order (actual data order for Sequence is 30 81)
                binr.ReadByte();    //advance 1 byte
            else if (twobytes == 0x8230)
                binr.ReadInt16();    //advance 2 bytes
            else
                return null;

            twobytes = binr.ReadUInt16();
            if (twobytes != 0x0102) //version number
                return null;
            bt = binr.ReadByte();
            if (bt != 0x00)
                return null;


            //------ all private key components are Integer sequences ----
            elems = GetIntegerSize(binr);
            MODULUS = binr.ReadBytes(elems);

            elems = GetIntegerSize(binr);
            E = binr.ReadBytes(elems);

            elems = GetIntegerSize(binr);
            D = binr.ReadBytes(elems);

            elems = GetIntegerSize(binr);
            P = binr.ReadBytes(elems);

            elems = GetIntegerSize(binr);
            Q = binr.ReadBytes(elems);

            elems = GetIntegerSize(binr);
            DP = binr.ReadBytes(elems);

            elems = GetIntegerSize(binr);
            DQ = binr.ReadBytes(elems);

            elems = GetIntegerSize(binr);
            IQ = binr.ReadBytes(elems);

            Console.WriteLine(""showing components .."");
            if (verbose)
            {
                showBytes(""\nModulus"", MODULUS);
                showBytes(""\nExponent"", E);
                showBytes(""\nD"", D);
                showBytes(""\nP"", P);
                showBytes(""\nQ"", Q);
                showBytes(""\nDP"", DP);
                showBytes(""\nDQ"", DQ);
                showBytes(""\nIQ"", IQ);
            }

            // ------- create RSACryptoServiceProvider instance and initialize with public key -----
            CspParameters CspParameters = new CspParameters();
            CspParameters.Flags = CspProviderFlags.UseMachineKeyStore;
            RSACryptoServiceProvider RSA = new RSACryptoServiceProvider(1024, CspParameters);
            RSAParameters RSAparams = new RSAParameters();

            RSAparams.Modulus = MODULUS;
            RSAparams.Exponent = E;
            RSAparams.D = D;
            RSAparams.P = P;
            RSAparams.Q = Q;
            RSAparams.DP = DP;
            RSAparams.DQ = DQ;
            RSAparams.InverseQ = IQ;
            RSA.ImportParameters(RSAparams);
            return RSA;
        }
        catch (Exception ex)
        {
            Console.WriteLine(""ex1 :"" + ex);     &lt;-----error here : bad length
            return null;
        }
        finally
        {
            binr.Close();
        }
    }
</code></pre>

<p>I would appreciate any guidance, advice, or assistance in helping me get this resolved.</p>
","<h3>What you asked for:</h3>

<p>The <code>NullReferenceException</code> is caused by your exception handler in <code>DecodeRSAPrivateKey</code> returning null, but the caller not checking for it.</p>

<p>Your decode needs to be adjusted a bit for DER encoding vs CAPI encoding concerns (.NET has inherited the CAPI encoding restrictions):</p>

<p>1) The leading byte of Modulus must not be 0x00.  (DER requires it to be inserted if the next byte is >= 0x80).  So if it's there, you need to trim it out.</p>

<p>2) The leading byte of Exponent must not be 0x00.  Probably not an issue since your exponent is probably <code>[ 0x01, 0x00, 0x01 ]</code>, but it doesn't hurt to code defensively.</p>

<p>3) D must be exactly the same length as Modulus.  If D is too short you need to pad it (on ""the left"") with 0x00-values.  If it's one byte too long and starts with 0x00, remove the 0x00.</p>

<p>4) P.Length = (Modulus.Length + 1) / 2.  (RSA-1024 has Modulus.Length 128 and P.Length 64.  RSA-1032 has Modulus.Length 129 and P.Length 65).  Left pad with 0x00 as necessary.  If P is one byte too long and it starts with 0x00, remove the 0x00. (If it's too long still, then CAPI (and therefore .NET) cannot read this key from parameters; P and Q aren't of similar lengths)</p>

<p>5) Q.Length, DP.Length, DQ.Length, and InverseQ.Length must all equal P.Length.  Left pad with 0x00 as necessary, remove a leading 0x00 as necessary.</p>

<p>You also seem to be reading <code>BEGIN PRIVATE KEY</code> files (PKCS#8), but you're interpreting it like <code>BEGIN RSA PRIVATE KEY</code> (PKCS#1 RSAPrivateKey).  So you need to account for the header portions in the <code>PrivateKeyInfo</code> structure (<a href=""https://tools.ietf.org/html/rfc5208#section-5"" rel=""nofollow noreferrer"">https://tools.ietf.org/html/rfc5208#section-5</a>).</p>

<h3>What you might want instead:</h3>

<p>If you're really reading a PKCS#8, and you're on .NET Framework 4.6 or higher, just let CngKey and RSACng do the work for you:</p>

<pre><code>RSA LoadKeyFile(string filename)
{
    using (System.IO.FileStream fs = System.IO.File.OpenRead(filename))
    {
        byte[] data = new byte[fs.Length];
        byte[] res = null;
        fs.Read(data, 0, data.Length);
        if (data[0] != 0x30)
        {
            res = GetPem(""PRIVATE KEY"", data);
        }

        try
        {
            using (CngKey key = CngKey.Import(res, CngKeyBlobFormat.Pkcs8PrivateBlob))
            {
                return new RSACng(key);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(""ex :"" + ex);
        }

        return null;
    }
}
</code></pre>

<p>Then you just need to change your calling code to stop caring that it got an RSACryptoServiceProvider, just that it's RSA:</p>

<pre><code>public string RSASign(string data, string PhysicalApplicationPath)
{
    RSA rsa = LoadCertificateFile(PhysicalApplicationPath);
    byte[] dataBytes = System.Text.Encoding.Default.GetBytes(data);
    byte[] signatureBytes = rsa.SignData(dataBytes, HashAlgorithmName.SHA256, RSASignaturePadding.Pkcs1);
    return BitConverter.ToString(signatureBytes).Replace(""-"", null);
}
</code></pre>

<p>I left it as PKCS1 signature padding since that's what RSACryptoServiceProvider's method would have done.</p>
","1232","<c#><encryption><rsa><public-key-encryption><private-key>","1","0","1","2017-10-30 16:39:10","","2","1","6535399","","2017-10-30 16:34:32","2017-10-27 02:24:05",""
"44673695","Load encrypted PKCS1 private key from file","<p>I have a PKCS1 private key in a file and I load it using </p>

<pre><code>b, err := ioutil.ReadFile(path)
if err != nil {
    return nil, err
}
</code></pre>

<p>Then, I try to convert it into private key object</p>

<pre><code>block, _ := pem.Decode(b)
der, err := x509.DecryptPEMBlock(block, []byte(""qwerty""))
if err != nil {
    return nil, err
}

bytes := pem.EncodeToMemory(&amp;pem.Block{Type: ""RSA PRIVATE KEY"", Bytes: der})

return x509.ParsePKCS1PrivateKey(bytes)
</code></pre>

<p>But this code throws exception in <code>DecryptPEMBlock</code> </p>

<pre><code>x509: no DEK-Info header in block
</code></pre>

<p>I didn't find any documentation about this in golang</p>
","<p>Go does not have package to decode PKCS files it seems</p>

<p>Checkout this link for more details <a href=""https://stackoverflow.com/questions/32981821/no-dek-info-header-in-block-when-attempting-to-read-encrypted-private-key"">PKCS</a></p>

<p>I cant find a package to decode PKCS1 keys </p>

<p>Use this package to decode the <a href=""https://github.com/youmark/pkcs8/blob/master/pkcs8.go#L103"" rel=""nofollow noreferrer"">PKCS8</a> files, there are some packages to decode PKCS8, PKCS10, PKCS12 but not for PKCS1</p>
","1231","<go><rsa><private-key><pkcs#11>","1","0","2","2017-06-24 17:10:05","","1","","7190910","","2017-06-24 17:10:05","2017-06-21 10:34:47",""
"44673695","Load encrypted PKCS1 private key from file","<p>I have a PKCS1 private key in a file and I load it using </p>

<pre><code>b, err := ioutil.ReadFile(path)
if err != nil {
    return nil, err
}
</code></pre>

<p>Then, I try to convert it into private key object</p>

<pre><code>block, _ := pem.Decode(b)
der, err := x509.DecryptPEMBlock(block, []byte(""qwerty""))
if err != nil {
    return nil, err
}

bytes := pem.EncodeToMemory(&amp;pem.Block{Type: ""RSA PRIVATE KEY"", Bytes: der})

return x509.ParsePKCS1PrivateKey(bytes)
</code></pre>

<p>But this code throws exception in <code>DecryptPEMBlock</code> </p>

<pre><code>x509: no DEK-Info header in block
</code></pre>

<p>I didn't find any documentation about this in golang</p>
","<p>I made a mistake with my private key file and here is a working code </p>

<pre><code>func GetPrivateKey(path string) (*rsa.PrivateKey, error) {
    b, err := ioutil.ReadFile(path)
    if err != nil {
        return nil, err
    }

    block, _ := pem.Decode(b)
    der, err := x509.DecryptPEMBlock(block, []byte(*PrivateKeyPassword))
    if err != nil {
        return nil, err
    }

    return x509.ParsePKCS1PrivateKey(der)
}
</code></pre>

<p>P.S. Go does have a package to decrypt PKCS1 private keys, but does not have for PKCS8. </p>
","1231","<go><rsa><private-key><pkcs#11>","1","2","2","2017-06-24 17:10:05","","1","","7190910","","2017-06-24 17:10:05","2017-06-21 10:34:47",""
"55949510","Casting private key to RSACryptoServiceProvider not working","<p>I have a X509Certificate2 variable and I'm trying to cast the private key of the variable to a RSACryptoServiceProvider</p>

<pre><code>RSACryptoServiceProvider pkey = (RSACryptoServiceProvider)cert.PrivateKey;
</code></pre>

<p>However I get this exception.</p>

<blockquote>
  <p>System.InvalidCastException: 'Unable to cast object of type 'System.Security.Cryptography.RSACng' to type 'System.Security.Cryptography.RSACryptoServiceProvider'.'</p>
</blockquote>

<p>It's weird that this happens because other answers in SO suggested the same procedure as mine but I get an exception. Any solutions to this?</p>
","<p>So after a few tries and discussions in the comments I came up with the following solution.</p>

<pre><code>            RSA rsa = (RSA)cert.PrivateKey;
        (cert.PrivateKey as RSACng).Key.SetProperty(
            new CngProperty(
                ""Export Policy"",
                BitConverter.GetBytes((int)CngExportPolicies.AllowPlaintextExport),
                CngPropertyOptions.Persist));

        RSAParameters RSAParameters = rsa.ExportParameters(true);                      

        AsymmetricCipherKeyPair keypair = DotNetUtilities.GetRsaKeyPair(RSAParameters);
</code></pre>

<p>The problem was that the variable <code>rsa</code> wasn't exportable. To change this I set a new CngProperty for the export policy. Works perfectly now</p>
","1231","<c#><rsa><private-key>","2","2","1","2019-05-02 12:51:03","55952900","15","1","9757485","","2019-05-02 10:35:30","2019-05-02 09:33:19",""
"48167699","Convert DER to PEM, no key part in the resulting file","<p>I have converted a CER/DER certificate with something like this:  </p>

<pre><code>openssl x509 -inform der -in hostname.cer -out hostname.pem
</code></pre>

<p>The resulting PEM file contains just:</p>

<pre><code>-----BEGIN CERTIFICATE-----
... contents here.. 
-----END CERTIFICATE-----
</code></pre>

<p>But it does not contain the key part, is that normal? So I cannot use it in PHP/SOAPClient because it won't connect to the host.</p>

<p>On the other hand, I have successfuly converted PFX/P12 format to PEM and the resulting file contains both certificate and key. But in the above case of the DER format certificate it doesn't.</p>

<p>What I used to convert the PFX to PEM was:</p>

<pre><code>openssl pkcs12 -in ALEXANDRU_CATALIN.pfx -clcerts -nokeys -out ALEXANDRU_CATALIN_mycert.pem
openssl pkcs12 -in ALEXANDRU_CATALIN.pfx -nocerts -nodes -out ALEXANDRU_CATALIN_mykey.pem
</code></pre>

<p>And then join contents of both files into one called <code>bundle.pem</code>. This worked, I ended with a file with bot certificate and key and it connects vía SOAP to the API but as I say the DER to PEM doesn't give me a certificate that will work.</p>

<p>Any ideas on this? Am I missing something? Is the DER format not containing the key? Do I need something else?</p>
","<p>By default the public key is not converted.</p>

<p>BUT you can export it by adding argument <em>-pubkey</em></p>

<pre><code>openssl x509 -inform der -in hostname.cer -out hostname.pem -pubkey
</code></pre>

<p>will give you a PEM file as following :</p>

<pre><code>-----BEGIN PUBLIC KEY-----
{...}
-----END PUBLIC KEY-----
-----BEGIN CERTIFICATE-----
{...}
-----END CERTIFICATE-----
</code></pre>

<hr>

<p>Reference: <a href=""https://www.openssl.org/docs/manmaster/man1/x509.html"" rel=""nofollow noreferrer"">X509 documentation</a> </p>
","1231","<ssl><soap><certificate><private-key><pkix>","0","0","2","2018-01-10 03:53:15","48171446","1","","608639","","2018-01-10 03:53:15","2018-01-09 11:55:10",""
"48167699","Convert DER to PEM, no key part in the resulting file","<p>I have converted a CER/DER certificate with something like this:  </p>

<pre><code>openssl x509 -inform der -in hostname.cer -out hostname.pem
</code></pre>

<p>The resulting PEM file contains just:</p>

<pre><code>-----BEGIN CERTIFICATE-----
... contents here.. 
-----END CERTIFICATE-----
</code></pre>

<p>But it does not contain the key part, is that normal? So I cannot use it in PHP/SOAPClient because it won't connect to the host.</p>

<p>On the other hand, I have successfuly converted PFX/P12 format to PEM and the resulting file contains both certificate and key. But in the above case of the DER format certificate it doesn't.</p>

<p>What I used to convert the PFX to PEM was:</p>

<pre><code>openssl pkcs12 -in ALEXANDRU_CATALIN.pfx -clcerts -nokeys -out ALEXANDRU_CATALIN_mycert.pem
openssl pkcs12 -in ALEXANDRU_CATALIN.pfx -nocerts -nodes -out ALEXANDRU_CATALIN_mykey.pem
</code></pre>

<p>And then join contents of both files into one called <code>bundle.pem</code>. This worked, I ended with a file with bot certificate and key and it connects vía SOAP to the API but as I say the DER to PEM doesn't give me a certificate that will work.</p>

<p>Any ideas on this? Am I missing something? Is the DER format not containing the key? Do I need something else?</p>
","<p>A DER certificate file won't contain the private key.  So there's no private key to convert.  Only a PFX or a ""multi-PEM"" can contain both a certificate and a private key.</p>
","1231","<ssl><soap><certificate><private-key><pkix>","0","0","2","2018-01-10 03:53:15","48171446","1","","608639","","2018-01-10 03:53:15","2018-01-09 11:55:10",""
"48552294","Private key parsing with PemReader and Openssl","<p>I wrote a provisioning system for an HTTPS proxy. Before push a configuration file and uploading certificate and private key I do some validations. I have found a case when while a private key is validated by Java using PemReader OpenSSL doesn't validate the same file. This causes the httpd server to stop working since it's getting a wrong key.</p>

<p>I have made a test to reproduce it:</p>

<p>using openssl I have an error</p>

<pre><code>$ openssl rsa -in wrong_key_test.key -check
unable to load Private Key
140736227525512:error:0906D064:PEM routines:PEM_read_bio:bad base64 decode:/BuildRoot/Library/Caches/com.apple.xbs/Sources/libressl/libressl-22/libressl/crypto/pem/pem_lib.c:828:
</code></pre>

<p>But when I run this junit test everything is ok. My expectation was to have an exception , have you any idea about it? Is it my validation wrong ?</p>

<p>This is the junit</p>

<pre><code>package eu.ssl.test.validator;
import static org.junit.Assert.assertNotEquals;
import java.io.File;
import java.io.IOException;
import java.io.StringReader;
import java.security.KeyFactory;
import java.security.Security;
import java.security.interfaces.RSAPrivateKey;
import java.security.spec.PKCS8EncodedKeySpec;

import org.apache.commons.io.FileUtils;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.bouncycastle.util.io.pem.PemObject;
import org.bouncycastle.util.io.pem.PemReader;
import org.junit.Before;
import org.junit.Test;

public class PemReaderTest {

private String privateKey;

@Before
public void setUp() throws IOException {
    this.privateKey = FileUtils.readFileToString(new File(""./wrong_key_test.key""));
}

@Test
public void test() throws Exception {
    Security.addProvider(new BouncyCastleProvider());
    PemReader pemReader = new PemReader(new StringReader(this.privateKey));
    PemObject pemObject;
    try {
        pemObject = pemReader.readPemObject();
    } finally {
        pemReader.close();
    }
    KeyFactory factory = KeyFactory.getInstance(""RSA"");
    byte[] content = pemObject.getContent();
    PKCS8EncodedKeySpec privKeySpec = new PKCS8EncodedKeySpec(content);
    RSAPrivateKey privateKey = (RSAPrivateKey) factory.generatePrivate(privKeySpec);
    String privateKeyModulus = privateKey.getModulus().toString();
    assertNotEquals("""", privateKeyModulus);
}   
}
</code></pre>

<p>This is the PK</p>

<pre class=""lang-none prettyprint-override""><code>-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEA2lKPRVgFN8TfOhex+IJ6YMKUKeZgHZUGsJpHo/ipeYVeWUGa
jKVANloG3IX/I5Zo8FZ6R6BVCEisaGqH35HwktZ+vdrGzuRNGUERnZiy1nXzKDmV
CGdBY/PxErvvEyygHPd8X9HNGagjOlKLrPGyN2dAp6sMpljNevSzbXYxCX0KOm9z
ox40c2qdXFqa26mUWKVVZ6TdYSIeV1s/n3oRvAA3fbFAdTg4xM++g/V8LXyipDK4
gEqNPwJzzvE6u0P0u+MFCEgogbVZLVelLq6OzTU27pigwourVAf8eWyRYX8TOz2E
A1HDDKy7dSwTaIz7TPXfYqwe+bwLEl5vX/dQ6QIDAQABAoIBADBPcJChp5XtpI/Q
Snt5M+dRZ0PWTJJ/NZnCqfOoxKe1UWli0PYqYwkj5rzJkemoENSN7kUHP4mzuyLn
3+UjAB8eA7GzRabmcgESmvlKnthCBWpzQ302jAu4ITJKD98oUs3WHdl+LWpuAE2Z
knrUiOElofL4MLZmlCGPIF0qeDNm5QkLanMyzu7bduo8etwn2NNBHxDdc4eW2c2l
d4m1INObx4ZyAkoBWksKN8PsDH2I3FZJFvkgve1fFhff0U+CtertfOwlFoAmDv9j
FtJq2Y6H2p+Q1eyRlh0OLAK7qZ5MhgBOMe3PNxeJWa3S4Z/gevihweclmK/F9e9T
/V5JVgECgYEA/W6eKy2cgkajjgBPu4tsW8XTo9lyWnWLYUY2PacgfhT7zkZy4s4g
cfP1zjjGXZaDYgo7MPoBM0xFLYbrWQ7j8GgA18uTHZs2yjYya1a6iyi8RMdQpRzd
jzCDfHNeJ2YU1apVuqs8r99sskkg/S2gd31XCuKwYTgCVgi4GmczUiECgYEA3Ije
0F/Ojb7dV35w0K+NK6rl/RL42cDcy5qjEAlI5zUcbxubjy+gHwCBM6dwx8frIeaX
BG512loqoALKXvLzSUAWbnPsvkQCOkcBPvi48tkWh3h1QO1S1U38KrWr58+9WCLs
5tL14l8O8JQmNg/0jLA4k3OHhL/gy6VQGolLNckCgYB5T9kgnA2+AqhJ0fZYtO2i
pHihhvYJPRkB8EUIkBaqo8rBO9HEpZy8T2ZLV7wEkobDiFg7IoEumATJPTss/0a3
DmHQ6l66nlDEzNqnrPVQpagxWCNPVhjscPGPwf3A6Ely2b19xHghS9bRJNZIuu2E
JRhkWozJjLD5k+Tkpp/XYQKBgDiv/gY1+lQ5MZAh8kHSPklxPnkU/V6L0rWLZErk
+BZmco6k3BGsPk55xLxQWA8idnBaY4tCEY01DCvhS7+oV50Gmj1+Eua9eI0eX1We
fXv/DWl5LzqnRlmKGD2qQSvvHE6he5/Brm6n3KE+k6vl4gif64sLcVRQNipirfqE
PA7xAoGBAJ8wfxLaj86/f+JU2jAd34HYZpNQ1mEb2TqZkrLqk78VXaKhyZjw2IGe
Pt5ROLZNIQbVWcTSMD2TrDsZGDY5zq5hXnRXb2h1Q1PHbbixl0s3TnDZ0JGxxrLQ
iAc48q1o36aAYVSyY/JLR3Q9Su97+i55Ud5rDYW5ThLcACsjxB/mL
-----END RSA PRIVATE KEY-----
</code></pre>

<p>Thanks in advance
Nicola</p>
","<blockquote>
  <p>My expectation was to have an exception , have you any idea about it? Is it my validation wrong?</p>
</blockquote>

<p>The key is malformed. First, save the PEM encoded key:</p>

<pre class=""lang-none prettyprint-override""><code>echo '-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEA2lKPRVgFN8TfOhex+IJ6YMKUKeZgHZUGsJpHo/ipeYVeWUGa
...
iAc48q1o36aAYVSyY/JLR3Q9Su97+i55Ud5rDYW5ThLcACsjxB/mL
-----END RSA PRIVATE KEY-----' &gt; key.pem
</code></pre>

<p>Second, convert it to DER. This strips the first and last lines, and then base64 decodes it:</p>



<pre><code>sed '$d' &lt; key.pem | sed ""1d"" | openssl base64 -d &gt; key.der
</code></pre>

<p>Third, examine the key with another tool:</p>

<pre class=""lang-none prettyprint-override""><code>$ dumpasn1 key.der
   0 1187: SEQUENCE {
   4    1:   INTEGER 0
   7  257:   INTEGER
         :     00 DA 52 8F 45 58 05 37 C4 DF 3A 17 B1 F8 82 7A
         :     60 C2 94 29 E6 60 1D 95 06 B0 9A 47 A3 F8 A9 79
         :     85 5E 59 41 9A 8C A5 40 36 5A 06 DC 85 FF 23 96
         :     68 F0 56 7A 47 A0 55 08 48 AC 68 6A 87 DF 91 F0
         :     92 D6 7E BD DA C6 CE E4 4D 19 41 11 9D 98 B2 D6
         :     75 F3 28 39 95 08 67 41 63 F3 F1 12 BB EF 13 2C
         :     A0 1C F7 7C 5F D1 CD 19 A8 23 3A 52 8B AC F1 B2
         :     37 67 40 A7 AB 0C A6 58 CD 7A F4 B3 6D 76 31 09
         :             [ Another 129 bytes skipped ]
 268    3:   INTEGER 65537
 273  256:   INTEGER
         :     30 4F 70 90 A1 A7 95 ED A4 8F D0 4A 7B 79 33 E7
         :     51 67 43 D6 4C 92 7F 35 99 C2 A9 F3 A8 C4 A7 B5
         :     51 69 62 D0 F6 2A 63 09 23 E6 BC C9 91 E9 A8 10
         :     D4 8D EE 45 07 3F 89 B3 BB 22 E7 DF E5 23 00 1F
         :     1E 03 B1 B3 45 A6 E6 72 01 12 9A F9 4A 9E D8 42
         :     05 6A 73 43 7D 36 8C 0B B8 21 32 4A 0F DF 28 52
         :     CD D6 1D D9 7E 2D 6A 6E 00 4D 99 92 7A D4 88 E1
         :     25 A1 F2 F8 30 B6 66 94 21 8F 20 5D 2A 78 33 66
         :             [ Another 128 bytes skipped ]
 533  129:   INTEGER
         :     00 FD 6E 9E 2B 2D 9C 82 46 A3 8E 00 4F BB 8B 6C
         :     5B C5 D3 A3 D9 72 5A 75 8B 61 46 36 3D A7 20 7E
         :     14 FB CE 46 72 E2 CE 20 71 F3 F5 CE 38 C6 5D 96
         :     83 62 0A 3B 30 FA 01 33 4C 45 2D 86 EB 59 0E E3
         :     F0 68 00 D7 CB 93 1D 9B 36 CA 36 32 6B 56 BA 8B
         :     28 BC 44 C7 50 A5 1C DD 8F 30 83 7C 73 5E 27 66
         :     14 D5 AA 55 BA AB 3C AF DF 6C B2 49 20 FD 2D A0
         :     77 7D 57 0A E2 B0 61 38 02 56 08 B8 1A 67 33 52
         :     21
 665  129:   INTEGER
         :     00 DC 88 DE D0 5F CE 8D BE DD 57 7E 70 D0 AF 8D
         :     2B AA E5 FD 12 F8 D9 C0 DC CB 9A A3 10 09 48 E7
         :     35 1C 6F 1B 9B 8F 2F A0 1F 00 81 33 A7 70 C7 C7
         :     EB 21 E6 97 04 6E 75 DA 5A 2A A0 02 CA 5E F2 F3
         :     49 40 16 6E 73 EC BE 44 02 3A 47 01 3E F8 B8 F2
         :     D9 16 87 78 75 40 ED 52 D5 4D FC 2A B5 AB E7 CF
         :     BD 58 22 EC E6 D2 F5 E2 5F 0E F0 94 26 36 0F F4
         :     8C B0 38 93 73 87 84 BF E0 CB A5 50 1A 89 4B 35
         :     C9
 797  128:   INTEGER
         :     79 4F D9 20 9C 0D BE 02 A8 49 D1 F6 58 B4 ED A2
         :     A4 78 A1 86 F6 09 3D 19 01 F0 45 08 90 16 AA A3
         :     CA C1 3B D1 C4 A5 9C BC 4F 66 4B 57 BC 04 92 86
         :     C3 88 58 3B 22 81 2E 98 04 C9 3D 3B 2C FF 46 B7
         :     0E 61 D0 EA 5E BA 9E 50 C4 CC DA A7 AC F5 50 A5
         :     A8 31 58 23 4F 56 18 EC 70 F1 8F C1 FD C0 E8 49
         :     72 D9 BD 7D C4 78 21 4B D6 D1 24 D6 48 BA ED 84
         :     25 18 64 5A 8C C9 8C B0 F9 93 E4 E4 A6 9F D7 61
 928  128:   INTEGER
         :     38 AF FE 06 35 FA 54 39 31 90 21 F2 41 D2 3E 49
         :     71 3E 79 14 FD 5E 8B D2 B5 8B 64 4A E4 F8 16 66
         :     72 8E A4 DC 11 AC 3E 4E 79 C4 BC 50 58 0F 22 76
         :     70 5A 63 8B 42 11 8D 35 0C 2B E1 4B BF A8 57 9D
         :     06 9A 3D 7E 12 E6 BD 78 8D 1E 5F 55 9E 7D 7B FF
         :     0D 69 79 2F 3A A7 46 59 8A 18 3D AA 41 2B EF 1C
         :     4E A1 7B 9F C1 AE 6E A7 DC A1 3E 93 AB E5 E2 08
         :     9F EB 8B 0B 71 54 50 36 2A 62 AD FA 84 3C 0E F1
1059  129:   INTEGER
         :     00 9F 30 7F 12 DA 8F CE BF 7F E2 54 DA 30 1D DF
         :     81 D8 66 93 50 D6 61 1B D9 3A 99 92 B2 EA 93 BF
         :     15 5D A2 A1 C9 98 F0 D8 81 9E 3E DE 51 38 B6 4D
         :     21 06 D5 59 C4 D2 30 3D 93 AC 3B 19 18 36 39 CE
         :     AE 61 5E 74 57 6F 68 75 43 53 C7 6D B8 B1 97 4B
         :     37 4E 70 D9 D0 91 B1 C6 B2 D0
         :     Error: Unexpected EOF, 39 bytes missing.
Error: Inconsistent object length, 39 bytes difference.
         :   }
Error: Inconsistent object length, 38 bytes difference.

0 warnings, 3 errors.
</code></pre>

<p>When you look at the very first ASN.1 sequence starting at byte 0:</p>

<pre><code>0 1187: SEQUENCE
</code></pre>

<p>The sequence is supposed to have 1187 content octets. But that is impossible because there are only 1152 bytes in the file:</p>

<pre><code>$ ls -Al key.pem key.der
-rw-rw-r--. 1 jwalton jwalton 1152 Jan 31 19:49 key.der
-rw-rw-r--. 1 jwalton jwalton 1676 Jan 31 19:41 key.pem
</code></pre>
","1220","<java><security><bouncycastle><private-key><pem>","3","0","2","2018-02-05 13:28:05","","2","","238704","","2018-02-01 22:03:17","2018-01-31 22:10:56",""
"48552294","Private key parsing with PemReader and Openssl","<p>I wrote a provisioning system for an HTTPS proxy. Before push a configuration file and uploading certificate and private key I do some validations. I have found a case when while a private key is validated by Java using PemReader OpenSSL doesn't validate the same file. This causes the httpd server to stop working since it's getting a wrong key.</p>

<p>I have made a test to reproduce it:</p>

<p>using openssl I have an error</p>

<pre><code>$ openssl rsa -in wrong_key_test.key -check
unable to load Private Key
140736227525512:error:0906D064:PEM routines:PEM_read_bio:bad base64 decode:/BuildRoot/Library/Caches/com.apple.xbs/Sources/libressl/libressl-22/libressl/crypto/pem/pem_lib.c:828:
</code></pre>

<p>But when I run this junit test everything is ok. My expectation was to have an exception , have you any idea about it? Is it my validation wrong ?</p>

<p>This is the junit</p>

<pre><code>package eu.ssl.test.validator;
import static org.junit.Assert.assertNotEquals;
import java.io.File;
import java.io.IOException;
import java.io.StringReader;
import java.security.KeyFactory;
import java.security.Security;
import java.security.interfaces.RSAPrivateKey;
import java.security.spec.PKCS8EncodedKeySpec;

import org.apache.commons.io.FileUtils;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.bouncycastle.util.io.pem.PemObject;
import org.bouncycastle.util.io.pem.PemReader;
import org.junit.Before;
import org.junit.Test;

public class PemReaderTest {

private String privateKey;

@Before
public void setUp() throws IOException {
    this.privateKey = FileUtils.readFileToString(new File(""./wrong_key_test.key""));
}

@Test
public void test() throws Exception {
    Security.addProvider(new BouncyCastleProvider());
    PemReader pemReader = new PemReader(new StringReader(this.privateKey));
    PemObject pemObject;
    try {
        pemObject = pemReader.readPemObject();
    } finally {
        pemReader.close();
    }
    KeyFactory factory = KeyFactory.getInstance(""RSA"");
    byte[] content = pemObject.getContent();
    PKCS8EncodedKeySpec privKeySpec = new PKCS8EncodedKeySpec(content);
    RSAPrivateKey privateKey = (RSAPrivateKey) factory.generatePrivate(privKeySpec);
    String privateKeyModulus = privateKey.getModulus().toString();
    assertNotEquals("""", privateKeyModulus);
}   
}
</code></pre>

<p>This is the PK</p>

<pre class=""lang-none prettyprint-override""><code>-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEA2lKPRVgFN8TfOhex+IJ6YMKUKeZgHZUGsJpHo/ipeYVeWUGa
jKVANloG3IX/I5Zo8FZ6R6BVCEisaGqH35HwktZ+vdrGzuRNGUERnZiy1nXzKDmV
CGdBY/PxErvvEyygHPd8X9HNGagjOlKLrPGyN2dAp6sMpljNevSzbXYxCX0KOm9z
ox40c2qdXFqa26mUWKVVZ6TdYSIeV1s/n3oRvAA3fbFAdTg4xM++g/V8LXyipDK4
gEqNPwJzzvE6u0P0u+MFCEgogbVZLVelLq6OzTU27pigwourVAf8eWyRYX8TOz2E
A1HDDKy7dSwTaIz7TPXfYqwe+bwLEl5vX/dQ6QIDAQABAoIBADBPcJChp5XtpI/Q
Snt5M+dRZ0PWTJJ/NZnCqfOoxKe1UWli0PYqYwkj5rzJkemoENSN7kUHP4mzuyLn
3+UjAB8eA7GzRabmcgESmvlKnthCBWpzQ302jAu4ITJKD98oUs3WHdl+LWpuAE2Z
knrUiOElofL4MLZmlCGPIF0qeDNm5QkLanMyzu7bduo8etwn2NNBHxDdc4eW2c2l
d4m1INObx4ZyAkoBWksKN8PsDH2I3FZJFvkgve1fFhff0U+CtertfOwlFoAmDv9j
FtJq2Y6H2p+Q1eyRlh0OLAK7qZ5MhgBOMe3PNxeJWa3S4Z/gevihweclmK/F9e9T
/V5JVgECgYEA/W6eKy2cgkajjgBPu4tsW8XTo9lyWnWLYUY2PacgfhT7zkZy4s4g
cfP1zjjGXZaDYgo7MPoBM0xFLYbrWQ7j8GgA18uTHZs2yjYya1a6iyi8RMdQpRzd
jzCDfHNeJ2YU1apVuqs8r99sskkg/S2gd31XCuKwYTgCVgi4GmczUiECgYEA3Ije
0F/Ojb7dV35w0K+NK6rl/RL42cDcy5qjEAlI5zUcbxubjy+gHwCBM6dwx8frIeaX
BG512loqoALKXvLzSUAWbnPsvkQCOkcBPvi48tkWh3h1QO1S1U38KrWr58+9WCLs
5tL14l8O8JQmNg/0jLA4k3OHhL/gy6VQGolLNckCgYB5T9kgnA2+AqhJ0fZYtO2i
pHihhvYJPRkB8EUIkBaqo8rBO9HEpZy8T2ZLV7wEkobDiFg7IoEumATJPTss/0a3
DmHQ6l66nlDEzNqnrPVQpagxWCNPVhjscPGPwf3A6Ely2b19xHghS9bRJNZIuu2E
JRhkWozJjLD5k+Tkpp/XYQKBgDiv/gY1+lQ5MZAh8kHSPklxPnkU/V6L0rWLZErk
+BZmco6k3BGsPk55xLxQWA8idnBaY4tCEY01DCvhS7+oV50Gmj1+Eua9eI0eX1We
fXv/DWl5LzqnRlmKGD2qQSvvHE6he5/Brm6n3KE+k6vl4gif64sLcVRQNipirfqE
PA7xAoGBAJ8wfxLaj86/f+JU2jAd34HYZpNQ1mEb2TqZkrLqk78VXaKhyZjw2IGe
Pt5ROLZNIQbVWcTSMD2TrDsZGDY5zq5hXnRXb2h1Q1PHbbixl0s3TnDZ0JGxxrLQ
iAc48q1o36aAYVSyY/JLR3Q9Su97+i55Ud5rDYW5ThLcACsjxB/mL
-----END RSA PRIVATE KEY-----
</code></pre>

<p>Thanks in advance
Nicola</p>
","<p>I was using spring-boot 1.5.3 that is using an old Bouncy Castle version (bcpkix-jdk15 1.47) . I get the expected result when I run the test script with version 1.59 . Seems version 1.58 or earlier fail to recognise this malformed key.</p>
","1220","<java><security><bouncycastle><private-key><pem>","3","0","2","2018-02-05 13:28:05","","2","","238704","","2018-02-01 22:03:17","2018-01-31 22:10:56",""
"32405993","Connecting to remote mongodb through ssh in pymongo","<p>I'm trying to connect to a remote mongodb instance.</p>

<p>To access the database outside of pymongo, I normally do the following:</p>

<pre><code>&gt; ssh ec2-user@ec9-9-9-9-9-9-9.blah.compute.amazonaws.com
-$ mongo
-$ use some_database
-$ db.some_collection.findOne()
....
</code></pre>

<p>The authentication here is done via a private key (my_key.pem) stored locally on my laptop and works fine. </p>

<p>However, when I do the same thing in python, it times out:</p>

<pre><code>&gt;&gt;&gt; from pymongo import MongoClient
&gt;&gt;&gt; c = MongoClient('ec2-user@ec9-9-9-9-9-9-9.blah.compute.amazonaws.com')
&gt;&gt;&gt; c['some_database']['some_collection'].find_one()
</code></pre>

<p>There's some authentication options listed here: <a href=""http://api.mongodb.org/python/current/examples/authentication.html?highlight=pem"" rel=""nofollow"">http://api.mongodb.org/python/current/examples/authentication.html?highlight=pem</a> but I don't understand them enough to know if they are relevant.</p>

<p>How can I connect?</p>
","<p>In your commands you listed you are connecting to an EC2 server over SSH, then you are running the mongo client application to connect to the local MongoDB database. This is not the way your application is going to connect to your database.</p>

<p>Is your application running on AWS? If it is, then you will need to configure <a href=""http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html"" rel=""nofollow"">security groups</a> to allow access to MongoDB. If it is running on the same server as the database then you don't even need to deal with security groups, you just need to give it the port that MongoDB is running on.</p>

<p>If your application isn't running on AWS, but needs to connect to a MongoDB instance on AWS, then you can either open the MongoDB port (default 27017) to your remote application (via security groups), or you can use SSH tunneling.</p>
","1202","<mongodb><amazon-web-services><ssh><pymongo><private-key>","0","0","1","2015-09-04 22:22:45","","0","","","","","2015-09-04 20:20:02",""
"8545101","How to get P and Q from KeyPairGenerator for RSA in Java?","<p>I use KeyPairGenerator class to generate private and public key for RSA algorithm. Next step is to create DigitalSignature for some files. I'm going to use Signature class with public key generated in first step. It is working ok, but I have a problem with getting p and q parameter. How can I get them? I need them to be shown, the same as modulus. When I use .toString() method on private or public key, I can see all these values? Is there any other posibility to get p, q, modulus without parsing this string?</p>

<p>One more thing. Is there any posibility to get only generated key without all this values which are in toString() method?</p>

<p>Thanks a lot!</p>
","<p>You have to cast the result of <code>KeyPair.getPublic()</code> and <code>KeyPair.getPrivate()</code> to <code>RSAPublicKey</code> and <code>RSAPrivateKey</code>.</p>

<p>EDIT:</p>

<p>You can cast <code>KeyPair.getPrivate()</code> to <code>RSAPrivateCrtKey</code> to extract P and Q.</p>
","1200","<java><rsa><public-key><private-key>","2","7","1","2011-12-19 12:18:29","8545164","2","","","","","2011-12-17 13:34:25",""
"48044310","PEM to PrivateKey","<p>I need to convert an RSA private key located in memory in PEM format into a <code>PrivateKey</code> on Android.</p>

<p>The problem seems to have been solved <a href=""https://stackoverflow.com/q/26873820/918015"">for public keys</a> but I'm struggling to get it to work for a private key. I'm trying the following code:</p>

<pre><code>String pemkey = ""MIICWwIBAAKBgQDIuL0SzG1+wgyaoyDyHvYIaG10ePXBHqaKTnYyZfY5RzaEFLE/vBdFN2Di7AMH3/5iN/YFQqLsVjKqzX3E3LM2dJOZ9qSWeYArSyQPbhy0eM/3amwchvtLvhVLm2UqVFLjiPGlyYX3D75ETD5tmgulAc5ZDRtGqYVoLKPmZ0USPwIDAQABAoGAErfDjf65UUJISZ1fw6Rmfic62csz47P3hNtHQ3Dlsra020FQvChOpTpCUzb+G1xkjQU58Iijx9VL+Uiba2HHZmiJX2LgS3KKqKFZKmbKZnZQTiw+2o+4AXhtcAYfSAJE9TgRPEhwhZmzV2cvfUk5AjnOghSn2gGjdD1g4xtH22ECQQD/ZbfEd2HEGqHf6j/AVMW+N/Q1xtYIB8r0CWxF6cNw5iq/8Ce9ujpnAFi0vgtojyKDlgwBp4XMU2C4is49EkFhAkEAyTH96mS8dExAAmi3Mm2seUIEOtKwuLD6BEECecPyZSIOd24tfNbmA7Ri6MpGjyLZoNoJQ0AJGcnWU1tnc8bXnwJAS+jYyP1OwrHDwUDnt+u6ZoJNBJrXzMU8LnKKivEjFPBkbm4b8cljSHAS7Y266FX6xS+Y2/kFzKhPjCo9iGtfoQJAOv39hYyj9TWmTw6FKLQfri49L0I3ru+1Xynwn+NkX2Ls+vfDPqeEKfHqTneA2NdPGGrV7HIKORWFUkuqubfD4QJAK60RuhDSeH+ZljcYLhbHLoTnja/uTcvDAd0M4ll2HUNId4jPbYl1qw7OQwfg8apKmGwp7HGW50o/EItvvJrR7w=="";
byte[] encoded = Base64.decode(pemkey, Base64.DEFAULT);
X509EncodedKeySpec keySpec = new X509EncodedKeySpec(encoded);
KeyFactory kf = KeyFactory.getInstance(""RSA"");
PrivateKey sessionkey = kf.generatePrivate(keySpec);
</code></pre>

<p>(The key is not the same as for my Bitcoin wallet so don't bother ^^)</p>

<p>The last line gives the error</p>

<pre><code>java.security.spec.InvalidKeySpecException:
        Must use RSAPublicKeySpec or PKCS8EncodedKeySpec;
        was java.security.spec.X509EncodedKeySpec
</code></pre>

<p>I tested the <code>pemkey</code> string to be ok in other languages (e.g. Python <code>RSA.importkey</code>) and it works fine.</p>

<p>Edit:</p>

<p>On a suggestion by a comment (and the answer to the question linked as doublicate), I also tried with <code>X509EncodedKeySpec</code> replaced by <code>PKCS8EncodedKeySpec</code>. Then the new error I get is</p>

<pre><code>java.security.spec.InvalidKeySpecException:
        java.lang.RuntimeException:
        error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag
</code></pre>
","<p>Thanks to comments by Greggz and James I was able to get it to work. There were two problems:</p>

<ul>
<li><code>X509EncodedKeySpec</code> had to be replaced by <code>PKCS8EncodedKeySpec</code></li>
<li>The provided <code>pemkey</code> was PKCS#1 (to be recognized by 'BEGIN RSA PRIVATE KEY') but needs to be PKCS#8 (to be recognized by 'BEGIN PRIVATE KEY').</li>
</ul>
","1193","<java><android><private-key><pem>","1","1","1","2018-01-01 01:00:31","48046571","5","","918015","","2017-12-31 17:52:51","2017-12-31 16:58:19",""
"45997841","How to get a SecIdentityRef from a SecCertificateRef and a SecKeyRef","<p>Here's what I've already tried:</p>

<p>First idea was, just put both into an array, use that array with <code>kSecUseItemList</code>, so keychain calls will operate only on the items in this array, not on real keychains and then get the identity like this:</p>

<pre><code>NSDictionary * searchQuery = @{
    (__bridge id)kSecClass:(__bridge id)kSecClassIdentity,
    (__bridge id)kSecUseItemList:@[(__bridge id)key, (__bridge id)cert],
    (__bridge id)kSecReturnRef:@YES
};
CFTypeRef foundItem = NULL;
OSStatus copyStatus = SecItemCopyMatching(
    (__bridge CFDictionaryRef)searchQuery, &amp;foundItem
);
</code></pre>

<p>Turned out that this doesn't work. To quote from the docs:</p>

<blockquote>
  <p><em>@<strong>constant</strong> <code>kSecUseItemList</code></em> 
      Specifies a dictionary key whose value is a
      <code>CFArray</code> of items. If provided, this array is treated as the set of
      all possible items to search, or add if the API being called is
      <code>SecItemAdd</code>. The items in this array may be of type <code>SecKeyRef</code>,
      <code>SecCertificateRef</code>, <code>SecIdentityRef</code>, or <code>CFDataRef</code> (for a persistent
      item reference.) <strong>The items in the array must all be of the same
      type</strong>. When this attribute is provided, no keychains are searched.</p>
</blockquote>

<p>Well, they are not of the same type, so this cannot work.</p>

<p>My second attempt was to add both items to keychain (using <code>SecItemAdd()</code>), which works as expected, then find the certificate (using <code>SecItemCopyMatching()</code>) which also succeeds and finally getting my identity using:</p>

<pre><code>SecIdentityRef identity = NULL;
OSStatus copyStatus = SecIdentityCreateWithCertificate(NULL, cert, &amp;identity);
</code></pre>

<p>But that fails with <code>errKCItemNotFound</code>. </p>

<p>Looking at the items in Keychain Access app, the certificate and the private key are both there, they are both correct but they are not displayed as forming an Identity (they are not listed under ""My Certificates"", the cert is only listed under ""Certificates"" and the key under ""Keys"").</p>

<p>Okay, what am I doing wrong or what important step am I missing?</p>

<p>If I export the key to PKCS#8 and the cert to DER notation, then use <code>openssl</code> on command line to combine both into a PKCS#12 file and import that file with Keychain Access, then they are displayed as an Identity in keychain access and this identity also works correctly (so the private key is really the correct key for the public key in the cert). But this is not really an option, as my code must not rely on OpenSSL and would ideally be portable to iOS.</p>

<p>As far as I understood the documentation, the identity matching is done by matching public key hashes, so that could be related to my problem. How would the system know the hash of the public key for me <code>SecKeyRef</code>, which is only a raw private RSA key? </p>

<p>The docs also say that I can add a <code>SecIdentityRef</code> directly with <code>SecAddItem()</code>, in which case I guess everything would probably work as expected (the identity itself cannot be added, the cert and the private key will be added, but I assume the identity binding will be okay when adding them that way), but that sounds like a chicken-egg-problem, since how would I get that identity reference in the first place?</p>

<p>I cannot understand why there is no <code>SecCreateIdentity(...)</code> function that simply takes a <code>SecCertificateRef</code> and <code>SecKeyRef</code> on input and returns a <code>SecIdentityRef</code> on output.</p>

<p><br></p>

<h2>Update</h2>

<p>Here's some interesting info I found in <code>SecKey.h</code>:</p>

<blockquote>
  <p><strong><em>@constant</strong> <code>kSecKeyLabel</code></em> type blob, for private and public keys
      this contains the hash of the public key.  This is used to
      associate certificates and keys.  Its value matches the value
      of the <code>kSecPublicKeyHashItemAttr</code> of a certificate and <strong>it's used
      to construct an identity from a certificate and a key</strong>.
      For symmetric keys this is whatever the creator of the key
      passed in during the generate key call.</p>
</blockquote>

<p>This value is not correctly set. The public key in the certs hashes to <code>0x966C57...</code> but my private key contains <code>0x097EAD...</code> and this looks like the hash of the private key itself. I will try if I can somehow set this value to the correct one.</p>

<p><br></p>

<h2>Update 2</h2>

<p>That seems to be another dead end. When I try to set <code>kSecAttrApplicationLabel</code> with <code>SecKeyUpdate()</code> on a key prior to adding it to keychain, I get <code>errKCItemNotFound</code>, which is expected, as the documentation says:</p>

<blockquote>
  <p>A <code>SecKeyRef</code> instance that represents a key that is stored in a keychain
    can be safely cast to a <code>SecKeychainItemRef</code> for manipulation as a 
    keychain  item. On the other hand, <strong>if the key is not stored in a 
    keychain</strong>, casting  the object to a <code>SecKeychainItemRef</code> and passing
    it to Keychain Services functions returns errors.</p>
</blockquote>

<p>Fair enough. So I first add the key, then retrieve it back from keychain and finally try to update <code>kSecAttrApplicationLabel</code>, but this fails as well, this the error is <code>errKCNoSuchAttr</code>.</p>

<p>Oh, in case anyone wonders why I'm updating <code>kSecAttrApplicationLabel</code> when I said the attribute is named <code>kSecKeyLabel</code> in my first update: The <code>kSecKeyLabel</code> is an enumeration value of the old attribute enumerations that Apple used with various API calls that have all been deprecated. The new API calls (like <code>SecItemUpdate()</code>) work with dictionaries and as using enum values as dictionary keys is a bit ugly, Apple defined a new set of dictionary keys that are <code>CFStringRef</code>.</p>

<blockquote>
  <p><strong><em>@constant</strong> <code>kSecAttrApplicationLabel</code></em> Specifies a dictionary key 
    whose value is the key's application label attribute. 
    This is different from the <code>kSecAttrLabel</code> (which is intended to be
    human-readable). This attribute is used to look up a key 
    programmatically;  in particular, for keys of class
    <code>kSecAttrKeyClassPublic</code> and <code>kSecAttrKeyClassPrivate</code>, 
    the value of this attribute is the hash of the public key. 
    This item is a type of <code>CFDataRef</code>.
    Legacy keys may contain a UUID in this field as a <code>CFStringRef</code>.</p>
</blockquote>

<p>So this seems to be the correct attribute to update, doesn't it? Except that the error implies no such attribute exists for the item. Even though the same header file explicitly lists this attribute as a possible attribute for <code>SecKeyRef</code> items:</p>

<blockquote>
  <p><code>kSecClassKey</code> item attributes:<br>
          &nbsp;&nbsp;&nbsp;&nbsp;<code>kSecAttrAccess</code> (OS X only)<br>
          &nbsp;&nbsp;&nbsp;&nbsp;<code>kSecAttrAccessControl</code><br>
          &nbsp;&nbsp;&nbsp;&nbsp;<code>kSecAttrAccessGroup</code> 
              (iOS; also OS X if kSecAttrSynchronizable specified)<br>
          &nbsp;&nbsp;&nbsp;&nbsp;<code>kSecAttrAccessible</code> 
              (iOS; also OS X if kSecAttrSynchronizable specified)<br>
          &nbsp;&nbsp;&nbsp;&nbsp;<code>kSecAttrKeyClass</code><br>
          &nbsp;&nbsp;&nbsp;&nbsp;<code>kSecAttrLabel</code><br>
          &nbsp;&nbsp;&nbsp;&nbsp;<strong><code>kSecAttrApplicationLabel</code></strong><br>
          &nbsp;&nbsp;&nbsp;&nbsp; <em>[... and so on ...]</em></p>
</blockquote>

<p><br></p>

<h2>Update 3</h2>

<p>The first answer I got suggested to use <code>SecItemCopyMatching()</code> instead, however, please understand that this code:</p>

<pre><code>CFTypeRef result = NULL;
OSStatus status = SecItemCopyMatching(
    (__bridge CFDictionaryRef)@{
        (__bridge id)kSecClass:(__bridge id)kSecClassIdentity,
        (__bridge id)kSecMatchItemList:@[(__bridge id)cert],
        (__bridge id)kSecReturnRef:@YES
     }, &amp;result
);
</code></pre>

<p>is really functional identical to his code:</p>

<pre><code>SecIdentityRef result = NULL;
OSStatus status = SecIdentityCreateWithCertificate(
    NULL, cert &amp;result
);
</code></pre>

<p>The later one is just the older API call (older, but not deprecated) from the time where keychain access was limited to working with <code>Sec...Ref</code> CoreFoundation ""objects"" (Apple's attempt to mimic a bit of OO in pure C), whereas the first one is the newer API where you usually only work with dictionary representation of keychain items (as that casts toll-free to Obj-C, you just need some bridging casts when you use ARC) but where you also have the choice to fall back to CoreFoundation ""objects"" (when using attributes like e.g. <code>kSecMatchItemList</code>, <code>kSecUseItemList</code>, or <code>kSecReturnRef</code>). I'm' actually rather sure that in fact there's just one real API and the other one is just implemented on top of the other one (depending which one on top of which one, the newer one may just exist for convenience or the older one was just kept for backward compatibility).</p>
","<p>The trick is to export the in-memory key first and then re-import it directly to the keychain instead of just adding it there. See the code below (careful, it's C++):</p>

<pre><code>static OSStatus AddKeyToKeychain(SecKeyRef privateKey, SecKeychainRef targetKeychain)
{
    // This is quite similar to pal_seckey's ExportImportKey, but
    // a) is used to put something INTO a keychain, instead of to take it out.
    // b) Doesn't assume that the input should be CFRelease()d and overwritten.
    // c) Doesn't return/emit the imported key reference.
    // d) Works on private keys.
    SecExternalFormat dataFormat = kSecFormatWrappedPKCS8;
    CFDataRef exportData = nullptr;

    SecItemImportExportKeyParameters keyParams = {};
    keyParams.version = SEC_KEY_IMPORT_EXPORT_PARAMS_VERSION;
    keyParams.passphrase = CFSTR(""ExportImportPassphrase"");

    OSStatus status = SecItemExport(privateKey, dataFormat, 0, &amp;keyParams, &amp;exportData);

    SecExternalFormat actualFormat = dataFormat;
    SecExternalItemType actualType = kSecItemTypePrivateKey;
    CFArrayRef outItems = nullptr;

    if (status == noErr)
    {
        status =
            SecItemImport(exportData, nullptr, &amp;actualFormat, &amp;actualType, 0, &amp;keyParams, targetKeychain, &amp;outItems);
    }

    if (exportData != nullptr)
        CFRelease(exportData);

    CFRelease(keyParams.passphrase);
    keyParams.passphrase = nullptr;

    if (outItems != nullptr)
        CFRelease(outItems);

    return status;
}
</code></pre>

<p>The code has been taken <a href=""https://github.com/dotnet/corefx/blob/5fe5f9aae7b2987adc7082f90712b265bee5eefc/src/Native/Unix/System.Security.Cryptography.Native.Apple/pal_x509.cpp#L492"" rel=""nofollow noreferrer"">from here</a>.</p>
","1191","<macos><certificate><keychain><private-key>","0","1","2","2017-09-15 09:43:19","46003645","0","","15809","","2017-09-15 09:43:19","2017-09-01 10:05:18",""
"45997841","How to get a SecIdentityRef from a SecCertificateRef and a SecKeyRef","<p>Here's what I've already tried:</p>

<p>First idea was, just put both into an array, use that array with <code>kSecUseItemList</code>, so keychain calls will operate only on the items in this array, not on real keychains and then get the identity like this:</p>

<pre><code>NSDictionary * searchQuery = @{
    (__bridge id)kSecClass:(__bridge id)kSecClassIdentity,
    (__bridge id)kSecUseItemList:@[(__bridge id)key, (__bridge id)cert],
    (__bridge id)kSecReturnRef:@YES
};
CFTypeRef foundItem = NULL;
OSStatus copyStatus = SecItemCopyMatching(
    (__bridge CFDictionaryRef)searchQuery, &amp;foundItem
);
</code></pre>

<p>Turned out that this doesn't work. To quote from the docs:</p>

<blockquote>
  <p><em>@<strong>constant</strong> <code>kSecUseItemList</code></em> 
      Specifies a dictionary key whose value is a
      <code>CFArray</code> of items. If provided, this array is treated as the set of
      all possible items to search, or add if the API being called is
      <code>SecItemAdd</code>. The items in this array may be of type <code>SecKeyRef</code>,
      <code>SecCertificateRef</code>, <code>SecIdentityRef</code>, or <code>CFDataRef</code> (for a persistent
      item reference.) <strong>The items in the array must all be of the same
      type</strong>. When this attribute is provided, no keychains are searched.</p>
</blockquote>

<p>Well, they are not of the same type, so this cannot work.</p>

<p>My second attempt was to add both items to keychain (using <code>SecItemAdd()</code>), which works as expected, then find the certificate (using <code>SecItemCopyMatching()</code>) which also succeeds and finally getting my identity using:</p>

<pre><code>SecIdentityRef identity = NULL;
OSStatus copyStatus = SecIdentityCreateWithCertificate(NULL, cert, &amp;identity);
</code></pre>

<p>But that fails with <code>errKCItemNotFound</code>. </p>

<p>Looking at the items in Keychain Access app, the certificate and the private key are both there, they are both correct but they are not displayed as forming an Identity (they are not listed under ""My Certificates"", the cert is only listed under ""Certificates"" and the key under ""Keys"").</p>

<p>Okay, what am I doing wrong or what important step am I missing?</p>

<p>If I export the key to PKCS#8 and the cert to DER notation, then use <code>openssl</code> on command line to combine both into a PKCS#12 file and import that file with Keychain Access, then they are displayed as an Identity in keychain access and this identity also works correctly (so the private key is really the correct key for the public key in the cert). But this is not really an option, as my code must not rely on OpenSSL and would ideally be portable to iOS.</p>

<p>As far as I understood the documentation, the identity matching is done by matching public key hashes, so that could be related to my problem. How would the system know the hash of the public key for me <code>SecKeyRef</code>, which is only a raw private RSA key? </p>

<p>The docs also say that I can add a <code>SecIdentityRef</code> directly with <code>SecAddItem()</code>, in which case I guess everything would probably work as expected (the identity itself cannot be added, the cert and the private key will be added, but I assume the identity binding will be okay when adding them that way), but that sounds like a chicken-egg-problem, since how would I get that identity reference in the first place?</p>

<p>I cannot understand why there is no <code>SecCreateIdentity(...)</code> function that simply takes a <code>SecCertificateRef</code> and <code>SecKeyRef</code> on input and returns a <code>SecIdentityRef</code> on output.</p>

<p><br></p>

<h2>Update</h2>

<p>Here's some interesting info I found in <code>SecKey.h</code>:</p>

<blockquote>
  <p><strong><em>@constant</strong> <code>kSecKeyLabel</code></em> type blob, for private and public keys
      this contains the hash of the public key.  This is used to
      associate certificates and keys.  Its value matches the value
      of the <code>kSecPublicKeyHashItemAttr</code> of a certificate and <strong>it's used
      to construct an identity from a certificate and a key</strong>.
      For symmetric keys this is whatever the creator of the key
      passed in during the generate key call.</p>
</blockquote>

<p>This value is not correctly set. The public key in the certs hashes to <code>0x966C57...</code> but my private key contains <code>0x097EAD...</code> and this looks like the hash of the private key itself. I will try if I can somehow set this value to the correct one.</p>

<p><br></p>

<h2>Update 2</h2>

<p>That seems to be another dead end. When I try to set <code>kSecAttrApplicationLabel</code> with <code>SecKeyUpdate()</code> on a key prior to adding it to keychain, I get <code>errKCItemNotFound</code>, which is expected, as the documentation says:</p>

<blockquote>
  <p>A <code>SecKeyRef</code> instance that represents a key that is stored in a keychain
    can be safely cast to a <code>SecKeychainItemRef</code> for manipulation as a 
    keychain  item. On the other hand, <strong>if the key is not stored in a 
    keychain</strong>, casting  the object to a <code>SecKeychainItemRef</code> and passing
    it to Keychain Services functions returns errors.</p>
</blockquote>

<p>Fair enough. So I first add the key, then retrieve it back from keychain and finally try to update <code>kSecAttrApplicationLabel</code>, but this fails as well, this the error is <code>errKCNoSuchAttr</code>.</p>

<p>Oh, in case anyone wonders why I'm updating <code>kSecAttrApplicationLabel</code> when I said the attribute is named <code>kSecKeyLabel</code> in my first update: The <code>kSecKeyLabel</code> is an enumeration value of the old attribute enumerations that Apple used with various API calls that have all been deprecated. The new API calls (like <code>SecItemUpdate()</code>) work with dictionaries and as using enum values as dictionary keys is a bit ugly, Apple defined a new set of dictionary keys that are <code>CFStringRef</code>.</p>

<blockquote>
  <p><strong><em>@constant</strong> <code>kSecAttrApplicationLabel</code></em> Specifies a dictionary key 
    whose value is the key's application label attribute. 
    This is different from the <code>kSecAttrLabel</code> (which is intended to be
    human-readable). This attribute is used to look up a key 
    programmatically;  in particular, for keys of class
    <code>kSecAttrKeyClassPublic</code> and <code>kSecAttrKeyClassPrivate</code>, 
    the value of this attribute is the hash of the public key. 
    This item is a type of <code>CFDataRef</code>.
    Legacy keys may contain a UUID in this field as a <code>CFStringRef</code>.</p>
</blockquote>

<p>So this seems to be the correct attribute to update, doesn't it? Except that the error implies no such attribute exists for the item. Even though the same header file explicitly lists this attribute as a possible attribute for <code>SecKeyRef</code> items:</p>

<blockquote>
  <p><code>kSecClassKey</code> item attributes:<br>
          &nbsp;&nbsp;&nbsp;&nbsp;<code>kSecAttrAccess</code> (OS X only)<br>
          &nbsp;&nbsp;&nbsp;&nbsp;<code>kSecAttrAccessControl</code><br>
          &nbsp;&nbsp;&nbsp;&nbsp;<code>kSecAttrAccessGroup</code> 
              (iOS; also OS X if kSecAttrSynchronizable specified)<br>
          &nbsp;&nbsp;&nbsp;&nbsp;<code>kSecAttrAccessible</code> 
              (iOS; also OS X if kSecAttrSynchronizable specified)<br>
          &nbsp;&nbsp;&nbsp;&nbsp;<code>kSecAttrKeyClass</code><br>
          &nbsp;&nbsp;&nbsp;&nbsp;<code>kSecAttrLabel</code><br>
          &nbsp;&nbsp;&nbsp;&nbsp;<strong><code>kSecAttrApplicationLabel</code></strong><br>
          &nbsp;&nbsp;&nbsp;&nbsp; <em>[... and so on ...]</em></p>
</blockquote>

<p><br></p>

<h2>Update 3</h2>

<p>The first answer I got suggested to use <code>SecItemCopyMatching()</code> instead, however, please understand that this code:</p>

<pre><code>CFTypeRef result = NULL;
OSStatus status = SecItemCopyMatching(
    (__bridge CFDictionaryRef)@{
        (__bridge id)kSecClass:(__bridge id)kSecClassIdentity,
        (__bridge id)kSecMatchItemList:@[(__bridge id)cert],
        (__bridge id)kSecReturnRef:@YES
     }, &amp;result
);
</code></pre>

<p>is really functional identical to his code:</p>

<pre><code>SecIdentityRef result = NULL;
OSStatus status = SecIdentityCreateWithCertificate(
    NULL, cert &amp;result
);
</code></pre>

<p>The later one is just the older API call (older, but not deprecated) from the time where keychain access was limited to working with <code>Sec...Ref</code> CoreFoundation ""objects"" (Apple's attempt to mimic a bit of OO in pure C), whereas the first one is the newer API where you usually only work with dictionary representation of keychain items (as that casts toll-free to Obj-C, you just need some bridging casts when you use ARC) but where you also have the choice to fall back to CoreFoundation ""objects"" (when using attributes like e.g. <code>kSecMatchItemList</code>, <code>kSecUseItemList</code>, or <code>kSecReturnRef</code>). I'm' actually rather sure that in fact there's just one real API and the other one is just implemented on top of the other one (depending which one on top of which one, the newer one may just exist for convenience or the older one was just kept for backward compatibility).</p>
","<p>The answer from @<em>bartonjs</em> really solves my problem, I just want to provide some extra helpful information here, as it is not very obvious why it solves the problem:</p>

<p>First of all, please note that security objects can either exist only in memory or they can exist in memory backed up by keychain storage. Every security object has data (the actual data that defines the object) and metadata (additional information that describes the data). But only objects backed up by keychain storage can have metadata as the metadata attributes are defined as part of the keychain API and not as part of the object API. If objects are not stored in a keychain, they simply cannot have metadata. See <strong>Update 2</strong> of my question.</p>

<p>The public key hash, which is required to match private keys to their certificates, is stored within the metadata. So a <code>SecKeyRef</code> not backed up by keychain storage cannot have such a hash. Generating an identity (<code>SecIdentityRef</code>) with a key not stored in a keychain is thus simply not possible. The certificate doesn't have to be stored in a keychain but the key has.</p>

<p>So far I was just adding my key using <code>SecItemAdd()</code>, which seems to do exactly what the name implies, it just adds the item to keychain, and it only does what the name implies, so it won't do anything but adding the item to keychain <strong>as is</strong>. If the item already has a public key hash, it will also have a public key hash when being added to a (new/different) keychain, but only items already within keychains can have this attribute. The result was an item not having a correct public key hash set and this is the cause of all my problems.</p>

<p>Now my code uses the <code>SecItemImport()</code> function, which is a lot more powerful, as an ""import"" may require a lot more steps than just adding something keychain. Apparently this import function will also make sure that the public key hash in the meta data is correctly populated when importing the item. To make this import possible, my new code first needs to export the existing key and so it can then re-import the key directly into the desired keychain.</p>

<h2>Update</h2>

<p>Maybe interesting to know, there exists a function with the following syntax:</p>

<pre><code>SecIdentityRef SecIdentityCreate(
    CFAllocatorRef allocator, 
    SecCertificateRef certificate, 
    SecKeyRef privateKey
);
</code></pre>

<p>that works exactly the way I was desiring it. ffmpeg is actually <a href=""https://ffmpeg.org/doxygen/2.8/tls__securetransport_8c_source.html"" rel=""nofollow noreferrer"">using it</a>. But this is private API, you must not use it if you plan to submit your software to any app store (using private API will have your software rejected).</p>
","1191","<macos><certificate><keychain><private-key>","0","0","2","2017-09-15 09:43:19","46003645","0","","15809","","2017-09-15 09:43:19","2017-09-01 10:05:18",""
"26714704","RSA_Private_Decrypt fails randomly","<p>I am not a crypto expert, but I wrote encrypt/decrypt methods. I don't know what I am doing wrong here. The <strong>encryptKey</strong> method returns the variable text length every time for the same string, which is may be due to RSA_PKCS1_PADDING which I am using, but for same string of text, the <strong>decryptKey</strong> function fails if the encrypted text length is below some threshold.<br></p>

<pre><code>//----------------------Encryption -----------------------
int Asymmetric::encryptKey(unsigned char *data, int data_len, unsigned char *encrypted)
{
    RSA * rsa = createRSA(1); // Loads the public key
    int result = RSA_public_encrypt(data_len,data,encrypted,rsa,padding);
    return result;
}
//-----------------------Decryption -----------------------
int Asymmetric::decryptKey(unsigned char * enc_data,int data_len, unsigned char *decrypted)
{
    RSA * rsa = createRSA(0); // Loads the private key
    int  result = RSA_private_decrypt(data_len,enc_data,decrypted,rsa,padding);
    return result;
}
</code></pre>

<p>How i can overcome this situation?</p>

<p><strong>Edit</strong>: <br>
This code does not work <br></p>

<pre><code>char *myData = ""Sample Text"";
unsigned char *encrypt = (unsigned char*)malloc(RSA_size(rsaPub));
int result = RSA_public_encrypt(RSA_size(rsaPub)-11 ,(unsigned char*)myData,encrypt,rsaPub,padding);
fprintf(stderr, ""\nEnc Size: %d \n"", strlen((const char*)encrypt));
</code></pre>
","<p>If you perform padding, cipher text should have fixed size equal to RSA public key modulus. If you get different size every time, then there is something with your program.</p>

<p>When you perform encryption <code>data</code> must be less than <code>RSA_size(rsa) - 11</code> and <code>encrypted</code> must point to <code>RSA_size(rsa)</code> bytes of memory.</p>

<p><code>strlen(const char * str)</code> computes length of null-terminated string. <code>encrypt</code> is not the string and is not null terminated, so using <code>strlen</code> is not valid here. Luckily for you PKCS#1 padding contains zero bytes, so you don't get segmentation fault.</p>

<p>On the other hand <code>myData</code> <strong>is</strong> a null terminated string. However, you use <code>RSA_size(rsaPub) - 11</code> as its length, which will result in occasional segmentation faults.</p>
","1180","<c++><openssl><public-key-encryption><private-key><public-key>","1","1","1","2014-11-07 12:46:55","26717866","0","","642653","","2014-11-07 12:46:55","2014-11-03 12:46:50",""
"42102401","OpenCSP failed with error code 2148073494","<p>We started seeing this exception occur intermittently when our Azure App Service was moved to an App Service Environment. We're using Identity Server 4, and the exception occurs during token signing. This can be seen in the call stack below.</p>

<p>The signing cert is never saved to a cert store, it's loaded from a database as a byte array:</p>

<pre><code>new X509Certificate2(rawData, password,
                    X509KeyStorageFlags.MachineKeySet |
                    X509KeyStorageFlags.PersistKeySet);
</code></pre>

<p>These references appear to be the same issue:</p>

<p><a href=""https://stackoverflow.com/questions/41479755/net-core-x509certificate2-privatekey-throws-nte-bad-keyset-error"">.NET Core X509Certificate2.PrivateKey throws nte_bad_keyset error</a></p>

<p><a href=""https://github.com/dotnet/corefx/issues/2583"" rel=""nofollow noreferrer"">https://github.com/dotnet/corefx/issues/2583</a></p>

<p><strong>Edit:</strong>
Initially we thought this was something specific to the App Service Env in Azure, but now we're seeing the exception in standard App Services. As a test we created an Azure web job that loads a certificate from a byte array and creates JWT tokens (which require a private key for signing). This repros the error. Also of note is the Azure Web job won't even run when certain flags are passed to the <code>X509Certificate2</code> ctor (e.g. <code>X509KeyStorageFlags.UserKeySet</code>).</p>

<p>Stack trace is the same each time:</p>

<pre><code>System.Security.Cryptography.CryptographicException:
   at Internal.NativeCrypto.CapiHelper.CreateProvHandle(CspParameters parameters, Boolean randomKeyContainer)
   at System.Security.Cryptography.RSACryptoServiceProvider.get_SafeProvHandle()
   at System.Security.Cryptography.RSACryptoServiceProvider.get_SafeKeyHandle()
   at System.Security.Cryptography.RSACryptoServiceProvider..ctor(Int32 keySize, CspParameters parameters, Boolean useDefaultKeySize)
   at System.Security.Cryptography.RSACryptoServiceProvider..ctor(CspParameters parameters)
   at Internal.Cryptography.Pal.CertificatePal.&lt;&gt;c.&lt;GetRSAPrivateKey&gt;b__59_0(CspParameters csp)
   at Internal.Cryptography.Pal.CertificatePal.GetPrivateKey[T](Func`2 createCsp, Func`2 createCng)
   at Internal.Cryptography.Pal.CertificatePal.GetRSAPrivateKey()
   at Internal.Cryptography.Pal.CertificateExtensionsCommon.GetPrivateKey[T](X509Certificate2 certificate, Predicate`1 matchesConstraints)
   at Microsoft.IdentityModel.Tokens.X509SecurityKey.get_PrivateKey()
   at Microsoft.IdentityModel.Tokens.X509SecurityKey.get_HasPrivateKey()
   at Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.HasPrivateKey(SecurityKey key)
   at Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider..ctor(SecurityKey key, String algorithm, Boolean willCreateSignatures)
   at Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CreateSignatureProvider(SecurityKey key, String algorithm, Boolean willCreateSignatures)
   at Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CreateForSigning(SecurityKey key, String algorithm)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.CreateEncodedSignature(String input, SigningCredentials signingCredentials)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.WriteToken(SecurityToken token)
   at IdentityServer4.Services.DefaultTokenCreationService.CreateJwtAsync(JwtSecurityToken jwt)
   at IdentityServer4.Services.DefaultTokenCreationService.&lt;CreateTokenAsync&gt;d__3.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Services.DefaultTokenService.&lt;CreateSecurityTokenAsync&gt;d__9.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.&lt;CreateAccessTokenAsync&gt;d__10.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.&lt;ProcessTokenRequestAsync&gt;d__8.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.&lt;ProcessAsync&gt;d__6.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Endpoints.TokenEndpoint.&lt;ProcessTokenRequestAsync&gt;d__6.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Endpoints.TokenEndpoint.&lt;ProcessAsync&gt;d__5.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.IdentityServerMiddleware.&lt;Invoke&gt;d__3.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.FederatedSignOutMiddleware.&lt;Invoke&gt;d__6.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.AuthenticationMiddleware.&lt;Invoke&gt;d__2.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.&lt;Invoke&gt;d__18.MoveNext()
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.&lt;Invoke&gt;d__18.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.&lt;Invoke&gt;d__7.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.BaseUrlMiddleware.&lt;Invoke&gt;d__2.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.&lt;Invoke&gt;d__18.MoveNext()
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.&lt;Invoke&gt;d__18.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.&lt;Invoke&gt;d__18.MoveNext()
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.&lt;Invoke&gt;d__18.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.ApplicationInsights.AspNetCore.ExceptionTrackingMiddleware.&lt;Invoke&gt;d__4.MoveNext()
</code></pre>
","<p>That error means that somewhere after the certificate learned where the key was being stored it got deleted.</p>

<ul>
<li>Maybe something is calling CngKey.Delete</li>
<li>Maybe something is cloning it into an RSACryptoServiceProvider and setting <code>PersistKeyInCsp</code> to <code>false</code>.</li>
<li>Maybe something is just cleaning up the machine keys directory after the fact.</li>
<li>The other (very rare) known case is where two threads load the PFX in parallel (they don't have to be in the same process) with one of them not having <code>PersistKeySet</code> asserted at import time.</li>
</ul>

<p>If you're loading and discarding the certificates you really shouldn't set <code>PersistKeySet</code>.  Every time you open a PFX another file is created on disk for each private key contained therein... those files get cleaned up normally (as long as the process doesn't abnormally terminate), but PersistKeySet prevents that cleanup from happening.</p>

<p>If nothing in code analysis reveals the two obvious key deletion locations (<code>PersistKeyInCsp=false</code> being the sneaky one) then you'll have to follow the filesystem auditing recommendations in <a href=""https://stackoverflow.com/questions/41479755/net-core-x509certificate2-privatekey-throws-nte-bad-keyset-error/41496258#41496258"">.NET Core X509Certificate2.PrivateKey throws nte_bad_keyset error</a>.</p>
","1169","<c#><.net-core><private-key><x509certificate2><identityserver4>","2","0","3","2017-07-26 13:39:37","42654766","0","1","-1","","2017-05-23 12:18:08","2017-02-08 00:13:09",""
"42102401","OpenCSP failed with error code 2148073494","<p>We started seeing this exception occur intermittently when our Azure App Service was moved to an App Service Environment. We're using Identity Server 4, and the exception occurs during token signing. This can be seen in the call stack below.</p>

<p>The signing cert is never saved to a cert store, it's loaded from a database as a byte array:</p>

<pre><code>new X509Certificate2(rawData, password,
                    X509KeyStorageFlags.MachineKeySet |
                    X509KeyStorageFlags.PersistKeySet);
</code></pre>

<p>These references appear to be the same issue:</p>

<p><a href=""https://stackoverflow.com/questions/41479755/net-core-x509certificate2-privatekey-throws-nte-bad-keyset-error"">.NET Core X509Certificate2.PrivateKey throws nte_bad_keyset error</a></p>

<p><a href=""https://github.com/dotnet/corefx/issues/2583"" rel=""nofollow noreferrer"">https://github.com/dotnet/corefx/issues/2583</a></p>

<p><strong>Edit:</strong>
Initially we thought this was something specific to the App Service Env in Azure, but now we're seeing the exception in standard App Services. As a test we created an Azure web job that loads a certificate from a byte array and creates JWT tokens (which require a private key for signing). This repros the error. Also of note is the Azure Web job won't even run when certain flags are passed to the <code>X509Certificate2</code> ctor (e.g. <code>X509KeyStorageFlags.UserKeySet</code>).</p>

<p>Stack trace is the same each time:</p>

<pre><code>System.Security.Cryptography.CryptographicException:
   at Internal.NativeCrypto.CapiHelper.CreateProvHandle(CspParameters parameters, Boolean randomKeyContainer)
   at System.Security.Cryptography.RSACryptoServiceProvider.get_SafeProvHandle()
   at System.Security.Cryptography.RSACryptoServiceProvider.get_SafeKeyHandle()
   at System.Security.Cryptography.RSACryptoServiceProvider..ctor(Int32 keySize, CspParameters parameters, Boolean useDefaultKeySize)
   at System.Security.Cryptography.RSACryptoServiceProvider..ctor(CspParameters parameters)
   at Internal.Cryptography.Pal.CertificatePal.&lt;&gt;c.&lt;GetRSAPrivateKey&gt;b__59_0(CspParameters csp)
   at Internal.Cryptography.Pal.CertificatePal.GetPrivateKey[T](Func`2 createCsp, Func`2 createCng)
   at Internal.Cryptography.Pal.CertificatePal.GetRSAPrivateKey()
   at Internal.Cryptography.Pal.CertificateExtensionsCommon.GetPrivateKey[T](X509Certificate2 certificate, Predicate`1 matchesConstraints)
   at Microsoft.IdentityModel.Tokens.X509SecurityKey.get_PrivateKey()
   at Microsoft.IdentityModel.Tokens.X509SecurityKey.get_HasPrivateKey()
   at Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.HasPrivateKey(SecurityKey key)
   at Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider..ctor(SecurityKey key, String algorithm, Boolean willCreateSignatures)
   at Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CreateSignatureProvider(SecurityKey key, String algorithm, Boolean willCreateSignatures)
   at Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CreateForSigning(SecurityKey key, String algorithm)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.CreateEncodedSignature(String input, SigningCredentials signingCredentials)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.WriteToken(SecurityToken token)
   at IdentityServer4.Services.DefaultTokenCreationService.CreateJwtAsync(JwtSecurityToken jwt)
   at IdentityServer4.Services.DefaultTokenCreationService.&lt;CreateTokenAsync&gt;d__3.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Services.DefaultTokenService.&lt;CreateSecurityTokenAsync&gt;d__9.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.&lt;CreateAccessTokenAsync&gt;d__10.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.&lt;ProcessTokenRequestAsync&gt;d__8.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.&lt;ProcessAsync&gt;d__6.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Endpoints.TokenEndpoint.&lt;ProcessTokenRequestAsync&gt;d__6.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Endpoints.TokenEndpoint.&lt;ProcessAsync&gt;d__5.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.IdentityServerMiddleware.&lt;Invoke&gt;d__3.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.FederatedSignOutMiddleware.&lt;Invoke&gt;d__6.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.AuthenticationMiddleware.&lt;Invoke&gt;d__2.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.&lt;Invoke&gt;d__18.MoveNext()
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.&lt;Invoke&gt;d__18.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.&lt;Invoke&gt;d__7.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.BaseUrlMiddleware.&lt;Invoke&gt;d__2.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.&lt;Invoke&gt;d__18.MoveNext()
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.&lt;Invoke&gt;d__18.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.&lt;Invoke&gt;d__18.MoveNext()
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.&lt;Invoke&gt;d__18.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.ApplicationInsights.AspNetCore.ExceptionTrackingMiddleware.&lt;Invoke&gt;d__4.MoveNext()
</code></pre>
","<p>To resolve the issue we switched from X509 certificates (<code>X509Certificate2</code>) to RSA generated keys (<code>RSACryptoServiceProvider</code>). Identity Server 4 supports both. The exception no longer occurs.</p>
","1169","<c#><.net-core><private-key><x509certificate2><identityserver4>","2","1","3","2017-07-26 13:39:37","42654766","0","1","-1","","2017-05-23 12:18:08","2017-02-08 00:13:09",""
"42102401","OpenCSP failed with error code 2148073494","<p>We started seeing this exception occur intermittently when our Azure App Service was moved to an App Service Environment. We're using Identity Server 4, and the exception occurs during token signing. This can be seen in the call stack below.</p>

<p>The signing cert is never saved to a cert store, it's loaded from a database as a byte array:</p>

<pre><code>new X509Certificate2(rawData, password,
                    X509KeyStorageFlags.MachineKeySet |
                    X509KeyStorageFlags.PersistKeySet);
</code></pre>

<p>These references appear to be the same issue:</p>

<p><a href=""https://stackoverflow.com/questions/41479755/net-core-x509certificate2-privatekey-throws-nte-bad-keyset-error"">.NET Core X509Certificate2.PrivateKey throws nte_bad_keyset error</a></p>

<p><a href=""https://github.com/dotnet/corefx/issues/2583"" rel=""nofollow noreferrer"">https://github.com/dotnet/corefx/issues/2583</a></p>

<p><strong>Edit:</strong>
Initially we thought this was something specific to the App Service Env in Azure, but now we're seeing the exception in standard App Services. As a test we created an Azure web job that loads a certificate from a byte array and creates JWT tokens (which require a private key for signing). This repros the error. Also of note is the Azure Web job won't even run when certain flags are passed to the <code>X509Certificate2</code> ctor (e.g. <code>X509KeyStorageFlags.UserKeySet</code>).</p>

<p>Stack trace is the same each time:</p>

<pre><code>System.Security.Cryptography.CryptographicException:
   at Internal.NativeCrypto.CapiHelper.CreateProvHandle(CspParameters parameters, Boolean randomKeyContainer)
   at System.Security.Cryptography.RSACryptoServiceProvider.get_SafeProvHandle()
   at System.Security.Cryptography.RSACryptoServiceProvider.get_SafeKeyHandle()
   at System.Security.Cryptography.RSACryptoServiceProvider..ctor(Int32 keySize, CspParameters parameters, Boolean useDefaultKeySize)
   at System.Security.Cryptography.RSACryptoServiceProvider..ctor(CspParameters parameters)
   at Internal.Cryptography.Pal.CertificatePal.&lt;&gt;c.&lt;GetRSAPrivateKey&gt;b__59_0(CspParameters csp)
   at Internal.Cryptography.Pal.CertificatePal.GetPrivateKey[T](Func`2 createCsp, Func`2 createCng)
   at Internal.Cryptography.Pal.CertificatePal.GetRSAPrivateKey()
   at Internal.Cryptography.Pal.CertificateExtensionsCommon.GetPrivateKey[T](X509Certificate2 certificate, Predicate`1 matchesConstraints)
   at Microsoft.IdentityModel.Tokens.X509SecurityKey.get_PrivateKey()
   at Microsoft.IdentityModel.Tokens.X509SecurityKey.get_HasPrivateKey()
   at Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider.HasPrivateKey(SecurityKey key)
   at Microsoft.IdentityModel.Tokens.AsymmetricSignatureProvider..ctor(SecurityKey key, String algorithm, Boolean willCreateSignatures)
   at Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CreateSignatureProvider(SecurityKey key, String algorithm, Boolean willCreateSignatures)
   at Microsoft.IdentityModel.Tokens.CryptoProviderFactory.CreateForSigning(SecurityKey key, String algorithm)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.CreateEncodedSignature(String input, SigningCredentials signingCredentials)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.WriteToken(SecurityToken token)
   at IdentityServer4.Services.DefaultTokenCreationService.CreateJwtAsync(JwtSecurityToken jwt)
   at IdentityServer4.Services.DefaultTokenCreationService.&lt;CreateTokenAsync&gt;d__3.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Services.DefaultTokenService.&lt;CreateSecurityTokenAsync&gt;d__9.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.&lt;CreateAccessTokenAsync&gt;d__10.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.&lt;ProcessTokenRequestAsync&gt;d__8.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.&lt;ProcessAsync&gt;d__6.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Endpoints.TokenEndpoint.&lt;ProcessTokenRequestAsync&gt;d__6.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Endpoints.TokenEndpoint.&lt;ProcessAsync&gt;d__5.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.IdentityServerMiddleware.&lt;Invoke&gt;d__3.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.FederatedSignOutMiddleware.&lt;Invoke&gt;d__6.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.AuthenticationMiddleware.&lt;Invoke&gt;d__2.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.&lt;Invoke&gt;d__18.MoveNext()
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.&lt;Invoke&gt;d__18.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.&lt;Invoke&gt;d__7.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.BaseUrlMiddleware.&lt;Invoke&gt;d__2.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.&lt;Invoke&gt;d__18.MoveNext()
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.&lt;Invoke&gt;d__18.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.&lt;Invoke&gt;d__18.MoveNext()
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware`1.&lt;Invoke&gt;d__18.MoveNext()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.ApplicationInsights.AspNetCore.ExceptionTrackingMiddleware.&lt;Invoke&gt;d__4.MoveNext()
</code></pre>
","<p>Maybe you didn't give IIS access to your private keys. I had same error, but it was necessary to use X509 Certs instead of keys. I've just granted a permission to read private keys from cert for IIS_IUSRS on MMC. It helps for me. </p>

<p>There's a full answer from <code>@thames</code>: 
<a href=""https://stackoverflow.com/a/2647003"">How to give ASP.NET access to a private key in a certificate in the certificate store?</a></p>

<p><strong>UPD:</strong> </p>

<p>Step-by-step guide:</p>

<ol>
<li>Create/purchase cert with private key</li>
<li>Import cert to ""Local Computer"" account (not ""Current User""). Check ""Allow private key to be exported"" in Import Wizard.</li>
<li>Open MMC Console and add Certificates Snap-In. Choose ""Computer Account"". </li>
<li>Find your cert and right-click on it. Choose ""All Tasks"" > ""Manage Private Keys""</li>
<li>Add Read access to your key for user IIS_IUSRS or IIS AppPool\&lt;AppPoolName&gt; (depends on IIS version and config. It's better to use ""Advanced"" button to show all possible options)</li>
<li>Restart your application</li>
</ol>
","1169","<c#><.net-core><private-key><x509certificate2><identityserver4>","2","0","3","2017-07-26 13:39:37","42654766","0","1","-1","","2017-05-23 12:18:08","2017-02-08 00:13:09",""
"22398477","Check that a file is certificate or a key","<p>I have a problem, I am allowing the used to upload certificate and private key files. Now suppose I have a file whose extension is messed-up (changed knowingly or unknowingly) say to break the system.. I need to put a validation in place that can check and can tell me that the given file is a valid certificate file or private key file or some other file..  </p>

<p>What i was thing was : to check for <code>-- BEGIN CERTIFICATE --</code>, <code>-- BEGIN RSA PRIVATE KEY --</code> in the file content..  Please tell what I am thing is good, or there is some other better solution to this problem..  </p>

<p>Thanks</p>
","<blockquote>
  <p>check and can tell me that the given file is a valid certificate file or private key file</p>
</blockquote>

<p>I'm going to answer this in C because OpenSSL is a C library. Others may be able to translate it into <a href=""https://pypi.python.org/pypi/pyOpenSSL"" rel=""nofollow noreferrer""><code>pyOpenSSL</code></a>, in which case they probably have a better answer than mine.</p>

<p>There are two answers here. One is for the certificate, and the second is for the private key. The private key is shown first because it is used to validate the certificate (so it makes sense to visit it first).</p>

<p>Also, its important to call the <code>*_check_key</code> routines because OpenSSL only checks that a key is well encoded; and it does not check that its actually valid. See, for example, <a href=""https://stackoverflow.com/questions/22119835/private-key-generated-by-openssl-does-not-satisfy-n-p-q"">Private key generated by openssl does not satisfy n = p * q</a>.</p>

<hr>

<p>In OpenSSL, you would use the following to verify the the private key:</p>

<pre class=""lang-c prettyprint-override""><code>FILE* file = fopen(...);
EVP_PKEY* pkey = PEM_read_PrivateKey(file, NULL, PasswordCallback, NULL);
unsigned long err = ERR_get_error();

if(pkey)
    EVP_PKEY_free(pkey);
</code></pre>

<p>If <code>pkey</code> is <code>NULL</code>, then there was a problem and <code>err</code> holds a reason code. Otherwise, you have a properly encoded private key (but not necessarily valid).</p>

<p><code>PasswordCallback</code> can simply provide a password in the buffer, or it can prompt the user and return the password in the buffer. For more on <code>PasswordCallback</code>, see <a href=""https://stackoverflow.com/questions/24081470/loading-a-pem-format-certificate"">Loading a PEM format certificate</a>.</p>

<p>If the key is properly encoded, you can check the type of private key and validate it with the following.</p>

<pre class=""lang-c prettyprint-override""><code>int type = EVP_PKEY_get_type(pkey);
switch (type)
{
case EVP_PKEY_RSA:
case EVP_PKEY_RSA2:
    RSA* rsa = EVP_PKEY_get1_RSA(pkey);
    rc = RSA_check_key(rsa);
    ASSERT(rc);
    RSA_free(rsa);

    break;

case EVP_PKEY_DSA:
case EVP_PKEY_DSA1:
case EVP_PKEY_DSA2:
case EVP_PKEY_DSA3:
case EVP_PKEY_DSA4:
    DSA* dsa = EVP_PKEY_get1_DSA(pkey);
    rc = DSA_check_key(dsa);
    ASSERT(rc);
    DSA_free(dsa);

    break;

case EVP_PKEY_DH:
    DH* dh = EVP_PKEY_get1_DH(pkey);
    rc = DH_check_key(dh);
    ASSERT(rc);
    DH_free(dh);

    break;

case EVP_PKEY_EC:
    EC_KEY* ec = EVP_PKEY_get1_EC_KEY(pkey);
    rc = EC_KEY_check_key(ec);
    ASSERT(rc);
    EC_KEY_free(ec);

    break;

default:
    ASSERT(0);
}
</code></pre>

<p><code>EVP_PKEY_get_type</code> is not part of OpenSSL. Here's how I implemented it:</p>

<pre class=""lang-c prettyprint-override""><code>int EVP_PKEY_get_type(EVP_PKEY *pkey)
{
    ASSERT(pkey);
    if (!pkey)
        return NID_undef;

    return EVP_PKEY_type(pkey-&gt;type);
}
</code></pre>

<hr>

<p>In OpenSSL, you would use the following to verify the the certificate:</p>

<pre class=""lang-c prettyprint-override""><code>FILE* file = fopen(...);
X509* x509 = PEM_read_X509(file, NULL, NULL, NULL);
unsigned long err = ERR_get_error();
</code></pre>

<p>If <code>x509</code> is <code>NULL</code>, then there was a problem and <code>err</code> holds a reason code. Otherwise, you have a properly encoded certificate (but not necessarily valid).</p>

<p>You can then verify the certificate with:</p>

<pre class=""lang-c prettyprint-override""><code>/* See above on validating the private key */
EVP_PKEY* pkey = ReadPrivateKey(...);

int rc = X509_verify(x509, pkey);
err = ERR_get_error();
</code></pre>

<p>If <code>rc != 1</code>, then there was a problem and <code>err</code> holds a reason code. Otherwise, you have a valid certificate and private key pair. If the certificate is valid, then you can't use <code>err</code> because <code>err</code> is only valid if there's a problem.</p>

<p>If your certificate is signed by an issuer (for example, a CA or intermediate), then you need to use a <code>X509_STORE</code> to verify the issuer's signature on your certificate (a lot of error checking omitted):</p>

<pre class=""lang-c prettyprint-override""><code>const char* serverCertFilename = ...;
const char* issuerCertFilename = ...;    

X509_STORE* store = X509_STORE_new();
ASSERT(store);

static const long flags = X509_V_FLAG_X509_STRICT | X509_V_FLAG_CHECK_SS_SIGNATURE
        | X509_V_FLAG_POLICY_CHECK;
rc = X509_STORE_set_flags(store, flags);
err = ERR_get_error();
ASSERT(rc);

/* Some other object/functions owns 'lookup', but I'm not sure which (perhaps the store) */
X509_LOOKUP* lookup = X509_STORE_add_lookup(store, X509_LOOKUP_file());
/* err = ERR_get_error(); // Does not set error codes. */
ASSERT(lookup);    

/* Cannot load this from memory. No API!!! */
rc = X509_LOOKUP_load_file(lookup, issuerCertFilename, X509_FILETYPE_PEM);
/* err = ERR_get_error(); // Does not set error codes. */
ASSERT(rc);

X509_STORE_CTX* ctx = X509_STORE_CTX_new();
ASSERT(ctx);

X509* serverCert = ReadCertifcate(serverCertFilename);
ASSERT(serverCert);

rc = X509_STORE_CTX_init(ctx, store, serverCert, NULL);
ret = err = ERR_get_error();
ASSERT(rc);

/* Error codes at https://www.openssl.org/docs/crypto/X509_STORE_CTX_get_error.html */
rc = X509_verify_cert(ctx);
err = X509_STORE_CTX_get_error(ctx);

/* Do cleanup, return success/failure */
</code></pre>
","1166","<python-2.7><ssl><openssl><ssl-certificate><private-key>","1","2","1","2015-04-16 20:13:19","22406677","0","0","2030114","","2014-03-17 05:12:00","2014-03-14 07:16:14",""
"50479284","OpenSSL: Read an EC-key, then write it again, and it's different","<p>I wrote a wrapper for OpenSSL that supports ECC. I'm trying to read a private key that I generated with </p>

<pre><code>openssl ecparam -name secp384r1 -genkey -noout -out privkey.pem
</code></pre>

<p>And compare it with what OpenSSL would produce after reading the key into a <code>EVP_PKEY</code> and <code>EC_KEY</code> and printing it again into a string. The results after reading are not the same.</p>

<p>In short:</p>

<ol>
<li>Read a key</li>
<li>Save it to <code>EVP_PKEY</code></li>
<li>Write it again</li>
</ol>

<p>And the results don't match. My program is quite big, so <a href=""http://coliru.stacked-crooked.com/a/363df1964f7f65b7"" rel=""nofollow noreferrer"">I produced an MCVE that demonstrates the problem</a>.</p>

<p>My suspicion is that the problem happens because I'm reading to an <code>EC_KEY</code>, then writing from <code>EVP_PKEY</code>, which is generic. I'm guessing here because the input says it's EC, but the output doesn't say that. I'm not sure how to resolve this, because I don't see a way to write directly from an <code>EC_KEY</code> to a file (bio object). Is my assessment correct?</p>

<p>Please advise.</p>

<hr>

<p>EDIT:
I was asked to put the whole code here in the comments, so there you go:</p>

<pre><code>#include &lt;iostream&gt;

#include &lt;openssl/bio.h&gt;
#include &lt;openssl/err.h&gt;
#include &lt;openssl/ec.h&gt;
#include &lt;openssl/pem.h&gt;

EC_KEY* ecKey = nullptr;
EVP_PKEY* pkey = nullptr;

void setPrivateKeyFromPEM(const std::string&amp; pemkey)
{
    pkey = EVP_PKEY_new();

    BIO* bio = BIO_new(BIO_s_mem());

    int bio_write_ret = BIO_write(
        bio, static_cast&lt;const char*&gt;(pemkey.c_str()), pemkey.size());
    if (bio_write_ret &lt;= 0) {
        throw std::runtime_error(""error1"");
    }

    if (!PEM_read_bio_PrivateKey(bio, &amp;pkey, NULL, NULL)) {
        throw std::runtime_error(""error1.5"");
    }

    EC_KEY* eckey_local = EVP_PKEY_get1_EC_KEY(pkey);

    if (!eckey_local) {
        throw std::runtime_error(""error2"");
    } else {
        ecKey = eckey_local;
        EC_KEY_set_asn1_flag(ecKey, OPENSSL_EC_NAMED_CURVE);
    }
}

std::string getPrivateKeyAsPEM()
{
    if (!pkey) {
        throw std::runtime_error(""error3"");
    }

    BIO* outbio = BIO_new(BIO_s_mem());

    if (!PEM_write_bio_PrivateKey(outbio, pkey, NULL, NULL, 0, 0,
                                  NULL)) {
        throw std::runtime_error(""error4"");
    }

    std::string keyStr;
    int         priKeyLen = BIO_pending(outbio);
    keyStr.resize(priKeyLen);
    BIO_read(outbio, (void*)&amp;(keyStr.front()), priKeyLen);
    return keyStr;
}

int main()
{
    std::string expectedPrivKey =
        ""-----BEGIN EC PRIVATE KEY-----\n""
        ""MIGkAgEBBDBNK0jwKqqf8zkM+Z2l++9r8bzdTS/XCoB4N1J07dPxpByyJyGbhvIy\n""
        ""1kLvY2gIvlmgBwYFK4EEACKhZANiAAQvPxAK2RhvH/k5inDa9oMxUZPvvb9fq8G3\n""
        ""9dKW1tS+ywhejnKeu/48HXAXgx2g6qMJjEPpcTy/DaYm12r3GTaRzOBQmxSItStk\n""
        ""lpQg5vf23Fc9fFrQ9AnQKrb1dgTkoxQ=\n""
        ""-----END EC PRIVATE KEY-----\n"";

    setPrivateKeyFromPEM(expectedPrivKey);
    // compare priv key
    {
        std::string privKeyRead = getPrivateKeyAsPEM();
        std::cout &lt;&lt; privKeyRead &lt;&lt; std::endl;
        std::cout&lt;&lt;expectedPrivKey&lt;&lt;std::endl;
    }

    return 0;
}
</code></pre>
","<p>Although the outputs don't match exactly, they actually represent the same key.</p>

<p>Your code outputs the following:</p>

<pre class=""lang-none prettyprint-override""><code>-----BEGIN PRIVATE KEY-----
MIG2AgEAMBAGByqGSM49AgEGBSuBBAAiBIGeMIGbAgEBBDBNK0jwKqqf8zkM+Z2l
++9r8bzdTS/XCoB4N1J07dPxpByyJyGbhvIy1kLvY2gIvlmhZANiAAQvPxAK2Rhv
H/k5inDa9oMxUZPvvb9fq8G39dKW1tS+ywhejnKeu/48HXAXgx2g6qMJjEPpcTy/
DaYm12r3GTaRzOBQmxSItStklpQg5vf23Fc9fFrQ9AnQKrb1dgTkoxQ=
-----END PRIVATE KEY-----

-----BEGIN EC PRIVATE KEY-----
MIGkAgEBBDBNK0jwKqqf8zkM+Z2l++9r8bzdTS/XCoB4N1J07dPxpByyJyGbhvIy
1kLvY2gIvlmgBwYFK4EEACKhZANiAAQvPxAK2RhvH/k5inDa9oMxUZPvvb9fq8G3
9dKW1tS+ywhejnKeu/48HXAXgx2g6qMJjEPpcTy/DaYm12r3GTaRzOBQmxSItStk
lpQg5vf23Fc9fFrQ9AnQKrb1dgTkoxQ=
-----END EC PRIVATE KEY-----
</code></pre>

<p>If you look closely at the first key printed, which is the one imported/exported by your code, it is labeled ""BEGIN PRIVATE KEY"" instead of ""BEGIN EC PRIVATE KEY"".  It also starts with <code>MIG2AgEAMBAGByqGSM49AgEGBSuBBAAiBIGe</code> but after that it is identical to the original key.  In fact, if you put both PEMs in files and run <code>openssl ec -in {filename} -text</code>, both will output the same thing:</p>

<pre class=""lang-none prettyprint-override""><code>read EC key
Private-Key: (384 bit)
priv:
    4d:2b:48:f0:2a:aa:9f:f3:39:0c:f9:9d:a5:fb:ef:
    6b:f1:bc:dd:4d:2f:d7:0a:80:78:37:52:74:ed:d3:
    f1:a4:1c:b2:27:21:9b:86:f2:32:d6:42:ef:63:68:
    08:be:59
pub: 
    04:2f:3f:10:0a:d9:18:6f:1f:f9:39:8a:70:da:f6:
    83:31:51:93:ef:bd:bf:5f:ab:c1:b7:f5:d2:96:d6:
    d4:be:cb:08:5e:8e:72:9e:bb:fe:3c:1d:70:17:83:
    1d:a0:ea:a3:09:8c:43:e9:71:3c:bf:0d:a6:26:d7:
    6a:f7:19:36:91:cc:e0:50:9b:14:88:b5:2b:64:96:
    94:20:e6:f7:f6:dc:57:3d:7c:5a:d0:f4:09:d0:2a:
    b6:f5:76:04:e4:a3:14
ASN1 OID: secp384r1
NIST CURVE: P-384
writing EC key
-----BEGIN EC PRIVATE KEY-----
MIGkAgEBBDBNK0jwKqqf8zkM+Z2l++9r8bzdTS/XCoB4N1J07dPxpByyJyGbhvIy
1kLvY2gIvlmgBwYFK4EEACKhZANiAAQvPxAK2RhvH/k5inDa9oMxUZPvvb9fq8G3
9dKW1tS+ywhejnKeu/48HXAXgx2g6qMJjEPpcTy/DaYm12r3GTaRzOBQmxSItStk
lpQg5vf23Fc9fFrQ9AnQKrb1dgTkoxQ=
-----END EC PRIVATE KEY-----
</code></pre>

<p>The extra part at the beginning is metadata from exporting a <code>EVP_PKEY</code> key stating that the key is an EC key.</p>

<p>Had you instead exported the <code>EC_KEY</code> directly using <code>PEM_write_bio_ECPrivateKey(outbio, ecKey, NULL, NULL, 0, 0, NULL)</code> the output would be exactly the same.</p>
","1164","<c++><openssl><private-key><elliptic-curve>","3","2","2","2018-08-18 10:30:40","50488762","3","","648265","","2018-08-18 10:30:40","2018-05-23 03:15:16",""
"50479284","OpenSSL: Read an EC-key, then write it again, and it's different","<p>I wrote a wrapper for OpenSSL that supports ECC. I'm trying to read a private key that I generated with </p>

<pre><code>openssl ecparam -name secp384r1 -genkey -noout -out privkey.pem
</code></pre>

<p>And compare it with what OpenSSL would produce after reading the key into a <code>EVP_PKEY</code> and <code>EC_KEY</code> and printing it again into a string. The results after reading are not the same.</p>

<p>In short:</p>

<ol>
<li>Read a key</li>
<li>Save it to <code>EVP_PKEY</code></li>
<li>Write it again</li>
</ol>

<p>And the results don't match. My program is quite big, so <a href=""http://coliru.stacked-crooked.com/a/363df1964f7f65b7"" rel=""nofollow noreferrer"">I produced an MCVE that demonstrates the problem</a>.</p>

<p>My suspicion is that the problem happens because I'm reading to an <code>EC_KEY</code>, then writing from <code>EVP_PKEY</code>, which is generic. I'm guessing here because the input says it's EC, but the output doesn't say that. I'm not sure how to resolve this, because I don't see a way to write directly from an <code>EC_KEY</code> to a file (bio object). Is my assessment correct?</p>

<p>Please advise.</p>

<hr>

<p>EDIT:
I was asked to put the whole code here in the comments, so there you go:</p>

<pre><code>#include &lt;iostream&gt;

#include &lt;openssl/bio.h&gt;
#include &lt;openssl/err.h&gt;
#include &lt;openssl/ec.h&gt;
#include &lt;openssl/pem.h&gt;

EC_KEY* ecKey = nullptr;
EVP_PKEY* pkey = nullptr;

void setPrivateKeyFromPEM(const std::string&amp; pemkey)
{
    pkey = EVP_PKEY_new();

    BIO* bio = BIO_new(BIO_s_mem());

    int bio_write_ret = BIO_write(
        bio, static_cast&lt;const char*&gt;(pemkey.c_str()), pemkey.size());
    if (bio_write_ret &lt;= 0) {
        throw std::runtime_error(""error1"");
    }

    if (!PEM_read_bio_PrivateKey(bio, &amp;pkey, NULL, NULL)) {
        throw std::runtime_error(""error1.5"");
    }

    EC_KEY* eckey_local = EVP_PKEY_get1_EC_KEY(pkey);

    if (!eckey_local) {
        throw std::runtime_error(""error2"");
    } else {
        ecKey = eckey_local;
        EC_KEY_set_asn1_flag(ecKey, OPENSSL_EC_NAMED_CURVE);
    }
}

std::string getPrivateKeyAsPEM()
{
    if (!pkey) {
        throw std::runtime_error(""error3"");
    }

    BIO* outbio = BIO_new(BIO_s_mem());

    if (!PEM_write_bio_PrivateKey(outbio, pkey, NULL, NULL, 0, 0,
                                  NULL)) {
        throw std::runtime_error(""error4"");
    }

    std::string keyStr;
    int         priKeyLen = BIO_pending(outbio);
    keyStr.resize(priKeyLen);
    BIO_read(outbio, (void*)&amp;(keyStr.front()), priKeyLen);
    return keyStr;
}

int main()
{
    std::string expectedPrivKey =
        ""-----BEGIN EC PRIVATE KEY-----\n""
        ""MIGkAgEBBDBNK0jwKqqf8zkM+Z2l++9r8bzdTS/XCoB4N1J07dPxpByyJyGbhvIy\n""
        ""1kLvY2gIvlmgBwYFK4EEACKhZANiAAQvPxAK2RhvH/k5inDa9oMxUZPvvb9fq8G3\n""
        ""9dKW1tS+ywhejnKeu/48HXAXgx2g6qMJjEPpcTy/DaYm12r3GTaRzOBQmxSItStk\n""
        ""lpQg5vf23Fc9fFrQ9AnQKrb1dgTkoxQ=\n""
        ""-----END EC PRIVATE KEY-----\n"";

    setPrivateKeyFromPEM(expectedPrivKey);
    // compare priv key
    {
        std::string privKeyRead = getPrivateKeyAsPEM();
        std::cout &lt;&lt; privKeyRead &lt;&lt; std::endl;
        std::cout&lt;&lt;expectedPrivKey&lt;&lt;std::endl;
    }

    return 0;
}
</code></pre>
","<p><code>PEM_write_bio_ECPrivateKey</code> is available in OpenSSL 1.0.2 too, only the documentation is missing.</p>

<p>The stored key is the same, the difference is only in encoding.</p>

<p>The tag <code>-----BEGIN PRIVATE KEY-----</code> signifies a PEM-encoded ASN.1 format.</p>

<p>The tag <code>-----BEGIN EC PRIVATE KEY-----</code> signifies a PEM-encoded ANSI X9.62 key. </p>

<p>Compare: <a href=""https://lapo.it/asn1js/#3081B6020100301006072A8648CE3D020106052B8104002204819E30819B02010104304D2B48F02AAA9FF3390CF99DA5FBEF6BF1BCDD4D2FD70A8078375274EDD3F1A41CB227219B86F232D642EF636808BE59A164036200042F3F100AD9186F1FF9398A70DAF683315193EFBDBF5FABC1B7F5D296D6D4BECB085E8E729EBBFE3C1D7017831DA0EAA3098C43E9713CBF0DA626D76AF7193691CCE0509B1488B52B64969420E6F7F6DC573D7C5AD0F409D02AB6F57604E4A314"" rel=""nofollow noreferrer""><strong>key 1</strong></a> vs. <a href=""https://lapo.it/asn1js/#3081A402010104304D2B48F02AAA9FF3390CF99DA5FBEF6BF1BCDD4D2FD70A8078375274EDD3F1A41CB227219B86F232D642EF636808BE59A00706052B81040022A164036200042F3F100AD9186F1FF9398A70DAF683315193EFBDBF5FABC1B7F5D296D6D4BECB085E8E729EBBFE3C1D7017831DA0EAA3098C43E9713CBF0DA626D76AF7193691CCE0509B1488B52B64969420E6F7F6DC573D7C5AD0F409D02AB6F57604E4A314"" rel=""nofollow noreferrer""><strong>key 2</strong></a>. Notice key2 doesn't contain the key type OID, the key itself is identical.</p>

<p>To write the EC key format, just use this:</p>

<pre><code>    if (!PEM_write_bio_ECPrivateKey(outbio, ecKey, NULL, NULL, 0, 0, NULL)) {
</code></pre>

<p><a href=""http://coliru.stacked-crooked.com/a/096b0967b3d76ab2"" rel=""nofollow noreferrer"">coliru-demo</a></p>
","1164","<c++><openssl><private-key><elliptic-curve>","3","2","2","2018-08-18 10:30:40","50488762","3","","648265","","2018-08-18 10:30:40","2018-05-23 03:15:16",""
"5475485","Using SSH private key 1.1 on Tamir .Net SSH library","<p>I'm tasked with replacing a Unix Java application that loads files onto a SSH server with a C#.Net application using Tamir's OpenSSH library.  The SSH server accepts a key that uses ""SSH PRIVATE KEY FILE FORMAT 1.1"", which Tamir's library doesn't understand.  Does anyone know what Windows tools can convert this key, or a .Net library that can read it?</p>
","<p>Fortunately, I was granted access to the account and was able to generate a new key that the library can read.</p>
","1163","<c#><ssh-keys><private-key><sharpssh>","1","0","1","2011-03-29 23:00:08","5479924","0","","","","","2011-03-29 16:03:58",""
"23183349","How do I get back a deleted private key from keychain?","<p>I accidently deleted a private key in keychain access and when I try to archive my app these two ! show up.</p>

<blockquote>
  <p>No codesigning identities found: No codesigning identities (i.e.
  certificate and private key pairs) that match the provisioning profile
  specified in your build settings (“My App”) were found. CodeSign
  error: code signing is required for product type 'Application' in SDK
  'iOS 7.1'</p>
</blockquote>
","<p>You can't re-create a deleted private key. Restore your keychain from backups if you have them. If not, you'll have to create a new private key.</p>
","1161","<ios><xcode><archive><keychain><private-key>","-5","1","1","2014-04-20 14:39:51","","1","","1801544","","2014-04-20 14:16:32","2014-04-20 14:04:43",""
"3280929","iPhone SDK 4.0: Get publicKey and privateKey from a certificate / identity profile stored in KeyChain","<p>I am trying to get the public and private Key from a certificate which i have already installed on the iPhone. (It is shown unter Settings -> General -> Profiles)</p>

<p>I need this keys for encryption sensitive data. (RSA Algorithm)</p>

<p>Up to now i have found no way to get access to the keys. 
Is it even possible ?</p>

<p>If not: What is the best possible way to realize my problem otherwise ?</p>

<p>Thank you for all helpful answers.</p>
","<p>1.) You can't get the private key of the profile for the simple reason, that your private key is not stored in the profile, it is only signed with it.</p>

<p>Instead consider getting familiar with the Security.framework. This <a href=""https://stackoverflow.com/questions/788569/rsa-encryption-decryption-in-iphone"">post</a> should give you a start</p>
","1157","<iphone><certificate><rsa><public-key><private-key>","0","0","1","2010-07-19 12:46:24","","0","","","","","2010-07-19 12:15:01",""
"46728841","Why getting error The private key is not present in the X.509 certificate","<p>I've developed a windows service application in C#.NET and now trying to call a web service from this windows service which is developed in Java. My client provided me with the certificate with .cert type and private key in .pkcs8 type. When I try to call the web service then I get the following error:   </p>

<blockquote>
  <p>The private key is not present in the X.509 certificate.</p>
</blockquote>

<p>Here is my code to connect with wsdl:</p>

<pre><code>&lt;clientCredentials&gt;
 &lt;serviceCertificate&gt;
  &lt;authentication certificateValidationMode=""PeerTrust"" trustedStoreLocation=""CurrentUser"" /&gt;
 &lt;/serviceCertificate&gt;
 &lt;clientCertificate storeLocation=""CurrentUser"" storeName=""Root"" findValue=""176455DB76886FF2BA3C122F8B36322F647CB2FD"" x509FindType=""FindByThumbprint""/&gt;                     
&lt;/clientCredentials&gt;
</code></pre>

<p>I would appreciate most if you could suggest me on the above to know how to include the private key with this certificate to call the web service from my code.
Thanks in advance.</p>
","<p>The problem is because you imported your certificate to Windows Certificate store, but haven't associated with a private key. You have to merge <code>.cer</code> and <code>.pkcs8</code> files into PFX container. You can use <code>certutil.exe</code> too for that:</p>

<pre><code>certutil -mergepfx path\mycert.cer path\mycert.pfx
</code></pre>

<p><strong>Note:</strong> rename your key file to have matching to certificate file name and change extension to <code>.key</code>. That is, both files must be in the same folder and have names, like this: <code>mycert.cer</code>, <code>mycert.key</code>.</p>
","1153","<c#><ssl><x509certificate><private-key>","0","0","1","2017-10-14 09:56:33","","2","","","","","2017-10-13 11:26:22",""
"11181962","Finding Private Keys on Windows","<p>I am using wireshark to intercept SSL traffic that is being sent from my machine. Because it is encrypted on my machine, the private key for the connection has to be stored there... correct?</p>

<p>Is there an application that will just show my the private keys. I guess it would kind of be a security vulnribility if it were easy though.</p>

<p>correct me if I am wrong, but because I encrypt out going connections with the servers public key, and decrypt incoming with my private key, I can only decrypt incoming connections... correct?</p>
","<p>You're confusing several things here.</p>

<ol>
<li><p>You don't necessarily have a private key at all in a client;</p></li>
<li><p>an SSL <em>server</em> practically always has a private key; but</p></li>
<li><p>SSL is not encrypted with public/private keys, it is encrypted with a symmetric session key which is generated for the session using the algorithm defined in <a href=""http://www.ietf.org/rfc/rfc2246.txt"" rel=""nofollow"">RFC 2246</a>.</p></li>
</ol>
","1136","<ssl><private-key>","0","2","2","2012-06-25 14:19:55","","4","","","","","2012-06-24 23:21:17",""
"11181962","Finding Private Keys on Windows","<p>I am using wireshark to intercept SSL traffic that is being sent from my machine. Because it is encrypted on my machine, the private key for the connection has to be stored there... correct?</p>

<p>Is there an application that will just show my the private keys. I guess it would kind of be a security vulnribility if it were easy though.</p>

<p>correct me if I am wrong, but because I encrypt out going connections with the servers public key, and decrypt incoming with my private key, I can only decrypt incoming connections... correct?</p>
","<p>As pointed out by EJP, this is only relevant if you're running a server, not a client.</p>

<p>If running a server, the location and format of the key used is detailed in the specific server's configuration. Some servers also include a procedure for exporting this key, which is inside a container or keystore.</p>

<p>Note also that even if you do obtain the private key, certain SSL cipher suites- notably those using the Diffie-Hellman key exchange mechanism - will prevent Wireshark from decrypting the traffic.</p>
","1136","<ssl><private-key>","0","0","2","2012-06-25 14:19:55","","4","","","","","2012-06-24 23:21:17",""
"25109994","Non-extractable private key in Keychain on OS X","<p>The manual page for <code>/usr/bin/security</code> on OS X 10.9 indicates that there is a <code>-x</code> option for <code>security import</code> to specify that <code>private keys are non-extractable after being imported</code>.</p>

<p>How is this implemented?  Are the private keys imported through such means really become completely non-extractable, or is there still a way to get a hold of them through some kind of memory dump?  How do applications still use such keys for their crypto?</p>
","<p>I'm not sure how the applications still use such keys, but as per <a href=""https://reverseengineering.stackexchange.com/questions/6043/extract-non-extractable-private-key-from-os-x-keychain"">https://reverseengineering.stackexchange.com/questions/6043/extract-non-extractable-private-key-from-os-x-keychain</a>, it appears that this is simply implemented as a bit attribute for <code>CSSM_KEYATTR_FLAGS keyAttributes</code> of <code>struct SecKeyImportExportParameters</code> named <strong><code>CSSM_KEYATTR_EXTRACTABLE</code></strong>.</p>

<ul>
<li><a href=""http://opensource.apple.com/source/SecurityTool/SecurityTool-55115/keychain_import.c"" rel=""nofollow noreferrer"">http://opensource.apple.com/source/SecurityTool/SecurityTool-55115/keychain_import.c</a></li>
<li><a href=""http://opensource.apple.com/source/Security/Security-55471.14/libsecurity_keychain/lib/SecImportExport.h"" rel=""nofollow noreferrer"">http://opensource.apple.com/source/Security/Security-55471.14/libsecurity_keychain/lib/SecImportExport.h</a></li>
</ul>

<p>As per the above, when the import is done, this attribute is specifically omitted when the <code>-x</code> option is specified to <code>security import</code>.</p>

<hr>

<p>According to SecItem.h, this <strong><code>kSecAttrIsExtractable</code></strong> has been introduced with OS X 10.6.</p>

<ul>
<li><a href=""http://opensource.apple.com/source/Security/Security-55471.14/libsecurity_keychain/lib/SecItem.h"" rel=""nofollow noreferrer"">http://opensource.apple.com/source/Security/Security-55471.14/libsecurity_keychain/lib/SecItem.h</a></li>
</ul>

<hr>

<p>Subsequently, when trying to do a wrapped export, several places within the Security framework appear to check to make sure that this <code>CSSM_KEYATTR_EXTRACTABLE</code> bit is set prior to doing any kind of export, and return an error in case the attribute is not set.</p>

<ul>
<li><a href=""http://opensource.apple.com/source/Security/Security-55471.14/libsecurity_keychain/lib/SecImportExportCrypto.cpp"" rel=""nofollow noreferrer"">http://opensource.apple.com/source/Security/Security-55471.14/libsecurity_keychain/lib/SecImportExportCrypto.cpp</a></li>
<li><a href=""http://opensource.apple.com/source/Security/Security-55471.14/libsecurity_pkcs12/lib/pkcs12Crypto.cpp"" rel=""nofollow noreferrer"">http://opensource.apple.com/source/Security/Security-55471.14/libsecurity_pkcs12/lib/pkcs12Crypto.cpp</a></li>
</ul>
","1134","<macos><security><keychain><private-key><pki>","2","5","1","2014-08-08 23:24:03","","1","0","","","","2014-08-03 23:19:59",""
"24913313","BouncyCastle Error","<p>I am developing an android application. In this application I create my own private key by passing pass phrase, user id and keys. When creating the private key, it says ""Error: org.bouncycastle.openpgp.PGPException: cannot create cipher: CAST5/CFB/NoPadding""</p>

<p>I have checked the logcat as well as the warning section in the Eclipse but there is error there. SO why I am getting this error and how to solve it.
Any help is greatly appreciated!</p>

<p>I am using bcpg-jdk15on-150.jar and bcprov-jdk15on-150.jar, </p>

<p>which I have downloaded from <a href=""http://www.bouncycastle.org/latest_releases.html"" rel=""nofollow"">http://www.bouncycastle.org/latest_releases.html</a></p>

<p><strong>EDIT</strong></p>

<p>the solution of renaming one or both the jar files does not work. When I run the application it says Unable to execute dex: Multiple dex files define Lorg/bouncycastle/apache/bzip2/BZip2Constants; 
and Conversion to Dalvik format failed: Unable to execute dex: Multiple dex files define Lorg/bouncycastle/apache/bzip2/BZip2Constants;
I think there is a problem with the duplication of some files within the two jar files. Can anyone suggest me a solution regarding this?</p>

<p>Thanks</p>
","<p>Use latest BouncyCastle and setup security in your code in the following way:</p>

<pre><code>    Security.removeProvider(BouncyCastleProvider.PROVIDER_NAME);
    Security.insertProviderAt(new BouncyCastleProvider(), 1);
</code></pre>

<p>It sets Bouncy Castle library as preferred security provider; Android's default provider config has BC at position 3 so this code will remove it and insert BC again at position 1.
It solved the problem for me.</p>
","1133","<android><encryption><bouncycastle><private-key>","0","1","1","2019-03-28 07:04:21","","3","1","3106253","","2014-07-23 15:35:08","2014-07-23 14:31:02",""
"27355929","Can I change the release private key in Android?","<p>I have released an app on Google play store. Now I want to change the private key and release a new update for that app and  I have previous used private key, I want to replace it. Is that possible? please help me. Thanks in advance... :)</p>
","<p><a href=""http://developer.android.com/tools/publishing/app-signing.html#overview"" rel=""nofollow"">Look</a> official documentation, Signing in Release Mode:</p>

<blockquote>
  <p>Keep your keystore and private key in a safe and secure place, and
  ensure that you have secure backups of them. If you publish an app to
  Google Play and then lose the key with which you signed your app, you
  will not be able to publish any updates to your app, since you must
  always sign all versions of your app with the same key.</p>
</blockquote>
","1125","<android><private-key>","-1","1","2","2014-12-08 10:34:35","27356009","3","","","","","2014-12-08 10:28:57",""
"27355929","Can I change the release private key in Android?","<p>I have released an app on Google play store. Now I want to change the private key and release a new update for that app and  I have previous used private key, I want to replace it. Is that possible? please help me. Thanks in advance... :)</p>
","<p>You cannot change key used to sign released app. The only way is to unpublish current app and release new one (with different key and different packageId -> so no updates to old app users):</p>

<blockquote>
  <p>Warning: Keep your keystore and private key in a safe and secure
  place, and ensure that you have secure backups of them. If you publish
  an app to Google Play and then lose the key with which you signed your
  app, you will not be able to publish any updates to your app, since
  you must always sign all versions of your app with the same key.</p>
</blockquote>

<p><a href=""https://developer.android.com/tools/publishing/app-signing.html"" rel=""nofollow"">https://developer.android.com/tools/publishing/app-signing.html</a></p>
","1125","<android><private-key>","-1","3","2","2014-12-08 10:34:35","27356009","3","","","","","2014-12-08 10:28:57",""
"18957916","Generate private RSA private key and set pass-phrase programmatically","<p>I am trying to generate an RSA private key and set a passphrase for it programmatically.</p>

<p>Using the following code I can generate an unencrypted key without a passphrase no problem:</p>

<pre><code>if (!PEM_write_PrivateKey(priv_f, key_p, NULL, NULL, 0, 0, NULL)) {
    fprintf(stderr, ""Write private key failed\n"");
    return -1;
}
</code></pre>

<p>But using this code, I keep getting the write private key failed error:</p>

<pre><code>if (!PEM_write_PrivateKey(priv_f, key_p, EVP_des_ede3_cbc(), NULL, 0, 0, passphrase)) {
    fprintf(stderr, ""Write private key failed\n"");
    return -1;
}
</code></pre>

<p>I am trying to follow the code on the man page <a href=""http://www.openssl.org/docs/crypto/pem.html"" rel=""nofollow"">here</a>. Is there any way I can get more information out of the error? Errno is always 0. Thanks!</p>
","<p>By adding the following code and making a slight alteration to the PEM_write_PrivateKey arguments I got it working.</p>

<pre><code>void init_openssl(void)
{
    if (SSL_library_init()) {
        SSL_load_error_strings();
        OpenSSL_add_all_algorithms();
        ERR_load_crypto_strings();
        RAND_load_file(_RAND_FILENAME, _RAND_LOADSIZE);
    } else {
        exit(EXIT_FAILURE);
    }
}
</code></pre>

<p>And </p>

<pre><code>if (!PEM_write_PrivateKey(priv_f, key_p,EVP_aes_256_cbc(),
                          (unsigned char*)passphrase,(int)strlen(passphrase), NULL, NULL)) {
    fprintf(stderr, ""Write private key failed\n"");
    handle_openssl_error();
    return -1;
}
</code></pre>
","1120","<c><openssl><rsa><private-key><pem>","0","2","1","2013-09-23 13:08:09","18960089","0","","","","","2013-09-23 11:16:53",""
"37833952","Getting the private key from p12 file using javascript","<p>I need to get the private key from a p12 file I've been given. I tried using the forge library and wrote the following code. </p>

<pre><code>var forge = require('node-forge');
var fs = require('fs');

var p12File = fs.readFileSync(""C:/Users/macilamanym/Desktop/certs/mayoorancert.p12"");
//var privateKey = p12ToPem(p12File, ""qwerty"");

var p12Der = forge.util.decode64(p12File);
// get p12 as ASN.1 object
var p12Asn1 = forge.asn1.fromDer(p12Der);
// decrypt p12 using the password 'password'
var p12 = forge.pkcs12.pkcs12FromAsn1(p12Asn1, 'qwerty');

console.log(p12);
</code></pre>

<p>But its throwing the following error.</p>

<pre><code>G:\Projects\Tests\NodeJSTest\node_modules\node-forge\js\util.js:1569
  input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');
                ^

TypeError: input.replace is not a function
    at Object.util.decode64 (G:\Projects\Tests\NodeJSTest\node_modules\node-forge\js\util.js:1569:17)
    at Object.&lt;anonymous&gt; (G:\Projects\Tests\NodeJSTest\index.js:9:25)
    at Module._compile (module.js:409:26)
    at Object.Module._extensions..js (module.js:416:10)
    at Module.load (module.js:343:32)
    at Function.Module._load (module.js:300:12)
    at Function.Module.runMain (module.js:441:10)
    at startup (node.js:139:18)
    at node.js:968:3
</code></pre>

<p>What have I done wrong here? Is there a better way to get the private key from the p12 file? Please advice.</p>

<p>Also please note that I have only been given the password for the private key. Name of the private key is not known. So should be a solution where I don't need to give the private key name to get it from the p12.</p>
","<p>I was able to get p12 from file by using this method:</p>

<pre><code>var forge = require('node-forge');
var fs = require('fs');

var keyFile = fs.readFileSync('path/to/your/p12/file.p12');
var keyBase64 = keyFile.toString('base64');


var p12Der = forge.util.decode64(keyBase64);

var p12Asn1 = forge.asn1.fromDer(p12Der);

var p12 = forge.pkcs12.pkcs12FromAsn1(p12Asn1, 'password');

console.log(p12);
</code></pre>

<p>I'm getting <code>p12</code> file via <code>fs</code> as string and encode it to <code>base64</code>.</p>

<p>I hope it will help.</p>
","1120","<javascript><node.js><decode><private-key><pem>","0","1","1","2016-11-29 09:34:39","","0","","","","","2016-06-15 11:18:57",""
"8363004","Secure FTP using private key authentication","<p>I am using JSCH library to do a sftp between two servers. But, I am unable to load the file into the <code>URL</code> using <code>getResource()</code>, for which I get an error during runtime. I checked the permissions and they are 600, so we should be able to read it.  </p>

<pre><code>    JSch jsch = new JSch();
    File file = new File(""/home/xxxxxx/.ssh/id_rsa"");
    Session session = null;
    URL keyFileURL = null;
    URI keyFileURI = null;
    if (file.exists())
    {
        keyFileURL = SecureFTP.class.getClassLoader().getResource(""/home/xxxxxx/.ssh/id_rsa"");
        if (keyFileURL == null)
        {
            System.out.println(""what"");
            throw new RuntimeException(""Key file not found in classpath"");
        }
    }
  try{
             keyFileURI = keyFileURL.toURI();
    }
    catch(Exception URISyntaxException)
    {
        System.out.println(""Wrong URL. LOL"");
}



    jsch.addIdentity(new File(keyFileURI).getAbsolutePath());
</code></pre>

<p>Is there something I am missing, in loading the resource or the path?</p>
","<p>Why don't you use the <a href=""http://docs.oracle.com/javase/6/docs/api/java/io/File.html#toURL%28%29"" rel=""nofollow""><code>File.toURL</code></a></p>

<pre><code>File file = new File(""/home/dev85adm/.ssh/id_rsa"");
if (file.exists()) {
    URL keyFileURL = file.toURL();
    //...
</code></pre>
","1120","<java><uri><sftp><private-key>","0","3","1","2011-12-02 21:54:42","8363111","2","","813040","","2011-12-02 21:54:42","2011-12-02 21:37:06",""
"333894","OpenSSL and generating CSRs at client side","<p>I need a favour from you. My infrastructure is IIS 6.0 and windows server 2003.</p>

<p>I need to investigate the use of OpenSSL and the construction of media that can be sent to end users, allowing them to generate CSRs, as well as produce documentation to support the signing of the CSR.</p>

<p>What I mean is, I need to send a CD to the end user with a script that can generate a CSR and a private key at their machine basing on my companies Publickey CA.</p>

<ol>
<li><p>client can run an utility sent by me via some cd or DVD (May be an openSSL script) needs to accept some parameters so that end user can supply keyword/password data.</p></li>
<li><p>The script will generate private key and CSR back to my company via some secure way (may be through email, I know it is not safe but some how they send us back CSR)</p></li>
<li><p>We receive the CSR and we sign it and return to the client.</p></li>
</ol>

<p>So I need to document this, so that the end user can understand what he is doing.</p>

<p>So my question is where can I get the script to send to client so that he can generate his own CSR and PrivateKey.</p>
","<p>Take a look at openssl's <a href=""http://www.openssl.org/docs/apps/req.html"" rel=""nofollow noreferrer"">req</a> command. Invoke req in a script, and provide an ssl config file to the -config option. req will query the necessary information from the user, and write the request into a file (which you also specify on the command line).</p>

<p><strong>Edit</strong>: you can download openssl from <a href=""http://www.slproweb.com/products/Win32OpenSSL.html"" rel=""nofollow noreferrer"">http://www.slproweb.com/products/Win32OpenSSL.html</a>
Do read the req man page. </p>
","1116","<openssl><public-key><private-key><csr>","0","0","1","2009-12-19 07:00:08","","0","","18804","John Topley","2009-08-26 15:33:39","2008-12-02 13:20:09",""
"39423244","java.security.KeyStoreException: failed to extract any certificates or private keys - maybe bad password?","<p>I'm using <a href=""http://juliusdavies.ca/not-yet-commons-ssl-0.3.9/ssl.html"" rel=""nofollow"">Not-yet commons SSL</a> to develop my own TLS Socket.</p>

<p>But always got No private keys found in keystore on following code</p>

<pre><code>private SSLServer sslS=null;
//...
sslS=new SSLServer();
KeyMaterial km=new KeyMaterial(certChain, privateKeyFile, certPassword.toCharArray(), privateKeyPassword.toCharArray());
</code></pre>

<hr>

<p>The certChain used original JRE's cacert:</p>

<ul>
<li>C:/Program Files/Java/jre1.8.0_101/lib/security/cacerts</li>
</ul>

<p>This give me a java.security.KeyStoreException: No private keys found in keystore!</p>

<hr>

<p>The certChain used my own:</p>

<ul>
<li>keytool -certreq -alias 127.0.0.1 -keystore ServerKey.jks -file 127.0.0.1.csr</li>
</ul>

<p>This give me a java.security.KeyStoreException: failed to extract any certificates or private keys - maybe bad password?</p>

<p>But I can 100% sure that my password is right. My password is a simple ""123456"", there is no reason I can do wrong on it.</p>

<hr>

<p>The privateKey I generated by:</p>

<ul>
<li>keytool -genkey -alias 127.0.0.1 -keyalg RSA -keystore ServerKey.jks -keysize 2048</li>
</ul>

<p>How can I solve this problem, any suggestion ?</p>
","","1110","<java><ssl><certificate><keystore><private-key>","0","","0","2016-09-10 07:33:07","","4","","316441","","2016-09-10 07:33:07","2016-09-10 06:25:03",""
"10400190","Xcode 4 version control with SVN repository using private/public key","<p>I just wonder if that's possible to use Xcode's version control to connect to SVN repository using svn+ssh protocol with private keys. If it is, can someone please give me some tutorials.<br/> 
Thanks a lot.</p>
","<p>This might help</p>

<p><a href=""https://stackoverflow.com/questions/1909651/"">SVN+SSH, not having to do ssh-add every time? (Mac OS)</a></p>

<p>Do you have your ssh keys working at the moment?  If so, as per the above question try typing  ""svn-add"" from the command line, and entering any pass phrase required.  If that works all is well.   </p>
","1102","<ios><xcode><svn><private-key>","1","1","1","2012-05-01 16:26:27","10400814","4","","","","","2012-05-01 15:43:41",""
"24422825","RSA encryption from java and decryption using php","<p>I am trying do  RSA encrypt of user email id using java and trying to decrypt using php. But i was not successful below are the details</p>

<p>Source in java:</p>

<pre><code>package ia;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.util.Date;
import javax.crypto.Cipher;
import org.apache.commons.codec.binary.Base64; 


public class EncryptionUntil {
/**
* String to hold name of the encryption algorithm.
*/
public static final String ALGORITHM = ""RSA"";

/**
* String to hold the name of the private key file.
*/
 public static final String PRIVATE_KEY_FILE = ""C:/keys/private/private.key"";

 /**
 * String to hold name of the public key file.
 */
 public static final String PUBLIC_KEY_FILE = ""C:/keys/public/public.key"";

 /** 
 * Generate key which contains a pair of private and public key using 1024
  * bytes. Store the set of keys in Prvate.key and Public.key files.
 * 
 * @throws NoSuchAlgorithmException
 * @throws IOException
 * @throws FileNotFoundException
 */
 public static void generateKey() {
try {
    final KeyPairGenerator keyGen = KeyPairGenerator
            .getInstance(ALGORITHM);
    keyGen.initialize(512);
    final KeyPair key = keyGen.generateKeyPair();

    File privateKeyFile = new File(PRIVATE_KEY_FILE);
    File publicKeyFile = new File(PUBLIC_KEY_FILE);

    // Create files to store public and private key
    if (privateKeyFile.getParentFile() != null) {
        privateKeyFile.getParentFile().mkdirs();
    }
    privateKeyFile.createNewFile();

    if (publicKeyFile.getParentFile() != null) {
        publicKeyFile.getParentFile().mkdirs();
    }
    publicKeyFile.createNewFile();

    // Saving the Public key in a file
    ObjectOutputStream publicKeyOS = new ObjectOutputStream(
            new FileOutputStream(publicKeyFile));
    publicKeyOS.writeObject(key.getPublic());
    publicKeyOS.close();

    // Saving the Private key in a file
    ObjectOutputStream privateKeyOS = new ObjectOutputStream(
            new FileOutputStream(privateKeyFile));
    privateKeyOS.writeObject(key.getPrivate());
    privateKeyOS.close();
} catch (Exception e) {
    e.printStackTrace();
}

}

/**
 * The method checks if the pair of public and private key has been
 * generated.
 * 
 * @return flag indicating if the pair of keys were generated.
 */
public static boolean areKeysPresent() {

File privateKey = new File(PRIVATE_KEY_FILE);
File publicKey = new File(PUBLIC_KEY_FILE);

if (privateKey.exists() &amp;&amp; publicKey.exists()) {
    return true;
}
return false;
}

/**
* Encrypt the plain text using public key.
* 
* @param text
*            : original plain text
* @param key
*            :The public key
* @return Encrypted text
* @throws java.lang.Exception
*/
public static byte[] encrypt(String text, PublicKey key) {
byte[] cipherText = null;
try {
    // get an RSA cipher object and print the provider
    final Cipher cipher = Cipher.getInstance(ALGORITHM);
    // encrypt the plain text using the public key
    cipher.init(Cipher.ENCRYPT_MODE, key);
    cipherText = cipher.doFinal(text.getBytes());

} catch (Exception e) {
    e.printStackTrace();
}
return cipherText;
}

/**
* Decrypt text using private key.
* 
* @param text
*            :encrypted text
* @param key
*            :The private key
* @return plain text
* @throws java.lang.Exception
*/
public static String decrypt(byte[] text, PrivateKey key) {
byte[] dectyptedText = null;
try {
    // get an RSA cipher object and print the provider
    final Cipher cipher = Cipher.getInstance(ALGORITHM);

    // decrypt the text using the private key
    cipher.init(Cipher.DECRYPT_MODE, key);
    dectyptedText = cipher.doFinal(text);

} catch (Exception ex) {
    ex.printStackTrace();
}

return new String(dectyptedText);
}

public static void encDecrypt (String originalText) throws FileNotFoundException,     IOException, ClassNotFoundException{
    ObjectInputStream inputStream = null;

    // Encrypt the string using the public key
    inputStream = new ObjectInputStream(new FileInputStream(
            PUBLIC_KEY_FILE));
    final PublicKey publicKey = (PublicKey) inputStream.readObject();
    final byte[] cipherText = encrypt(originalText, publicKey);
    final String cipherText64 = Base64.encodeBase64URLSafeString(cipherText);


    // Decrypt the cipher text using the private key.
    inputStream = new ObjectInputStream(new FileInputStream(
            PRIVATE_KEY_FILE));
    final PrivateKey privateKey = (PrivateKey) inputStream.readObject();
    final String plainText = decrypt(Base64.decodeBase64(cipherText64), privateKey);

    // Printing the Original, Encrypted and Decrypted Text
    System.out.println(""Original Text: "" + originalText);
    //System.out.println(""Encrypted Text: "" + new String(cipherText));
    System.out.println(""Base 64 Text: "" +cipherText64);
    System.out.println(""Decrypted Text: "" + plainText);


}
 /**
  * Test the EncryptionUntil
 */
 public static void main(String[] args) {

try {

    // Check if the pair of keys are present else generate those.
    if (!areKeysPresent()) {
        // Method generates a pair of keys using the RSA algorithm and
        // stores it
        // in their respective files
        generateKey();
    }

    final String originalText = ""rohit.gupta@infoaxon.com"";
    Date dd = new Date();
    System.out.println(dd);
    final String currentTime = String.valueOf(dd.getTime());

    encDecrypt(originalText);
    encDecrypt(currentTime);

} catch (Exception e) {
    e.printStackTrace();
}
}
}
</code></pre>

<p>private Key:</p>

<pre><code>aced 0005 7372 0014 6a61 7661 2e73 6563
7572 6974 792e 4b65 7952 6570 bdf9 4fb3
889a a543 0200 044c 0009 616c 676f 7269
7468 6d74 0012 4c6a 6176 612f 6c61 6e67
2f53 7472 696e 673b 5b00 0765 6e63 6f64
6564 7400 025b 424c 0006 666f 726d 6174
7100 7e00 014c 0004 7479 7065 7400 1b4c
6a61 7661 2f73 6563 7572 6974 792f 4b65
7952 6570 2454 7970 653b 7870 7400 0352
5341 7572 0002 5b42 acf3 17f8 0608 54e0
0200 0078 7000 0001 5830 8201 5402 0100
300d 0609 2a86 4886 f70d 0101 0105 0004
8201 3e30 8201 3a02 0100 0241 008d 442f
2df6 7e5d 6e48 16a9 70a1 9006 c932 1c47
71de 6cb7 81eb 8483 e5e4 73ee b06f 5e73
ed1e 851d 54f1 2d86 6491 479a d314 8897
f7e6 85dc 65ca f1f9 318e cc41 4702 0301
0001 0240 2306 f713 d47c bcb9 ed92 00ed
7681 f9cc c56a 11a5 005b c09c ac43 2d59
416e 258e a6a3 c4bb cc6d bcf1 7b5b 24d6
ff95 a146 2040 4d27 a92d cb9e ccaa 3519
fc85 50d1 0221 00db b9b2 a4c4 3ef6 4780
303c 6798 819f 1a9a 04ca dced 0f9e 0cfd
b4a5 75f5 bdf0 f502 2100 a496 8e0e d531
5e0b b427 6966 2b55 546b 2a8a a5d0 dcf4
bbfd 7ce9 1c56 d79c 13cb 0220 2736 8cdb
3aea c1a9 2107 7ac0 4247 5fcd af8f 0b65
4229 775b 7a2b b31b ca2f 8bc1 0220 28e3
e6a3 34c0 3117 4348 cf5c bcc3 5457 d397
e29e 4366 e215 9624 ec0f 7f3d 9d85 0221
00b4 fdab 7ff3 9804 f6f5 00bf 32a1 3c5c
7517 b0ab 90e1 f20a c9df 8d30 f778 c729
e074 0006 504b 4353 2338 7e72 0019 6a61
7661 2e73 6563 7572 6974 792e 4b65 7952
6570 2454 7970 6500 0000 0000 0000 0012
0000 7872 000e 6a61 7661 2e6c 616e 672e
456e 756d 0000 0000 0000 0000 1200 0078
7074 0007 5052 4956 4154 45
</code></pre>

<p>RSA Encrypt Output: </p>

<pre><code>    [B@1dd8823
</code></pre>

<p>and base64 encode output: </p>

<pre><code>    CslqF1Wj2mOXRzDtfJuA7Idy6Cty_3O2wHUHFWW8ZWsQaPOT-vsCV_KqW_gM2cdw5W1SSA3iZbDrpNiJ1-wMuQ
</code></pre>

<p>php Code for decryption</p>

<pre><code> &lt;?php
 function der2pem($der_data, $kind) {
 $pem = chunk_split(base64_encode($der_data), 64, ""\n"");
 $pem = ""-----BEGIN "".$kind.""-----\n"".$pem.""-----END "".$kind.""-----\n"";
 return $pem;
 }

 function to_pem($filename, $kind) {
 // TODO: handle errors
 $f = fopen($filename, ""r"");
 $der = fread($f, filesize($filename));
 $pem = der2pem($der, $kind);
 fclose($f);

 return $pem;
 }

 function load_private_key($filename) {
 $pem = to_pem($filename, ""PRIVATE KEY"");
 return openssl_pkey_get_private($pem);
 }

 function load_public_key($filename){
 $pem = to_pem($filename, ""PUBLIC KEY"");
 return openssl_pkey_get_public($pem);
 }

  $private_key = load_private_key(""private.key""); 

  $public_key = load_public_key(""public.key"");
  $ciphertext = base64_decode(""[B@1dd8823"");
  #$ciphertext = ""CslqF1Wj2mOXRzDtfJuA7Idy6Cty_3O2wHUHFWW8ZWsQaPOT-  vsCV_KqW_gM2cdw5W1SSA3iZbDrpNiJ1-wMuQ"";
 echo ""cipher = ""; echo $ciphertext; echo '&lt;/br&gt;';echo '&lt;/br&gt;';
 if (openssl_private_decrypt($ciphertext, $recovered_plaintext, $private_key))
{
 echo  ""recover text = ""; echo $recovered_plaintext; echo '&lt;/br&gt;';
}
#}
?&gt;
</code></pre>

<p>The php output returns none...</p>
","<p>Try <code>key.getPublic().getEncoded()</code> instead of <code>key.getPublic()</code>. Same thing for <code>key.getPrivate()</code>. As is the key isn't in a format OpenSSL supports.</p>
","1101","<php><encryption><rsa><private-key>","0","0","1","2016-11-23 09:08:39","","1","3","2361211","","2016-11-23 09:08:39","2014-06-26 05:13:39",""
"45332272","KeyStore EOFException after getting entry","<p>I created a <code>KeyStore</code> to hold a set of private keys in a web server. After I create the <code>KeyStore.jks</code> file I successfully add a private key and retrieve it from the key store. But, when I try to add a new key I get a <code>EOFException</code> in the <code>KeyStore.load(...)</code>.</p>

<pre><code>public void setPrivateKey(String deviceSerialNumber, PrivateKey priv) throws KeyStoreException, NoSuchAlgorithmException, CertificateException, IOException, InvalidKeySpecException, NotSupportedException {
    File privateKeyFile = getFile(Constants.JKS_PRIVATE_FILE_NAME);//Get the KeyStore.jks file
    synchronized (privateKeyFile) {
        KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());
        keyStore.load(new FileInputStream(privateKeyFile), Constants.JKS_PRIVATE_FILE_PASSWORD); //This is where the error happens 
        FileOutputStream file = null;
        try {
            file = new FileOutputStream(privateKeyFile);//Get the JKS file with the private keys


            //Write the private key to the file
            KeyStore.ProtectionParameter protParam = new KeyStore.PasswordProtection(Constants.JKS_PRIVATE_FILE_PASSWORD);
            KeyStore.PrivateKeyEntry pke = new KeyStore.PrivateKeyEntry(priv, new Certificate[] { createCertificate() });
            keyStore.setEntry(deviceSerialNumber, pke, protParam);

            //Save changes to key store file
            keyStore.store(file, Constants.JKS_PRIVATE_FILE_PASSWORD);

        } finally {
            file.close();//Close the private key file output stream
        }

    }
}

public PrivateKey getPrivateKey(String deviceSerialNumber) throws NoSuchAlgorithmException, CertificateException, FileNotFoundException, IOException, KeyStoreException, InvalidKeySpecException, NotSupportedException, UnrecoverableEntryException {
    PrivateKey key = null;
    File privateKeyFile = getFile(Constants.JKS_PRIVATE_FILE_NAME);//Get the keyStore.jks file
    synchronized (privateKeyFile) {
        KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());
        keyStore.load(new FileInputStream(privateKeyFile), Constants.JKS_PRIVATE_FILE_PASSWORD);
        FileOutputStream file = null;
        try {
            file = new FileOutputStream(privateKeyFile);//Get the JKS file with the private keys


            //Write the private key to the jks file
            boolean isKeyEntry = keyStore.isKeyEntry(deviceSerialNumber);//Check if there is a key with the alias deviceSerialnumber
            if (isKeyEntry) {//If the key does exist
                System.err.println(""Key does exist!!!!1"");
                KeyStore.ProtectionParameter protParam = new KeyStore.PasswordProtection(Constants.JKS_PRIVATE_FILE_PASSWORD);
                KeyStore.PrivateKeyEntry pke =  (PrivateKeyEntry) keyStore.getEntry(deviceSerialNumber, protParam);
                key = pke.getPrivateKey();
            } else {//If the key does not exist
                System.err.println(""No key!!!!!!!!"");
                //HANDLE THIS
                return null;
            }

        } finally {
            file.close();//Close the private key file output stream
        }
    }
    return key;
}

private Certificate createCertificate() throws CertificateException, IOException {
    FileInputStream fis = new FileInputStream(getFile(Constants.CERTIFICATE_FILE));


    CertificateFactory cf = CertificateFactory.getInstance(""X.509"");
    Collection&lt;? extends Certificate&gt; c = cf.generateCertificates(fis);
    Iterator&lt;? extends Certificate&gt; i = c.iterator();

    if (i.hasNext())
        return (Certificate) i.next();
    else 
        return null;
}
</code></pre>

<p>The error happens in <code>setPrivateKey(...)</code> at the <code>keyStore.load(...)</code>  on the second time that the method is called to add an additional private key to the key store.</p>

<p>I generate the <code>KeyStore.jks</code> file and the <code>server.cer</code> files using keytool </p>

<pre><code>keytool -genkey -alias keyAlias -keyalg RSA  -keystore KeyStore.jks -keypass password -storepass password
keytool -export -alias keyAlias -file server.cer -keystore KeyStore.jks -storepass password
</code></pre>

<p>Am I doing something wrong in the way I store and retrieve private keys from the keystore ? How do I stop the <code>EOFException</code> from happening ?</p>
","<p>Remove this line of <code>getPrivateKey</code></p>

<pre><code>file = new FileOutputStream(privateKeyFile);
</code></pre>

<p>It is not being used and close the FileInputStream you created before, not the output stream. You have two open streams on the same file</p>

<pre><code> keyStore.load(new FileInputStream(privateKeyFile), Constants.JKS_PRIVATE_FILE_PASSWORD);
</code></pre>
","1099","<java><security><keystore><private-key>","0","1","1","2017-07-26 17:33:47","45333857","2","","","","","2017-07-26 16:10:12",""
"23467199","How to send public key only to verify digital signature","<p>This is not a 100% c# or ASP.NET question, it's rather a mixture of security and programming. So I apologize ahead.  I need to integrate file signing module to my ASP.NET web application. I also need to write a utility application that will verify the signature. I know how to both sign a file and verify it. Here's how I do signing:</p>

<pre><code>       private byte[] SignFile(byte[] fileData){
        X509Certificate2 cert=GetCertificate();
        RSACryptoServiceProvider csp = cert.PrivateKey;

        SHA1Managed sha1 = new SHA1Managed();
        byte[] hash = sha1.ComputeHash(fileData);
        return csp.SignData(hash, CryptoConfig.MapNameToOID(""SHA1""));
      }
</code></pre>

<p>So far so good. On the other hand, when verifying I will need the public key. So here's my question. Do I need to send the certificate with the signed file so that the other side can take the public key to verify the signature. If so, this brings another question to mind: Can't someone else take the private key from attached certificate to edit the file and sign it again? What is the proper way of doing this? </p>
","<p>To verify a signature that you create using a pub/private key pair, the other party needs your <em>public key only</em>. You should always protect your private key and never let it get out, or a malicious party can pretend to be you.</p>

<p>With <code>X509Certificate2</code> you can use the <a href=""http://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509certificate.getpublickeystring%28v=vs.110%29.aspx"" rel=""nofollow""><code>GetPublicKeyString</code></a> method to get the hex string and pass it to them in a text format. You may also simply use the Export and Import methods to exchange only the public key.</p>

<p>PGP works on exactly the same principle, but assumes that the public key is exchanged through a separate <em>trusted</em> channel (such as a physical meeting and exchange of USB stick) so that the recipient knows that the public key is real and not a fake. If you are using certificates from a CA then the CA signing chain will imply the public key trust for you to as good a degree as is practically possible.</p>

<p>Code sample for <code>Export</code> and <code>Import</code>:</p>

<pre><code>var cspSig = (RSACryptoServiceProvider)cert.PrivateKey;
var sig = cspSig.SignHash(hash, CryptoConfig.MapNameToOID(""SHA1""));
var pubKeyBytes = cert.Export(X509ContentType.Cert);
// either send the client the bytes, or the cert file ...
File.WriteAllBytes(""MyCert.cer"", pubKeyBytes);
</code></pre>

<p>and on the client ...</p>

<pre><code>var pubCert = new X509Certificate2();
pubCert.Import(pubKeyBytes);
var cspVer = (RSACryptoServiceProvider)pubCert.PublicKey.Key;
var isValid = cspVer.VerifyHash(hash, CryptoConfig.MapNameToOID(""SHA1""), sig);
var hasPrivateKey = pubCert.HasPrivateKey; // will equal false if using .Export(X509ContentType.Cert)
</code></pre>
","1095","<asp.net><ssl><private-key>","0","0","1","2014-05-05 19:53:06","","0","","","","","2014-05-05 07:35:48",""
"11554689","Converting the Cipher Buffer to nsdata and back to cipherBuffer","<p>My problem is <code>CipherBuffer</code> which is uint8_t i am not able to convert that to <code>NSData</code> and get back the same value.the thing is i need to send the encrypted data to server.</p>

<p>Even i get <code>NSData</code> from serverside and i need to convert that to (unit8_t *). Is their a way to do that i am using below method to decrypt</p>

<p><code>- (void)decryptWithPrivateKey:(uint8_t *)cipherBuffer plainBuffer:(uint8_t *)decryptedBuffer</code></p>
","<p>To convert uint8_t to NSData</p>

<pre><code>NSData *data = [NSData dataWithBytes:(const void *)encrypted length:bufferSize];
</code></pre>

<p>And to convert NSData to uint8_t you can try below method of NSData</p>

<pre><code>- (const void *)bytes;
</code></pre>
","1091","<iphone><objective-c><rsa><private-key>","0","3","1","2012-07-19 07:57:31","11556312","1","","696134","","2012-07-19 06:47:22","2012-07-19 05:52:37",""
"46440422","How can I convert the private key stored in HSM to SignedXml.SigningKey in C#","<p>I'm trying to implement some demo of XML signing with a certificate which stored in the HSM.</p>

<p>I found some interesting example from this link:
<a href=""http://www.asptricks.net/2015/09/sign-xmldocument-with-x509certificate2.html"" rel=""nofollow noreferrer"">Sign XML Document with X509Certificate2</a> and modified it to using certificate and key inside the HSM with PKCS11Interop wrapper.</p>

<p>But anyone could give me a suggestion or example to <strong>convert ObjectHandle privateKey from HSM to SignedXML.SigningKey</strong></p>

<pre><code>private static void SignXmlWithCertificate(XmlDocument xmlDoc, X509Certificate2 cert, Session session, String alias)
        {
            SignedXml signedXml = new SignedXml(xmlDoc);

            List&lt;ObjectAttribute&gt; template = new List&lt;ObjectAttribute&gt;();
            template.Add(new ObjectAttribute(CKA.CKA_CLASS, CKO.CKO_PRIVATE_KEY));
            template.Add(new ObjectAttribute(CKA.CKA_KEY_TYPE, CKK.CKK_RSA));
            template.Add(new ObjectAttribute(CKA.CKA_LABEL, alias));
            List&lt;ObjectHandle&gt; foundObjects = session.FindAllObjects(template);
            ObjectHandle privateKey = foundObjects[0];

            signedXml.SigningKey = privateKey; //Here is where I stuck.
</code></pre>

<p>In the example from above external link. They using a certificate which combined private key. Then they can use like this.</p>

<pre><code>signedXml.SigningKey = cert.PrivateKey;
</code></pre>

<p>But the certificate that I'm using haven't content of private key inside. Please give me some suggestion.</p>
","<p>You need to implement custom class inherited from <a href=""https://msdn.microsoft.com/en-us/library/03h9zcez(v=vs.110).aspx"" rel=""nofollow noreferrer""><code>System.Security.Cryptography.RSA</code></a> class, use Pkcs11Interop in its implementation and then use instance of your custom class as a <a href=""https://msdn.microsoft.com/en-us/library/system.security.cryptography.xml.signedxml.signingkey(v=vs.110).aspx"" rel=""nofollow noreferrer""><code>SigningKey</code></a>.</p>

<p>You can implement it yourself or you can use <a href=""https://github.com/Pkcs11Interop/Pkcs11Interop.X509Store"" rel=""nofollow noreferrer"">Pkcs11Interop.X509Store</a> library which provides easy to use PKCS#11 based X.509 certificate store and contains <a href=""https://github.com/Pkcs11Interop/Pkcs11Interop.X509Store/blob/0.1.0/src/Pkcs11Interop.X509Store/Pkcs11RsaProvider.cs"" rel=""nofollow noreferrer""><code>Pkcs11RsaProvider</code></a> class inherited from <a href=""https://msdn.microsoft.com/en-us/library/03h9zcez(v=vs.110).aspx"" rel=""nofollow noreferrer""><code>System.Security.Cryptography.RSA</code></a> class. There's also a <a href=""https://github.com/Pkcs11Interop/Pkcs11Interop.X509Store/blob/0.1.0/src/Pkcs11Interop.X509Store.Tests/SignedXmlTest.cs"" rel=""nofollow noreferrer"">code sample</a> available which demonstrates its usage with <a href=""https://msdn.microsoft.com/en-us/library/system.security.cryptography.xml.signedxml(v=vs.110).aspx"" rel=""nofollow noreferrer""><code>SignedXml</code></a> class.</p>
","1089","<c#><private-key><pkcs#11><xml-signature><pkcs11interop>","2","1","2","2019-01-08 13:24:54","","0","1","3360744","","2017-10-20 10:09:49","2017-09-27 05:55:27",""
"46440422","How can I convert the private key stored in HSM to SignedXml.SigningKey in C#","<p>I'm trying to implement some demo of XML signing with a certificate which stored in the HSM.</p>

<p>I found some interesting example from this link:
<a href=""http://www.asptricks.net/2015/09/sign-xmldocument-with-x509certificate2.html"" rel=""nofollow noreferrer"">Sign XML Document with X509Certificate2</a> and modified it to using certificate and key inside the HSM with PKCS11Interop wrapper.</p>

<p>But anyone could give me a suggestion or example to <strong>convert ObjectHandle privateKey from HSM to SignedXML.SigningKey</strong></p>

<pre><code>private static void SignXmlWithCertificate(XmlDocument xmlDoc, X509Certificate2 cert, Session session, String alias)
        {
            SignedXml signedXml = new SignedXml(xmlDoc);

            List&lt;ObjectAttribute&gt; template = new List&lt;ObjectAttribute&gt;();
            template.Add(new ObjectAttribute(CKA.CKA_CLASS, CKO.CKO_PRIVATE_KEY));
            template.Add(new ObjectAttribute(CKA.CKA_KEY_TYPE, CKK.CKK_RSA));
            template.Add(new ObjectAttribute(CKA.CKA_LABEL, alias));
            List&lt;ObjectHandle&gt; foundObjects = session.FindAllObjects(template);
            ObjectHandle privateKey = foundObjects[0];

            signedXml.SigningKey = privateKey; //Here is where I stuck.
</code></pre>

<p>In the example from above external link. They using a certificate which combined private key. Then they can use like this.</p>

<pre><code>signedXml.SigningKey = cert.PrivateKey;
</code></pre>

<p>But the certificate that I'm using haven't content of private key inside. Please give me some suggestion.</p>
","<p>You need to implement custom class inherited from <a href=""https://msdn.microsoft.com/en-us/library/system.security.cryptography.xml.signedxml(v=vs.110).aspx"" rel=""nofollow noreferrer"">System.Security.Cryptography.Xml.SignedXml</a> like this</p>

<pre><code>public class CustomSignedXml: SignedXml
    {
    public CustomSignedXml(XmlDocument xmlDoc):base(xmlDoc)
    {
    }
    internal void ComputeSignature(ISignerProvider signerProvider)
    {
        var methodInfo = typeof (SignedXml).GetMethod(""BuildDigestedReferences"",
            BindingFlags.Instance | BindingFlags.NonPublic);
        methodInfo.Invoke(this, null);
        SignedInfo.SignatureMethod = XmlDsigRSASHA1Url;
        // See if there is a signature description class defined in the Config file
        SignatureDescription signatureDescription =
            CryptoConfig.CreateFromName(SignedInfo.SignatureMethod) as SignatureDescription;
        if (signatureDescription == null)
            throw new CryptographicException(""Cryptography_Xml_SignatureDescriptionNotCreated"");

        var hashAlg = signatureDescription.CreateDigest();
        if (hashAlg == null)
            throw new CryptographicException(""Cryptography_Xml_CreateHashAlgorithmFailed"");
        var methodInfo2 = typeof (SignedXml).GetMethod(""GetC14NDigest"", BindingFlags.Instance | BindingFlags.NonPublic);
        var hashvalue = (byte[]) methodInfo2.Invoke(this, new object[] {hashAlg});

        m_signature.SignatureValue = signerProvider.Sign(hashvalue);
    }
}
</code></pre>

<p>and then you need to create interface like this</p>

<pre><code>public interface ISignerProvider
{
    byte[] Sign(byte[] data);
}
</code></pre>

<p>then implement it by <a href=""https://www.pkcs11interop.net/"" rel=""nofollow noreferrer"">Pkcs11Interop</a> like this</p>

<pre><code>    public class Pkcs11SignerProvider : ISignerProvider
{
    private string _thumbprint;
    public string DllPath { get; set; }
    public string TokenSerial { get; set; }
    public string TokenPin { get; set; }
    public string PrivateKeyLabel { get; set; }

    public Pkcs11SignerProvider(string dllPath, string tokenSerial, string tokenPin, string privateKeyLabel)
    {
        DllPath = dllPath;
        TokenSerial = tokenSerial;
        TokenPin = tokenPin;
        PrivateKeyLabel = privateKeyLabel;
    }

    public byte[] Sign(byte[] data)
    {
        using (var pkcs11 = new Pkcs11(DllPath, AppType.SingleThreaded))
        {

            var slots = pkcs11.GetSlotList(SlotsType.WithTokenPresent);
            var slot = slots.FirstOrDefault(slot1 =&gt; slot1.GetTokenInfo().SerialNumber == TokenSerial);
            if (slot == null)
                throw new Exception(""there is no token with serial "" + TokenSerial);
            using (var session = slot.OpenSession(SessionType.ReadOnly))
            {
                session.Login(CKU.CKU_USER, TokenPin);

                var searchTemplate = new List&lt;ObjectAttribute&gt;
                {
                    new ObjectAttribute(CKA.CKA_CLASS, CKO.CKO_PRIVATE_KEY),
                    new ObjectAttribute(CKA.CKA_KEY_TYPE, CKK.CKK_RSA)
                };
                if (!string.IsNullOrEmpty(PrivateKeyLabel))
                    searchTemplate.Add(new ObjectAttribute(CKA.CKA_LABEL, PrivateKeyLabel));

                var foundObjects = session.FindAllObjects(searchTemplate);
                var privateKey = foundObjects.FirstOrDefault();

                using (var mechanism = new Mechanism(CKM.CKM_RSA_PKCS))
                {
                    return session.Sign(mechanism, privateKey, data);
                }

            }

        }
    }

}
</code></pre>

<p>then call this method to sign xml</p>

<pre><code>public static void Sign(XmlDocument xmlDoc, ISignerProvider signerProvider)
    {
        if (xmlDoc == null)
            throw new ArgumentException(""xmlDoc"");
        if (xmlDoc.DocumentElement == null)
            throw new ArgumentException(""xmlDoc.DocumentElement"");
        var signedXml = new CustomSignedXml(xmlDoc);
        var reference = new Reference { Uri = """" };
        var env = new XmlDsigEnvelopedSignatureTransform();
        reference.AddTransform(env);
        signedXml.AddReference(reference);
        signedXml.ComputeSignature(signerProvider);
        var xmlDigitalSignature = signedXml.GetXml();
        xmlDoc.DocumentElement.AppendChild(xmlDoc.ImportNode(xmlDigitalSignature, true));
    }
</code></pre>

<p>and this code to verify</p>

<pre><code>        public static bool Verify(XmlDocument document, X509Certificate2 certificate)
    {
        // Check arguments.
        if (document == null)
            throw new ArgumentException(""Doc"");
        if (certificate == null)
            throw new ArgumentException(""Key"");

        // Create a new SignedXml object and pass it
        // the XML document class.
        var signedXml = new SignedXml(document);

        // Find the ""Signature"" node and create a new
        // XmlNodeList object.
        var nodeList = document.GetElementsByTagName(""Signature"");

        // Throw an exception if no signature was found.
        if (nodeList.Count &lt;= 0)
        {
            throw new CryptographicException(""Verification failed: No Signature was found in the document."");
        }

        // This example only supports one signature for
        // the entire XML document.  Throw an exception 
        // if more than one signature was found.
        if (nodeList.Count &gt;= 2)
        {
            throw new CryptographicException(""Verification failed: More that one signature was found for the document."");
        }

        // Load the first &lt;signature&gt; node.  
        signedXml.LoadXml((XmlElement)nodeList[0]);

        return signedXml.CheckSignature(certificate, true);
    }
</code></pre>
","1089","<c#><private-key><pkcs#11><xml-signature><pkcs11interop>","2","4","2","2019-01-08 13:24:54","","0","1","3360744","","2017-10-20 10:09:49","2017-09-27 05:55:27",""
"19575185","Deleting a private key (that was matched to a certificate) from keychain programmatically","<p>I'm trying to delete a certificate with its paired private key from the keychain through the keychain API. I can delete the certificate easily but the private key is always left behind. How can I remove it from the keychain???
I've tried several ways but even with the SecKeyRef in hand, once I run SecItemDelete (for instance), the function returns with status of errSecSuccess but the key is still there in the keychain!!!</p>

<p>Any help is much appreciated, and if there's any sample code please post it.
Errrrr! This is so frustrating...</p>

<p>Thanks.. </p>
","<p>Well, the answer to this is a bit tricky....
Apparently, there is an Apple known bug about this thing, with no known workaround (this is taken from Apple's DTS response).</p>

<p>The private key CAN be deleted if there's an ACL restricting access to it and allowing one and ONLY one application to access the key.
So, Theoretically, it is possible to change the access object and restrict the ACL lists and then deleting it. </p>

<p>But.... Unfortunately, Trying to manipulate the identity's access object to have the same ACLs as when you change it manually by Keychain Access doesn't behave as nicely...</p>

<p>If you do manage to restrict by any chance then the rest is easy enough:   </p>

<p>So here is a code snippet just in case anyone finds it useful:</p>

<pre class=""lang-m prettyprint-override""><code>OSStatus status       = errSecSuccess;
CFTypeRef identityRef = NULL;
CFStringRef certLabel = NULL;

const char *certLabelString = ""Some string identifying your certificate"";
certLabel = CFStringCreateWithCString(NULL, certLabelString, kCFStringEncodingUTF8);

const void *keys[]    = { kSecClass,    kSecAttrLabel,   kSecReturnRef };
const void *values[]  = { kSecClassIdentity, certLabel, kCFBooleanTrue };
CFDictionaryRef query = CFDictionaryCreate(NULL, keys, values, 3, NULL, NULL);

// First we extract the identity out of the keychain
status = SecItemCopyMatching(query, &amp;identityRef);
if (status != errSecSuccess)
{ 
    s_log(SecCopyErrorMessageString(status, NULL));
    CFRelease(certLabel);
    CFRelease(query);
    if (identityRef)
        CFRelease(identityRef);

    return -1;
}

CFRelease(certLabel);
CFRelease(query);

// We have obtained the identity so we can delete it
CFArrayRef itemList = CFArrayCreate(NULL, &amp;identityRef, 1, NULL);
const void *keys2[]   = { kSecClass,  kSecMatchItemList,  kSecMatchLimit };
const void *values2[] = { kSecClassIdentity, itemList, kSecMatchLimitAll };

CFDictionaryRef dict = CFDictionaryCreate(NULL, keys2, values2, 3, NULL, NULL);
status = SecItemDelete(dict);

if (status != errSecSuccess) {
    s_log(SecCopyErrorMessageString(status, NULL));
    CFRelease(dict);
    CFRelease(itemList);
    CFRelease(identityRef);
    return -2;
}
</code></pre>
","1085","<macos><security><keychain><private-key>","3","0","1","2017-06-20 12:02:12","19631482","0","","","","","2013-10-24 19:45:51",""
"41753832","Converting a PrivateKey (SecRefKey) into NSData or Base64","<p>I have a p12 file, from which I extract the PrivateKey, PublicKey both as SecKeyRef and the certificate as SecCertificateRef.</p>

<p>The P12 file have a ECDSA PrivateKey that I need to use to sign data (ECC).</p>

<p>So I'm using a suggested library: <a href=""https://github.com/ricmoo/GMEllipticCurveCrypto"" rel=""nofollow noreferrer"">https://github.com/ricmoo/GMEllipticCurveCrypto</a></p>

<p>But I need to feed the library with the keys on Base64 or NSData, I can't feed SecKeyRef. I managed to extract the NSData for the publicKey using the methods provided <a href=""https://stackoverflow.com/questions/16748993/ios-seckeyref-to-nsdata"">here</a>, it works.</p>

<p>But I can't find any way to convert a SecRefKey that points to a privateKey to NSData. Any ideas on how to do this, OR, sign and verify data in iOS using ECC with SecKeyRefs.</p>

<hr>

<p>For reference, this method converts the P12 into iOS SecRefs:</p>

<pre><code>- (BOOL)storeDetailsForP12CertificateData:(NSData *)certData password:(NSString*)pass identifier:(NSString*)identifier{    
    SecKeyRef publicKey, privateKey;
    SecCertificateRef certRef;

    //Extract keys and Certificate
    NSMutableDictionary * options = [[NSMutableDictionary alloc] init];
    [options setObject:pass forKey:(id)kSecImportExportPassphrase];

    CFArrayRef items = CFArrayCreate(NULL, 0, 0, NULL);
    OSStatus securityError = SecPKCS12Import((CFDataRef) certData,
                                             (CFDictionaryRef)options, &amp;items);

    CFDictionaryRef identityDict = CFArrayGetValueAtIndex(items, 0);
    SecIdentityRef identityApp =
    (SecIdentityRef)CFDictionaryGetValue(identityDict,
                                         kSecImportItemIdentity);

    assert(securityError == noErr);

    //get private key
    SecIdentityCopyPrivateKey(identityApp, &amp;privateKey);

    //get certificate
    SecIdentityCopyCertificate(identityApp, &amp;certRef);

    //evaluate certificate.
    CFArrayRef certs = CFArrayCreate(kCFAllocatorDefault, (const void **) &amp;certRef, 1, NULL);
    SecPolicyRef policy = SecPolicyCreateBasicX509();
    SecTrustRef trust;
    SecTrustCreateWithCertificates(certs, policy, &amp;trust);
    (CFRelease(certs));
    SecTrustResultType trustResult;
    SecTrustEvaluate(trust, &amp;trustResult);

    //get publickey
    publicKey = SecTrustCopyPublicKey(trust);

    //clean memory
    (CFRelease(trust));
    (CFRelease(policy));

    if (!publicKey || !privateKey || !certRef) {
        return NO;
    } else {
        KeyData *details = [[KeyData alloc] init];
        details.publicKey = publicKey;
        details.privateKey = privateKey;
        details.certificate = certRef;
        details.fileData = certData;

        return YES;
    }
}
</code></pre>
","<p>Looks like you simply need to use <code>SecKeyCopyExternalRepresentation</code>:</p>

<pre><code>/*!
    @function SecKeyCopyExternalRepresentation
    @abstract Create an external representation for the given key suitable for the key's type.
    @param key The key to be exported.
    @param error On error, will be populated with an error object describing the failure.
    See ""Security Error Codes"" (SecBase.h).
    @result A CFData representing the key in a format suitable for that key type.
    @discussion This function may fail if the key is not exportable (e.g., bound to a smart card or Secure Enclave).
    The format in which the key will be exported depends on the type of key:
    * kSecAttrKeyTypeRSA                 PKCS#1 format
    * kSecAttrKeyTypeECSECPrimeRandom    SEC1 format (www.secg.org)
 */
CFDataRef _Nullable SecKeyCopyExternalRepresentation(SecKeyRef key, CFErrorRef *error)
</code></pre>

<p>Note that <code>CFDataRef</code> is toll-free bridged to <code>NSData</code>, so you can easily convert them.</p>
","1076","<objective-c><encryption><private-key><elliptic-curve>","2","0","1","2017-01-20 09:44:32","","0","","-1","","2017-05-23 11:53:13","2017-01-19 23:54:24",""
"48111365","Read Certificate from USB token in javascript","<p>I want to read </p>

<blockquote>
  <p>certificate</p>
</blockquote>

<p>from <code>Digital Signature</code> <code>(USB token)</code> <strong>in Javascript</strong>, i need both <code>public</code> and <code>private</code> key... ? Any help would be appreciated....</p>
","","1055","<javascript><token><digital-signature><private-key>","1","","0","2018-01-05 10:19:19","","6","","5734115","","2018-01-05 10:19:19","2018-01-05 10:12:15",""
"42614118","How to share ssh keys, so multiple devs can work on one private repo","<p>I am new to ssh (not the ssh login and user permissions) but more like github ssh.</p>

<p>I have a project on my github, which is in private mode and I have to developers that I would like 
to work with. So, far the only way to work on this private repo is to hand them the email/password to my 
github account, which we all know is not going to happen. </p>

<p>So, since I haven't worked on team projects, I don't know the exact steps I have to do to grant them access, 
and which exact steps they should then take to access it. </p>

<p>So, I think the first thing to do: <a href=""https://help.github.com/articles/checking-for-existing-ssh-keys/"" rel=""nofollow noreferrer"">Checking for existing SSH keys</a> via gitbash</p>

<pre><code>foo@desktop /c/xampp/htdocs
$ ls -al ~/.ssh
total 13
drwxr-xr-x 1 zorg 197121   0 Feb  8 21:49 ./
drwxr-xr-x 1 zorg 197121   0 Mar  4 18:03 ../
-rw-r--r-- 1 zorg 197121 344 Feb 10 16:48 known_hosts
</code></pre>

<p>My site is located at <code>/c/xampp/htdocs/website</code> but I am running the key generation at <code>/c/xampp/htdocs</code> because I understand it makes
no difference (citation needed)</p>

<p>after this, assuming that I have no previously generated keys (since I don't see anything starting with *.pub) I went to 
<a href=""https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/"" rel=""nofollow noreferrer"">Generating a new SSH key and adding it to the ssh-agent</a></p>

<p>So, after generating the keys and copying the keys to clipboard via <code>clip &lt; ~/.ssh/id_rsa.pub</code> </p>

<p>I went to  <a href=""https://github.com/username/project/settings/keys"" rel=""nofollow noreferrer"">https://github.com/username/project/settings/keys</a></p>

<p>and added the keys. </p>

<p>Now, my question is, assuming what I have done is so far correct, how do I allow these three collaborators access to my repo? </p>
","","1049","<git><github><ssh><ssh-keys><private-key>","0","","0","2017-03-05 21:15:17","","5","","","","","2017-03-05 21:15:17",""
"42887830","How CSP find the private key of certificate to perform cryptographic operations?","<p>My question is: when an application invoke CSP for performing cryptographic operation, such as signing, how CSP find private key of certifcate respectively? <br />
If a certificate imported to cert store that the private key not in local computer (on USB token, external storage, e.g. mobile device), it can found?<br /></p>
","<p>When you import a certificate to the system store, Windows creates a BLOB structure that contains an encoded certificate itself and it properties. 
BLOB has following structure:</p>

<pre><code>property1_id (4 bytes)
reserved = 0x00000001
property1_length (4 bytes)
property1_data[property1_length]
...
cert_property_id = 0x00000020
reserved = 0x00000001
cert_data_length (4 bytes)
cert_data[cert_data_length]
</code></pre>

<p>Therefore, if you want that your imported certificate to have link to a private key, you need to set CERT_KEY_PROV_INFO_PROP_ID. You can achieve that with <a href=""https://msdn.microsoft.com/en-us/library/windows/desktop/aa381420(v=vs.85).aspx"" rel=""nofollow noreferrer"">CRYPT_KEY_PROV_INFO</a> structure and <a href=""https://msdn.microsoft.com/en-us/library/windows/desktop/aa376573(v=vs.85).aspx"" rel=""nofollow noreferrer"">CertSetCertificateContextProperty</a> function.</p>

<p>For example:</p>

<pre><code>#include &lt;Windows.h&gt;
#include &lt;wincrypt.h&gt;

void SetKeyLink()
{
    HCERTSTORE hStore = NULL;
    CRYPT_KEY_PROV_INFO key_prov_info = { 0 };
    PCCERT_CONTEXT pCertContext = nullptr;
    std::vector&lt;BYTE&gt; der_encoded_cert;

    hStore = CertOpenSystemStore(NULL, L""MY"");
    if (!hStore)
    {
        goto Exit;
    }

    der_encoded_cert = LoadFromFile();

    pCertContext = CertCreateCertificateContext(X509_ASN_ENCODING, der_encoded_cert.data(), der_encoded_cert.size());
    if (!pCertContext)
    {
        goto Exit;
    }

    /* For legacy CSP */
    key_prov_info.dwProvType = PROV_RSA_AES; // Or YOUR_PROVIDER_TYPE
    key_prov_info.dwKeySpec = AT_SIGNATURE; // Or AT_KEYEXCHANGE
    key_prov_info.pwszContainerName = L""Your_key_name"";
    key_prov_info.dwFlags = CERT_SET_KEY_PROV_HANDLE_PROP_ID;
    key_prov_info.cProvParam = 0;
    key_prov_info.pwszProvName = nullptr;
    key_prov_info.rgProvParam = 0;

    /*
    Or if you use CNG Key storage provider:

    // Or L""Your_CNG_key_storage_provider_name""
    key_prov_info.pwszProvName = L""Microsoft Software Key Storage Provider""; 
    key_prov_info.pwszContainerName = L""Your_key_name"";
    key_prov_info.dwFlags = CERT_SET_KEY_PROV_HANDLE_PROP_ID;
    key_prov_info.dwProvType = 0;
    key_prov_info.dwKeySpec = 0;
    key_prov_info.cProvParam = 0;
    key_prov_info.rgProvParam = 0;
    */

    if (!CertSetCertificateContextProperty(pCertContext, CERT_KEY_PROV_INFO_PROP_ID, 0, &amp;key_prov_info))
    {
        goto Exit;
    }

    if (!CertAddCertificateContextToStore(hStore, pCertContext, CERT_STORE_ADD_ALWAYS, NULL))
    {
        goto Exit;
    }

    std::cout &lt;&lt; ""success"";

Exit:

    if (pCertContext)
    {
        CertFreeCertificateContext(pCertContext);
    }

    if (hStore)
    {
        CertCloseStore(hStore, 0);
    }
    return;
}
</code></pre>

<p>For now your certificate will look something like this (sorry for not English):</p>

<p><a href=""https://i.stack.imgur.com/KfxCx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/KfxCx.png"" alt=""test_cert""></a></p>

<p>When Windows wants to get private key, it calls <a href=""https://msdn.microsoft.com/ru-ru/library/windows/desktop/aa379885(v=vs.85).aspx"" rel=""nofollow noreferrer""><code>CryptAcquireCertificatePrivateKey</code></a> which in turn calls <a href=""https://msdn.microsoft.com/en-us/library/windows/desktop/aa376079(v=vs.85).aspx"" rel=""nofollow noreferrer""><code>CertGetCertificateContextProperty(..., CERT_KEY_PROV_INFO_PROP_ID, ...)</code></a>.</p>
","1043","<windows><digital-signature><private-key><cryptoapi>","2","4","1","2019-09-17 21:05:31","42939746","8","","3329664","","2017-05-31 08:15:50","2017-03-19 14:38:01",""
"14314057","Where can I save private key used in java code","<p>I'm developing web application on Java, spring, JDBC, which is deployed on Tomcat 7. 
I'm making encryption/decryption of a data-source password using private key. </p>

<p>Now I have this private key hard coded in Java code. But <strong>I have to save private key in more secured place</strong>. 
How can I do this?</p>

<p>Is it a good idea to generate certificate (key-store, key-pair), install it on tomcat and retrieve this data from java code? </p>
","<p>Thats a problem you cannot easily solve. If you store your key in a keystore you will need a key to access the keystore and where do you store this?</p>

<p>If this is really a high security application the only way is to use a dedicated hardware security box for doing the decryption.</p>
","1037","<java><certificate><datasource><keystore><private-key>","5","1","1","2013-01-14 06:24:27","14314123","1","","","","","2013-01-14 06:16:22","2015-08-27 16:12:47"
"21312444","Generate Encrypted RSA PEM with C#","<p>i having problems to generate a Encrypted PEM formatted RSA private key with C#
I have this:</p>

<pre><code>-----BEGIN PRIVATE KEY-----

MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBAOWsj2WijN35Rxbt
ge2omKZCPNf3AchRxzUpnIEEHz/l9myBn+yZZLhJ3oec+z0ZJO2dOYzhsSDHbw3e
6VSyFpoES1mje2yPCQFX/JVDdJHIwOSoEDY0SNty6b578x0IweI8jV5IYcSl0RK3
nlrRLo3bg9bvfZebdlsaA6nW2G3XAgMBAAECgYEA31S3r52rmuEdtnbHI8EQhoLc
RSikLBURP2myDGZkuK61u3ckel4CaY0y/O2yBAxiM0fyQULpCTXEkFlUzI3LmKoj
/L0cSlk58xf8hB837/fn/bulnATWSajKn/p4ecXpBlPTySf9MPwoyNwXdyjjz0bQ
c6oo1U42VybQRNgvWGECQQD/bs/aDjypd9AGUVFn6l6zoQEFRjNLevsHUEveD871
UUmdkE9AXNyUR1k9W+OH1V74eS29spNphEnnCVV7ANVHAkEA5i8bXxa7g6Tue2/N
kOjFK5i54RTaGPbjvPcg1N1Wq8pew0lx0lY3q7A+qH3VjiJHwSRifY7n92zkxutS
qF4q8QJBAIcopYcmfWbW5RZStRadZ1r5WMbnrIDGJEpsbJimGMaqKp/bGnReLsGv
N0NGehEIEGa+CDwWX/Y3b7t2ruqVOEUCQEVgw2Y4qtH13y9zNklL70nBoZzWtRm7
KE8nSUz/XYUv3LoNo/HarLLhzzDnpHtPl8L+HXVsojvwJVBTUzmOEHECQAbb2iy3
tRNcIWj770+6+9qj5fKKvhNNtBoh5rzu79PA9Un8pxEy7OTSVQJ+HtwoRzUrxK07
IYp9K9Sbyy0yqkc=

-----END PRIVATE KEY-----
</code></pre>

<p>But i need it:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----

Proc-Type: 4,ENCRYPTED

DEK-Info: DES-EDE3-CBC,A07111D1F6B87B67

mPmRmxCSDcdP6JW9BG12vp33aV1oxc3PRKwbBZJx8noV8RzqR4OnPEI9YzyvhLPT
APy1XWNhlNa0CPIPEPr1XAJBgkmIBH4RAcjqAvW7X3FbDt5TTkCWad15aCQdRiZN
vsab9/zX96GePrRyPkiVvTebhyHb0bsEaTl5ryYRcEos0aPreOSm+QJrQ4437I7C
X5rLMm5mfh7a/BoYN4weH3rOku4+ZFQp3UMPM5HWEoAK/F2hFYPcR0p9h84QrlPO
WVg5A5dN+28tk6LkWmdfTCXzV3r5jI3Pwo5eI8N6EWCyHMIfwZYIDKymSrCvF5i/
XXTh3OFtH1RoFJ9mchWacBN5lDck/2+/GBN5uQs3/Am7pQ4u/S1PBnT4bK4EjAf9
P6kYKT4aPIarqR2tIJ9HDfEZ3JbsvLbvqJSaxGGhXsRzSylL6W3/IpoxKNFCF39x
xEqXlN7OvW4fWA5HfM+fBQWNMcyt9FIv418+Z+GmT5TFG8BgaDcniKIk0XnfdDAw
AajBobsGnFYe/Bk8qbMBQSDs9j0kGV2UE9LCPOh1P1JnLgiBsQeocbVc6FO3v7Kr
kD3/aGRYMBJ80//0AzIJ/8m2Y+8y9D4i70KSCuC7WjTB85Nl6I77y8w1q3md4WJW
TbINsCOmb8MpMLIOuS800PgCDM423FaekrmDnfRQKgv0aBPQd5+PY56t+kRzAXCT
uihv+Pq7Rjpwbjewf/LI4Slt6o8o69VaNjDTOZiW3CYrxv4QQjKmdNdo12av+aJg
9ts6SgEd6w0nyl/niBMWHhMCV6aZT7SAm0k3GJoDpJN+CbxiJaHV9g==

-----END RSA PRIVATE KEY-----
</code></pre>

<p>The PEM of the top has been generated with C# and Bouncy Castle, the second with openssl.exe.</p>

<p>Regards</p>
","<p>Im not sure if this is what you need and I'm new to using these frameworks. But if you use Bouncy castle, here is an example of a encrypted private key. Headers I think you can find in the pem object (<em>pem.Headers</em>) and begin end strings are just for show:</p>

<pre><code>    static void Main(string[] args)
    {
        Console.WriteLine(GeneratePrivateKey(""12345"", 4096, 4));
        Console.ReadLine();
    }

    static string GeneratePrivateKey(string password, int strength, int iterationCount)
    {
        var rsa = new Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator();
        rsa.Init(new Org.BouncyCastle.Crypto.KeyGenerationParameters(new Org.BouncyCastle.Security.SecureRandom(), strength));
        var asym = rsa.GenerateKeyPair();
        var generator = new Org.BouncyCastle.OpenSsl.Pkcs8Generator(asym.Private, Org.BouncyCastle.OpenSsl.Pkcs8Generator.PbeSha1_3DES);
        generator.IterationCount = iterationCount;
        generator.Password = password.ToCharArray();
        var pem = generator.Generate();
        return Convert.ToBase64String(pem.Content);
    }
</code></pre>
","1035","<rsa><private-key><pem>","2","1","1","2016-05-10 13:05:16","","2","","","","","2014-01-23 15:25:32",""
"45350075","Access to the private key of CNG certificate from .NET 4.6 - GetCngPrivateKey not found","<p>I need access to the private key of CNG certificate from .NET 4.6.</p>

<p>In the docs I found extension method <a href=""https://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509certificateextensions.getcngprivatekey(v=vs.110).aspx"" rel=""nofollow noreferrer"">GetCngPrivateKey</a> but this method is not available for me in Visual Studio 2015.</p>

<p>Maybe this method was removed from last release of .NET framework.</p>

<p>Any advice what is correct way now for access to the private key of CNG certificate now.</p>
","<p><code>GetCngPrivateKey</code> was part of the 4.6 preview, but was removed for 4.6 release.  It was replaced with <a href=""https://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.rsacertificateextensions.getrsaprivatekey(v=vs.110).aspx"" rel=""nofollow noreferrer"">GetRSAPrivateKey</a> (and GetECDsaPrivateKey (4.6.1) and GetDSAPrivateKey (4.6.2)).</p>

<p>The Get[Algorithm]{Public|Private}Key methods will return CNG usually (on Windows) and CAPI (CryptoServiceProvider) when they need to.  On non-Windows systems (for .NET Core) they use whatever the appropriate backing type is for the system.</p>

<p>The new methods also have the advantage that you almost never need to cast the return type. On 4.6 the RSA base class was enhanced so that all RSA operations could be done without casting. On 4.6.1 ECDSA was enhanced, and on 4.6 DSA was enhanced. The only reason to cast is for interop (like trying to get the name of the persisted key).</p>
","1035","<certificate><private-key><.net-4.6><cng>","2","2","1","2017-07-29 18:00:11","","0","","","","","2017-07-27 11:55:07",""
"40676726","java.security.InvalidKeyException: Private keys must be instance of RSAPrivate(Crt)Key or have PKCS#8 encoding","<p>I have created a sample web service to digitally sign a document using etoken. It is creating the Signature file for the first time.But when I am trying to run the web service again it throwing me the following error.Can anyone update regarding this?</p>

<blockquote>
  <p>java.security.InvalidKeyException: Private keys must be instance of
  RSAPrivate(Crt)Key or have PKCS#8 encoding    at
  sun.security.rsa.RSAKeyFactory.translatePrivateKey(RSAKeyFactory.java:288)
    at
  sun.security.rsa.RSAKeyFactory.engineTranslateKey(RSAKeyFactory.java:191)
    at sun.security.rsa.RSAKeyFactory.toRSAKey(RSAKeyFactory.java:111)
    at
  sun.security.rsa.RSASignature.engineInitSign(RSASignature.java:106)
    at sun.security.rsa.RSASignature.engineInitSign(RSASignature.java:99)
    at java.security.Signature$Delegate.init(Signature.java:1152)</p>
</blockquote>
","","1025","<rsa><digital-signature><private-key><pkcs#11><e-token>","0","","0","2016-11-18 13:22:00","","2","","5729579","","2016-11-18 13:22:00","2016-11-18 12:05:31",""
"36791447","Generate KeyPair with RandomSecure","<p>Is there anyway I can generate always the same private key? I tired to initialize <a href=""https://docs.oracle.com/javase/7/docs/api/java/security/KeyPairGenerator.html"" rel=""nofollow"">KeyPairGenerator</a> with a <a href=""https://docs.oracle.com/javase/7/docs/api/java/security/SecureRandom.html#SecureRandom%28byte[]%29"" rel=""nofollow"">RandomSecure</a> object which uses the same <code>seed</code>:</p>

<pre><code>private PrivateKey getPrivateKey(String seed) {
    try {   
        SecureRandom sr = new SecureRandom(seed.getBytes());

        KeyPairGenerator keyGen = KeyPairGenerator.getInstance(""RSA"");
        keyGen.initialize(1024, sr);
        KeyPair keyPair = keyGen.generateKeyPair();
        return keyPair.getPrivate();
    } catch (NoSuchAlgorithmException e) {
        System.out.println(""Failed to generate key pair!"");
    }
    return null;
}
</code></pre>

<p>I invoke the above function and check if the private keys are the same:</p>

<pre><code>String seed = ""xyzabc123"";
PrivateKey key1 = getPrivateKey(seed);
PrivateKey key2 = getPrivateKey(seed);

boolean same = key1.equals(key2); // false
</code></pre>

<p>They are different, my question is is there a way to generate always the same private key ?</p>
","<p>I don't think this code will generate same <code>private-key</code> at each request. 
Reason behind this is this particular piece of code</p>

<pre><code>SecureRandom sr = new SecureRandom(seed.getBytes());
</code></pre>

<p>each time you call <code>getPrivateKey(String)</code> method. at each time <code>SecureRandom</code> Class will generate a new random Number. </p>

<pre><code>keyGen.initialize(1024, sr); //each time secure random number will be different.
KeyPair keyPair = keyGen.generateKeyPair();
</code></pre>

<p>and <code>keyGen.initialize()</code> method initialized with different keys all the time so,each time <code>keyGen.generateKeyPair();</code> method will generate a different <code>private-key</code>.</p>

<p>If you try to change or pass same <code>SecureRandom</code> object in <code>initialize()</code> method then only it can be achieved Possibly.</p>
","1017","<java><private-key><key-pair><secure-random>","2","-1","2","2016-04-22 15:10:48","","2","","","","","2016-04-22 10:35:16",""
"36791447","Generate KeyPair with RandomSecure","<p>Is there anyway I can generate always the same private key? I tired to initialize <a href=""https://docs.oracle.com/javase/7/docs/api/java/security/KeyPairGenerator.html"" rel=""nofollow"">KeyPairGenerator</a> with a <a href=""https://docs.oracle.com/javase/7/docs/api/java/security/SecureRandom.html#SecureRandom%28byte[]%29"" rel=""nofollow"">RandomSecure</a> object which uses the same <code>seed</code>:</p>

<pre><code>private PrivateKey getPrivateKey(String seed) {
    try {   
        SecureRandom sr = new SecureRandom(seed.getBytes());

        KeyPairGenerator keyGen = KeyPairGenerator.getInstance(""RSA"");
        keyGen.initialize(1024, sr);
        KeyPair keyPair = keyGen.generateKeyPair();
        return keyPair.getPrivate();
    } catch (NoSuchAlgorithmException e) {
        System.out.println(""Failed to generate key pair!"");
    }
    return null;
}
</code></pre>

<p>I invoke the above function and check if the private keys are the same:</p>

<pre><code>String seed = ""xyzabc123"";
PrivateKey key1 = getPrivateKey(seed);
PrivateKey key2 = getPrivateKey(seed);

boolean same = key1.equals(key2); // false
</code></pre>

<p>They are different, my question is is there a way to generate always the same private key ?</p>
","<p>Java's SecureRandom implementation depends on the available providers, so it can be different on different OS's or for different implementations.</p>

<p>On linux, the default implementation is NativePRNG, which ignores your seed AFAIK.</p>

<p>What you could do is serialize your secure random before you call the generation, and deserialize it to reset it for the next generation.</p>

<p>I've done this in the past, and remember it works for at least some Java implementation.</p>

<pre><code>String seed = ""xyzabc123"";
SecureRandom sr = new SecureRandom(seed.getBytes());
ByteArrayOutputStream bos = new ByteArrayOutputStream();
ObjectOutput out = new ObjectOutputStream(bos);   
out.writeObject(sr);
byte[] superseed = bos.toByteArray();
PrivateKey key1 = getPrivateKey(superseed);
PrivateKey key2 = getPrivateKey(superseed);

private PrivateKey getPrivateKey(byte[] superseed) {
    ByteArrayInputStream bis = new ByteArrayInputStream(superseed);
    ObjectInput in = new ObjectInputStream(bis);
    SecureRandom sr = (SecureRandom)in.readObject(); 
...
</code></pre>
","1017","<java><private-key><key-pair><secure-random>","2","0","2","2016-04-22 15:10:48","","2","","","","","2016-04-22 10:35:16",""
"2361631","Is there a way to alter a public key in a way that the decryption can still be done with the private key after some alteration?","<p>In an asymetric encryption scheme, I was wondering if it's possible to achieve the following:</p>

<ol>
<li>Bob sends to Alice his public key</li>
<li>Alice alters Bob's public key and encrypt some document with it</li>
<li>Alice sends the encrypted document to Bob</li>
<li>Bob retrieve the document but can't decrypt it with his private key</li>
<li>Later, Alice sends some additional information (probably related to the method she used to alter Bob's public key) to Bob</li>
<li>Bob uses this additional information to modify his private key and successfully decrypt the document</li>
</ol>

<p>Anyone?</p>

<p>I am assuming RSA for the keys generation, encryption and decryption but if it's easier to do with another scheme feel free to comment.</p>
","<p>Hmm, interesting.</p>

<p>You're referring to <a href=""http://en.wikipedia.org/wiki/RSA"" rel=""nofollow noreferrer"">RSA</a>, I assume?</p>

<p>FYI, RSA isn't actually used to encrypt documents. It's used to exchange keys (keys for a symmetric algorithm, like AES).</p>

<p>So what you're really talking about is an approach that changes the keys.</p>

<p>Technically (mathmatically) if you put a different number in, you'll get a different number out. So that's not an issue; changing the public key in some fashion will (assuming you convince your RSA implementation to use it, or prepare an appropriately different number) result in a different symmetric key, thus an undecryptable document by Bob (because he'll expect a different key).</p>

<p>Really, though, I'm not so sure you care about this. It's a fairly useless thing to do. <em>Perhaps</em>, however, you're actually interested in <a href=""http://en.wikipedia.org/wiki/Key_splitting"" rel=""nofollow noreferrer"">Key Splitting</a> (or ""Secret Sharing"" as wikipedia seems to call it).</p>

<p>HTH. I'm by no means an expert.</p>
","1015","<encryption><public-key><encryption-asymmetric><private-key>","3","0","4","2012-12-31 08:24:26","2361775","0","","18564","","2010-03-02 08:47:12","2010-03-02 08:03:12",""
"2361631","Is there a way to alter a public key in a way that the decryption can still be done with the private key after some alteration?","<p>In an asymetric encryption scheme, I was wondering if it's possible to achieve the following:</p>

<ol>
<li>Bob sends to Alice his public key</li>
<li>Alice alters Bob's public key and encrypt some document with it</li>
<li>Alice sends the encrypted document to Bob</li>
<li>Bob retrieve the document but can't decrypt it with his private key</li>
<li>Later, Alice sends some additional information (probably related to the method she used to alter Bob's public key) to Bob</li>
<li>Bob uses this additional information to modify his private key and successfully decrypt the document</li>
</ol>

<p>Anyone?</p>

<p>I am assuming RSA for the keys generation, encryption and decryption but if it's easier to do with another scheme feel free to comment.</p>
","<p>As silky implies in his answer, the way in which RSA is usually used to encrypt a document is in combination with a symmetric algorithm, like AES.  A secure random key is generated for the AES algorithm, the documented is encrypted with that AES key, and the AES key is encrypted with the recipient's public key.  Both parts are supplied to the recipient.</p>

<p>You can adapt this to your situation simply by sending only the document encrypted with the AES key in the first step, and withholding the AES key encrypted with the recipient's public key until the second step.  The first part will be on the order of the original file size, and the second part will be a small, constant size (on the order of the RSA key size).</p>
","1015","<encryption><public-key><encryption-asymmetric><private-key>","3","1","4","2012-12-31 08:24:26","2361775","0","","18564","","2010-03-02 08:47:12","2010-03-02 08:03:12",""
"2361631","Is there a way to alter a public key in a way that the decryption can still be done with the private key after some alteration?","<p>In an asymetric encryption scheme, I was wondering if it's possible to achieve the following:</p>

<ol>
<li>Bob sends to Alice his public key</li>
<li>Alice alters Bob's public key and encrypt some document with it</li>
<li>Alice sends the encrypted document to Bob</li>
<li>Bob retrieve the document but can't decrypt it with his private key</li>
<li>Later, Alice sends some additional information (probably related to the method she used to alter Bob's public key) to Bob</li>
<li>Bob uses this additional information to modify his private key and successfully decrypt the document</li>
</ol>

<p>Anyone?</p>

<p>I am assuming RSA for the keys generation, encryption and decryption but if it's easier to do with another scheme feel free to comment.</p>
","<p>(I assume you talk about RSA.)</p>

<p>Yes it is possible, <strong>but not 100%</strong>.</p>

<p>The public key is a part of the private key. It contains the modulus and the exponent of the key. </p>

<p>You can completely forget changing the modulus, because you would have to generate a new rsa keypair, which is the same problem as the one we are trying to solve.</p>

<p>But it is possible to change the exponent. You can select any (prime) number between 1 and your exponent as the new exponent and <strong>hope</strong> that it is coprime with the totient. Without knowing the totient it's impossible to select always a correct exponent. To find out the totient you would have to know the prime factors of the key, which means that you would have to break the key (have fun!).</p>

<p>So, <strong>it's actually impossible</strong> to have a 100% percent working method to do that, at least not while knowing only the public key.</p>

<p>If you need more information about the theory check <a href=""http://en.wikipedia.org/wiki/Rsa/"" rel=""nofollow noreferrer"">here</a></p>
","1015","<encryption><public-key><encryption-asymmetric><private-key>","3","2","4","2012-12-31 08:24:26","2361775","0","","18564","","2010-03-02 08:47:12","2010-03-02 08:03:12",""
"2361631","Is there a way to alter a public key in a way that the decryption can still be done with the private key after some alteration?","<p>In an asymetric encryption scheme, I was wondering if it's possible to achieve the following:</p>

<ol>
<li>Bob sends to Alice his public key</li>
<li>Alice alters Bob's public key and encrypt some document with it</li>
<li>Alice sends the encrypted document to Bob</li>
<li>Bob retrieve the document but can't decrypt it with his private key</li>
<li>Later, Alice sends some additional information (probably related to the method she used to alter Bob's public key) to Bob</li>
<li>Bob uses this additional information to modify his private key and successfully decrypt the document</li>
</ol>

<p>Anyone?</p>

<p>I am assuming RSA for the keys generation, encryption and decryption but if it's easier to do with another scheme feel free to comment.</p>
","<p>I hope my idea works. </p>

<p>Let us assume that <code>(e,d,n)</code> is a tuple of the RSA public exponent. The RSA private exponent and the RSA modulus <em>n</em> :</p>

<p>Select a prime number, say <em>p</em>,  between 1 and a 256 bit integer.</p>

<p>To <strong>encrypt</strong> a message <em>m</em>, compute the new public exponent as <code>e*p</code> and the ciphertext as: </p>

<p><code>c= m^{e*p} mod n</code>. </p>

<p>To <strong>decrypt</strong>, the receiver should know the prime <em>p</em>, so you send this <em>p</em> later to him, with this he computes </p>

<p>(1) <code>P = p^{-1} mod phi(n)</code></p>

<p>and</p>

<p>(2) <code>m^e=c^{P} mod n</code> </p>

<p>and </p>

<p>finally <code>m=(m^e)^d mod n</code>. This works as the receiver knows phi(n). </p>

<p>By the way, where can we use this? Is there any application you have in mind for this?</p>
","1015","<encryption><public-key><encryption-asymmetric><private-key>","3","2","4","2012-12-31 08:24:26","2361775","0","","18564","","2010-03-02 08:47:12","2010-03-02 08:03:12",""
"37477586","ECC private key is longer than public key","<p>I have generated ECC public and private key using secp192r1 curve. I get 75 for public and 125 for private encoded key array length. Why private key is longer than public key? Why private key is not longer two times than public? Why private key is not 192 bits = 24 bytes because of secp192r1?</p>

<pre><code>Security.addProvider(new org.bouncycastle.jce.provider.BouncyCastleProvider());

ECNamedCurveParameterSpec ecSpec = ECNamedCurveTable.getParameterSpec(""secp192r1"");

KeyPairGenerator g = KeyPairGenerator.getInstance(""ECDSA"", ""BC"");
g.initialize(ecSpec, new SecureRandom());
KeyPair pair = g.generateKeyPair();

System.out.println(pair.getPublic().getEncoded().length);
System.out.println(pair.getPrivate().getEncoded().length);
</code></pre>
","<p>Code fragment below outputs 24 bytes private key:   </p>

<pre><code>Security.addProvider(new org.bouncycastle.jce.provider.BouncyCastleProvider());

ECNamedCurveParameterSpec spec = ECNamedCurveTable.getParameterSpec(""secp192r1"");

KeyPairGenerator g = KeyPairGenerator.getInstance(""ECDSA"", ""BC"");
g.initialize(spec, new SecureRandom());
KeyPair pair = g.generateKeyPair();
ECPrivateKey ecPrivateKey = (ECPrivateKey)pair.getPrivate();

System.out.println(ecPrivateKey.getS().toByteArray().length);
</code></pre>
","1011","<bouncycastle><private-key><public-key><elliptic-curve><java-security>","0","0","1","2017-10-10 07:37:41","37572497","5","","5962766","","2017-10-10 07:36:24","2016-05-27 07:39:23",""
"26900746","libssh trying to authenticate with public and private keys","<p>I've been trying to use libssh to connect to a server and download files via SFTP. I have a PuTTY private key file containing 6 lines of key for the public key and 12 for the private key yet I can't find any decent help or documentation of taking these keys and using them to authenticate a connection to the server. Does anybody know how to do this?</p>

<p>So far the only options for authentication I can find are what I found in the libssh header file:</p>

<pre class=""lang-c prettyprint-override""><code>LIBSSH_API int ssh_userauth_pubkey(ssh_session session, const char *username, ssh_string publickey, ssh_private_key privatekey);
</code></pre>

<p>However, I don't know how a key from a PuTTY <code>.ppk</code> file can translate into an <code>ssh_string</code> for the public key or a <code>ssh_private_key</code> for the private key.</p>
","<p>Use the <code>ssh_userauth_privatekey_file</code> instead, or see a libssh code for how it is implemented (it calls the <code>ssh_userauth_pubkey</code> internally).</p>

<pre class=""lang-c prettyprint-override""><code>int ssh_userauth_privatekey_file(ssh_session session,
                                 const char *username,
                                 const char *filename,
                                 const char *passphrase);
</code></pre>

<p>You will need to <a href=""https://the.earth.li/~sgtatham/putty/latest/htmldoc/Chapter8.html#puttygen-conversions"" rel=""nofollow noreferrer"">convert your <code>.ppk</code> file to OpenSSH format</a> using PuTTYgen (<em>Conversions > Export OpenSSH key</em>).</p>
","1008","<ssh><sftp><private-key><public-key><libssh>","0","0","2","2017-02-26 18:25:24","26903667","0","1","850848","","2014-11-13 07:44:07","2014-11-13 03:16:37",""
"26900746","libssh trying to authenticate with public and private keys","<p>I've been trying to use libssh to connect to a server and download files via SFTP. I have a PuTTY private key file containing 6 lines of key for the public key and 12 for the private key yet I can't find any decent help or documentation of taking these keys and using them to authenticate a connection to the server. Does anybody know how to do this?</p>

<p>So far the only options for authentication I can find are what I found in the libssh header file:</p>

<pre class=""lang-c prettyprint-override""><code>LIBSSH_API int ssh_userauth_pubkey(ssh_session session, const char *username, ssh_string publickey, ssh_private_key privatekey);
</code></pre>

<p>However, I don't know how a key from a PuTTY <code>.ppk</code> file can translate into an <code>ssh_string</code> for the public key or a <code>ssh_private_key</code> for the private key.</p>
","<p>Please go through the below link, it has the solution for this problem:</p>

<p><a href=""http://social.technet.microsoft.com/wiki/contents/articles/20974.biztalk-server-2010-how-to-use-blogical-sftp-adapter.aspx"" rel=""nofollow"">http://social.technet.microsoft.com/wiki/contents/articles/20974.biztalk-server-2010-how-to-use-blogical-sftp-adapter.aspx</a></p>

<ol>
<li>Just install a Bitwise SSG server.</li>
<li>Go to Manage host.</li>
<li>Import your private key.</li>
<li>Then select the same private key and click on ""export"" option.</li>
<li>Pop-up will ask the format for key to export, click on openSSH format.</li>
<li>Save the new key with extension as .ppk in your local.</li>
<li>Now give this key as input to BizTalk SFTP adapter. It will connect to the SFTP Server.</li>
</ol>
","1008","<ssh><sftp><private-key><public-key><libssh>","0","0","2","2017-02-26 18:25:24","26903667","0","1","850848","","2014-11-13 07:44:07","2014-11-13 03:16:37",""
"25165020","Reading certificate error","<p>I am getting the following exception when running my application in a different server. The code works in two different tomcat servers, but on a specific one it doesn't work. </p>

<blockquote>
  <p>java.lang.NoClassDefFoundError:
  org/bouncycastle/asn1/pkcs/PrivateKeyInfo
    org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi.engineGeneratePrivate(Unknown
  Source)   java.security.KeyFactory.generatePrivate(KeyFactory.java:372)</p>
</blockquote>

<p>The part of the code when I am getting the error is the following on this line </p>

<p><strong>> pk = kf.generatePrivate(ks);</strong></p>

<pre><code> PrivateKey pk = null;        
    X509Certificate cert = null;

Security.addProvider(new BouncyCastleProvider());
try{
    byte [] key = Base64.decodeBase64(llave.getBytes());
    byte [] cer = Base64.decodeBase64(certificado.getBytes());                              

    KeyFactory kf = KeyFactory.getInstance(""RSA"");
    PKCS8EncodedKeySpec ks = new PKCS8EncodedKeySpec(key);
    pk = kf.generatePrivate(ks);
    pk.getEncoded();

    CertificateFactory certFactory = CertificateFactory.getInstance(""X.509"");
    InputStream in = new ByteArrayInputStream(cer);
    cert = (X509Certificate)certFactory.generateCertificate(in);

    DateTime fechaDesde = new DateTime(cert.getNotBefore());
    DateTime fechaHasta = new DateTime(cert.getNotAfter());
</code></pre>

<p>Does somebody knows why this happens?</p>
","<p><strong>java.lang.NoClassDefFoundError</strong> This exception is thrown when JVM is unable to find a particular class at runtime which was available during compile time.</p>

<p><a href=""http://javarevisited.blogspot.com/2011/06/noclassdeffounderror-exception-in.html"" rel=""nofollow"">This link will help you</a></p>
","1006","<java><certificate><base64><private-key>","1","1","1","2014-08-06 16:13:15","","3","","","","","2014-08-06 16:00:01",""
"2655072","Is web.config more secure than a class?","<p>I was reading a tutorial on ASP.NET and third party API's and it mentioned that the API KEY and SECRET KEY should be stored in the web.config file, for security on production servers, instead of in the classes that use them. However, I'm not quite sure what's more secure about a web.config file than a class? I understand the convenience of storing it in a config file, but I don't see the security benefit?</p>
","<p>For starters, you can quickly update the API key in the web.config.  You'll have to re-compile the class and re-dploy the class.</p>

<p>You can also encrypt sections of the web.config section starting with asp.net 2.0</p>

<p><a href=""http://weblogs.asp.net/scottgu/archive/2006/01/09/434893.aspx"" rel=""nofollow noreferrer"">http://weblogs.asp.net/scottgu/archive/2006/01/09/434893.aspx</a></p>

<p>If you can keep it on the machine.config, that will ensure that it only lives on that machine and no where else.  Web.Configs need to be placed in every environment, and although you can keep the web.config different for each machine, that gets to be difficult over time, because you have to keep them all in sync.</p>
","1005","<c#><asp.net><security><web-config><private-key>","3","6","4","2010-04-16 17:56:02","2655089","0","","50776","","2010-04-16 17:48:15","2010-04-16 17:45:25",""
"2655072","Is web.config more secure than a class?","<p>I was reading a tutorial on ASP.NET and third party API's and it mentioned that the API KEY and SECRET KEY should be stored in the web.config file, for security on production servers, instead of in the classes that use them. However, I'm not quite sure what's more secure about a web.config file than a class? I understand the convenience of storing it in a config file, but I don't see the security benefit?</p>
","<p>You can encrypt select parts of your web.config.</p>

<p>Here is a blog entry on the super easy way to do that.</p>

<p><a href=""http://odetocode.com/blogs/scott/archive/2006/01/08/encrypting-custom-configuration-sections.aspx"" rel=""nofollow noreferrer"">http://odetocode.com/blogs/scott/archive/2006/01/08/encrypting-custom-configuration-sections.aspx</a></p>
","1005","<c#><asp.net><security><web-config><private-key>","3","1","4","2010-04-16 17:56:02","2655089","0","","50776","","2010-04-16 17:48:15","2010-04-16 17:45:25",""
"2655072","Is web.config more secure than a class?","<p>I was reading a tutorial on ASP.NET and third party API's and it mentioned that the API KEY and SECRET KEY should be stored in the web.config file, for security on production servers, instead of in the classes that use them. However, I'm not quite sure what's more secure about a web.config file than a class? I understand the convenience of storing it in a config file, but I don't see the security benefit?</p>
","<p>There isn't a security benefit.  There is a convenience benefit, in that you don't have to recompile your classes that use these values in the event that they change.</p>

<p>From a security perspective, the classes have the same level of security.  The web.config and any class files (in App_Code) or compiled assemblies (in the bin folder) will not be able to be downloaded (those directories are not mapped to virtual directories which people can download from).</p>

<p>If they are obtained, however, there's really no security on either of them.  web.config files are easily readable, and with tools like Reflector, it's easy to see the constants you have in a compiled assembly.</p>

<p>The only benefit that web.config has over a compiled assembly is that you can encrypt sections of the web.config file, as <a href=""http://weblogs.asp.net/scottgu/archive/2006/01/09/434893.aspx"" rel=""nofollow noreferrer"">Scott Guthrie points out in his blog</a>.</p>
","1005","<c#><asp.net><security><web-config><private-key>","3","0","4","2010-04-16 17:56:02","2655089","0","","50776","","2010-04-16 17:48:15","2010-04-16 17:45:25",""
"2655072","Is web.config more secure than a class?","<p>I was reading a tutorial on ASP.NET and third party API's and it mentioned that the API KEY and SECRET KEY should be stored in the web.config file, for security on production servers, instead of in the classes that use them. However, I'm not quite sure what's more secure about a web.config file than a class? I understand the convenience of storing it in a config file, but I don't see the security benefit?</p>
","<p>If it only lives on the web.config on the server, it's not also located on every single developer's machine. This makes it more secure, as your risk of leaking the secrets is diminished.</p>
","1005","<c#><asp.net><security><web-config><private-key>","3","1","4","2010-04-16 17:56:02","2655089","0","","50776","","2010-04-16 17:48:15","2010-04-16 17:45:25",""
"56473553","Why can't openssl read an ssh private key created by openssh on OSX","<p>Here is a test script I am using to help debug an issue with openssl &amp;/or ssh on OSX Mojave 10.14.5 with brew installed versions of openssl and openssh</p>

<pre><code>&gt; brew info openssh | head -1
stable 8.0p1 (bottled)
&gt; brew info openssl | head -1
stable 1.0.2r (bottled) [keg-only]
&gt; ssh -V
OpenSSH_7.9p1, LibreSSL 2.7.3
&gt; openssl version
LibreSSL 2.6.5
&gt; ! test -f /tmp/foo || rm /tmp/foo &amp;&amp; 
  ssh-keygen -f /tmp/foo -t rsa -P """" -N """" &amp;&amp; 
  openssl rsa -in /tmp/foo 
Generating public/private rsa key pair.
Your identification has been saved in /tmp/foo.
Your public key has been saved in /tmp/foo.pub.
The key fingerprint is:
SHA256:iZMoPkGh4wkPvMOfV5KSEVFOLc9Dc8zmBvbhdE4d+Rs jon_upowr@greywedge3.lan
The key's randomart image is:
+---[RSA 2048]----+
|  .ooo. o   ..o  |
|.. .+. * B o o   |
|=... .* X =   .  |
|+=o o..* * .   E |
| *+o.o+.S       o|
| .ooo o.       . |
|  oo .           |
|   ..            |
|                 |
+----[SHA256]-----+
unable to load Private Key
4643780204:error:09FFF06C:PEM routines:CRYPTO_internal:no start line:/BuildRoot/Library/Caches/com.apple.xbs/Sources/libressl/libressl-22.260.1/libressl-2.6/crypto/pem/pem_lib.c:683:Expecting: ANY PRIVATE KEY
</code></pre>

<p>The key is similar to this (no, this is not a key I will use):</p>

<pre><code>-----BEGIN OPENSSH PRIVATE KEY-----
b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn
NhAAAAAwEAAQAAAQEA3FGfR9sL6p0HWfq0UWUNQmFszkqipVMsM3J23oJjcvnJJIx72X3F
9xbBZQ+6JuUpD6ME32DE3aFGmsrkDa+cE/wD6lj5ey9ORTCFri3QM57sFwQhXl48hvpXF/
zHXpVJv/BdtiQFJwTuEbkcNfHDvyK7WIJjuS1kF+v2dX/PypzhszoZmEB9vK1s9bMEyclb
toXwWnoMW/bRmv484adIM5G+LhRF5nvtWSu0oRRF0KKpogCvfWyckKCcDQH9/DNwtXSmzE
cVUmUdESlUNrD8tJdI9+G/hldym1zjB0q2ai/97y8Y8OG7mxkpJNEYw/oxFc7g1BEenQf0
6GzPWQfIiwAAA9AmUmlFJlJpRQAAAAdzc2gtcnNhAAABAQDcUZ9H2wvqnQdZ+rRRZQ1CYW
zOSqKlUywzcnbegmNy+ckkjHvZfcX3FsFlD7om5SkPowTfYMTdoUaayuQNr5wT/APqWPl7
L05FMIWuLdAznuwXBCFeXjyG+lcX/MdelUm/8F22JAUnBO4RuRw18cO/IrtYgmO5LWQX6/
Z1f8/KnOGzOhmYQH28rWz1swTJyVu2hfBaegxb9tGa/jzhp0gzkb4uFEXme+1ZK7ShFEXQ
oqmiAK99bJyQoJwNAf38M3C1dKbMRxVSZR0RKVQ2sPy0l0j34b+GV3KbXOMHSrZqL/3vLx
jw4bubGSkk0RjD+jEVzuDUER6dB/TobM9ZB8iLAAAAAwEAAQAAAQBzm2zeEqXlHTLfVztJ
PqI/g8nJUcaYw9T8xgJz7a1rhoCyafkO/f1kE4+1jRQcFsF+EAedgzSqK1dWIEKcn9phbi
tLzBZVOlRy3+w1opqOi8TMqwEreH2AQlpzHtQq4GFLk0BJNAt0FxUpPZ38/Hi/keUGo5za
bWQJXWr86u1JHiGA9D6XQU4/KrsJ4UqSvy3QGyZa+ypJII9mV9deK50pgHVlX6S/+8FubC
c9okRiQAhfAdGMYzMgoE4auRZ5rsZkVT4DCOagetuug/Hk9oh1JbkEazEKz3w1SFm5lJVF
/A6/MNPT52RCQtEDAM7MrWYVP2XIaTw89R5ujMPebQNhAAAAgGbNxMyIXrul5FXJvsfHnh
mtfa4DZDIQ4fQ3c79NwhxS7RdSVRO3gzxbmGOQJfFWC73z/zvbMFlpKp17lGz4GWiBm9x8
3OS5ohRL2S5VmLMSMb2zNjyvYr7uK9E0WLt19Imo6rlOkw81mJ90GcSVx/byHXnu5bSjtD
2o5uyKURL/AAAAgQD6xwksyTYXC8BuvmiKxs/RbRUKvsrCNCWccBqndm6vfq8LrNoLD920
d+VXobe2sW/JyaknG82sutUPKhTwEhezKcZ2dqce/yJ/+y5R29fd/AuRFVfZOHPTy6hKKZ
HpJRSDHsZZkA74OYsz7ZLMNnqEa2fh39isO51gl1qOp5gY+wAAAIEA4Ogz75bUdsCUxvmk
iJ3vmROTIxEbNtueflwrBzgG9LG3lLyM4eAAYPz8RAvGV3MySgO5vY+7e0/Nkdn90TsR75
ALpChIWnwSyH2OFP717vu8dFtufIs9mzAPPt+JNj6RnzE3nY23xtDBi1/6xhdbbiTi4+Nd
2Woyp8N1QgvqGbEAAAAYam9uX3Vwb3dyQGdyZXl3ZWRnZTMubGFuAQID
-----END OPENSSH PRIVATE KEY-----
</code></pre>

<p>Replacing OPENSSH with RSA in the generated private key has no effect on the success of the exercise.</p>

<p>If I try the same sequence of operations on a debian docker image, the key generated by ssh can successfully read by openssl running on the same platform.</p>

<p>Is my expectation that this would also work on OSX unreasonable? If so, what's gone wrong?</p>

<p>edit: I had a spurious -o option in the example which I have now removed.</p>
","<p>The problem was that the default behaviour of ssh-keygen on OSX Mojave now differs from that on Linux. In particular, ssh-keygen will produce OPENSSH private keys by default on OSX but RSA private keys by default on Linux.</p>

<p>The same behaviour can be guaranteed in both environments by adding <code>-m PEM</code> to the ssh-keygen arguments.</p>

<p>Thanks to <a href=""https://stackoverflow.com/users/238704/james-k-polk"">James K Polk</a> for guiding me in the correct direction and also this <a href=""https://serverfault.com/a/941893/113948"">answer</a>.</p>
","1004","<openssl><decode><private-key><openssh>","2","2","1","2019-06-07 04:56:37","","4","","1267368","","2019-06-07 04:33:30","2019-06-06 08:22:18",""
"32660127","How to convert JKS into Docker Registry cert/key?","<p>I am trying to <a href=""https://docs.docker.com/registry/deploying/#get-a-certificate"" rel=""nofollow"">set up a secure Docker Registry</a> on two VMs (for HA) and have a question about setting up the SSL. According to that link in the docs, I need to have a <code>certs</code> directory with two files in it:</p>

<ul>
<li><code>registry.crt</code> - the CA cert</li>
<li><code>registry.key</code> - ??? (private key?)</li>
</ul>

<p>I have been given a Java JKS (keystore) that contains in it a wildcard CA cert that will work for these VMs. I was able to successfully export the cert out of the keystore like so:</p>

<pre><code>keytool -export -alias certalias -file registry.crt -keystore mycerts.jks
</code></pre>

<p>So far so good: I have <code>registry.crt</code>. However a few related questions/concerns are preventing me from completing this setup:</p>

<ul>
<li><strong>What is the <code>*.key</code> file, how is it different than the cert, and how do I extract it from the JKS?</strong></li>
<li><strong>Where is Docker/Registry expecting this <code>certs</code> directory on each VM? Perhaps <code>/home/myuser/</code>? Is this location configurable?!?</strong></li>
<li><strong>As the link explains, a special additional action is required if your CA cert is an ""<em>intermediary</em>"" cert. How can I tell if my cert is intermediary or not?</strong></li>
</ul>
","<p>There are really three questions here. You should probably ask different questions. I don't know the answer to your second one but will answer for the other two.</p>

<hr>

<p>In simple terms in the context of SSL the client initiates a secure connection using the public key contained in the certificate. Only the server who possesses the according (private) key can answer and therefore establish the connection. (There's a lot more going on.)</p>

<p>The short regarding the keystore is: Do yourself a favor and use a tool like <a href=""http://keystore-explorer.sourceforge.net/"" rel=""nofollow noreferrer"">KeyStore Explorer</a>. No affiliation, I just like the tool. Exporting the private key with keytool is not that simple. As far as I know you cannot export the private key directly. <a href=""https://security.stackexchange.com/questions/3779/how-can-i-export-my-private-key-from-a-java-keytool-keystore"">You can however export to PKCS12 and use other tools like OpenSSL from there</a>:</p>

<blockquote>
  <p>keytool -importkeystore -srckeystore existing-store.jks -destkeystore new-store.p12 -deststoretype PKCS12</p>
</blockquote>

<p>If you only have one self-signed certificate (signer is the same as subject), you don't need to worry about intermediaries. An intermediate certificate means that the certificate signed by the CA that signed your certificate is itself signed by yet another CA.</p>

<pre class=""lang-none prettyprint-override""><code>CA 0 (signed by CA 0) - well known certificate, self-signed
 \_ CA 1 (signed by CA 0) - intermediate certificate
     \_ Your Cert (signed by CA 1)
</code></pre>

<p>In order to verify the integrity of your certificate the whole chain must be known to the client. Usually only the CAs at the very top are distributed in browsers and operating systems (CA 0) so you need to publish the certificates ""in between""—the intermediaries (CA 1).</p>
","995","<java><ssl><docker><keystore><private-key>","0","2","1","2015-09-18 20:32:20","32660567","0","","","","","2015-09-18 20:01:04",""
"45525002","Java - loading private key from .DER file","<p>I originally have a password-protected PEM file with a private key that is read into a Java application using BouncyCastle. The PEM file begins with</p>

<p>-----BEGIN RSA PRIVATE KEY-----</p>

<p>which leads me to believe it is in the PKCS#1 format. Instead of using the PEM file, I want to generate a binary file and read the private key into the Java program. As per <a href=""https://stackoverflow.com/questions/8290435/convert-pem-traditional-private-key-to-pkcs8-private-key"">here</a>, I used the following <strong>openssl</strong> code to generate a DER file:</p>

<pre><code>openssl pkcs8 -topk8 -nocrypt -in private.pem -outform der -out private.der
</code></pre>

<p>Then used this Java code to try to read in the DER file:</p>

<pre><code>Path path = Paths.get(privateKeyLocation);
        byte[] byteArray = Files.readAllBytes(path);

        PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(byteArray);

        PrivateKey privKey;
        try {
            KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
            privKey = keyFactory.generatePrivate(keySpec);
        } catch (InvalidKeySpecException e) {
            logger.error(""error with jwt"", e);
            return null;
        } catch (NoSuchAlgorithmException e) {
            logger.error(""error with jwt"", e);
            return null;
        }
</code></pre>

<p>But I'm running into this error:</p>

<pre><code>java.lang.NoClassDefFoundError: com/rsa/asn1/ASN_Exception
at com.rsa.jsafe.provider.JS_KeyFactory.b(Unknown Source)
at com.rsa.jsafe.provider.JS_KeyFactory.engineGeneratePrivate(Unknown Source)
at java.security.KeyFactory.generatePrivate(KeyFactory.java:372)
...
</code></pre>

<p>I'm not sure what is causing this error and wonder if there's a better way to use BouncyCastle to read in a DER file?</p>
","<p>It ended up being a maven issue that was changing the path to the <code>private.der</code> file. Using the absolute path solved this issue.</p>
","992","<java><private-key><pem><der><pkcs#1>","1","0","1","2018-11-26 22:55:57","","1","","8422242","","2018-03-12 14:25:15","2017-08-05 18:07:49",""
"18220746","Error when decrypt with Java","<p>I'm having trouble when Iḿ trying to decrypt a document, I'm using Public/Private pair key to do this. I'm using a Token to do this.</p>

<p>This is the error that I'm getting:</p>

<pre><code>java.security.ProviderException: java.security.KeyException: An internal error occurred.

at sun.security.mscapi.RSACipher.doFinal(RSACipher.java:297)
at sun.security.mscapi.RSACipher.engineDoFinal(RSACipher.java:321)
at javax.crypto.Cipher.doFinal(Cipher.java:2087)
at org.bouncycastle.operator.jcajce.JceAsymmetricKeyUnwrapper.generateUnwrappedKey(Unknown Source)
at org.bouncycastle.cms.jcajce.JceKeyTransRecipient.extractSecretKey(Unknown Source)
at org.bouncycastle.cms.jcajce.JceKeyTransEnvelopedRecipient.getRecipientOperator(Unknown Source)
at org.bouncycastle.cms.KeyTransRecipientInformation.getRecipientOperator(Unknown Source)
at org.bouncycastle.cms.RecipientInformation.getContentStream(Unknown Source)
at org.bouncycastle.cms.RecipientInformation.getContent(Unknown Source)
at ec.gov.informatica.firmadigital.cms.CMSEncryption.decrypt(CMSEncryption.java:198)
at ec.mil.gestordocumental.security.test.encryption.DecryptFileWithPublicCertificateToken.mainTest(DecryptFileWithPublicCertificateToken.java:110)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.security.KeyException: An internal error occurred.

at sun.security.mscapi.RSACipher.encryptDecrypt(Native Method)
at sun.security.mscapi.RSACipher.doFinal(RSACipher.java:289)
... 32
</code></pre>

<p>And this is the code I'm using to decrypt:</p>

<pre><code>public static byte[] decrypt(byte[] encrypted, X509Certificate cert, PrivateKey privateKey, Provider provider) {
    try {
        CMSEnvelopedData enveloped = new CMSEnvelopedData(encrypted);

        RecipientInformationStore recipients = enveloped.getRecipientInfos();
        X509CollectionStoreParameters s = new X509CollectionStoreParameters(Collections.singleton(new JcaX509CertificateHolder(cert)));

        X509StoreCertCollection s1 = new X509StoreCertCollection();
        s1.engineInit(s);

        Iterator it = recipients.getRecipients().iterator();

        RecipientInformation recipient = null;

        while (it.hasNext()) {
            recipient = (RecipientInformation) it.next();

            if (recipient instanceof KeyTransRecipientInformation) {
                Collection matches = s1.engineGetMatches(recipient.getRID());

                if (!matches.isEmpty()) {
                      JceKeyTransEnvelopedRecipient ter = null;

                      if (""sun.security.mscapi.RSAPrivateKey"".equals(privateKey.getClass().getCanonicalName() ) ) {
                            ter = new JceKeyTransEnvelopedRecipient(privateKey);
                            ter.setProvider( ""SunMSCAPI"" );
                            ter.setContentProvider(BouncyCastleProvider.PROVIDER_NAME);
                        } else {
                            ter = new JceKeyTransEnvelopedRecipient(privateKey);
                            ter.setProvider(BouncyCastleProvider.PROVIDER_NAME);
                        } 

                    return recipient.getContent(ter);
                }
            } else {
                throw new RuntimeException(""Wrong type of RecipientInformation: "" + recipient.getClass());
            }
            recipient=null;
        }

        if (recipient == null) {
            throw new RuntimeException(""Could not find a matching recipient""); 
        }

    } catch (CMSException e) {
        throw new RuntimeException(e); // FIXME
    } catch (CertificateEncodingException e) {
        throw new RuntimeException(e);
    }
}
</code></pre>

<p>Please help me what it could be.</p>

<p>Thanks a lot.</p>
","<p>I'm having the same problem for decryption, using both MSCAPI and PKCS#11. I found that the P11RSAChiper implemented in SunPKCS11 doesn't regard the wrap/unwrap methods, and it uses encrypt/decrypt for this purpose, which in my case conflicts with underlying layer of security, where the private key is marked just for unwrap by the SmartCard profile.</p>
","990","<java><private-key><encryption><public-key>","0","0","1","2014-04-06 12:05:58","","2","","1313792","","2013-08-14 21:10:22","2013-08-13 23:09:09",""
"22481100","Saving a crypted private key in a cookie","<p>I am currently working on a project with a lot of security and I am having a bit of a problem choosing a technical solution to satisfy my customer need.</p>

<p><strong>First things first, let me explain you the customer need.</strong></p>

<p>For my customer's website, at some point a user needs to generate a <em>private key</em> and <em>public key</em> client side (gui : <em>browser</em>) then send the public key to the server and save the private key (<em>crypted</em> by a user choosen password) locally. The private key needs to be saved because it is used once in a second part of the process (the user needs to enter his password in order to decrypt it), once used we can dispose of the private key.</p>

<p>I have to add that the customer requests backward compatibility to IE7.</p>

<p><strong>First technical choice : Java Applet</strong></p>

<p>The first thing we looked up is to use a Java Applet, generates the keys just fine, but we enconter a problem on Safari Mac OSX, the appet is sandboxed and the user needs to perform a complicated action to disable sandbox mod. Our customer does not want this as it is not user firendly.</p>

<p><strong>Second solution : Saving crypted private key in a cookie</strong></p>

<p>We kept the java applet, but it does not save anything on disk, it is only used to perform cryptographic actions. We passed from the applet a crypted private key to the javascript to save in a cookie. We did it fine and we can retrieve the crypted private key from the cookie store and pass it to the applet to decrypt (with a popup requesting the user to enter his password).</p>

<p><strong>Question</strong>
We know that it is technically doable to save a crypted private key in a cookie, but the question is : is it secured, what kind of risks are we taking saving that private key in a the cookie store of the browser?</p>

<p>It would help me a lot if one of you could help me!</p>

<p>Cheers</p>
","<p>Cookies are sent in each request. This is really really bad because you want the private key to not sent over the network as much as possible.</p>

<p>Assuming you can't have local storage (IE7), the only way I know to store info on the cient side is cookies. I'd say : use local storage as much as possible, and when you can't, store the private key on the server side. At least, you'll be sending it once. it's bad, but less than really really bad ...</p>

<p>Or maybe you could store cookies on a dedicated subdomain that you never use again, but in order to read the cookie, even on the client side with javascript, you need to be on a page of that subdomain, and that means sending the key over the network again everytime you want to use it.</p>

<p>As far as I know.</p>
","972","<security><cookies><applet><private-key><public-key>","4","0","4","2014-06-16 18:04:06","","0","","","","","2014-03-18 13:37:23",""
"22481100","Saving a crypted private key in a cookie","<p>I am currently working on a project with a lot of security and I am having a bit of a problem choosing a technical solution to satisfy my customer need.</p>

<p><strong>First things first, let me explain you the customer need.</strong></p>

<p>For my customer's website, at some point a user needs to generate a <em>private key</em> and <em>public key</em> client side (gui : <em>browser</em>) then send the public key to the server and save the private key (<em>crypted</em> by a user choosen password) locally. The private key needs to be saved because it is used once in a second part of the process (the user needs to enter his password in order to decrypt it), once used we can dispose of the private key.</p>

<p>I have to add that the customer requests backward compatibility to IE7.</p>

<p><strong>First technical choice : Java Applet</strong></p>

<p>The first thing we looked up is to use a Java Applet, generates the keys just fine, but we enconter a problem on Safari Mac OSX, the appet is sandboxed and the user needs to perform a complicated action to disable sandbox mod. Our customer does not want this as it is not user firendly.</p>

<p><strong>Second solution : Saving crypted private key in a cookie</strong></p>

<p>We kept the java applet, but it does not save anything on disk, it is only used to perform cryptographic actions. We passed from the applet a crypted private key to the javascript to save in a cookie. We did it fine and we can retrieve the crypted private key from the cookie store and pass it to the applet to decrypt (with a popup requesting the user to enter his password).</p>

<p><strong>Question</strong>
We know that it is technically doable to save a crypted private key in a cookie, but the question is : is it secured, what kind of risks are we taking saving that private key in a the cookie store of the browser?</p>

<p>It would help me a lot if one of you could help me!</p>

<p>Cheers</p>
","<p>The main problem is  that cookies are only meant for things you are sending to the server. They are not meant for storage and you should not be sending your private key anywhere, ever.</p>

<p>Cookies can be stolen via XSS (always assume you have an XSS vuln in your site) and the attacker can then try to decrypt it.</p>

<p>On the grand scale of things you could do a lot worse. Assuming your crypto is solid, the private key is probably safe, but the big issue is that you shouldn't be using cookies like this. Using Web Storage is probably a far better solution here.</p>
","972","<security><cookies><applet><private-key><public-key>","4","0","4","2014-06-16 18:04:06","","0","","","","","2014-03-18 13:37:23",""
"22481100","Saving a crypted private key in a cookie","<p>I am currently working on a project with a lot of security and I am having a bit of a problem choosing a technical solution to satisfy my customer need.</p>

<p><strong>First things first, let me explain you the customer need.</strong></p>

<p>For my customer's website, at some point a user needs to generate a <em>private key</em> and <em>public key</em> client side (gui : <em>browser</em>) then send the public key to the server and save the private key (<em>crypted</em> by a user choosen password) locally. The private key needs to be saved because it is used once in a second part of the process (the user needs to enter his password in order to decrypt it), once used we can dispose of the private key.</p>

<p>I have to add that the customer requests backward compatibility to IE7.</p>

<p><strong>First technical choice : Java Applet</strong></p>

<p>The first thing we looked up is to use a Java Applet, generates the keys just fine, but we enconter a problem on Safari Mac OSX, the appet is sandboxed and the user needs to perform a complicated action to disable sandbox mod. Our customer does not want this as it is not user firendly.</p>

<p><strong>Second solution : Saving crypted private key in a cookie</strong></p>

<p>We kept the java applet, but it does not save anything on disk, it is only used to perform cryptographic actions. We passed from the applet a crypted private key to the javascript to save in a cookie. We did it fine and we can retrieve the crypted private key from the cookie store and pass it to the applet to decrypt (with a popup requesting the user to enter his password).</p>

<p><strong>Question</strong>
We know that it is technically doable to save a crypted private key in a cookie, but the question is : is it secured, what kind of risks are we taking saving that private key in a the cookie store of the browser?</p>

<p>It would help me a lot if one of you could help me!</p>

<p>Cheers</p>
","<p>I´d say that saving your private key in a cookies isn´t a really good choice since they are not supposed to hold sensitive information due security reasons, and our colleagues already told other reasons.
It´s also important to notice that the user may clear all his cookies at any given time or disable it at all.
The applet would meet better your customer requirements and would let you for example prompt the user to save a keystore file with the private key, this kind file was designed to hold this kind of information.</p>
","972","<security><cookies><applet><private-key><public-key>","4","0","4","2014-06-16 18:04:06","","0","","","","","2014-03-18 13:37:23",""
"22481100","Saving a crypted private key in a cookie","<p>I am currently working on a project with a lot of security and I am having a bit of a problem choosing a technical solution to satisfy my customer need.</p>

<p><strong>First things first, let me explain you the customer need.</strong></p>

<p>For my customer's website, at some point a user needs to generate a <em>private key</em> and <em>public key</em> client side (gui : <em>browser</em>) then send the public key to the server and save the private key (<em>crypted</em> by a user choosen password) locally. The private key needs to be saved because it is used once in a second part of the process (the user needs to enter his password in order to decrypt it), once used we can dispose of the private key.</p>

<p>I have to add that the customer requests backward compatibility to IE7.</p>

<p><strong>First technical choice : Java Applet</strong></p>

<p>The first thing we looked up is to use a Java Applet, generates the keys just fine, but we enconter a problem on Safari Mac OSX, the appet is sandboxed and the user needs to perform a complicated action to disable sandbox mod. Our customer does not want this as it is not user firendly.</p>

<p><strong>Second solution : Saving crypted private key in a cookie</strong></p>

<p>We kept the java applet, but it does not save anything on disk, it is only used to perform cryptographic actions. We passed from the applet a crypted private key to the javascript to save in a cookie. We did it fine and we can retrieve the crypted private key from the cookie store and pass it to the applet to decrypt (with a popup requesting the user to enter his password).</p>

<p><strong>Question</strong>
We know that it is technically doable to save a crypted private key in a cookie, but the question is : is it secured, what kind of risks are we taking saving that private key in a the cookie store of the browser?</p>

<p>It would help me a lot if one of you could help me!</p>

<p>Cheers</p>
","<p>You could use localstorage then just deploy localstorage polyfill for IE7</p>
","972","<security><cookies><applet><private-key><public-key>","4","0","4","2014-06-16 18:04:06","","0","","","","","2014-03-18 13:37:23",""
"40299826","how to extract private key from .p12 file using java sun security","<p>This is my program. I am getting the error ""error opening the key file"". Kindly help me where i am going wrong.</p>

<pre><code>import java.io.FileInputStream;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.PrivateKey;
import java.util.Base64;

public class ExtractionClass {
    public static void main(String args[]) {
       String  p12Password = ""PassWord"";
       try{
       FileInputStream file = new FileInputStream(""C:/Users/Aarti_Jangid/Desktop/p12/certChain.p12"");
       System.out.println(""FILE ""+ file);
       KeyStore keystore = KeyStore.getInstance(""PKCS12"", ""SunJSSE"");
       keystore.load(file, p12Password.toCharArray());
       String alias = keystore.aliases().nextElement(); 
       PrivateKey key = (PrivateKey)keystore.getKey(alias, p12Password.toCharArray());
       System.out.println(Base64.getEncoder().encodeToString(key.getEncoded()));
       } catch(KeyStoreException kse) {
           kse.printStackTrace();
           System.err.println(""Error getting the key"");  
       } catch (Exception e) {
              System.err.println(""Error opening the key file"");
              e.printStackTrace();
     }
   }
}
</code></pre>
","<p>I assume your stack trace is : </p>

<pre><code>Error opening registry key 'C:/Users/Aarti_Jangid/Desktop/p12/certChain.p12'
Error: could not find Java.dll
Error: could not find Java 2 Runtime Environment
</code></pre>

<p>If so try this : <a href=""https://stackoverflow.com/questions/6362037/java-error-opening-registry-key"">Java Error opening registry key</a></p>
","970","<java><security><private-key>","0","0","1","2016-10-28 07:11:47","","3","","","","","2016-10-28 07:06:20",""
"16446861","Construct a Java PrivateKey object from an SSLeay formatted key","<p>I am working on a Java (JSE 7) application that receives a private key in SSLeay format from an external server and needs to construct a java.security.PrivateKey-derived object. Since the key is received dynamically and the app is prohibited from using JNI, I'm not able to use openssl to convert the key.</p>

<p>Instead, I'm looking for a pure Java solution for converting from SSLeay to PKCS#8 or other format from which a PrivateKey can be constructed.</p>

<p>Googling shows a couple of third party libraries that handle SSLeay keys (eg, one from ""Entrust"") but am unfortunately constrained in this implementation to use no external libraries. Yes, I know. Not even Commons.</p>

<p>Does anybody know of any tools within the JSE 7 standard library that would help with this? I don't mind wading into writing the conversion myself, but have had a hard time locating a precise spec for SSLeay.</p>

<p>Thank you for any pointers!</p>
","<p>Note that this answer is only useful if one is constrained, as I was, to avoid the use of any 3rd party libraries. If you're allowed to use BouncyCastle or other libraries, that's presumably a better way to go.</p>

<p>The key I was receiving was an RSA key in OpenSSL (""traditional SSLeay"") DER format encoded to PEM. I was able to get a Java <code>java.security.PrivateKey</code> object in the following way:</p>

<ol>
<li>Wrote a simplistic DER parser that only handles DER tag type 2 (integers). The parser had to handle reading the DER sequence tag (0x30) and fixed and variable length objects.</li>
<li>Used <code>String.replace</code> to get rid of the RSA key header and footer in the PEM string.</li>
<li>Used <code>DatatypeConverter.parseBase64Binary()</code> to get a byte array from the PEM string.</li>
<li>Used the DER parser to extract <code>BigInteger</code>s from the data: version, modulus, public exponent, private exponent, prime P, prime Q, prime exponent P, prime exponent Q, and CRT coefficient (in that order).</li>
<li>Created a <code>java.security.spec.RSAPrivateCrtKeySpec</code> object (<code>keySpec</code>) from those values.</li>
<li><code>PrivateKey key = KeyFactory.getInstance(""RSA"").generatePrivate(keySpec);</code></li>
</ol>

<p>This worked for my purposes, but is an unfortunate reinvention of a couple of wheels.</p>
","966","<java><openssl><private-key>","0","0","1","2013-05-15 21:37:32","16575391","0","","2124251","","2013-05-08 17:49:31","2013-05-08 17:36:27",""
"17348420","Private key signature different on iOS and MacOSX","<p>I implemented a category method on the NSData class which returns a signature of the data using an SHA-1 hash and subsequent encryption with a private key as follows:</p>

<pre><code>- (NSData *)signatureWithKey:(SecKeyRef)keyRef {

    if (keyRef == NULL) {
        return nil;
    }

    NSData *sha1Digest = [self dataWithSHA1Digest];

    size_t maxLength = SecKeyGetBlockSize(keyRef) - 11;

    if ([sha1Digest length] &gt; maxLength) {
        NSString *reason = [NSString stringWithFormat:@""Digest is too long to sign with this key, max length is %ld and actual length is %ld"", maxLength, (unsigned long)[self length]];
        NSException *ex = [NSException exceptionWithName:@""BMInvalidArgumentException"" reason:reason userInfo:nil];
        @throw ex;
    }

#if TARGET_OS_IPHONE
    OSStatus status = noErr;

    uint8_t *plainBuffer = (uint8_t *)[sha1Digest bytes];
    size_t plainBufferSize = [sha1Digest length];
    size_t cipherBufferSize = SecKeyGetBlockSize(keyRef);
    uint8_t *cipherBuffer = malloc(cipherBufferSize * sizeof(uint8_t));

    status = SecKeyRawSign(keyRef,
                           kSecPaddingPKCS1SHA1,
                           plainBuffer,
                           plainBufferSize,
                           &amp;cipherBuffer[0],
                           &amp;cipherBufferSize
                           );

    if (status == noErr) {
        return [NSData dataWithBytesNoCopy:cipherBuffer length:cipherBufferSize freeWhenDone:YES];
    }

    free(cipherBuffer);
    return nil;
#else
    CFErrorRef error = NULL;
    SecTransformRef signer = NULL;
    CFTypeRef signature = NULL;
    if ((signer = SecSignTransformCreate(keyRef, &amp;error))) {
        if (SecTransformSetAttribute(
                                 signer,
                                 kSecTransformInputAttributeName,
                                 (CFDataRef)sha1Digest,
                                     &amp;error)) {
            signature = SecTransformExecute(signer, &amp;error);
        }
    }

    if (error) {
        LogWarn(@""Could not sign: %@"", error);
        CFRelease(error);
    }

    if (signer) {
        CFRelease(signer);
    }

    if (signature) {
        NSData *data = [NSData dataWithData:(NSData *)signature];
        CFRelease(signature);
        return data;
    } else {
        return nil;
    }

#endif

}
</code></pre>

<p>Now the strange thing is that with the same private key (loaded from a p12 file) I get two different results for iOS and MacOSX when signing the same data. I am completely puzzled by this. You may notice the method above uses a different implementation for MacOSX using security transforms, but even if I use the iOS implementation on MacOSX (which gives a compile warning but works fine) I get the same result.</p>

<p>The method used for loading the private key from file is below:</p>

<pre><code>+ (SecKeyRef)newPrivateKeyRefWithPassword:(NSString *)password fromData:(NSData *)data {
    NSMutableDictionary * options = [[NSMutableDictionary alloc] init];

    SecKeyRef privateKeyRef = NULL;

    // Set the public key query dictionary
    //change to your .pfx  password here
    [options setObject:password forKey:(id)kSecImportExportPassphrase];

    CFArrayRef items = CFArrayCreate(NULL, 0, 0, NULL);

    OSStatus securityError = SecPKCS12Import((CFDataRef)data,
                                             (CFDictionaryRef)options, &amp;items);

    if (securityError == noErr &amp;&amp; CFArrayGetCount(items) &gt; 0) {
        CFDictionaryRef identityDict = CFArrayGetValueAtIndex(items, 0);
        SecIdentityRef identityApp =
        (SecIdentityRef)CFDictionaryGetValue(identityDict,
                                             kSecImportItemIdentity);

        securityError = SecIdentityCopyPrivateKey(identityApp, &amp;privateKeyRef);
        if (securityError != noErr) {
            privateKeyRef = NULL;
        }
    }
    [options release];
    if (items) CFRelease(items);
    return privateKeyRef;
}
</code></pre>

<p>And this is the test case I use. Notice that two different strings are printed on iOS and MacOSX:</p>

<pre><code>    NSString *test = @""bla"";
    NSData *testData = [test dataUsingEncoding:NSUTF8StringEncoding];

    NSString *p12Path= [[NSBundle mainBundle] pathForResource:@""private_key"" ofType:@""p12""];

    NSData *p12Data = [NSData dataWithContentsOfFile:p12Path];

    SecKeyRef keyRef = [BMSecurityHelper newPrivateKeyRefWithPassword:@""xxxxxxxx"" fromData:p12Data];

    NSData *signatureData = [testData signatureWithKey:keyRef];
    NSString *signatureString = [BMEncodingHelper base64EncodedStringForData:signatureData withLineLength:0];

    if (keyRef) CFRelease(keyRef);

    NSLog(@""signatureString: %@"", signatureString);
</code></pre>
","<p>It's always nice if you can answer your own question. I missed the following: under MacOSX the security transform also calculates the SHA-1 hash automatically, in contrast with the iOS implementation.</p>

<p>I fixed the problem by adding the following in the MacOSX implementation:</p>

<pre><code>SecTransformSetAttribute(signer, kSecInputIsAttributeName, kSecInputIsDigest, &amp;error)
</code></pre>
","963","<ios><macos><digital-signature><private-key><encryption-asymmetric>","4","7","1","2013-06-27 17:22:16","","0","","","","","2013-06-27 16:26:03",""
"27129142","How to use private key on a PKCS#11 module instead of perivate key file for mutual-authentication in OpenSSL?","<p>I've a simple SSL client that uses OpenSSL library. My server requires client authentication &amp; so I've to set client's private key stored in a password protected PEM file. I use the following code for this purpose:</p>

<pre><code>/* set the private key from KeyFile */
if (SSL_CTX_use_PrivateKey_file(ctx, KeyFile, SSL_FILETYPE_PEM) &lt;= 0)
{
    ERR_print_errors_fp(stderr);
    abort();
}

/* verify private key */
if ( !SSL_CTX_check_private_key(ctx) )
{
    fprintf(stderr, ""Private key does not match the public certificate\n"");
    abort();
}
</code></pre>

<p>Now I want to know how can I establish a SSL connection using private key stored on a security token (with PKCS#11 interface) instead of reading it from a file?</p>
","<p>Answer is a little bit complicated. 
First You need to load Engine of your PKCS#11:</p>

<pre><code>ENGINE_load_builtin_engines();
{
    if (!(e = ENGINE_by_id(""dynamic"")))
        goto err;
    if (!ENGINE_ctrl_cmd_string(e, ""SO_PATH"", ""dstu"", 0))
        goto err;
    if (!ENGINE_ctrl_cmd_string(e, ""LIST_ADD"", ""2"", 0))
        goto err;
    if (!ENGINE_ctrl_cmd_string(e, ""LOAD"", NULL, 0))
        goto err;
    e = ENGINE_by_id(""pkcs11_engine"");
    if (!e)
      return error;

res = ENGINE_init(e);
if (!ENGINE_set_default(e, ENGINE_METHOD_ALL))
    goto err;
</code></pre>

<p>}</p>

<p>then you need load EVP_PKEY* from engine
<code>EVP_PKEY* key = ENGINE_load_private_key(e, ""SecureToken"", NULL, &amp;cb_data);</code></p>

<p>and pass it to SSL:
<code>int SSL_CTX_use_PrivateKey(SSL_CTX *ctx, EVP_PKEY *pkey);</code></p>

<p>strings <code>SecureToken</code> and <code>pkcs11_engine</code> you should found in documentation to your engine pkcs11 module</p>
","962","<passwords><openssl><private-key><pkcs#11><mutual-authentication>","1","2","1","2014-11-25 14:49:37","27129759","0","1","","","","2014-11-25 14:20:58",""
"44106066","How to parse(Convert to RSAParameters) X.509 private key in C#?","<p>I'm working on an encryption channel to encrypt the communication between two devices. So I'm creating a helper class to do the encryption and decryption. I've googled a lot and found a piece of code that can parse RSA Public Key Into <code>RSACryptoServiceProvider</code>.</p>

<p>This is the code:</p>

<pre><code>public static RSACryptoServiceProvider DecodeX509PublicKey(byte[] x509key)
{
    byte[] SeqOID = { 0x30, 0x0D, 0x06, 0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x01, 0x05, 0x00 };
    byte[] seq = new byte[15];
    MemoryStream mem = new MemoryStream(x509key);
    BinaryReader binr = new BinaryReader(mem);
    byte bt = 0;
    ushort twobytes = 0;

    try
    {

        twobytes = binr.ReadUInt16();
        if (twobytes == 0x8130)
            binr.ReadByte();
        else if (twobytes == 0x8230)
            binr.ReadInt16();
        else
            return null;

        seq = binr.ReadBytes(15);
        if (!CompareBytearrays(seq, SeqOID))
            return null;

        twobytes = binr.ReadUInt16();
        if (twobytes == 0x8103)
            binr.ReadByte();
        else if (twobytes == 0x8203)
            binr.ReadInt16();
        else
            return null;

        bt = binr.ReadByte();
        if (bt != 0x00)
            return null;

        twobytes = binr.ReadUInt16();
        if (twobytes == 0x8130)
            binr.ReadByte();
        else if (twobytes == 0x8230)
            binr.ReadInt16();
        else
            return null;

        twobytes = binr.ReadUInt16();
        byte lowbyte = 0x00;
        byte highbyte = 0x00;

        if (twobytes == 0x8102)
            lowbyte = binr.ReadByte();
        else if (twobytes == 0x8202)
        {
            highbyte = binr.ReadByte();
            lowbyte = binr.ReadByte();
        }
        else
            return null;
        byte[] modint = { lowbyte, highbyte, 0x00, 0x00 };
        int modsize = BitConverter.ToInt32(modint, 0);

        byte firstbyte = binr.ReadByte();
        binr.BaseStream.Seek(-1, SeekOrigin.Current);

        if (firstbyte == 0x00)
        {
            binr.ReadByte();
            modsize -= 1;
        }

        byte[] modulus = binr.ReadBytes(modsize);

        if (binr.ReadByte() != 0x02)
            return null;
        int expbytes = (int)binr.ReadByte();
        byte[] exponent = binr.ReadBytes(expbytes);

        RSACryptoServiceProvider RSA = new RSACryptoServiceProvider();
        RSAParameters RSAKeyInfo = new RSAParameters();
        RSAKeyInfo.Modulus = modulus;
        RSAKeyInfo.Exponent = exponent;
        RSA.ImportParameters(RSAKeyInfo);
        return RSA;
    }
    catch (Exception)
    {
        return null;
    }

    finally { binr.Close(); }
}
</code></pre>

<p>It works awesome with a public key. But my question is how can I parse a X.509 private key? I'm not really familiar with structure of the RSA key.</p>

<p>The keys are generated from <code>node-rsa</code> in <strong>node.js</strong></p>

<p>Thanks in advance. <strong>&lt;3</strong></p>
","<p>You currently have a functioning reader for the RSAPublicKey structure. That structure, and the RSAPrivateKey structure, can be found in (RFC 3447 Appendix A.1)[<a href=""https://tools.ietf.org/html/rfc3447#appendix-A]"" rel=""nofollow noreferrer"">https://tools.ietf.org/html/rfc3447#appendix-A]</a>.</p>

<p>.NET does not support ""multi-prime"" (more than 2) RSA (but neither does anyone else), so you can stick with the version 0 format. The field names should be clear from the alternative names in the comments, but if it is unclear:</p>

<ul>
<li><code>modulus</code> -> <code>Modulus</code></li>
<li><code>publicExponent</code> -> <code>Exponent</code></li>
<li><code>privateExponent</code> -> <code>D</code></li>
<li><code>prime1</code> -> <code>P</code></li>
<li><code>prime2</code> -> <code>Q</code></li>
<li><code>exponent1</code> -> <code>DP</code></li>
<li><code>exponent2</code> -> <code>DQ</code></li>
<li><code>coefficient</code> -> <code>InverseQ</code></li>
</ul>

<p>You will also need to add (or remove) padding zeros (on the left) to the values such that</p>

<ul>
<li>D.Length == Modulus.Length</li>
<li><code>hm</code> = (Modulus.Length + 1) / 2 // half round up</li>
<li>P, Q, DP, DQ, InverseQ each have Length == hm.</li>
</ul>
","960","<c#><encryption><rsa><x509certificate><private-key>","1","2","1","2017-05-24 21:00:41","","0","","","","","2017-05-22 06:34:13",""
"38335731","RSA Decryption in Android using private Key","<p>I am using encryption - decryption in Android using public and private key respectively. I have both the keys saved in the RAW folder as a file. The encryption works perfectly, but for the decryption it always gives the following error:</p>

<pre><code>java.security.spec.InvalidKeySpecException: java.lang.RuntimeException: error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag
</code></pre>

<p>I am enclosing the code snippet I have used:</p>

<pre><code>public class AppUtils {


public static String encryptString(String value, Context context){
    byte[] encodedBytes = null;
    try {
        //Cipher cipher = Cipher.getInstance(""RSA/ECB/PKCS1Padding"", ""AndroidOpenSSL"");
        Cipher cipher = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
        cipher.init(Cipher.ENCRYPT_MODE,  getPublicKey(context) );
        encodedBytes = cipher.doFinal(value.getBytes());
    } catch (Exception e) {
        e.printStackTrace();
    }

    return Base64.encodeToString(encodedBytes, Base64.DEFAULT);
}

public static String decryptString(String value, Context context){
    byte[] decodedBytes = null;
    try {
        //Cipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"", ""AndroidOpenSSL"");
        Cipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
        c.init(Cipher.DECRYPT_MODE,  getPrivateKey(context) );
        decodedBytes = c.doFinal(Base64.decode(value, Base64.DEFAULT));
    } catch (Exception e) {
        e.printStackTrace();
    }

    return new String(decodedBytes);
}


public static PrivateKey getPrivateKey(Context context){

    // reads the key_public key stored in a file
    InputStream is = context.getResources().openRawResource(R.raw.key_private);
    BufferedReader br = new BufferedReader(new InputStreamReader(is));
    List&lt;String&gt; lines = new ArrayList&lt;String&gt;();
    String line = null;

    try {


        while ((line = br.readLine()) != null)
            lines.add(line);


        // removes the first and last lines of the file (comments)
        if (lines.size() &gt; 1 &amp;&amp; lines.get(0).startsWith(""-----"") &amp;&amp; lines.get(lines.size()-1).startsWith(""-----"")) {
           lines.remove(0);
         lines.remove(lines.size()-1);
        }

        // concats the remaining lines to a single String
        StringBuilder sb = new StringBuilder();
        for (String aLine: lines)
            sb.append(aLine);
        String keyString = sb.toString();

        byte [] encoded = Base64.decode(keyString, Base64.DEFAULT);

        KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");

        PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(encoded);

        PrivateKey myPrivKey = keyFactory.generatePrivate(keySpec);

        return myPrivKey;

    }catch (Exception e){

        e.printStackTrace();
    }
    return null;
}

public static PublicKey getPublicKey(Context context){

    // reads the key_public key stored in a file
    InputStream is = context.getResources().openRawResource(R.raw.key_public);
    BufferedReader br = new BufferedReader(new InputStreamReader(is));
    List&lt;String&gt; lines = new ArrayList&lt;String&gt;();
    String line = null;


    try {


        while ((line = br.readLine()) != null)
            lines.add(line);

        // removes the first and last lines of the file (comments)
        if (lines.size() &gt; 1 &amp;&amp; lines.get(0).startsWith(""-----"") &amp;&amp; lines.get(lines.size()-1).startsWith(""-----"")) {
            lines.remove(0);
            lines.remove(lines.size()-1);
        }

        // concats the remaining lines to a single String
        StringBuilder sb = new StringBuilder();
        for (String aLine: lines)
            sb.append(aLine);
        String keyString = sb.toString();

        // converts the String to a PublicKey instance
        byte[] keyBytes = Base64.decode(keyString, Base64.DEFAULT);
        X509EncodedKeySpec spec = new X509EncodedKeySpec(keyBytes);
        KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
        PublicKey key = keyFactory.generatePublic(spec);

        return key;
    }catch (Exception e){
            e.printStackTrace();
    }

    return null;
}
}
</code></pre>

<p>Finally, I call the required function from MainActivity.java like this:</p>

<pre><code>String encryptedString =  AppUtils.encryptString(""SHANKAR"", MainActivity.this);

Log.d(""DX1"", "" Encrypted String "" + encryptedString );


String decryptedString =  AppUtils.decryptString(encryptedString, MainActivity.this);

Log.d(""DX1"", "" decrypted String "" + decryptedString );
</code></pre>

<p>I see that, I get the encrypted string properly, but at the time of decryption the statement :</p>

<pre><code>PrivateKey myPrivKey = keyFactory.generatePrivate(keySpec);
</code></pre>

<p>is throwing me the above error.But I can decrypt the encrypted string using the private key in any online tool.
Can someone kindly help me out.</p>

<p>My public key:</p>

<pre><code>-----BEGIN PUBLIC KEY-----
MIGeMA0GCSqGSIb3DQEBAQUAA4GMADCBiAKBgEac6cgM4Ch5vY2Rqvzw2ARaNEHv
PCbXWW1nPy3ft8CNFyLoIltwrnouY0azYECclONARh48qQUQ+UG62wNUtciLq9yX
3m0ePE7u/RYmNUnGWok6LMNZK1gGBu6TBnzNjDWi3CuR00xFzZ2TBtUMDowOa/+b
tfGTywGDLPJjgbtPAgMBAAE=
-----END PUBLIC KEY-----
</code></pre>

<p>My private key:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
MIICWgIBAAKBgEac6cgM4Ch5vY2Rqvzw2ARaNEHvPCbXWW1nPy3ft8CNFyLoIltw
rnouY0azYECclONARh48qQUQ+UG62wNUtciLq9yX3m0ePE7u/RYmNUnGWok6LMNZ
K1gGBu6TBnzNjDWi3CuR00xFzZ2TBtUMDowOa/+btfGTywGDLPJjgbtPAgMBAAEC
gYAAxTd7ukA70NAzmjI+XjZNHdrSGVUTq2fLXMQAsR8lF6T3+YZebwVISfdFTzGu
osaxEANz0v+ZEY1WnT5EdAkjqwtYauj0tDnYmuciju2uVnEYLPOaOvpkmM7e9y+a
NWTvG/C0qAXtTT/EJgAwfCyrhuigyxzwUIyqhW2xgQ8MKQJBAIgM5xPKd30HU98t
jOHzouwSjsv5NIFOM9RnLPGA6HazQGu/0h2S27UnzaU8KKjln1X2q22GMa1cSvIL
q06e+MsCQQCE3oZudjOBgJaKtk7iETiIIoVVk3K1RMSGT/56SrglB1K1kNuFOpg+
obs+8j366gQk47ZgaIZwSRfro0VhTysNAkBiLEVWv6QHgZEhG6Jsrb1j8mQ+hd5A
bGj0HVuODYIxnVmgJvP8yStnhohbcpS4g7G9e1jqmIoiWdXu4ULFYeuPAkAIcKYz
cBi3ejaV2xzJqXRg2WiE1hfsQdEGAyDUHdjyqTNsyyXWobE4EUf2qKadQK5AtaJJ
H3qiuVHmqvlmRAQlAkB4Cl2nYBpK1IdusfwtjfaKppLa/r5k1D35cybxLn1uS3Xz
wwqRUuXrDkb4+TCD3B7Lkuym/kfFE2iIpANAVkeN
-----END RSA PRIVATE KEY-----
</code></pre>
","<p>I had the same problem and tried a couple of days to figure out how it works and finally, I got it!</p>

<p>Your private key not in PKCS#8 format. </p>

<p>A PKCS8 key starts with </p>

<p>-----BEGIN PRIVATE KEY-----</p>

<p><strong>instead of</strong> </p>

<p>-----BEGIN RSA PRIVATE KEY-----.</p>

<p>Java works with PKCS#8 formats.</p>

<p>So you have two ways to fix it:</p>

<p><strong>First:</strong></p>

<p><a href=""https://stackoverflow.com/questions/8290435/convert-pem-traditional-private-key-to-pkcs8-private-key"">Regenerate/convert</a> your key on the server side in/to PCKS#8 format and use it in android application</p>

<p><strong>Or Second:</strong></p>

<p>Convert your private key in the application.
For this way you need include <a href=""http://www.bouncycastle.org/"" rel=""nofollow noreferrer"">third party library</a>
to the project.</p>

<p>Add this line into your app Gradle</p>

<p><code>compile 'com.madgag.spongycastle:core:1.56.0.0'</code></p>

<p>And replace your <code>getPrivateKey</code> method with this:</p>

<pre><code>`public static PrivateKey getPrivateKey(Context context) throws 
GeneralSecurityException, IOException {
        InputStream is = context.getResources().openRawResource(R.raw.rsa_2048_priv);
        BufferedReader br = new BufferedReader(new InputStreamReader(is));
        List&lt;String&gt; lines = new ArrayList&lt;String&gt;();
        String line = null;

            while ((line = br.readLine()) != null)
                lines.add(line);

            if (lines.size() &gt; 1 &amp;&amp; lines.get(0).startsWith(""-----"") &amp;&amp; lines.get(lines.size() - 1).startsWith(""-----"")) {
                lines.remove(0);
                lines.remove(lines.size() - 1);
            }

            StringBuilder sb = new StringBuilder();
            for (String aLine : lines)
                sb.append(aLine);
            String keyString = sb.toString();

            byte[] encodedPrivateKey = Base64.decode(keyString, Base64.DEFAULT);

            try {
                ASN1Sequence primitive = (ASN1Sequence) ASN1Sequence
                        .fromByteArray(encodedPrivateKey);
                Enumeration&lt;?&gt; e = primitive.getObjects();
                BigInteger v = ((ASN1Integer) e.nextElement()).getValue();

                int version = v.intValue();
                if (version != 0 &amp;&amp; version != 1) {
                    throw new IllegalArgumentException(""wrong version for RSA private key"");
                }
                /**
                 * In fact only modulus and private exponent are in use.
                 */
                BigInteger modulus = ((ASN1Integer) e.nextElement()).getValue();
                BigInteger publicExponent = ((ASN1Integer) e.nextElement()).getValue();
                BigInteger privateExponent = ((ASN1Integer) e.nextElement()).getValue();

                RSAPrivateKeySpec spec = new RSAPrivateKeySpec(modulus, privateExponent);
                KeyFactory kf = KeyFactory.getInstance(""RSA"");
                return kf.generatePrivate(spec);
            } catch (IOException e2) {
                throw new IllegalStateException();
            } catch (NoSuchAlgorithmException e) {
                throw new IllegalStateException(e);
            } catch (InvalidKeySpecException e) {
                throw new IllegalStateException(e);
            }

    }`
</code></pre>

<p>So it will convert private key to the PKCS#8,
and you can decode your text without error of <strong><em>wrong tag</em></strong></p>

<p>Hope it help :)</p>

<p>Here the links where I found solutions:</p>

<p><a href=""https://stackoverflow.com/questions/7216969/getting-rsa-private-key-from-pem-base64-encoded-private-key-file"">Getting RSA private key from PEM BASE64 Encoded private key file</a></p>

<p><a href=""https://stackoverflow.com/questions/24059509/java-rsa-decryption-not-working-throws-invalidkeyspecexception"">JAVA RSA Decryption not working, throws InvalidKeySpecException</a></p>

<p><a href=""https://stackoverflow.com/questions/8290435/convert-pem-traditional-private-key-to-pkcs8-private-key"">Convert PEM traditional private key to PKCS8 private key</a></p>

<p><a href=""https://stackoverflow.com/questions/6898801/how-to-include-the-spongy-castle-jar-in-android"">How to include the Spongy Castle JAR in Android?</a></p>
","959","<android><encryption><rsa><private-key>","1","0","1","2017-06-30 17:00:52","","1","4","","","","2016-07-12 17:45:23",""
"32627943","SFTP with DefaultSftpSessionFactory by SSH trust throws exception","<p>I have requirement to download/upload all txt file from SFTP server.
I am using Spring configuration as <code>org.springframework.integration.sftp.session.DefaultSftpSessionFactory</code>
and inbound 
its throws <code>ServletContext resource not found</code>.
Here password would be blank</p>

<pre><code>&lt;bean id=""acceptAllFileListFilter"" class=""org.springframework.integration.file.filters.AcceptAllFileListFilter"" /&gt;


&lt;bean id=""inboundSftpSessionFactory"" class=""org.springframework.integration.file.remote.session.CachingSessionFactory""&gt;
    &lt;constructor-arg ref=""inboundDefaultSftpSessionFactory"" /&gt;
&lt;/bean&gt;

&lt;bean id=""inboundDefaultSftpSessionFactory"" class=""org.springframework.integration.sftp.session.DefaultSftpSessionFactory""&gt;
        &lt;property name=""host"" value=""${sftp.host}"" /&gt;
        &lt;property name=""privateKey"" value=""/home/tech/id_rsa""/&gt;
        &lt;property name=""privateKeyPassphrase"" value=""${sftp.private.key.passphrase}""/&gt;
        &lt;property name=""port"" value=""${sftp.port}"" /&gt;       
        &lt;property name=""user"" value=""${sftp.user}"" /&gt; 
        &lt;property name=""password"" value=""${sftp.password}"" /&gt;
    &lt;/bean&gt;
</code></pre>

<p>....</p>

<pre><code>Caused by: java.io.FileNotFoundException: Could not open ServletContext resource [/home/tech/id_rsa]

        at org.springframework.web.context.support.ServletContextResource.getInputStream(ServletContextResource.java:141)

        at org.springframework.integration.sftp.session.DefaultSftpSessionFactory.initJschSession(DefaultSftpSessionFactory.java:371)

        at org.springframework.integration.sftp.session.DefaultSftpSessionFactory.getSession(DefaultSftpSessionFactory.java:347)

        ... 27 more
</code></pre>

<p>File is exist at specified location </p>

<p>when i tried with password configuration then its working fine.</p>
","<p>The file isn't at the specified location, as it tries to load the file from the root of the application and it isn't located there. It is located on the file system but that isn't what you specified. </p>

<p>Prefix the property value with <code>file:</code>.</p>

<pre><code>&lt;bean id=""inboundDefaultSftpSessionFactory"" class=""org.springframework.integration.sftp.session.DefaultSftpSessionFactory""&gt;
    &lt;property name=""host"" value=""${sftp.host}"" /&gt;
    &lt;property name=""privateKey"" value=""file:/home/tech/id_rsa""/&gt;
    &lt;property name=""privateKeyPassphrase"" value=""${sftp.private.key.passphrase}""/&gt;
    &lt;property name=""port"" value=""${sftp.port}"" /&gt;       
    &lt;property name=""user"" value=""${sftp.user}"" /&gt; 
    &lt;property name=""password"" value=""${sftp.password}"" /&gt;
&lt;/bean&gt;
</code></pre>

<p>See the reference guide for more information on <a href=""http://docs.spring.io/spring/docs/current/spring-framework-reference/htmlsingle/#resources-resourceloader"" rel=""nofollow"">resource loading</a>.</p>
","957","<java><spring><ssh><sftp><private-key>","0","3","1","2015-09-17 10:25:07","32628052","1","","2696260","","2015-09-17 10:23:26","2015-09-17 10:19:11",""
"28466053","Jsch addidentity using Android","<p>I'm fairly new to Android development and am trying to use Jsch using a private key to access a remote server. I have placed the private key in res/raw folder but am struggling on how to access the file path of the private key when trying to authenticate. I have previously got this working for a Java project. Here is a copy of what I have so far.</p>

<pre><code>    private Session sshConnect() throws JSchException, IOException
{
    try
    {
        //Login details
        jschSession = jsch.getSession(sshUsername, sshServer, 22);

        //Connect using private key and corresponding passphrase
        jsch.addIdentity(""./res/raw/id_rsa"", passphrase);

        //Ignore SSH key warnings
        java.util.Properties config = new java.util.Properties();
        config.put(""StrictHostKeyChecking"", ""no"");
        jschSession.setConfig(config);

        //System.out.println(localPort);
        jschSession.connect();
        return jschSession;
    }
    catch (Exception ex)
    {
        throw new RuntimeException(""SSH connection failed: "" + ex.getMessage(), ex);
    }
}
</code></pre>

<p>This then throws the following error when I try to run</p>

<pre><code>   java.lang.RuntimeException: SSH connection failed: java.io.FileNotFoundException: ./res/raw/id_rsa: open failed: ENOENT (No such file or directory)
</code></pre>

<p>I've tried the following to try and access the contents of the res folder, with no such luck:</p>

<pre><code>   jsch.addIdentity(""file:///android_res/raw/id_rsa"", passphrase);
</code></pre>
","<p>I'm not sure there's a way to access the raw resource as a file.</p>

<p>You may need to save the resource to a temporary path and refer to that in <code>addIdentity</code>.</p>

<p>For accessing the resource see for example:<br>
<a href=""https://stackoverflow.com/q/2856407/850848"">Android how to get access to raw resources that i put in res folder?</a></p>
","952","<android><jsch><private-key>","0","0","2","2016-04-13 05:41:28","","0","","","","","2015-02-11 22:47:52",""
"28466053","Jsch addidentity using Android","<p>I'm fairly new to Android development and am trying to use Jsch using a private key to access a remote server. I have placed the private key in res/raw folder but am struggling on how to access the file path of the private key when trying to authenticate. I have previously got this working for a Java project. Here is a copy of what I have so far.</p>

<pre><code>    private Session sshConnect() throws JSchException, IOException
{
    try
    {
        //Login details
        jschSession = jsch.getSession(sshUsername, sshServer, 22);

        //Connect using private key and corresponding passphrase
        jsch.addIdentity(""./res/raw/id_rsa"", passphrase);

        //Ignore SSH key warnings
        java.util.Properties config = new java.util.Properties();
        config.put(""StrictHostKeyChecking"", ""no"");
        jschSession.setConfig(config);

        //System.out.println(localPort);
        jschSession.connect();
        return jschSession;
    }
    catch (Exception ex)
    {
        throw new RuntimeException(""SSH connection failed: "" + ex.getMessage(), ex);
    }
}
</code></pre>

<p>This then throws the following error when I try to run</p>

<pre><code>   java.lang.RuntimeException: SSH connection failed: java.io.FileNotFoundException: ./res/raw/id_rsa: open failed: ENOENT (No such file or directory)
</code></pre>

<p>I've tried the following to try and access the contents of the res folder, with no such luck:</p>

<pre><code>   jsch.addIdentity(""file:///android_res/raw/id_rsa"", passphrase);
</code></pre>
","<p>Simply, you can get the file from raw folder.</p>

<pre><code>  InputStream privateKeyByteStream = getResources()
            .openRawResource(
               getResources().getIdentifier(""private_key_without_extension"", ""raw"", getPackageName()));
</code></pre>

<p>Then add identity</p>

<pre><code>jSch.addIdentity(""anyIdentityName"", privateKeyBytes, publicKeyBytes, passphrase);
</code></pre>
","952","<android><jsch><private-key>","0","2","2","2016-04-13 05:41:28","","0","","","","","2015-02-11 22:47:52",""
"39676595","RSA Python & Extended Euclidean algorithm to generate the private key. Variable is None","<p>Problem with simple <a href=""https://en.wikipedia.org/wiki/RSA_(cryptosystem)"" rel=""nofollow""><strong>RSA</strong></a> encryption algorithm. <a href=""https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm"" rel=""nofollow""><strong>Extended Euclidean algorithm</strong></a> is used to generate the <strong>private key</strong>. The problem with <code>multiplicative_inverse(e, phi)</code> method. It is used for finding the multiplicative inverse of two numbers. The function does not return private key correctly. It returns <code>None</code> value.</p>

<hr>

<p>I have the following code:</p>

<pre><code>import random

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

#Euclidean extended algorithm for finding the multiplicative inverse of two numbers
def multiplicative_inverse(e, phi):
    d = 0
    x1 = 0
    x2 = 1
    y1 = 1
    temp_phi = phi

    while e &gt; 0:
        temp1 = temp_phi/e
        temp2 = temp_phi - temp1 * e
        temp_phi = e
        e = temp2

        x = x2- temp1* x1
        y = d - temp1 * y1

        x2 = x1
        x1 = x
        d = y1
        y1 = y

    if temp_phi == 1:
        return d + phi

def generate_keypair(p, q):
    n = p * q

    #Phi is the totient of n
    phi = (p-1) * (q-1)

    #An integer e such that e and phi(n) are coprime
    e = random.randrange(1, phi)

    #Euclid's Algorithm to verify that e and phi(n) are comprime
    g = gcd(e, phi)
    while g != 1:
        e = random.randrange(1, phi)
        g = gcd(e, phi)

    #Extended Euclid's Algorithm to generate the private key
    d = multiplicative_inverse(e, phi)

    #Public key is (e, n) and private key is (d, n)
    return ((e, n), (d, n))


if __name__ == '__main__':
    p = 17
    q = 23

    public, private = generate_keypair(p, q)
    print(""Public key is:"", public ,"" and private key is:"", private)
</code></pre>

<p>Since the variable <code>d</code> in the following line <code>d = multiplicative_inverse(e, phi)</code> contains <code>None</code> value, then during encryption I receive the following error:</p>

<blockquote>
  <p><strong>TypeError:</strong> unsupported operand type(s) for pow(): 'int', 'NoneType',
  'int'</p>
</blockquote>

<p>Output for the code that I provided in the question:</p>

<blockquote>
  <p>Public key is: (269, 391)  and private key is: (None, 391)</p>
</blockquote>

<hr>

<p><strong>Question:</strong> Why the variable contains <code>None</code> value. How to fix that?</p>
","<p>Well I'm not sure about the algorithm itself, and can't tell if you if it's wrong or right, but you only return a value from <code>multiplicative_inverse</code> function when <code>if temp_phi == 1</code>. Otherwise, the result is None. So I bet your <code>temp_phi != 1</code> when you run the function. There's probably some mistake in the function's logic.</p>
","948","<python><python-3.x><encryption><rsa><private-key>","0","1","3","2019-04-11 13:16:34","39676638","1","","4786305","","2016-09-24 17:54:24","2016-09-24 12:59:05",""
"39676595","RSA Python & Extended Euclidean algorithm to generate the private key. Variable is None","<p>Problem with simple <a href=""https://en.wikipedia.org/wiki/RSA_(cryptosystem)"" rel=""nofollow""><strong>RSA</strong></a> encryption algorithm. <a href=""https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm"" rel=""nofollow""><strong>Extended Euclidean algorithm</strong></a> is used to generate the <strong>private key</strong>. The problem with <code>multiplicative_inverse(e, phi)</code> method. It is used for finding the multiplicative inverse of two numbers. The function does not return private key correctly. It returns <code>None</code> value.</p>

<hr>

<p>I have the following code:</p>

<pre><code>import random

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

#Euclidean extended algorithm for finding the multiplicative inverse of two numbers
def multiplicative_inverse(e, phi):
    d = 0
    x1 = 0
    x2 = 1
    y1 = 1
    temp_phi = phi

    while e &gt; 0:
        temp1 = temp_phi/e
        temp2 = temp_phi - temp1 * e
        temp_phi = e
        e = temp2

        x = x2- temp1* x1
        y = d - temp1 * y1

        x2 = x1
        x1 = x
        d = y1
        y1 = y

    if temp_phi == 1:
        return d + phi

def generate_keypair(p, q):
    n = p * q

    #Phi is the totient of n
    phi = (p-1) * (q-1)

    #An integer e such that e and phi(n) are coprime
    e = random.randrange(1, phi)

    #Euclid's Algorithm to verify that e and phi(n) are comprime
    g = gcd(e, phi)
    while g != 1:
        e = random.randrange(1, phi)
        g = gcd(e, phi)

    #Extended Euclid's Algorithm to generate the private key
    d = multiplicative_inverse(e, phi)

    #Public key is (e, n) and private key is (d, n)
    return ((e, n), (d, n))


if __name__ == '__main__':
    p = 17
    q = 23

    public, private = generate_keypair(p, q)
    print(""Public key is:"", public ,"" and private key is:"", private)
</code></pre>

<p>Since the variable <code>d</code> in the following line <code>d = multiplicative_inverse(e, phi)</code> contains <code>None</code> value, then during encryption I receive the following error:</p>

<blockquote>
  <p><strong>TypeError:</strong> unsupported operand type(s) for pow(): 'int', 'NoneType',
  'int'</p>
</blockquote>

<p>Output for the code that I provided in the question:</p>

<blockquote>
  <p>Public key is: (269, 391)  and private key is: (None, 391)</p>
</blockquote>

<hr>

<p><strong>Question:</strong> Why the variable contains <code>None</code> value. How to fix that?</p>
","<p>I think that this is a problem:</p>

<pre><code>if temp_phi == 1:
   return d + phi
</code></pre>

<p>This function return some value only under condition that temp_phi is equal to 1, otherwise it will not return any value.</p>
","948","<python><python-3.x><encryption><rsa><private-key>","0","1","3","2019-04-11 13:16:34","39676638","1","","4786305","","2016-09-24 17:54:24","2016-09-24 12:59:05",""
"39676595","RSA Python & Extended Euclidean algorithm to generate the private key. Variable is None","<p>Problem with simple <a href=""https://en.wikipedia.org/wiki/RSA_(cryptosystem)"" rel=""nofollow""><strong>RSA</strong></a> encryption algorithm. <a href=""https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm"" rel=""nofollow""><strong>Extended Euclidean algorithm</strong></a> is used to generate the <strong>private key</strong>. The problem with <code>multiplicative_inverse(e, phi)</code> method. It is used for finding the multiplicative inverse of two numbers. The function does not return private key correctly. It returns <code>None</code> value.</p>

<hr>

<p>I have the following code:</p>

<pre><code>import random

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

#Euclidean extended algorithm for finding the multiplicative inverse of two numbers
def multiplicative_inverse(e, phi):
    d = 0
    x1 = 0
    x2 = 1
    y1 = 1
    temp_phi = phi

    while e &gt; 0:
        temp1 = temp_phi/e
        temp2 = temp_phi - temp1 * e
        temp_phi = e
        e = temp2

        x = x2- temp1* x1
        y = d - temp1 * y1

        x2 = x1
        x1 = x
        d = y1
        y1 = y

    if temp_phi == 1:
        return d + phi

def generate_keypair(p, q):
    n = p * q

    #Phi is the totient of n
    phi = (p-1) * (q-1)

    #An integer e such that e and phi(n) are coprime
    e = random.randrange(1, phi)

    #Euclid's Algorithm to verify that e and phi(n) are comprime
    g = gcd(e, phi)
    while g != 1:
        e = random.randrange(1, phi)
        g = gcd(e, phi)

    #Extended Euclid's Algorithm to generate the private key
    d = multiplicative_inverse(e, phi)

    #Public key is (e, n) and private key is (d, n)
    return ((e, n), (d, n))


if __name__ == '__main__':
    p = 17
    q = 23

    public, private = generate_keypair(p, q)
    print(""Public key is:"", public ,"" and private key is:"", private)
</code></pre>

<p>Since the variable <code>d</code> in the following line <code>d = multiplicative_inverse(e, phi)</code> contains <code>None</code> value, then during encryption I receive the following error:</p>

<blockquote>
  <p><strong>TypeError:</strong> unsupported operand type(s) for pow(): 'int', 'NoneType',
  'int'</p>
</blockquote>

<p>Output for the code that I provided in the question:</p>

<blockquote>
  <p>Public key is: (269, 391)  and private key is: (None, 391)</p>
</blockquote>

<hr>

<p><strong>Question:</strong> Why the variable contains <code>None</code> value. How to fix that?</p>
","<p>This looks like you are converting from python 2 to 3.  In 2 temp_phi/e will be an integer, but in 3 it's a float.  As the multiplative inverses method of division uses integers you need to change the line to int(temp_phi / e) or temp_phi // e</p>
","948","<python><python-3.x><encryption><rsa><private-key>","0","0","3","2019-04-11 13:16:34","39676638","1","","4786305","","2016-09-24 17:54:24","2016-09-24 12:59:05",""
"26679494","Can't connect to EC2 instance - key decryption failure","<p>I created a 64-bit Windows 2012 server instance on EC2. To connect to it, EC2 asks for me to ""Get Password"". So, I locate the .pem file on my hard drive and it auto-fills the private key into the box. When I go to press the ""Decrypt Password"" button, I get an error message: ""Error decrypting your password"". I've tried it in Firefox, Chrome and Explorer, to no avail. Can someone help me?</p>

<p><img src=""https://i.stack.imgur.com/HG1DZ.png"" alt=""enter image description here""></p>
","<p>I had the same issue now. I can't provide a solution, but I'll tell what happened.</p>

<p>I've used my company notebook (Win 7) that has many security measures (encrypted drive, anti-virus, etc.). I don't know why, but apparently, the downloaded file is modified by this machine (maybe the file enconding?). I just know that I've tried 5 different times (creating new machines and new keypairs) and it always failed.</p>

<p>As soon as I've tried the same procedure (new machine with new keypair) with my personal desktop (Win 10), it worked instantly as it always do.</p>

<p>I've tried again with my company notebook and it failed again.</p>

<p>So, all I can say is: try using a different machine. Your current machine may be corrupting the .pem file.</p>
","934","<windows><amazon-web-services><amazon-ec2><passwords><private-key>","3","0","1","2016-11-17 17:54:50","","0","","","","","2014-10-31 16:41:17",""
"27586399","How to create keystore with myserver.key after receiving crt from Certificate Authority","<p>I created a private key and csr file with the following command</p>

<pre><code>openssl req -nodes -newkey rsa:2048 -sha1 -keyout myserver.key -out server.csr
</code></pre>

<p>The two files outputted are</p>

<ul>
<li>myserver.key</li>
<li>server.csr</li>
</ul>

<p>I uploaded the server.csr file to Network Solutions and got back 4 ""crt"" files. </p>

<ul>
<li>AddTrustExternalCARoot.crt</li>
<li>OV_NetworkSolutionsOVServerCA2.crt</li>
<li>OV_USERTrustRSACertificationAuthority.crt</li>
<li>STAR.{mydomain}.CA.CRT</li>
</ul>

<p>How can I create a keystore out of the files I have and configure it in Tomcat 7 in the server.xml file.</p>
","<p>Probably easiest way:</p>

<ol>
<li>Download <a href=""http://keystore-explorer.sourceforge.net/"" rel=""nofollow"">KeyStore Explorer</a> </li>
<li>Start KSE and select ""Create a new KeyStore"", choose ""JKS""</li>
<li>Select ""Import Key Pair"" in the ""Tools"" menu, choose ""PKCS#8"". Unselect ""Encrypted Key"", browse to ""myserver.key"" as the private key file and ""STAR.{mydomain}.CA.CRT"" as the certificate file.</li>
<li>After the key pair entry is created, right click on it, select ""Edit certificate chain"" and append the two ""OV"" certificates. </li>
<li>Save the keystore and make sure to use the same password for the keystore and the key pair.</li>
<li>Add <code>keystoreFile=""..."" keystorePass=""...""</code> to the <code>&lt;Connector&gt;</code> tag for the SSL port (default 8443) in your server.xml</li>
</ol>
","922","<tomcat><ssl><keystore><private-key><csr>","2","1","1","2014-12-21 13:54:28","27589999","0","","","","","2014-12-21 03:12:23",""
"21975862","How to decrypt an encrypted RSA key .pem file with Node.js","<p>I have an encrypted private key file (I also have the unencrypted one for comparison), assume that I have the password and I want the decrypted version of that file - I tried using the URSA module (npm install ursa) , but it is not suitable for my needs because it is not portable enough (requires a specific version of the .NET framework on Windows). I need a raw Node.js solution - Is there a module that would let me do this?</p>

<p>If not, what is the exact process for turning this encrypted key into a plain key?
I tried using Node.js' crypto module crypto.createDecipher(algorithm, password)... Using 'DES-EDE3-CBC' as the algorithm and my password, but I get giberrish output which doesn't match the unencrypted version of the key. I was running the decryption on the content starting with o5IM... and ending with ==... I also tried only the string from o5IM to OZDug and that didn't work either.</p>

<p>-----BEGIN RSA PRIVATE KEY-----<br />
Proc-Type: 4,ENCRYPTED
DEK-Info: DES-EDE3-CBC,0DC77650897F6756</p>

<p>o5IMl6kanVn72mKmvlKHZhz+5YXZsnPvOVLOm9FATNLt/EC+YQgznIlxR3tHYbk/
6YXXS9YeyebJ0uvD0RG14q+zDrWSoE70VsiEDJVj6HUCBe3O7wjaZ6tPLIKXWXtU
Go315e0OCMszafWnWSO5EN8ZSpJSjHCa9b0nJTWu1gyA9Z21c5Gu/jwHi/3Fvk2x
YDAl17RaTSMk2enez8+oqSBre3PTuX+1DWnfZbEWCnWidioPkisfVj5+qkCQmpzV
9OyCZ09S+ygwtEJkG+GdJuIK0oAVK1J6Jlpns7n/b3vbxuV3FxIWJteicujffnom
c9bV63c/9enRJKLV/gU/6JzD1SnpwH8grU5Y7TqHg//eA9XtO1+7Rye/MRgCsEsX
lKLctmB2a7PQWV2Wm9sQhfjI+J0mikuBDIoUp16JIn3UKWGY7g9CRkqwM9ozgVBG
8IoPoKSE/Rys9AkIp0gvQ9HeVUAkMwzWV60D0uKImZEFxkZ1WCcBS8xLc+kWQfwm
Ngh0rpf3AtKIZcatWkTzmpFEcXwRSJDBH8PwJM9UpsOJHmb05UjN54MhyC/HaYV7
n0HToHlOipmOF0Z299/4rxQanVZjC2pfbVi2HbbhWEGlbUI728rhoDvfK1N2eHfy
edGz9Ls6hAMcYrTa4knIMQr5W7iXaTOYDPxSxgsddJfm6AkMo3f0Oaz3+IIpyr+S
UVTCAN3nubHVVWld4xNsqn55zeLLwt4R0MyqgFXeK5CDFN/R7YLnuCm//kV5ozHn
dd43mBt7FtEuAX0pjocXvlQOTjM8quBOtszEj+XkcpgvnjGCkOZDug==<br />
-----END RSA PRIVATE KEY-----</p>
","","912","<node.js><ssl><encryption><rsa><private-key>","2","","0","2014-02-23 23:00:35","","0","","","","","2014-02-23 23:00:35",""
"13901578","PHP equivalent to OpenSSL RSA command","<p>How could I remove passphase from RSA private key using PHP
I know that in OpenSSL it is this way: 
<code>openssl rsa -in key.key -out key.key</code> 
and I am searching equivalent command to this one in PHP.</p>

<hr>

<p>RSA command requires the pass</p>

<pre><code>OpenSSL&gt; rsa -in key2.key -out key2.key 
Enter pass phrase for key2.key:
</code></pre>
","<p>This would accomplish the same operation using the <code>openssl</code> extension:</p>

<pre><code>$key = file_get_contents('key2.key');
$password = 'your password or pass phrase';

if (false === ($pkey = openssl_pkey_get_private($key, $password))) {
    die(openssl_error_string());
}
openssl_pkey_export($pkey, $out_key);
file_put_contents('key2.key', $out_key);
</code></pre>

<p>A concrete example:</p>

<pre><code>$key = &lt;&lt;&lt;EOS
-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: DES-EDE3-CBC,775352C44A559B6C

V8EuwC29zy4yuY7Ie+HvyygjKJx4G+VF/SgjjCQR+Q/iLaXcoXhIMBmP9ugQpywu
Tgmg25PruaXl3Mabs2h03aUwLyFEEjcnaVz4IFYGflqDIBbSb/Y4Q9Ef0OjbCwCJ
5pEnD0ATPtb+bptHk7VitvyK9vIN4zrqDeWdpGkqhYZx4SkUDLBhcYYYA3eY8P7y
/yeUmHt2p12W7xF4OWflNj0ot7N2GoofKrAomW0vHVAAlVHj4OVyZYeOEG/8gm2A
a3xo+LS9D2tFJjCtnP5ytczWnsoe18bKlWbjV/IimlkVEqR6jx0jC99eCUHyaSvm
OfU/DHHcooBIJxXB5VfxFbRzjyWYgsAiVf2lThvusRb+j8/Ey28t5CWx8ME2hgmk
hrTPmCFor+Lx/7++cmOFWSNvJU8MrC6jH+q2R3xIPuY=
-----END RSA PRIVATE KEY-----
EOS;
$password = 'superman';

if (false === ($pkey = openssl_pkey_get_private($key, $password))) {
    die(openssl_error_string());
}
openssl_pkey_export($pkey, $out_key);
echo $out_key;
</code></pre>
","912","<php><openssl><private-key>","2","2","2","2013-02-24 09:55:26","13902863","4","","367456","","2012-12-16 13:38:31","2012-12-16 13:08:42",""
"13901578","PHP equivalent to OpenSSL RSA command","<p>How could I remove passphase from RSA private key using PHP
I know that in OpenSSL it is this way: 
<code>openssl rsa -in key.key -out key.key</code> 
and I am searching equivalent command to this one in PHP.</p>

<hr>

<p>RSA command requires the pass</p>

<pre><code>OpenSSL&gt; rsa -in key2.key -out key2.key 
Enter pass phrase for key2.key:
</code></pre>
","<p>Using <a href=""http://phpseclib.sourceforge.net/"" rel=""nofollow"">phpseclib, a pure PHP RSA implementation</a>:</p>

<pre><code>&lt;?php
include('Crypt/RSA.php');

$rsa = new Crypt_RSA();
$rsa-&gt;setPassword('password');
$rsa-&gt;loadKey('...');

$rsa-&gt;setPassword();
echo $rsa-&gt;getPrivateKey();
?&gt;
</code></pre>
","912","<php><openssl><private-key>","2","2","2","2013-02-24 09:55:26","13902863","4","","367456","","2012-12-16 13:38:31","2012-12-16 13:08:42",""
"2754444","Meet-in-the-Middle Atack on an NTRU Private key","<p>I was wondering if anyone could tell me how to represent the enumeration of vectors of privite key f in a Meet-In-the-Middle Attack on an NTRU Private key. I can not understand the example, given here <a href=""http://securityinnovation.com/cryptolab/pdf/NTRUTech004v2.pdf"" rel=""nofollow noreferrer"">http://securityinnovation.com/cryptolab/pdf/NTRUTech004v2.pdf</a>
I'll be very thankful if anyone could show an example in detail.  </p>
","<p>(Full disclosure: I work for Security Innovation and worked for NTRU until SI acquired us)</p>

<p>Warning: Long answer!</p>

<p>Let's look at a toy example: N = 11, q = 29. Let's take df = 3, so f consists of 3 coefficients equal to 1 and 8 coefficients equal to 0. Take dg = 5. And assume that h = g*f^{-1} mod p, rather than using the optimizations that have f = 1+pF. Then we might have</p>

<pre><code>f = [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0]
finv = [16, 12, 4, 18, 17, 14, 9, 28, 8, 26, 3]
g = [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0]
h = [15, 20, 1, 21, 4, 26, 14, 17, 25, 11, 12]
</code></pre>

<p>You can check that f*h = g here.</p>

<p>The attacker wants to find f, so they can do the brute force search for df = 3. They can speed this up by taking advantage of the fact that there will be some rotation of f that has a 1 in the first position, so they only need to search the (10 pick 2) possible locations for the other two nonzero coefficients of f. The full search they perform is this:</p>

<pre><code>           f*h (=g)                                       f
[9, 18, 7, 13, 26, 22, 15, 28, 27, 24, 19]; [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[23, 17, 4, 8, 16, 2, 3, 6, 10, 21, 11]; [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0]
[15, 2, 3, 5, 11, 21, 12, 23, 17, 4, 8]; [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[12, 23, 17, 4, 8, 16, 2, 3, 5, 11, 20]; [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[24, 20, 9, 18, 7, 13, 26, 22, 14, 28, 27]; [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0]
[2, 3, 6, 10, 21, 12, 23, 17, 4, 8, 15]; [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0]
[19, 10, 18, 7, 13, 26, 22, 14, 28, 27, 24]; [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0]
[28, 27, 25, 19, 10, 18, 7, 13, 25, 22, 14]; [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[18, 7, 13, 26, 22, 15, 28, 27, 24, 19, 9]; [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1]
[22, 14, 28, 27, 25, 19, 10, 18, 7, 13, 25]; [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0]
[14, 28, 27, 24, 20, 9, 19, 6, 14, 25, 22]; [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0]
[11, 20, 12, 23, 17, 4, 9, 15, 2, 3, 5]; [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0]
[23, 17, 4, 8, 16, 1, 4, 5, 11, 20, 12]; [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0]
[1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0]; [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0]
[18, 7, 13, 26, 22, 14, 0, 26, 25, 19, 9]; [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0]
[27, 24, 20, 9, 19, 6, 14, 25, 22, 14, 28]; [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0]
[17, 4, 8, 16, 2, 3, 6, 10, 21, 11, 23]; [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1]
[28, 27, 24, 19, 10, 18, 7, 13, 26, 22, 14]; [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0]
[25, 19, 9, 18, 7, 13, 26, 22, 14, 0, 26]; [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0]
[8, 16, 1, 3, 6, 10, 21, 12, 23, 17, 4]; [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0]
[15, 28, 27, 24, 20, 9, 18, 7, 13, 26, 21]; [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0]
[3, 6, 10, 21, 12, 23, 17, 4, 8, 16, 1]; [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0]
[12, 23, 17, 4, 9, 15, 2, 3, 5, 11, 20]; [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]
[2, 3, 5, 11, 21, 12, 23, 17, 4, 8, 15]; [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1]
[17, 4, 8, 15, 2, 3, 6, 10, 21, 12, 23]; [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
[0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1]; [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0]
[7, 13, 26, 21, 15, 28, 27, 24, 20, 9, 18]; [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0]
[24, 20, 9, 18, 7, 13, 26, 21, 15, 28, 27]; [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0]
[4, 8, 16, 1, 4, 5, 11, 20, 12, 23, 17]; [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0]
[23, 17, 4, 8, 16, 2, 3, 5, 11, 20, 12]; [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]
[26, 22, 14, 28, 27, 24, 20, 9, 18, 7, 13]; [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]
[4, 5, 11, 20, 12, 23, 17, 4, 8, 16, 1]; [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0]
[21, 12, 23, 17, 4, 8, 16, 1, 3, 6, 10]; [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0]
[1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0]; [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0]
[20, 9, 18, 7, 13, 26, 22, 14, 28, 27, 24]; [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
[16, 2, 3, 5, 11, 20, 12, 23, 17, 4, 8]; [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0]
[4, 9, 15, 2, 3, 5, 11, 20, 12, 23, 17]; [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0]
[13, 26, 22, 14, 0, 26, 25, 19, 9, 18, 7]; [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0]
[3, 6, 10, 21, 12, 23, 17, 4, 8, 15, 2]; [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1]
[11, 21, 12, 23, 17, 4, 8, 15, 2, 3, 5]; [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0]
[20, 9, 19, 6, 14, 25, 22, 14, 28, 27, 24]; [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0]
[10, 18, 7, 13, 26, 22, 14, 28, 27, 24, 19]; [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1]
[8, 16, 2, 3, 6, 10, 21, 11, 23, 17, 4]; [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0]
[27, 25, 19, 10, 18, 7, 13, 25, 22, 14, 28]; [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
[7, 13, 26, 22, 15, 28, 27, 24, 19, 9, 18]; [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]
</code></pre>

<p>Scan down there, and you can see that g appears in row 14, 26 and 34 of the 45 rows. (g appears three times because there are three 1's in f, so there are three rotations of f that have a 1 in the leading position).</p>

<p>Now let's look at the meet-in-the-middle attack. The attacker uses the formula</p>

<pre><code>(f1+f2) * h = g
</code></pre>

<p>so</p>

<pre><code>f1*h = g - f2*h
</code></pre>

<p>Using e[i] to mean the i'th coefficient of e, this means that the attacker knows that</p>

<pre><code>(f1*h)[i] = - (f2*h)[i] + 0 or 1
</code></pre>

<p>So the attacker calculates all possible values of f1*h. Call the resulting list {g1}. They then calculate -f2*h and for each result g2, they see if g2 is the same as an existing g1 or if <em>g2 differs from any g1 by no more than 1 in each coefficient</em>. In other words,</p>

<pre><code>[3, 10, 12, 7]
</code></pre>

<p>would match</p>

<pre><code>[4, 10, 12, 8]
</code></pre>

<p>Doing it this way, the attacker needs only work through the following:</p>

<ul>
<li>All 10 f1s with a 1 in the leading position and a 1 somewhere else</li>
<li>All 10 f2s with a single 1 in any position other than the leading one</li>
</ul>

<p>This gives the following. I've sorted the lists to make the matches easier to spot.</p>

<pre><code>          f1*h = g1                                           f1
[00, 08, 26, 03, 16, 12, 05, 18, 17, 15, 09]     [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[03, 16, 12, 04, 19, 17, 15, 09, 00, 08, 26]     [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[06, 21, 22, 25, 01, 11, 02, 13, 07, 23, 27]     [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
[07, 24, 27, 06, 21, 22, 25, 00, 11, 02, 13]     [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
[11, 02, 13, 07, 24, 27, 06, 21, 22, 25, 00]     [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
[12, 05, 18, 17, 15, 09, 00, 08, 26, 03, 16]     [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
[16, 12, 05, 18, 18, 14, 10, 28, 08, 26, 03]     [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
[19, 17, 15, 09, 00, 08, 26, 03, 16, 12, 04]     [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]
[26, 03, 16, 12, 05, 18, 18, 14, 10, 28, 08]     [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[27, 06, 21, 22, 25, 01, 11, 02, 13, 07, 23]     [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]

         -f2*h = g2                                          f2
[03, 15, 12, 04, 18, 17, 14, 09, 28, 08, 25]     [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
[04, 18, 17, 14, 09, 28, 08, 25, 03, 15, 12]     [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
[08, 25, 03, 15, 12, 04, 18, 17, 14, 09, 28]     [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
[09, 28, 08, 25, 03, 15, 12, 04, 18, 17, 14]     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
[12, 04, 18, 17, 14, 09, 28, 08, 25, 03, 15]     [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[15, 12, 04, 18, 17, 14, 09, 28, 08, 25, 03]     [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[17, 14, 09, 28, 08, 25, 03, 15, 12, 04, 18]     [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[18, 17, 14, 09, 28, 08, 25, 03, 15, 12, 04]     [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[25, 03, 15, 12, 04, 18, 17, 14, 09, 28, 08]     [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]
[28, 08, 25, 03, 15, 12, 04, 18, 17, 14, 09]     [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
</code></pre>

<p>You can see that:</p>

<ul>
<li>line 1 of g1 matches with line 10 of g2, giving [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0]</li>
<li>line 2 of g1 matches with line 1 of g2, giving [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0]</li>
<li>line 6 of g1 matches with line 5 of g2, giving [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0]</li>
<li>line 7 of g1 matches with line 6 of g2, giving [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0]</li>
<li>line 8 of g1 matches with line 8 of g2, giving [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0]</li>
<li>line 9 of g1 matches with line 9 of g2, giving [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0]</li>
</ul>

<p>There are 6 collisions here because there are 3 rotations with a 1 in the leading position and for each rotation there are two ways to pick the other two coefficients.</p>

<p>So an attacker would have to do about 45/3 = 15 work to find the key with a brute force search and about 10 work to find the key with a meet-in-the-middle attack (slightly less than 10 due to the rotations, but I don't have a clean formula to hand).</p>

<p>There are various optimizations, but this should be enough to give you the idea. </p>

<p>One thing I haven't dealt with so far is how to keep the search time down. A straightforward way to do it is simply to sort the results as you're going along. The time to insert or look for a collision with an entry is about log_2(size of the search space). Alternatively, at the cost of using more memory, it's possible to bring this search time down to a constant by reserving a block for each possible value of the first few coefficients of g1.</p>

<p>Hope this helps. Let me know if you have any more questions.</p>
","906","<private-key><ntruencrypt>","3","6","1","2013-10-02 10:33:12","2776292","0","3","21234","","2012-05-17 09:01:54","2010-05-02 18:15:33",""
"42202978","(Android / Java) Create a RSA private key instance","<p>I am trying to create a PrivateKey instance in an Android app from a pem file to decrypt some data but I am getting the following error:</p>

<blockquote>
  <p>java.lang.RuntimeException: error:0c0890ba:ASN.1 encoding routines:asn1_check_tlen:WRONG_TAG</p>
</blockquote>

<p>The code:</p>

<pre><code>// Read private key.
InputStream is = context.getResources().openRawResource(R.raw.private_key);
br = new BufferedReader(new InputStreamReader(is));
List&lt;String&gt; lines = new ArrayList&lt;String&gt;();
line = null;
while ((line = br.readLine()) != null)
    lines.add(line);

// Removes the first and last lines of the file (comments).
if (lines.size() &gt; 1 &amp;&amp; lines.get(0).startsWith(""-----"") &amp;&amp;
        lines.get(lines.size()-1).startsWith(""-----"")) {
    lines.remove(0);
    lines.remove(lines.size()-1);
}

// Concats the remaining lines to a single String.
StringBuilder sb = new StringBuilder();
for (String aLine: lines)
    sb.append(aLine);
String keyString = sb.toString();

// Converts the String to a PublicKey instance
byte[] keyBytes = Base64.decode(keyString, Base64.DEFAULT);
PKCS8EncodedKeySpec spec = new PKCS8EncodedKeySpec(keyBytes);
KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
mKey = keyFactory.generatePrivate(spec);
</code></pre>

<p>Any help?</p>
","<p>Seems your key is not PKCS8 format. Java does not support loading keys in PKCS#1 format. Check your key is in PKCS#8 format verifying that it starts with <code>-----BEGIN PRIVATE KEY-----</code> If it starts with <code>----BEGIN RSA PRIVATE KEY-----</code> then you need to convert it to PKCS#8. See <a href=""https://stackoverflow.com/questions/8290435/convert-pem-traditional-private-key-to-pkcs8-private-key"">Convert PEM traditional private key to PKCS8 private key</a></p>
","906","<java><android><encryption><rsa><private-key>","1","2","2","2019-08-07 20:52:43","42221068","2","","","","","2017-02-13 11:28:28",""
"42202978","(Android / Java) Create a RSA private key instance","<p>I am trying to create a PrivateKey instance in an Android app from a pem file to decrypt some data but I am getting the following error:</p>

<blockquote>
  <p>java.lang.RuntimeException: error:0c0890ba:ASN.1 encoding routines:asn1_check_tlen:WRONG_TAG</p>
</blockquote>

<p>The code:</p>

<pre><code>// Read private key.
InputStream is = context.getResources().openRawResource(R.raw.private_key);
br = new BufferedReader(new InputStreamReader(is));
List&lt;String&gt; lines = new ArrayList&lt;String&gt;();
line = null;
while ((line = br.readLine()) != null)
    lines.add(line);

// Removes the first and last lines of the file (comments).
if (lines.size() &gt; 1 &amp;&amp; lines.get(0).startsWith(""-----"") &amp;&amp;
        lines.get(lines.size()-1).startsWith(""-----"")) {
    lines.remove(0);
    lines.remove(lines.size()-1);
}

// Concats the remaining lines to a single String.
StringBuilder sb = new StringBuilder();
for (String aLine: lines)
    sb.append(aLine);
String keyString = sb.toString();

// Converts the String to a PublicKey instance
byte[] keyBytes = Base64.decode(keyString, Base64.DEFAULT);
PKCS8EncodedKeySpec spec = new PKCS8EncodedKeySpec(keyBytes);
KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
mKey = keyFactory.generatePrivate(spec);
</code></pre>

<p>Any help?</p>
","<p>use this lines:</p>

<pre><code>    if (privateKeyString.contains(""-----BEGIN PRIVATE KEY-----"") || privateKeyString.contains(""-----END PRIVATE KEY-----""))
        privateKeyString = privateKeyString.replace(""-----BEGIN PRIVATE KEY-----"", """").replace(""-----END PRIVATE KEY-----"", """");


    if (privateKeyString.contains(""-----BEGIN RSA PRIVATE KEY-----"") || privateKeyString.contains(""-----END RSA PRIVATE KEY-----""))
        privateKeyString = privateKeyString.replace(""-----BEGIN RSA PRIVATE KEY-----"", """").replace(""-----END RSA PRIVATE KEY-----"", """");
</code></pre>
","906","<java><android><encryption><rsa><private-key>","1","0","2","2019-08-07 20:52:43","42221068","2","","","","","2017-02-13 11:28:28",""
"28706816","Private key length > public key?","<p>I'm working on rsa private and public key / encryption / decryption / etc using openssl module. But a question is still unanswered : why private key are often (are always, i don't know) longer than public key ? </p>

<p>Is there several answer to this ?</p>

<p><img src=""https://i.stack.imgur.com/Q2AHK.png"" alt=""public and private key""></p>

<p>This is my public and private key generated.</p>
","<p>The <em>RSA</em> private key includes the values that are in the <em>RSA</em> public key, and some more values that are <em>private</em>. Futhermore, the values themselves are larger.</p>

<p>The public key contains the modulus and the public exponent <em>e</em> which is short (mostly 3 or 65537). On the other hand the private key contains the private exponent <em>d</em> ≡ <em>e</em><sup>−1</sup> (mod φ(<em>n</em>)). Depending on φ(<em>n</em>), <em>d</em> can be vastly larger than <em>e</em>.</p>

<p>There are other public key algorithms where this is different. Some algorithms based on elliptic curves have a single big integer as the private key (and group description) and the public key has a curve point (and group description) which is larger than the big integer.</p>
","903","<encryption><rsa><private-key><public-key>","0","3","2","2015-02-24 22:10:20","28707061","1","1","608639","","2015-02-24 22:06:46","2015-02-24 21:37:23",""
"28706816","Private key length > public key?","<p>I'm working on rsa private and public key / encryption / decryption / etc using openssl module. But a question is still unanswered : why private key are often (are always, i don't know) longer than public key ? </p>

<p>Is there several answer to this ?</p>

<p><img src=""https://i.stack.imgur.com/Q2AHK.png"" alt=""public and private key""></p>

<p>This is my public and private key generated.</p>
","<blockquote>
  <p>why private key are often (are always, i don't know) longer than public key ? </p>
</blockquote>

<p>The answer is detailed in <a href=""http://en.wikipedia.org/wiki/PKCS_1"" rel=""nofollow"">PKCS 1</a> (and friends like <a href=""http://www.ietf.org/rfc/rfc2437.txt"" rel=""nofollow"">RFC 2437</a>).</p>

<p>The public key is the pair <code>{e, n}</code>, where <code>e</code> is the public exponent and <code>n</code> is the modulus.</p>

<p>One of the private key representations is the triplet <code>{e, d, n}</code>, where <code>e</code> is the public exponent, <code>d</code> is the private exponent and <code>n</code> is the modulus.</p>

<p>The other private key representations the n-tuple<code>{e, d, n, p, q, dp, dq, qi}</code>, where <code>e</code> is the public exponent; <code>d</code> is the private exponent; <code>n</code> is the modulus; and <code>p</code> and <code>q</code> are the factors of <code>n</code>.</p>

<p>And the remaining are for the Chinese Remainder theorem, which allows a speedup in signatures (I believe). <code>dp</code> is p's exponent, a positive integer such that <code>e(dP) ≅ 1 (mod(p-1))</code>; <code>dq</code> is q's exponent, a positive integer such that <code>e(dq) ≅ 1 (mod(q-1))</code>; and <code>qi</code> is CRT coefficient, a positive integer less than <code>p</code> such that <code>q(qInv) ≅ 1 (mod p)</code>.</p>
","903","<encryption><rsa><private-key><public-key>","0","4","2","2015-02-24 22:10:20","28707061","1","1","608639","","2015-02-24 22:06:46","2015-02-24 21:37:23",""
"36969656","Changing CSP Type for Certificate in Windows","<p>After executing the below command </p>

<pre><code>openssl engine capi -t -post list_options:33 -post list_certs
</code></pre>

<p>Output</p>

<pre><code>Private Key Info:
   Provider Name:  Microsoft Base Cryptographic Provider v1.0, Provider Type 1
</code></pre>

<p>Now i need to change this CSP type to  <code>Microsoft Enhanced RSA and AES Cryptographic Provider</code>.</p>

<p>Is that possible ?</p>

<p>And Also at what point of time it is decided that this certificate will bind/register to a CSP ? Does that occur at the time of certficate and private key creation or it happens while Signing the Certificate from CA ?</p>
","<p>No,</p>

<p>a CSP will define, among others, the key size. If you used the Base Provider to generate an RSA key it will be 512 bits will the Enhanced Provider uses 1024 bits.</p>

<p>This is decided at a key generation. Microsoft CAs can enforce the CSP used before signing the certificate.</p>
","903","<windows><certificate><private-key><pki>","0","0","1","2016-05-02 08:41:09","","0","","","","","2016-05-01 17:27:10",""
"26493439","Retrieve private key from token using applet","<p>I have an applet who reads the Certificate and for consequence the public and private keys from usb Token.
I can read get access to PrivateKey whenever the token is plugged, but I have a cryptographed environment where I need to post the certificate and keys to a servlet, and this servlet will sign the selected files on my application. It was working fine, till I got this token with a non exportable PrivateKey.</p>

<pre><code>PrivateKey privateKey = (PrivateKey) keyStore.getKey(alias, PIN.toCharArray());
</code></pre>

<p>Then I use a decoder to convert the bytes array to BASE64 and post it.</p>

<pre><code>sun.misc.BASE64Encoder encoder = new sun.misc.BASE64Encoder();
String base64encoded = encoder.encode(privateKey.getEncoded());
</code></pre>

<p>However, using this particular token, the method getEncoded(), used on privateKey.getEncoded(), returns always null. So I didn't find a way to get the bytes array from PrivateKey object. </p>

<p>Is there a possible way to do it? </p>
","<p>You can't get the private key from a <code>PKCS11</code> token, <code>PKCS11</code> are used to have the key material inside the secure device and can't be extracted, when you want to sign with this kind of devices (HSM, smart-cards and so on)  the signature is performed inside it.</p>

<p>If you want to perform a signature with a client <code>PKCS11</code> usb token and a applet, you have to perform the signature in the applet executed in the client machine instead of make the signature in the server side passing the key because this option it's not possible.</p>

<p>Hope this helps, </p>
","898","<servlets><applet><certificate><private-key><pkcs#11>","1","2","2","2019-08-27 05:18:06","26515937","1","0","1218618","","2014-10-22 19:55:05","2014-10-21 18:14:13",""
"26493439","Retrieve private key from token using applet","<p>I have an applet who reads the Certificate and for consequence the public and private keys from usb Token.
I can read get access to PrivateKey whenever the token is plugged, but I have a cryptographed environment where I need to post the certificate and keys to a servlet, and this servlet will sign the selected files on my application. It was working fine, till I got this token with a non exportable PrivateKey.</p>

<pre><code>PrivateKey privateKey = (PrivateKey) keyStore.getKey(alias, PIN.toCharArray());
</code></pre>

<p>Then I use a decoder to convert the bytes array to BASE64 and post it.</p>

<pre><code>sun.misc.BASE64Encoder encoder = new sun.misc.BASE64Encoder();
String base64encoded = encoder.encode(privateKey.getEncoded());
</code></pre>

<p>However, using this particular token, the method getEncoded(), used on privateKey.getEncoded(), returns always null. So I didn't find a way to get the bytes array from PrivateKey object. </p>

<p>Is there a possible way to do it? </p>
","<p>Using applet is no more supported by modern browsers. Thus you need to use Browser Extension which accesses Host service running below the browser to access Certificate Store on Local machine which has handle to private key on the usb cryptographic token or smart card using CSP (Crypto Service Provider on Windows). Thus signing of hash would be done inside the token and signed content (Signature) would be returned by host application to browser which in turn sends it to server to complete signing operation.</p>

<p><a href=""http://help.signer.digital/digital_signing_and_authentication_from_web_browser.htm"" rel=""nofollow noreferrer"">More explanation, Working Example and source code explained</a></p>
","898","<servlets><applet><certificate><private-key><pkcs#11>","1","0","2","2019-08-27 05:18:06","26515937","1","0","1218618","","2014-10-22 19:55:05","2014-10-21 18:14:13",""
"33799540","Deleting key pair in android","<p>I have created the public/private key using the android keystore when enrolling users in my application:</p>

<pre><code>KeyPairGenerator kpg = KeyPairGenerator.getInstance(
                    ""RSA"", ""AndroidKeyStore"");
KeyPair kp=kpg.generateKeyPair();
</code></pre>

<p>How can I delete this key pair when the user enrolls. i cant find any functions to do so. Thanks in advance</p>
","","896","<java><android><keystore><private-key><public-key>","2","","0","2015-11-19 09:14:38","","6","1","","","","2015-11-19 09:14:38",""
"52896957","Provide private key passhprase (password) for Posh-SSH New-SSHSession","<p>With <a href=""https://www.powershellgallery.com/packages/Posh-SSH/2.0.2"" rel=""nofollow noreferrer"">Posh-SSH</a>, is there a way to provide the passphrase/password to use with an encrypted private key? (Password for the key file, not credentials for the SSH server connection)</p>

<p>I'm having no luck finding information on how to do it, or if it's even possible.</p>
","<p>Posh-SSH will use ""password"" to decrypt encrypted private key.</p>

<pre><code>$cred = New-Object System.Management.Automation.PSCredential($userName, $keyPassphrase)
$sftpSession = New-SFTPSession -ComputerName $hostname -Credential $cred -KeyFile $keyFile
</code></pre>
","890","<powershell><ssh><sftp><private-key>","4","3","1","2018-10-19 19:27:43","52897298","0","1","850848","","2018-10-19 19:27:43","2018-10-19 17:03:12",""
"18106478","CURL SSH Key passphrase safety","<p>I was just playing with the idea of using curl to scp/sftp some of my files over to a remote box and was wondering how exactly to keep my passphrase to my private keys safe if I can't use an ssh-agent and can only use the key files themselves. My knowledge is that there really isn't a way to do this but I am hoping that I am wrong about this.</p>

<p>Edit: More description</p>

<p>I have generated ssh keys to log into my remote box, I have put a passphrase on the key, I want to use this key to log into the remote box with libcurl and setting <code>CURLOPT_SSH_PRIVATE_KEYFILE</code> to the proper key file, however I would then have to set <code>CURLOPT_KEYPASSWD</code> because I set a passphrase, which from what I understand would have to just plain text and that just doesn't seem very secure to me. Maybe its a non-issue?</p>
","<p>If you want fully automated authentication then the authentication credentials must be stored somewhere.</p>

<p>Generally if you have root access to some machine then you can read anything including other people's private key files in their home directories.</p>

<p>For this reason pass phrases were introduced to encrypt those private key files on centralised storage. When you then mount a shared home directory on your own machine (on which presumably only you have root) it is safe to use the passphrase and decrypt it. The real key is then stored temporarily in memory (at which point theoretically root could access it).</p>

<p>If you use ssh-agent then it keeps your passphrase (needed to decrypt the keyfile) in memory which is erased on reboot and you need to reenter your passphrase.</p>

<p>Now if you need non interactive authentication with <code>curl</code> (or whatever else) then all information to get the decrypted keyfile needs to be on the machine somewhere. If you are the only one with root access to that machine then it is safe to store it without a passphrase.</p>

<p>If not... well then you won't get fully secure unless you wish to enter the passphrase on each access manually (and even then root could be nasty and <code>ptrace</code> your process to get the passphrase). In that case I suggest you put the passphrase file in volatile storage (<code>/dev/shm</code> for example) and deny everyone except yourself access. Root will still be able to read it though. This will need to be repeated on every reboot though.</p>
","885","<c++><c><ssh><libcurl><private-key>","1","0","2","2013-08-08 17:45:20","","5","","802302","","2013-08-07 15:20:21","2013-08-07 14:44:11",""
"18106478","CURL SSH Key passphrase safety","<p>I was just playing with the idea of using curl to scp/sftp some of my files over to a remote box and was wondering how exactly to keep my passphrase to my private keys safe if I can't use an ssh-agent and can only use the key files themselves. My knowledge is that there really isn't a way to do this but I am hoping that I am wrong about this.</p>

<p>Edit: More description</p>

<p>I have generated ssh keys to log into my remote box, I have put a passphrase on the key, I want to use this key to log into the remote box with libcurl and setting <code>CURLOPT_SSH_PRIVATE_KEYFILE</code> to the proper key file, however I would then have to set <code>CURLOPT_KEYPASSWD</code> because I set a passphrase, which from what I understand would have to just plain text and that just doesn't seem very secure to me. Maybe its a non-issue?</p>
","<p>You could store your passphrase somewhere in an encrypted form.  Read the encrypted passphrase from wherever you stored it, decrypt it, set <code>CURLOPT_KEYPASSWD</code> to the decrypted passphrase, use curl to access the remote box, then unset <code>CURLOPT_KEYPASSWD</code></p>

<p>Still doesn't protect you from a really determined intruder, but it makes it annoying enough to keep casual intruders from trying.</p>
","885","<c++><c><ssh><libcurl><private-key>","1","0","2","2013-08-08 17:45:20","","5","","802302","","2013-08-07 15:20:21","2013-08-07 14:44:11",""
"45425930","Unable to find details of private key in JKS","<p>I generated a JKS using this command:</p>

<pre><code>keytool -genkey -alias $1 -keyalg RSA -keysize 2048 -sigalg SHA256withRSA -dname ""CN=$3,OU=$4,O=$5,L=$6,S=$7,C=$8"" -keypass $9 -keystore keystore.jks -storepass ${10} -validity 375
</code></pre>

<p>$1 to $10 all being variables stored in a file.</p>

<p>I then generated a CSR using this command.</p>

<pre><code>keytool -certreq -alias mydomain -keystore keystore.jks -file mydomain.csr
</code></pre>

<p>I then applied for Digi sign CA cert. I received  the below 4 certs which i imported in my JKS.</p>

<p>Alias, Filename and details below:</p>

<blockquote>
  <ol>
  <li><p>root AddTrustExternalCARoot.crt Owner: CN=AddTrust External CA Root, OU=AddTrust External TTP Network, O=AddTrust AB, C=SE Issuer:
  CN=AddTrust External CA Root, OU=AddTrust External TTP Network,
  O=AddTrust AB, C=SE</p></li>
  <li><p>inter USERTrustRSAAddTrustCA.crt Owner: CN=USERTrust RSA Certification Authority, O=The USERTRUST Network, L=Jersey City,
  ST=New Jersey, C=US Issuer: CN=AddTrust External CA Root, OU=AddTrust
  External TTP Network, O=AddTrust AB, C=SE</p></li>
  <li><p>inter_second DigiSignCADigiSSL.crt Owner: CN=Digi-Sign CA Digi-SSL, O=Digi-Sign Limited, L=Dublin, ST=County Dublin, C=IE Issuer:
  CN=USERTrust RSA Certification Authority, O=The USERTRUST Network,
  L=Jersey City, ST=New Jersey, C=US</p></li>
  <li><p>mydomain mydomain_com.crt Owner: CN=mymac1.com, OU=Digi-SSL Xp, OU=Provided by Digi-Sign Limited, OU=Batel Affinity, O=Batel &amp; Moss
  Group, L=Texas, ST=NJ, C=US Issuer: CN=Digi-Sign CA Digi-SSL,
  O=Digi-Sign Limited, L=Dublin, ST=County Dublin, C=IE</p></li>
  </ol>
</blockquote>

<p>Imported them in JKS using the below command:</p>

<pre><code>keytool -import -v -alias ""root"" -file AddTrustExternalCARoot.crt -keystore keystore.jks 

keytool -import -v -alias ""intermediate1"" -file USERTrustRSAAddTrustCA.crt -keystore keystore.jks 

keytool -import -v -alias ""intermediate2"" -file DigiSignCADigiSSL.crt -keystore keystore.jks 

keytool -import -v -alias ""USWL1212CONPERF01"" -file mydomain_com.crt -keystore keystore.jks
</code></pre>

<p>When i set the JKS in weblogic i get this exception in WebLogic Server logs:</p>

<pre><code>####&lt;Jul 31, 2017 11:07:14 AM CDT&gt; &lt;Error&gt; &lt;WebLogicServer&gt; &lt;sysa5av&gt; &lt;ISIS01&gt; &lt;[ACTIVE] ExecuteThread: '34' for queue: 'weblogic.kernel.Default (self-tuning)'&gt; &lt;&lt;WLS Kernel&gt;&gt; &lt;&gt; &lt;&gt; &lt;1501517234413&gt; &lt;BEA-000297&gt; &lt;Inconsistent security configuration, weblogic.management.configuration.ConfigurationException: No identity key/certificate entry was found under alias mydomain in keystore /web/bea/mydomains/config/keystore.jks on server MS1.&gt;
</code></pre>

<p>i tried changing my JKS to PKCS12 format so that i can see what my private key and alias is but that too failed with the below error:</p>

<pre><code>keytool -v -importkeystore -srckeystore keystore.jks -srcalias certificatekey -destkeystore myp12file.p12 -deststoretype PKCS12

Problem importing entry for alias root: java.security.KeyStoreException: TrustedCertEntry not supported. 
</code></pre>

<p>i Then tried the java program here: <a href=""https://stackoverflow.com/questions/4907622/keytool-see-the-public-and-private-keys"">keytool - see the public and private keys</a></p>

<p>But the output does not show any private keys. I used the alias mydomain. Could be the alias for the privatekey is wrong as it was populated using variables as shown in the first command of this post. What would be the solution in that case ? How could i retrieve the alias and the private key for the certificate that digisign gave me ?</p>

<p>If the alias is correct why am i getting error starting the weblogic server ?</p>

<p>Incase needed, I'm also sharing the output of </p>

<pre><code>keytool -v -list -keystore keystore.jks

Enter keystore password:

Keystore type: JKS
Keystore provider: SUN

Your keystore contains 4 entries

Alias name: root
Creation date: Jul 31, 2017
Entry type: trustedCertEntry

Owner: CN=AddTrust External CA Root, OU=AddTrust External TTP Network, O=AddTrust AB, C=SE
Issuer: CN=AddTrust External CA Root, OU=AddTrust External TTP Network, O=AddTrust AB, C=SE
Serial number: 1
Valid from: Tue May 30 06:48:38 EDT 2000 until: Sat May 30 06:48:38 EDT 2020
Certificate fingerprints:
         MD5:  1D:35:54:04:85:78:B0:3F:42:42:4D:BF:20:73:0A:3F
         SHA1: 02:FA:F3:E2:91:43:54:68:60:78:57:69:4D:F5:E4:5B:68:85:18:68
         SHA256: 68:7F:A4:51:38:22:78:FF:F0:C8:B1:1F:8D:43:D5:76:67:1C:6E:B2:BC:EA:B4:13:FB:83:D9:65:D0:6D:2F:F2
         Signature algorithm name: SHA1withRSA
         Version: 3

Extensions:

#1: ObjectId: 2.5.29.35 Criticality=false
AuthorityKeyIdentifier [
KeyIdentifier [
0000: AD BD 98 7A 34 B4 26 F7   FA C4 26 54 EF 03 BD E0  ...z4.&amp;...&amp;T....
0010: 24 CB 54 1A                                        $.T.
]
[CN=AddTrust External CA Root, OU=AddTrust External TTP Network, O=AddTrust AB, C=SE]
SerialNumber: [    01]
]

#2: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

#3: ObjectId: 2.5.29.15 Criticality=false
KeyUsage [
  Key_CertSign
  Crl_Sign
]

#4: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: AD BD 98 7A 34 B4 26 F7   FA C4 26 54 EF 03 BD E0  ...z4.&amp;...&amp;T....
0010: 24 CB 54 1A                                        $.T.
]
]



*******************************************
*******************************************


Alias name: mydomain
Creation date: Jul 31, 2017
Entry type: trustedCertEntry

Owner: CN=mymac1.com, OU=Digi-SSL Xp, OU=Provided by Digi-Sign Limited, OU=Batel Affinity, O=Batel &amp; Moss Group, L=Texas, ST=NJ, C=US
Issuer: CN=Digi-Sign CA Digi-SSL, O=Digi-Sign Limited, L=Dublin, ST=County Dublin, C=IE
Serial number: 6f70e9e8abce2003529156bf5cb98a1f
Valid from: Sun Jul 16 20:00:00 EDT 2017 until: Tue Jul 17 19:59:59 EDT 2018
Certificate fingerprints:
         MD5:  9A:F1:62:71:C4:02:C2:C1:64:87:84:A2:07:EA:1A:07
         SHA1: A0:BF:8A:61:D7:AE:82:A6:EE:4B:EB:E0:22:19:73:2E:FC:85:F8:AC
         SHA256: 56:1D:22:04:4B:E5:9D:09:1E:0C:FD:36:33:0B:E7:49:DB:C0:37:2D:93:24:F1:B1:8B:6E:27:D5:D9:76:3D:59
         Signature algorithm name: SHA256withRSA
         Version: 3

Extensions:

#1: ObjectId: 1.3.6.1.5.5.7.1.1 Criticality=false
AuthorityInfoAccess [
  [
   accessMethod: caIssuers
   accessLocation: URIName: http://crt.usertrust.com/DigiSignCADigiSSL.crt
,
   accessMethod: ocsp
   accessLocation: URIName: http://ocsp.usertrust.com
]
]

#2: ObjectId: 2.5.29.35 Criticality=false
AuthorityKeyIdentifier [
KeyIdentifier [
0000: 78 29 0F AE CD 90 2C C0   DC D2 7A D4 9B 5F 9C 45  x)....,...z.._.E
0010: E0 88 A8 2C                                        ...,
]
]

#3: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:false
  PathLen: undefined
]

#4: ObjectId: 2.5.29.31 Criticality=false
CRLDistributionPoints [
  [DistributionPoint:
     [URIName: http://crl.usertrust.com/DigiSignCADigiSSL.crl]
]]

#5: ObjectId: 2.5.29.32 Criticality=false
CertificatePolicies [
  [CertificatePolicyId: [1.3.6.1.4.1.6449.1.2.2.9]
[PolicyQualifierInfo: [
  qualifierID: 1.3.6.1.5.5.7.2.1
  qualifier: 0000: 16 19 68 74 74 70 73 3A   2F 2F 63 70 73 2E 75 73  ..https://cps.us
0010: 65 72 74 72 75 73 74 2E   63 6F 6D                 ertrust.com

]]  ]
  [CertificatePolicyId: [2.23.140.1.2.2]
[]  ]
]

#6: ObjectId: 2.5.29.37 Criticality=false
ExtendedKeyUsages [
  serverAuth
  clientAuth
]

#7: ObjectId: 2.5.29.15 Criticality=true
KeyUsage [
  DigitalSignature
  Key_Encipherment
]

#8: ObjectId: 2.5.29.17 Criticality=false
SubjectAlternativeName [
  DNSName: mymac1.com
  DNSName: www.mymac1.com
]

#9: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: 3F 71 B1 50 5A 94 A7 0E   4E 1C B6 7E 6D 06 43 90  ?q.PZ...N...m.C.
0010: 90 5F 86 AF                                        ._..
]
]



*******************************************
*******************************************


Alias name: intermediate2
Creation date: Jul 31, 2017
Entry type: trustedCertEntry

Owner: CN=Digi-Sign CA Digi-SSL, O=Digi-Sign Limited, L=Dublin, ST=County Dublin, C=IE
Issuer: CN=USERTrust RSA Certification Authority, O=The USERTRUST Network, L=Jersey City, ST=New Jersey, C=US
Serial number: 1b3249d255747b4e23feb384e5cdcab5
Valid from: Thu Nov 06 19:00:00 EST 2014 until: Wed Nov 06 18:59:59 EST 2024
Certificate fingerprints:
         MD5:  71:BC:96:90:5B:38:8F:01:4C:32:90:06:90:D3:CF:51
         SHA1: 70:60:8B:40:D0:B7:76:17:4A:4E:D8:54:16:58:27:70:B3:07:B9:05
         SHA256: EC:0E:91:6E:74:AB:F1:50:D7:26:9B:A8:85:AE:6C:74:1E:48:78:55:CF:DD:00:21:B1:F9:25:0E:0F:02:40:A4
         Signature algorithm name: SHA384withRSA
         Version: 3

Extensions:

#1: ObjectId: 1.3.6.1.5.5.7.1.1 Criticality=false
AuthorityInfoAccess [
  [
   accessMethod: caIssuers
   accessLocation: URIName: http://crt.usertrust.com/USERTrustRSAAddTrustCA.crt
,
   accessMethod: ocsp
   accessLocation: URIName: http://ocsp.usertrust.com
]
]

#2: ObjectId: 2.5.29.35 Criticality=false
AuthorityKeyIdentifier [
KeyIdentifier [
0000: 53 79 BF 5A AA 2B 4A CF   54 80 E1 D8 9B C0 9D F2  Sy.Z.+J.T.......
0010: B2 03 66 CB                                        ..f.
]
]

#3: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:0
]

#4: ObjectId: 2.5.29.31 Criticality=false
CRLDistributionPoints [
  [DistributionPoint:
     [URIName: http://crl.usertrust.com/USERTrustRSACertificationAuthority.crl]
]]

#5: ObjectId: 2.5.29.32 Criticality=false
CertificatePolicies [
  [CertificatePolicyId: [1.3.6.1.4.1.6449.1.2.2.9]
[]  ]
  [CertificatePolicyId: [2.23.140.1.2.2]
[]  ]
]

#6: ObjectId: 2.5.29.37 Criticality=false
ExtendedKeyUsages [
  serverAuth
  clientAuth
]

#7: ObjectId: 2.5.29.15 Criticality=true
KeyUsage [
  DigitalSignature
  Key_CertSign
  Crl_Sign
]

#8: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: 78 29 0F AE CD 90 2C C0   DC D2 7A D4 9B 5F 9C 45  x)....,...z.._.E
0010: E0 88 A8 2C                                        ...,
]
]



*******************************************
*******************************************


Alias name: intermediate1
Creation date: Jul 31, 2017
Entry type: trustedCertEntry

Owner: CN=USERTrust RSA Certification Authority, O=The USERTRUST Network, L=Jersey City, ST=New Jersey, C=US
Issuer: CN=AddTrust External CA Root, OU=AddTrust External TTP Network, O=AddTrust AB, C=SE
Serial number: 13ea28705bf4eced0c36630980614336
Valid from: Tue May 30 06:48:38 EDT 2000 until: Sat May 30 06:48:38 EDT 2020
Certificate fingerprints:
         MD5:  DB:78:CB:D1:90:95:27:35:D9:40:BC:80:AC:24:32:C0
         SHA1: EA:B0:40:68:9A:0D:80:5B:5D:6F:D6:54:FC:16:8C:FF:00:B7:8B:E3
         SHA256: 1A:51:74:98:0A:29:4A:52:8A:11:07:26:D5:85:56:50:26:6C:48:D9:88:3B:EA:69:2B:67:B6:D7:26:DA:98:C5
         Signature algorithm name: SHA384withRSA
         Version: 3

Extensions:

#1: ObjectId: 1.3.6.1.5.5.7.1.1 Criticality=false
AuthorityInfoAccess [
  [
   accessMethod: ocsp
   accessLocation: URIName: http://ocsp.usertrust.com
]
]

#2: ObjectId: 2.5.29.35 Criticality=false
AuthorityKeyIdentifier [
KeyIdentifier [
0000: AD BD 98 7A 34 B4 26 F7   FA C4 26 54 EF 03 BD E0  ...z4.&amp;...&amp;T....
0010: 24 CB 54 1A                                        $.T.
]
]

#3: ObjectId: 2.5.29.19 Criticality=true
BasicConstraints:[
  CA:true
  PathLen:2147483647
]

#4: ObjectId: 2.5.29.31 Criticality=false
CRLDistributionPoints [
  [DistributionPoint:
     [URIName: http://crl.usertrust.com/AddTrustExternalCARoot.crl]
]]

#5: ObjectId: 2.5.29.32 Criticality=false
CertificatePolicies [
  [CertificatePolicyId: [2.5.29.32.0]
[]  ]
]

#6: ObjectId: 2.5.29.15 Criticality=true
KeyUsage [
  DigitalSignature
  Key_CertSign
  Crl_Sign
]

#7: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: 53 79 BF 5A AA 2B 4A CF   54 80 E1 D8 9B C0 9D F2  Sy.Z.+J.T.......
0010: B2 03 66 CB                                        ..f.
]
]



*******************************************
*******************************************
</code></pre>

<p>Please Suggest &amp; let me know if you need more information.</p>
","<p>It doesnt looks like you added the public certificates from CA to the same keystore.jks file. </p>

<p>Can you try to run keytool with just the list command without verbose option?</p>

<p><code>keytool -list -keystore keystore.jks -storepass &lt;your storepass&gt;</code></p>
","885","<ssl><ssl-certificate><weblogic12c><private-key><keytool>","0","1","1","2017-08-01 17:08:08","","0","","","","","2017-07-31 21:58:11",""
"52573636","PEM_read_bio_PrivateKey returns NULL","<p>I have a JSON file containing the private key (downloaded it from Google Developer Console for Service Accounts). For building JWT, when I try to load the private key as a <code>EVP_PKEY</code> structure using <code>PEM_read_bio_PrivateKey()</code>, it returns <code>NULL</code> (an error).</p>

<h1>Code</h1>

<pre class=""lang-c prettyprint-override""><code>const char *private_key = 
   json_object_get_string(json_object_object_get(token_file_obj, 
                                                   ""private_key""));
printf(""Private key --&gt; [%s]\n"", private_key);

/* Not sure whether this is needed, just added all three in case needed X-D */
OpenSSL_add_all_algorithms();
OpenSSL_add_all_ciphers();
OpenSSL_add_all_digests();

BIO *bio = BIO_new_mem_buf(private_key, (int) sizeof(private_key));
if (bio == NULL) {
    printf(""Bio is null **** \n"");
    return FAILED_OPERATION;
}

EVP_PKEY *pkey = PEM_read_bio_PrivateKey(bio, NULL, 0, NULL);
if (pkey == NULL) {
    printf(""Failed operation error code %d\n"", errno);
    return FAILED_OPERATION;
}
</code></pre>

<h1>Output</h1>

<p><strong>Note:</strong> I've changed the Private Key copied from Output.</p>

<pre><code>Private key --&gt; [-----BEGIN PRIVATE KEY-----
MIIEvAIBADANBgkqhkiG9w0BAQEFBASCBKYwggSiAgEAAoIBAQC9UzuLuU7z0XTS
aixN0uQSGxxw+Ngbm2CyRr01Fm3Zoi4Df1yoVJKxRLscJgzv4hkVzGXsniUIVuqY
peeZ9VAPdqmx1Oz3w/xPUcy6clINTRgg+/xKUQetuxplN4EY9YuQYp8PVqHO3AiZ
WE+VufX0saITyikMCGvIcNdfEky/Kf7CtniEKw1g0eHzbHdxk06wzYmvHxodVwC0
mf8lQ62uFNvw3t0TVaENm0B64NSL+7uCHPZICxJNW352eKgLxisOgV7v6xIYlFz/
O5xoThkRoychsc338/3Pscqd6HVeQkSG/T4lQTl2TFVwJHEF422d8d9ybXFQ7Xe/
qPbhd2A1AgMBAAECggEACtHDHSLHp4jgiXbOVds3s+4vA5iQ5xD712xR+0LvH6kT
qJ51TlhY8r74B22IPzw3TUbbS0ilWqLm8LbIc8SwYNXZ8EL4ENe3J0xILB6E4GQ3
vQjRe+jCDNRct4ySuNutcGCmcOC1SgZKioLgt3CDZQqytblPm7Oufyutry3zS1hQ
ntgqTbhRaI4PyUaq1b0kytoCdOvDpyfxmFBCIUcWnB6S599FG2i3mMzC2a9Fi8p2
swnYIihicdVOHBDOLVJ7kcpugP6ffZRwDc9MKxLwxgV0QwQiqWp/9r+HwYKanQjg
/R8GsPrfxyLPgN4ylA+1QdpPXeIR3AS2xw47v8HDQQKBgQDhGYcTdV1Ikoif1uKV
YYUprGbkS57kCU+uXaP2Cy1ZZJo7WP5OOc9Qp2meL7e17FL6GasxkJTmL1yzRwZD
3sXrokpGq9NCAptlOP9OsCaW1a24D1SpJuuOsyeub2YnfgyO2LWWXMsfMpAv5gqT
lSQJy1SNyuffzS+t2yUdAA/f9QKBgQDXUIL1V4GKYqHAnDnD9aNf68GNSCT4wPSp
QBcAtYZRD2re9lXgGQOwyw8N1YQvPw7tW+YK6lCwz2GAQjZcTnLvT6S6+AY2f9KL
UKTZ9G84wdAguU58qf4AU/3QlIkqTjmR7plrL/60vgNK974JG/Ndm/c9X9uTC+nA
9ECsVz6XQQKBgCy6A8rsARMQerE342HHNMxpAzDNjc7Fwt1kodWbtvESOkscjbtB
ZV4jRas21AwD3yDuxMNedRefxY2hyS7nLvB5GMUeEyYEmpfsUV5zRdemsZPnB+1s
XFXIZ1QTsnqaYyhnCv3Lhli2lUvPK77TXYvMqQpbjOM9RAIJj0BJ6N2ZAoGAOP+K
OXvoBCKKGVgB/rsXDbx2V3VCvEswOWHK9RgYv3qqWu2xHArjLDkE+i+Mt4kk5XbP
dhJDXBr5/58HjvYBfRKDVC92TZUW4mRtz3jivI6qDw+fFGdX4zRY24+GpBljKhuU
p4hkD+rBKmZc+0JX8W7pS2kF0m5z6e1+9WB/JEECDGGGE234F2dkDyPlSRfQaJMk
gf/S0Oh6tRiXcgRBRoD2523H7VU6mCy0fOc7yvVvUu2aAIWbnrJ0GwWuiB5XcsoP
9IlW6lUvCzm1FG2j1gEzU53IHE4nV9/QFnjwmrTGp863G1sGp4J8j4IGN9rebkzd
UwOpaDRE32RuQyFfP/tMqA==
-----END PRIVATE KEY-----
]
Failed operation error code 0
</code></pre>

<h1>Things I have tried</h1>

<ol>
<li>Replaced the <code>\n</code> in the private key from JSON file with newline, and compared it with the private key printed using printf(). Both had the same checksum.</li>
<li>Removed the <code>-----BEGIN PRIVATE KEY-----</code> and <code>-----END PRIVATE KEY-----</code> from the private key and tried - Did not work.</li>
</ol>
","","883","<openssl><private-key><libcrypto>","0","","0","2018-09-30 00:31:22","","3","","","","","2018-09-30 00:31:22",""
"39068609","Securely store public/private keys in a database","<p>I want to store public and private keys in a database securely.</p>

<p>My question is therefore how do I store the private key in a database securely. (public key doesn't need to be that secure anyways).</p>

<p>I have two methods currently.</p>

<ul>
<li>Add a passphrase (i.e. the user's master password) to the private key and store that as a string in the database</li>
<li>Encrypt the private key using a symmetric algorithm and store that as a string in the database</li>
</ul>

<p>Are these methods sufficient? </p>

<p>Which is better or are they the same thing? </p>

<p>Are there any better ways?</p>

<p><strong>Update</strong>
Some of you might be confused on why I want to even do this. My use case is a team based password management system. Public keys are used to encrypt a password (one for each user in a team) and private key with passphase is used to decrypt the password.</p>
","<p>The first option is likely better, because it's easier to mess up your own symmetric encryption implementation, than to use an existing one correctly. Passphrases on private keys usually mean just some form of symmetric encryption.</p>

<p>PS. I'm not sure why you're using private / public keys here. If it's for proof who uploaded the key - great. If it's for the encryption itself - why not just use symmetric encryption of the stored password instead? If all people privileged to read it know the password to the private key, then there's no big difference. The only thing you seem to gain is being able to cycle the keys without changing the passphrase everybody knows.</p>
","883","<php><security><rsa><public-key-encryption><private-key>","0","1","1","2016-08-22 01:26:11","","8","","5037551","","2016-08-22 01:26:11","2016-08-21 20:34:16","2016-08-22 04:06:26"
"46837740","Restore RSA private key by modulus, public and private exponents using Java Security","<p>I'm trying to find Java (native or BouncyCastle provider) implementation for generating a RSA private key in PKCS#1 using given params {e,n,d}.</p>

<p>There is <a href=""http://www.ams.org/notices/199902/boneh.pdf"" rel=""nofollow noreferrer"">paper</a> by Dan Boneh that describes an algorithm for doing so. The solution is available in PyCrypto (Python), as well as there is a standalone <a href=""http://rsaconverter.sourceforge.net/"" rel=""nofollow noreferrer"">utility</a> posted by Mounir IDRASSI that converts RSA keys between the SFM format (n,e,d) and CRT format (p,q,dp,dq,u), and the other way around. However I was not able to find anything ready to use for Java.</p>

<p>Update: I found such implementation at <a href=""https://github.com/martinpaljak/RSAKeyConverter/blob/master/src/opensc/RSAKeyConverter.java"" rel=""nofollow noreferrer"">https://github.com/martinpaljak/RSAKeyConverter/blob/master/src/opensc/RSAKeyConverter.java</a></p>
","<p>I provided some code in <a href=""https://stackoverflow.com/a/43147199/238704"">this</a> answer which I will reproduce here:</p>

<pre class=""lang-java prettyprint-override""><code>/**
 * Find a factor of n by following the algorithm outlined in Handbook of Applied Cryptography, section
 * 8.2.2(i). See http://cacr.uwaterloo.ca/hac/about/chap8.pdf.
 *
 */

private static BigInteger findFactor(BigInteger e, BigInteger d, BigInteger n) {
    BigInteger edMinus1 = e.multiply(d).subtract(BigInteger.ONE);
    int s = edMinus1.getLowestSetBit();
    BigInteger t = edMinus1.shiftRight(s);

    for (int aInt = 2; true; aInt++) {
        BigInteger aPow = BigInteger.valueOf(aInt).modPow(t, n);
        for (int i = 1; i &lt;= s; i++) {
            if (aPow.equals(BigInteger.ONE)) {
                break;
            }
            if (aPow.equals(n.subtract(BigInteger.ONE))) {
                break;
            }
            BigInteger aPowSquared = aPow.multiply(aPow).mod(n);
            if (aPowSquared.equals(BigInteger.ONE)) {
                return aPow.subtract(BigInteger.ONE).gcd(n);
            }
            aPow = aPowSquared;
        }
    }

}

public static RSAPrivateCrtKey createCrtKey(RSAPublicKey rsaPub, RSAPrivateKey rsaPriv) throws NoSuchAlgorithmException, InvalidKeySpecException {

    BigInteger e = rsaPub.getPublicExponent();
    BigInteger d = rsaPriv.getPrivateExponent();
    BigInteger n = rsaPub.getModulus();
    BigInteger p = findFactor(e, d, n);
    BigInteger q = n.divide(p);
    if (p.compareTo(q) &gt; 1) {
        BigInteger t = p;
        p = q;
        q = t;
    }
    BigInteger exp1 = d.mod(p.subtract(BigInteger.ONE));
    BigInteger exp2 = d.mod(q.subtract(BigInteger.ONE));
    BigInteger coeff = q.modInverse(p);
    RSAPrivateCrtKeySpec keySpec = new RSAPrivateCrtKeySpec(n, e, d, p, q, exp1, exp2, coeff);
    KeyFactory kf = KeyFactory.getInstance(""RSA"");
    return (RSAPrivateCrtKey) kf.generatePrivate(keySpec);

}
</code></pre>
","881","<rsa><private-key><cryptoapi><java-security>","2","3","1","2017-10-20 16:04:10","46841131","2","2","1741733","","2017-10-20 16:04:10","2017-10-19 19:45:14",""
"28943195","Automate deployment of SSL private key using Ansible","<p>I'm in the process of creating Ansible scripts to deploy my websites. Some of my sites use SSL for credit card transactions. I'm interested in automating the deployment of SSL as much as possible too. This means I would need to automate the distribution of the private key. In other words, the private key would have to exist in some format off the server (in revision control, for example).</p>

<p>How do I do this safely? Some ideas that I've come across:</p>

<p>1) Use a passphrase to protect the private key (<a href=""http://red-badger.com/blog/2014/02/28/deploying-ssl-keys-securely-with-ansible/"" rel=""nofollow noreferrer"">http://red-badger.com/blog/2014/02/28/deploying-ssl-keys-securely-with-ansible/</a>). This would require providing the passphrase during deployment.</p>

<p>2) Encrypt the private key file (aescrypt, openssl, pgp), similar to this: <a href=""https://security.stackexchange.com/questions/18951/secure-way-to-transfer-public-secret-key-to-second-computer"">https://security.stackexchange.com/questions/18951/secure-way-to-transfer-public-secret-key-to-second-computer</a></p>

<p>3) A third option would be to generate a new private key with each deployment and try to find a certificate provider who accommodates automatic certificate requests. This could be complicated and problematic if there are delays in the process.</p>

<p>Have I missed any? Is there a preferred solution or anyone else already doing this?</p>
","<p>Another way to do this would be to use <a href=""http://docs.ansible.com/playbooks_vault.html"" rel=""nofollow"">Ansible Vault</a> to encrypt your private keys while at rest.  This would require you to <a href=""http://docs.ansible.com/playbooks_vault.html#running-a-playbook-with-vault"" rel=""nofollow"">provide the vault password</a> either on the Ansible command line or from a text file or script that Ansible would read it from.</p>

<p>There really isn't a preferred method.  My guess is that if you asked 10 users of Ansible you'd get 10 different answers with regards to security. Since our company started using Ansible long before Ansible Vault was available we basically stored all sensitive files in local directories on servers that only our operations team has access to. At some point we might migrate to Ansible Vault since its integrated with Ansible, but we haven't gotten to that point yet.</p>
","877","<security><ssl><encryption><ansible><private-key>","0","1","1","2015-03-09 21:03:45","","2","","-1","","2017-03-17 13:14:46","2015-03-09 13:28:25",""
"46553104","Access denied: Unable to set private key permissions","<p>On our Windows Web Server 2008 R2, we are hitting 'access denied' errors when we try to update permissions on a RSA private key file.</p>

<p>Even from an <strong>elevated</strong> powershell of an admin, this fails:</p>

<pre><code>$fullpath = ""C:\ProgramData\Microsoft\Crypto\RSA\MachineKeys\.......""
$uname = ""\network service""
icacls $fullpath /grant $uname`:RX
</code></pre>

<p>Error:</p>

<pre><code>Access denied.
</code></pre>

<p>What local-policy permissions are we missing?</p>
","<p>Fixed the issue. We first needed to take ownership of the file.</p>

<pre><code>takeown /F &lt;filename&gt;
</code></pre>
","874","<server><windows-server-2008-r2><private-key>","1","0","1","2017-10-03 21:34:34","","0","","","","","2017-10-03 20:43:49",""
"18323528","RSA Private and Public Keys have the same cipher text when encrypted with AES 256?","<p>Is it normal that the keypair of RSA (private and public) have the same ciphertext when I encrypt them with AES 256?</p>

<p>In fact I'm using PHP:</p>

<pre><code>&lt;?php


$key=""abc"";

$config = array(
    ""digest_alg"" =&gt; ""sha512"",
    ""private_key_bits"" =&gt; 4096,
    ""private_key_type"" =&gt; OPENSSL_KEYTYPE_RSA,
);

// Create the private and public key
$res = openssl_pkey_new($config);

// Extract the private key from $res to $privKey
openssl_pkey_export($res, $privKey);

// Extract the public key from $res to $pubKey
$pubKey = openssl_pkey_get_details($res);
$pubKey= $pubKey[""key""];


   aes256Key = hash(""SHA256"", $password, true);

// for good entropy (for MCRYPT_RAND)
srand((double) microtime() * 1000000);
// generate random iv
$iv = mcrypt_create_iv(mcrypt_get_iv_size(MCRYPT_RIJNDAEL_256, MCRYPT_MODE_CBC), MCRYPT_RAND);






   $crypted_priv= rtrim(base64_encode(mcrypt_encrypt(MCRYPT_RIJNDAEL_256, $key, $privKey, MCRYPT_MODE_CBC, $iv)), ""\0\3"");
   $crypted_pub= rtrim(base64_encode(mcrypt_encrypt(MCRYPT_RIJNDAEL_256, $key, $pubKey, MCRYPT_MODE_CBC, $iv)), ""\0\3"");



?&gt;
</code></pre>

<p><strong>UPDATE: I replaced ECB with CBC and hope its correct...</strong></p>
","<p>You are not getting the public key with <code>openssl_pkey_get_details()</code>. That structure contains both the public exponent <code>e</code> and private exponent <code>d</code>. It is normal that the private key also contains the public exponent. Most of the time that is a static value (such as 65537, the fourth number of Fermat).</p>

<p>According to the documentation of <code>openssl_pkey_new</code> you can get to the public key using the method <code>openssl_pkey_new()</code>:</p>

<blockquote>
  <p>openssl_pkey_new() generates a new private and public key pair. The public component of the key can be obtained using openssl_pkey_get_public().</p>
</blockquote>

<p>That's not the only thing that goes wrong though:</p>

<ol>
<li>You are not using AES. Rijndael with a <em>block size</em> of 256 is not AES. AES has a block size of 128 bits.</li>
<li>Although <code>mcrypt</code> always expects an IV, ECB mode does not - but read on.</li>
<li>ECB mode is not secure for anything other than random data, you should be using CBC mode to encrypt asymmetric keys (as they almost always contain a structure that may leak information); CBC mode does require a random IV.</li>
<li>You are using the ASCII representation of a string instead of an AES key; you should use a Password Based Key Derivation function such as PBKDF2, bcrypt or scrypt instead. PHP <code>mcrypt</code> is far too forgiving regarding insecure keys.</li>
</ol>

<p>Note that in general I would also advise a padding mode such as PKCS#7. Mcrypt however does not implement any sane padding method, so you would have to implement that yourself.</p>
","860","<encryption><aes><rsa><private-key><public-key>","0","1","2","2013-08-22 04:03:30","","6","","1436172","","2013-08-20 13:16:06","2013-08-19 21:34:30",""
"18323528","RSA Private and Public Keys have the same cipher text when encrypted with AES 256?","<p>Is it normal that the keypair of RSA (private and public) have the same ciphertext when I encrypt them with AES 256?</p>

<p>In fact I'm using PHP:</p>

<pre><code>&lt;?php


$key=""abc"";

$config = array(
    ""digest_alg"" =&gt; ""sha512"",
    ""private_key_bits"" =&gt; 4096,
    ""private_key_type"" =&gt; OPENSSL_KEYTYPE_RSA,
);

// Create the private and public key
$res = openssl_pkey_new($config);

// Extract the private key from $res to $privKey
openssl_pkey_export($res, $privKey);

// Extract the public key from $res to $pubKey
$pubKey = openssl_pkey_get_details($res);
$pubKey= $pubKey[""key""];


   aes256Key = hash(""SHA256"", $password, true);

// for good entropy (for MCRYPT_RAND)
srand((double) microtime() * 1000000);
// generate random iv
$iv = mcrypt_create_iv(mcrypt_get_iv_size(MCRYPT_RIJNDAEL_256, MCRYPT_MODE_CBC), MCRYPT_RAND);






   $crypted_priv= rtrim(base64_encode(mcrypt_encrypt(MCRYPT_RIJNDAEL_256, $key, $privKey, MCRYPT_MODE_CBC, $iv)), ""\0\3"");
   $crypted_pub= rtrim(base64_encode(mcrypt_encrypt(MCRYPT_RIJNDAEL_256, $key, $pubKey, MCRYPT_MODE_CBC, $iv)), ""\0\3"");



?&gt;
</code></pre>

<p><strong>UPDATE: I replaced ECB with CBC and hope its correct...</strong></p>
","<p>There are already formats for storing private keys encrypted. eg.</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: DES-EDE3-CBC,E3B1C06E0D0C2633

gvmXzl6W7eV1a3N5rQNwBWKY9on3IgxZudS33cip5f88FotsPSDJMvqj6LVw2RxobDjhlOOzqmTb
VrlTnoQ6CogXFZSfiPmixiyyptCUEKJkSiEhYGM5GQm0OoGcLeLbgBb9tRpWh5IlXulKD6XFhx8q
/eGg5a+mSkX1i7kv2+Ih3jHmEKwrnfzhcA29pBF3OQJo+Ks9IYneuk676pHtsIs7CpFKq1tDvD8Q
O7URxnVnHLltaFvIxshqyZu92xbUYZR7YzjXl5+3w4TVgeAHUogEV+H9iZTosD/copUsbQO+78w2
E1D3iDS94wRgx0Tjv4xlwrTpOV38FS5rdL32492DcCRlCYM4VtuwjYeWi5shJg69jCb0EwGRqfAo
xko+lbKWELTuFKwD7n1rc/2fTarbGuf8S2AEggBLZyfXHC/9N84mXLFO2XKq+0WdiEFhQj2Cze+a
9qcSK6tPSrjK1LPlnOOppFgDElZaZ0rxsgjtiWSIAEw/Ad+SIM5u+vqwzF8J317JlsdKoBFDw8mS
MxCMuMksKJ23mgvY+THRIVgH3E7lEDZQzCi1Uy6ldLJcran/6wHwP88pVM2odiHkpnrJGcEBbbIk
qsxJZhFT8aUt/cUEBj3fnP7cxoNLQfTHMPqUTqKBWaVufFzGU9YB1R+XWFULLddwJHnV7gPheBlk
MDapowb+Is77+a9Y2VDsOXEvNpqTY0giiSrckG05IZnrhJ24JnSCwyNd99lm7XKdEGGrjBCMqIyI
Fqox8Ahkv3KWAJPYK1eOCc5d/KwZHlnlFJq7ZYy9u3fEnxQCjOEmeXLkLangKA==
-----END RSA PRIVATE KEY-----
</code></pre>

<p>...or stronger yet...</p>

<pre><code>PuTTY-User-Key-File-2: ssh-rsa
Encryption: aes256-cbc
Comment: phpseclib-generated-key
Public-Lines: 3
AAAAB3NzaC1yc2EAAAADAQABAAAAgQCqGKukO1De7zhZj6+H0qtjTkVxwTCpvKe4
eCZ0FPqri0cb2JZfXJ/DgYSF6vUpwmJG8wVQZKjeGcjDOL5UlsuusFncCzWBQ7RK
NUSesmQRMSGkVb1/3j+skZ6UtW+5u09lHNsj6tQ51s1SPrCBkedbNf0Tp0GbMJDy
R4e9T04ZZw==
Private-Lines: 7
llx04QMegql0/nE5RvcJSrGrodxt6ytuv/JX2caeZBUyQwQc2WBNYagLHyHPM9jI
9OUWz59FLhjFXZMDNMoUXxVmjwQpOAaVPYNxxFM9AF6/NXFji64K7huD9n4A+kLn
sHwMLWPR5a/tZA0r05DZNz9ULA3mQu7Hz4EQ8ifu3uTPJuTmL51x6RmudYKysb20
fM8VzC3ukvzzRh0pujUVTr/yQdmciASVFnZlt4xQy+ZEOVUAOfwjd//AFfXTvk6x
7A45rNlU/uicHwLgoY1APvRHCFxw7F+uVW5L4mSX7NNzqBKkZ+1qpQTAfQvIfEIb
444+CXsgIyOpqt6VxJH2u6elAtE1wau3YaFR8Alm8m97rFYzRi3oDP5NZYkTCWSV
EOpSeghXSs7IilJu8I6/sB1w5dakdeBSFkIynrlFXkO0uUw+QJJWjxY8SypzgIuP
DzduF6XsQrCyo6dnIpGQCQ==
Private-MAC: 35134b7434bf828b21404099861d455e660e8740
</code></pre>

<p>You should stick with an already standardized format rather than trying to make your own up.</p>

<p>And why are you encrypting the public key? As the name implies the public key is kinda supposed to be public ;)</p>
","860","<encryption><aes><rsa><private-key><public-key>","0","1","2","2013-08-22 04:03:30","","6","","1436172","","2013-08-20 13:16:06","2013-08-19 21:34:30",""
"10642989","What, if any ""screw it up permanently"" situations are there in the App Store certificate/key-pair code signing process?","<p>My company works with several other companies to handle their iPhone development needs, and in many cases the other companies already have some existing app(s) on the App Store. </p>

<p>We handle the App Store submission for them as well and in the situations where they do already have an existing app, their iOS Dev Center account already has a Distribution certificate created. In which case we have to acquire the key pair that was generated when they (or the third party developer they hired) created the certificate. It's been my understanding this whole time that this is the necessary process in order to work with the App Store. </p>

<p>But as time goes on, I find myself wondering about several things</p>

<ol>
<li><p>What happens when the certificates expire? I know we create new ones but that means that the apps on the App Store are signed with a certificate/keypair different than the one they were created with. Is that significant? Or can I still update existing apps on the App Store even with a new certificate/keypair (from the same iOS Dev Center account)</p></li>
<li><p>What happens if the the keypair is lost for an existing certificate? Let's say the company made an app before but the Macintosh that they used prior was hit by a meteorite. And no backups of course. I'd have to revoke and recreate the certificate - would that mean anything for the existing published app? If I had the source code to that app and had to put out an update, would I be able to? </p></li>
</ol>

<p>Basically I'm asking: are there any ""screw it up permanently"" scenarios involved with iOS development and distribution certificates that would keep you from being able to update existing apps? I know that if you don't backup the keystore in Android development then you're just hosed with regards to publishing updates but is there any way to just completely screw up with iOS development?</p>

<p>And a bonus question: If I can just revoke development certificates and re-issue them without consequence, has it always worked this way? Or have they modified the process? I can see where the ""chain of evidence"" could always be tied to the iOS Dev Center Agent account and that would be the root of things, but is this a new thing?</p>
","<p>A Distribution certificate is used only for submission to iTunes Connect (and Ad Hoc stuff).  Once approved, Apple signs the app with a different non-expiring certificate before putting the app in the App store, so the state of the developer's Distribution certificate no longer matters.  </p>

<p>A downloaded or purchased app will stay running on a customer's device even if the developer's certificates and iOS enrollment expires.  But a developer does have to re-enroll ($99/annum) in time if they want their app to stay visible in the App store.</p>

<p>Typically, Distribution certificates expire annually, maybe a bit more often, new ones can be created, and an updates for existing apps can just be submitted with the newest (and valid) Distribution certificate.</p>

<p>If you lose a key pair, the team leader will have to revoke and the generate new certificates and provisions, and update all their Keychains and Xcode provisioning and possibly project/target settings as well.  Confusion about which certificates and provisions are live and which are dead has caused some developers some serious headaches.</p>
","859","<ios><app-store><certificate><private-key><public-key>","6","7","1","2012-05-17 22:40:53","10644455","1","","","","","2012-05-17 20:26:03",""
"2360663","How do I convert from an OpenSSH key to PuTTY format in C#?","<p>I have a key generated by SharpSSH in OpenSSH format.  How do I convert it to PuTTY format in C#?</p>
","<p>See <a href=""http://linux.die.net/man/1/puttygen"" rel=""nofollow noreferrer"">here</a> for how to use puttygen on linux. </p>

<p>You should be able to take the source code for this or the windows version and  and create a windows DLL if one is not available. Then you can pinvoke to access it.</p>

<p>I downloaded the sources from <a href=""http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html"" rel=""nofollow noreferrer"">here</a>.</p>
","846","<c#><putty><private-key>","0","0","1","2014-04-26 08:37:47","2360779","0","0","850848","","2014-04-26 08:37:47","2010-03-02 03:08:41",""
"14332122","How to create PrivateKey from a password protected private key file?","<p>I have a password protected private key file(I have the passowrd).</p>

<p>I need to put it in java.security.PrivateKey format. Can anyone tell me what is the most secure way to do it?</p>
","<p>If the key (with the certificates) is stored in PKCS#12 you can use the <a href=""http://docs.oracle.com/javase/6/docs/api/java/security/KeyStore.html"" rel=""nofollow"">KeyStore</a> from Java.</p>

<p>Else bouncy castle could help you (I've no experience with bouncy castle).</p>
","844","<java><private-key>","0","1","1","2013-01-15 07:27:14","14332933","2","","","","","2013-01-15 06:18:53",""
"43240492","aws permission denied (publickey) new instance","<p>I made a new EC2 instance on AWS including a new key pair and adding SSH to the security group. Here's the output trace: </p>

<blockquote>
  <p>ssh.exe : OpenSSH_7.1p2, OpenSSL 1.0.2h  3 May 2016 At line:1 char:4
  + ssh &lt;&lt;&lt;&lt;  -v -i .\CHEFtutorial.pem ec2-54-148-153-153.us-west-2.compute.amazo naws.com 2> out.txt
      + CategoryInfo          : NotSpecified: (OpenSSH_7.1p2, ....2h  3 May 2016     :String) [], RemoteException
      + FullyQualifiedErrorId : NativeCommandError   debug1: Reading configuration data /etc/ssh/ssh_config</p>
  
  <p>debug1: Connecting to
  ec2-54-148-153-153.us-west-2.compute.amazonaws.com [54.14
  8.153.153] port 22.</p>
  
  <p>debug1: Connection established.</p>
  
  <p>debug1: key_load_public: No such file or directory</p>
  
  <p>debug1: identity file .\CHEFtutorial.pem type -1</p>
  
  <p>debug1: key_load_public: No such file or directory</p>
  
  <p>debug1: identity file .\CHEFtutorial.pem-cert type -1</p>
  
  <p>debug1: Enabling compatibility mode for protocol 2.0</p>
  
  <p>debug1: Local version string SSH-2.0-OpenSSH_7.1</p>
  
  <p>debug1: Remote protocol version 2.0, remote software version
  OpenSSH_7.2p2 Ubun tu-4ubuntu2.1</p>
  
  <p>debug1: match: OpenSSH_7.2p2 Ubuntu-4ubuntu2.1 pat OpenSSH* compat
  0x04000000 debug1: Authenticating to
  ec2-54-148-153-153.us-west-2.compute.amazonaws.com:22  as 'i861009'</p>
  
  <p>debug1: SSH2_MSG_KEXINIT sent</p>
  
  <p>debug1: SSH2_MSG_KEXINIT received</p>
  
  <p>debug1: kex: server->client chacha20-poly1305@openssh.com 
  none</p>
  
  <p>debug1: kex: client->server chacha20-poly1305@openssh.com 
  none</p>
  
  <p>debug1: expecting SSH2_MSG_KEX_ECDH_REPLY</p>
  
  <p>debug1: Server host key: ecdsa-sha2-nistp256
  SHA256:8jkpw+J1G8Lx8eamhiOYm0xTtCA
  +ElsRgJznVyK7Rnw</p>
  
  <p>debug1: Host 'ec2-54-148-153-153.us-west-2.compute.amazonaws.com' is
  known and  matches the ECDSA host key.</p>
  
  <p>debug1: Found key in /c/Users/i861009/.ssh/known_hosts:2</p>
  
  <p>debug1: SSH2_MSG_NEWKEYS sent</p>
  
  <p>debug1: expecting SSH2_MSG_NEWKEYS</p>
  
  <p>debug1: SSH2_MSG_NEWKEYS received</p>
  
  <p>debug1: SSH2_MSG_SERVICE_REQUEST sent</p>
  
  <p>debug1: SSH2_MSG_SERVICE_ACCEPT received</p>
  
  <p>debug1: Authentications that can continue: publickey</p>
  
  <p>debug1: Next authentication method: publickey debug1: Trying private
  key: .\CHEFtutorial.pem</p>
  
  <p>debug1: Authentications that can continue: publickey</p>
  
  <p>debug1: No more authentication methods to try. Permission denied
  (publickey).</p>
</blockquote>

<p>The input was <code>ssh -v -i .\CHEFtutorial.pem ec2-54-148-153-153.us-west-2.compute.amazonaws.com</code>. For what reason would the server be rejecting the key? I have not played with any permissions information, which other answers to this question have noted as an issue. </p>
","<p>You have to also mention the name of the user you're doing ssh to on that server.</p>

<p>E.g. if the machine is an Ubuntu instance I'll have to do </p>

<p>ssh -v -i .\CHEFtutorial.pem ubuntu@ec2-54-148-153-153.us-west-2.compute.amazonaws.com</p>

<p>Try to find out the corresponding user for your machine. You can get it in AWS docs, I guess. Then just prefix <strong>username@</strong> before the server address.</p>
","835","<amazon-web-services><ssh><amazon-ec2><private-key>","-1","0","2","2017-04-06 09:38:36","","0","","","","","2017-04-05 19:56:36",""
"43240492","aws permission denied (publickey) new instance","<p>I made a new EC2 instance on AWS including a new key pair and adding SSH to the security group. Here's the output trace: </p>

<blockquote>
  <p>ssh.exe : OpenSSH_7.1p2, OpenSSL 1.0.2h  3 May 2016 At line:1 char:4
  + ssh &lt;&lt;&lt;&lt;  -v -i .\CHEFtutorial.pem ec2-54-148-153-153.us-west-2.compute.amazo naws.com 2> out.txt
      + CategoryInfo          : NotSpecified: (OpenSSH_7.1p2, ....2h  3 May 2016     :String) [], RemoteException
      + FullyQualifiedErrorId : NativeCommandError   debug1: Reading configuration data /etc/ssh/ssh_config</p>
  
  <p>debug1: Connecting to
  ec2-54-148-153-153.us-west-2.compute.amazonaws.com [54.14
  8.153.153] port 22.</p>
  
  <p>debug1: Connection established.</p>
  
  <p>debug1: key_load_public: No such file or directory</p>
  
  <p>debug1: identity file .\CHEFtutorial.pem type -1</p>
  
  <p>debug1: key_load_public: No such file or directory</p>
  
  <p>debug1: identity file .\CHEFtutorial.pem-cert type -1</p>
  
  <p>debug1: Enabling compatibility mode for protocol 2.0</p>
  
  <p>debug1: Local version string SSH-2.0-OpenSSH_7.1</p>
  
  <p>debug1: Remote protocol version 2.0, remote software version
  OpenSSH_7.2p2 Ubun tu-4ubuntu2.1</p>
  
  <p>debug1: match: OpenSSH_7.2p2 Ubuntu-4ubuntu2.1 pat OpenSSH* compat
  0x04000000 debug1: Authenticating to
  ec2-54-148-153-153.us-west-2.compute.amazonaws.com:22  as 'i861009'</p>
  
  <p>debug1: SSH2_MSG_KEXINIT sent</p>
  
  <p>debug1: SSH2_MSG_KEXINIT received</p>
  
  <p>debug1: kex: server->client chacha20-poly1305@openssh.com 
  none</p>
  
  <p>debug1: kex: client->server chacha20-poly1305@openssh.com 
  none</p>
  
  <p>debug1: expecting SSH2_MSG_KEX_ECDH_REPLY</p>
  
  <p>debug1: Server host key: ecdsa-sha2-nistp256
  SHA256:8jkpw+J1G8Lx8eamhiOYm0xTtCA
  +ElsRgJznVyK7Rnw</p>
  
  <p>debug1: Host 'ec2-54-148-153-153.us-west-2.compute.amazonaws.com' is
  known and  matches the ECDSA host key.</p>
  
  <p>debug1: Found key in /c/Users/i861009/.ssh/known_hosts:2</p>
  
  <p>debug1: SSH2_MSG_NEWKEYS sent</p>
  
  <p>debug1: expecting SSH2_MSG_NEWKEYS</p>
  
  <p>debug1: SSH2_MSG_NEWKEYS received</p>
  
  <p>debug1: SSH2_MSG_SERVICE_REQUEST sent</p>
  
  <p>debug1: SSH2_MSG_SERVICE_ACCEPT received</p>
  
  <p>debug1: Authentications that can continue: publickey</p>
  
  <p>debug1: Next authentication method: publickey debug1: Trying private
  key: .\CHEFtutorial.pem</p>
  
  <p>debug1: Authentications that can continue: publickey</p>
  
  <p>debug1: No more authentication methods to try. Permission denied
  (publickey).</p>
</blockquote>

<p>The input was <code>ssh -v -i .\CHEFtutorial.pem ec2-54-148-153-153.us-west-2.compute.amazonaws.com</code>. For what reason would the server be rejecting the key? I have not played with any permissions information, which other answers to this question have noted as an issue. </p>
","<p>Please make sure the permission of the pem file is 400</p>

<p>Go the Directory where pem file exist and execute</p>

<pre><code>sudo chmod 400 CHEFtutorial.pem
</code></pre>

<p>then execute</p>

<pre><code>ssh -v -i CHEFtutorial.pem username@ec2-54-148-153-153.us-west-2.compute.amazonaws.com
</code></pre>

<p>If it is an ubuntu servers provide <code>username</code> as <code>ubuntu</code> and for rhel or centos servers provide username as <code>ec2-user</code>.</p>

<p>Note:- if the owner of the pem file is root , provide the command with <code>sudo</code></p>
","835","<amazon-web-services><ssh><amazon-ec2><private-key>","-1","0","2","2017-04-06 09:38:36","","0","","","","","2017-04-05 19:56:36",""
"41735839","What is the mechanism of private key for decryption in PKCS11","<p>Here is some part of my code</p>

<p>I already encrypt some text from another app VB.net via RSACryptoProvider</p>

<p>But I stuck at the step to decrypt in C.</p>

<p>Here is my code.</p>

<pre><code>static CK_RV usePrivateKeytoDecrypt(CK_SESSION_HANDLE hSession, CK_OBJECT_HANDLE hObject) {
CK_RV rv = CKR_OK;
CK_MECHANISM mechanism = {
    {CKM_RSA_PKCS_OAEP}
};

rv = C_DecryptInit(hSession, &amp;mechanism, hObject);

return rv;
</code></pre>

<p>}</p>

<p>The code is not completed. I try to debug and got the error CKR_MECHANISM_PARAM_INVALID</p>

<p>Please help. Thanks</p>
","<p>It depends on the algorithm of the Key Pair.</p>

<p>If the Key Pair's algorithm is <strong>RSA</strong>, it could be <strong>CKM_RSA_PKCS</strong> / <strong>CKM_RSA_PKCS_OAEP</strong> / <strong>CKM_RSA_X_509</strong>.</p>

<p>If the Key Pair's algorithm is <strong>EC</strong>, it could be <strong>CKM_ECDSA</strong>.</p>

<p>Provided, the Private Key has the attribute <strong>CKA_DECRYPT</strong> set to true.</p>

<p>You can refer to this <a href=""http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/csprd02/pkcs11-curr-v2.40-csprd02.html"" rel=""nofollow noreferrer"">documentation</a> here.</p>
","827","<encryption><rsa><private-key><pkcs#11>","0","0","2","2017-01-21 23:36:46","","2","","","","","2017-01-19 07:13:16",""
"41735839","What is the mechanism of private key for decryption in PKCS11","<p>Here is some part of my code</p>

<p>I already encrypt some text from another app VB.net via RSACryptoProvider</p>

<p>But I stuck at the step to decrypt in C.</p>

<p>Here is my code.</p>

<pre><code>static CK_RV usePrivateKeytoDecrypt(CK_SESSION_HANDLE hSession, CK_OBJECT_HANDLE hObject) {
CK_RV rv = CKR_OK;
CK_MECHANISM mechanism = {
    {CKM_RSA_PKCS_OAEP}
};

rv = C_DecryptInit(hSession, &amp;mechanism, hObject);

return rv;
</code></pre>

<p>}</p>

<p>The code is not completed. I try to debug and got the error CKR_MECHANISM_PARAM_INVALID</p>

<p>Please help. Thanks</p>
","<p>You are not correctly initializing your mechanism structure. The CK_MECHANISM is a structure that requires 3 parameters to be defined:</p>

<pre><code>typedef struct CK_MECHANISM {
  CK_MECHANISM_TYPE mechanism;
  CK_VOID_PTR       pParameter;
  CK_ULONG          ulParameterLen;  /* in bytes */
} CK_MECHANISM;
</code></pre>

<p>You need to initialize your mechanism as follow:</p>

<pre><code>CK_MECHANISM  mechanism = { CKM_RSA_PKCS_OAEP, NULL_PTR, 0 };
</code></pre>

<p>If you generated your private-public key-pair as RSA key-pair (using CKM_RSA_PKCS_KEY_PAIR_GEN mechanism) e.g.</p>

<pre><code>CK_MECHANISM  GenMechanism = { CKM_RSA_PKCS_KEY_PAIR_GEN, NULL_PTR, 0 };
</code></pre>

<p>Then you need to initialize your mechanism for decryption as follow:</p>

<pre><code>CK_MECHANISM  mechanism   = { CKM_RSA_PKCS, NULL_PTR, 0};
</code></pre>

<p>I presume you are already logged in with your hsession and the hObject is the located private key to be used for decryption? </p>
","827","<encryption><rsa><private-key><pkcs#11>","0","0","2","2017-01-21 23:36:46","","2","","","","","2017-01-19 07:13:16",""
"16710384","keystore getEntry returns null second time","<p>In my request doPost I have the following code.</p>

<pre><code>        File file = new File(""C:\\temp\\HelloWorld.P12"");
        is = new FileInputStream(file);
        String password = ""helloworld"";
        KeyStore keystore = KeyStore.getInstance(""PKCS12"");
        keystore.load(is, password.toCharArray());
        KeyStore.PrivateKeyEntry pkEntry = (KeyStore.PrivateKeyEntry)
                keystore.getEntry(""hello"", new KeyStore.PasswordProtection(""helloworld"".toCharArray()));
</code></pre>

<p>For the first request <code>pkEntry</code> returns NOT NULL value and I am able to get private key.  But second time it returns NULL so I am unable to get private key from second request onwards.  What do I need to do to get <code>pkEntry</code> NOT NULL for every request?</p>
","<p>Load certificate code into the static block inside, loaded only once.</p>
","825","<java><security><keystore><private-key>","0","0","1","2014-10-13 03:56:09","","2","","2341993","","2013-05-23 11:06:47","2013-05-23 09:35:34",""
"34386901","Java: write and read password based encrypted private key","<p>I am trying to read a password based encrypted private key from a file, but I'm getting the following exception:</p>

<pre><code>java.io.IOException: DerInputStream.getLength(): lengthTag=109, too big.
at sun.security.util.DerInputStream.getLength(DerInputStream.java:561)
at sun.security.util.DerValue.init(DerValue.java:365)
at sun.security.util.DerValue.&lt;init&gt;(DerValue.java:294)
at javax.crypto.EncryptedPrivateKeyInfo.&lt;init&gt;(EncryptedPrivateKeyInfo.java:84) ...
</code></pre>

<p>This is how I encrypt and write to file the private key:</p>

<pre><code>public static void savePrivateKeyToDisk(PrivateKey privateKey, String passord){

    try {
        // unencrypted PKCS#8 private key
        byte[] encodedPrivateKey = privateKey.getEncoded();

        String MYPBEALG = ""PBEWithSHA1AndDESede"";

        int count = 20;
        SecureRandom random = new SecureRandom();
        byte[] salt = new byte[8];
        random.nextBytes(salt);

        // Create PBE parameter set
        PBEParameterSpec pbeParamSpec = new PBEParameterSpec(salt, count);
        PBEKeySpec pbeKeySpec = new PBEKeySpec(password.toCharArray());
        SecretKeyFactory keyFac = SecretKeyFactory.getInstance(MYPBEALG);
        SecretKey pbeKey = keyFac.generateSecret(pbeKeySpec);

        Cipher pbeCipher = Cipher.getInstance(MYPBEALG);

        // Initialize PBE Cipher with key and parameters
        pbeCipher.init(Cipher.ENCRYPT_MODE, pbeKey, pbeParamSpec);

        // Encrypt the encoded Private Key with the PBE key
        byte[] cipherText = pbeCipher.doFinal(encodedPrivateKey);

        // Now construct  PKCS #8 EncryptedPrivateKeyInfo object
        AlgorithmParameters algparms = AlgorithmParameters.getInstance(MYPBEALG);
        algparms.init(pbeParamSpec);
        EncryptedPrivateKeyInfo encinfo = new EncryptedPrivateKeyInfo(algparms, cipherText);

        // DER encoded PKCS#8 encrypted key
        byte[] encryptedPkcs8 = encinfo.getEncoded();


        File encryptedPrivate = new File(PRIVATE_KEY_FILE);

        if (encryptedPrivate.getParentFile() != null) {
            encryptedPrivate.getParentFile().mkdirs();
        }
        encryptedPrivate.createNewFile();

        ObjectOutputStream publicKeyOS = new ObjectOutputStream(
                new FileOutputStream(encryptedPrivate));
        publicKeyOS.writeObject(encryptedPkcs8);
        publicKeyOS.close();

    }
    catch (Exception e){
        e.printStackTrace();
    }
}
</code></pre>

<p>... and this is how I'm trying to read the encrypted private key:</p>

<pre><code>public static PrivateKey getPrivateKey(String passwd){
    try {

        byte[] encodedPrivateKey = getFileBytes(PRIVATE_KEY_FILE);

        // exception thrown from here
        EncryptedPrivateKeyInfo encryptPKInfo = new EncryptedPrivateKeyInfo(encodedPrivateKey);

        Cipher cipher = Cipher.getInstance(encryptPKInfo.getAlgName());
        PBEKeySpec pbeKeySpec = new PBEKeySpec(passwd.toCharArray());
        SecretKeyFactory secFac = SecretKeyFactory.getInstance(encryptPKInfo.getAlgName());
        Key pbeKey = secFac.generateSecret(pbeKeySpec);
        AlgorithmParameters algParams = encryptPKInfo.getAlgParameters();
        cipher.init(Cipher.DECRYPT_MODE, pbeKey, algParams);
        KeySpec pkcs8KeySpec = encryptPKInfo.getKeySpec(cipher);
        KeyFactory kf = KeyFactory.getInstance(ALGORITHM);
        return kf.generatePrivate(pkcs8KeySpec);
    }
    catch (Exception e){
        e.printStackTrace();
        return null;
    }
}
</code></pre>

<p>... the getFileBytes method:</p>

<pre><code> private static byte[] getFileBytes(String infile){
    File f = new File(infile) ;
    int sizecontent = ((int) f.length());
    byte[] data = new byte[sizecontent];
    try
    {
        FileInputStream freader = new FileInputStream(f);
        freader.read(data, 0, sizecontent) ;
        freader.close();
        return data;
    }
    catch(IOException ioe)
    {
        System.out.println(ioe.toString());
        return null;
    }
}
</code></pre>

<p>It seems like the encrypted private key is not in the right format, but I save it in DER PKCS#8 format.
So, the question: What is the mistake in this code?</p>
","<p>I guess the problem is that you write an <code>Object</code>, but then you read <code>byte[]</code> (not an <code>Object</code>)
I would suggest that you either read the whole object and then get the required bytes or even better write <code>byte[]</code> directly (don't use <code>ObjectOutputStream</code>) and then load these bytes, eg:</p>

<pre><code>FileOutputStream fos = new FileOutputStream(PRIVATE_KEY_FILE);
fos.write(myByteArray);
fos.close();
</code></pre>

<p>and then to retrieve it:</p>

<pre><code>byte[] bytes = Files.readAllBytes(Paths.get(PRIVATE_KEY_FILE));
</code></pre>
","825","<java><encryption><private-key>","1","0","1","2015-12-20 23:40:27","34387166","1","2","","","","2015-12-20 23:07:19",""
"45164042","How To Store RSA private,public keys","<p>I am developing an android messaging app. When user signup rsa private and public key are generated and with these keys and aes messages are encrypted and decrypted.</p>

<p>Private key is stored in the phone and public key in the server. If the user resets or uninstall the app all keys are lost so there is no way to decrypt the old messages. </p>

<p>How can I retrieve old private keys without storing it in server when user uninstalls app?</p>
","<p>There are various ways to persist data in Android. Databases, SavedInstanceState, SharePreferences and files. Only files persist after you application is unInstalled by the user. Saving it in a file is about the only option you have.</p>
","824","<android><encryption><rsa><private-key>","0","1","2","2017-07-18 13:38:34","","0","","209103","","2017-07-18 13:38:34","2017-07-18 10:24:49",""
"45164042","How To Store RSA private,public keys","<p>I am developing an android messaging app. When user signup rsa private and public key are generated and with these keys and aes messages are encrypted and decrypted.</p>

<p>Private key is stored in the phone and public key in the server. If the user resets or uninstall the app all keys are lost so there is no way to decrypt the old messages. </p>

<p>How can I retrieve old private keys without storing it in server when user uninstalls app?</p>
","<p>Are you using Android Keystore to store the keys or using your own file storage? </p>

<p><strong>Android keystore</strong></p>

<p>With Android Keystore there is no way to recover keys because they can only be used by the application that created them and are discarded if there are substantial changes. </p>

<p>I guess you are using the RSA keys to negotiate an AES symmetric encryption key. Therefore you will need to backup the AES encryption key( for example in the server...),  and stablish a mechanism to recover the key like the common ""remember password"" utilities</p>

<p><strong>custom key storage</strong></p>

<p>If you are storing the keys into the device without AndroidKeystore, you could define your own mechanism to restore the keys. For example, encrypt the key with a password and storing the key into a public directory of the device. Then the key can be recovered prompting user for the password</p>

<p><strong>Note</strong>: Take into account the security risks in each case. For example a non-encrypted AES keys into server implies that a malicious server could decrypt messages. Or a weak recovery key mechanism will descrease the whole security level of the system</p>
","824","<android><encryption><rsa><private-key>","0","1","2","2017-07-18 13:38:34","","0","","209103","","2017-07-18 13:38:34","2017-07-18 10:24:49",""
"34400522","BIO_new_mem_buf failed to create EVP_PKEY Key``","<p>I need to create a EVP_PKEY Key containing private key.
Initially Private Key in PEM format is stored in variable                                                  pKey. </p>

<p>Now i am trying to create a EVP_PKEY Key using BIO mem. </p>

<pre><code> EVP_PKEY *privkey;
 BIO *mem;
 mem = BIO_new_mem_buf(pKey, -1); 
 privkey = PEM_read_bio_PrivateKey(mem, NULL, NULL, 0);
</code></pre>

<p>Why is PEM_read_bio_PrivateKey returning NULL?</p>

<pre><code> pKey contains valid Key bytes in PEM format. 
</code></pre>

<p>what could be the possible reason of PEM_read_bio_PrivateKey() failing?</p>
","<p>It's because the BIO is at the end of it's contents and needs to be rewound - see <a href=""https://www.openssl.org/docs/manmaster/crypto/BIO_s_mem.html"" rel=""nofollow"">https://www.openssl.org/docs/manmaster/crypto/BIO_s_mem.html</a> (under bugs)</p>
","819","<c><openssl><private-key>","1","0","2","2016-03-15 17:35:02","","2","","4658000","","2015-12-22 09:15:38","2015-12-21 16:45:50",""
"34400522","BIO_new_mem_buf failed to create EVP_PKEY Key``","<p>I need to create a EVP_PKEY Key containing private key.
Initially Private Key in PEM format is stored in variable                                                  pKey. </p>

<p>Now i am trying to create a EVP_PKEY Key using BIO mem. </p>

<pre><code> EVP_PKEY *privkey;
 BIO *mem;
 mem = BIO_new_mem_buf(pKey, -1); 
 privkey = PEM_read_bio_PrivateKey(mem, NULL, NULL, 0);
</code></pre>

<p>Why is PEM_read_bio_PrivateKey returning NULL?</p>

<pre><code> pKey contains valid Key bytes in PEM format. 
</code></pre>

<p>what could be the possible reason of PEM_read_bio_PrivateKey() failing?</p>
","<p>You might have an encrypted pKey and the passphrase is missing and/or you did not call <code>OpenSSL_add_all_algorithms();</code> which initializes EVP ciphers in order to decrypt an encapsulated key.</p>
","819","<c><openssl><private-key>","1","0","2","2016-03-15 17:35:02","","2","","4658000","","2015-12-22 09:15:38","2015-12-21 16:45:50",""
"39177117","Python3; Bitcoin; sha256 hash; private key to wallet import format double hash not working","<p>I am trying to write my own private key to wif format code. I believe I have the base58 encoding correct, but I am not getting the same output. When I look further back into my code, I notice that my output of my double sha256 hash is not the same, which leads to a different checksum and throws everything off down the line.</p>

<p>Here is a bit of code where my problem lies. This part is rewritten just for this post and leaves all my other steps out that are not needed to be shown for this issue.</p>

<pre><code>import hashlib

a = ""800C28FCA386C7A227600B2FE50B7CAE11EC86D3BF1FBE471BE89827E19D72AA1D""


def double_hash(num):
    first_hash = hashlib.sha256(num.encode()).hexdigest()
    print(first_hash, ""first hash"")
    second_hash = hashlib.sha256(first_hash.encode()).hexdigest()
    return second_hash


def main():
    print(double_hash(a))


if __name__ == ""__main__"":
    main()

# ---- Output ----
# &gt;&gt;&gt; e2e4146a36e9c455cf95a4f259f162c353cd419cc3fd0e69ae36d7d1b6cd2c09 first hash
# &gt;&gt;&gt; fe32ab4c7a99d37256148b0dabc6390272ebe2572b943abc2580bfdacac98fbc

# ---- Expected output ----
# 8147786C4D15106333BF278D71DADAF1079EF2D2440A4DDE37D747DED5403592 first hash
# 507A5B8DFED0FC6FE8801743720CEDEC06AA5C6FCA72B07C49964492FB98A714
</code></pre>

<p>Here is my source:<br>
<a href=""https://en.bitcoin.it/wiki/Wallet_import_format"" rel=""nofollow"">https://en.bitcoin.it/wiki/Wallet_import_format</a></p>
","<p>I am not sure how I even came about this. I was thinking that the string representation of the hex number must be converting into some other number. So I made an attempt to get it into binary format. From trial and error and I stumbled upon trying to unhexlify it and it worked.  </p>

<pre><code>import hashlib
import binascii

a = ""800C28FCA386C7A227600B2FE50B7CAE11EC86D3BF1FBE471BE89827E19D72AA1D""


def double_hash(num):
    first_hash = hashlib.sha256(binascii.unhexlify(num)).hexdigest()
    print(first_hash, ""first hash"")
    second_hash = hashlib.sha256(binascii.unhexlify(first_hash)).hexdigest()
    return second_hash


def main():
    print(double_hash(a))


if __name__ == ""__main__"":
    main()

# ---- Output ----
# 8147786c4d15106333bf278d71dadaf1079ef2d2440a4dde37d747ded5403592 first hash
# 507a5b8dfed0fc6fe8801743720cedec06aa5c6fca72b07c49964492fb98a714

# ---- Expected output ----
# 8147786C4D15106333BF278D71DADAF1079EF2D2440A4DDE37D747DED5403592 first hash
# 507A5B8DFED0FC6FE8801743720CEDEC06AA5C6FCA72B07C49964492FB98A714
</code></pre>
","819","<python-3.x><hash><sha256><private-key><bitcoin>","0","0","1","2016-08-27 05:04:22","","0","","","","","2016-08-27 03:17:40",""
"41051342","Getting algid parse error when converting from String to Public Key/Private Key","<p>I currently have a public/private key pair in as two separate strings that I am trying to convert back into public/private key format. </p>

<p>I am currently reading in the string from a .auth file, not a public key file and private key file so I can't use <a href=""https://stackoverflow.com/questions/6559272/algid-parse-error-not-a-sequence"">openssl pkcs8 -topk8...</a> to get rid of the algid parse error. I am reading in the keys like so:</p>

<pre><code>BufferedReader br = new BufferedReader(new FileReader(authFileName));
String publicK = br.readLine();
String privateK = br.readLine();
br.close();
</code></pre>

<p>From there, I am converting the files back into byte arrays like so using the Base64 Decoder like so:</p>

<pre><code>byte[] privateBytes = Base64.getDecoder().decode(privateK);
byte[] publicBytes = Base64.getDecoder().decode(publicK);
</code></pre>

<p>Lastly I am converting those byte arrays into Public and Private keys using a key factory. Here is the code:</p>

<pre><code>KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
PrivateKey privateKey = keyFactory.generatePrivate(new PKCS8EncodedKeySpec(privateBytes));
PublicKey publicKey = keyFactory.generatePublic(new X509EncodedKeySpec(publicBytes));
</code></pre>

<p>When my code tries to generate the private and public keys using the key factory, that is when it throws the InvalidKeyException algid parse error</p>

<p>I have looked online and noticed many people saying adding <a href=""https://stackoverflow.com/questions/17817508/unable-to-load-rsa-public-key"">the following line to my code should fix the problem</a>:</p>

<pre><code>Security.addProvider(new BouncyCastleProvider());
</code></pre>

<p>But it didn't. Is there any other solution, besides bouncy castle and openssl, that I should try that worked for anyone else?</p>
","","816","<java><security><public-key-encryption><private-key>","0","","0","2016-12-09 00:43:59","","3","","-1","","2017-05-23 12:30:50","2016-12-09 00:43:59",""
"9232328","How to sign and encrypt hash with c# given only a keystore","<p>I'm using a keystore that was created using vc 6.0 and the cryptoAPI. The keystore contains all the exchange/signature keys. So i can use the public keys just fine to encrypt data using RSA but when it comes time to sign or decrypt the data I cant seem to find how to decrypt using the private key. </p>

<p>I've seen lots of sites using 
rsa = (RSACryptoServiceProvider)cert.PrivateKey;</p>

<p>but in my keystore when i look at the certs all of the private keys do not exist. </p>

<p>// this is how i setup the store </p>

<pre><code>public cryptTest(string storeName)
{
    store = new X509Store(storeName);
    this.storename = storename;
}
</code></pre>

<p>// this is how i get the certificate from the store</p>

<pre><code>public X509Certificate2 getCertificate(string ID, certType ct)
{
    if (store == null)
    {
        return null;
    }
    store.Open(OpenFlags.ReadOnly);
    foreach (X509Certificate2 cert in store.Certificates)
    {
        if ((ct == certType.exchange &amp;&amp; cert.Subject.Contains(""Exchange"")) ||
            (ct == certType.signature &amp;&amp; cert.Subject.Contains(""Signature"")))
        {
            if (cert.Subject.Contains(ID)) // if the ID match
            {
                // todo check date etc ! is cert still valid if not delete etc. 
                store.Close();
                return cert;
            }
        }
    }
    store.Close();
    return null;
}
</code></pre>

<p>but then in the certs they never have a private key, so how could i possibly decrypt or sign using the certs in the keystore ? </p>

<p>Thanks a million ! </p>
","<p>I think the <a href=""http://msdn.microsoft.com/en-us/library/ms867080.aspx"" rel=""nofollow"">EncryptTo/DecryptTo: Encryption in .NET with CryptoAPI Certificate Stores</a> article on MSDN should have the answers you need.</p>
","815","<c#><rsa><cryptoapi><private-key>","2","0","1","2012-02-10 23:05:38","","0","","","","","2012-02-10 17:47:18",""
"16149702","Get cipher used to password encrypt private key","<p>I have a private key used for RSA exchanges that is password protected.  I know the password, so I can use the key, however, I do not know which cipher was used to do the password.</p>

<p>I have other keys where the cipher is named in a header in the decrypted key, as per the answer to <a href=""https://stackoverflow.com/questions/1774469/how-does-the-rsa-private-key-passphrase-work-under-the-hood"">this question</a>.  However, this key when encrypted simply starts:</p>

<pre><code>-----BEGIN ENCRYPTED PRIVATE KEY-----
</code></pre>

<p>and when decrypted:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
</code></pre>

<p>No further header.</p>

<p>Tools such as <code>openssl rsa</code> and gnutls's <code>certtool -k</code> decrypt the key when given the password and provide information about the public key but do not say anything about the symmetric cipher used for the password.</p>

<p>Presumably, these applications know what the cipher was, since they decrypt the key.  Is there a way to get this information?  There does not seem to be much point in keeping it secret if I have the password anyway.</p>

<p>Programmatic answers using the gnutls API (but not openssl) are good, but ideally I'd like to know of an existing, portable tool. </p>
","<p>Use tool like ASN.1 viewer to open that file (most of them should handle base64-encoded data as well, however probably you'll need to base64-decoded data first).
After that you'll get the (most likely) PKCS#8-wrapped key, and you'll get the cipher by looking at OIDs.</p>
","811","<rsa><private-key><encryption-symmetric><gnutls>","1","0","2","2013-04-23 15:09:18","16170935","1","1","-1","","2017-05-23 11:58:13","2013-04-22 14:31:58",""
"16149702","Get cipher used to password encrypt private key","<p>I have a private key used for RSA exchanges that is password protected.  I know the password, so I can use the key, however, I do not know which cipher was used to do the password.</p>

<p>I have other keys where the cipher is named in a header in the decrypted key, as per the answer to <a href=""https://stackoverflow.com/questions/1774469/how-does-the-rsa-private-key-passphrase-work-under-the-hood"">this question</a>.  However, this key when encrypted simply starts:</p>

<pre><code>-----BEGIN ENCRYPTED PRIVATE KEY-----
</code></pre>

<p>and when decrypted:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
</code></pre>

<p>No further header.</p>

<p>Tools such as <code>openssl rsa</code> and gnutls's <code>certtool -k</code> decrypt the key when given the password and provide information about the public key but do not say anything about the symmetric cipher used for the password.</p>

<p>Presumably, these applications know what the cipher was, since they decrypt the key.  Is there a way to get this information?  There does not seem to be much point in keeping it secret if I have the password anyway.</p>

<p>Programmatic answers using the gnutls API (but not openssl) are good, but ideally I'd like to know of an existing, portable tool. </p>
","<p>ASN.1 decoding that should give you something like this:</p>

<pre><code>    0:d=0  hl=4 l=1294 cons: SEQUENCE
    4:d=1  hl=2 l=  64 cons:  SEQUENCE
    6:d=2  hl=2 l=   9 prim:   OBJECT            :PBES2
   17:d=2  hl=2 l=  51 cons:   SEQUENCE
   19:d=3  hl=2 l=  27 cons:    SEQUENCE
   21:d=4  hl=2 l=   9 prim:     OBJECT            :PBKDF2
   32:d=4  hl=2 l=  14 cons:     SEQUENCE
   34:d=5  hl=2 l=   8 prim:      OCTET STRING
   44:d=5  hl=2 l=   2 prim:      INTEGER           :0800
   48:d=3  hl=2 l=  20 cons:    SEQUENCE
   50:d=4  hl=2 l=   8 prim:     OBJECT            :des-ede3-cbc
   60:d=4  hl=2 l=   8 prim:     OCTET STRING
   70:d=1  hl=4 l=1224 prim:  OCTET STRING
</code></pre>

<p>ie. in this example des-ede3-cbc is being used. Here's an online / open-source ASN.1 decoder you can use:</p>

<p><a href=""http://phpseclib.sourceforge.net/x509/asn1parse.php"" rel=""nofollow"">phpseclib ASN.1 Decoder</a></p>

<p>Just copy / paste your data and hit the submit button!</p>

<p>You can also do <code>openssl asn1parse -inform PEM -in file.ext -i</code> via the CLI if you have OpenSSL installed.</p>
","811","<rsa><private-key><encryption-symmetric><gnutls>","1","4","2","2013-04-23 15:09:18","16170935","1","1","-1","","2017-05-23 11:58:13","2013-04-22 14:31:58",""
"5582495","Get sha1 message digest from plaintext+private key in delphi","<p>I want to create a Sha1 message digest, and it should use my private key as input along with the plain text.</p>

<p>Everything I have found so far either dont use a private key or just take a lot of certificates as input.</p>
","<p>Have a look at TurboPower <a href=""http://sourceforge.net/projects/tplockbox/"" rel=""nofollow"">LockBox</a> </p>
","808","<delphi><sha1><private-key><message-digest>","2","0","2","2011-04-07 17:35:09","","2","","","","","2011-04-07 14:11:14",""
"5582495","Get sha1 message digest from plaintext+private key in delphi","<p>I want to create a Sha1 message digest, and it should use my private key as input along with the plain text.</p>

<p>Everything I have found so far either dont use a private key or just take a lot of certificates as input.</p>
","<p>I use DCPCrypt for my crypto needs.<br>
<a href=""http://www.cityinthesky.co.uk/opensource/dcpcrypt"" rel=""nofollow"">http://www.cityinthesky.co.uk/opensource/dcpcrypt</a></p>

<p>It's opensource and works really well.<br>
After installing the package, use TDCP_sha1 and drop that on a form.
Then look up how to use the component in the help files in the <code>DOC</code> directory in the zip file.</p>
","808","<delphi><sha1><private-key><message-digest>","2","1","2","2011-04-07 17:35:09","","2","","","","","2011-04-07 14:11:14",""
"16987832","Java: Bad Padding Exception in RSA","<p>I am running the following code I am getting a <code>Bad Padding Exception - Data must start with zero</code>. Any ideas?</p>

<p>Here is the code</p>

<pre><code>public class test {
    public static void main(String[] args) throws NoSuchAlgorithmException,
           NoSuchProviderException, InvalidKeyException,
           SignatureException, NoSuchPaddingException,
           IllegalBlockSizeException, BadPaddingException {
        KeyPair k=Utilities.keys(2048);
        PublicKey public_key=Utilities.public_key(k);
        PrivateKey private_key=Utilities.private_key(k);
        String hex1=Lib.stringToHex(""test1/test2/test3"");
        byte[] plaintext=Lib.toByteArray(hex1);
        byte [] cipher=Utilities.Encrypt_RSA(plaintext, public_key); 
        System.out.println(cipher.length); 
          byte[] newArray = new byte[128];
          byte[] newArray2 = new byte[128];
         // System.arraycopy(cipher, 0, newArray, 0, 512);
          for (int i=0;i&lt;cipher.length;i++){
                    if(i&lt;cipher.length/2){

                        newArray[i]=cipher[i];
                    }
                    else if((i&gt;cipher.length/2)&amp;&amp;(i&lt;cipher.length)){
                        newArray2[i-128]=cipher[i];
                    }
           }

         // System.arraycopy(cipher, 512, newArray2, 0, 512);

        byte[] cipher2=Utilities.Encrypt_RSA_Pr(newArray, private_key);
        byte[] cipher3=Utilities.Encrypt_RSA_Pr(newArray2, private_key);

        System.out.println(cipher2.length+"" cipher2"");
        System.out.println(cipher3.length+"" cipher3"");
        byte [] plain1=Utilities.Decrypt_RSA_Pub(cipher2,public_key);
        byte [] plain2=Utilities.Decrypt_RSA_Pub(cipher3,public_key);
        System.out.println(plain1.length);
        System.out.println(plain2.length);
        byte[] finald=new byte[256];
        for(int i=0;i&lt;256;i++){
            if(i&lt;128){
                finald[i]=plain1[i];
            }
            else{
                finald[i]=plain2[i-128];
            }
        }

        for(int i=0;i&lt;plain1.length;i++){
            if(i&gt;=64){
                plain1[i]='\0';
            }
        }

        System.out.println(plain1.length);
      System.out.println(finald.length;
     byte[] plainfinal=Utilities.Decrypt_RSA(finald, private_key);
</code></pre>

<p>Here are the methods that I use for encrypt/decrypt:</p>

<pre><code> public static byte[] Encrypt_RSA(byte[] plaintext,PublicKey key) throws
        InvalidKeyException, NoSuchAlgorithmException, NoSuchPaddingException,
        IllegalBlockSizeException, BadPaddingException,NoSuchProviderException{
   Cipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
    c.init(Cipher.ENCRYPT_MODE,key);
    byte [] ciphertext = c.doFinal(plaintext);
    return ciphertext;
}

public static byte[] Decrypt_RSA(byte []ciphertext,PrivateKey key) throws
       NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException,
       IllegalBlockSizeException, BadPaddingException,NoSuchProviderException{
    Cipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
    c.init(Cipher.DECRYPT_MODE,key);
    byte [] plaintext=c.doFinal(ciphertext);
    return plaintext;
}

public static byte[] Encrypt_RSA_Pr(byte[] plaintext,PrivateKey key) throws
       NoSuchAlgorithmException, NoSuchPaddingException,
       IllegalBlockSizeException, BadPaddingException, InvalidKeyException{
    Cipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
    c.init(Cipher.ENCRYPT_MODE,key);
    byte [] ciphertext = c.doFinal(plaintext);
    return ciphertext;
}

 public static byte[] Decrypt_RSA_Pub(byte []ciphertext,PublicKey key) throws
        NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException,
        IllegalBlockSizeException,BadPaddingException,NoSuchProviderException{
    Cipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
    c.init(Cipher.DECRYPT_MODE,key);
    byte [] plaintext=c.doFinal(ciphertext);
    return plaintext;
}
</code></pre>
","<p>You meant to split <code>cipher</code> into two halves but you did it wrong. I suspect this line:</p>

<pre><code>else if((i&gt;cipher.length/2)&amp;&amp;(i&lt;cipher.length)){
</code></pre>

<p>should instead be</p>

<pre><code>else if((i&gt;=cipher.length/2)&amp;&amp;(i&lt;cipher.length)){
</code></pre>
","808","<java><encryption><rsa><private-key><public-key>","0","0","1","2013-06-08 10:56:47","","4","3","1711796","","2013-06-07 15:37:57","2013-06-07 15:33:10",""
"40331595","ECC key pair - how to print private key?","<p>I implement ""Key Pair Generation"" using secp192r1 curve. But private key did not display in string form like public key.</p>

<p><a href=""https://i.stack.imgur.com/gSxol.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/gSxol.jpg"" alt=""enter image description here""></a></p>

<p>Here is my code:</p>

<pre><code>package lam.bk;
import java.security.*;
import java.security.spec.*;

public class ECCKeyGeneration {
    public static void main(String[] args) throws Exception {
        KeyPairGenerator kpg;
        kpg = KeyPairGenerator.getInstance(""EC"",""SunEC"");
        ECGenParameterSpec ecsp;
        ecsp = new ECGenParameterSpec(""secp192r1"");
        kpg.initialize(ecsp);

        KeyPair kp = kpg.genKeyPair();
        PrivateKey privKey = kp.getPrivate();
        PublicKey pubKey = kp.getPublic();

        System.out.println(pubKey.toString());
        System.out.println(privKey.toString()); 
    }
}
</code></pre>
","<p>You will need to convert the Private Key to PEM format before you can get its openssl string representation. In java you can do this in a programmatic manner by using BouncyCastle library's <a href=""http://www.programcreek.com/java-api-examples/index.php?api=org.bouncycastle.openssl.PEMWriter"" rel=""nofollow noreferrer"">PEMWriter</a></p>
","805","<java><private-key><elliptic-curve><ecdsa><key-pair>","0","0","2","2018-07-08 08:21:47","","1","","472495","","2018-07-08 08:21:47","2016-10-30 17:18:07",""
"40331595","ECC key pair - how to print private key?","<p>I implement ""Key Pair Generation"" using secp192r1 curve. But private key did not display in string form like public key.</p>

<p><a href=""https://i.stack.imgur.com/gSxol.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/gSxol.jpg"" alt=""enter image description here""></a></p>

<p>Here is my code:</p>

<pre><code>package lam.bk;
import java.security.*;
import java.security.spec.*;

public class ECCKeyGeneration {
    public static void main(String[] args) throws Exception {
        KeyPairGenerator kpg;
        kpg = KeyPairGenerator.getInstance(""EC"",""SunEC"");
        ECGenParameterSpec ecsp;
        ecsp = new ECGenParameterSpec(""secp192r1"");
        kpg.initialize(ecsp);

        KeyPair kp = kpg.genKeyPair();
        PrivateKey privKey = kp.getPrivate();
        PublicKey pubKey = kp.getPublic();

        System.out.println(pubKey.toString());
        System.out.println(privKey.toString()); 
    }
}
</code></pre>
","<p>The code below will output 24 bytes private key for secp192r1 curve:</p>

<pre><code>private String getPrivateKeyAsHex(PrivateKey privateKey) {

    ECPrivateKey ecPrivateKey = (ECPrivateKey) privateKey;
    byte[] privateKeyBytes = new byte[24];
    writeToStream(privateKeyBytes, 0, ecPrivateKey.getS(), 24);

    return Hex.toHexString(privateKeyBytes);
}

private void writeToStream(byte[] stream, int start, BigInteger value, int size) {
    byte[] data = value.toByteArray();
    int length = Math.min(size, data.length);
    int writeStart = start + size - length;
    int readStart = data.length - length;
    System.arraycopy(data, readStart, stream, writeStart, length);
}
</code></pre>
","805","<java><private-key><elliptic-curve><ecdsa><key-pair>","0","0","2","2018-07-08 08:21:47","","1","","472495","","2018-07-08 08:21:47","2016-10-30 17:18:07",""
"30958250","How to obtain private RSA key(private) as byte array in pgp file?","<p>I know that</p>

<pre><code>gpg --export-secret-keys KEY_NAME &gt; KEY_FILE
</code></pre>

<p>prints the key to file in pgp format. But what I need is to obtain the 2048 byte RSA key as byte array.</p>

<p>Why I need that? I am trying to convert a signing struture that uses RSA key from file that contains the keys as byte arrays. Something like.</p>

<pre><code>bac6388....
</code></pre>

<p>I want to use my pgp key in this format first. Then I will start to use pgp keys.</p>

<p>When I run </p>

<pre><code> gpg --export-secret-keys KEY_NAME | xxd -p
</code></pre>

<p>it prints out what I want as below.</p>

<pre><code> 9503be04556716da010800c92a2dee0cd36694c3337b9845d9d3653d9f02
 8398ebbfdc054657df710ab9d44cdd8bcfe9ea182dd257a629bd3d7ca045
 9878b7384b265f5967117ea314b1b1a3a6e376115de26cd90d59327920b5
 4af9022e1d60ec82.............
</code></pre>

<p>What I need is just the 2048 bit (256 byte) RSA key in this array.
Also openssh(pem,crt) or openssl formats or even C/C++ is welcomed since I can translate the key to these formats.</p>

<p>I just want to get private key as byte array.</p>

<p>Thanks</p>
","<p>this posts I believe can help you through java to obtain your RSA private key</p>

<p><a href=""https://stackoverflow.com/questions/3243018/how-to-load-rsa-private-key-from-file"">How to Load RSA Private Key From File</a></p>

<p><a href=""https://stackoverflow.com/questions/9596298/pgp-encryption-and-decryption-with-java"">PGP Encryption and Decryption with Java</a></p>

<p><a href=""https://stackoverflow.com/questions/9497719/extract-public-private-key-from-pkcs12-file-for-later-use-in-ssh-pk-authentifica"">Extract public/private key from PKCS12 file for later use in SSH-PK-Authentification</a></p>

<p>check it</p>
","805","<rsa><gnupg><private-key>","1","0","2","2015-06-21 01:33:08","30960265","1","","608639","","2015-06-21 01:33:08","2015-06-20 19:52:45",""
"30958250","How to obtain private RSA key(private) as byte array in pgp file?","<p>I know that</p>

<pre><code>gpg --export-secret-keys KEY_NAME &gt; KEY_FILE
</code></pre>

<p>prints the key to file in pgp format. But what I need is to obtain the 2048 byte RSA key as byte array.</p>

<p>Why I need that? I am trying to convert a signing struture that uses RSA key from file that contains the keys as byte arrays. Something like.</p>

<pre><code>bac6388....
</code></pre>

<p>I want to use my pgp key in this format first. Then I will start to use pgp keys.</p>

<p>When I run </p>

<pre><code> gpg --export-secret-keys KEY_NAME | xxd -p
</code></pre>

<p>it prints out what I want as below.</p>

<pre><code> 9503be04556716da010800c92a2dee0cd36694c3337b9845d9d3653d9f02
 8398ebbfdc054657df710ab9d44cdd8bcfe9ea182dd257a629bd3d7ca045
 9878b7384b265f5967117ea314b1b1a3a6e376115de26cd90d59327920b5
 4af9022e1d60ec82.............
</code></pre>

<p>What I need is just the 2048 bit (256 byte) RSA key in this array.
Also openssh(pem,crt) or openssl formats or even C/C++ is welcomed since I can translate the key to these formats.</p>

<p>I just want to get private key as byte array.</p>

<p>Thanks</p>
","<p>Hi here is the solution(on Ubnuntu)</p>

<p>First be sure that you removed the password of your key</p>

<pre><code> gpg --edit-key KEY_NAME
</code></pre>

<p>Write
     passwd
on gpg consoler and press ENTER two times for new password.</p>

<p>Then
     gpg --export-secret-keys KEY_NAME > KEY_FILE</p>

<p>You need to install pgpdump</p>

<pre><code> sudo apt-get install pgpdump
</code></pre>

<p>Run</p>

<pre><code>pgpdump -i -p KEY_FILE
</code></pre>

<p>Dumps all components of RSA key.</p>
","805","<rsa><gnupg><private-key>","1","0","2","2015-06-21 01:33:08","30960265","1","","608639","","2015-06-21 01:33:08","2015-06-20 19:52:45",""
"14315154","Using own keystore in java code","<p>I want to <strong>use keystore to save a private key</strong>. I use this private key to encrypt datasource password.
I generated <strong>myfile.keystore</strong> file with <strong>keytool</strong> and added the following configuration in Tomact server.xml file.</p>

<pre><code>&lt;Connector
protocol=""HTTP/1.1""
port=""8443"" maxThreads=""200""
scheme=""https"" secure=""true"" SSLEnabled=""true""
keystoreFile=""myfile.keystore"" keystorePass=""password""
clientAuth=""false"" sslProtocol=""TLS""/&gt;
</code></pre>

<p><strong>How can I read this private key to use in Java code?</strong></p>
","<p>The bit of XML configuration you sent us is only to configure the SSL for the tomcat server. It has nothing to do with the storage / reading of a private key for another purpose.</p>

<p>Here is a bit of code to load and initialize the key store.</p>

<pre><code>FileInputStream is = new FileInputStream(""myfile.keystore"");

KeyStore keystore = KeyStore.getInstance(KeyStore.getDefaultType());
keystore.load(is, ""password"".toCharArray());
Key key = keystore.getKey(""my-alias"", ""password"".toCharArray());
</code></pre>

<p>HIH</p>
","805","<java><tomcat><keystore><keytool><private-key>","1","1","1","2013-01-14 10:34:24","14316785","0","1","","","","2013-01-14 08:33:14",""
"42207104","How to parse in memory string to get private and public key RSA","<p>I am able to read the public and private key from the file directly as file stream convert that to PublicKey and PrivateKey Object. but If load as string it fails. </p>

<p>Working code </p>

<pre><code>    public static RSAPrivateKey getPrivateKey(String filename) throws IOException, GeneralSecurityException {

            PKCS8EncodedKeySpec pkcs8EncodedKeySpec = new PKCS8EncodedKeySpec(
                    IOUtils.toByteArray(new FileInputStream(filename)));
            return (RSAPrivateKey) KeyFactory.getInstance(""RSA"").generatePrivate(pkcs8EncodedKeySpec);
        }

        public static RSAPublicKey getPublicKey(String filename) throws IOException, GeneralSecurityException {
            X509EncodedKeySpec x509EncodedKeySpec = new X509EncodedKeySpec(
                    IOUtils.toByteArray(new FileInputStream(filename)));
            return (RSAPublicKey) KeyFactory.getInstance(""RSA"").generatePublic(x509EncodedKeySpec);
        }

public static void main(String[] args) throws JOSEException, ParseException, IOException, GeneralSecurityException {

        String publicKeyPathName = ""../public"";
        String privateKeyPathName = ""../private"";
        /// loading from file
         RSAPublicKey publicKey = new MYClass().getPublicKey(publicKeyPathName);
         RSAPrivateKey privateKey = new MYClass().getPrivateKey(privateKeyPathName);
}
</code></pre>

<p>Not Working code </p>

<pre><code>public static RSAPrivateKey parsePrivateKey(String content) throws IOException, GeneralSecurityException {
        content = content.replaceAll(""\\n"", """").replace(""-----BEGIN RSA PRIVATE KEY-----"", """")
                .replace(""-----END RSA PRIVATE KEY-----"", """");
        PKCS8EncodedKeySpec pkcs8EncodedKeySpec = new PKCS8EncodedKeySpec(content.getBytes(StandardCharsets.UTF_8));
        return (RSAPrivateKey) KeyFactory.getInstance(""RSA"").generatePrivate(pkcs8EncodedKeySpec);
    }

    public static RSAPublicKey parsePublicKey(String content) throws IOException, GeneralSecurityException {
        content = content.replaceAll(""\\n"", """").replace(""-----BEGIN PUBLIC KEY-----"", """")
                .replace(""-----END PUBLIC KEY-----"", """");
        X509EncodedKeySpec x509EncodedKeySpec = new X509EncodedKeySpec(content.getBytes(StandardCharsets.UTF_8));
        return (RSAPublicKey) KeyFactory.getInstance(""RSA"").generatePublic(x509EncodedKeySpec);
    }
public String getPublicKey() {
        return ""-----BEGIN PUBLIC KEY-----\n"" 
                + ""MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAswPxKZWJEQ0RVtiaoFIU""
                + ""jndalEp2sZF87Cy9IxW1FxxcfDmZRlkMDe+5X1lzpOjFHP8mBZa8vhMjSKbJY2wt""
                + ""MyxckbBoTjAIefi34KuD0Q6j9LRt1r1iQ+nMYezk5N83ruqyRHtB4a8AOkw3iE2z""
                + ""zA74uAkCzPiYUrAES1I9mVbpxJZf2Ej0px6drkd4OQ2aPnwR13gWTnmqFWV+Xkl6""
                + ""WapMArewaAUXU9zDqjn4ZpNCkgx6m4CK7PDt+VgYUi+sjI0WzPIb0FMDTYSe1iX6""
                + ""mfIabvoetxUmtyQgu4RfHIiOF0no6VEPh31of2B+KZX2OjHKjyKBGUxUkDLm+J2J"" 
                + ""CwIDAQAB\n""
                + ""-----END PUBLIC KEY-----"";
    }

    public String getPrivateKey() {
        return ""-----BEGIN RSA PRIVATE KEY-----\n""
                + ""MIIEowIBAAKCAQEAswPxKZWJEQ0RVtiaoFIUjndalEp2sZF87Cy9IxW1FxxcfDmZ""
                + ""RlkMDe+5X1lzpOjFHP8mBZa8vhMjSKbJY2wtMyxckbBoTjAIefi34KuD0Q6j9LRt""
+ ""1r1iQ+nMYezk5N83ruqyRHtB4a8AOkw3iE2zzA74uAkCzPiYUrAES1I9mVbpxJZf""
+ ""2Ej0px6drkd4OQ2aPnwR13gWTnmqFWV+Xkl6WapMArewaAUXU9zDqjn4ZpNCkgx6""
+ ""m4CK7PDt+VgYUi+sjI0WzPIb0FMDTYSe1iX6mfIabvoetxUmtyQgu4RfHIiOF0no""
+ ""6VEPh31of2B+KZX2OjHKjyKBGUxUkDLm+J2JCwIDAQABAoIBAFj59p4SoyQEeL/P""
+ ""vVs+MNV24WCfektb4tmIiyGrIm0wPY/JGTPsAp/SrTKFRYOL5p04/G7+syVOYdU0""
+ ""gRiXpgevXvtS0SU7nprxUoOq/EOmoTt5iraXPwY+aMWrd0GC6SxZnu2GzgIcd2KC""
+ ""i3+GD323W0wtvmSekydWMWw2nkNeKCL8WE/GqLjigRzdGl+RVviGC+N3IsZZvcf0""
+ ""toNXTxXBPgtcYYWV7MOLsFQkk1yvKh0ISncswkjmkRChi8KQ178hbIzeBuDq+jlY""
+ ""11epFjNUpyw2Y3jRHHkVSFKFaE6GeBpHMC0ucBJxyRzw19DZ+iPGI2xZBmW+wEOE""
+ ""+khw1WECgYEA6ETt3I9zszzytqh5jBma04EM08+aOw9+CVcCLWSC17vRBOiPGJTE""
+ ""bHq6Ln7+pjIErSTrlXOH6kPV0nRzmSDncsttmNXLKCuJUR5stVl/gQY4uaGesF/x""
+ ""Kk/orw/ddibukXiXHAkduZXC+3Wq4TaYHChUz/QZv/gamPSusi1zBlMCgYEAxU4k""
+ ""gJyKLqKfAXsrX0ilyvwkP4siwzORS1GFU5WfMf0E3ZD/3FMjmhjOLX5vnnWcIFtN""
+ ""ERungsyHF0AG5o23HTHkEIi2aZWnC2GiYfpEAJuLhkx08aO65o26RxeC7MOAgL1y""
+ ""0wC/b8ceIQkQuYbqdrPBywHry7+/vtPbHOggK2kCgYBIv+Y8shXMKyfefFBtyEtN""
+ ""Odt5sEmffA++/yiobRXqWmJyhiDj0xze2WXdUFuUVJBQZwL+8Yu9nXeojl7ytHKp""
+ ""6vut5jDWqSQ+aygjeR/NmtRDmFKq7bIMzbCUvIRiEHmiyMGTv2s3CKhkuItINSBZ""
+ ""mWxPIia6kQxLoj/hgQjJDwKBgGNTU0zrgSS4+RLlzo/JIq1tAVJ72KQr8ZjZESVi""
+ ""zSF9HlXsCOIBeIq6shB09fvveQlQ7RsPsORH0joCIXcvIF+yHf201R+SFuXD4Nsy""
+ ""AcnMhBC3rKd4pT4rWvsu+tn2EVq+BG/0kGrU8nXu+lxrbt0S4Rwxe2K2xPBr9oI2""
+ ""2PsBAoGBAJHPPAire0lHcPi+J8YkVKuzwEfP7NgeLZdtqjiZBCZiLoP8SRm68FJS""
+ ""2UpGX4K7rQhx66H6UwXHylBfush56Z8Y9g7PYel83sy+4bqjod1a5TqNBJMkhDQi""
+ ""DrQmDIfpFoRYcOyB4+BeF/w7wL+R5ofov4T+0vB3ST+aztphp2G4\n""
+ ""-----END RSA PRIVATE KEY-----"";
    }

public static void main(String[] args) throws JOSEException, ParseException, IOException, GeneralSecurityException {

 String publicKeyString = new MyClass().getPublicKey();
         RSAPublicKey publicKey = new MyClass().parsePublicKey(publicKeyString);

         String privateKeyString = new MyClass().getPrivateKey();
         RSAPrivateKey privateKey = new
         MyClass().parsePrivateKey(privateKeyString);

}
</code></pre>

<p>I tried without removing the first line, and try to read the file as string . none of them or working. tell me the correct way to use this.</p>

<p>The error I am getting is </p>

<blockquote>
  <p>Exception in thread ""main"" java.security.spec.InvalidKeySpecException:
  java.security.InvalidKeyException: invalid key format     at
  sun.security.rsa.RSAKeyFactory.engineGeneratePublic(RSAKeyFactory.java:205)
    at java.security.KeyFactory.generatePublic(KeyFactory.java:334)     at
  j.MyClass.parsePublicKey(MyClass.java:136)    at
  j.MyClass.main(MyClass.java:223) Caused by:
  java.security.InvalidKeyException: invalid key format     at
  sun.security.x509.X509Key.decode(X509Key.java:387)    at
  sun.security.x509.X509Key.decode(X509Key.java:403)    at
  sun.security.rsa.RSAPublicKeyImpl.(RSAPublicKeyImpl.java:84)    at
  sun.security.rsa.RSAKeyFactory.generatePublic(RSAKeyFactory.java:298)
    at
  sun.security.rsa.RSAKeyFactory.engineGeneratePublic(RSAKeyFactory.java:201)
    ... 3 more</p>
</blockquote>

<p>My usecase is, </p>

<p>read a keys from the db and do the conversion. </p>
","<p>You're using <code>content.getBytes(StandardCharsets.UTF_8)</code> instead of base 64 decoding the text within the PEM header and footer lines (starting with <code>-----</code>).</p>
","791","<java><encryption><rsa><private-key><public-key>","0","1","1","2017-02-13 16:57:26","","2","0","1124447","","2017-02-13 16:57:26","2017-02-13 15:00:20",""
"17798341","Consecutive OpenSSL PKCS12 generation yields different private key content","<p>When using the same key and certificate file to create a PKCS12 (PKCS#12 / p12) file, I noticed that consecutive calls to <code>OpenSSL</code>'s <code>pkcs12</code> capability yields different <code>ENCRYPTED PRIVATE KEY</code> content each time (I'm also using the same import password and PEM passphrase). Is this supposed to happen?  I'm guessing it has something to do with a different IV (initialization vector) or salt related to a symmetric encryption of the private key, but I wanted to be sure.</p>

<p>I use the following command to create the cred1.p12 and cred2.p12 files:</p>

<pre><code>openssl pkcs12 -export -in certs/cert.pem -out cred1.p12 -name ""My credentials"" -inkey private/key.pem
openssl pkcs12 -export -in certs/cert.pem -out cred2.p12 -name ""My credentials"" -inkey private/key.pem
</code></pre>

<p>When I compare the resulting .p12 files (<code>diff cred1.p12 cred2.p12</code> results in binary differences) I use the following command to create the two <code>PKCS12</code> info text files, upon which I perform another <code>diff</code>.</p>

<pre><code> openssl pkcs12 -info -in cred1.p12 &gt; a.txt
 openssl pkcs12 -info -in cred2.p12 &gt; b.txt
 diff a.txt b.txt
</code></pre>

<p>And the only differences lie between the <code>-----BEGIN ENCRYPTED PRIVATE KEY-----</code> and <code>-----END ENCRYPTED PRIVATE KEY-----</code> tags where the private key content is held. </p>

<p>Thanks in advance!</p>
","<p>Yes, this is expected behavior. OpenSSL uses DES-EDE3 by default for encrypting the private key in a PKCS12 file. Each time you encrypt it's generating a random <a href=""http://en.wikipedia.org/wiki/Initialization_vector"" rel=""nofollow"">initialization vector</a>, which will change the encrypted payload. When you look at the -info output you'll see something like this:</p>

<pre><code>DEK-Info: DES-EDE3-CBC,558C30D119D6944F
</code></pre>

<p>The data after the comma is the hex encoded 8 byte salt.</p>
","791","<encryption><openssl><certificate><private-key><pkcs#12>","2","3","1","2013-07-23 02:55:48","17800749","0","2","1337402","","2013-07-23 00:33:42","2013-07-22 22:11:54",""
"39208194","How can I extract private and public keys from a .CER file?","<p>I have a .CER file on my machine. I would like to print private and public keys from it and store it in DB. How can I do that?</p>

<p>So far, after googling around, this is what I have tried and I am hitting following error.</p>

<pre><code>openssl x509 -inform der -in apple_pay.cer -pubkey -noout &gt; apple_pay.pem

openssl x509 -in apple_pay.pem -text
unable to load certificate
69889:error:0906D06C:PEM routines:PEM_read_bio:no start line:/BuildRoot/Library/Caches/com.apple.xbs/Sources/OpenSSL098/OpenSSL098-59.60.1/src/crypto/pem/pem_lib.c:648:Expecting: TRUSTED CERTIFICATE
KOPC02KW5T9F6T6:ApplePaySwag-Starter chandeln$ 
</code></pre>

<p>I also tried following commands from <a href=""https://www.openssl.org/docs/manmaster/apps/pkey.html"" rel=""nofollow"">https://www.openssl.org/docs/manmaster/apps/pkey.html</a></p>

<pre><code>KOPC02KW5T9F6T6:ApplePaySwag-Starter chandeln$ openssl pkey -in apple_pay.pem -text -noout
openssl:Error: 'pkey' is an invalid command.
</code></pre>
","<p>After executing <code>openssl x509 -inform der -in apple_pay.cer -pubkey -noout &gt; apple_pay.pem</code> you have public key in <code>apple_pay.pem</code></p>

<p><code>openssl x509</code> works with x509 certificates, so it unable to load public key from <code>apple_pay.pem</code>.</p>

<p>There are no way to extract private key from certificate or public key.
It is main idea of asymmetric cypher.</p>
","790","<openssl><public-key-encryption><private-key><public-key>","1","1","1","2016-08-29 15:44:54","39210199","1","","2325154","","2016-08-29 14:46:15","2016-08-29 14:01:27",""
"31679569","what is the equivalent of this in python","<p>for a bank transaction implementation, I have a private key and some data and I need to sign that data with the private key. </p>

<p>The example code the bank has given is in C# .NET and I can't find any equivalent to it in python.</p>

<p>The key is in the following format :</p>

<pre><code>&lt;RSAKeyValue&gt;
  &lt;Modulus&gt;...&lt;/Modulus&gt;
  &lt;Exponent&gt;...&lt;/Exponent&gt;
  &lt;P&gt;...&lt;/P&gt;
  &lt;Q&gt;...&lt;/Q&gt;
  &lt;DP&gt;...&lt;/DP&gt;
  &lt;DQ&gt;...&lt;/DQ&gt;
  &lt;InverseQ&gt;...&lt;/InverseQ&gt;
  &lt;D&gt;...&lt;/D&gt;
&lt;/RSAKeyValue&gt;
</code></pre>

<p>And the example code is this :</p>

<pre><code>RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();
rsa.FromXmlString(“ &lt;RSAKeyValue&gt;&lt;Modulus&gt;oQRshGhLf2Fh... ”);
string data = ""#"" + merchantCode + ""#"" + terminalCode + ""#""
+invoiceNumber + ""#"" + invoiceDate + ""#"" + amount + ""#"" +redirectAddress
+ ""#"" + action + ""#"" + timeStamp + ""#"";
byte[] signMain = rsa.SignData(Encoding.UTF8.GetBytes(data), new
SHA1CryptoServiceProvider());
sign = Convert.ToBase64String(signMain);
</code></pre>

<p>Now I have not found any good equivalent for this in python and I need to do the exact thing in order to not raise any exceptions. I once asked this question in another literature and it got put on hold. I don't know why they did that but I have been struggling this for weeks and I have not yet found any solutions. so please help me in any way you can. thanks in advance.</p>
","<p><a href=""https://pypi.python.org/pypi/rsa"" rel=""nofollow"">https://pypi.python.org/pypi/rsa</a> is an RSA implementation.  I don't know what the heck is happening in that rsa.FromXmlString (<a href=""https://msdn.microsoft.com/en-us/library/vstudio/system.security.cryptography.rsa.fromxmlstring(v=vs.90)"" rel=""nofollow"">https://msdn.microsoft.com/en-us/library/vstudio/system.security.cryptography.rsa.fromxmlstring(v=vs.90)</a> ), so that will take some investigation on your part.</p>

<p><a href=""http://stuvel.eu/files/python-rsa-doc/reference.html#rsa.sign"" rel=""nofollow"">http://stuvel.eu/files/python-rsa-doc/reference.html#rsa.sign</a> shows you how to sign a message in RSA, you'll want the SHA-1 hash method.  Then base64 encode the results <a href=""https://docs.python.org/2/library/base64.html"" rel=""nofollow"">https://docs.python.org/2/library/base64.html</a></p>
","790","<c#><python><xml-parsing><private-key>","1","1","2","2015-07-28 19:42:31","31680411","0","","","","","2015-07-28 14:40:16",""
"31679569","what is the equivalent of this in python","<p>for a bank transaction implementation, I have a private key and some data and I need to sign that data with the private key. </p>

<p>The example code the bank has given is in C# .NET and I can't find any equivalent to it in python.</p>

<p>The key is in the following format :</p>

<pre><code>&lt;RSAKeyValue&gt;
  &lt;Modulus&gt;...&lt;/Modulus&gt;
  &lt;Exponent&gt;...&lt;/Exponent&gt;
  &lt;P&gt;...&lt;/P&gt;
  &lt;Q&gt;...&lt;/Q&gt;
  &lt;DP&gt;...&lt;/DP&gt;
  &lt;DQ&gt;...&lt;/DQ&gt;
  &lt;InverseQ&gt;...&lt;/InverseQ&gt;
  &lt;D&gt;...&lt;/D&gt;
&lt;/RSAKeyValue&gt;
</code></pre>

<p>And the example code is this :</p>

<pre><code>RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();
rsa.FromXmlString(“ &lt;RSAKeyValue&gt;&lt;Modulus&gt;oQRshGhLf2Fh... ”);
string data = ""#"" + merchantCode + ""#"" + terminalCode + ""#""
+invoiceNumber + ""#"" + invoiceDate + ""#"" + amount + ""#"" +redirectAddress
+ ""#"" + action + ""#"" + timeStamp + ""#"";
byte[] signMain = rsa.SignData(Encoding.UTF8.GetBytes(data), new
SHA1CryptoServiceProvider());
sign = Convert.ToBase64String(signMain);
</code></pre>

<p>Now I have not found any good equivalent for this in python and I need to do the exact thing in order to not raise any exceptions. I once asked this question in another literature and it got put on hold. I don't know why they did that but I have been struggling this for weeks and I have not yet found any solutions. so please help me in any way you can. thanks in advance.</p>
","<p>You will need to convert your .NET XML format key to a .PEM in order for it to be handled by any Python modules.  (See <a href=""https://stackoverflow.com/questions/3094222/how-do-i-convert-an-xml-rsa-key-to-a-pem-file"">this question</a>)</p>

<p>Once you have that, you could use the <a href=""https://pypi.python.org/pypi/rsa"" rel=""nofollow noreferrer"">RSA</a> or <a href=""https://pypi.python.org/pypi/pycrypto"" rel=""nofollow noreferrer"">PyCrypto</a> modules.</p>

<p>Check out this <a href=""https://gist.github.com/lkdocs/6519366"" rel=""nofollow noreferrer"">example code</a> for signing data using PyCrypto:</p>

<pre><code>def sign_data(private_key_loc, data):
    '''
    param: private_key_loc Path to your private key
    param: package Data to be signed
    return: base64 encoded signature
    '''
    from Crypto.PublicKey import RSA 
    from Crypto.Signature import PKCS1_v1_5 
    from Crypto.Hash import SHA256 
    from base64 import b64encode, b64decode 
    key = open(private_key_loc, ""r"").read() 
    rsakey = RSA.importKey(key) 
    signer = PKCS1_v1_5.new(rsakey) 
    digest = SHA256.new() 
    # It's being assumed the data is base64 encoded, so it's decoded before updating the digest 
    digest.update(b64decode(data)) 
    sign = signer.sign(digest) 
    return b64encode(sign)
</code></pre>

<p>Obviously, it will need to be adapted to your needs (Use <code>import SHA</code> instead of <code>import SHA256</code> if you need SHA-1, for example), but it should give you a good head-start.</p>
","790","<c#><python><xml-parsing><private-key>","1","3","2","2015-07-28 19:42:31","31680411","0","","","","","2015-07-28 14:40:16",""
"28925937","Decrypt SSL with Private Key","<p>If an attacker gets your SSL Private Key , what can he do with it ? can he decrypt the SSL traffic ? if yes , HOW ?<br>
And what should the Admin do to prevent such an attack  ? </p>
","<p>If an adversary obtains your private key, they could:</p>

<ul>
<li>Execute a <em><a href=""https://en.wikipedia.org/wiki/Man-in-the-middle_attack"" rel=""nofollow noreferrer"">man-in-the-middle attack</a></em> and read all traffic between client and server.</li>
<li>Decrypt SSL/TLS sessions that were not established using a key exchange method that provides <em><a href=""https://en.wikipedia.org/wiki/Forward_secrecy"" rel=""nofollow noreferrer"">forward secrecy</a></em>.  This attack simply requires observing (or replaying previously observed) traffic on the wire.  Wireshark provides an ""<a href=""http://wiki.wireshark.org/SSL"" rel=""nofollow noreferrer"">SSL dissector</a>"" feature that, given a private key, decrypts current or recorded TLS sessions.  <a href=""https://stackoverflow.com/questions/15814999/decrypting-https-traffic-in-wireshark-not-working"">This Stack Overflow question</a> demonstrates how forward secrecy prevents this kind of analysis.</li>
<li>Attempt to trick a certificate authority (one that is trusted by clients) into signing a certificate binding the public key to your domain name, and impersonate you directly using this certificate (provided they can cause clients to come to them using e.g. phishing, DNS poisoning, etc.)</li>
</ul>

<p>To protect your private key:</p>

<ul>
<li>Always store the private key in <em>encrypted</em> form, using a strong cipher and strong passphrase.</li>
<li>Ensure it can only be read by the processes that need to read it.  Set appropriate file ownership and permissions, and consider additional <em>Mandatory Access Control</em> mechanisms such as SELinux to restrict which <em>processes</em> can access it.</li>
<li>If your servers are long running, consider not storing your private key on the server host at all, as it is most likely needed only at server startup.</li>
<li>If your service handles sensitive or high-value data, consider using a <em><a href=""https://en.wikipedia.org/wiki/Hardware_security_module"" rel=""nofollow noreferrer"">Hardware Security Module</a></em> (HSM) for signing and decryption operations so that the private key cannot be exfiltrated.</li>
</ul>

<p>You should also take measures to limit the impact of a key disclosure:</p>

<ul>
<li>Favour (or use exclsively) key agreement protocols that provide forward secrecy, so that captured sessions cannot be decrypted later if the private key is disclosed.</li>
<li>Be prepared to revoke keys when you believe they may have been compromised, and deploy new certificates with new keys.</li>
<li>DNSSEC can help protect against MitM and impersonation attacks (if clients use it).</li>
<li><em><a href=""https://tools.ietf.org/html/rfc6698"" rel=""nofollow noreferrer"">DNS-based Authentication of Named Entities</a></em> (DANE), in conjunction with DNSSEC, allows you to specify the trust anchor for certificates which, if clients query and validate DANE TLSA records, protects clients from communicating with servers presenting certificates signed by other CAs.</li>
</ul>
","789","<ssl><openssl><private-key>","0","0","1","2015-03-09 05:40:23","","2","","","","","2015-03-08 11:36:18",""
"39134657","CryptographicException in RSA.ImportParameters() - Bad Data in special 1024 keys","<p>We have a C#/.Net 4.0 application which imports RSA Private Keys from a String in Base64 received in a WebService.</p>

<p>This application works perfectly for RSA-Keys in 1024 bits, but doesn't with a special kind of rsa private keys (around 1% of keys).</p>

<p>Here are the byte lengths:</p>

<p>Working-Key:</p>

<ul>
<li>Modulus => 128 Bytes </li>
<li>Exponent => 3 Bytes</li>
<li>D => 128 Bytes</li>
<li>P => 64 Bytes</li>
<li>Q => 64 Bytes </li>
<li>DP => 64 Bytes </li>
<li>DQ => 64 Bytes </li>
<li>IQ => 64 Bytes</li>
</ul>

<p>Not-Working-Key:</p>

<ul>
<li>Modulus => 128 Bytes </li>
<li>Exponent => 3 Bytes</li>
<li><strong>D => 127 Bytes</strong></li>
<li>P => 64 Bytes</li>
<li>Q => 64 Bytes </li>
<li>DP => 64 Bytes </li>
<li>DQ => 64 Bytes </li>
<li>IQ => 64 Bytes</li>
</ul>

<p>The difference is in the lenght of D (128 working, 127 not working). The not-working key is 1 byte shorter than the working key. </p>

<p>The parameters are set but when doing RSA.ImportParameters(rsaParams) it throws a CryptographicException with a ""Bad Data"" Message. </p>

<p>What should be included to solve this problem?</p>
","<p><code>RSACryptoServiceProvider</code> has some assumptions on the data lengths which are:</p>

<ul>
<li>Modulus: any even size, let's call the length <code>n</code></li>
<li>Exponent: (<code>&lt;= 4</code> bytes; though RSACng allows ""any size""), let's call the length <code>e</code></li>
<li>D: <code>n</code></li>
<li>P: <code>n/2</code></li>
<li>Q: <code>n/2</code></li>
<li>DP: <code>n/2</code></li>
<li>DQ: <code>n/2</code></li>
<li>InverseQ: <code>n/2</code></li>
</ul>

<p>So, assuming that your second key is actually Modulus: 128 bytes (because a 64-byte P times a 64-byte Q isn't a 256 byte number), you just need to left-pad the D array with a zero to bring it up to the proper length.</p>

<pre><code>byte[] newD = new byte[modulus.Length];
Buffer.BlockCopy(d, 0, newD, newD.Length - d.Length, d.Length);
</code></pre>

<p>.NET Core has the <a href=""https://github.com/dotnet/corefx/blob/bddba0dcf2decd22900f1a8a0944408d3b852fd5/src/System.Security.Cryptography.Csp/src/System/Security/Cryptography/CapiHelper.cs#L953-L972"" rel=""noreferrer"">source code available</a> showing that relationship.  In .NET Framework it's buried inside the CLR, so not available on referencesource.</p>
","789","<c#><rsa><private-key><cryptographicexception>","2","7","1","2017-11-07 13:35:54","39135984","0","2","1084509","","2016-08-25 20:23:59","2016-08-24 23:51:37",""
"34097035","Sign a JWT with a SHA cert using jose4j","<p>New to using jose4j.  I have found examples like this to set private key from cert:</p>

<pre><code>JsonWebSignature jws = new JsonWebSignature();
PKCS8EncodedKeySpec spec =
new PKCS8EncodedKeySpec(keyBytes);
KeyFactory kf = KeyFactory.getInstance(""RSA"");
PrivateKey pk = kf.generatePrivate(spec);
jws.setKey(kf.generatePrivate(spec));
</code></pre>

<p>But I get this error message</p>

<pre><code>java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: invalid key format    
</code></pre>

<p>I think it is because the cert was created as SHA256 instead of RSA.  Here is how I was told the cert was created:</p>

<pre><code>openssl req -x509 -sha256 -nodes -days 730 -newkey rsa:2048 -keyout private.key -out certificate_pub.crt
</code></pre>

<p>Does anyone have any examples of how I could sign JWT with a SHA256 cert?</p>
","<p>With additional info, that private key file is <strong>PEM but NOT PKCS#8</strong>, as a modern version of OpenSSL should have created for <code>req -newkey</code>. And the difference between PEM and ""DER"" (binary) which standard Java requires is not just removing (and adding) the BEGIN and END lines.</p>

<p>Your simplest solution if OpenSSL is available is to convert <em>both</em> of these, without encrypting:</p>

<pre><code>openssl pkcs8 -topk8 -nocrypt -outform der -in private.pem -out good.der 
</code></pre>

<p>Then read <code>good.der</code> (use better name if you like) as bytes, and put that in <code>PKCS8EncodedKeySpec</code> and use it as you posted. Aside: you don't need to fiddle with <code>DataInputStream</code>, which isn't really intended for ""plain old"" bytes; <code>java.nio.file.Files.readAllBytes</code> can open, allocate, and read for you.</p>

<p>The next more complicated alternative is to convert to PKCS#8 but still PEM: same as about but omit <code>-outform der</code> (and use a file name that indicates PEM, to avoid confusion). Then in Java read <em>that</em> file as <em>characters</em> (with a <code>Reader</code>, usually <code>BufferedReader</code>, not a <code>Stream</code>), discard the <code>BEGIN</code> and <code>END</code> lines, concatenate all the lines between, and convert them from base64 to <code>byte[]</code>: in Java8 you have <code>java.util.Base64</code>, before that you can use <code>javax.xml.bind.DatatypeConverter</code>. </p>

<p>To read the file you have in standard Java is harder. You could read the PEM-armored PKCS#1 and convert to binary PKCS#1, then ""wrap"" the PKCS#1 into PKCS#8 by building the DER encoding, but that's a good bit more complicated than what you've demonstrated familiarity with. Or you could parse the PKCS#1 and use the components to construct your own implemenation of <code>RSAPrivateCrtKey</code> and use that directly (no factory), ditto. </p>

<p>The other alternative is to use the third-party library from <a href=""http://www.BouncyCastle.org"" rel=""nofollow"">http://www.BouncyCastle.org</a> which has more flexible features for handling PEM files than standard Java. But you need to learn their API as well as the standard one, and if your program will run anywhere else you need to ensure BC is deployed with or as part of your program.</p>
","784","<certificate><jwt><private-key><sha>","1","2","1","2015-12-08 05:29:28","","2","","","","","2015-12-04 20:40:10",""
"18550196","Encoding using SHA256 with RSA","<p>I'm attempting to authorize with the Google Data API as a service in a language for which there isn't any client library. The crux is in how to generate the signature. To do this I have to encode a string using ""SHA256 with RSA"".</p>

<p>I have it from <a href=""https://stackoverflow.com/questions/17784022/how-to-encrypt-data-using-rsa-with-sha-256-as-hash-function-and-mgf1-as-mask-ge"">here</a> that it shouldn't be ""terribly difficult"" however I cannot find a description of the procedure? Anyone knows?</p>

<p>(The language does have a function to generate SHA256 hash codes.)</p>
","<p>OAuth 2.0 requires RSASSA-PKCS1-V1_5-SIGN, which is described in RFC 3447.
Just check section 9.2 of this RFC - you need just add some formatting to the hash of your message.</p>
","783","<encryption><public-key-encryption><private-key>","0","2","1","2013-08-31 18:09:25","18551302","4","","-1","","2017-05-23 10:24:19","2013-08-31 16:21:06",""
"5467333","public key for encryption; private key for de-cryption?","<p>I understand that private and public keys are mathematically related and data encrypted with one key can only be decrpyted with other. My question is that private key is always used to encrypt data whereas public key is always used to de-crypt it? Or can be be vice-vera and if so can you give some example application where its used in other direction (public key to encrypt and private key to decrypt)?</p>
","<p>It's interchangeable.</p>

<p>Digital Signature -> Private key encrypts, public key decrypts so to verify sender.</p>

<p>Send a message -> Public key encrypts, private decrypts and owner reads the message.</p>

<p>EDIT: People seem to disagree with the ""Interchangeable"" definition. I need to clarify that I am talking about the mathematical perspective of the operation, not what is best in terms of security. Ofc, you should use keys for their intended operation.</p>

<p>However, Henrick Hellström response in SO thread explains why they are interchangeable mathematically : <a href=""https://stackoverflow.com/questions/9208583/are-public-key-and-private-key-interchangeable"">Are public key and private key interchangeable?</a></p>
","779","<encryption><public-key><private-key>","3","-1","4","2019-03-21 15:28:26","5467402","1","1","","","","2011-03-29 02:45:16",""
"5467333","public key for encryption; private key for de-cryption?","<p>I understand that private and public keys are mathematically related and data encrypted with one key can only be decrpyted with other. My question is that private key is always used to encrypt data whereas public key is always used to de-crypt it? Or can be be vice-vera and if so can you give some example application where its used in other direction (public key to encrypt and private key to decrypt)?</p>
","<p>If I want to send you a secure message, I would encrypt the message with your <em>public</em> key. That way, only you (knowing the <em>private</em> key) can decrypt it.</p>
","779","<encryption><public-key><private-key>","3","1","4","2019-03-21 15:28:26","5467402","1","1","","","","2011-03-29 02:45:16",""
"5467333","public key for encryption; private key for de-cryption?","<p>I understand that private and public keys are mathematically related and data encrypted with one key can only be decrpyted with other. My question is that private key is always used to encrypt data whereas public key is always used to de-crypt it? Or can be be vice-vera and if so can you give some example application where its used in other direction (public key to encrypt and private key to decrypt)?</p>
","<p>Not only <em>can</em> you use a public key for encryption, that is actually the normal mode of operation when you are encrypting for secrecy.  This makes sense - anyone can encrypt with the public key, and only the proper recipient can decrypt using their private key.</p>

<p>In many public key systems, signing is mathematically similar to the opposite case - ""encrypting with the private key"" - but note that the signing operation is fundamentally distinct from the encryption operation.  For example, with RSA, signing must use an invariant, verifiable padding method, whereas encryption should use random padding.</p>
","779","<encryption><public-key><private-key>","3","1","4","2019-03-21 15:28:26","5467402","1","1","","","","2011-03-29 02:45:16",""
"5467333","public key for encryption; private key for de-cryption?","<p>I understand that private and public keys are mathematically related and data encrypted with one key can only be decrpyted with other. My question is that private key is always used to encrypt data whereas public key is always used to de-crypt it? Or can be be vice-vera and if so can you give some example application where its used in other direction (public key to encrypt and private key to decrypt)?</p>
","<p><em>Encryption</em> is about keeping some data confidential; the data is transformed into an opaque blob and the reverse operation requires something that the attacker does not know, i.e. a ""secret"" or ""private"" information. The whole point of encryption is that <em>decryption</em> cannot be done with only public information; hence decryption uses the private key. However, there is no problem in letting anybody encrypt data, thus encryption can use the public key.</p>

<p>There are some algorithms (in practice, only one: RSA) which, from a casual glance, appear to be ""revertible"": you might think about using the private key for encryption, and the public key for decryption. As explained above, there goes confidentiality (if the decryption key is public, then anybody can decrypt, hence the encrypted data cannot be considered as confidential anymore). Such a ""reversed encryption"" may be used as the basis for a <em>digital signature algorithm</em>, in which there is no notion of confidentiality, but, instead, of verifiable proof of key owner action.</p>

<p><strong>However</strong> there is more to RSA than the modular exponentiation. RSA encryption first transforms the input message into a big integer through an operation called ""padding"". RSA signature generation first transforms the input message into a big integer through another operation which is also called ""padding""; <strong>but</strong> this is not <em>at all</em> the same padding. Padding is essential for security, and the needed characteristics are quite distinct between encryption and signature. For instance, an encryption padding needs a high level of added randomness, whereas a signature padding requires a lot of redundancy (and a hash function, in order to accommodate long input messages).</p>

<p>Talking of signatures as ""encryption with the private key"" is the way the RSA standard historically put it (hence names such as ""md5WithRSAEncryption""), but it is inaccurate (paddings are, and must be, different) and overly specific (it applies only to RSA, not El Gamal, DSA, Diffie-Hellman, NTRU...). This is just a widespread confusion.</p>
","779","<encryption><public-key><private-key>","3","9","4","2019-03-21 15:28:26","5467402","1","1","","","","2011-03-29 02:45:16",""
"33456904","What's the difference between Amazon EC2 private key (.pem) and secret access key?","<p>While signing up for Amazon EC2 and enabling ssh, I have to create and download a private key (.pem) and a secret access key.</p>

<p>How are they different? What different functions do they have?</p>
","<p>You need to read a good tutorial on SSH, but here is a summary:</p>

<p>The Access Key ID and Secret Access Key are like a username and password. They allow you to ""do stuff"" on the AWS API using the commandline tools or code you write.</p>

<p>The private key (.pem) is like a password for talking (SSH) to an individual box that you have launched. (i.e. not ""AWS itself"", but ""your box within AWS"".) You can have different passwords to different boxes if you want, but most of the time you only need one.</p>

<p>If you know how SSH works, they are just putting down ~/.ssh/known_hosts with the public part of your key, allowing you to log in for the first time. You can change that file later to add more users or rotate your SSH keys.</p>
","779","<amazon-ec2><private-key>","3","2","1","2015-11-01 05:36:14","33459539","0","2","","","","2015-10-31 21:39:19",""
"50646421","InvalidKeyException: invalid key format when reading EC Private Key from PEM file in Java","<p>I'm trying to create a private key object from a given .pem file. The file has this structure: </p>

<pre><code>-----BEGIN EC PRIVATE KEY-----
...............................
...............................
...............................
-----END EC PRIVATE KEY-----
</code></pre>

<p>I am attempting to create the private key object with this code: </p>

<pre><code>public static String getKeyFromFile(String filename) throws IOException {
    File f = new File(filename);
    FileInputStream fis = new FileInputStream(f);
    DataInputStream dis = new DataInputStream(fis);
    byte[] keyBytes = new byte[(int) f.length()];
    dis.readFully(keyBytes);
    dis.close();

    String key = new String(keyBytes);

    return key;
}

public static PrivateKey getPrivateKey() throws NoSuchAlgorithmException, InvalidKeySpecException, IOException, NoSuchProviderException {
    String privateKeyPEM = getKeyFromFile(""MY_FILE.pem"");

    privateKeyPEM = privateKeyPEM.replace(""-----BEGIN EC PRIVATE KEY-----\n"", """");
    privateKeyPEM = privateKeyPEM.replace(""-----END EC PRIVATE KEY-----"", """");
    privateKeyPEM = privateKeyPEM.replaceAll(""\n"", """");
    privateKeyPEM = privateKeyPEM.replaceAll("" "", """");

    byte[] privateKeyBytes = privateKeyPEM.getBytes();
    String encodedString = Base64.getEncoder().encodeToString(privateKeyBytes);
    byte[] decodedString = Base64.getDecoder().decode(encodedString);

    EncodedKeySpec privKeySpec = new PKCS8EncodedKeySpec(decodedString);
    KeyFactory kf = KeyFactory.getInstance(""EC"");
    PrivateKey privKey = kf.generatePrivate(privKeySpec);

    return privKey;
</code></pre>

<p>Upon running this method, I receive this error:</p>

<pre><code>java.security.InvalidKeyException: invalid key format
</code></pre>

<p>I am able to parse the text and strip away any unwanted characters just fine, but I'm not able to create the private key object. I am able to generate a public key object from a similar .crt file using very similar methods. I want to be able to do this solely within Java and no openssl. Any help would be greatly appreciated.</p>
","<p>Your code does not properly decode the base64 data:</p>

<p><code>privateKeyPEM</code> contains the String data between the <code>BEGIN</code> and <code>END</code> data (which is base64 encoded).</p>

<p>Your code does the following:</p>

<pre><code>byte[] privateKeyBytes = privateKeyPEM.getBytes();
// privateKeyBytes now contains the base64 encoded key data

String encodedString = Base64.getEncoder().encodeToString(privateKeyBytes);
// encoded String contains now the base64 encoded data of the base64 encoded key data

byte[] decodedString = Base64.getDecoder().decode(encodedString);
// decodedString is not the base64 encoded data of your key data
</code></pre>

<p>Why are you encoding the data base64 and then in the next line decoding it - both steps together are just useless.</p>

<p>What you really need is to apply the base64 decode one time onto privateKeyPEM:</p>

<pre><code>byte[] keyData = Base64.getDecoder().decode(privateKeyPEM);
EncodedKeySpec privKeySpec = new PKCS8EncodedKeySpec(keyData);
</code></pre>

<p>If the base64 decode fails then your base64 data is invalid - most likely because of contained spaces or <code>\r</code>.</p>
","767","<java><private-key>","1","0","1","2018-06-01 15:48:36","50647085","1","","","","","2018-06-01 15:09:36",""
"37939806","SSL on Apache HTTP Server","<p>I have 2 crt files for Apache server:</p>

<ul>
<li>1_root_bundle.crt </li>
<li>2_my_domain_name.com.crt</li>
</ul>

<p>And other bundle:</p>

<ul>
<li>1_Intermediate.crt</li>
<li>2_my_domain_name.com.crt</li>
<li>root.crt</li>
</ul>

<p>I have modified</p>

<pre><code>/etc/apache2/sites-available/default-ssl.conf 
</code></pre>

<p>And tried various combinations of above mentioned files but after Apache2 service restart SSL does not work, browser shows ""Connection is not secure"":</p>

<pre><code>SSLEngine on
SSLCertificateFile      /etc/apache2/ssl/1_Intermediate.crt
SSLCertificateKeyFile   /etc/apache2/ssl/2_my_domain_name.com.crt
SSLCertificateChainFile /etc/apache2/ssl/root.crt
</code></pre>

<p>How to make SSL on Apache server? </p>
","<p>It is missing the key file with your certificate private key. Usually it has the  <code>.key</code>  extension like <code>2_my_domain_name.com.key</code> and the file content starts with <code>-----BEGIN PRIVATE KEY-----</code> </p>

<p>You configuration should looks like this</p>

<pre><code>SSLEngine on
SSLCertificateFile      /etc/apache2/ssl/2_my_domain_name.com.crt
SSLCertificateKeyFile   /etc/apache2/ssl/2_my_domain_name.com.key
SSLCertificateChainFile /etc/apache2/ssl/1_root_bundle.crt
</code></pre>

<p>The SSLCertificateChainFile points to a all-in-one file where you can assemble the certificates of Certification Authorities (CA) which form the certificate chain of the server certificate. </p>

<p>So ensure that <code>1_root_bundle.crt</code> contains <code>1_Intermediate.crt</code> content and is in PEM format (base64 with <code>--- BEGIN CERTIFICATE --- ----END CERTIFICATE---</code> headers)</p>

<p>If you use apache >= 2.4.8 you could also concatenate all certificates in the file pointed at <code>SSLCertificateFile</code> </p>

<blockquote>
  <p>SSLCertificateChainFile became obsolete with version 2.4.8, when SSLCertificateFile was extended to also load intermediate CA certificates from the server certificate file.</p>
</blockquote>
","765","<apache><ssl><apache2><ssl-certificate><private-key>","0","1","3","2019-10-01 06:03:29","37940326","0","","","","","2016-06-21 08:56:00",""
"37939806","SSL on Apache HTTP Server","<p>I have 2 crt files for Apache server:</p>

<ul>
<li>1_root_bundle.crt </li>
<li>2_my_domain_name.com.crt</li>
</ul>

<p>And other bundle:</p>

<ul>
<li>1_Intermediate.crt</li>
<li>2_my_domain_name.com.crt</li>
<li>root.crt</li>
</ul>

<p>I have modified</p>

<pre><code>/etc/apache2/sites-available/default-ssl.conf 
</code></pre>

<p>And tried various combinations of above mentioned files but after Apache2 service restart SSL does not work, browser shows ""Connection is not secure"":</p>

<pre><code>SSLEngine on
SSLCertificateFile      /etc/apache2/ssl/1_Intermediate.crt
SSLCertificateKeyFile   /etc/apache2/ssl/2_my_domain_name.com.crt
SSLCertificateChainFile /etc/apache2/ssl/root.crt
</code></pre>

<p>How to make SSL on Apache server? </p>
","<p>1) Install Apache HTTP Server, mod_ssl</p>

<p>2) Configure httpd</p>

<p>Remember to disable SSLv2 and SSLv3, because they are vulnerable.</p>

<pre><code>  # Toggle on the SSL/TLS Protocol Engine
  SSLEngine On
  # The signed certificate of the server
  SSLCertificateFile /etc/pki/tls/myserver/myserver.crt
  # The private key of the server
  SSLCertificateKeyFile /etc/pki/tls/myserver/myserver.key
  # The intermediate_certificate of the server
  SSLCertificateChainFile /etc/pki/tls/myserver/tls-ca-chain.pem

  # Accept only strong encryption
  SSLProtocol             all -SSLv2 -SSLv3
  SSLCipherSuite           HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
  SSLHonorCipherOrder     on
</code></pre>

<p>3) Check the permissions on the certificate files.</p>

<p><strong>UPD</strong>:
How to create a key and certificate signing request in one step:</p>

<pre><code>openssl req -new -newkey rsa:2048 -nodes -keyout myserver.key -out myserver.csr
</code></pre>

<p>Next you have to send this csr file to one of the certificate authorities. They will send back your signed certificate, and the intermediate certificate(s).</p>

<p>You can also create a self-signed certificate. </p>
","765","<apache><ssl><apache2><ssl-certificate><private-key>","0","1","3","2019-10-01 06:03:29","37940326","0","","","","","2016-06-21 08:56:00",""
"37939806","SSL on Apache HTTP Server","<p>I have 2 crt files for Apache server:</p>

<ul>
<li>1_root_bundle.crt </li>
<li>2_my_domain_name.com.crt</li>
</ul>

<p>And other bundle:</p>

<ul>
<li>1_Intermediate.crt</li>
<li>2_my_domain_name.com.crt</li>
<li>root.crt</li>
</ul>

<p>I have modified</p>

<pre><code>/etc/apache2/sites-available/default-ssl.conf 
</code></pre>

<p>And tried various combinations of above mentioned files but after Apache2 service restart SSL does not work, browser shows ""Connection is not secure"":</p>

<pre><code>SSLEngine on
SSLCertificateFile      /etc/apache2/ssl/1_Intermediate.crt
SSLCertificateKeyFile   /etc/apache2/ssl/2_my_domain_name.com.crt
SSLCertificateChainFile /etc/apache2/ssl/root.crt
</code></pre>

<p>How to make SSL on Apache server? </p>
","<p>You can use the bundle file with SSLCertificateChainFile.         </p>

<pre><code>SSLCertificateFile /home/ubuntu/tad.com/tad.com.crt
SSLCertificateKeyFile /home/ubuntu/tad.com/tad.com.key
SSLCertificateChainFile /home/ubuntu/tad.com/intermediate_bundle.crt
SSLCACertificateFile /home/ubuntu/zup.today/intermediate_bundle.crt
</code></pre>

<p>OR</p>

<p>If you are using bundle so it will work without  SSLCertificateChainFile file.</p>

<pre><code>SSLCertificateFile /home/ubuntu/tad.com/tad.com.crt
SSLCertificateKeyFile /home/ubuntu/tad.com/tad.com.key
SSLCACertificateFile /home/ubuntu/zup.today/intermediate_bundle.crt
</code></pre>
","765","<apache><ssl><apache2><ssl-certificate><private-key>","0","0","3","2019-10-01 06:03:29","37940326","0","","","","","2016-06-21 08:56:00",""
"35070730","What Private key and public key inside Keystore file","<p>Can you tell me more clearly about public key and private key from below code::</p>

<pre><code>&gt;keytool -genkey -keyalg RSA -alias selfsigned -keystore keystore2.jks -storepass password -validity 9360 -keysize 2048

What is your first and last name?
[Unknown]: CLARK
What is the name of your organizational unit?
[Unknown]: OO
What is the name of your organization?
[Unknown]: O
What is the name of your City or Locality?
[Unknown]: JUMO
What is the name of your State or Province?
[Unknown]: TU
What is the two-letter country code for this unit?
[Unknown]: PA
Is CN=clark, OU=OO, O=O, L=jumo, ST=TU, C=PA correct?
[no]: yes

Enter key password for 
(RETURN if same as keystore password):
</code></pre>

<p>From the above example, what is the PrivateKey and what is the PublicKey?? <br>
<b>Please explain which part belongs PrivateKey and which part belongs PublicKey in above Keystore.jks file ?</b></p>
","<p>As fas as i understood that.
A keystore file can contains Keys, KeyPairs, Trusted Certificates.</p>

<p>Here keys are the SecretKey like privateKeys only.<br>
KeyPairs are the combination of PrivateKeys and Certificate(contain PublicKey).<br>
TrustedCertificate are the certificate can contains PublicKeys only.</p>

<p><em>Any more details appreciated!</em></p>
","763","<keystore><keytool><private-key><public-key>","1","0","2","2016-02-02 13:07:38","","0","","","","","2016-01-28 19:51:21",""
"35070730","What Private key and public key inside Keystore file","<p>Can you tell me more clearly about public key and private key from below code::</p>

<pre><code>&gt;keytool -genkey -keyalg RSA -alias selfsigned -keystore keystore2.jks -storepass password -validity 9360 -keysize 2048

What is your first and last name?
[Unknown]: CLARK
What is the name of your organizational unit?
[Unknown]: OO
What is the name of your organization?
[Unknown]: O
What is the name of your City or Locality?
[Unknown]: JUMO
What is the name of your State or Province?
[Unknown]: TU
What is the two-letter country code for this unit?
[Unknown]: PA
Is CN=clark, OU=OO, O=O, L=jumo, ST=TU, C=PA correct?
[no]: yes

Enter key password for 
(RETURN if same as keystore password):
</code></pre>

<p>From the above example, what is the PrivateKey and what is the PublicKey?? <br>
<b>Please explain which part belongs PrivateKey and which part belongs PublicKey in above Keystore.jks file ?</b></p>
","<p>See the Oracle documentation for <a href=""http://docs.oracle.com/javase/1.5.0/docs/tooldocs/solaris/keytool.html#CertChains"" rel=""nofollow"">keytool</a></p>
","763","<keystore><keytool><private-key><public-key>","1","0","2","2016-02-02 13:07:38","","0","","","","","2016-01-28 19:51:21",""
"38885920","Using SSH Keygen not able to connect to server on Windows 10 GIT","<p>I'm following below tutorial. </p>

<p><a href=""https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys--2"" rel=""nofollow"">https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys--2</a></p>

<p>It's generated file on Windows 10 <code>C:\Users\&lt;user name&gt;\.ssh</code></p>

<p>I'm using GIT to generate files.</p>

<pre><code> ~/Desktop
$ PermitRootLogin without-password
bash: PermitRootLogin: command not found

$ ssh a@b.com
a@b.com's password:
Permission denied, please try again.
</code></pre>

<p>I have generated <code>.ppk</code> file using <code>puttygen.exe</code>.<br>
Still not able to connect to server.</p>

<p>By doing <code>ssh -Tv a@b.com</code></p>

<p>It will give below response</p>

<pre><code>OpenSSH_7.1p2, OpenSSL 1.0.2h  3 May 2016
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: Connecting to a@b.com [XXX.XXX.XXX.XX] port 22.
debug1: Connection established.
debug1: identity file /c/Users/XUser/.ssh/id_rsa type 1
debug1: key_load_public: No such file or directory
debug1: identity file /c/Users/XUser/.ssh/id_rsa-cert type -1
debug1: key_load_public: No such file or directory
debug1: identity file /c/Users/XUser/.ssh/id_dsa type -1
debug1: key_load_public: No such file or directory
debug1: identity file /c/Users/XUser/.ssh/id_dsa-cert type -1
debug1: key_load_public: No such file or directory
debug1: identity file /c/Users/XUser/.ssh/id_ecdsa type -1
debug1: key_load_public: No such file or directory
debug1: identity file /c/Users/XUser/.ssh/id_ecdsa-cert type -1
debug1: key_load_public: No such file or directory
debug1: identity file /c/Users/XUser/.ssh/id_ed25519 type -1
debug1: key_load_public: No such file or directory
debug1: identity file /c/Users/XUser/.ssh/id_ed25519-cert type -1
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_7.1
debug1: Remote protocol version 2.0, remote software version OpenSSH_6.6.1p1 Ubuntu-2ubuntu2.6
debug1: match: OpenSSH_6.6.1p1 Ubuntu-2ubuntu2.6 pat OpenSSH_6.6.1* compat 0x04000000
debug1: Authenticating to a@b.com:22 as 'XUser'
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: server-&gt;client chacha20-poly1305@openssh.com &lt;implicit&gt; none
debug1: kex: client-&gt;server chacha20-poly1305@openssh.com &lt;implicit&gt; none
debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
debug1: Server host key: ecdsa-sha2-nistp256 SHA256:WrjAO7ldoJ3vjYENd6v7JvxXkbquvvom16RYGKeRO70
debug1: Host 'a@b.com' is known and matches the ECDSA host key.
debug1: Found key in /c/Users/XUser/.ssh/known_hosts:2
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: publickey,password
debug1: Next authentication method: publickey
debug1: Offering RSA public key: /c/Users/XUser/.ssh/id_rsa
debug1: Authentications that can continue: publickey,password
debug1: Trying private key: /c/Users/XUser/.ssh/id_dsa
debug1: Trying private key: /c/Users/XUser/.ssh/id_ecdsa
debug1: Trying private key: /c/Users/XUser/.ssh/id_ed25519
debug1: Next authentication method: password
XUser@a@b.com's password:
debug1: Authentications that can continue: publickey,password
Permission denied, please try again.
XUser@a@b.com's password:
</code></pre>
","<p>If you do have</p>

<ul>
<li>your public key: <code>C:\Users\&lt;user name&gt;\.ssh\id_rsa.pub</code></li>
<li>your private key: <code>C:\Users\&lt;user name&gt;\.ssh\id_rsa</code></li>
</ul>

<p>Do copy your public key (see ""<a href=""https://www.digitalocean.com/community/tutorials/how-to-use-ssh-keys-with-digitalocean-droplets"" rel=""nofollow noreferrer"">How To Use SSH Keys with DigitalOcean Droplets</a>"")</p>

<p><a href=""https://i.stack.imgur.com/ukXOQ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ukXOQ.png"" alt=""https://assets.digitalocean.com/articles/how-to-use-ssh-keys-with-digitalocean-droplets/key_added.png""></a></p>
","752","<windows><git><ssh><private-key>","0","1","1","2016-08-11 08:57:36","","0","1","1352867","","2016-08-11 08:57:36","2016-08-11 01:28:31",""
"860715","SSL Cert with exportable private key","<p>I got a trial server certificate from completeSSL with the plan to use it to sign my Azure production site.  It turns out that I need a certificate with an exportable private key ... and my new trial certificate is not such.</p>

<p>Does anyone know which of the ssl vendors sell certificates with exportable private key?</p>
","","748","<ssl><ssl-certificate><private-key>","1","","0","2009-05-15 22:45:40","","3","","76337","","2009-05-15 22:45:40","2009-05-13 22:19:30",""
"36304677","Openssl_private_encrypt returns FALSE","<p>I'm trying to encrypt some text with openssl_private_encrypt but function returns FALSE and doesn't encrypt anything.</p>

<p>i made two version of my code</p>

<pre><code>//$privateKey = file_get_contents(__DIR__.'/key_dev_exe_1k.pem');
$privateKey = openssl_pkey_get_private(__DIR__.'/key_dev_exe_1k.pem');
var_dump(openssl_private_encrypt($referrer_string, $crypted, $privateKey));
var_dump(array($referrer_string, $crypted, $privateKey)); exit();
</code></pre>

<p>and</p>

<pre><code>$privateKey = file_get_contents(__DIR__.'/key_dev_exe_1k.pem');
//$privateKey = openssl_pkey_get_private(__DIR__.'/key_dev_exe_1k.pem');
var_dump(openssl_private_encrypt($referrer_string, $crypted, $privateKey));
var_dump(array($referrer_string, $crypted, $privateKey)); exit();
</code></pre>

<p>First output contains Warning.</p>

<blockquote>
  <p>Warning:  openssl_private_encrypt(): key param is not a valid private
  key</p>
</blockquote>

<p>Second output is without any warnings, but shows that encryption functions return FALSE.</p>

<pre><code>bool(false) //encryption function return value
array(3) {
  [0]=&gt;
  string(218) ""..."" // here plain text WITH(!) spaces.
  [1]=&gt;
  string(0) """" // $decrypt value
  [2]=&gt;
  string(887) ""-----BEGIN RSA PRIVATE KEY-----
MIICWwIBAAKBgQCxP65lb3J9rOYLnXEwQHVkave/4t1D+7IfTgh/2L5TJeQC3mi2
[...]
iWegTa/JaMHANXGMAEA8pXIW0P8nPMV587nEqoN44g==
-----END RSA PRIVATE KEY-----
""
}
</code></pre>

<p>key_dev_exe_1k.pem is in this same catalog.</p>
","<p>This works for me</p>

<pre><code>//index.php
$data = ""Hello World"";
$fp = fopen(""keys/doe.key"",""r"");
$priv_key = fread($fp, 8192);
fclose($fp);
openssl_private_encrypt($data, $crypttext, $priv_key);
echo $crypttext;

//doe.key
-----BEGIN RSA PRIVATE KEY-----
MIICXQIBAAKBgQC6b/s0KbyEUUppH2IF0pr6JHSO815Sjg/HnHiJUIUYqjU35FE1
N1AfvbHzK5tpMu7FfjulJPGwbQo3OQSKN4QEPr6QFrEAQ0XcISrnhXPeGMJUPq/v
4FGi34f480Wr6wsp8gfCY06Z1A1745EWlPAFvtM4ne5psvbf/BvKGa4hywIDAQAB
AoGAEw9XsyGBMFXPMagPsWCyj1giwmqG/hGf81w/xmoA8WCVSD2DP9mDy3rtMlsG
7F5UosQg/OUmAE9ld/fQSwEZ8dhKvGGYlXnRWbEJ4Gjab7LxCrqWsJ2RQyzfe+An
ARz4KV6iP9j/Ot0gLqfVEb+ZiLl17kitNmcN34eRfJ6BW0ECQQDv6OZRx7l6Y/GP
Tw3Bq++wEiYen+Qw3x3Rz3xR78otF/oGA2Au8s1wPAo1OZTDbnix2zvROw6oyDzA
/kSqv2GjAkEAxvD+u7RHJsS+TxYGmB0xTGKg60e1UsHQKs+JVFlZQrcvqYxQC71Q
Huz2fqrlIteVzPtcEc04VfpsAIpVSlRRuQJBALBocyNjVzF12CPmn1jv0rmHPtx5
+dMt3MFwbhvZ1LI/1SsixFEBXKrQmzjz9D2YN8ugR2XcpTTauEG5NkjPnT0CQQCW
w5goo+ywArW+tZB1wtnTa4NMCuHtP5gEeZc3ZybwGmdydDVNUEDhzu7W+6f+iaaq
22rgyseA0PD8T9lnJRNxAkAXr4kEazYVMRHQkqVFNw3I3tUnl9gNel/UH3EPFQjD
YiRgQZ+BowgzAr0NPC2hWgA03LbhQEJVGcF7pGVSt/Gh

-----END RSA PRIVATE KEY-----
</code></pre>
","746","<php><encryption><openssl><private-key>","1","1","1","2017-02-26 05:27:54","","1","","","","","2016-03-30 09:26:19",""
"41479755",".NET Core X509Certificate2.PrivateKey throws nte_bad_keyset error","<p>When trying to get a <code>X509Certificate2</code> object from the <code>X509Store</code> using the following code:</p>

<pre><code>    private X509Certificate2 GetKey()
    {
        try
        {
            X509Store store = new X509Store(""WebHosting"", StoreLocation.LocalMachine);
            store.Open(OpenFlags.ReadOnly);
            var collection = store.Certificates.Find(X509FindType.FindBySubjectName, ""xxxxxxx"", true);

            if (collection.Count == 0)
            {
                throw new Exception(""No keys matched"");
            }

            if (collection.Count &gt; 1)
            {
                StringBuilder sb = new StringBuilder();
                sb.Append(""More than 1 key matched:\r\n"");

                foreach (var cert in collection)
                {
                    sb.Append($""{cert.SubjectName} - {cert.Thumbprint}\r\n"");
                }
                throw new Exception(sb.ToString());
            }

            return collection[0];
        }
        catch (Exception ex)
        {
            // something really bad happened, log it
            Logger.LogException(ex);
            throw;
        }
    }
</code></pre>

<p>I successfully get the key; however, when trying to get the private key within the object using <code>key.PrivateKey</code>, I get the following error: <code>OpenCSP failed with error code 2148073494.</code>  Looking up the Windows error 2148073494, I get <code>nte_bad_keyset</code>.  It looks like there have been errors around other situations that throw this same error <a href=""https://github.com/dotnet/corefx/issues/2583"" rel=""nofollow noreferrer"">here</a>, but they closed that bug as fixed.  When I run this bit of code in a console app, it works fine and it also works fine in my test environment running under IISExpress.  When run in a production environment under IIS, I get this error every time.  I've tried running under the context of an admin user just to make sure it wasn't an odd permission error, same thing.  From what I understand about this Windows error, is that Windows gave me where the key lives, then told me there is nothing at that address.  I'm using <code>""System.Security.Cryptography.Algorithms"": ""4.3.0""</code> for this.</p>

<p>EDIT: I should note that as part of my testing, I actually grabbed the exact certificate I'm looking for from the production environment onto my test environment and it loaded fine.  I also ran the console app on the production environment pulling the same key and it worked fine.</p>
","<p>Ultimately, the answer is ""something deleted the private key after importing it to the certificate store"" (or, maybe it's possible to confuse Windows into remembering where a key lives despite it not actually living there).</p>

<p>If you know that it, for example, works for a little while then stops:</p>

<pre><code>&gt; certutil -store my
...
================ Certificate 6 ================
Serial Number: 3451b93c10f9279348a949f729d1ff10
Issuer: CN=localhost
 NotBefore: 1/26/2015 2:19 PM
 NotAfter: 1/25/2020 4:00 PM
Subject: CN=localhost
Signature matches Public Key
Root Certificate: Subject matches Issuer
Template:
Cert Hash(sha1): 15 e3 4c d3 2d a7 54 99 a9 17 8f 17 26 25 63 25 8f 3a 94 28
  Key Container = IIS Express Development Certificate Container
  Unique container name: fad662b360941f26a1193357aab3c12d_1fcb2e07-cec4-4ba1-9c78-58a431e1aefd
  Provider = Microsoft RSA SChannel Cryptographic Provider
Encryption test passed
CertUtil: -store command completed successfully.
</code></pre>

<p>Seeing that it's in ""Microsoft RSA SChannel Cryptographic Provider"", turn to <a href=""https://msdn.microsoft.com/en-us/library/windows/desktop/bb204778(v=vs.85).aspx"" rel=""nofollow noreferrer"">https://msdn.microsoft.com/en-us/library/windows/desktop/bb204778(v=vs.85).aspx</a> and see that the keyfile will be located at <code>%ALLUSERSPROFILE%\Application Data\Microsoft\Crypto\RSA\MachineKeys</code>.  The <code>Unique container name</code> happens to be the name of the file it'll have.</p>

<p>So, open that directory, right click on the file.</p>

<ul>
<li>Properties</li>
<li>Security Tab</li>
<li>Advanced button</li>
<li>Auditing tab</li>
<li>Edit button</li>
<li>Add button</li>
<li>Type ""Everyone"", push ""Check Names"", pick ""Everyone"", hit OK, hit OK.</li>
<li>Check Delete: Success.</li>
<li>Hit OK to dismiss all the dialogs.</li>
</ul>

<p>Later, after you start getting keyset errors, search the security log for an audit on the file delete (event 4663 from Security-Auditing):</p>

<pre><code>An attempt was made to access an object.

Subject:
    Security ID:        SOMEDOMAIN\theaccount
    Account Name:       theaccount
    Account Domain:     SOMEDOMAIN
    Logon ID:       0xabcdef

Object:
    Object Server:  Security
    Object Type:    File
    Object Name:    C:\ProgramData\Microsoft\Crypto\RSA\MachineKeys\fad662b360941f26a1193357aab3c12d_1fcb2e07-cec4-4ba1-9c78-58a431e1aefd
    Handle ID:  0xef8

Process Information:
    Process ID: 0xf54
    Process Name:   C:\Windows\explorer.exe

Access Request Information:
    Accesses:   DELETE

    Access Mask:    0x10000
</code></pre>

<p>That will tell you what process/user did the delete operation... and maybe that'll be enough to identify what went wrong.</p>

<p>You could presumably do the private key file identification and audit registration more programmatically; but this was the quickest way I knew to explain it.</p>
","745","<c#><.net-core><private-key><x509certificate2>","1","0","1","2017-01-05 23:02:43","","3","","1309672","","2017-01-05 08:00:55","2017-01-05 07:48:34",""
"37562763","How to convert password string to Renci.SshNet.PrivateKeyFile in C#?","<p>My password and my username are strings and to initialize my <code>SftpClient</code> I need to convert them to <code>Renci.SshNet.PrivateKeyFile</code>.</p>

<p>I have tried to cast:</p>

<pre><code>string myPassword = ""root"";
(Renci.SshNet.PrivateKeyFile)myPassword
</code></pre>

<p>It doesn't work.</p>

<p>Thank you in advance for you help.</p>
","<p>That's just a nonsense.</p>

<p>Password and private key represent two different authentication methods. You cannot convert one to the other.</p>

<p>Either you authenticate with a password. Or you authenticate with a private key. The private key is typically stored in a file.</p>
","743","<c#><ssh><sftp><private-key>","1","1","1","2016-06-01 08:32:42","37563149","0","1","6375025","","2016-06-01 08:32:42","2016-06-01 07:59:41",""
"27786625","RSA Algorithm in C private key","<p>Implement the encryption algorithm RSA. Specifically:</p>

<ol>
<li>Implement an algorithm that converts a message into an integer and the reverse. Suppose messages consist only of characters of the English alphabet.</li>
<li>Create two prime numbers p and q size 512 bits. Calculate then N, a public key e and its corresponding private d. With the parameters you create, encrypt and decrypt a message of your choice to check the correctness of your implementation.</li>
</ol>

<p>My code:</p>

<pre><code>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include ""gmp.h""
#define BASE 256  
#ifndef MAXLEN
#define MAXLEN 256
#endif   
void str_int(mpz_t r, char *str);
void int_str(char *str, mpz_t org_str_int);
void eukleidhs(mpz_t a,mpz_t b,mpz_t xx,mpz_t yy); 
gmp_randstate_t stat;
int main()
{
      gmp_randstate_t rand_state;
      gmp_randinit_default(rand_state);
      long sd = 0;
      mpz_t p, q, p1, q1, n, message_int, a, b, temp_p, temp_q, p_1, q_1, f, e, gcd, d, c, m, A, B, C, D, i, ed, ed_m, fl1, fl2, d1, d2;
      mpz_t seed;
      gmp_randinit(stat, GMP_RAND_ALG_LC, 120);
      mpz_init(p);
      mpz_init(q);
      mpz_init(p1);
      mpz_init(q1);
      mpz_init(n);
      mpz_init(p_1);
      mpz_init(q_1);
      mpz_init(f);
      mpz_init(e);
      mpz_init(fl1);
      mpz_init(fl2);
      mpz_init(d1);
      mpz_init(d2);
      mpz_init(gcd);
      mpz_init(d);
      mpz_init(c);
      mpz_init(A);
      mpz_init(m);
      mpz_init(B);
      mpz_init(C);
      mpz_init(D);
      mpz_init(i);
      mpz_init(ed);
      mpz_init(ed_m);
     mpz_init(message_int);
     mpz_init(seed);
      unsigned char message[MAXLEN], out_message[MAXLEN];
      mpz_init(a);
      mpz_init(b);
      mpz_init(temp_p);
      mpz_init(temp_q);
/* (create p  512 BITS)*/
      srand( (unsigned) getpid());
      sd=rand();
      mpz_set_ui(seed, sd);
      gmp_randseed(stat, seed);
      srand( (unsigned) getpid());                                 
      mpz_set_ui(seed, sd);                                          
      mpz_urandomb(p1, stat, 512);                                
   /*  (create q 512 BITS*/
 srand( (unsigned) getpid());
 sd=rand();
 mpz_set_ui(seed, sd);
gmp_randseed(stat, seed);
srand( (unsigned) getpid());                                 
 mpz_set_ui(seed, sd);                                        
 mpz_urandomb(q1, stat, 512);                             
      int primetest;   
      primetest = mpz_probab_prime_p(p1, 5);
      if (primetest != 0)
      {
            mpz_set(p, p1);
            printf(""p= ""); mpz_out_str(stdout, 10, p); 
            printf(""\n"");
            printf(""\n"");
      }
      else
      {
            mpz_nextprime(p, p1);
            printf(""p= ""); mpz_out_str(stdout, 10, p); 
            printf(""\n"");
            printf(""\n"");
      }    
      primetest = mpz_probab_prime_p(q1, 5); 
      if (primetest != 0) 
      {
           mpz_set(q, q1);
            printf(""q= ""); mpz_out_str(stdout, 10, q); 
            printf(""\n"");
            printf(""\n"");
      }
      else
      {
            mpz_nextprime(q, p);
            printf(""q= ""); mpz_out_str(stdout, 10, q); 
            printf(""\n"");
            printf(""\n"");    
      }    
 /*( n, p-1, q-1, f)*/
      mpz_mul(n, p, q);
      printf(""n= ""); mpz_out_str(stdout, 10, n);            // n=p*q
      printf(""\n"");
      printf(""\n"");
      mpz_sub_ui(p_1, p, 1);
      printf(""p-1= ""); mpz_out_str(stdout, 10, p_1);        // p-1
      printf(""\n"");
      printf(""\n"");  
      mpz_sub_ui(q_1, q, 1);
      printf(""q-1= ""); mpz_out_str(stdout, 10, q_1);        // q-1   
      printf(""\n"");   
      printf(""\n"");
      mpz_mul(f, p_1, q_1);
      printf(""f= ""); mpz_out_str(stdout, 10, f);            //f=(p-1)*(q-1)
      printf(""\n"");
      printf(""\n"");
/*( 1&lt;e&lt;f)*/
      sequence1: 
      mpz_urandomb(e, stat, 512);                  
      if ((mpz_cmp_si(e,1)) &amp;&amp; (mpz_cmp (e,f)))   
      { 
            mpz_gcd(gcd, e, f);                 
            if (mpz_cmp_si(gcd,1))              
            {
                  printf(""To e einai:\n"");
                  printf(""e= "");
                  mpz_out_str(stdout, 10, e);
                  printf(""\n"");
                  printf(""\n"");
            }
            else
            {
                  goto sequence1;
            }
      }

      else

      {
            goto sequence1;
      }

/*( d WSTE 1&lt;d&lt;f and e*d= 1 mod f)*/
      mpz_invert(d, e, f);
     printf(""To d einai:\n"");
      printf(""d= "");
      mpz_out_str(stdout, 10, d);
      printf(""\n"");
      printf(""\n"");
/*keys)*/
      printf(""The public key is :\n"");           
      printf(""(n,e)= "");
      printf("" ("");
      mpz_out_str(stdout, 10, n);
      printf(""  ,  "");
      mpz_out_str(stdout, 10, e);
      printf("") "");
      printf(""\n"");
      printf(""\n"");
      printf(""The private key is:\n"");          
      printf(""d= "");  
      mpz_out_str(stdout, 10, d);
      printf(""\n"");
      printf(""\n"");
      printf(""GRAPSE TO MYNHMA SOU(Mexri %d xarakthres) !!!! :"", MAXLEN);
        fgets(message, MAXLEN - 1, stdin);  
      str_int(m, message);
      #ifdef HEX
        gmp_printf(""TO MHNYMA(%d)  -&gt; %Zx\n\n"", strlen(message), m); // EKTTYPWSH MYNHMATOS SE ARITHMO
      #else
        gmp_printf(""TO MHNYMA(%d)  -&gt; %Zd\n\n"", strlen(message), m);
      #endif  

/*( c = m^e mod n)*/

      mpz_powm(c, m, e, n);
      exit1:
      printf(""TO KRYPTOGRAFHMENO KEIMENO EINAI:\n"");         
      printf(""c= "");
      mpz_out_str(stdout, 10, c);
      printf(""\n"");
      printf(""\n"");

    mpz_set_ui(m,0);          
/*( m = c^d mod n)*/  
      mpz_powm(m, c, d, n);
      exit2:

      printf(""TO APOKRYPTOGRAFHMENO KEIMENO EINAI:\n"");          
      printf(""m= "");

      mpz_out_str(stdout, 10, m);

      printf(""\n"");

      printf(""\n"");


      int_str(out_message, m);

   #ifdef HEX

        gmp_printf(""TO APOKRYPTOGRAFHMENO KEIMENO EINAI: %Zd\n            -&gt; %s(%d)\n"", m, out_message, strlen(out_message));

      #else

        gmp_printf(""TO APOKRYPTOGRAFHMENO KEIMENO EINAI: %Zd\n            -&gt; %s(%d)\n"", m, out_message, strlen(out_message));

      #endif


return 0;

}
/* SYNARTHSH METATROPHS STRING SE AKERAIO*/

void str_int(mpz_t r, char *str)

{

      long int str_len, j;

      unsigned char C;



      str_len = strlen(str);

      if(str[str_len - 1] == '\n')

            str[str_len - 1] = '\0';

      str_len = strlen(str);



      mpz_set_ui(r, 0UL);              



      for(j = str_len - 1; j &gt;= 0; j--)           // r = str[str_len - 1] * BASE^(str_len - 1) + ... + str[1] * BASE + str[0]

      {

      C = str[j];



            mpz_mul_ui(r, r, (unsigned long)BASE);           

            mpz_add_ui(r, r, (unsigned long)C);

      }

}


void int_str(char *str, mpz_t org_str_int)

{

      long int str_len, i;

      mpz_t max_int, c_int, str_int;



      mpz_init(max_int);                  //ARXIKOPOIHSH

      mpz_init(c_int);

      mpz_init(str_int);



      mpz_set(str_int, org_str_int);



      mpz_set_ui(max_int, 1UL);          

      for(i = 0; i &lt; MAXLEN; i++)

      {

            if(mpz_cmp(str_int, max_int) &lt;= 0)

            {

                  str_len = i;
                break;
            }

            mpz_mul_ui(max_int, max_int, (unsigned long)BASE);
      }

      for(i = 0; i &lt; str_len; i++)        //METATROPH SE GRAMMA

      {
            mpz_mod_ui(c_int, str_int, (unsigned long)BASE);

            mpz_sub(str_int, str_int, c_int);
            mpz_tdiv_q_ui(str_int, str_int, (unsigned long)BASE);
            str[i] = mpz_get_ui(c_int);

      }

      str[str_len] = '\0';

      mpz_clear(max_int);

      mpz_clear(c_int);
      mpz_clear(str_int);

}
/*ALGORITHMOS EUKLEIDH*/

void eukleidhs(mpz_t a,mpz_t b,mpz_t xx,mpz_t yy)

{
      int flag=0;
      mpz_t d,x,y,x1,x2,y1,y2,q,r;
      mpz_t qb,a_qb,temp;
      mpz_t qx1,x2_x1;
      mpz_t qy1,y2_y1;
      mpz_init(x);
      mpz_init(y);
      mpz_init(d);

      if(mpz_cmp(b,a)&gt;0) {

            flag=1;

            mpz_init(temp);

            mpz_set(temp,b);
            mpz_set(b,a);
            mpz_set(a,temp);
            mpz_clear(temp);
      }

      if(mpz_cmp_ui(b,0)==0) {

            mpz_set(d,a);

            mpz_set_ui(x,1);

            mpz_set_ui(y,0);

      }

      else {

           mpz_init(q);
            mpz_init(r);  
            mpz_init(x1);
            mpz_init(x2);

            mpz_init(y1);
            mpz_init(y2);
            mpz_init(qb);
            mpz_init(a_qb);
           mpz_init(qx1);
            mpz_init(qy1);
            mpz_init(x2_x1);    
            mpz_init(y2_y1);
            mpz_set_ui(x2,1);
           mpz_set_ui(x1,0);
            mpz_set_ui(y1,1);
            mpz_set_ui(y2,0);
            while(mpz_cmp_ui(b,0)&gt;0) {
                  mpz_tdiv_q(q,a,b);
                  mpz_mul(qb,q,b);       
                  mpz_sub(a_qb,a,qb);
                  mpz_set(r,a_qb);
                  mpz_mul(qx1,q,x1);           
                  mpz_sub(x2_x1,x2,qx1);
                  mpz_set(x,x2_x1);
                  mpz_mul(qy1,q,y1);           
                  mpz_sub(y2_y1,y2,qy1);
                  mpz_set(y,y2_y1);
                 mpz_set(a,b);  
                  mpz_set(b,r); 
                  mpz_set(x2,x1); 
                  mpz_set(x1,x);
                  mpz_set(y2,y1);
                 mpz_set(y1,y);                                                   
            }
      }
      mpz_set(d,a);
      mpz_set(x,x2);
      mpz_set(y,y2);  
      if(flag==1){
            mpz_set(yy,x);
            mpz_set(xx,y);
      }
      else {
            mpz_set(yy,y);
            mpz_set(xx,x);
      }
      mpz_clear(d);
      mpz_clear(x);
      mpz_clear(y);
      mpz_clear(x1);
      mpz_clear(x2);
      mpz_clear(y1);
      mpz_clear(y2);
      mpz_clear(q);
      mpz_clear(r);
      mpz_clear(qb);
      mpz_clear(a_qb);
      mpz_clear(qx1);
      mpz_clear(x2_x1);
      mpz_clear(qy1);
      mpz_clear(y2_y1);
}
</code></pre>

<p>I run the program but the private key comes out 0 and i cant find the mistake!</p>
","<p>The most obvious issue is that you are repeatedly reseeding the system random number generator with the same value, e.g.</p>

<pre><code>srand( (unsigned) getpid());
sd=rand();
mpz_set_ui(seed, sd);
gmp_randseed(stat, seed);
</code></pre>

<p>Don't do this. You end up getting the same random number each time, and it's likely that reusing the same numbers for multiple purposes is giving bad results.</p>
","742","<linux><algorithm><encryption><rsa><private-key>","-3","1","1","2015-12-19 16:41:04","27786848","2","","4228312","","2015-12-19 16:41:04","2015-01-05 19:39:34","2015-01-06 02:08:04"
"22126118","Extensions for Private and Public Key","<p><strong>Clarify me out here,</strong>
I need to save RSA Private and Public key in Server's local Directory and I did it via getting <strong><em>Encoded bytes</em></strong> from the Keys. There is <em>file extension part</em>, when i searched some of 'em told that there is no need for extension for the key file and some of 'em are tell that public and private key should be of .der and .pem file formats respectively. So, help me out here to understand the differences. And i'm using <strong><em>Javax.Crypto API.</em></strong></p>
","<p>The file extension is simply a conventional way of distinguishing types of files: .pdf for PDF files, .html for HTML files, etc. You can use whatever extension you want (or no extension at all) to store whatever you like. It has no impact on what the file contains. </p>

<p>So if this file is only relevant to your own application, use whatever name and extension you like. You could use .pdf or .html if you wanted to and it wouldn't change anything (except it would be confusing).</p>
","739","<java><rsa><private-key><public-key><encryption-asymmetric>","1","1","1","2014-03-02 10:04:10","22126204","0","","","","","2014-03-02 09:54:20",""
"3245536","OpenSSL SSL_CTX_use_PrivateKey_file with Windows certificate store","<p>I have a native C++ library which uses OpenSSL for TLS. It reads the private key using SSL_CTX_use_PrivateKey_file and everything is fine,</p>

<p>Then I created a C# wrapper which reads the certificates from Windows certificate store according to certain OIDs and the subject name.
And here is the problem - I might get more than one certificate. How can I deal with that?
Try all of them? </p>

<p>Is it possible to hold more than one private key in a PEM file?</p>

<p>Thank you very much.</p>
","<p>You can only present one certificate to the client (well, you can present an entire certificate chain, but that's a different thing - there's still only one server certificate in the end).  So you'll have to figure out a way to choose just one - perhaps choosing the one with the latest expiry date makes sense?</p>
","735","<certificate><openssl><private-key><certificate-store>","0","0","1","2010-07-14 14:01:22","3246870","0","","","","","2010-07-14 11:17:01",""
"30492769","How to store private key in database?","<p>I am very not experienced with certs and keys. I have to store a private key for a third party API in my database. I have a key to encrypt that. This is what I did in PHP</p>

<pre><code>$private_key = ""----BEGIN PRIVATE KEY---\nABCDBLAH\n---END PRIVATE KEY----\n""
// The encryption and storing part - 1
$iv = openssl_random_pseudo_bytes(openssl_cipher_iv_length('aes-256-cbc'));
$encrypted = openssl_encrypt($data, 'aes-256-cbc', 'mykey', 0, $iv);
$encrypted_data = $encrypted .':'base64_encode($iv);
//store in the database

//retrieve later
$parts = explode(':',$encrypted_data);
$private_key= openssl_decrypt($parts[0], 'aes-256-cbc', 'mykey', 0, base64_decode($parts[1]));
// 2
Use in the API.
</code></pre>

<p>If I ignore the part between 1 and 2 for storing and retrieving the key from the database, the API and everything works correct which means there is something wrong in storing and retrieving the key. What I am I doing wrong here? If this is not the right way, what way should I use? Please help me.</p>

<p>Note: /n part in the private key. If I don't encrypt, /n doesn't matter and the API works. </p>
","<blockquote>
  <p>What I am I doing wrong here?</p>
</blockquote>

<p>Using <code>base64_encode()</code> on <code>$encrypted</code> would prevent data loss from database encoding.</p>

<p>However, there are a <em>lot</em> of other things you're doing wrong that affect the security of your scheme rather than merely prevent it from functioning.</p>

<p>Look at <a href=""https://stackoverflow.com/a/30159120/2224584"">this answer</a> for a comprehensive guide on how to implement encryption securely.</p>
","735","<php><security><openssl><private-key>","1","0","1","2018-09-12 20:13:56","","5","","","","","2015-05-27 20:43:34",""
"48315372","WEB3 | Import Private key with Public Address","<p>I made several accounts with some commands <code>personal.newAccount()</code>
and the accounts created were push to the list. 
What I want to do is, get private key with public key that I've got with <code>getAccount()</code> function because of security reason.</p>

<p>I don't want to show my owner address and public key so I want to get address from list using the function.</p>

<pre><code>web3.eth.getAccounts(); 
//[""0x407d73d8a49eeb85d32cf465507dd71d507100c1""] 
</code></pre>

<p>Then, I want to get the private key with that address like this way below.</p>

<pre><code>var publicKey = web3.eth.getAccounts();
var privateKey = extractPrivateKey(pulicKey); 
</code></pre>

<p>Is there any way to do like this using web3?
Is there some way to access the keystore on javascript file?
I have to use <code>sendTransaction()</code> function in javascript code but it needs the privateKey to sign. Now I'm storing the privateKey as static and I think is quite dangerous. 
I'm figuring out to hide my owner public and private key in the code. Please let me know If anyone have great idea. Thank you so much. </p>
","<p>First of all this line of code <code>var publicKey = web3.eth.getAccounts();</code> doesn't return you the public key, it returns you an array of addresses.</p>

<p>You could use the npm package <strong>keythereum</strong>.
It extracts the private Key from your Keystore-File by passing the specific address. First you use the <code>importFromFile</code> function to import it and then use the <code>recover</code> function to extract the private key.</p>

<p>It would look like this:</p>

<pre><code>var keystorePath = ""/yourPathToTheKeystoreFile"";

async function importPrivateKey(address) {
let methodName = ""&gt;&gt;&gt; [importPrivateKey]: "";
  try{

      var keyObject = await keythereum.importFromFile(address, keystorePath);

      var privateKey = await keythereum.recover(password, keyObject);

      return privateKey;


    }catch(e) {
      console.log(e);
      throw e;
    }
}
</code></pre>

<p>Now you can just call this function directly in any other function and use the extracted private key directly as a new parameter for the <code>sendTransaction</code>function without storing the private Key in any variable.</p>
","731","<private-key><account><web3js><web3><geth>","2","0","1","2019-08-27 17:07:39","","0","","","","","2018-01-18 06:51:03",""
"19353646","Always use private key authentication for scp","<p>I'm using scp in a script, which normally should always use private key authentication. If for some reason the private key is missing, I want the script to fail rather than display a password prompt.</p>

<p>Is it possible to disable this prompt, or to somehow specify that private key authentication should always be used?</p>
","<p>The option I was looking for is <code>-B</code>:</p>

<pre><code>-B      Selects batch mode (prevents asking for passwords or passphrases).
</code></pre>
","729","<ssh><scp><private-key><password-prompt>","0","0","1","2013-11-08 12:07:54","19858764","2","","","","","2013-10-14 04:43:10",""
"27723613","Importing RSA keys in PHP","<p>I wanted to encrypt/decrypt/sign... and so on and I found this code:</p>

<pre><code>public $pubkey = '...public key here...';
public $privkey = '...private key here...';

public function encrypt($data)
{
    if (openssl_public_encrypt($data, $encrypted, $this-&gt;pubkey))
        $data = base64_encode($encrypted);
    else
        throw new Exception('Unable to encrypt data. Perhaps it is bigger than the key size?');

    return $data;
}

public function decrypt($data)
{
    if (openssl_private_decrypt(base64_decode($data), $decrypted, $this-&gt;privkey))
        $data = $decrypted;
    else
        $data = '';

    return $data;
}
</code></pre>

<p>The only problem is that I got a private.pem (or .key dosnt matter) format and the question:</p>

<p><strong>How should I import my private.pem file in this code?</strong></p>
","<p>Use the <code>openssl_pkey_get_public()</code> function: <a href=""http://php.net/manual/en/function.openssl-pkey-get-public.php"" rel=""nofollow"">http://php.net/manual/en/function.openssl-pkey-get-public.php</a></p>

<p>It decrypt the .pem format and extracts the keys necessary for the work.</p>
","719","<php><encryption><rsa><public-key-encryption><private-key>","1","1","1","2014-12-31 18:38:19","27724365","0","","206403","","2014-12-31 17:42:38","2014-12-31 16:20:18",""
"48650141","Get private key as PEM from X509Certificate2 object in c#","<p>I am working on a project that requires I use AMQP with ssl. This is for communication between a linux based cloud server and a windows machine. I created a local certificate authority, a certificate, and a private key.  Since I'm using Azure, this had to be stored there as a pfx file. I used no password to create the pfx.   </p>

<p>The cloud service installation script (based on linux bash) is easily able to convert the pfx back into its parts using openssl.  I am struggling more with how to use the keys on my local windows machine that is running a service that needs to read the AMQP messages.</p>

<p>Long story short, is there a simple way in c# to get the original private key </p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
MIIEowI....
-----END RSA PRIVATE KEY-----
</code></pre>

<p>out of the X509Certificate2 privatekey property once i've imported the pfx file into the certificate manager?  </p>

<p>My code so far:</p>

<pre><code>X509Store certStore = new X509Store(StoreName.My, StoreLocation.LocalMachine);
certStore.Open(OpenFlags.ReadOnly);

X509Certificate2 caCert = certStore.Certificates.Find(X509FindType.FindByThumbprint, ""3C97BF2632ACAB5E35B48CB94927C4A7D20BBEBA"", true)[0];

RSACryptoServiceProvider rsa1 = (RSACryptoServiceProvider)caCert.PrivateKey;
</code></pre>

<p><strong>EDIT:</strong>
The marked as duplicate does not apply. I figured out a solution that works well. I could not find an EXACT example of how to go from certificate store to pem file in windows.</p>

<p>I utilized the utilities found at <a href=""http://www.bouncycastle.org/csharp/"" rel=""nofollow noreferrer"">http://www.bouncycastle.org/csharp/</a></p>

<pre><code>X509Store certStore = new X509Store(StoreName.My, StoreLocation.LocalMachine);
certStore.Open(OpenFlags.ReadOnly);

X509Certificate2 caCert = certStore.Certificates.Find(X509FindType.FindByThumbprint, ""3C97BF2632ACAB5E35B48CB94927C4A7D20BBEBA"", true)[0];


RSACryptoServiceProvider pkey = (RSACryptoServiceProvider)caCert.PrivateKey;


AsymmetricCipherKeyPair keyPair = DotNetUtilities.GetRsaKeyPair(pkey);
using (TextWriter tw = new StreamWriter(""D:\\private.pem""))
{
    PemWriter pw = new PemWriter(tw);
    pw.WriteObject(keyPair.Private);
    tw.Flush();
}
</code></pre>
","","716","<c#><ssl><export><private-key><x509certificate2>","1","","0","2018-02-07 13:25:38","","0","","1649043","","2018-02-07 13:25:38","2018-02-06 19:02:40","2018-02-06 19:54:59"
"17262891","SSL Certificate - What is the use of the private key in a root certificate?","<p>I am new to Cryptogrphy, HTTPS and SSL !!!
If i am not wrong , the private key of an End Entity certificate (certificate issued by trusted CA like Verisign) is used to decrypt the information sent by the client !
But does a root certificate also have a Private Key?</p>

<p>If Yes, then I wanted to know where exactly the private key of a root certificate is used?
What happens if it is leaked ? </p>
","<p>The root certificate's private key is (normally) only used to sign the intermediate certificates. Compromising it allows you to create new intermediate certificates, and by extension, certificates for any domain.</p>
","715","<ssl><https><ssl-certificate><private-key><root-certificate>","0","0","3","2013-06-23 22:01:20","17265760","0","","","","","2013-06-23 16:36:32",""
"17262891","SSL Certificate - What is the use of the private key in a root certificate?","<p>I am new to Cryptogrphy, HTTPS and SSL !!!
If i am not wrong , the private key of an End Entity certificate (certificate issued by trusted CA like Verisign) is used to decrypt the information sent by the client !
But does a root certificate also have a Private Key?</p>

<p>If Yes, then I wanted to know where exactly the private key of a root certificate is used?
What happens if it is leaked ? </p>
","<p>A root certificate is the top-most certificate of the tree, the private key of which is used to ""sign"" other certificates. All certificates immediately below the root certificate inherit the trustworthiness of the root certificate - a signature by a root certificate is somewhat analogous to ""notarizing"" an identity in the physical world. If you knew the private key, you could create new (counterfeit) certificates.</p>
","715","<ssl><https><ssl-certificate><private-key><root-certificate>","0","0","3","2013-06-23 22:01:20","17265760","0","","","","","2013-06-23 16:36:32",""
"17262891","SSL Certificate - What is the use of the private key in a root certificate?","<p>I am new to Cryptogrphy, HTTPS and SSL !!!
If i am not wrong , the private key of an End Entity certificate (certificate issued by trusted CA like Verisign) is used to decrypt the information sent by the client !
But does a root certificate also have a Private Key?</p>

<p>If Yes, then I wanted to know where exactly the private key of a root certificate is used?
What happens if it is leaked ? </p>
","<blockquote>
  <p>If I am not wrong, the private key of an End Entity certificate (certificate issued by trusted CA like Verisign) is used to decrypt the information sent by the client</p>
</blockquote>

<p>You are wrong. It isn't. The peer's own private key is used to  sign the certificate so the client can verify that the peer owns the certificate he presents, and the private key of signing certificates is used to, err, sign certificates.</p>
","715","<ssl><https><ssl-certificate><private-key><root-certificate>","0","0","3","2013-06-23 22:01:20","17265760","0","","","","","2013-06-23 16:36:32",""
"34223672","How to create public and private key cordova android app?","<p>i am using  <a href=""http://docs.build.phonegap.com/en_US/signing_signing-android.md.html"" rel=""nofollow"">phonegap create keystore file</a></p>

<p>Can you please open this?  </p>

<p>I have followed that . It has worked fine. </p>

<p>My question is : which is private key and public key on this?</p>

<p>Can you explain it ? how to open the private key and public key?</p>

<p>I have to use that public key in localStorage Encrpyt. </p>

<p>Can you please check <a href=""https://github.com/travist/jsencrypt"" rel=""nofollow"">Encrpyt/decrypt</a> this documentation?  </p>

<p>can you please explain it?</p>
","<p>To create a valid keystore file, just follow this tutorial, it's working very well: <a href=""http://docs.build.phonegap.com/en_US/signing_signing-android.md.html#Android%20Signing"" rel=""nofollow"">http://docs.build.phonegap.com/en_US/signing_signing-android.md.html#Android%20Signing</a></p>

<p>It's edited by <em>phonegap build</em> but it's not important.</p>

<p>Copy/past of important part:</p>

<blockquote>
  <ol>
  <li><p>Download and install Java.</p></li>
  <li><p>Set Java_Home directory (<a href=""http://docs.oracle.com/cd/E19182-01/820-7851/inst_cli_jdk_javahome_t/index.html"" rel=""nofollow"">http://docs.oracle.com/cd/E19182-01/820-7851/inst_cli_jdk_javahome_t/index.html</a>).</p></li>
  <li><p>Open the command prompt (cmd.exe) as an Administrator, then Run the following command: </p>
  
  <p><strong><em>keytool -genkey -v -keystore [keystore_name].keystore -alias [alias_name] -keyalg RSA -keysize 2048 -validity 10000</em></strong></p></li>
  <li><p>Keytool will ask for keystore password. Enter password and confirm:</p></li>
  <li><p>Next, keytool will ask for additional information. Supply appropriately:</p></li>
  <li><p>Next, keytool will ask password for Alias. Return if it's the same as keystore password. Othewise enter password and confirm:</p></li>
  <li><p>Your signing key is now ready</p></li>
  </ol>
</blockquote>
","708","<android><cordova><phonegap-build><keystore><private-key>","0","0","1","2015-12-11 17:41:29","","8","","","","","2015-12-11 12:31:27",""
"17095961","How i can create a self-signed certificate using phpseclib","<p>How i can create a self-signed certificate using phpseclib from a existing .csr file, only i can use a .csr file.</p>

<p>I've read the manual and the method use a private key, but in my assignment i only can use a .csr file.</p>

<p>I hope you can help me.</p>

<p>Here's my code:</p>

<pre><code>&lt;?php

    include('File/X509.php');
    include('Crypt/RSA.php');

    if ($_FILES[""file""][""error""] &gt; 0)
    {
        echo ""Return Code: "" . $_FILES[""file""][""error""] . ""&lt;br&gt;"";
    }
    else
    {
        //This is the content of the file   
        $csr = file_get_contents($_FILES[""file""][""name""]);
    }

    // create private key / x.509 cert for stunnel / website
    $privKey = new Crypt_RSA();
    extract($privKey-&gt;createKey());
    $privKey-&gt;loadKey($privatekey);

    $pubKey = new Crypt_RSA();
    $pubKey-&gt;loadKey($publickey);
    $pubKey-&gt;setPublicKey();

    $subject = new File_X509();
    $subject-&gt;loadCSR('...'); // see csr.pem
    // calling setPublicKey() is unnecessary when loadCSR() is called

    $issuer = new File_X509();
    $issuer-&gt;setPrivateKey($privKey);
    $issuer-&gt;setDN($subject-&gt;getDN());

    $x509 = new File_X509();
    //$x509-&gt;setStartDate('-1 month'); // default: now
    //$x509-&gt;setEndDate('+1 year'); // default: +1 year

    $result = $x509-&gt;sign($issuer, $subject);
    echo ""the stunnel.pem contents are as follows:\r\n\r\n"";
    echo $privKey-&gt;getPrivateKey();
    echo ""\r\n"";
    echo $x509-&gt;saveX509($result);
    echo ""\r\n""; 

?&gt;
</code></pre>
","<p>You need a private key, plain and simple. Otherwise, what are you going to sign it with? The signature field of an X.509 cert is mandatory.</p>

<p>I mean, if all you want is a public key, you don't need to bother with the X.509 overhead. You can just pony up a public key that looks like this:</p>

<pre><code>-----BEGIN PUBLIC KEY-----
MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCqGKukO1De7zhZj6+H0qtjTkVxwTCpvKe4eCZ0
FPqri0cb2JZfXJ/DgYSF6vUpwmJG8wVQZKjeGcjDOL5UlsuusFncCzWBQ7RKNUSesmQRMSGkVb1/
3j+skZ6UtW+5u09lHNsj6tQ51s1SPrCBkedbNf0Tp0GbMJDyR4e9T04ZZwIDAQAB
-----END PUBLIC KEY-----
</code></pre>

<p>But X.509 is more than just a public key - it's a signed public key. Technically, a CSR is, too, but CSR's are always self-signed whereas X.509 certs can be signed by anyone.</p>
","706","<php><ssl><certificate><private-key><phpseclib>","1","1","1","2013-06-13 22:09:51","17098009","0","","","","","2013-06-13 20:02:30",""
"23670990","How to do decryption of a file in Java/Android which is encrypted using RSACertificate.der and RSAPrivatekey.p12","<p>I am working on Android application for Encryption and decryption using RSA algorithm.
My intention is to decry-pt a file which is encrypted by server using RSACertificate.der and RSAPrivatekey.p12 files.</p>

<p>Now I have a Example.encriptedfile, RSACertificat.der and RSAPrivatekey.p12  files
I would like to decrypt the above example.encrypted file using above keys in JAVA</p>

<p>The implementation for getting Privatekey 
And Decryption code using Cipher is </p>

<p>The file is example.encrypted file.</p>

<pre><code>    byte[] descryptedData = null;
    try {
        byte[] data = new byte[(int) file.length()];
        new FileInputStream(file).read(data)

        KeyStore keystore = KeyStore.getInstance(""PKCS12"");
        keystore.load(con.getAssets().open(""rsaPrivate.p12""), ""password"".toCharArray());
        pk = (PrivateKey)keystore.getKey(""1"", ""password"".toCharArray());

        Cipher cipher = Cipher.getInstance(""RSA"");
        cipher.init(Cipher.DECRYPT_MODE, pk );
        descryptedData = cipher.doFinal(data);

    } catch (Exception e) {
        e.printStackTrace();
    }

    return new String(descryptedData);
</code></pre>

<p>The exception getting for the fallowing code is </p>

<pre><code>java.security.InvalidKeyException: unknown key type passed to RSA
at com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi.engineInit(CipherSpi.java:277)
at com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi.engineInit(CipherSpi.java:381)
at javax.crypto.Cipher.init(Cipher.java:519)
at javax.crypto.Cipher.init(Cipher.java:479)
</code></pre>

<p>So can any one provide the suggestions and solutions to implement this </p>

<p>Thanks in advance.</p>

<p>But same </p>
","<p>If it's encrypted with the private key it isn't encrypted at all, as anyone who can get the public key can decrypt it, which could be anybody.</p>

<p>If the intention was really to encrypt it, it should have been encrypted with the <em>public</em> key.</p>

<p>Possibly however the intention was to <em>sign</em> it, in which case what you have to do is <em>verify</em> it against the public key. For which you need the public key, which is in the certificate. So you load the certificate into a <code>Certificate,</code> using the <code>java.security.cert</code> API and then use a <code>java.security.Signature</code> object to verify the signature with, using the public key obtained from the <code>Certificate.</code></p>
","706","<java><android><encryption><private-key>","0","0","1","2014-05-15 09:56:41","","0","4","756859","","2014-05-15 09:56:41","2014-05-15 06:41:35",""
"34531316","Using a password to protect private key in c++","<p>I'm planning to write a little application with the basic idea that users are able to share encrypted information with each other. A little scenario: Alice writes a memo (data format is known), the application encrypts this memo and saves the memo on the application server. Now Alice wants to share this memo with Bob. Alice opens the application, searches for user ""Bob"" and receives the public key of Bob. The application encrypts the memo with Alice and Bob's key and saves the memo on the server. Now Bob is also able to read the memo.</p>

<p>The private key of the user only belongs to the device where the application is installed. It is never transferred over network. Nevertheless I would like to 'encrypt' the private key with the password of the user, so it can be stored in a (relative) secure way on the device and only be 'decrypted' if the correct password is entered. The key itself should not be altered if the password of the user changes, because this would cause that all data will have to be encrypted again with this new key. Instead the user will have to enter the old passphrase, the key is decrypted and encrypted again with the new passphrase.</p>

<p>Is there any function (maybe in OpenSSL?) to 'encrypt' or protect a key with a passphrase?</p>

<p>Note: the private key may or may not be stored in a keystore. because the application will run on many plattforms it is not clear in advance which keystore is available.</p>
","<p>Using <code>OpenSSL</code> you can save your key in a protected form (<code>BEGIN RSA ENCRYPTED...</code>). An exemplary function you may want to use (I'm omiting all the operations required beforehand, but they're pretty elementary).</p>

<pre><code>PEM_write_PKCS8PrivateKey(pFile, m_pKey, cipher, sPass, iPassLen, 0, NULL)
</code></pre>

<p>where <code>cipher</code> is your encryption algorithm, of appropriate type. More (with examples!) here: <a href=""https://www.openssl.org/docs/manmaster/crypto/pem.html"" rel=""nofollow"">https://www.openssl.org/docs/manmaster/crypto/pem.html</a></p>
","695","<c++><encryption><private-key>","1","3","2","2015-12-30 14:36:22","34531488","5","1","4834380","","2015-12-30 14:36:22","2015-12-30 14:20:51",""
"34531316","Using a password to protect private key in c++","<p>I'm planning to write a little application with the basic idea that users are able to share encrypted information with each other. A little scenario: Alice writes a memo (data format is known), the application encrypts this memo and saves the memo on the application server. Now Alice wants to share this memo with Bob. Alice opens the application, searches for user ""Bob"" and receives the public key of Bob. The application encrypts the memo with Alice and Bob's key and saves the memo on the server. Now Bob is also able to read the memo.</p>

<p>The private key of the user only belongs to the device where the application is installed. It is never transferred over network. Nevertheless I would like to 'encrypt' the private key with the password of the user, so it can be stored in a (relative) secure way on the device and only be 'decrypted' if the correct password is entered. The key itself should not be altered if the password of the user changes, because this would cause that all data will have to be encrypted again with this new key. Instead the user will have to enter the old passphrase, the key is decrypted and encrypted again with the new passphrase.</p>

<p>Is there any function (maybe in OpenSSL?) to 'encrypt' or protect a key with a passphrase?</p>

<p>Note: the private key may or may not be stored in a keystore. because the application will run on many plattforms it is not clear in advance which keystore is available.</p>
","<blockquote>
  <p>Is it possible to integrate PGP in my own applications?</p>
</blockquote>

<p><a href=""https://www.gnupg.org/related_software/gpgme/"" rel=""nofollow""><em>GnuPG Made Easy</em> (GPGME)</a> ""is a library designed to make access to GnuPG easier for applications. It provides a High-Level Crypto API for encryption, decryption, signing, signature verification and key management.""</p>
","695","<c++><encryption><private-key>","1","4","2","2015-12-30 14:36:22","34531488","5","1","4834380","","2015-12-30 14:36:22","2015-12-30 14:20:51",""
"10618286","M2Crypto.rsa privat key components","<p>Can anybody tell me, how to get p,q,dp,dq and u component of rsa private key?
loading of the key:</p>

<pre><code>string = open(keyfile,""rb"").read();
bio = BIO.MemoryBuffer(string);
rsa = RSA.load_key_bio(bio);
</code></pre>

<p>what shall i do next?</p>
","<p><code>M2Crypto</code> does not support reading the rsa parameters directly, sorry.</p>

<p>you can kind of get e (public exponend) and n (modulus) from <code>res.pub()</code> (kind of, because the first bytes are not part of it).</p>

<p>the <code>Crypto</code> API on the other hand supports reading more parameters:</p>

<pre><code>string = open(keyfile,""rb"").read()
import Crypto.PublicKey.RSA
crsa = Crypto.PublicKey.RSA.importKey(string)
print(crsa.n, crsa.e, crsa.d, crsa.p, crsa.q, crsa.u)
</code></pre>
","694","<python><components><rsa><private-key><m2crypto>","0","0","1","2012-05-16 17:13:58","","0","0","","","","2012-05-16 12:13:58",""
"31409720","Using Bitcoin-ruby to make a transaction","<p>I originally posted this question on the bitcoin stack but was told I may have better luck reposting it here. </p>

<p>I am having trouble with the bitcoin-ruby gem. I get the following error when trying to send money to another address I have on the test network:</p>

<blockquote>
  <p>/var/lib/gems/2.2.0/gems/bitcoin-ruby-0.0.7/lib/bitcoin/protocol/txout.rb:76:in
  <code>pk_script=': undefined method</code>bytesize' for nil:NilClass
  (NoMethodError)</p>
</blockquote>

<p>I am generating a private key with:</p>

<pre><code>def new_address
 Bitcoin::generate_address
end
</code></pre>

<p>And getting details for the private key with:</p>

<pre><code>def key_details(prikey, pubkey)
  #returns prikey, prikey_hash58, pubkey_hash58, pubkey_uncompressed, address as a hash
  my_key = Bitcoin::Key.new(prikey, pubkey)
  { prikey:prikey, 
    prikey_base58:my_key.to_base58, 
    pubkey_58:my_key.hash160, 
    pubkey: my_key.pub_uncompressed, 
    address:my_key.addr
  }
end
</code></pre>

<p>The code I have to send money to myself is as follows: </p>

<pre><code>require 'bitcoin'
require_relative 'utilities.rb'
require 'open-uri'

Bitcoin.network = :testnet3

def build_transaction(prev_tx, prev_out_index, key, value, addr, message)
  include Bitcoin::Builder

  new_tx = build_tx do |t|
    t.input do |i|
      i.prev_out prev_tx
      i.prev_out_index prev_out_index
      i.signature_key key
    end
    t.output do |o|
      o.value value 
      o.script {|s| s.type :address; s.recipient addr }
    end
  end
end

def prev_tx(prev_hash, network)
  if network == ""testnet3""
    prev_tx = Bitcoin::P::Tx.from_json(open(""http://test.webbtc.com/tx/#{prev_hash}.json""))
  else
    prev_tx = Bitcoin::P::Tx.from_json(open(""http://webbtc.com/tx/#{prev_hash}.json""))
  end
end

def key(publ_key, priv_key)
  key = Bitcoin::Key.new(priv_key, publ_key)
end

def bin_to_hex(s)
  s.unpack('H*').first
end

#transaction inputs
priv_key = ""private_key""
publ_key = ""public_key_long_format""
address = ""address""
previous_tx = ""previous_tx_hash""

# generate tx info off inputs
key = Bitcoin::Key.new(priv_key, publ_key)
prev_tx = prev_tx(previous_tx, ""testnet3"")
prev_out_index = 1
tx_value = prev_tx.outputs[prev_out_index].value

# build new tx
tx = build_transaction(prev_tx, prev_out_index, key, tx_value, address, ""hello"")

#
# puts tx.to_json
puts bin_to_hex(tx.to_payload)
</code></pre>

<p>Does anyone know how to solve this error?</p>
","<p>It turned out to be a couple of issues. Here is what I learned along the way:</p>

<p>The tx json data that is used to build the prev_tx object needs to have a output value as a string. Some sites use a number instead.</p>

<p>The key object sometimes doesn't form correctly. For whatever reason, I have an address which can only be generated using the private key with Bitcoin::Key.new. If you supply a private and public key the address associated with the key object is wrong. For different addresses, this isn't the case. So it is important to check the address of the key object after generating the object. </p>

<p>It is also important to make sure the addresses / keys generated on testnet3 are only used with one another. I had a situation where I thought I generated a testnet3 private key, but didn't. Thus, the testnet3 tx wasn't working. And vice versa for the normal bitcoin network.</p>

<p>Lastly, it's very important to verify the output address position. It is usually 0 or 1, but this isn't always the case...</p>
","693","<ruby><private-key><bitcoin><public-key>","0","0","1","2015-08-18 10:27:40","","3","0","","","","2015-07-14 14:36:48",""
"45298904","Testinfra ssh execution with private key","<p>Using testinfra (Pytest plugin) for testing. I want to test remote hosts from Jenkins using a private key.</p>

<pre><code>[root@jenkins tests]# testinfra --ssh-config=/path/to/private/key \
     --sudo --hosts=user@remotehost test.py
</code></pre>

<p>where</p>

<pre><code>$ cat /path/to/private/key
-----BEGIN RSA PRIVATE KEY-----
(...)
-----END RSA PRIVATE KEY-----
</code></pre>

<p>and</p>

<pre><code>$ cat test.py
def test_redis_is_installed(host):
    redis = host.package(""redis"")
    assert redis.is_installed
</code></pre>

<p>What I get is</p>

<pre><code>E               Exception: Unparsable line -----BEGIN RSA PRIVATE KEY-----

/usr/lib/python2.7/site-packages/paramiko/config.py:68: Exception
================================================================================= warnings summary ==================================================================================
None
  Module already imported so can not be re-written: testinfra

-- Docs: http://doc.pytest.org/en/latest/warnings.html
======================================================================= 1 failed, 1 warnings in 0.23 seconds ========================================================================
</code></pre>

<p>Seems like paramiko doesn't like this format, but tried other backends and it doesn't work as well. How can I pass the private key then?</p>
","<p><code>--ssh-config</code> must be a path to ssh <strong>config</strong>. You configure keypair for the host in that config.</p>

<p>Something like in ~/.ssh/config:</p>

<pre><code>Host remotehost
    User user
    IdentityFile remotehost-key
</code></pre>
","687","<python><ssh><tdd><pytest><private-key>","1","1","1","2018-03-15 01:58:05","","0","","33204","","2018-03-15 01:58:05","2017-07-25 09:15:48",""
"23150562","how does big companies like google, amazon, manage their private key infrastructure?","<p>one of my company's employees private key was compromised and it had the disastrous consequences to the company. now the company is planning to have the public/ private key management. Im wondering how the big companies like google, amazon do the key management. do they use third party application for centralization? or they do it with the set of PKI policy to be implemented in the organization. how they manages the key life-cycle?</p>

<p>thanks for your time.</p>
","<p>I believe they do it in very different ways, but there are many solutions for this. For the AWS perspective, i'd suggest you take a look at AWS Cloud HSM, a hardware security module provisioned as a service for secure key management:
<a href=""https://aws.amazon.com/cloudhsm"" rel=""nofollow"">https://aws.amazon.com/cloudhsm</a></p>
","684","<security><amazon-web-services><key><private-key><pki>","6","1","2","2014-04-29 19:43:01","","1","0","","","","2014-04-18 08:41:03",""
"23150562","how does big companies like google, amazon, manage their private key infrastructure?","<p>one of my company's employees private key was compromised and it had the disastrous consequences to the company. now the company is planning to have the public/ private key management. Im wondering how the big companies like google, amazon do the key management. do they use third party application for centralization? or they do it with the set of PKI policy to be implemented in the organization. how they manages the key life-cycle?</p>

<p>thanks for your time.</p>
","<p>If you are REALLY paranoid about security, you do not store the private key on the filesystem, you store it in hardware.  A Hardware Security Module (HSM) from a company like <a href=""http://www2.safenet-inc.com"" rel=""nofollow"">SafeNet</a> or <a href=""https://www.thales-esecurity.com"" rel=""nofollow"">Thales/nCipher</a> is a physically hardened security appliance that is designed to product encryption keys.  Once the keys are generated on the HSM they cannot be removed.  That is, you can not extract the key and copy it off somewhere else to be used for malicious purposes.  Additionally, they have hardened operating systems and software designed to prevent an attacker from being able to hack into the appliance.  Too many unsuccessful logins?  The device securely wipes its contents.  Try to pry open the box to remove the flash memory holding the keys?  There is epoxy on the physical hardware components and you will end up destroying them.</p>

<p>These devices also typically include cryptographic accelerators to increase the speed at which cryptographic operations are performed.  They also tend to include standards-based APIs, such as PKCS#11 or JCE so it is easy to integrate with other software, such as Apache or your Java JVM.</p>

<p>An HSM is not cheap, but if you are really concerned about the security of your cryptographic material, this is how you protect it.</p>
","684","<security><amazon-web-services><key><private-key><pki>","6","1","2","2014-04-29 19:43:01","","1","0","","","","2014-04-18 08:41:03",""
"37807668","How to read private key buffer from windows certificate store using nodejs?","<p>I am new to Javascript and I have the following code where I need to pass the private key buffer and ceritificate buffer data.</p>

<pre><code>    var mqttOptions = {
            clientId: '100',
            key: fs.readFileSync('C:/Users/wssClientTest/client.key'),
            cert: fs.readFileSync('C:/Users/wssClientTest/client.crt'),
            ca: fs.readFileSync('C:/Users/wssClientTest/ca.crt'),
            secureProtocol: 'TLSv1_method',
            rejectUnauthorized: false,
            protocolId: 'MQIsdp',
            protocolVersion: 3,
            passphrase: 'edgenode',
            keepAlive: 10000,
            clean: false,
            reconnectPeriod: '1000',
            will: willMessage
        };
</code></pre>

<p>Here I am passing the key and certificate buffer data from files. I want to append the private key into the certificate and install the certificate in windows certificate store. If I do that, how can I read the certificate from the windows certificate store and get the private key from it? Please assist with some example.</p>
","<p>You don't EVER read the private key back from a keystore, this would defeat the point of putting it in the keystore to start with. You pass in the data you want encrypting/signing to the keystore and it gives you back the encrypted/signed data.</p>

<p>As I mentioned in the comments to your earlier question, use the Paho web client and just pass a ""wss://"" url and let the browser deal with the keys/certs from the keystore</p>
","683","<javascript><node.js><x509certificate><mqtt><private-key>","3","0","1","2016-06-14 09:50:03","","0","","","","","2016-06-14 09:12:00",""
"15836066","How to use psql with SSL key?","<p>How to connect to a PostgreSQL server using psql with SSL key just like <code>ssh -i $KEY</code>?</p>
","<p>You can use the <a href=""http://www.postgresql.org/docs/current/static/libpq-envars.html"" rel=""nofollow""><code>PGSSLCERT</code> and <code>PGSSLKEY</code> environment variables</a> if you're not using the <a href=""http://www.postgresql.org/docs/current/static/ssl-tcp.html"" rel=""nofollow"">default locations</a>.</p>

<p>For example:</p>

<pre><code>PGSSLMODE=verify-full PGSSLCERT=cert.pem PGSSLKEY=key.pem psql -h servername
</code></pre>

<p>Remember to use <a href=""http://www.postgresql.org/docs/current/static/libpq-ssl.html"" rel=""nofollow""><code>verify-full</code> for the sslmode</a>, since the other ones won't protect you against MITM attacks.</p>
","677","<postgresql><ssl><private-key><psql>","4","3","1","2013-04-06 12:05:25","15836291","0","1","246776","","2013-04-05 14:18:26","2013-04-05 14:07:28",""
"44547055","Decryption of Secret Key using the Private Key from JKS file","<p>So I have generated a key pair in keytool and generated a symmetric key and the encrypted a String with the symmetric key and then encrypted the symmetric key. Now I have to decrypt the symmetric key and I am having some trouble. The code I am using for decryption is not throwing back any errors but it is not actually doing anything either and I am not sure what I am doing wrong.</p>

<pre><code>    package ReadFileExample;


    import java.io.BufferedOutputStream;
    import java.io.ByteArrayOutputStream;
    import java.io.FileInputStream;
    import java.io.FileOutputStream;
    import java.io.IOException;
    import java.io.InputStream;
    import java.io.ObjectOutputStream;
    import java.security.Key;
    import java.security.KeyException;
    import java.security.KeyPair;
    import java.security.KeyStoreException;
    import java.security.NoSuchAlgorithmException;
    import java.security.PrivateKey;
    import java.security.PublicKey;
    import java.security.UnrecoverableKeyException;
    import java.security.cert.CertificateFactory;
    import java.security.cert.X509Certificate;
    import java.util.Base64;

    import javax.crypto.Cipher;
    import javax.crypto.KeyGenerator;
    import javax.crypto.SecretKey;
    import javax.security.cert.Certificate;

    import java.security.KeyStore;
    import java.security.Key;
    import java.io.FileInputStream;



    public class generatekey {


       static Cipher cipher;
       public static void main(String[] args) throws Exception {






    // generating a symmetric key using the AES algorithm
     KeyGenerator generator = KeyGenerator.getInstance(""AES"");
    // 128 bit key
     generator.init(128);
    //generates a secret key
     SecretKey secretkey = generator.generateKey();
    // returns an AES cipher
     cipher = Cipher.getInstance(""AES"");
    //print key
     System.out.println(""Key: "" + cipher);







     String plainText = ""Hello World"";
    // call to method encrypt 
     String encryptedText  = encrypt(plainText, secretkey);
    // print orignial text and encrypted text
     System.out.println(""Plain Text: "" + plainText);
     System.out.println(""Encrypted Text: "" + encryptedText);





     String publicKey = ""C:/Users/girgich/public.cert"";










    // allows to write data to a file
     FileOutputStream fos = null;
    // write bytes to file
     BufferedOutputStream bos = null;
    // create file to which data needs to be written
     String fileName = ""C:/Users/girgich/newFile.txt"";

     try{
        // allows written data to go into the written path
         fos = new FileOutputStream(fileName);
        // converts written data into bytes
         bos = new BufferedOutputStream(fos);


        // writes the encrypted text into file
         bos.write(encryptedText.getBytes());                


         System.out.println(""encryptedText has been written successfully in ""
                     +fileName);

        // allows to catch bug in code
     } catch (IOException e) {
        e.printStackTrace();
     } finally {
         try{
            // check for null exception
             if (bos != null){
                bos.close();

             }
            // check for null exception
             if (fos != null){
                fos.close();
             }
         } catch (IOException e){
             e.printStackTrace();

         }



     }






    // creates a file input stream by opening a path to the file needed
     FileInputStream fin = new 
                           FileInputStream(""C:/Users/girgich/public.cert"");
    // implements the X509 certificate type
     CertificateFactory f = CertificateFactory.getInstance(""X.509"");
    // initalizes data found in the file
     X509Certificate certificate = 
                    (X509Certificate)f.generateCertificate(fin);
    // gets public key from this certificate 
     PublicKey pk = certificate.getPublicKey();
     System.out.println(pk);

     String encryptedTextKey = encryptedKey(pk, secretkey);
     System.out.println(""Encrypted Key: "" + encryptedTextKey);


    // allows to write data to a file
     FileOutputStream newFos = null;
    // write bytes to file
     BufferedOutputStream newBos = null;
    // create file to which data needs to be written
     String fileNameKey = ""C:/Users/girgich/symmetric.txt"";

     try{
        // allows written data to go into the written path
         newFos = new FileOutputStream(fileNameKey);
        // converts written data into bytes
         newBos = new BufferedOutputStream(newFos);



        // writes the encrypted text into file
        newBos.write(encryptedTextKey.getBytes());                


        System.out.println(""encryptedKey has been written successfully in ""
                     +fileNameKey);






        // allows to catch bug in code
     } catch (IOException e) {
        e.printStackTrace();
     } finally {
         try{
            // check for null exception
             if (newBos != null){
                 newBos.close();

            }
            // check for null exception
             if (newFos != null){
                 newFos.close();
            }
         } catch (IOException e){
             e.printStackTrace();

        }
    }

     String decrypt = (encryptedTextKey);

}







 public static String encrypt(String plainText, SecretKey secretkey) throws 
  Exception {
    //Encodes the string into a sequence of bytes
    byte[] plainTextByte = plainText.getBytes();
    //intialize cipher to encryption mode
    cipher.init(Cipher.ENCRYPT_MODE, secretkey);
    //data is encrypted 
    byte[] encryptedByte = cipher.doFinal(plainTextByte);
    Base64.Encoder encoder = Base64.getEncoder();
    //encodes bytes into a string using Base64
    String encryptedText = encoder.encodeToString(encryptedByte);
    // return the string encrypted text to the main method
    return encryptedText;

}

public static String encryptedKey(PublicKey pk, SecretKey secretkey) throws Exception {
    // data written to byte array
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    // writes data types to the output stream
    ObjectOutputStream writter = new ObjectOutputStream(baos);
    //specific object of secretkey is written to the output stream
    writter.writeObject(secretkey);

    //creates a byte array  
    byte[] plainTextByteKey = baos.toByteArray();

    //creates a cipher using the RSA algorithm 
    Cipher cipher = Cipher.getInstance(""RSA"");
    // initalizes cipher for encryption using the public key 
    cipher.init(Cipher.ENCRYPT_MODE, pk);
    //encrypts data
    byte[] encryptedByteKey = cipher.doFinal(plainTextByteKey);

    Base64.Encoder encoderKey = Base64.getEncoder();
    // encodes the byte array into a string.
    String encryptedTextKey = encoderKey.encodeToString(encryptedByteKey);
    return encryptedTextKey;

}


public void decrypt(String encryptedTextKey) {
    byte[] decryptedData = null;
    String password = ""******"";


    try {
        FileInputStream is = new FileInputStream(""C:/Users/girgich/keystore.jks"");
        KeyStore keystore = KeyStore.getInstance(KeyStore.getDefaultType());
        keystore.load(is, password.toCharArray());
        String alias = ""mykey"";
        Key key = keystore.getKey(alias, password.toCharArray());

        Cipher cipher = Cipher.getInstance(""RSA"");
        cipher.init(Cipher.DECRYPT_MODE, key);
        decryptedData = cipher.doFinal(encryptedTextKey.getBytes());
        System.out.println(""Decrypted Key: "" + decryptedData);

    } catch (Exception e) {
        e.printStackTrace();
    }
}
</code></pre>

<p>}</p>
","","674","<java><encryption><public-key-encryption><private-key>","0","","0","2017-06-14 19:14:56","","2","","238704","","2017-06-14 19:14:56","2017-06-14 14:03:01",""
"37139904","Multiple computers with same ssh Private and Public keys","<p>I have about 12 computers with exactly same specs. These are used for my PoS on my business.</p>

<p>I am creating a customized Ubuntu ISO to improve installation time and automate things.</p>

<p>One issue I am facing is OpenSSH-server generated keys (Pub and private), must be generated after installation through command <code>ssh-keygen</code> ...</p>

<p>However, I have to pass explicit and plain-text password, which I would like to avoid.</p>

<p>I would like to know if I can share same private and public keys to everyone, so that I can remote connect on them?
In this way, I can generate keys only once and seed it through post-script installation using pressed.</p>
","<blockquote>
  <p>One issue I am facing is OpenSSH-server generated keys (Pub and private), must be generated after installation through command ssh-keygen...</p>
</blockquote>

<p>They are generated after the installation for a reason. And that reason is certainly that they should not go to anyone else (from there is the <strong>private</strong> word). But they are <strong>Host</strong> keys.</p>

<blockquote>
  <p>However, I have to pass explicit and plain-text password, which I would like to avoid.</p>
</blockquote>

<p>Why? You can store your public key on them and you would be still able to connect with your private key, which will be still safe.</p>

<blockquote>
  <p>I would like to know if I can share same private and public keys to everyone, so that I can remote connect on them? In this way, I can generate keys only once and seed it through post-script installation using preseed.</p>
</blockquote>

<p>You can, but it is certainly not advised and fail-prone technique possibly leading to the compromised security.</p>
","674","<ssh><private-key><public-key><openssh>","0","0","1","2016-05-10 18:22:44","","0","","2196426","","2016-05-10 18:22:44","2016-05-10 13:24:02",""
"50218007","Encryption with public key in Jose-JWT","<p>I think this question is not a dupe, so I will try to explain my situation.</p>

<p>I'm testing JWT, more specifically <a href=""https://github.com/dvsekhvalnov/jose-jwt"" rel=""nofollow noreferrer"">JOSE-JWT lib</a> from Github, and well, I'm having troubles.</p>

<p>I'm generating a private-public key pair and sending to the client the public key, using PHP and <a href=""https://github.com/phpseclib/phpseclib"" rel=""nofollow noreferrer"">phpseclib</a>. Everything is correct as you can see <a href=""https://qbz28b-user.freehosting.host/api.php?action=pubkey"" rel=""nofollow noreferrer"">there</a>. My client is receiving the JSON and converting it to a object and extracting it to a string using <a href=""https://www.newtonsoft.com/json"" rel=""nofollow noreferrer"">JSON.NET</a>.</p>

<p>I'm using <a href=""http://bouncycastle.org/csharp/index.html"" rel=""nofollow noreferrer"">BouncyCastle</a> and an <a href=""https://stackoverflow.com/a/32243171/3286975"">answer from Stackoverflow</a> with a little modifications to read directly from a string instead from a File.</p>

<pre><code>        public static RSACryptoServiceProvider GetRSAProviderFromPemFile(string pemfile)
        {
            return GetRSAProviderFromPemString(File.ReadAllText(pemfile).Trim());
        }

        public static RSACryptoServiceProvider GetRSAProviderFromPemString(string pemstr)
        {
            bool isPrivateKeyFile = true;

            if (pemstr.StartsWith(pempubheader) &amp;&amp; pemstr.EndsWith(pempubfooter))
                isPrivateKeyFile = false;

            byte[] pemkey;
            if (isPrivateKeyFile)
                pemkey = DecodeOpenSSLPrivateKey(pemstr);
            else
                pemkey = DecodeOpenSSLPublicKey(pemstr);

            if (pemkey == null)
                return null;

            if (isPrivateKeyFile)
                return DecodeRSAPrivateKey(pemkey);
            else
                return DecodeX509PublicKey(pemkey);
        }
</code></pre>

<p>And both of them are giving me problems, with the answer and using docs from Jose repo:</p>

<pre><code>            var payload1 = new Dictionary&lt;string, object&gt;()
            {
                { ""sub"", ""mr.x@contoso.com"" },
                { ""exp"", 1300819380 }
            };

            Console.WriteLine(""Jose says: {0}"", JWT.Encode(payload1, pubkey, JwsAlgorithm.RS256));
</code></pre>

<p><strong>Exception:</strong></p>

<p><a href=""https://i.stack.imgur.com/1bzHJ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1bzHJ.png"" alt=""...""></a></p>

<p><em>English equivalent:</em> <a href=""http://unlocalize.com/es/74799_Keyset-does-not-exist.html"" rel=""nofollow noreferrer"">http://unlocalize.com/es/74799_Keyset-does-not-exist.html</a></p>

<p>And with Bouncy Castle:</p>

<pre><code>            var claims = new List&lt;Claim&gt;();
            claims.Add(new Claim(""claim1"", ""value1""));
            claims.Add(new Claim(""claim2"", ""value2""));
            claims.Add(new Claim(""claim3"", ""value3""));

            Console.WriteLine(""Bouncy Castle says: {0}"", Helpers.CreateToken(claims, pubkeyStr));
</code></pre>

<p><strong>Exception:</strong></p>

<p><a href=""https://i.stack.imgur.com/JKK1C.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/JKK1C.png"" alt=""...""></a></p>

<p><strong>CreateToken</strong> method extracted from here: <a href=""https://stackoverflow.com/a/44857593/3286975"">https://stackoverflow.com/a/44857593/3286975</a></p>

<p>I did a little modification to this method:</p>

<pre><code>    public static string CreateToken(List&lt;Claim&gt; claims, string privateRsaKey)
    {
        RSAParameters rsaParams;
        using (var tr = new StringReader(privateRsaKey))
        {
            var pemReader = new PemReader(tr);
            var keyPair = pemReader.ReadObject() as AsymmetricCipherKeyPair;
            if (keyPair == null)
            {
                throw new Exception(""Could not read RSA private key"");
            }
            //var privateRsaParams = keyPair.Private as RsaPrivateCrtKeyParameters;
            rsaParams = DotNetUtilities.ToRSAParameters(keyPair.Public as RsaKeyParameters); //DotNetUtilities.ToRSAParameters(privateRsaParams);
        }
        using (RSACryptoServiceProvider rsa = new RSACryptoServiceProvider())
        {
            rsa.ImportParameters(rsaParams);
            Dictionary&lt;string, object&gt; payload = claims.ToDictionary(k =&gt; k.Type, v =&gt; (object)v.Value);
            return Jose.JWT.Encode(payload, rsa, Jose.JwsAlgorithm.RS256);
        }
    }
</code></pre>

<p>In both cases is like the encrypter methods are looking for the private key (in the client client????)... So, My question is why this examples are using private keys in the client-side, if the Wikipedia says this:</p>

<p><a href=""https://i.stack.imgur.com/RAVDf.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/RAVDf.png"" alt=""...""></a></p>

<p><strong>Source:</strong> <a href=""https://en.wikipedia.org/wiki/Public-key_cryptography"" rel=""nofollow noreferrer"">https://en.wikipedia.org/wiki/Public-key_cryptography</a></p>

<p>And in several cases I found what I think is right:</p>

<p><a href=""https://connect2id.com/products/nimbus-jose-jwt/examples/jwt-with-rsa-encryption"" rel=""nofollow noreferrer"">https://connect2id.com/products/nimbus-jose-jwt/examples/jwt-with-rsa-encryption</a></p>

<p>In this Java example, this uses public key to encrypt data, not private one.</p>

<p>I don't know why C# examples are using private keys in the client-side, this is ilogical, can somebody explain me why, and how can I solve this problems?</p>
","<p>I have found an answer for one of the two problems I have, and is that I haven't readed completely the JOSE-JWT repo, it says:</p>

<pre><code>var payload = new Dictionary&lt;string, object&gt;()
{
    { ""sub"", ""mr.x@contoso.com"" },
    { ""exp"", 1300819380 }
};

var publicKey=... //Load it from there you need

string token = Jose.JWT.Encode(payload, publicKey, JweAlgorithm.RSA_OAEP, JweEncryption.A256GCM);
</code></pre>

<p>I have realized tha Bouncy Castle is only a API to manipulate public-private keys, the encryptation-decrypting work is done by JOSE-JWT. So, my question is solved.</p>
","673","<c#><client><jwt><private-key><jose>","0","0","1","2019-06-19 13:11:01","50263750","0","","782754","","2019-06-19 13:11:01","2018-05-07 15:47:40",""
"35500484","Can I use public key to generate private key?","<p>I am using OpenSSL to generate private key.
Currently, I have public key on hand, can I generate private key according the public key by using OpenSSL.</p>

<p>Thanks in advance.</p>
","<p>No, and with good reason.</p>

<p>If you could do this a private key would no longer be private because everybody would be able to generate it based on a public key and everybody would be able to sign any document with the generated private key, pretending to be the issuer of the public key.</p>
","672","<openssl><private-key><public-key>","0","1","1","2016-02-19 08:30:29","","2","","","","","2016-02-19 08:18:35",""
"29312538","Recover a signed message using public/private key","<p>I have generated public and private keys using the following commands:</p>

<ul>
<li><code>openssl genrsa -out D:\opensslkeys\privatekey1.pem 1024</code></li>
<li><code>openssl pkcs8 -topk8 -inform PEM -outform DER -in  D:\opensslkeys\privatekey1.pem -out D:\opensslkeys\privatekey1.der -nocrypt</code></li>
<li><code>openssl rsa -in D:\opensslkeys\privatekey1.pem -pubout -outform DER -out D:\opensslkeys\publickey1.der</code></li>
</ul>

<p>Then I wrote a Java program to sign a message and then verify it, which worked:</p>

<pre><code>    String message = ""Hello world"";
    File privateKey = new File(""privatekey.der"");
    KeyPair keyPair = readKeyPair(privateKey, ""happy"".toCharArray());
    PrivateKey privkey= PrivateKeyReader.get(""privatekey.der"");
    Signature signature = Signature.getInstance(""SHA256WithRSA"");
    signature.initSign(privkey);
    signature.update(message.getBytes());
    byte [] signatureBytes=new byte[512];    
    signatureBytes= signature.sign();
    PublicKey pubk=PublicKeyReader.get(""publickey.der"");
    byte[] encodedPublicKey1=pubk.getEncoded();

    Signature verifier = Signature.getInstance(""SHA256WithRSA"");
    verifier.initVerify(pubk);
    verifier.update(message.getBytes());

    if (verifier.verify(signatureBytes)) {
        System.out.println(""Signature is valid"");
    } else {
        System.out.println(""Signature is invalid"");
    }
</code></pre>

<p>But after verifying I need to recover the message. Please explain how to do it.</p>
","<p>You already have the message.</p>

<p>You can't 'recover' it from the signature, if that's what you're referring to. A signature is not an encryption.</p>
","663","<java><encryption><bouncycastle><private-key><public-key>","2","0","2","2015-03-28 02:05:55","","1","","4486839","","2015-03-28 01:57:21","2015-03-28 01:13:39",""
"29312538","Recover a signed message using public/private key","<p>I have generated public and private keys using the following commands:</p>

<ul>
<li><code>openssl genrsa -out D:\opensslkeys\privatekey1.pem 1024</code></li>
<li><code>openssl pkcs8 -topk8 -inform PEM -outform DER -in  D:\opensslkeys\privatekey1.pem -out D:\opensslkeys\privatekey1.der -nocrypt</code></li>
<li><code>openssl rsa -in D:\opensslkeys\privatekey1.pem -pubout -outform DER -out D:\opensslkeys\publickey1.der</code></li>
</ul>

<p>Then I wrote a Java program to sign a message and then verify it, which worked:</p>

<pre><code>    String message = ""Hello world"";
    File privateKey = new File(""privatekey.der"");
    KeyPair keyPair = readKeyPair(privateKey, ""happy"".toCharArray());
    PrivateKey privkey= PrivateKeyReader.get(""privatekey.der"");
    Signature signature = Signature.getInstance(""SHA256WithRSA"");
    signature.initSign(privkey);
    signature.update(message.getBytes());
    byte [] signatureBytes=new byte[512];    
    signatureBytes= signature.sign();
    PublicKey pubk=PublicKeyReader.get(""publickey.der"");
    byte[] encodedPublicKey1=pubk.getEncoded();

    Signature verifier = Signature.getInstance(""SHA256WithRSA"");
    verifier.initVerify(pubk);
    verifier.update(message.getBytes());

    if (verifier.verify(signatureBytes)) {
        System.out.println(""Signature is valid"");
    } else {
        System.out.println(""Signature is invalid"");
    }
</code></pre>

<p>But after verifying I need to recover the message. Please explain how to do it.</p>
","<p>Signing a message does not make it unreadable, so there is no ""recovery"" step required. The signature is a little bit of extra data that may be in the same file or may be stored separately. The signature allows the reader of the message to verify who wrote the message (via the public key that validates the signature) and that the message has not been altered.</p>

<p>If you want to give someone your signed message, you give them the clear-text message and the signature. They can then use your public key to validate the signature. The signature is based on a digest of the message and your private key. The validation step computes the digest of the message and validates the signature of the digest with the public key. If either the public key doesn't correspond to the private key used in the signature, or if the message digest doesn't match, then the signature is detected as invalid.</p>

<p>A related operation would by to encrypt a message. This definitely makes the message unreadable. The encryption would be with a public key and only the holder of the associated private key would be able to decrypt the message.</p>
","663","<java><encryption><bouncycastle><private-key><public-key>","2","2","2","2015-03-28 02:05:55","","1","","4486839","","2015-03-28 01:57:21","2015-03-28 01:13:39",""
"33415723","Using .crt instead of a .p12","<p>I am trying to make a connection via my Android client to my server. The server is HTTPS. To make the client connect to the server I used a client.key and client.crt that was signed via the same CA .crt file as the server and converted to a .p12 format. The client is supposed to have the private key and public key. But the client shouldn't have the server private key. The only way to get Android to work is to load in a p12 file from the server into the <code>TrustManagerFactory</code>. But this is not the right way since the private key from the server is inside that file. The <code>TrustManagerFactory</code> doesn't allow me to load in a .crt file.</p>

<p>My question is: How do I load a .crt file into <code>KeyStore</code> instead of the p12 I am using now. Or do I need to use something else then the <code>KeyStore</code>.</p>
","<p><a href=""https://developer.android.com/training/articles/security-ssl.html"" rel=""nofollow"" title=""Directly from google dev guide working solution for ya"">Directly from google dev guide working solution for ya:</a></p>

<pre><code>// Load CAs from an InputStream
// (could be from a resource or ByteArrayInputStream or ...)
CertificateFactory cf = CertificateFactory.getInstance(""X.509"");
// From https://www.washington.edu/itconnect/security/ca/load-der.crt
InputStream caInput = new BufferedInputStream(new FileInputStream(""load-der.crt""));
Certificate ca;
try {
    ca = cf.generateCertificate(caInput);
    System.out.println(""ca="" + ((X509Certificate) ca).getSubjectDN());
} finally {
    caInput.close();
}

// Create a KeyStore containing our trusted CAs
String keyStoreType = KeyStore.getDefaultType();
KeyStore keyStore = KeyStore.getInstance(keyStoreType);
keyStore.load(null, null);
keyStore.setCertificateEntry(""ca"", ca);

// Create a TrustManager that trusts the CAs in our KeyStore
String tmfAlgorithm = TrustManagerFactory.getDefaultAlgorithm();
TrustManagerFactory tmf = TrustManagerFactory.getInstance(tmfAlgorithm);
tmf.init(keyStore);

// Create an SSLContext that uses our TrustManager
SSLContext context = SSLContext.getInstance(""TLS"");
context.init(null, tmf.getTrustManagers(), null);

// Tell the URLConnection to use a SocketFactory from our SSLContext
URL url = new URL(""https://certs.cac.washington.edu/CAtest/"");
HttpsURLConnection urlConnection =
    (HttpsURLConnection)url.openConnection();
urlConnection.setSSLSocketFactory(context.getSocketFactory());
InputStream in = urlConnection.getInputStream();
copyInputStreamToOutputStream(in, System.out);
</code></pre>
","663","<android><ssl><ssl-certificate><private-key><public-key>","0","1","1","2015-10-29 15:49:29","33418878","3","3","","","","2015-10-29 13:34:34",""
"29139011","Access PrivateKey in x509 certificate in windows certificate store marked non-exportable","<p>I've managed to access the certificates collection and target the specific certificate by thumbprint. I can access all its properties, and its ""HasPrivateKey"" is set to true. </p>

<p>The ""Exportable"" in the CspKeyContainerInfo is marked as false.</p>

<p>When I do a PrivateKey.ToXmlString(false) meaning I do not get the key parameters but just the Modulus and Exponent its fine:</p>

<pre><code>&lt;RSAKeyValue&gt;
    &lt;Modulus&gt;4hjg1ibWXHIlH...ssmlBfMAListzrgk=&lt;/Modulus&gt;
    &lt;Exponent&gt;AQAB&lt;/Exponent&gt;
&lt;/RSAKeyValue&gt;
</code></pre>

<p>but if I set it to toXmlString(true) to get all the values it fails:</p>

<pre><code>&lt;RSAKeyValue&gt;
    &lt;Modulus&gt;4hjg1ibWXHIlH...ssmlBfMAListzrgk=&lt;/Modulus&gt;
    &lt;Exponent&gt;AQAB&lt;/Exponent&gt;
    &lt;P&gt;8QZCtrmJcr9uW7VRex+diH...jLHV5StmuBs1+vZZAQ==&lt;/P&gt;
    &lt;Q&gt;8CUvJTv...yeDszMWNCQ==&lt;/Q&gt;
    &lt;DP&gt;elh2Nv...cygE3657AQ==&lt;/DP&gt;
    &lt;DQ&gt;MBUh5XC...+PfiMfX0EQ==&lt;/DQ&gt;
    &lt;InverseQ&gt;oxvsj4WCbQ....LyjggXg==&lt;/InverseQ&gt;
    &lt;D&gt;KrhmqzAVasx...uxQ5VGZmZ6yOAE=&lt;/D&gt;
&lt;/RSAKeyValue&gt;
</code></pre>

<p>However if I re-import the certificate and mark it ""Exportable"", then the above gives me access to all the KeyInformation I need to proceed.</p>

<p>Is there a way to keep a key Non-Exportable, and still access the information with toXmlString(true) programatically by using x509....Certiificate2 object?</p>

<pre><code>   X509Certificate2Collection xcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByThumbprint, ""4678237245FEDC8059D113675955DFB870D36BF4"", false);

        foreach (X509Certificate2 x509 in xcollection)
        {
            var y = x509.PrivateKey.ToXmlString(false);
            var f = x509.PrivateKey.ToXmlString(true);
        }
</code></pre>

<p>Cheers</p>
","","660","<c#><private-key><x509certificate2><certificate-store>","0","","0","2015-03-19 09:33:39","","10","","1711298","","2015-03-19 09:33:39","2015-03-19 07:16:07",""
"7531375","Why does PuTTY use its own private key format when log into SSH server?","<p>Just a little bit curious, why PuTTY use its own version of private key format to do SSH?</p>
","<p>The author of PuTTY gives two main reasons for having the custom key format on <a href=""http://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/key-formats-natively.html"" rel=""noreferrer"">this page</a>.</p>

<p>In short:</p>

<ul>
<li><p>PuTTY's format stores the public half of the key in plaintext, which allows PuTTY to send the public key to the server automatically.</p></li>
<li><p>The key is fully tamperproofed with the help of a Message Authentication Code.</p></li>
</ul>
","658","<putty><private-key>","6","5","1","2014-04-26 08:36:48","9070408","0","","850848","","2014-04-26 08:36:48","2011-09-23 15:28:40",""
"19145289","JConsole SSL and private key","<p>I'm trying to connect to remote service running on Amazon EC2 via JMX. Ports are opened and it looks managing to establish connection but starts to pending and then fails with message like 'You are trying to connect over SSL when it is not configured properly, do you want to try without SSL?'</p>

<p>I found docs where key and trust stores are used to establish connection with JConsole but I have a private key only provided by Amazon EC2 services and the problem for me is that I don't understand how to use it with JConsole to establish connection.</p>

<p>Could someone pleas point me to right direction?</p>
","<p>You are conflating SSH and SSL. They aren't the same thing. And there is no such thing as 'having private key only'. Every private key has a corresponding public key. Your question doesn't actually make sense.</p>
","658","<ssl><jmx><private-key><visualvm><jconsole>","-1","0","2","2013-10-04 07:03:12","19174949","5","","538514","","2013-10-03 05:27:39","2013-10-02 19:31:09",""
"19145289","JConsole SSL and private key","<p>I'm trying to connect to remote service running on Amazon EC2 via JMX. Ports are opened and it looks managing to establish connection but starts to pending and then fails with message like 'You are trying to connect over SSL when it is not configured properly, do you want to try without SSL?'</p>

<p>I found docs where key and trust stores are used to establish connection with JConsole but I have a private key only provided by Amazon EC2 services and the problem for me is that I don't understand how to use it with JConsole to establish connection.</p>

<p>Could someone pleas point me to right direction?</p>
","<p>You will need to create a key store and import your private key enerated by EC2.
Then you will need to create a trust store and import the EC2's certificate there.
The difference between keystore and trustore is described <a href=""https://stackoverflow.com/questions/318441/truststore-and-keystore-definitions"">here</a>.</p>

<p>Once you have your keystore and truststore ready you can, for example, install the Security plugin to VisualVM and use the security configuration dialogue in the options to use the stores to communicate with secured servers. Or you can follow that guide you found for JConosole.</p>
","658","<ssl><jmx><private-key><visualvm><jconsole>","-1","1","2","2013-10-04 07:03:12","19174949","5","","538514","","2013-10-03 05:27:39","2013-10-02 19:31:09",""
"41165275","CngKey.Import on azure","<pre><code>var rawData = Convert.FromBase64String(_signingKey);
var cng = CngKey.Import(rawData, CngKeyBlobFormat.Pkcs8PrivateBlob);
</code></pre>

<p>I use this code to extract key, from embedded <code>base64</code> string.
It works fine when I test it locally but when I publish on azure I get following exception:</p>

<pre><code>WindowsCryptographicException: The system cannot find the file specified
</code></pre>

<p>(once again I'm not reading from any file)
I need this to communicate with apple apns for push notifications, is there any workaround?
And this happens only on free service plan, if I switch to basic plan it's working.</p>
","<p>It seems that it causes by there is no certificate attached in your Azure Mobile App. If it is that case, we need to upload the <a href=""https://developer.apple.com/library/content/documentation/IDEs/Conceptual/AppDistributionGuide/AddingCapabilities/AddingCapabilities.html#//apple_ref/doc/uid/TP40012582-CH26-SW6"" rel=""nofollow noreferrer"">""Development"" or ""Distribution"" SSL certificate</a> to the WebApp. More info about how to send push notifications to iOS App, please refer to the azure <a href=""https://docs.microsoft.com/en-us/azure/app-service-mobile/app-service-mobile-ios-get-started-push#a-nameconfigure-hubaconfigure-notification-hub"" rel=""nofollow noreferrer"">document</a>.</p>

<p><a href=""https://i.stack.imgur.com/3CFEF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3CFEF.png"" alt=""enter image description here""></a></p>
","654","<c#><.net><azure><.net-core><private-key>","7","1","4","2018-04-26 18:53:16","","3","1","7302252","","2016-12-16 18:55:44","2016-12-15 13:23:51",""
"41165275","CngKey.Import on azure","<pre><code>var rawData = Convert.FromBase64String(_signingKey);
var cng = CngKey.Import(rawData, CngKeyBlobFormat.Pkcs8PrivateBlob);
</code></pre>

<p>I use this code to extract key, from embedded <code>base64</code> string.
It works fine when I test it locally but when I publish on azure I get following exception:</p>

<pre><code>WindowsCryptographicException: The system cannot find the file specified
</code></pre>

<p>(once again I'm not reading from any file)
I need this to communicate with apple apns for push notifications, is there any workaround?
And this happens only on free service plan, if I switch to basic plan it's working.</p>
","<p>I've had a similar error trying to construct a X509Certificate2 from a byte array - worked fine locally but once I deploy to Azure Web App, I got the same and VERY misleading file not found exception.</p>

<p>The real issue turned out to be that there was no user store associated with the web service account. You can also get a similar error if there are permission-related errors with accessing the certificate store on Windows.</p>

<p>In any case - In my scenario I fixed the problem by using MachineKeySet:
new X509Certificate2(certRawBytes, default(string), X509KeyStorageFlags.MachineKeySet);</p>

<p>So, in your scenario, try something like:</p>

<pre><code>var keyParams = new CngKeyCreationParameters
{
  KeyCreationOptions = CngKeyCreationOptions.MachineKey,
};
CngKey.Create(CngAlgorithm.Rsa, keyName, keyParams);
</code></pre>

<p>Note: You may have to set a few parameters to get the above working. The Import method doesn't seem to support MachineKey - but you should be able to achieve similar outcome by using the Create method.</p>
","654","<c#><.net><azure><.net-core><private-key>","7","1","4","2018-04-26 18:53:16","","3","1","7302252","","2016-12-16 18:55:44","2016-12-15 13:23:51",""
"41165275","CngKey.Import on azure","<pre><code>var rawData = Convert.FromBase64String(_signingKey);
var cng = CngKey.Import(rawData, CngKeyBlobFormat.Pkcs8PrivateBlob);
</code></pre>

<p>I use this code to extract key, from embedded <code>base64</code> string.
It works fine when I test it locally but when I publish on azure I get following exception:</p>

<pre><code>WindowsCryptographicException: The system cannot find the file specified
</code></pre>

<p>(once again I'm not reading from any file)
I need this to communicate with apple apns for push notifications, is there any workaround?
And this happens only on free service plan, if I switch to basic plan it's working.</p>
","<p>I ran into the same error after publishing an existing application to Azure. In my case the problem was solved after I set <code>WEBSITE_LOAD_USER_PROFILE = 1</code> in App Services / App Name / Application Settings.</p>
","654","<c#><.net><azure><.net-core><private-key>","7","7","4","2018-04-26 18:53:16","","3","1","7302252","","2016-12-16 18:55:44","2016-12-15 13:23:51",""
"41165275","CngKey.Import on azure","<pre><code>var rawData = Convert.FromBase64String(_signingKey);
var cng = CngKey.Import(rawData, CngKeyBlobFormat.Pkcs8PrivateBlob);
</code></pre>

<p>I use this code to extract key, from embedded <code>base64</code> string.
It works fine when I test it locally but when I publish on azure I get following exception:</p>

<pre><code>WindowsCryptographicException: The system cannot find the file specified
</code></pre>

<p>(once again I'm not reading from any file)
I need this to communicate with apple apns for push notifications, is there any workaround?
And this happens only on free service plan, if I switch to basic plan it's working.</p>
","<p>To add to @strohmsn's answer, you can also set the App Service settings with this value directly within Visual Studio on the Publish page for web apps: Right click on web app and select Publish, then select App Service Settings, and you can add setting properties there: <code>WEBSITE_LOAD_USER_PROFILE = 1</code> in this case. See screenshot:</p>

<p><a href=""https://i.stack.imgur.com/4Ai4K.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4Ai4K.png"" alt=""enter image description here""></a></p>
","654","<c#><.net><azure><.net-core><private-key>","7","0","4","2018-04-26 18:53:16","","3","1","7302252","","2016-12-16 18:55:44","2016-12-15 13:23:51",""
"3965162","iPhone: how/whether to include my existing private key in a new certificate?","<p><b>Short version:</b></p>

<p>Is it necessary or even possible for me to generate a new distribution certificate based on my existing private key, or is there no harm, both for new apps and updates to existing apps on the app store, to generate a new certificate with a new private key?</p>

<p><b>Long version:</b></p>

<p>It seems to me that there is conflicting/misleading information in the iPhone Developer Program User Guide regarding private keys and distribution certificate expiration.</p>

<p>On the one hand, it says that you should guard your private key with your life, and keep a copy of it so that you can use it on a new machine if you change developer machines. My understanding was that somehow you must hold onto your one true private key (i.e., the first one you generate for your company when requesting your first certificate), and use it forever (at least, use it forever once you've deployed an app with it to the App Store).</p>

<p>On the other hand, it tells you that distribution certificates expire after one year and you can simply request a new distribution certificate when you need one. What would make sense to me would be if they followed that with a paragraph that started ""Because it is critical for you to use your original private key when requesting your new certificate, here is how you request a certificate that is created from a pre-existing private key..."" But there is no such paragraph and after searching I haven't heard of a way to do that.</p>

<p>There is this closely related post on stackoverflow: <a href=""https://stackoverflow.com/questions/1410156/lost-private-key-for-iphone-distribution-certificate-what-could-be-solutions"">Lost Private Key For iPhone Distribution Certificate. What could be solutions?</a></p>

<p>The answers to that question seem to indicate that when a distribution certificate is lost or expired, you can revoke it and create a new one and there is no affect on your apps currently on the app store, and you can continue to publish new apps with your new certificate without Apple saying ""Hey, you aren't the same company as before.""</p>

<p>One key question left unanswered by that post is whether it's possible to <i>update</i> existing apps on the app store using a different cert/key than the one the apps were previously published under. But I have heard elsewhere that that's possible also.</p>

<p>So it boils down to: Is it misleading for Apple to make it sound like your private key is really the thing that identifies an app as being from your company? Is it really just your app id plus your credentials for logging in to the development portal and itunesconnect that identify your company and your apps?</p>
","<p>You <em>can</em> generate a new private key, and use it with no interruptions to your applications. I know this from first-hand-experience - as I lost my key and had to invalidate it, and regenerate a new one - after which I needed to sign an update to two of my existing applications (signed with the old key) - and submit the for updates to the AppStore.</p>

<p>There were not disruptions - either to existing apps after the key was revoked - or to the new updates, after people updated them. No user-data in the application was lost during the application update either. So in-short, everything was completely seamless.</p>

<p>There was one topic being discussed whether push notifications would continue to work properly (if you app uses them). I can't speak for that, though.</p>
","650","<iphone><certificate><private-key>","5","3","1","2011-03-17 03:04:53","3968586","0","2","-1","","2017-05-23 11:58:13","2010-10-19 03:34:25",""
"12291824","How to sign XML using private key contained in smartcard for a web application?","<p>I was looking for a solution to sign XML using unexportable private key (this require passphrase/secret password to be informed by user input for create the hash using it) contained in usb token (smartcard etc) for a web application. I have made a c# class library to make this but obviously the code is executed in server-side, so I can't access the usbtoken/smartcard of the client over internet, unless it's plugged in the server pc (so my solution may be installed in local network of my customers and the usbtoken plugged in server's usb. It's working like that today but I want to change this for the customer use its token in his machine)</p>

<p>I have created a code using SignedXml, X509Certificates and other classes, to achieve this, but I was looking for equivalents in silverlight class library for encapsulate all this things and execute it in client side, but unfortunately SignedXml can't be used in Silverlight (not exists..).</p>

<p>I have created an ActiveX for doing this successfully but my solution now only works in Internet Explorer/Windows, and it's not very easy to maintain because of my business logics.</p>

<p>Anyone can help me with this please? Any suggestions are very welcome.</p>

<p>If I can port my activex solution to silverlight, or if its possible to do that using other MS Technology that can be executed in other browser/OS.</p>

<p>Sorry for bad English, not a native speaker. Thank you.</p>
","<p>Java applet is a better option than the ActiveX. </p>

<p>Silverlight won't give you access to certificate storages, and its development has stopped (Silverlight 5 is officially the last version). </p>

<p>Our company offers a ready to use solution for distributed cryptography which includes ActiveX, Java applet and Flash module for client-side activities. This solution is discussed in details in <a href=""https://stackoverflow.com/questions/10656100/signing-pdfs-on-a-server-document-using-a-signature-from-the-user/10656679#10656679"">this answer</a>. </p>
","648","<x509certificate><private-key><xml-signature><signedxml>","0","1","1","2012-09-06 06:06:56","","0","","","","","2012-09-06 01:30:38",""
"43228866","Certificate private key missing XCODE","<p>I've spent quite a time looking or at least searching for the solution but I couldn't find a way.</p>

<p>I've always been an android person along with Windows but recently I've been in need to publish on iTunes.</p>

<p>So I work at a company that develops apps and we are developing an app for an another organization, the app will be published under their apple account.
They added us as an ""App Manager"" in the members and I've requested Certificate + provision profile for the app that they create in their apple account.
When I build unto XCode I have the issue of ""certificate doesn't have private key""</p>

<p>I looked online in the xcode manuals, the only way to publish to iTunes either directly from Xcode or through Application Loader I need a certificate that has a private key, please correct me if I'm wrong.
So I asked the IT guy in their company to provide me the .p12 so I can proceed with the upload, but he keeps refusing to give me the .p12 saying it's a sensitive file and the only way is to do it through their account and they are in a different city.
So what's the point of making an another account a member ""App Manager"" if I can't distribute from our account? </p>

<p>Is this the correct approach ?
This issue has been bugging me lately I'd appreciate any help.</p>

<p>Thanks </p>
","<p>The role only determines what you can do in iTunes Connect.  Apple does not want you private key, because with it, Apple could build an app as your company and users installing the app would basically trust it as if it were built by you.  Or worse, if Apple's dev site gets hacked and the private keys were all stolen, I could build a Facebook app as if I were Facebook.  The private key should be protected by the development organization and Apple should not have access to that file.  </p>

<p>Separately, you may have an organization that has a group who builds the application for deployment versus a group who actually submits the app for release to Apple.  Many big IT organizations work this way.  In this case, your development team is given the private key, cert, and profile, and will generate the signed binary for submitting to the app store.  They could not actually submit it to the store however.  They provide the app binary to the deployment team, who has an App Manager role.  That user would then submit to Apple.</p>

<p>You simply need to explain that you cannot create a signed binary for distribution without the private key that is part of the signing identity.  If they want to control the private key, have them create the build with the signing identity and send it to you for deployment.  If they can't do the build themselves, you need the private key to do it for them. </p>
","644","<xcode><certificate><itunesconnect><provisioning-profile><private-key>","0","0","1","2017-04-05 20:03:46","43240627","0","","3553298","","2017-04-05 12:29:49","2017-04-05 10:43:01",""
"34812287","How do I convert an array object to a string object in PowerShell?","<p>While trying to create an CSV file with information about certificates I have an issue to store the userrights on the private key.</p>

<p>The problem is that I want to store multiple values in one attribute so I use an array. 
At first I had no errors, however the column in my csv-file remained empty even in the case where the array has a value.</p>

<p>With a simple Write-Host I can see my array has the expected value so this part works okay. </p>

<p>For further investigations I have added the line:</p>

<pre><code>Get-Member $certs.GetValue(""UserRights"")
</code></pre>

<p>This gives an error indicating I have to convert my variable to a string-variable.</p>

<p><a href=""https://i.stack.imgur.com/KK68x.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/KK68x.png"" alt=""enter image description here""></a></p>

<p>So next I have tried to convert this array to a single string.
I have tried several ways but my error doesn't disappear so it doesn't work.
Underneath is my full code with some former attempts commented.</p>

<pre><code>cls $certs = Get-ChildItem cert:\LocalMachine -Recurse  | Where-Object {-not $_.PSIsContainer} | Select * Write-Host (""There were {0} certificates"" -f ($certs | Measure-Object).Count)

foreach($certificate in $certs) {
    if($certificate.HasPrivateKey)
    {
        Write-Host ""Certificate's PSChildName is"" $certificate.PSChildName
        $rsaFile = $certificate.PrivateKey.CspKeyContainerInfo.UniqueKeyContainerName
        $fullPath = ""C:\ProgramData\Microsoft\Crypto\RSA\MachineKeys\"" + $rsaFile
        $acl = Get-Acl -Path $fullPath
        foreach($accessrule in $acl.Access)
        {
            Write-Host ""User"" $accessrule.IdentityReference ""has the following rights:"" $accessrule.FileSystemRights
        }

        Write-Host ""------""

        $UserRechten = @()

         foreach($accessrule in $acl.Access)
        {
         $UserRechten += ""{0}:{1};"" -f ($accessrule.IdentityReference,$accessrule.FileSystemRights)
        }  



        Write-Host ""================================================================""


        # -join $UserRechten
        # $Userrechten | out-string
        # $UserRechten = [system.String]::Join("" "", $UserRechten)
        $separator = "";""
        [string]::Join($separator,$UserRechten)

        $certs | Add-Member -MemberType NoteProperty -Name ""UserRights"" -Value $UserRechten -Force

        Write-Host ""UserRechten has value : ""$UserRechten

        Get-Member $certs.GetValue(""UserRights"")

        Write-Host ""================================================================""


    } } 


$Certs | Add-Member -MemberType NoteProperty -Name ""MachineName"" -Value $env:COMPUTERNAME -Force
# $certs | Add-Member -MemberType NoteProperty -Name ""Store"" -Value 'My' -Force $RunDate = Get-Date -Format 'yyyy-MM-dd' $certs | Add-Member -MemberType NoteProperty -Name ""RunDate"" -Value $RunDate -Force $certs | Add-Member -MemberType NoteProperty -Name ""Owner"" -Value $env:USERNAME -Force

$Certs | Select * | Export-Csv c:\Certificaten\LocalCertsAll_$env:COMPUTERNAME.csv 
$Certs | Select MachineName, Owner, PSParentPath, DnsNameList, PSChildName, NotBefore, NotAfter, Rundate, EnhancedKeyUsageList, HasPrivateKey, SerialNumber, Issuer, Subject, FriendlyName, UserRigthts | 
    Export-CSV c:\Certificaten\Localcerts_$env:COMPUTERNAME.csv
</code></pre>
","<p>As noted in the comments, <code>Get-Member</code> is probably not what you're looking for</p>

<p>You (almost certainly) don't want to add the <code>UserRights</code> member property to the <code>$Certs</code> array, but rather to the individual objects in <code>$Certs</code>. </p>

<p>(I removed a bunch of superfluous <code>Write-Host</code> statements for readability):</p>

<pre><code>$CertsAmended = foreach($Certificate in $certs)
{
    if($certificate.HasPrivateKey)
    {
        $rsaFile = $certificate.PrivateKey.CspKeyContainerInfo.UniqueKeyContainerName
        $fullPath = ""C:\ProgramData\Microsoft\Crypto\RSA\MachineKeys\"" + $rsaFile
        $acl = Get-Acl -Path $fullPath

        # Create the UserRights value using -join
        $UserRechten = @(foreach($accessrule in $acl.Access){
            Write-Host ""User"" $accessrule.IdentityReference ""has the following rights:"" $accessrule.FileSystemRights
            ""{0}:{1}"" -f ($accessrule.IdentityReference,$accessrule.FileSystemRights)
        }) -join "";""

        # Add the property to the individual object
        $Certificate | Add-Member -MemberType NoteProperty -Name ""UserRights"" -Value $UserRechten

        Write-Host ""Userrights: "" $UserRechten

        # ""Drop"" the certificate object (now with a UserRights value) back onto the pipeline
        $Certificate
    } 
} 
</code></pre>

<p>Now you can export the <code>$CertsAmended</code> array to CSV all you want</p>

<hr>

<p>If you find the <code>$var = @(foreach($item in $collection){}) -join ';'</code> displeasing to the eye, break it into two statements:</p>

<pre><code>$UserRechten = foreach($accessrule in $acl.Access)
{
    # Create UserRight string here, without ;
}
$UserRechten = $UserRechten -join ';'
</code></pre>

<hr>

<p>For the <code>$fullPath</code> variable, you may want to use the <code>Join-Path</code> cmdlet:</p>

<pre><code>$fullPath = Join-Path ""C:\ProgramData\Microsoft\Crypto\RSA\MachineKeys\"" $rsaFile
</code></pre>
","643","<arrays><string><powershell><certificate><private-key>","0","0","1","2016-01-15 17:35:51","","3","","3829407","","2016-01-15 14:21:49","2016-01-15 13:34:45",""
"36232970","is it possible to upload new apk with different private key ? google play beta","<p>In google play <a href=""https://support.google.com/googleplay/android-developer/answer/3131213"" rel=""nofollow"">doc</a>, it says that:</p>

<blockquote>
  <p>You don't need a production APK to publish an alpha/beta app</p>
</blockquote>

<p>That's mean I can upload an APK signed with different private key. Right?</p>

<p>But when i try that i got this error:</p>

<blockquote>
  <p>You uploaded a debuggable APK. For security reasons you need to
  disable debugging before it can be published in Google Play. Learn
  more about debuggable APKs. You uploaded an APK that is signed with a
  different certificate to your previous APKs. You must use the same
  certificate. Your existing APKs are signed with the certificate(s)
  with fingerprint(s):</p>
</blockquote>
","<blockquote>
  <p>That's mean I can upload an APK signed with different private key.
  Right?</p>
</blockquote>

<p>No, that's mean that you can upload a beta or alpha without have an APK in production. For example if you want to test your app before going into production you can publish a beta app and understand if there are any problems.</p>

<p>Once you publish an APK (alpha, beta, production) you need to use the same certificate.</p>
","640","<android><google-play><private-key>","0","1","1","2016-03-26 08:07:12","36233040","0","","2837959","","2016-03-26 08:07:12","2016-03-26 07:56:28",""
"3838693","Using .snk's private key to sign arbitrary data","<p>I'm developing a .NET <a href=""http://code.google.com/p/octalforty-componento/"" rel=""nofollow"">package manager</a> and one thing that got me thinking is security. </p>

<p>Given that anybody can potentially upload an assembly to the repository, how do I verify that said assembly comes from a trusted source? For example, I'd trust <code>NHibernate.dll</code> much more if it was signed with a private key of guys from NHForge. To ensure this, all I'd have to do is to verify assembly signature with NHForges' public key.</p>

<p>Now, with that in mind, how can one establish this relationship (that this particular public key belongs to this particular person)? An idea I came up with is as follows:</p>

<ul>
<li>Project author creates an XML file which contains information about the project and about an author (name, email, etc)</li>
<li>This XML file is signed with authors' private key extracted from a <code>.snk</code> file which is later used to sign the assembly itself</li>
<li>Author uploads this signed XML file to the repository, where it gets checked and a relationship between an author and a public key is established</li>
</ul>

<p>To implement this (is this a viable idea, BTW?), I need a programmatic way of accessing <code>.snk</code> files and reading PK. Is there something for this in .NET?</p>
","<p>First off, strong names should <strong>not</strong> be used as a security mechanism—they are only intended to be used as an assembly identity mechanism. For something like this, I'd look into Authenticode, which was specifically designed for verifying the publisher/source of an assembly (i.e. security instead of just identity).</p>

<p>That being said, the idea you outlined wouldn't be feasible as-is because you can't strong name sign an XML file—strong name signing only works on .NET assemblies. Theoretically, what you could do is maintain some kind of mapping for each public key to a specific publisher (perhaps through a publisher registration process or something?), and then verify assemblies' strong name signatures before they are added to the repository.</p>

<p>As for the technical aspect, you can extract the public key from a <code>.snk</code> file via the <a href=""http://msdn.microsoft.com/en-us/library/s5a7c9ad.aspx"" rel=""nofollow""><code>StrongNameGetPublicKey</code></a> function (which is part of the unmanaged strong naming API). You'll have to load the <code>.snk</code> file into memory yourself, though.</p>
","638","<.net><strongname><private-key>","2","1","1","2010-10-01 19:55:10","","5","1","","","","2010-10-01 11:22:28",""
"8437421","Converting byte[] to some implementation of AsymmetricAlgorithm","<p>I need to convert a byte[] to some implementation of AsymmetricAlgorithm. I am trying to sign a <code>xml</code> and I can only get the private key in a byte array. 
I am using the quite good <a href=""http://pkcs11net.sourceforge.net/"" rel=""nofollow"">PKCS11.Net</a> to access a token, if anyone needs to know.</p>

<p>The class I am using to sign is this: <code>System.Security.Cryptography.Xml.SignedXml</code><br>
The property only asks for AsymmetricAlgorithm : <code>XmlSignedXml.SigningKey</code>;</p>

<p>Does anyone knows how to do it?</p>
","<p>Use a library like <a href=""http://www.bouncycastle.org/"" rel=""nofollow"">http://www.bouncycastle.org/</a> to import this.</p>
","635","<c#><.net><security><private-key><xml-signature>","0","0","1","2011-12-08 20:49:40","","2","","","","","2011-12-08 20:41:01",""
"21002753","Implementation to protect a 2048-bit RSA private key using a secret sharing scheme","<p>I'm trying to protect a 2048-bit RSA private key (confidentiality &amp; availability).
I have been looking around for more information on how to do that and I'm thinking of using a secret sharing scheme (Shamir's Secret Sharing would be fine).</p>

<p>Is it the best option ?
Does anyone know a GNU/GPL software implementation in order to accomplish this ?</p>

<p>I look at ""ssss"" (<a href=""http://point-at-infinity.org/ssss/"" rel=""nofollow"">http://point-at-infinity.org/ssss/</a>), but secret need to be at most 128 ASCII characters and it's too short for a 2048-bit RSA private key.</p>

<p>Thanks for your help.</p>
","<p>Just as with public-key cryptography, you occasionally need to use a hybrid scheme when the data exceeds a certain size - you can encrypt the private key using a normal symmetric algorithm with a random key, and then split the symmetric key using a secret-splitting algorithm of choice.</p>

<p>I believe that the implementation here: <a href=""https://github.com/moserware/SecretSplitter"" rel=""nofollow"">https://github.com/moserware/SecretSplitter</a> uses this method to split data that exceeds the size limit of the underlying splitting algorithm.</p>
","635","<encryption><private-key><shared-secret>","3","3","2","2014-01-11 11:11:09","","3","1","","","","2014-01-08 17:41:32",""
"21002753","Implementation to protect a 2048-bit RSA private key using a secret sharing scheme","<p>I'm trying to protect a 2048-bit RSA private key (confidentiality &amp; availability).
I have been looking around for more information on how to do that and I'm thinking of using a secret sharing scheme (Shamir's Secret Sharing would be fine).</p>

<p>Is it the best option ?
Does anyone know a GNU/GPL software implementation in order to accomplish this ?</p>

<p>I look at ""ssss"" (<a href=""http://point-at-infinity.org/ssss/"" rel=""nofollow"">http://point-at-infinity.org/ssss/</a>), but secret need to be at most 128 ASCII characters and it's too short for a 2048-bit RSA private key.</p>

<p>Thanks for your help.</p>
","<blockquote>
  <p>Is it the best option ? Does anyone know a GNU/GPL software implementation in order to accomplish this ?</p>
</blockquote>

<p>Crypto++ offers the functionality. But the license is Public Domain (individual source files) or Boost Software 1.0 (library as a whole). Its not GNU/GPL.</p>

<p>Here's the code to do it from Crypto++. It was taken from <a href=""http://sourceforge.net/p/cryptopp/code/HEAD/tree/trunk/c5/test.cpp"" rel=""nofollow""><code>test.cpp</code></a>:</p>

<p><strong>Splitting</strong></p>

<pre><code>void SecretShareFile(int threshold, int nShares, const char *filename, const char *seed)
{
    RandomPool rng;
    rng.IncorporateEntropy((byte *)seed, strlen(seed));

    ChannelSwitch *channelSwitch;
    FileSource source(filename, false, new SecretSharing(rng,
        threshold, nShares, channelSwitch = new ChannelSwitch));

    vector_member_ptrs&lt;FileSink&gt; fileSinks(nShares);
    string channel;
    for (int i=0; i&lt;nShares; i++)
    {
        char extension[5] = "".000"";
        extension[1]='0'+byte(i/100);
        extension[2]='0'+byte((i/10)%10);
        extension[3]='0'+byte(i%10);
        fileSinks[i].reset(new FileSink((string(filename)+extension).c_str()));

        channel = WordToString&lt;word32&gt;(i);
        fileSinks[i]-&gt;Put((byte *)channel.data(), 4);
        channelSwitch-&gt;AddRoute(channel, *fileSinks[i], DEFAULT_CHANNEL);
    }

    source.PumpAll();
}
</code></pre>

<p><strong>Combining</strong></p>

<pre><code>void SecretRecoverFile(int threshold, const char *outFilename, char *const *inFilenames)
{
    SecretRecovery recovery(threshold, new FileSink(outFilename));

    vector_member_ptrs&lt;FileSource&gt; fileSources(threshold);
    SecByteBlock channel(4);
    int i;
    for (i=0; i&lt;threshold; i++)
    {
        fileSources[i].reset(new FileSource(inFilenames[i], false));
        fileSources[i]-&gt;Pump(4);
        fileSources[i]-&gt;Get(channel, 4);
        fileSources[i]-&gt;Attach(new ChannelSwitch(recovery, string((char *)channel.begin(), 4)));
    }

    while (fileSources[0]-&gt;Pump(256))
        for (i=1; i&lt;threshold; i++)
            fileSources[i]-&gt;Pump(256);

    for (i=0; i&lt;threshold; i++)
        fileSources[i]-&gt;PumpAll();
}
</code></pre>
","635","<encryption><private-key><shared-secret>","3","0","2","2014-01-11 11:11:09","","3","1","","","","2014-01-08 17:41:32",""
"45018579","C# X509Certificate2: Where to store the private key?","<p>I have a self-hosted WCF application, which acts as a server and I want to install/deploy it on a Windows machine.</p>

<p>The application uses a self-signed certificate, which I created with makecert.exe. So the PFX, CER and PVK are there and available. Everything works fine.</p>

<p>At this point of time and only for testing, the application reads the certificate and the private key from an embedded resource. That means both are compiled into the application, which is a high security risk.</p>

<p>I already know, that the most common way to store this data, is the windows certificate store. And I also know, how to save and read from the windows certificate store.</p>

<p>But there is something, that I still do not get:</p>

<p><strong>Where do I store the private key (PVK) for the certificate (CER), so that my application is able to use the CER?</strong></p>

<p>I mean, if my application can read it, then anybody, who has access to this machine, can read it. Or is this wrong?</p>

<p>Do I have to take care myself or is there any ""industry standard"" for windows machines, to save and read the PVK?</p>
","<p>Windows certificate store is the most common place to store certificates (i.e. CA) or certificates with private key (End entity).</p>

<p>If you store certificate ( with private key - PFX) in <strong>LocalMachine\My</strong> store then you can assign privileges who (what account) can access private key. It is done through <strong>certlm.msc</strong> tool. System account has access by default so any system service can use the private key.</p>

<p>There are other ways to store private key (like smartcard, HSM, net HSM etc.) and other ways to access private key (like PKCS#11).</p>
","631","<windows><wcf><store><private-key><x509certificate2>","0","1","1","2017-07-10 18:54:57","45019689","0","","","","","2017-07-10 17:47:10",""
"44490111","which part of FireBase Admin SDK private key is secret?","<p>When I <code>generate new private key</code> from Firebase Admin SDK page, it says the key <em>contains</em> secret information. Which parts of it are secret? The <code>private_key</code> obviously is, the <code>.*_ur[il]</code> obviously aren't. How about the others? Do I need to protect the other fields, like <code>client_id</code>, <code>private_key_id</code> and <code>client_email</code>? Can I publish them in the repo? It would be much easier to handle if I only need to safekeep the <code>private_key</code> field. I can read the field and insert it into a const object declared in the program source.</p>
","","630","<private-key><firebase-admin>","0","","0","2017-06-12 01:07:48","","3","","","","","2017-06-12 01:07:48",""
"37255052","Only RSA, generated on Android is working properly under Android (5.0+ devices)","<p>I've tried to use RSA. I wanted to check, if all is correct, so I used encryption and decryption (only for testing).</p>

<p>It seems, that only the private key, that was generated under android is working properly.</p>

<p>I'm getting the following error for RSA keys, that were generated via openssl: </p>

<pre><code> java.security.spec.InvalidKeySpecException: java.lang.RuntimeException:
 error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag
</code></pre>

<p>For public keys all is working for androidgenerated and opensslgenerated keys.</p>

<pre><code>final String RSA_ENCODED_PRIVATE_KEY_ANDROID_GENERATED = """" +
""MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQD8z7AfzAPlOrKUEOH0fewwLHUq"" +
""F+kEhETFTYr+5p0IanXKBZPI+hbvk5zKaZkX6FhyiIdwCmyELsQk2L43xkW6YXzg9bL4xSx06VcA"" +
""iWDk4onU3K9pVC51Tq1Z+ygg3zvSSoRaUxW3aNHDygx8oIIJpuOQ7x+2TF8sFq1GIy2YdH/Eih02"" +
""s2/w3ExykxBn+5rWgj0ZpoWO34umRfQooYeThbJx94v2ap7lOOPPZFiKvH7mUDbOJfb3xcGPynJE"" +
""45oDNaew/yOeAjCS/ISHJcZjF8ip7/YKsMRQXCQxzCyUSSEH9ifj90K46H2vx46E7JHBMQk0IuyL"" +
""jqL8V3dYhmibAgMBAAECggEAJ9wjG9BR6OmJUHkc9yyHecz4qCte7Pxhz237dVcs+S+35KNeerib"" +
""tyhh9zQRFEjo8R3/pLWwCGNLP7gAvdCAG/PU+a8jib+k08YalpYSdeQV8T7eVVAVhx9hi6di21P3"" +
""HZ/sIEWrTeCz+he4QkoYVqc+iBJ7wIVoGA53QXC4dqnPZmPcQgaNOAgfz+FTB6ybPduZhL21Qgtq"" +
""1IlJ+N5j8mykILj5J1FqCDq5PJA4BwL7f/QK7xRZ8BJGE/6LCmNjXym6C/Dc+uTpIkFiDE2LfgDG"" +
""EWVoSnr5kRdt0ucCGPLyCjQ+SrAFtypE6MzL2rC4kfBR1KdXuZB37P+Mlabr0QKBgQD+3yn+Nx4Q"" +
""Op8VafH1ntL0vWrQhHoXicisJdWL3dbXELRmEPzOrrlsfhzU5SVLlXBD/eW+aOM745vbQZ9eeBhE"" +
""us/QE0ofHPaqy68YFI8IgXSWPGWWimWwNVxZnllAV/8KMU4wRWpcxs7TIbKpRL4EMBk6L610Zq83"" +
""1XxqOzqJCQKBgQD97jBdFls+5TQ5u+ws0m8DCtM1kuN+AYFI5UuN6+UBTo1zY/MvolrF5aqTxrUp"" +
""xAt6+kPl/0FExIgXJ61kl8o5ZbRGUaZtVUUytDAoJpbYjOzZ7WrRRUwkh5aMmwJraBctR+udkF8N"" +
""8+JqiOLbzKRNVWmrw2U7eO3zB/MRi09BgwKBgBpQE9fI/POT+cSOMYq4IPNfct2gL7KqaOtM5KUR"" +
""/BIsCVPYQSFdbItE4dkg5x7MiNCcL9HepkcSko6qUbfBElBWMQo8U5SuutCbQrJrvPCV3OF9zsch"" +
""9qmgeK5P6Mr5yrzUpkvZfsehRs0JV5aeIDfyd0hIj9HKoCBVjAizoLFxAoGBANLNV+0PUDSIhrCf"" +
""J1OWZn46EFjbVmwWx8NCR1TMTlKlaZwvj4Ut3PmIzfDb9y1zCKzQ8mkPXJnAJdJDKBjoQgMgQWZX"" +
""Bjihn06Wc5wBXRzs8PuBszmDs9Bnlz2muX187jCzEhC994tXudEDToF2A7gHfjAPiAy1OaSWJt2b"" +
""rvINAoGBAP6FnMeqrLEmU14vfPOWBSsPeEPI3kCOUhvMo29SnLx5gdE/gocq5AMEydNt0zIWwLAu"" +
""qiO74DIJmK+b10czQg4+sJhk4iQ1cK/k0QQ4wrpu3JDgpgKPFeiyTgPyUHh1O57RCXS2feZAAU2o"" +
""napBWm7pfLOyAgoB2Im88GMFTnMY"";    

final String RSA_ENCODED_PRIVATE_KEY_OPENSSL_GENERATED = """" +
""MIIEpQIBAAKCAQEA+cNkMcWTXY5ZXxwwg0AkrZ5jVyoTTBbYqHWRghrOnpddES48"" +
""COot9/oeKElu17Q+AfWTTsWTlR8pQdnVsT1fBQJrZSY/YCsNbKv4BfKnurxOQyck"" +
""Tz5ysIitWqJCpiPvRB957jWMIMMPcB/VmI0q6wZ+f7BaTl89QKSR8nWQDgkOdQc7"" +
""D/aSUdWckak6ILvZAcjhzR0OL6O6TaeKgHT1g7slexO3haMKbaW8dc1Vgq/D7cAi"" +
""EBTGxNQLhEL8LPUnSYeQqzdKqj5xP7AUnT/0EAEX5Oz3zNzZozNDNhcbZXx+xike"" +
""s60y+6MPW2ihKBt1G/BwUBj3VpAjdlq1y/2lKQIDAQABAoIBAQDkWGQpMPaLCVLi"" +
""JrafuKwP44f1L+2WmiiY02wl4/ZVfhNDWt7eU6OVXKHnuUNSiGJMjkWQNgi4xFWG"" +
""8+5v7akKvmyLfI1ikdnjKdJHNdNtYS24LXf/zxsyFLNQ8po2pRHiWVizlVc4uL1L"" +
""iH9SynWbjENo4EWf82jfydX5MsxyVrz1qmh5JeQC4VgxFdpz8Q912gfAc+h9QK8e"" +
""x6MVP/LoIeDBuQf4+1kmTN3Szyc+y0i1Bfem8NrswlTobBXwV4CcnvX+kArDlOTG"" +
""H6+j5murcZe2A/un/mUSC/3hCC84wEkr8uJsZ0JkNRqBga55Rema7AcFIZ04AZvl"" +
""gEroQboBAoGBAP6svxtfmBArLNZe+Opm8ena7RG5b9WHFMnrND7in/2GTHQlfteq"" +
""csFAKxnuq9BiBlY3Qm65o8etm7GdSRlUwiBy2r8P1RfV6LGRFK/Jzgk9gDh+yJpg"" +
""rEEQ6c0n0FJtOloNehP7sYIOSSPqztyFH7QGkTMxqUT+GOfQsal+RnlBAoGBAPsQ"" +
""GiinmsSlZ1xaA2knGKIiez7ms1/Dv5BIpjme9JkR7uIg+5WPcFBqufMdQ98OmFlT"" +
""u1aPHW3/+eis/R1Y24h30TBH4DvhXz7D+OIUDOTfBEQ83bGSNP4AInhNlCfzDV1Y"" +
""SjdMKoGyMxd7tWPxtDkoC3VBbz8dpEMZF3z4FgnpAoGBANC2J6Q6UneluogwqxQG"" +
""q+j4FuM4spMusfXMwTNsLKvr/QoOlIYQVR1VBj2pYLtVKlZL0TDHCJcjCv6jpP2S"" +
""fclz9xsv0XZIQvwKpwZtf2IJOeSS2rnR0jk8sC8Gmu6CP5j/hHWOBupL5Nr/muoU"" +
""W2gBHcvzvgIhr62DVaZPK1hBAoGBAOqsq3by66UCYvIdJXEF3W24Q3GRXXuXUpmA"" +
""fvf/T+1AqQVwBRpQoJBaooPQCCAY2Wkt7j/DuKOYkLXf9RyYcWRHcx7pIH14dXoK"" +
""3rocOc05dRh/uE4CN0xxPccr5N/OveBR5dV4eYcP1dgOh4frZyXB+6vXxS+++krJ"" +
""yn3Cu375AoGASxHCB0gdfYRyWQEl0WoL1eyohdAJf08kVBZtAQ2jLeqY0ZEdUpzG"" +
""+99qyw2IysGMwmjCxribLwbUm2cg74lZnX0NQH4HfQ5Pp4c0RUyJARrVzPhyQ1lu"" +
""vgPZpCebTX9/118crlHQlTiGD4M258ghR8msm/+p4Efl8NvEcQ35y04="";

byte[] keyBytes = Base64.decode(RSA_ENCODED_PRIVATE_KEY_ANDROID_GENERATED, Base64.DEFAULT);
PKCS8EncodedKeySpec spec = new PKCS8EncodedKeySpec(keyBytes);
KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
PrivateKey key = keyFactory.generatePrivate(spec);//working    

byte[] keyBytesOpenSSL = Base64.decode(RSA_ENCODED_PRIVATE_KEY_OPENSSL_GENERATED, Base64.DEFAULT);
PKCS8EncodedKeySpec specOpenSSL = new PKCS8EncodedKeySpec(keyBytesOpenSSL);
KeyFactory keyFactoryOpenSSL = KeyFactory.getInstance(""RSA"");
PrivateKey keyOpenSSL = keyFactoryOpenSSL.generatePrivate(specOpenSSLenter code here);//java.security.spec.InvalidKeySpecException
</code></pre>
","<p>The structure of the OPENSSL version is different from the ANDROID one.</p>

<p>See both data structures in the online ASN.1 decoder: </p>

<p><a href=""https://lapo.it/asn1jsrel=""nofollow"">RSA_ENCODED_PRIVATE_KEY_ANDROID_GENERATED</a></p>

<p><a href=""https://lapo.it/asn1jsrel=""nofollow"">RSA_ENCODED_PRIVATE_KEY_OPENSSL_GENERATED</a></p>

<p>Therefore I assume that the OPENSSL version is not a valid <a href=""https://tools.ietf.org/html/rfc5208#page-3"" rel=""nofollow"">PKCS#8 structure</a>, only a subset containing the PrivateKey structure. </p>

<p>May be you executed the wrong command using OpenSSL, if I read the documentation correct it creates by default a PKCS#1 structure. If you want a PKCS#8 strcusture you have to convert it later using <code>openssl pkcs8 ..</code> command.</p>
","628","<java><android><rsa><android-5.0-lollipop><private-key>","0","0","1","2016-05-17 08:27:46","37258995","6","","2247864","","2016-05-17 08:27:46","2016-05-16 13:26:01",""
"19315855","c# RSA PrivateKey Why?","<p>I use <strong>privKeyOk</strong> it works fine, and <strong>privKeyOk</strong> is generate by openssl <br/>  </p>

<pre><code>openssl genrsa -out rsa_1024_priv.pem 1024
</code></pre>

<p>but <strong>privKey</strong> is failed, test in vs2005 and vs2010. Here is the code in question <br/>
<strong>test()</strong> and <strong>test2()</strong> are same error, why?
<br/></p>

<p><strong>GetIntegerSize</strong> see <a href=""http://www.jensign.com/opensslkey/opensslkey.cs"" rel=""nofollow"">http://www.jensign.com/opensslkey/opensslkey.cs</a> <br/>
<strong>BigInteger</strong> see <a href=""http://www.codeproject.com/Articles/2728/C-BigInteger-Class"" rel=""nofollow"">http://www.codeproject.com/Articles/2728/C-BigInteger-Class</a> <br/></p>

<pre><code>public void test()
{
    //byte[] privKeyOk = Convert.FromBase64String(""MIICXAIBAAKBgQC66m7oUZPf02OMzUlUxPIWD09YhjtFiK8HR1jjIeeNwcR7301jdM6bco0xLiMAom1YzyjivCAhBjplWOnkjt/KiaSHt5FpXZZ5s6Vlg99Rro5ClLiBwVttCcqSPVJ0dH79t3x2BQ5mvS5qnso0jOL4mDBjlrxWq0Ki0Me5N+/RuwIDAQABAoGAOJUFE+C2EfiM1y/Bth6UZicmTtb7lFYHHf30I3W9AcWZdCIp7CSM8rOfmDauM9/3l/3GE7T9SOH4xXs/+odhqQq3nXVQ63nfdd8OQA58dSER1ybKHlpORTgyF5v2+4K7UVaDr9ADbZxcLSaF2kjgOJAT5Irp8jbfRO1KMbTVEekCQQDhkOa3ST/+P0Oez47iKHbjXpW1vfHVMJA5hGLAlMbPREhkorVDWeh3vqBWUmaVZY+7kNGcX6/tMTXVntEMawuVAkEA1CKLJJANQe79bTz6Ro3+OI9UL/xd7WyJWGSkIzgXW5A1XveOg0kwgJc+XsdcBCEQVl2SYWfte91s+VAfMRiUDwJAOuHsmGQSxHgXWtmr3vXZMzl5s1vGSXTH8XvRm5w62dhlXX/r+Yz61md4y4/vH4jHoJsJXNzNvAlgmEdBIxC+kQJANxadYapS9wtUHpkWOVpIaXG3IBr+XVixNhY0lbzMPAfwBDBvfuJzyQD9vmkxGRVpA7Sa/daaUm9HDFtlLj++uwJBAJlLr5knlgsQmJNTcZZhdjMcPsoyFdUOVkEDgn5UGWDrwm3kB3YwDeVn3EQrGg0pE1EsbmSIlTb+KAUItClihU4="");
    byte[] privKey = Convert.FromBase64String(""MIICWwIBAAKBgQDmp99KnS17WAXmDbx+pJ7QSa5FWYammQAnxescDTKWH8p3LbNqxZRaPhYbTqe6fqYj9cIYgjre/EecxfdzrLfoF2yR6uOD+MiahWhLxP7nKYnFs7YYKvIxxjkkSEidF3Fj1oepZHkAAlRDY1viqdqSMuEiuSy7OReWKjJDJX2tXQIDAQABAoGAfGVTHrmQOvJpE/6ahy6fXDQwocQ7w4PGuqyaNSHFA4QXvJjQJ6hxbw4G/Ck6enEthz1WtcMenv4uXRXDdAZVk6xnhx7scc0ebJiJte/OvVGCo3kg9CBOz9s1imufDfcIR+hdY4XdUquTD+y0HgWn/qq8Grj346/VFg+EZ3wMR2ECQQH88l+U5skNqv2IuG6Ipc7d5gRNsW+9Usxbt5kdzCQeYOcddTEn0xrDrSdsxTbKFCFiLDkUqHF/vGWjNCDQWMTlAkB0BQ20j5E5aOIoLaXnTek1JpsMkL2nvXP1qSwSp1bHUYWEtDJvcYwXvRhUOW+FT7LJFOKJbl+dNGlx4FY7XHcZAkEBPbDZwyvQgqyiuE5QCRJfMBpdw1WoJ2jg0buoY3ZDcYcRnUzDE1XuVgjnHDl6uueX8x0hwGho+NBULWzjsspGlQJAcHTFiBLwzRjgvdkhSka2mZJGD7PsYT69u4yy75HMB375UFvp1yPUit37SwgxFKLfxRC9VEDr5ND8tCii7P7/YQJAAN0RIsnTLW81z6F1absoWW8VdGvxYlgcI/biPj4xybHMDlw9m0KfVik8QVcbUdvdAUhWasx5/GcSsrtxoWOifg=="");

    byte[] MODULUS, E, D, P, Q, DP, DQ, IQ;
    MemoryStream mem = new MemoryStream(privKey);
    BinaryReader binr = new BinaryReader(mem);
    byte bt = 0;
    ushort twobytes = 0;
    int elems = 0;
    twobytes = binr.ReadUInt16();
    if (twobytes == 0x8130)
        binr.ReadByte();
    else if (twobytes == 0x8230)
        binr.ReadInt16();
    else
        return;
    twobytes = binr.ReadUInt16();
    if (twobytes != 0x0102)
        return;
    bt = binr.ReadByte();
    if (bt != 0x00)
        return;

    elems = GetIntegerSize(binr);
    MODULUS = binr.ReadBytes(elems);

    elems = GetIntegerSize(binr);
    E = binr.ReadBytes(elems);

    elems = GetIntegerSize(binr);
    D = binr.ReadBytes(elems);

    elems = GetIntegerSize(binr);
    P = binr.ReadBytes(elems);

    elems = GetIntegerSize(binr);
    Q = binr.ReadBytes(elems);

    elems = GetIntegerSize(binr);
    DP = binr.ReadBytes(elems);

    elems = GetIntegerSize(binr);
    DQ = binr.ReadBytes(elems);

    elems = GetIntegerSize(binr);
    IQ = binr.ReadBytes(elems);

    //Test data is valid, can be ignored
    BigInteger biMODULUS = new BigInteger(MODULUS);
    BigInteger biE = new BigInteger(E);
    BigInteger biD = new BigInteger(D);
    BigInteger biP = new BigInteger(P);
    BigInteger biQ = new BigInteger(Q);
    BigInteger biDP = new BigInteger(DP);
    BigInteger biDQ = new BigInteger(DQ);
    BigInteger biIQ = new BigInteger(IQ);
    BigInteger biPhi = (biP - 1) * (biQ - 1); 

    if (biMODULUS == biP * biQ &amp;&amp;
        biDP == biD % (biP - 1) &amp;&amp; 
        biDQ == biD % (biQ - 1) &amp;&amp;
        biIQ == biQ.modInverse(biP) &amp;&amp;
        biD == biE.modInverse(biPhi))
    {
        RSACryptoServiceProvider RSA = new RSACryptoServiceProvider();
        RSAParameters RSAparams = new RSAParameters();
        RSAparams.Modulus = MODULUS;
        RSAparams.Exponent = E;
        RSAparams.D = D;
        RSAparams.P = P;
        RSAparams.Q = Q;
        RSAparams.DP = DP;
        RSAparams.DQ = DQ;
        RSAparams.InverseQ = IQ;
        RSA.ImportParameters(RSAparams); //Error: Throw System.Security.Cryptography.CryptographicException Incorrect data.
    }
}

public static byte[] HexStrToBytes(string hexString)
{
    hexString = hexString.Replace("" "", """").Replace(""\r"", """").Replace(""\n"", """");
    byte[] bytesCnt = new byte[hexString.Length / 2];
    for (int i = 0; i &lt; bytesCnt.Length; i++)
        bytesCnt[i] = Convert.ToByte(hexString.Substring(i * 2, 2), 16);
    return bytesCnt;
}

    private void test2()
    {
        RSACryptoServiceProvider RSA = new RSACryptoServiceProvider();
        RSAParameters RSAparams = new RSAParameters();
        //RSAparams.Modulus = HexStrToBytes(""00e6a7df4a9d2d7b5805e60dbc7ea49ed049ae455986a6990027c5eb1c0d32961fca772db36ac5945a3e161b4ea7ba7ea623f5c218823adefc479cc5f773acb7e8176c91eae383f8c89a85684bc4fee72989c5b3b6182af231c6392448489d177163d687a9647900025443635be2a9da9232e122b92cbb3917962a3243257dad5d"");
        RSAparams.Modulus = HexStrToBytes(""e6a7df4a9d2d7b5805e60dbc7ea49ed049ae455986a6990027c5eb1c0d32961fca772db36ac5945a3e161b4ea7ba7ea623f5c218823adefc479cc5f773acb7e8176c91eae383f8c89a85684bc4fee72989c5b3b6182af231c6392448489d177163d687a9647900025443635be2a9da9232e122b92cbb3917962a3243257dad5d"");
        RSAparams.Exponent = HexStrToBytes(""010001"");
        RSAparams.D = HexStrToBytes(""7c65531eb9903af26913fe9a872e9f5c3430a1c43bc383c6baac9a3521c5038417bc98d027a8716f0e06fc293a7a712d873d56b5c31e9efe2e5d15c374065593ac67871eec71cd1e6c9889b5efcebd5182a37920f4204ecfdb358a6b9f0df70847e85d6385dd52ab930fecb41e05a7feaabc1ab8f7e3afd5160f84677c0c4761"");
        RSAparams.P = HexStrToBytes(""01fcf25f94e6c90daafd88b86e88a5cedde6044db16fbd52cc5bb7991dcc241e60e71d753127d31ac3ad276cc536ca1421622c3914a8717fbc65a33420d058c4e5"");
        RSAparams.Q = HexStrToBytes(""74050db48f913968e2282da5e74de935269b0c90bda7bd73f5a92c12a756c7518584b4326f718c17bd1854396f854fb2c914e2896e5f9d346971e0563b5c7719"");
        RSAparams.DP = HexStrToBytes(""013db0d9c32bd082aca2b84e5009125f301a5dc355a82768e0d1bba86376437187119d4cc31355ee5608e71c397abae797f31d21c06868f8d0542d6ce3b2ca4695"");
        RSAparams.DQ = HexStrToBytes(""7074c58812f0cd18e0bdd9214a46b69992460fb3ec613ebdbb8cb2ef91cc077ef9505be9d723d48addfb4b083114a2dfc510bd5440ebe4d0fcb428a2ecfeff61"");
        //RSAparams.InverseQ = HexStrToBytes(""00dd1122c9d32d6f35cfa17569bb28596f15746bf162581c23f6e23e3e31c9b1cc0e5c3d9b429f56293c41571b51dbdd0148566acc79fc6712b2bb71a163a27e"");
        RSAparams.InverseQ = HexStrToBytes(""dd1122c9d32d6f35cfa17569bb28596f15746bf162581c23f6e23e3e31c9b1cc0e5c3d9b429f56293c41571b51dbdd0148566acc79fc6712b2bb71a163a27e"");

        RSA.ImportParameters(RSAparams); //Also Error: Throw System.Security.Cryptography.CryptographicException Incorrect data.
    }
/*
openssl rsa -text -inform DER -in privKey.bin 
Private-Key: (1024 bit)
modulus:
    00:e6:a7:df:4a:9d:2d:7b:58:05:e6:0d:bc:7e:a4:
    9e:d0:49:ae:45:59:86:a6:99:00:27:c5:eb:1c:0d:
    32:96:1f:ca:77:2d:b3:6a:c5:94:5a:3e:16:1b:4e:
    a7:ba:7e:a6:23:f5:c2:18:82:3a:de:fc:47:9c:c5:
    f7:73:ac:b7:e8:17:6c:91:ea:e3:83:f8:c8:9a:85:
    68:4b:c4:fe:e7:29:89:c5:b3:b6:18:2a:f2:31:c6:
    39:24:48:48:9d:17:71:63:d6:87:a9:64:79:00:02:
    54:43:63:5b:e2:a9:da:92:32:e1:22:b9:2c:bb:39:
    17:96:2a:32:43:25:7d:ad:5d
publicExponent: 65537 (0x10001)
privateExponent:
    7c:65:53:1e:b9:90:3a:f2:69:13:fe:9a:87:2e:9f:
    5c:34:30:a1:c4:3b:c3:83:c6:ba:ac:9a:35:21:c5:
    03:84:17:bc:98:d0:27:a8:71:6f:0e:06:fc:29:3a:
    7a:71:2d:87:3d:56:b5:c3:1e:9e:fe:2e:5d:15:c3:
    74:06:55:93:ac:67:87:1e:ec:71:cd:1e:6c:98:89:
    b5:ef:ce:bd:51:82:a3:79:20:f4:20:4e:cf:db:35:
    8a:6b:9f:0d:f7:08:47:e8:5d:63:85:dd:52:ab:93:
    0f:ec:b4:1e:05:a7:fe:aa:bc:1a:b8:f7:e3:af:d5:
    16:0f:84:67:7c:0c:47:61
prime1:
    01:fc:f2:5f:94:e6:c9:0d:aa:fd:88:b8:6e:88:a5:
    ce:dd:e6:04:4d:b1:6f:bd:52:cc:5b:b7:99:1d:cc:
    24:1e:60:e7:1d:75:31:27:d3:1a:c3:ad:27:6c:c5:
    36:ca:14:21:62:2c:39:14:a8:71:7f:bc:65:a3:34:
    20:d0:58:c4:e5
prime2:
    74:05:0d:b4:8f:91:39:68:e2:28:2d:a5:e7:4d:e9:
    35:26:9b:0c:90:bd:a7:bd:73:f5:a9:2c:12:a7:56:
    c7:51:85:84:b4:32:6f:71:8c:17:bd:18:54:39:6f:
    85:4f:b2:c9:14:e2:89:6e:5f:9d:34:69:71:e0:56:
    3b:5c:77:19
exponent1:
    01:3d:b0:d9:c3:2b:d0:82:ac:a2:b8:4e:50:09:12:
    5f:30:1a:5d:c3:55:a8:27:68:e0:d1:bb:a8:63:76:
    43:71:87:11:9d:4c:c3:13:55:ee:56:08:e7:1c:39:
    7a:ba:e7:97:f3:1d:21:c0:68:68:f8:d0:54:2d:6c:
    e3:b2:ca:46:95
exponent2:
    70:74:c5:88:12:f0:cd:18:e0:bd:d9:21:4a:46:b6:
    99:92:46:0f:b3:ec:61:3e:bd:bb:8c:b2:ef:91:cc:
    07:7e:f9:50:5b:e9:d7:23:d4:8a:dd:fb:4b:08:31:
    14:a2:df:c5:10:bd:54:40:eb:e4:d0:fc:b4:28:a2:
    ec:fe:ff:61
coefficient:
    00:dd:11:22:c9:d3:2d:6f:35:cf:a1:75:69:bb:28:
    59:6f:15:74:6b:f1:62:58:1c:23:f6:e2:3e:3e:31:
    c9:b1:cc:0e:5c:3d:9b:42:9f:56:29:3c:41:57:1b:
    51:db:dd:01:48:56:6a:cc:79:fc:67:12:b2:bb:71:
    a1:63:a2:7e
-----BEGIN RSA PRIVATE KEY-----
MIICWwIBAAKBgQDmp99KnS17WAXmDbx+pJ7QSa5FWYammQAnxescDTKWH8p3LbNq
xZRaPhYbTqe6fqYj9cIYgjre/EecxfdzrLfoF2yR6uOD+MiahWhLxP7nKYnFs7YY
KvIxxjkkSEidF3Fj1oepZHkAAlRDY1viqdqSMuEiuSy7OReWKjJDJX2tXQIDAQAB
AoGAfGVTHrmQOvJpE/6ahy6fXDQwocQ7w4PGuqyaNSHFA4QXvJjQJ6hxbw4G/Ck6
enEthz1WtcMenv4uXRXDdAZVk6xnhx7scc0ebJiJte/OvVGCo3kg9CBOz9s1imuf
DfcIR+hdY4XdUquTD+y0HgWn/qq8Grj346/VFg+EZ3wMR2ECQQH88l+U5skNqv2I
uG6Ipc7d5gRNsW+9Usxbt5kdzCQeYOcddTEn0xrDrSdsxTbKFCFiLDkUqHF/vGWj
NCDQWMTlAkB0BQ20j5E5aOIoLaXnTek1JpsMkL2nvXP1qSwSp1bHUYWEtDJvcYwX
vRhUOW+FT7LJFOKJbl+dNGlx4FY7XHcZAkEBPbDZwyvQgqyiuE5QCRJfMBpdw1Wo
J2jg0buoY3ZDcYcRnUzDE1XuVgjnHDl6uueX8x0hwGho+NBULWzjsspGlQJAcHTF
iBLwzRjgvdkhSka2mZJGD7PsYT69u4yy75HMB375UFvp1yPUit37SwgxFKLfxRC9
VEDr5ND8tCii7P7/YQJAAN0RIsnTLW81z6F1absoWW8VdGvxYlgcI/biPj4xybHM
Dlw9m0KfVik8QVcbUdvdAUhWasx5/GcSsrtxoWOifg==
-----END RSA PRIVATE KEY-----
    */
</code></pre>
","","626","<c#><rsa><private-key>","0","","0","2013-10-14 13:30:16","","2","","1742844","","2013-10-14 13:30:16","2013-10-11 10:25:57",""
"29611175","Two different Private Keys","<p>I am trying to digitally sign and then validate an AuthnRequest.
I've generated the private key and public key certificate using the following commands:</p>

<pre><code>openssl genrsa -out privatekey.pem 2048
openssl req -new -x509 -key privatekey.pem -out publickey.cer -days 365
openssl pkcs12 -export -out public_privatekey.pfx -inkey privatekey.pem -in publickey.cer
</code></pre>

<p>Converted the PFX to JKS by following command:</p>

<pre><code>keytool -importkeystore -srckeystore public_privatekey.pfx -srcstoretype pkcs12 
-destkeystore clientcert.jks -deststoretype JKS
</code></pre>

<p>and I am accessing that private key entry and public key certificate using the following java code:</p>

<pre><code>KeyStore ks = KeyStore.getInstance(""JKS"");
ks.load(new FileInputStream(keystoreFile), ""dps123!@#"".toCharArray());

KeyStore.PrivateKeyEntry keyEntry = (KeyStore.PrivateKeyEntry) ks.getEntry(""1"", new KeyStore.PasswordProtection(""dps123!@#"".toCharArray()));
java.security.cert.X509Certificate cert = (java.security.cert.X509Certificate) keyEntry.getCertificate();
</code></pre>

<p>I got to print the private key value to the console by following:</p>

<pre><code>String key = Base64.encode(keyEntry.getPrivateKey().getEncoded());
System.out.println(key);
</code></pre>

<p>When I compare the contents of String ""key"" and the contents in ""privatekey.pem"" file, both are different. Is it something that I am not understanding correctly or there is a problem getting the private key value in the code?</p>
","<pre><code>String key = Base64.getEncoder().encodeToString(keyEntry.getPrivateKey().getEncoded());
</code></pre>
","618","<java><x509certificate><keystore><private-key>","0","0","3","2015-04-13 23:15:08","29616600","0","","1072040","","2015-04-13 17:19:50","2015-04-13 17:14:35",""
"29611175","Two different Private Keys","<p>I am trying to digitally sign and then validate an AuthnRequest.
I've generated the private key and public key certificate using the following commands:</p>

<pre><code>openssl genrsa -out privatekey.pem 2048
openssl req -new -x509 -key privatekey.pem -out publickey.cer -days 365
openssl pkcs12 -export -out public_privatekey.pfx -inkey privatekey.pem -in publickey.cer
</code></pre>

<p>Converted the PFX to JKS by following command:</p>

<pre><code>keytool -importkeystore -srckeystore public_privatekey.pfx -srcstoretype pkcs12 
-destkeystore clientcert.jks -deststoretype JKS
</code></pre>

<p>and I am accessing that private key entry and public key certificate using the following java code:</p>

<pre><code>KeyStore ks = KeyStore.getInstance(""JKS"");
ks.load(new FileInputStream(keystoreFile), ""dps123!@#"".toCharArray());

KeyStore.PrivateKeyEntry keyEntry = (KeyStore.PrivateKeyEntry) ks.getEntry(""1"", new KeyStore.PasswordProtection(""dps123!@#"".toCharArray()));
java.security.cert.X509Certificate cert = (java.security.cert.X509Certificate) keyEntry.getCertificate();
</code></pre>

<p>I got to print the private key value to the console by following:</p>

<pre><code>String key = Base64.encode(keyEntry.getPrivateKey().getEncoded());
System.out.println(key);
</code></pre>

<p>When I compare the contents of String ""key"" and the contents in ""privatekey.pem"" file, both are different. Is it something that I am not understanding correctly or there is a problem getting the private key value in the code?</p>
","<p>It's a bit difficult to say what kind of encoding will your java provider use. Also, when you compare with ""privatekey.pem"" file, how do you get content?</p>

<p>I don't have a direct solution but some suggestions below:</p>

<p>print out your pem</p>

<pre><code>&gt; openssl -in privatekey.pem -outform &lt;DER/PEM&gt;
</code></pre>

<p>Somewhere in the print will be base64 encoded private key.</p>

<p>Also, try checking your JCE provider which encoding it uses.</p>
","618","<java><x509certificate><keystore><private-key>","0","1","3","2015-04-13 23:15:08","29616600","0","","1072040","","2015-04-13 17:19:50","2015-04-13 17:14:35",""
"29611175","Two different Private Keys","<p>I am trying to digitally sign and then validate an AuthnRequest.
I've generated the private key and public key certificate using the following commands:</p>

<pre><code>openssl genrsa -out privatekey.pem 2048
openssl req -new -x509 -key privatekey.pem -out publickey.cer -days 365
openssl pkcs12 -export -out public_privatekey.pfx -inkey privatekey.pem -in publickey.cer
</code></pre>

<p>Converted the PFX to JKS by following command:</p>

<pre><code>keytool -importkeystore -srckeystore public_privatekey.pfx -srcstoretype pkcs12 
-destkeystore clientcert.jks -deststoretype JKS
</code></pre>

<p>and I am accessing that private key entry and public key certificate using the following java code:</p>

<pre><code>KeyStore ks = KeyStore.getInstance(""JKS"");
ks.load(new FileInputStream(keystoreFile), ""dps123!@#"".toCharArray());

KeyStore.PrivateKeyEntry keyEntry = (KeyStore.PrivateKeyEntry) ks.getEntry(""1"", new KeyStore.PasswordProtection(""dps123!@#"".toCharArray()));
java.security.cert.X509Certificate cert = (java.security.cert.X509Certificate) keyEntry.getCertificate();
</code></pre>

<p>I got to print the private key value to the console by following:</p>

<pre><code>String key = Base64.encode(keyEntry.getPrivateKey().getEncoded());
System.out.println(key);
</code></pre>

<p>When I compare the contents of String ""key"" and the contents in ""privatekey.pem"" file, both are different. Is it something that I am not understanding correctly or there is a problem getting the private key value in the code?</p>
","<p>There are several formats for private key storage. Among them are <a href=""http://tools.ietf.org/rfc/rfc3447.txt"" rel=""nofollow"">PKCS#1</a> and <a href=""http://www.ietf.org/rfc/rfc5208.txt"" rel=""nofollow"">PKCS#8</a>. They differ in encryption algorithms and ASN.1 structure. Also, PKCS#8 supports other key algorithms besides RSA.</p>

<p>For example this is the ASN.1 dump of the first bytes of an unencrypted PKCS#8 file:</p>

<pre><code>0000  4BE: SEQUENCE {
0004    1:   INTEGER 0
0007    D:   SEQUENCE {
0009    9:     OBJECT IDENTIFIER rsaEncryption (1 2 840 113549 1 1 1)
         :       (PKCS #1)
0014    0:     NULL
         :     }
0016  4A8:   OCTET STRING, encapsulates {
001A  4A4:     SEQUENCE {
001E    1:       INTEGER 0
0021  101:       INTEGER    
         :         00 B3 17 E6 31 3C 36 24    ....1&lt;6$
</code></pre>

<p>And the same key in PKCS#1 format (again only the first few bytes, the rest of the file is basically the raw key):</p>

<pre><code>0000  4A4: SEQUENCE {
0004    1:   INTEGER 0
0007  101:   INTEGER    
         :     00 B3 17 E6 31 3C 36 24    ....1&lt;6$
</code></pre>

<p>This website contains a more detailed explanation of the two formats:
<a href=""https://tls.mbed.org/kb/cryptography/asn1-key-structures-in-der-and-pem"" rel=""nofollow"">https://tls.mbed.org/kb/cryptography/asn1-key-structures-in-der-and-pem</a></p>

<p>Java normally generates PKCS#8 format, while OpenSSL supports both formats and can convert between them: <a href=""https://www.openssl.org/docs/apps/pkcs8.html"" rel=""nofollow"">https://www.openssl.org/docs/apps/pkcs8.html</a></p>

<p><a href=""http://keystore-explorer.sourceforge.net/"" rel=""nofollow"">KeyStore Explorer</a> can also generate, process and convert both formats.</p>

<p>So, if you convert <code>privatekey.pem</code> to PKCS#8 with OpenSSL or KSE, it should look identical to the output of <code>System.out.println(key)</code>:</p>

<pre><code>openssl pkcs8 -topk8 -in privatekey.pem -out privatekey.pkcs8 -nocrypt
</code></pre>
","618","<java><x509certificate><keystore><private-key>","0","3","3","2015-04-13 23:15:08","29616600","0","","1072040","","2015-04-13 17:19:50","2015-04-13 17:14:35",""
"43508471","Unable to load Private key when convert dsa certificate from DER format to PEM format using openssl","<p>I want to check a DER format dsa certificate is valid or not, so I try to convert it to PEM format using openssl.</p>

<pre><code>openssl dsa -in 512b-dsa-example-cert.der -inform der -outform -pem -out 512b-dsa-example-cert.pem
</code></pre>

<p>Both files can be download from <a href=""http://fm4dd.com/openssl/certexamples.htm"" rel=""nofollow noreferrer"">here</a>, part 1.2.</p>

<p>The above command can work with rsa. But when I came to dsa, it say:</p>

<pre><code>Unable to load private key
</code></pre>

<p>How can I pass the ""Private key"" to it?</p>
","<p>If you want just to convert it from DER to PEM format then you can convert it as a x509 certificate:</p>

<pre><code>openssl x509 -in 512b-dsa-example-cert.der -inform DER -outform PEM -out 512b-dsa-example-cert.pem
</code></pre>
","617","<openssl><private-key><pem><der><format-conversion>","1","0","1","2017-10-18 09:59:07","43514124","0","","1000551","","2017-10-18 09:59:07","2017-04-20 00:58:42",""
"50549444","KeyPermanentlyInvalidatedException is not working","<p>I used KeyPermanentlyInvalidatedException to detect a new fingerprint is added. But it doesn't throw KeyPermanentlyInvalidatedException.</p>

<p>I tried these step:</p>

<ol>
<li>List item</li>
<li>Create key pair</li>
<li>Init Signature from private key</li>
<li>Add new fingerprint from phone's Setting</li>
<li>Try Init Signature from private key again
But it doesn't throw KeyPermanentlyInvalidatedException </li>
</ol>

<p>I also found this <a href=""https://stackoverflow.com/questions/44515668/android-fingerprint-detect-new-finger-added?noredirect=1&amp;lq=1"">link</a> from stackoverflow but it didn't help me.</p>

<p>From document:</p>

<blockquote>
  <p>The key will become irreversibly invalidated once the secure lock screen is disabled (reconfigured to None, Swipe or other mode which does not authenticate the user) or when the secure lock screen is forcibly reset (e.g., by a Device Administrator). Additionally, if the key requires that user authentication takes place for every use of the key, it is also irreversibly invalidated once a new fingerprint is enrolled or once no more fingerprints are enrolled, unless setInvalidatedByBiometricEnrollment(boolean) is used to allow validity after enrollment. Attempts to initialize cryptographic operations using such keys will throw KeyPermanentlyInvalidatedException.</p>
</blockquote>

<p>Here is my code:</p>

<pre><code>@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_authenticate);

    mButtonTest = findViewById(R.id.button_test);
    mButtonTest.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            buttonTestOnClick();
        }
    });

    boolean isFirstTime = PreferenceManager.getInstances().getFirstTime();
    PreferenceManager.getInstances().setFirstTime(false);

    if (isFirstTime) {
        createKeyPair();
    }
}

private void buttonTestOnClick() {
    boolean result = initSignature();
    Log.e(""iii"", ""Create signature result: "" + result);

    boolean isFirstTime = PreferenceManager.getInstances().getFirstTime();

    if (result) {
        if (isFirstTime) {
            enroll();
        }
        startListening();
    }
}


/**
 * Generates an asymmetric key pair in the Android Keystore. Every use of the private key must
 * be authorized by the user authenticating with fingerprint. Public key use is unrestricted.
 */
public void createKeyPair() {
    try {
        mKeyPairGenerator = KeyPairGenerator.getInstance(KeyProperties.KEY_ALGORITHM_EC, ""AndroidKeyStore"");
    } catch (NoSuchAlgorithmException | NoSuchProviderException e) {
        throw new RuntimeException(""Failed to get an instance of KeyPairGenerator"", e);
    }

    // The enrolling flow for fingerprint. This is where you ask the user to set up fingerprint
    // for your flow. Use of keys is necessary if you need to know if the set of
    // enrolled fingerprints has changed.
    try {
        // Set the alias of the entry in Android KeyStore where the key will appear
        // and the constrains (purposes) in the constructor of the Builder
        mKeyPairGenerator.initialize(
                new KeyGenParameterSpec.Builder(KEY_NAME,
                        KeyProperties.PURPOSE_SIGN)
                        .setDigests(KeyProperties.DIGEST_SHA256)
                        .setAlgorithmParameterSpec(new ECGenParameterSpec(""secp256r1""))
                        // Require the user to authenticate with a fingerprint to authorize
                        // every use of the private key
                        .setUserAuthenticationRequired(true)
                        .build());
        mKeyPairGenerator.generateKeyPair();
    } catch (InvalidAlgorithmParameterException e) {
        throw new RuntimeException(e);
    }
}


/**
 * Initialize the {@link Signature} instance with the created key in the
 * {@link #createKeyPair()} method.
 *
 * @return {@code true} if initialization is successful, {@code false} if the lock screen has
 * been disabled or reset after the key was generated, or if a fingerprint got enrolled after
 * the key was generated.
 */
private boolean initSignature() {
    // Create keystore
    try {
        mKeyStore = KeyStore.getInstance(""AndroidKeyStore"");
    } catch (KeyStoreException e) {
        throw new RuntimeException(""Failed to get an instance of KeyStore"", e);
    }

    // Create signature
    try {
        mSignature = Signature.getInstance(""SHA256withECDSA"");
    } catch (NoSuchAlgorithmException e) {
        throw new RuntimeException(""Failed to get an instance of Signature"", e);
    }


    try {
        mKeyStore.load(null);
        PrivateKey key = (PrivateKey) mKeyStore.getKey(KEY_NAME, null);
        mSignature.initSign(key);
        return true;
    } catch (KeyPermanentlyInvalidatedException e) {
        return false;
    } catch (KeyStoreException | CertificateException | UnrecoverableKeyException | IOException
            | NoSuchAlgorithmException | InvalidKeyException e) {
        throw new RuntimeException(""Failed to init Cipher"", e);
    }
}


private void enroll() {
    try {
        KeyStore keyStore = KeyStore.getInstance(""AndroidKeyStore"");
        keyStore.load(null);
        PublicKey publicKey = keyStore.getCertificate(AuthenticateActivity.KEY_NAME).getPublicKey();
        // Provide the public key to the backend. In most cases, the key needs to be transmitted
        // to the backend over the network, for which Key.getEncoded provides a suitable wire
        // format (X.509 DER-encoded). The backend can then create a PublicKey instance from the
        // X.509 encoded form using KeyFactory.generatePublic. This conversion is also currently
        // needed on API Level 23 (Android M) due to a platform bug which prevents the use of
        // Android Keystore public keys when their private keys require user authentication.
        // This conversion creates a new public key which is not backed by Android Keystore and
        // thus is not affected by the bug.
        KeyFactory factory = KeyFactory.getInstance(publicKey.getAlgorithm());
        X509EncodedKeySpec spec = new X509EncodedKeySpec(publicKey.getEncoded());
        PublicKey verificationKey = factory.generatePublic(spec);
        //mStoreBackend.enroll(""user"", ""password"", verificationKey);
    } catch (KeyStoreException | CertificateException | NoSuchAlgorithmException |
            IOException | InvalidKeySpecException e) {
        e.printStackTrace();
    }
}
</code></pre>

<p>But <strong>initSignature()</strong> function allways returns true.</p>
","","617","<android><private-key><android-fingerprint-api>","2","","0","2018-05-27 05:58:24","","3","1","","","","2018-05-27 05:58:24",""
"11239501","Which decryption uses a binary public key with variable length?","<p>I have a program which is obviously decrypting its data with a public, binary key of variable length.</p>

<p>I came to these facts by doing some more or less educated guesses:</p>

<ul>
<li>Reverse Engineering revealed that the program needs the name of a file including a public key</li>
<li>Viewing this file in a hex editor shows totally random binary data (with no interesting pattern or anything), prefixed with the length of the file - in one version the file is only 200 bytes long, in another about 2000 bytes.</li>
<li>Thinking about the security, I guess the programs company encrypts the data files with a private key so that noone can create their own data files (which would fit the programs needs - no ""modding"" should be allowed nor the data be shown in third party programs).</li>
<li>The data files are prefixed with a human readable 64 byte long header, the rest is again completely random binary data.</li>
</ul>

<p>I'd like to use the same system for my own program, if such thing is available.
Is there an encryption method capable of asymmetric encryption / decryption with a binary key of variable length, if yes, which one and how can I implement such thing?</p>
","<p>That's not the way to proceed. You can use a fixed length key for variable length data. As asymmetric crypto is pretty slow, the usual method is to generate a random symmetric secret key (say, a 128 bit AES key) and encrypt the data using e.g. CBC. Then the symmetric key is encrypted by an asymmetric public key, say RSA 2048 bits. Decryption means decrypting the secret key using the private key, then decrypting the data with the data specific secret key.</p>

<p>If you don't know how to do this you can use a library capable of creating CMS (cryptographic message syntax) to perform this scheme.</p>

<p>Note: a 2000 byte asymmetric key pair would take forever to encrypt something, even if you could create a key pair of that size.</p>
","616","<encryption><public-key><private-key>","0","1","1","2019-04-16 18:44:50","11253452","1","","777985","","2019-04-16 18:44:50","2012-06-28 06:58:09",""
"9801644","Use curl and key-file (crt, der, txt)","<p>my client gave me a *.crt-file, a *.der-file and a *.txt file, als a key in order to send files per POST. I am using curl in order to send the files, but I couldn't figure out, how. Sadly I do not know much about keys and so on, do you know, what I can do?</p>
","<pre><code>    $ch = curl_init();
    $options = array(   CURLOPT_POST =&gt; 1,
                CURLOPT_TIMEOUT =&gt; 0,
                CURLOPT_RETURNTRANSFER =&gt; 1,
                CURLOPT_SSL_VERIFYPEER =&gt; 0,
                CURLOPT_SSLCERT =&gt; 'cert', 
                CURLOPT_SSLCERTPASSWD =&gt; 'cert pass',
                CURLOPT_URL =&gt; ""whatever"",
                CURLOPT_POSTFIELDS =&gt; $fields
            );
    $options[CURLOPT_SSLKEY] = 'whatever';
    $options[CURLOPT_SSLKEYTYPE] = 'PEM';
    $options[CURLOPT_SSLKEYPASSWD] = 'pass'; // if needed
    }
    curl_setopt_array($ch, $options);
    $response = curl_exec($ch);
    if(curl_errno($ch)) die('Curl error: '.curl_error($ch));
    curl_close($ch);
</code></pre>
","615","<curl><openssl><private-key>","0","0","1","2012-05-03 18:22:44","","0","","1321937","","2012-05-03 18:22:44","2012-03-21 09:21:41",""
"21341837","Mutual SSL authentication with CAPI and OpenSSL","<p>I need to do mutual SSL authentication from my client app (C++) using OpenSSL (via libcurl). I am reading certs from a smart card via MS Crypto API (CAPI) and ActivClient driver, and doing cert-chain validation with CAPI (this seemed to be easier validating the cert chain with OpenSSL since the cert chain is in the MS cert store). I can convert the client cert from CAPI to OpenSSL, but I'm having problems with the private key.</p>

<p>It seems that, for the server to validate my client's cert, I need to expose the client cert private key to OpenSSL. It's not quite clear how I should do that, or even if I can do that (it may depend on whether the key is marked as ""exportable"" in the cert). I can try following the suggestions in <a href=""https://stackoverflow.com/questions/16775911/converting-private-key-in-windows-store-to-pem-for-openssl?rq=1"">Converting private key in windows store to PEM (for OpenSSL)</a>, and hope the key is exportable, but I wonder whether I am even going down the correct path.</p>

<p>I've searched quite a bit on this topic, but haven't found any conclusive info.</p>

<p>Any advice and/or suggestions are appreciated!!</p>
","","615","<openssl><smartcard><private-key><cryptoapi><mutual-authentication>","1","","0","2018-01-15 11:12:44","","2","","-1","","2017-05-23 12:23:56","2014-01-24 20:25:06",""
"41183216","Get private key from .pk file","<p>I have a <code>.pk</code> file that should contain a private key. I can not find any information about this file format. Is it similar to <code>.pkcs12</code>?</p>

<p>How can I retrieve the private key from this kind of file?</p>
","<p>According to <a href=""http://fileinfo.com/extension/pk"" rel=""nofollow noreferrer"">fileinfo.com</a> <code>.pk</code> is not a known certificate store file extension. Maybe you could ask from the source of the file why they named it like that.</p>

<p>Check if it's pkcs12 file by trying to output info about the file:</p>

<pre><code>openssl pkcs12 -info -in yourfile.pk
</code></pre>

<p>If it's pkcs12 then you can export the private key from it with the following command:</p>

<pre><code>openssl pkcs12 -in yourfile.pk -nocerts -nodes privatekey.pem
</code></pre>

<hr>

<p>Obviously, your file is in PEM format. You can check the file in text editor for  <strong>-----BEGIN</strong> texts to see what's inside. Cand you see <strong>BEGIN ENCRYPTED PRIVATE KEY</strong> or <strong>BEGIN RSA PRIVATE KEY</strong> or <strong>BEGIN PRIVATE KEY</strong> text in the file? Are there also certificate(s) in the same file, i.e. can you see <strong>BEGIN RSA PUBLIC KEY</strong> or <strong>BEGIN PUBLIC KEY</strong> once or multiple times?</p>

<p>You can remove a passphrase from RSA private key like this:</p>

<pre><code>openssl rsa -in yourfile.pk -out privatekey.pem
</code></pre>
","611","<private-key>","1","0","1","2016-12-18 16:29:14","","0","","2788896","","2016-12-16 12:46:34","2016-12-16 11:16:22",""
"52987169","Import of Pkcs#8 encrypted private key using .NET","<p>I want to import (RSA and ECDsa) private keys from pkcs8 files (-----BEGIN <strong>ENCRYPTED</strong> PRIVATE KEY-----).</p>

<p>This question <a href=""https://stackoverflow.com/questions/1722305/how-to-import-pkcs8-rsa-privatekey-created-by-openssl-in-c-sharp"">How to import PKCS#8 RSA privateKey (created by OpenSSL) in C#</a> has been answered, but the only acceptable solution for me is to implement pkcs8 parser which I want to avoid to as well as using of 3rd party libraries (beside the Chillkat there is also BouncyCastle and its PemReader) as well as pinvoke and <code>NCryptImportKey</code> (mentioned here: <a href=""https://stackoverflow.com/questions/51561155/importing-pkcs8-encrypted-key-to-rsacng"">Importing PKCS#8 encrypted key to RSACng?</a>) (I didn't go this way so far, so I'm not sure it is suitable. Is it?).</p>

<p>I would expect something like <code>CngKey key = CngKey.Import(bytes, CngKeyBlobFormat.Pkcs8PrivateBlob, password)</code> unfortunately <code>Import</code> method supports import of unencrypted keys only (-----BEGIN PRIVATE KEY-----).</p>

<p>Is there any other way to get those keys using .NET version: 4.7.2?</p>

<p>Thanks.</p>
","","609","<c#><import><private-key><pkcs#8>","1","","0","2018-10-25 10:32:25","","3","","","","","2018-10-25 10:32:25",""
"7381166","Java: Get PrivateKey from Windows-MY Certificate (not exportable) to use it for SSL Auth","<p>How can I get the PrivateKey from a Windows-MY (MSCAPI) Certificate (marked as not exportable) to use it for the HTTPS Connection to authentificate the Client.</p>

<p>Thanks</p>
","<p>I ended up having to use Java Web Start to wrap my application.  It handles the SSL context stuff including prompting the user for the certificate.  I attempted at first to get the private key through SunMSCAPI but the private key became corrupt every time.</p>

<p>Java web start was my solution.  Your JAR's need to be signed to run under JWS.  Your application will be launched via a JNLP file.  Google JWS JNLP example for an example.  It's pretty easy.</p>
","606","<java><authentication><ssl><https><private-key>","0","0","1","2013-09-21 11:38:35","","0","","50776","","2012-05-15 10:57:35","2011-09-11 20:52:39",""
"38447487","Android: initialize PublicKey with key file stored in Assets directory","<p>I'm currently working on RSA encryption and try to encrypt and decrypt using public and private key file stored in assets directory in android project.</p>

<p>Currently, the public key file is in assets/public_key.pem
and I use code below to read the file to get the key.</p>

<pre><code>InputStream is = assetManager.open(stringKey);
String publicKeyString= """";
BufferedReader reader = new BufferedReader(new InputStreamReader(is));
String line;

while (( line= reader.readLine()) != null) {
    publicKeyString += line;
}

is.close();
</code></pre>

<p>Then I get the publicKeyString value. Then I tried to initialize a PublicKey object with publicKeyString using following code.</p>

<pre><code>PublicKey pubKey = null;
byte[] publicBytes = Base64.decode(publicKeyString, Base64.DEFAULT);
X509EncodedKeySpec keySpec = new X509EncodedKeySpec(publicBytes);
KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
pubKey = keyFactory.generatePublic(keySpec);
</code></pre>

<p>However I got following exception</p>

<pre><code>java.security.spec.InvalidKeySpecException: java.lang.RuntimeException: error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag
</code></pre>

<p>I'm not sure if there is something wrong with public key file itself or the code that i use. Any idea?</p>
","<p>This is and old question, but in case someone is facing this issue, the answer is given in <a href=""https://stackoverflow.com/a/22534134/4360308"">this post</a>.</p>

<p>Summarizing: </p>

<blockquote>
  <p>X509EncodedKeySpec expects DER-encoded data, not PEM-encoded. Your
  code will work fine if you simply discard the ""BEGIN"" and ""END"" blocks
  from the public key content</p>
</blockquote>
","600","<java><android><encryption><public-key-encryption><private-key>","1","0","1","2018-03-19 13:32:20","","0","1","6225661","","2016-07-19 04:22:29","2016-07-18 23:40:35",""
"33388662","Get private key from file in Python","<p>I've been working with <a href=""https://github.com/vbuterin/pybitcointools"" rel=""nofollow"">pybitcointools</a> for a while and I'm not sure exactly how to properly manage with private key loading in order to sign transactions.</p>

<pre><code>def sign(tx, i, priv, hashcode=SIGHASH_ALL): ...
</code></pre>

<p>The sign function requires a key as a str that is used to perform the signature, but if you want to import that keys from a key file there's no way to export the private key as a str (or at least I've not been able to find it).</p>

<p>Some time ago I created a small OpenSSL wrapper in Python in order to load the key and extract the private part, but I don't think it is the most correct way and definitely not the most elegant one.</p>

<p>Does anyone know if there's any proper way to do it?</p>

<p>Maybe the question is quite odd, but I would like to be sure I was not being using it wrong all this time.</p>
","","599","<python><private-key><bitcoin>","1","","0","2015-10-28 10:32:30","","3","","4433386","","2015-10-28 10:32:30","2015-10-28 10:31:47",""
"11411815","IPhone Decryption with private key -Data Encrypted in Java","<p>Can anyone help with the code how to decrypt with private key ,As in server side they are using OAEP encryption method .I tried decrypting using private key but the decrypted text is Null,I am getting the Error code as -9809 as decryption code result</p>
","<p>When you say ""with a private key"" I assume you mean you're using <code>SecKeyDecrypt()</code> for asymmetric encryption rather than CommonCryptor for symmetric encryption.</p>

<p><code>SecKeyDecrypt()</code> does not support OAEP. It only supports PKCS1 v1.5 padding (<code>kSecPaddingPKCS1</code>). It can also technically handle ASN.1 padding + PKCS1 padding, but this isn't usually relevant to decryption. You should have noticed this when you passed the SecPadding parameter. What did you pass?</p>

<p>That error number is <code>errSSLCrypto</code> which is a generic ""something went wrong in crypto"" message.</p>
","597","<iphone><rsa><private-key><encryption-asymmetric>","0","1","1","2012-07-10 15:01:13","11416208","0","","1425885","","2012-07-10 11:43:55","2012-07-10 10:56:29",""
"55675963","Converting a string private key to PrivateKey type","<p>I am having below RSA private key in string format.</p>

<pre><code>String privatekey = -----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAqAKCCMKqboM8ywSuNvmf2zuT0e2elxntdEe5msv22jzT89Xa
1Q/V4CeQdZruIw8eTAMa67Dej+3cPdSrjdDnfxcb9L14U9oFPgOyvxVwb+/S8jqm
F9o7Gvm85X972C8izh+K4ndpPtztxkZ0g7cu7RqrCCBzw5SUfi3pgIpprdiKlVDP
4lF7CTwzRH+oi+BxwOABEiuKOJtjOXX1WJhV6ukEy8K6Fq/QOyt/7vgxkm8I8HMo
SMq2UZNswn5/9SqMWuaTBaQbjZ2f77zaq5X/jOiCThTxFNPjPnzhKhG8ekaqIUpB
y9VuICFgdtVQimnlDykrdJWyeOFWPjYl5vehkwIDAQABAoIBAQCN2Ig2ozvHUA/s
i8gWbAyVyKgVrhueEOrUqJXAZoHEYWTFUgGOru7wcBbb4/E4MlRu8pQw90QAml6+
6SXp9rzsJPOaXrkPelvArtij0ZL7PqyHjBKcwsfyD3V3AXnq3GjzQ9g7OXvm8hnh
s6w9ZFQ/JKvPka6LKo9wNI0W1EVC2tggN0Jt6YJFU7trb5TtiQm/B4NKpflZ7PsC
1WOttz0q+VSzF/p04+33OLXugF1crgMr9KCg0uSPi5zCcM+3RVSWDrcZoh+yV4pK
+g5XKKw/BQD9vrUzsLMDjupp4Is0sSEXwMQeRbUZRnUOWVO7E7jrawzhGXV6v4ZT
3PoxB7CxAoGBANkK9ITnfIr1AlF8S1Ok12AlHLYvCPG4TVBw4WNVUX1y3wBXpOmx
t5S2wGpTmyf3LBpw/0m+5EzoghjSb2QnIRFveAxuhxPCPNqxvyzm2D7ycaGJX41y
RfsxvWVQpzvCVH4yV+tkH107ivR2uFDtbDjqlydPyIxmA1Frlm87CODpAoGBAMYq
gLO5EEKxs1MlCzZkuqsEAq+kZVX7y3Kw9rzCJtRQKfYu0IlNFudPg3KpqcbQsrfR
1Psl6iTLXtLe+92NXDOcc9rfj9crmAKmZA1llXOwxe4FOrLWbxk+i6V3qJ2qrf+I
Dwc9+Xrc6ydcDtTHAi3JeIReEbDMvFc6JRiyjwEbAoGAeH68gYyCeCLNxq9aonVB
nP79kadLL+dCBQamGp+jPiIn6+i8hYFEiitrZ5xC500yDvvsvuRbmtb6Yw1xCgkv
Mp7P5xb1puKPJlrH6AXAyDGRJD0/7ych8vMKUtUUAvlAL0+DwAs13mzQGChQ65zk
GDUk9Y41qLx52xn/yoDbzQECgYEAksM9qF1iPpLPBcAEqtc1LJz+xEiTyHeAOMP5
KNj92vY37ZzEUzulv9AywQQIujcsdVlRTGPLIk8APlpo3K/p3kt7vlkedbRSk3vZ
09YtNo5wOJTk4ThQ9bhNwlF5rrOOxBZnUuzCTQ06l17lmQ5+fZydxiLJJVCsGEn2
2XC82osCgYB9maZnLrSZ3Xq4X256/H+Et8TcgqOZGbLuGkNzheheP/E5LcUhQqbP
oJRB24XoX+yw+Do5q2pHHgbrrHwcdg3Xfw9sb5P2JNbtG57mO7QEilIHfUQzQl/U
XSKgJJZ/9bTPlbZmp9ChM9izUv8DI5vjhDputhlEHP4BpHBN03a85Q==
-----END RSA PRIVATE KEY-----
</code></pre>

<p>I am trying to convert this to PrivateKey type using below code snippet-</p>

<pre><code>  public PrivateKey generatePrivateKey(String privateKey) throws Exception{

        privateKey = privateKey.replace(""-----BEGIN RSA PRIVATE KEY-----"", """");
        privateKey = privateKey.replace(""-----END RSA PRIVATE KEY-----"", """");
        privateKey = privateKey.replaceAll(""\\s+"", """");
        PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(privateKey.getBytes());
        KeyFactory kf = KeyFactory.getInstance(""RSA"");
        return kf.generatePrivate(keySpec);
    }
</code></pre>

<p>I am getting below error - </p>

<p>It is giving me an error on generatePrivate method.</p>

<pre><code>Execution exception[[InvalidKeySpecException: java.security.InvalidKeyException: invalid key format]]
</code></pre>

<p>Tried using the answer here <a href=""https://stackoverflow.com/questions/23709898/java-convert-dkim-private-key-from-rsa-to-der-for-javamail"">Java: Convert DKIM private key from RSA to DER for JavaMail</a></p>

<pre><code>import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Base64;

public class pkcs1ToPkcs8 {

    public static void main(String[] args) throws IOException {

        String pkcs1 = //privatekey provided above

            // b64 now contains the base64 ""body"" of the PEM-PKCS#1 file
            byte[] oldder = Base64.getDecoder().decode(pkcs1.getBytes());

            // concatenate the mostly-fixed prefix plus the PKCS#1 data 
            final byte[] prefix = {0x30,(byte)0x82,0,0, 2,1,0, // SEQUENCE(lenTBD) and version INTEGER 
                    0x30,0x0d, 6,9,0x2a,(byte)0x86,0x48,(byte)0x86,(byte)0xf7,0x0d,1,1,1, 5,0, // AlgID for rsaEncryption,NULL
                    4,(byte)0x82,0,0 }; // OCTETSTRING(lenTBD) 
            byte[] newder = new byte [prefix.length + oldder.length];
            System.arraycopy (prefix,0, newder,0, prefix.length);
            System.arraycopy (oldder,0, newder,prefix.length, oldder.length);
            // and patch the (variable) lengths to be correct
            int len = oldder.length, loc = prefix.length-2; 
            newder[loc] = (byte)(len&gt;&gt;8); newder[loc+1] = (byte)len;
            len = newder.length-4; loc = 2;
            newder[loc] = (byte)(len&gt;&gt;8); newder[loc+1] = (byte)len;

            FileOutputStream fo = new FileOutputStream (""pkcs8_file"");
            fo.write (newder); fo.close();
            System.out.println (""converted length "" + newder.length);

    }

}
</code></pre>
","<p><code>BEGIN RSA PRIVATE KEY</code> means your key is pkcs#1 format and not pkcs#8. Reading pkcs#1 keys is not natively supported by Java. You need to use bouncycastle library ( see <a href=""https://stackoverflow.com/questions/41934846/read-rsa-private-key-of-format-pkcs1-in-java/41953072#41953072"">Read RSA private key of format PKCS1 in JAVA</a> )or use any of these solutions <a href=""https://stackoverflow.com/questions/7216969/getting-rsa-private-key-from-pem-base64-encoded-private-key-file/55339208"">Getting RSA private key from PEM BASE64 Encoded private key file</a></p>

<hr>

<p>if your key were pkcs#8, it would have the header <code>BEGIN PRIVATE KEY</code>. In that case, for your code to work correctly you would need additionally decode the key content from base64</p>

<hr>

<p>To convert a pkcs#1 key to pkcs#8 you can use openssl</p>

<pre><code>  openssl pkcs8 -topk8 -inform PEM -outform PEM -nocrypt -in pkcs1.key -out pkcs8.key
</code></pre>
","595","<java><rsa><private-key>","1","1","1","2019-04-15 09:06:04","","0","","1896796","","2019-04-15 09:06:04","2019-04-14 13:44:47",""
"44844965","Setting private_key in r10k.yaml does not work","<p>My r10k.yaml config looks as follows:</p>

<pre><code>:cachedir: /var/cache/r10k
:sources:
  github:
    basedir: /etc/puppet/environments
    prefix: false
    remote: ssh://git@git.server:port/owner/repo.git
:git:
  private_key: '/root/.ssh/bitbucket.nopassphrase'
</code></pre>

<p>I run as root(for now) :</p>

<pre><code>GIT_TRACE=1 GIT_SSH='~/sshv2.sh' r10k deploy environment env -v
</code></pre>

<p>sshv2.sh contains:</p>

<pre><code>#!/bin/bash
ssh -v $*
</code></pre>

<p>And I get:</p>

<pre><code>Faraday: you may want to install system_timer for reliable timeouts
ERROR    -&gt; Unable to determine current branches for Git source 'github' (/etc/puppet/environments)
Original exception:
Command exited with non-zero exit code:
Command: git --git-dir /var/cache/r10k/ssh---git@git.server-port-owner-repo.git fetch --prune
Stderr:
trace: built-in: git 'fetch' '--prune'
trace: run_command: '~/sshv2.sh' '-p' 'port' 'git@git.server' 'git-upload-pack '\''/owner/repo.git'\'''
OpenSSH_5.3p1, OpenSSL 1.0.1e-fips 11 Feb 2013
debug1: Reading configuration data /root/.ssh/config
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: Applying options for *
debug1: Connecting to git.server [&lt;IP&gt;] port &lt;port&gt;.
debug1: Connection established.
debug1: permanently_set_uid: 0/0
debug1: identity file /root/.ssh/identity type -1
debug1: identity file /root/.ssh/identity-cert type -1
debug1: identity file /root/.ssh/id_rsa type -1
debug1: identity file /root/.ssh/id_rsa-cert type -1
debug1: identity file /root/.ssh/id_dsa type -1
debug1: identity file /root/.ssh/id_dsa-cert type -1
debug1: identity file /root/.ssh/id_ecdsa type -1
debug1: identity file /root/.ssh/id_ecdsa-cert type -1
debug1: Remote protocol version 2.0, remote software version SSHD-UNKNOWN
debug1: no match: SSHD-UNKNOWN
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_5.3
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: server-&gt;client aes128-ctr hmac-md5 none
debug1: kex: client-&gt;server aes128-ctr hmac-md5 none
debug1: SSH2_MSG_KEX_DH_GEX_REQUEST(1024&lt;1024&lt;8192) sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_GROUP
debug1: SSH2_MSG_KEX_DH_GEX_INIT sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_REPLY
debug1: Host '[server.name]:port' is known and matches the RSA host key.
debug1: Found key in /root/.ssh/known_hosts:1
debug1: ssh_rsa_verify: signature correct
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: publickey
debug1: Next authentication method: publickey
debug1: Trying private key: /root/.ssh/identity
debug1: Trying private key: /root/.ssh/id_rsa
debug1: Trying private key: /root/.ssh/id_dsa
debug1: Trying private key: /root/.ssh/id_ecdsa
debug1: No more authentication methods to try.
Permission denied (publickey).
fatal: The remote end hung up unexpectedly
Exit code: 128
</code></pre>

<p>Why is it not trying to use the key file provided in r10k.yaml?</p>

<p>I have:</p>

<pre><code>$ r10k version
Faraday: you may want to install system_timer for reliable timeouts
r10k 1.5.1
</code></pre>

<p>and</p>

<pre><code>$ git --version
git version 1.7.1
</code></pre>

<p>Am I doing something wrong or is my r10k or git too old?</p>
","<p>The <code>private_key</code> setting is only used by the <strong>rugged</strong> provider and not by the default <strong>shellgit</strong> provider, hence why your script works with the alternate private key, but r10k doesn't.</p>

<p>The <a href=""https://github.com/puppetlabs/r10k/blob/master/r10k.yaml.example"" rel=""nofollow noreferrer"">r10k.yaml example</a> on github has more information about each setting.</p>
","594","<git><ssh><puppet><private-key>","0","0","1","2018-05-20 23:47:35","","4","","","","","2017-06-30 11:05:29",""
"27075433","Certificate to pfx with private key...?","<p>I've certificate which I can install from dongle.
When I view that installed certificate using IE. It shows me it has private key as below.</p>

<p><img src=""https://i.stack.imgur.com/EeMVx.jpg"" alt=""enter image description here""></p>

<p>But when I try to export that certificate to .pfx using my c# code, the private key is null.</p>

<p>below is my code for exporting certificate to pfx, where private key always null</p>

<pre><code>public static bool ExportCertificateToPFX(string certificateSerialNumber, string pxfFilepath, StoreName storeName, StoreLocation location)
{
    bool success = false;

    X509Store store = new X509Store(storeName, location);
    store.Open(OpenFlags.ReadOnly);
    X509Certificate2Collection certs = store.Certificates.Find(X509FindType.FindBySerialNumber, certificateSubject, true);

    if (certs != null &amp;&amp; certs.Count &gt; 0)
    {
        //BELOW CONDITION ALWAYS FALSE
        if (certs[0].HasPrivateKey)
        {
            MessageBox.Show(certs[0].PrivateKey.ToString());
        }
        byte[] data = certs[0].Export(X509ContentType.Pfx, ""KALPESH"");
        //HERE WRITE ""data"" TO ""pxfFilepath"" FILE
    }
    store.Close();


    return success;
}
</code></pre>
","<p>There are two possibilites (starting from less-probable):</p>

<ol>
<li>Certificate's private key uses unsupported by .NET key storage provider to store the keys. For example, Microsoft KSP or its own.</li>
<li>There is no private key at all. You can run <code>certutil -store</code> with appropriate parameters (depending on where the certificate is installed) to verify whether there is a private key. Also this command gives you an answer if the key uses unsupported key storage.</li>
</ol>
","592","<.net><certificate><x509certificate><private-key><pfx>","1","0","1","2014-11-22 09:14:15","","8","","1411787","","2014-11-22 08:56:12","2014-11-22 08:17:14",""
"50675536","How to access Git repository in jenkins on Docker","<p>I have a Docker container created from the official Jenkins image.
I created a job which pulls the sources from a remote Git repository. The user is authenticated with an ssh key.</p>

<p>I run Docker using the Docker toolbox for Windows and use Kitematic for managing my container.
I bound /var/jenkins_home to a directory on my Windows machine to persist the Jenkins configuration and jobs.</p>

<p>When I run a job, I always get this error:</p>

<pre><code>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions 0555 for 
'/var/jenkins_home/workspace/test@tmp/ssh12345.key' are too open.
It is required that your private key files are NOT accessible by others.
</code></pre>

<p>It seems that Jenkins stores the private key temporarily in a file which is under /var/jenkins_home. The permissions of that file are <code>-r-xr-xr-x</code></p>

<p>But I cannot change them.</p>

<pre><code>chmod 600 ssh12345.key
</code></pre>

<p>has no effect. Probably because it is under the mounted directory.
How can I fix this?</p>
","<p>It's possible to use volumes <code>/home/jenkins</code> only with this workaround in Powershell:</p>

<pre><code>$Env:COMPOSE_CONVERT_WINDOWS_PATHS=1
</code></pre>
","586","<git><docker><jenkins><private-key>","1","0","1","2018-09-06 16:51:52","","0","","1594823","","2018-09-06 16:51:52","2018-06-04 07:37:52",""
"44884757","140568388757144:error:0906D06C:PEM routines:PEM_read_bio:no start line:pem_lib.c:701:Expecting: ANY PRIVATE KEY","<p>I am new to digital sign. I was trying to create my own Certificate Authority and generate certificate using that. I am following <a href=""https://workaround.org/certificate-authority/"" rel=""nofollow noreferrer"">these</a> steps.</p>

<p>I Created a private key (.key) and a certificate request (.req). However, when I tried to sign that request with the CA’s key and create a certificate (.crt) with the  command <code>/usr/lib/ssl/misc/CA.pl -sign</code>, I am getting this error:</p>

<pre><code>Using configuration from /usr/lib/ssl/openssl.cnf
unable to load CA private key
140568388757144:error:0906D06C:PEM routines:PEM_read_bio:no start line:pem_lib.c:701:Expecting: ANY PRIVATE KEY Signed certificate is in newcert.pem
</code></pre>

<p>Note: I am using <code>Ubuntu 16.04</code>. <em>demoCA</em> directory, <em>newkey.pem</em> and <em>newreq.pem</em> are being created in <code>/home</code>.</p>

<p>I need <code>.pfx</code> or <code>.p12</code> file so that I can use that to sign pdf.</p>

<p>If I am missing something please suggest steps.</p>
","","585","<linux><openssl><ssl-certificate><ubuntu-16.04><private-key>","0","","0","2017-07-03 19:26:26","","2","","608639","","2017-07-03 19:26:26","2017-07-03 11:47:00","2017-07-03 19:26:53"
"44691029","Can not use PrivateKey after extracting it from AndroidKeyStore","<p>When we generate a key pair and use a private key from it in the cipher, it works as intended without any exceptions:</p>

<pre><code>KeyPairGenerator kpg = KeyPairGenerator.getInstance(""RSA"", ""BC"");
kpg.initialize(1024, new SecureRandom());
KeyPair kp = kpg.generateKeyPair();
PrivateKey privateKey = kp.getPrivate();
byte[] encryptedBytes = ""SAMPLE"".getBytes();
Cipher cipher = Cipher.getInstance(""RSA"");
cipher.init(Cipher.DECRYPT_MODE, privateKey);
byte[] decryptedBytes = cipher.doFinal(encryptedBytes);
</code></pre>

<p>But after saving of the generated PrivateKey into the AndroidKeyStore and extraction from it:</p>

<pre><code>KeyStore ks = KeyStore.getInstance(""AndroidKeyStore"");
ks.load(null);
KeyStore.Entry entry = ks.getEntry(""alias"", null);
PrivateKey privateKey = ((KeyStore.PrivateKeyEntry) entry).getPrivateKey();
</code></pre>

<p>the privateKey is not null, but the same code in the first block above (for decryption) throws an exception with message ""unknown key type passed to RSA"" on the line:</p>

<pre><code>cipher.init(Cipher.DECRYPT_MODE, privateKey);
</code></pre>

<p>I know that AndroidKeyStore was not purposed to extract the data about keys saved in it, but I expect it to return a correct Private Key to work with Android's Cipher class correctly at least.</p>
","","584","<android><encryption><rsa><private-key><android-keystore>","4","","0","2017-06-22 05:42:46","","7","4","","","","2017-06-22 05:42:46",""
"51033786","How can I import an RSA private key in PEM format for use with WebCrypto?","<p>I'm trying to use WebCrypto to sign a token with RSA-PSS, but I keep getting the error:</p>

<pre><code>DataError: Data provided to an operation does not meet requirements
</code></pre>

<p>at <code>crypto.subtle.importKey</code>.</p>

<p>This is my JavaScript code:</p>

<pre><code>function signToken(token, key) {
    crypto.subtle.importKey(
        'pkcs8',
        PEM2Binary(key),
        {
            name: 'RSA-PSS',
            hash: { name: 'SHA-256' },
        },
        false,
        ['sign']
    ).then(function(privKey){
        crypto.subtle.sign(
            'RSA-PSS',
            privKey,
            new TextEncoder().encode(token)
        ).then(function(signedToken){
            msg = JSON.stringify({ intent: 'authenticate-token', signedToken: signedToken });
            socket.send(msg);
        })
    }).catch(function(error){
        console.error(error);
    })
}

function PEM2Binary(pem) {
    var encoded = '';
    var lines = pem.split('\n');
    for (var i = 0; i &lt; lines.length; i++) {
        if (lines[i].indexOf('-----') &lt; 0) {
            encoded += lines[i];
        }
    }
    var byteStr = atob(encoded);
    var bytes = new Uint8Array(byteStr.length);
    for (var i = 0; i &lt; byteStr.length; i++) {
        bytes[i] = byteStr.charCodeAt(i);
    }
    return bytes.buffer;
}
</code></pre>

<p>And the sample private key I'm using:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA3d+Y/kWq4nNrJd0dgktQ7lfDUtEIxcs10I8+xPEUhpvacotB
o787dDP4ZFYhRQf0WMjQYJwEna/NsrPuY2fgFWIBlUdpkj1SR00FBxHvnRlzP1Sg
cYnJlqh7/A26tM51nVkMtf/4NtYr+jFvRmB5759U1GRBFwZYsoWQRQlQKh5MAk89
KRc/TvrXNzam39GcLvSYz9uN0p2p2Mrofjgv42m53AqC9LOrQbwDX7Dxl0n4z3EI
Z2Ycx33QZVYiLPH1GHTJ8+JuKjqY0ovu6lghGN0y2xR+sqWNvgyW7xlDWZ6Vwyxs
K5SCIc48VwiiAyGZGhcCZloMlO5S/dutycgHhQIDAQABAoIBAQDXfef2bmu+bSNQ
LyYN+mCsXQkUUnoWwXuPCNGKLiwlYRIV1jL2ezGfdyp1KUI+7a7g3Immi2HgVXOP
cTrDyYvWuM2Y0zcyFeTn42JSr5TuHF3W0LbUD2N/tDxXXm5MVYnePTMfQXEusW0d
Hw5YaDOGDFYzwvuFBWD4YsjwhE8b12np/BZxniTzIl/blW+moocxAampj2SOc9dV
Z06Nw1gQYScclKqdASxnIsOOALhu7h0qOLAhhVgYWH6c+AC1q/72QQy9QYOW87e/
U5mkmxfjFtifYgnBGCRN5Uv5S6lnJD10z8+yR4SomVlxDTw0UkJMOT96KEhI5ICf
s1kKU2AxAoGBAPeWvNX63C+XbgDscttSNBrx6TOEwfeZiaGSxE+P+vKa3/YuVASf
rkL0xLnUTj+OhoaLzTetQ99RlUQsYkP8IQbIhiqXMHjpDTJStlHEbdJeT1fRUVF5
55S61bpYL8xLGYNvCFEmV66YuyZBAWq/DgkBG6gX2f71lHo2UJL/B/WjAoGBAOVp
Nw5/42wuwtSoynl5f0Tlbb5nruLbNMuaSAZ7ZjDVL6DXmwTyBQgg478LWB29xP2I
Or0TTPped3DeLTJrAG9Gxz6SEHfyh0lN7wc2RfS15NNfHKJwQJjuEaTR498yHWKq
UQkryU5xe3Qfr51RkFvmWzw91aUU0YwvqWDYodC3AoGBAPEBCBv6ry6cZvX7M+qN
4C6CYJBHoFAWYsSmivUvoAVcALowapR9ozGF9aE2Klzvrb92gnK59CGD1pqf4Z9v
4+4ob4Ex3nsz0Ca2IMcDQCvQpcdD97YpxeUe4UEc6pogWFt6T0w+2IcaIMKh8HEq
PM1DCNrdLNRj1P4JtPEB04ulAoGAXXIBGifftCZL+CGU7+wceizWCfPj2cYeeDys
z+8dzhBYaTTJkTcf85KqEhyF1P+CqR7/hhrBhU5Laq8lS98n+yuiZwtKKAGjN6nG
DnL+BdK9lZeta0E8Hs8CYteX8UdRjun/PjQWuJwjBEcP2o3ptnVbfmtVhfu361lS
rf8v0nsCgYAoshpslw7/qxUw7ac4xy0puMwuBBFAiQLFm5siOjZohOWYgQ3gZpl0
TJD9jBnEiH/Jpc883YzSh2bnEGZZ9wBffnhv1rjfNh6PbrcSdSKOznPEMpvw/pOB
wBnu6RWZ9mtWWIdDmYEJDqzrV7qp2w2x2foLc4oyCUKbUbQ/DvTYFQ==
-----END RSA PRIVATE KEY-----
</code></pre>

<p>Thanks in advance for any help.</p>
","<p>The header <code>-----BEGIN RSA PRIVATE KEY-----</code> in the PEM file is reserved to PKCS#1 keys, but WebCryptoApi does not support pkcs1, so you need to convert the key from pkcs1 to pcks8 using a tool like openssl</p>

<pre><code># openssl pkcs8 -topk8 -inform PEM -outform PEM -nocrypt -in pkcs1.key -out pkcs8.key
</code></pre>
","584","<javascript><rsa><private-key><signing><webcrypto-api>","1","4","1","2018-06-26 05:52:04","51035703","0","","","","","2018-06-26 01:39:20",""
"24115945","SSL use symmetric or asymmetric?","<p>So far what I understand:</p>

<ol>
<li>Sender starts the handshake with server.</li>
<li>Server generates a pair of Public and Private key using asymmetric encryption and re-encrypt the Public key alone using symmetric encryption. And passes the Public key to the sender.</li>
<li>Sender encrypt the message using the Public key and sends the encrypted message to server.</li>
<li>Server decrypt the message using symmetric encryption and then decrypt the message again using the Private key.</li>
</ol>

<p>Is this the right way how a SSL encryption works?? Please correct me.</p>
","<blockquote>
  <p>Sender starts the handshake with server.</p>
</blockquote>

<p><em>Client</em> starts handshake with server.</p>

<blockquote>
  <p>Server generates a pair of Public and Private key using asymmetric encryption and re-encrypt the Public key alone using symmetric encryption.</p>
</blockquote>

<p>No.</p>

<blockquote>
  <p>And passes the Public key to the sender.</p>
</blockquote>

<p>No. It sends its <em>certificate</em> to the client and they then start a secret-key negotiation.</p>

<blockquote>
  <p>Sender encrypt the message using the Public key</p>
</blockquote>

<p>No. It uses a symmetric session key negotiated during the handshake.</p>

<blockquote>
  <p>and sends the encrypted message to server.</p>
</blockquote>

<p>Yes.</p>

<blockquote>
  <p>Server decrypt the message using symmetric encryption</p>
</blockquote>

<p>Yes.</p>

<blockquote>
  <p>and then decrypt the message again using the Private key.</p>
</blockquote>

<p>No.</p>

<blockquote>
  <p>Is this the right way how SSL encryption works?</p>
</blockquote>

<p>No.</p>
","582","<java><ssl><encryption><private-key><encryption-asymmetric>","-5","2","1","2014-06-09 18:44:23","24126791","4","","","","","2014-06-09 07:53:27",""
"42552508","M2Crypto load private key from X509 object","<p>I don't know how to load X509 private key into M2Crypto.SSL.Context.</p>

<p>Does it use M2Crypto.X509.X509_Store.add_X509 function?</p>

<p>Thanks</p>
","<p>The certificate and the private key of a <code>Context</code> are set by the <a href=""https://www.heikkitoivonen.net/m2crypto/api/M2Crypto.SSL.Context%27.Context-class.html#load_cert"" rel=""nofollow noreferrer""><code>Context.load_cert()</code></a> or <a href=""https://www.heikkitoivonen.net/m2crypto/api/M2Crypto.SSL.Context%27.Context-class.html#load_cert_chain"" rel=""nofollow noreferrer""><code>Context.load_cert_chain()</code></a> methods, e.g:</p>

<pre><code>from M2Crypto import SSL
ctx = SSL.Context()
ctx.load_cert('/path/to/certificate.pem', '/path/to/privkey.pem')
</code></pre>

<hr>

<p>Edit: To work directly with X509 objects and private keys you need to use the low-level <code>M2Crypto.m2</code> API.</p>

<p>Example:</p>

<pre><code>from M2Crypto import SSL, X509, EVP, RSA, m2
ctx = SSL.Context()
x509 = X509.load_cert('/path/to/cert.pem')

evp = EVP.PKey()
rsa = RSA.load_key('/path/to/privkey.pem')
evp.assign_rsa(rsa)

# or instantiate evp key differently, e.g. directly from file:
# evp = EVP.load_key('/path/to/privatekey.pem')

m2.ssl_ctx_use_x509(ctx.ctx, x509.x509)
m2.ssl_ctx_use_pkey_privkey(ctx.ctx, evp.pkey)

# rsa key could be used directly instead:
# m2.ssl_ctx_use_rsa_privkey(ctx.ctx, rsa.rsa)

# verify everything went ok
m2.ssl_ctx_check_privkey(ctx.ctx)
</code></pre>
","575","<python><x509><private-key>","0","0","1","2017-03-02 13:54:34","","0","","4217077","","2017-03-02 10:41:25","2017-03-02 10:12:35",""
"13307656","android, ios and php encryption/decryption","<p>I am developing a mobile application in <code>android</code> and <code>ios</code> which needs to communicate with a server in <code>php</code>.I need to make sure that the communication is secure. I know that I can use <code>ssl</code> but I don't think it's worth to buy an <code>ssl</code> certificate for this project.</p>

<p>So I would like to encrypt the data in the mobile application, and decrypt it server side.
I found this for <a href=""http://www.androidsnippets.com/encrypt-decrypt-between-android-and-php"" rel=""nofollow"">android/php</a>. But what about <code>ios</code>? How could I implement this class?</p>
","","574","<php><android><ios><encryption><private-key>","1","","0","2012-11-09 12:13:15","","3","","704374","","2012-11-09 12:13:15","2012-11-09 11:57:07","2018-11-01 14:53:32"
"20809769","Open a pkcs8 file key without use OPENSSL","<p>I'm trying to open a pkcs8 KEY file and I have found some procedures that allow me to generate a PEM file using the OPENSSL library and then generate the PrivateKey from it. 
Unfortunately I want to open the KEY without manipulate the file previously.
Is this possible?</p>
","<p>In <a href=""http://uetiko-developer.blogspot.mx/2010/02/como-obtener-el-sello-digital-con-java.html"" rel=""nofollow"">this Web page</a> I found the solution. It uses one library that Konstantin mentioned; It worked with the <em>not-yet-commons-ssl-0.3.11.jar</em>.</p>

<pre><code>byte[] clavePrivada = getBytes(archivoClavePrivada); 
PKCS8Key pkcs8 = new PKCS8Key(clavePrivada, password.toCharArray()); 
PrivateKey pk = pkcs8.getPrivateKey();     
</code></pre>

<p>It uses the method getBytes()</p>

<pre><code>private byte[] getBytes(InputStream is) { 
  int totalBytes = 714; 
  byte[] buffer = null; 
  try { 
    buffer = new byte[totalBytes]; 
    is.read(buffer, 0, totalBytes); 
    is.close(); 
  } catch (IOException e) { 
    e.printStackTrace(); 
  } 
  return buffer; 
} 
</code></pre>
","572","<java><openssl><private-key><pem><pkcs#8>","1","0","1","2013-12-31 07:43:44","","2","","418556","","2013-12-28 00:45:12","2013-12-28 00:43:19",""
"40876639","generating you tor hostname from your tor private_key with python","<p>I've been trying to generate my tor hostname from my private_key with python3.
I've used this <a href=""https://timtaubert.de/blog/2014/11/using-the-webcrypto-api-to-generate-onion-names-for-tor-hidden-services/"" rel=""nofollow noreferrer"">tutorial(java)</a> and tried to change it to what i want to achieve, but i cant seem to generate my hostname. I suspect that the error lies somewhere in the slicing at the last line, but i cant find any documentation about it.</p>

<pre><code>from Crypto.PublicKey import RSA
from base64 import b32encode as b32
import hashlib

privkey= open('privkey',""r"")
#print(key.read())
key = RSA.importKey(privkey.read())
pubkey = key.publickey()
print(b32(hashlib.sha1(pubkey.exportKey()[22:).digest()[:10]))
</code></pre>

<p>also, my goal is to do it as easy understandable as possible, and <a href=""https://stackoverflow.com/questions/25515593/generating-private-key-and-hostname-for-tor-hidden-service-in-python"">this answer</a> seems overly complicated to me.</p>
","<p>aye I know this question is old but maybe my answer will benefit other people like me who were trying to do something similar and stumbled upon this question. I think I figured it out - I used some of your code and some of the code from PyShallot and it's working for me.</p>

<pre><code>import hashlib
from hashlib import sha1
import rsa
from pyasn1.type import univ, namedtype
from pyasn1.codec.der import encoder
from base64 import b32encode
from Crypto.PublicKey import RSA

class RSAPublicKey(univ.Sequence):
    componentType = namedtype.NamedTypes(
            namedtype.NamedType('modulus', univ.Integer()),
            namedtype.NamedType('publicExponent', univ.Integer())
            )

pubkey, privkey = rsa.newkeys(1024)
privkey = privkey.save_pkcs1(format='PEM')
key = RSA.importKey(privkey)
n = key.n
e = key.e
public_key = RSAPublicKey()
public_key.setComponentByName('modulus', n)
public_key.setComponentByName('publicExponent', e)
pubkey = encoder.encode(public_key)
onion = b32encode(sha1(pubkey).digest())[:16].lower()+'.onion'
print str(onion)
print str(privkey)
</code></pre>

<p>The code above prints an onion address and the corresponding private key. PyShallot seems to work by calculating a public key and private key piece by piece instead of using an RSA library. I used the rsa module to generate a private key and the Crypto module to extract the individual RSA parameters, and then I used the code from PyShallot to calculate the public key. From there I could derive the onion address. It's really ugly and hacky, and there's definitely a better way to do it that's faster and doesn't use so many libraries. But it works.</p>
","569","<python><rsa><private-key><hostname><tor>","0","0","2","2017-09-19 19:07:21","","0","","","","","2016-11-29 22:05:17",""
"40876639","generating you tor hostname from your tor private_key with python","<p>I've been trying to generate my tor hostname from my private_key with python3.
I've used this <a href=""https://timtaubert.de/blog/2014/11/using-the-webcrypto-api-to-generate-onion-names-for-tor-hidden-services/"" rel=""nofollow noreferrer"">tutorial(java)</a> and tried to change it to what i want to achieve, but i cant seem to generate my hostname. I suspect that the error lies somewhere in the slicing at the last line, but i cant find any documentation about it.</p>

<pre><code>from Crypto.PublicKey import RSA
from base64 import b32encode as b32
import hashlib

privkey= open('privkey',""r"")
#print(key.read())
key = RSA.importKey(privkey.read())
pubkey = key.publickey()
print(b32(hashlib.sha1(pubkey.exportKey()[22:).digest()[:10]))
</code></pre>

<p>also, my goal is to do it as easy understandable as possible, and <a href=""https://stackoverflow.com/questions/25515593/generating-private-key-and-hostname-for-tor-hidden-service-in-python"">this answer</a> seems overly complicated to me.</p>
","<p>You almost got it right, just needed to slice the digest at 16 bytes, then slice the hash at 16 characters:</p>

<pre><code>key_hash = b32(hashlib.sha1(pubkey.exportKey()[22:]).digest()[:16])
print(key_hash[:16].lower() + "".onion"")
</code></pre>
","569","<python><rsa><private-key><hostname><tor>","0","0","2","2017-09-19 19:07:21","","0","","","","","2016-11-29 22:05:17",""
"46275577","WebCrypto: importing private key for decrypt by crypto.subtle.importkey(...)","<p>I want to import private key by web crypto. This is my code:</p>

<pre><code>    //import private key
    var keyDataDec = {
        kty: 'RSA',
        alg: 'RSA-OAEP-256',
        e: b64ToB64Url(hexToBase64(rsaJson.e)),
        n: b64ToB64Url(hexToBase64(rsaJson.n)),
        d: b64ToB64Url(hexToBase64(rsaJson.d)),
        p: b64ToB64Url(hexToBase64(rsaJson.p)),
        q: b64ToB64Url(hexToBase64(rsaJson.q)),
        dp: b64ToB64Url(hexToBase64(rsaJson.dmp1)),
        dq: b64ToB64Url(hexToBase64(rsaJson.dmq1)),
        qi: b64ToB64Url(hexToBase64(rsaJson.coeff)),
        ext: true,
        key_ops: ['decrypt']
    };
    var algoDec = {
        name: 'RSA-OAEP',
        modulusLength: 2048,
        publicExponent: new Uint8Array([0x01, 0x00, 0x01]),
        hash: 'SHA-256' //{name:'SHA-256'}
    };
    importPrivate = crypto.subtle.importKey('jwk', keyDataDec, algoDec, false, ['decrypt'])
        .catch(function(err) {
            console.log(err);
         });
</code></pre>

<p>The error that I found is ""DOMException"" and PromiseValue is ""undefined"".</p>

<p>I'm running in Mozilla Firefox and Chrome. 
This is my key:</p>

<pre><code>{""e"": ""10001"",
""n"":""74a258004dd6c338b27688c1dd13d90da3269321d6dfa3cd8d7cfd7521453d0c5a9828bd507cfc6fe004ddcc09c498d2ceea8e05c214a63ab99d33c9060236f02d5f8bd1e7b334c7f74745948664aeba1a5addf7e7d76911ebf382852aabe86e06f83e0f7669be172380069547f542d8b0848b8bcf53e57c04d5e4163820ced3e4078418efe98df9f8c54c0cda66db3262f20b81464162c44216ca8b63c8f0cfe090dfe1d1950428ad6948204f3f44ba0648de44a9c44d44b91bd8f9ff7cccaceb9f20204f3ba1e228f13249fe04a7fc69cfe57d35e8897e16bc7872f585c909fec9b95a5240ab6589c3ebbe3ad614bfbdc966218daf9d9dddb39fdf6c0d3b49"",
""d"":""6f715f5c8b0395ed6ab84fdbccfdd5fb6dd4c1e92782f0e4cb388e858890bbd03e0ffd7d4696e62d8f8396da0acb4aaac302e3492534cdd076e27a44adf517c14dd969a3db1c24669d24009bf5fde5e5f4a0b64ed5bbc1ad5a2286a7ef29eb20969043dc4a6ca7313cbe6b8be001bd2987205ea5ec2861b1aa7d253f05ca73543d573578733f5e36db4759732386eb222efc93a61565c2c5453889ead0379c03c5023b488b34ba5aa09a1e3a51dc882a2c7b0e98913c4c89df7bd331785af5d778bc22ef128900d0a39252a900638d8b62ecaa399255e5517dbd787bb9c35ecf8ef9aa129ec3fcaafcbf063c9aa4b7c579862d0f01c60f850fb6edd94484e801"",
""p"":""c82bd0e1f1fb519a5e9dcae56565bb2fc6d8bb320449c522ef3f624227bf567ffb0e0607cb349b97f0643118aaa91ca6ab05569d8a0b1fa0dac7bfe313409e49743fea4f3050b64bf2c67af0aa44e7510db84caf064d6ccdac8b2f9cd72724f591cebe8d362661460afb90a87baee38f6d218a8a9d07c7ad0af91ec95f8382c1"",
""q"":""952a004d688ce1fff74e5af5ebc802c8993174aabad8a8da1dc0e4b306f27250f05c70019ab8e2d1f0c1a8178dbaf53d9be68d82334f6b32e36410452b7805d2fb03108d729c2705923c7b7c1ceeceb878fcad02120ae65e478fdbdfc61a1f05e5b4e78d93949bfd04a736966396e73bb95053fd2e6a3f1b9efd2adba916c289"",
""dmp1"":""9ab9d3b272fb92ae4268b206f383d9572adb288796ecf6e6f40c08859e77b603232a49db0865d7c77057e1e371375b20319de4bfcd8e9f9a14c2c63e5e095ad0e87ce73ee2d7e0b1802d8fa62bd72afe6a1e8597dcc5484f0b0a6379568db971e08cf099f2bb64016247e61f75cb4fb6f3e23356c5ded7a7988dcc1058362d81"",
""dmq1"":""922563c474224caff0cb699db754f13d3fb34ffe933102472a8dbac59991e3e55f8b0206e064337fc4a6c91dc2b4a1e1aa24fb12cd590bcc01352227d34e364e9fb741f9848870472a1f6e518d3b817906b9727d2bd6581d9979ded0e214e7be6c7091ca8a0539cc6e49b2d7285e4ad29e5f90dae8261b0ce1fa648a71a22619"",
""coeff"":""9886299d00dcd080956b9f454008cdfaee141bd28938dac2cf0ef43094e36b97fa1821baa9c35b0fdb38d01d39ad64652c123b48fe0197dc1b43f074fbbfdb7349c1ee9cf33026611721e523391abff0f099a4f6fcdb4cc08b97401facbbbaa50390f4315025540d6cc2d734c4c634a1df9490711a16e05fd54d5b24e6cfaa4f""}
</code></pre>

<p>I don't know where is the problem. It works for importing public key.</p>

<pre><code>function hexToBase64(str) {
    return btoa(String.fromCharCode.apply(null,
        str.replace(/\r|\n/g, """").replace(/([\da-fA-F]{2}) ?/g, ""0x$1 "").replace(/ +$/, """").split("" ""))
    );
};

function b64ToB64Url(base64){
    return base64.replace(/\=/g,"""").replace(/\+/g,""-"").replace(/\//g,""_"");
};
</code></pre>
","<p>Ana, it would be helpful to provide more information, for example, a sample of what you are trying to import and what browser you are running. That said check out <a href=""https://github.com/diafygi/webcrypto-examples"" rel=""nofollow noreferrer"">https://github.com/diafygi/webcrypto-examples</a>, it may help.</p>
","567","<import><rsa><private-key><webcrypto-api>","1","0","3","2017-09-22 09:18:17","46358559","0","","8612800","","2017-09-22 08:08:55","2017-09-18 09:11:08",""
"46275577","WebCrypto: importing private key for decrypt by crypto.subtle.importkey(...)","<p>I want to import private key by web crypto. This is my code:</p>

<pre><code>    //import private key
    var keyDataDec = {
        kty: 'RSA',
        alg: 'RSA-OAEP-256',
        e: b64ToB64Url(hexToBase64(rsaJson.e)),
        n: b64ToB64Url(hexToBase64(rsaJson.n)),
        d: b64ToB64Url(hexToBase64(rsaJson.d)),
        p: b64ToB64Url(hexToBase64(rsaJson.p)),
        q: b64ToB64Url(hexToBase64(rsaJson.q)),
        dp: b64ToB64Url(hexToBase64(rsaJson.dmp1)),
        dq: b64ToB64Url(hexToBase64(rsaJson.dmq1)),
        qi: b64ToB64Url(hexToBase64(rsaJson.coeff)),
        ext: true,
        key_ops: ['decrypt']
    };
    var algoDec = {
        name: 'RSA-OAEP',
        modulusLength: 2048,
        publicExponent: new Uint8Array([0x01, 0x00, 0x01]),
        hash: 'SHA-256' //{name:'SHA-256'}
    };
    importPrivate = crypto.subtle.importKey('jwk', keyDataDec, algoDec, false, ['decrypt'])
        .catch(function(err) {
            console.log(err);
         });
</code></pre>

<p>The error that I found is ""DOMException"" and PromiseValue is ""undefined"".</p>

<p>I'm running in Mozilla Firefox and Chrome. 
This is my key:</p>

<pre><code>{""e"": ""10001"",
""n"":""74a258004dd6c338b27688c1dd13d90da3269321d6dfa3cd8d7cfd7521453d0c5a9828bd507cfc6fe004ddcc09c498d2ceea8e05c214a63ab99d33c9060236f02d5f8bd1e7b334c7f74745948664aeba1a5addf7e7d76911ebf382852aabe86e06f83e0f7669be172380069547f542d8b0848b8bcf53e57c04d5e4163820ced3e4078418efe98df9f8c54c0cda66db3262f20b81464162c44216ca8b63c8f0cfe090dfe1d1950428ad6948204f3f44ba0648de44a9c44d44b91bd8f9ff7cccaceb9f20204f3ba1e228f13249fe04a7fc69cfe57d35e8897e16bc7872f585c909fec9b95a5240ab6589c3ebbe3ad614bfbdc966218daf9d9dddb39fdf6c0d3b49"",
""d"":""6f715f5c8b0395ed6ab84fdbccfdd5fb6dd4c1e92782f0e4cb388e858890bbd03e0ffd7d4696e62d8f8396da0acb4aaac302e3492534cdd076e27a44adf517c14dd969a3db1c24669d24009bf5fde5e5f4a0b64ed5bbc1ad5a2286a7ef29eb20969043dc4a6ca7313cbe6b8be001bd2987205ea5ec2861b1aa7d253f05ca73543d573578733f5e36db4759732386eb222efc93a61565c2c5453889ead0379c03c5023b488b34ba5aa09a1e3a51dc882a2c7b0e98913c4c89df7bd331785af5d778bc22ef128900d0a39252a900638d8b62ecaa399255e5517dbd787bb9c35ecf8ef9aa129ec3fcaafcbf063c9aa4b7c579862d0f01c60f850fb6edd94484e801"",
""p"":""c82bd0e1f1fb519a5e9dcae56565bb2fc6d8bb320449c522ef3f624227bf567ffb0e0607cb349b97f0643118aaa91ca6ab05569d8a0b1fa0dac7bfe313409e49743fea4f3050b64bf2c67af0aa44e7510db84caf064d6ccdac8b2f9cd72724f591cebe8d362661460afb90a87baee38f6d218a8a9d07c7ad0af91ec95f8382c1"",
""q"":""952a004d688ce1fff74e5af5ebc802c8993174aabad8a8da1dc0e4b306f27250f05c70019ab8e2d1f0c1a8178dbaf53d9be68d82334f6b32e36410452b7805d2fb03108d729c2705923c7b7c1ceeceb878fcad02120ae65e478fdbdfc61a1f05e5b4e78d93949bfd04a736966396e73bb95053fd2e6a3f1b9efd2adba916c289"",
""dmp1"":""9ab9d3b272fb92ae4268b206f383d9572adb288796ecf6e6f40c08859e77b603232a49db0865d7c77057e1e371375b20319de4bfcd8e9f9a14c2c63e5e095ad0e87ce73ee2d7e0b1802d8fa62bd72afe6a1e8597dcc5484f0b0a6379568db971e08cf099f2bb64016247e61f75cb4fb6f3e23356c5ded7a7988dcc1058362d81"",
""dmq1"":""922563c474224caff0cb699db754f13d3fb34ffe933102472a8dbac59991e3e55f8b0206e064337fc4a6c91dc2b4a1e1aa24fb12cd590bcc01352227d34e364e9fb741f9848870472a1f6e518d3b817906b9727d2bd6581d9979ded0e214e7be6c7091ca8a0539cc6e49b2d7285e4ad29e5f90dae8261b0ce1fa648a71a22619"",
""coeff"":""9886299d00dcd080956b9f454008cdfaee141bd28938dac2cf0ef43094e36b97fa1821baa9c35b0fdb38d01d39ad64652c123b48fe0197dc1b43f074fbbfdb7349c1ee9cf33026611721e523391abff0f099a4f6fcdb4cc08b97401facbbbaa50390f4315025540d6cc2d734c4c634a1df9490711a16e05fd54d5b24e6cfaa4f""}
</code></pre>

<p>I don't know where is the problem. It works for importing public key.</p>

<pre><code>function hexToBase64(str) {
    return btoa(String.fromCharCode.apply(null,
        str.replace(/\r|\n/g, """").replace(/([\da-fA-F]{2}) ?/g, ""0x$1 "").replace(/ +$/, """").split("" ""))
    );
};

function b64ToB64Url(base64){
    return base64.replace(/\=/g,"""").replace(/\+/g,""-"").replace(/\//g,""_"");
};
</code></pre>
","<p>Perhaps the problem is in the method to convert from hex to base64 similarly as it is described in this <a href=""https://stackoverflow.com/questions/38677742/cryptokey-arraybuffer-to-base64-and-back/38718848#38718848"">stackoverlow article</a></p>
","567","<import><rsa><private-key><webcrypto-api>","1","0","3","2017-09-22 09:18:17","46358559","0","","8612800","","2017-09-22 08:08:55","2017-09-18 09:11:08",""
"46275577","WebCrypto: importing private key for decrypt by crypto.subtle.importkey(...)","<p>I want to import private key by web crypto. This is my code:</p>

<pre><code>    //import private key
    var keyDataDec = {
        kty: 'RSA',
        alg: 'RSA-OAEP-256',
        e: b64ToB64Url(hexToBase64(rsaJson.e)),
        n: b64ToB64Url(hexToBase64(rsaJson.n)),
        d: b64ToB64Url(hexToBase64(rsaJson.d)),
        p: b64ToB64Url(hexToBase64(rsaJson.p)),
        q: b64ToB64Url(hexToBase64(rsaJson.q)),
        dp: b64ToB64Url(hexToBase64(rsaJson.dmp1)),
        dq: b64ToB64Url(hexToBase64(rsaJson.dmq1)),
        qi: b64ToB64Url(hexToBase64(rsaJson.coeff)),
        ext: true,
        key_ops: ['decrypt']
    };
    var algoDec = {
        name: 'RSA-OAEP',
        modulusLength: 2048,
        publicExponent: new Uint8Array([0x01, 0x00, 0x01]),
        hash: 'SHA-256' //{name:'SHA-256'}
    };
    importPrivate = crypto.subtle.importKey('jwk', keyDataDec, algoDec, false, ['decrypt'])
        .catch(function(err) {
            console.log(err);
         });
</code></pre>

<p>The error that I found is ""DOMException"" and PromiseValue is ""undefined"".</p>

<p>I'm running in Mozilla Firefox and Chrome. 
This is my key:</p>

<pre><code>{""e"": ""10001"",
""n"":""74a258004dd6c338b27688c1dd13d90da3269321d6dfa3cd8d7cfd7521453d0c5a9828bd507cfc6fe004ddcc09c498d2ceea8e05c214a63ab99d33c9060236f02d5f8bd1e7b334c7f74745948664aeba1a5addf7e7d76911ebf382852aabe86e06f83e0f7669be172380069547f542d8b0848b8bcf53e57c04d5e4163820ced3e4078418efe98df9f8c54c0cda66db3262f20b81464162c44216ca8b63c8f0cfe090dfe1d1950428ad6948204f3f44ba0648de44a9c44d44b91bd8f9ff7cccaceb9f20204f3ba1e228f13249fe04a7fc69cfe57d35e8897e16bc7872f585c909fec9b95a5240ab6589c3ebbe3ad614bfbdc966218daf9d9dddb39fdf6c0d3b49"",
""d"":""6f715f5c8b0395ed6ab84fdbccfdd5fb6dd4c1e92782f0e4cb388e858890bbd03e0ffd7d4696e62d8f8396da0acb4aaac302e3492534cdd076e27a44adf517c14dd969a3db1c24669d24009bf5fde5e5f4a0b64ed5bbc1ad5a2286a7ef29eb20969043dc4a6ca7313cbe6b8be001bd2987205ea5ec2861b1aa7d253f05ca73543d573578733f5e36db4759732386eb222efc93a61565c2c5453889ead0379c03c5023b488b34ba5aa09a1e3a51dc882a2c7b0e98913c4c89df7bd331785af5d778bc22ef128900d0a39252a900638d8b62ecaa399255e5517dbd787bb9c35ecf8ef9aa129ec3fcaafcbf063c9aa4b7c579862d0f01c60f850fb6edd94484e801"",
""p"":""c82bd0e1f1fb519a5e9dcae56565bb2fc6d8bb320449c522ef3f624227bf567ffb0e0607cb349b97f0643118aaa91ca6ab05569d8a0b1fa0dac7bfe313409e49743fea4f3050b64bf2c67af0aa44e7510db84caf064d6ccdac8b2f9cd72724f591cebe8d362661460afb90a87baee38f6d218a8a9d07c7ad0af91ec95f8382c1"",
""q"":""952a004d688ce1fff74e5af5ebc802c8993174aabad8a8da1dc0e4b306f27250f05c70019ab8e2d1f0c1a8178dbaf53d9be68d82334f6b32e36410452b7805d2fb03108d729c2705923c7b7c1ceeceb878fcad02120ae65e478fdbdfc61a1f05e5b4e78d93949bfd04a736966396e73bb95053fd2e6a3f1b9efd2adba916c289"",
""dmp1"":""9ab9d3b272fb92ae4268b206f383d9572adb288796ecf6e6f40c08859e77b603232a49db0865d7c77057e1e371375b20319de4bfcd8e9f9a14c2c63e5e095ad0e87ce73ee2d7e0b1802d8fa62bd72afe6a1e8597dcc5484f0b0a6379568db971e08cf099f2bb64016247e61f75cb4fb6f3e23356c5ded7a7988dcc1058362d81"",
""dmq1"":""922563c474224caff0cb699db754f13d3fb34ffe933102472a8dbac59991e3e55f8b0206e064337fc4a6c91dc2b4a1e1aa24fb12cd590bcc01352227d34e364e9fb741f9848870472a1f6e518d3b817906b9727d2bd6581d9979ded0e214e7be6c7091ca8a0539cc6e49b2d7285e4ad29e5f90dae8261b0ce1fa648a71a22619"",
""coeff"":""9886299d00dcd080956b9f454008cdfaee141bd28938dac2cf0ef43094e36b97fa1821baa9c35b0fdb38d01d39ad64652c123b48fe0197dc1b43f074fbbfdb7349c1ee9cf33026611721e523391abff0f099a4f6fcdb4cc08b97401facbbbaa50390f4315025540d6cc2d734c4c634a1df9490711a16e05fd54d5b24e6cfaa4f""}
</code></pre>

<p>I don't know where is the problem. It works for importing public key.</p>

<pre><code>function hexToBase64(str) {
    return btoa(String.fromCharCode.apply(null,
        str.replace(/\r|\n/g, """").replace(/([\da-fA-F]{2}) ?/g, ""0x$1 "").replace(/ +$/, """").split("" ""))
    );
};

function b64ToB64Url(base64){
    return base64.replace(/\=/g,"""").replace(/\+/g,""-"").replace(/\//g,""_"");
};
</code></pre>
","<p>Your code basically works. You have an issue with the <code>hexToBase64</code> function converting <code>""e"": ""10001""</code> because the exponent <code>10001</code> represented as hexadecimal should be <code>010001</code>. Note the leading zero.</p>

<p>Seems your function does not work properly with hexadecimal values not represented with two chars ( a byte)</p>
","567","<import><rsa><private-key><webcrypto-api>","1","0","3","2017-09-22 09:18:17","46358559","0","","8612800","","2017-09-22 08:08:55","2017-09-18 09:11:08",""
"20562035","Do I need to generate one private key to each server, or can I spread my private key among them?","<p>Let's say I have multiple computers and multiple servers. </p>

<p>One computer has a private key, and its public key is spread among all of the servers. </p>

<p>Can I just copy my private key from this computer among my other computers to connect to the servers, or do I have to generate private keys on each computer and then authorize their public keys on each server?</p>

<p>If not, is there a better way to do it (that would save me some time)?</p>

<p>Thanks.</p>
","<p>This seems to be a question where <strong>ssh-agent</strong> is the answer.</p>

<p>Let's assume that there is one machine that is currently accessible via the console called <code>console-box</code>, and a few other machines <code>remote-box-1</code>,<code>remote-box-2</code>, ... <code>remote-box-n</code>.</p>

<p>First generate a key on the console-box</p>

<pre><code>(console-box)$ ssh-keygen -t rsa -b 2048
Generating public/private rsa key pair.
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
</code></pre>

<p>Then distribute the public key onto the remote boxen.</p>

<pre><code>(console-box)$ eval $(ssh-agent) 
(console-box)$ ssh-add ~/.ssh/id_rsa
Enter passphrase for ~/.ssh/id_rsa: 
Identity added: ~/.ssh/juanje_rsa
(console-box)$ ssh -A remote-box-1
(remote-box-1)$ ssh -A remote-box-2
 ...
(remote-box-n)$ ssh -A console-box
</code></pre>

<p>As soon as the agent is set up on <code>console-box</code> and agent forwarding option is activated, you can freely ssh/scp between your many development and deployment boxes without ever typing a password.</p>
","563","<ssh><ssh-keys><private-key><public-key>","0","1","2","2019-07-25 21:14:55","","4","1","","","","2013-12-13 08:24:38",""
"20562035","Do I need to generate one private key to each server, or can I spread my private key among them?","<p>Let's say I have multiple computers and multiple servers. </p>

<p>One computer has a private key, and its public key is spread among all of the servers. </p>

<p>Can I just copy my private key from this computer among my other computers to connect to the servers, or do I have to generate private keys on each computer and then authorize their public keys on each server?</p>

<p>If not, is there a better way to do it (that would save me some time)?</p>

<p>Thanks.</p>
","<p>To understand this question, its best to know a little about asymmetric encryption. In asymmetric encryption, you have a public key and a private key. Together they make a ""keypair."" The public key is used to encrypt. The private key is then used to decrypt. Note the private key can only decrypt files that were encrypted with the matching public key.</p>

<p>So now we know that there are 2 files needed to make everything work.</p>

<blockquote>
  <p>Can I just copy my private key from this computer among my other computers to connect to >the servers, or do I have to generate private keys on each computer and then authorize >their public keys on each server?</p>
</blockquote>

<p>The answer simply is, yes. You can copy the public or private key to any computer and use it with any OS. As long as you have the public key, you can encrypt messages. If you have the private key, then you can decrypt those files afterwards. Its just a matter of the files being present on the computer.</p>

<blockquote>
  <p>If not, is there a better way to do it (that would save me some time)?</p>
</blockquote>

<p>While theres no technical reason you cant copy and reuse the same keypair everytime, this is not a good practice in terms of security. For example, if you have a forest of 100 servers all sharing the same keypair, if 1 is compromised or hacked, the rest of the 99 servers are also compromised. If you have a unique keypair on each server, then they would need to compromise all 100 servers to get the same effect. The simple act of using a unique keypair everytime <strong>increases the amount of work for an attacker by orders of magnitude.</strong></p>
","563","<ssh><ssh-keys><private-key><public-key>","0","0","2","2019-07-25 21:14:55","","4","1","","","","2013-12-13 08:24:38",""
"49968678","Where to store private keys in public/private key encryption in PHP?","<p>I am currently developing an LMS for a school. I want to encrypt the grades students get so that only school administrators, teachers, and the student can access the grades. I don't want to be able to see the grades, and I don't want someone who somehow gets access to the database to see the grades either.</p>

<p>Here's how I'm thinking I'll store the grades in a database, but I'm not 100% sure if this is good or the best it can be.</p>

<ol>
<li>Every user (teacher, admin, student) has a public and private key</li>
<li>Teacher grades an assignment</li>
<li>The grade gets encrypted with multiple public keys (every teacher and administrator's keys, as well as the student's) and then gets stored in a MySQL database</li>
<li>When a teacher, admin, or the student visits a page to see the grade, the grade gets decrypted with that user's private key.</li>
<li>The private key could be stored in the database, encrypted by the user's password. When a user logs in (with their password), their private key gets decrypted and then stored in a session variable (or cookie) for use during their session to decrypt the grade(s).</li>
</ol>

<p>One thing that (I think) makes this hard is that there will inevitably be staff changes (a new administrator, a teacher gets replaced, etc.) and I need <em>all</em> teachers and administrators to have access to <em>all</em> grades. So how would I allow a new key pair to access the encrypted data when a new user account should have access?</p>
","","561","<php><encryption><private-key>","0","","0","2018-04-22 17:18:41","","2","","","","","2018-04-22 17:18:41",""
"31128131","Private Key format errors","<p>I'm using nginx to set up SSL connections, but my keys aren't working.</p>

<p>When I restart nginx I get the following error:</p>

<pre><code>Restarting nginx: nginx: [emerg] SSL_CTX_use_PrivateKey_file(""/home/[user]/CC/[domain].com.key.pem"") failed (SSL: error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag error:0D06C03A:asn1 encoding routines:ASN1_D2I_EX_PRIMITIVE:nested asn1 error error:0D08303A:asn1 encoding routines:ASN1_TEMPLATE_NOEXP_D2I:nested asn1 error:Field=algorithm, Type=X509_ALGOR error:0D08303A:asn1 encoding routines:ASN1_TEMPLATE_NOEXP_D2I:nested asn1 error:Field=algor, Type=X509_SIG error:0907B00D:PEM routines:PEM_READ_BIO_PRIVATEKEY:ASN1 lib error:140B0009:SSL routines:SSL_CTX_use_PrivateKey_file:PEM lib)
</code></pre>

<p>nginx.</p>

<p>I have the key from the original request, but it says the format is wrong. In order to check myself I made a new key in a different folder and that one works fine (asks for the password, etc.)</p>

<p>The top is the key I want to work, and the bottom is the key that does work. Do you notice anything different with the format? I have removed middle characters to keep security, but the format is unchanged.</p>

<pre><code>$ cat [domain]com.key.pem 
-----BEGIN ENCRYPTED PRIVATE KEY-----
MIIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAALYmQ==
-----END ENCRYPTED PRIVATE KEY-----
$ cat 2/[domain]com.key.pem 
-----BEGIN ENCRYPTED PRIVATE KEY-----
MIIFDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
+RM=
-----END ENCRYPTED PRIVATE KEY-----
</code></pre>
","<p>This seems to arise when you have repeated unlockings in a short period of time, especially when you enter your passphrase incorrectly a few times. I think this might be a security policy that OpenSSL is enforcing about repeated unlocking of an unchanged certificate. Or maybe it's a cache issue. But marking the file as ""changed"" is enough to reset the (security?) cache:</p>

<pre><code>$ touch /path/to/key.pem
</code></pre>

<p>Depending on what permissions you have on the key, you may have to use <code>sudo</code>.</p>
","557","<ubuntu><nginx><rsa><private-key>","1","0","1","2015-07-04 04:27:16","","1","","","","","2015-06-30 01:29:47",""
"12857820","ios provisioning portal certificate can't be install...?","<p>I have an iphone application which was created by other and now I'm on the work. Provisioning portal of client already have Development and Distribution certificate. Now I want to install that certificate and work on that application, so I download that certificate and install(just double click), so it showing me in my ""keychain access"" but I think they are not install properly because of no private key. Can anyone help me what is the process to work on this...!?!</p>
","<p>You need to private key for the certificate, which is in the keychain of the mac that requested the certificates.</p>

<p>if you can't get the private key you will need to create a new certificate.</p>
","550","<iphone><ios><certificate><private-key><ios-provisioning>","0","0","4","2013-02-13 06:29:24","12857938","1","","","","","2012-10-12 11:13:05",""
"12857820","ios provisioning portal certificate can't be install...?","<p>I have an iphone application which was created by other and now I'm on the work. Provisioning portal of client already have Development and Distribution certificate. Now I want to install that certificate and work on that application, so I download that certificate and install(just double click), so it showing me in my ""keychain access"" but I think they are not install properly because of no private key. Can anyone help me what is the process to work on this...!?!</p>
","<p>You have to ask the client to send you the private key. He can export from his keychain the private key as .p12 file.  </p>
","550","<iphone><ios><certificate><private-key><ios-provisioning>","0","0","4","2013-02-13 06:29:24","12857938","1","","","","","2012-10-12 11:13:05",""
"12857820","ios provisioning portal certificate can't be install...?","<p>I have an iphone application which was created by other and now I'm on the work. Provisioning portal of client already have Development and Distribution certificate. Now I want to install that certificate and work on that application, so I download that certificate and install(just double click), so it showing me in my ""keychain access"" but I think they are not install properly because of no private key. Can anyone help me what is the process to work on this...!?!</p>
","<p>This may be a issue with creation of certificate.</p>

<p><a href=""http://www.youtube.com/watch?v=Q--ZpEsoHUQ"" rel=""nofollow"">This video </a> will help you.</p>

<p><strong>or follow the below steps</strong></p>

<p>Click on the Keychain Access menu-->CertificateAssistance -->Request a certificate from Certificate Authority.</p>

<p>A new window will appear with the Emailaddress,common name etc.. sections.</p>

<p>Type in the email address you used for your appledeveloper certificate in the ‘user email address’ field.</p>

<p>Use any one name as Common Name.</p>

<p>Click ‘Saved to disk’ button.</p>

<p>create certificate from developer portal.</p>
","550","<iphone><ios><certificate><private-key><ios-provisioning>","0","0","4","2013-02-13 06:29:24","12857938","1","","","","","2012-10-12 11:13:05",""
"12857820","ios provisioning portal certificate can't be install...?","<p>I have an iphone application which was created by other and now I'm on the work. Provisioning portal of client already have Development and Distribution certificate. Now I want to install that certificate and work on that application, so I download that certificate and install(just double click), so it showing me in my ""keychain access"" but I think they are not install properly because of no private key. Can anyone help me what is the process to work on this...!?!</p>
","<p>You need to ask them for provide certificate.p12 file from previous dev or whoever created the certificate signing request to create new certificate.</p>

<p>He can just import the certificate.p12 file form keychain access. </p>
","550","<iphone><ios><certificate><private-key><ios-provisioning>","0","0","4","2013-02-13 06:29:24","12857938","1","","","","","2012-10-12 11:13:05",""
"22444729","Export openssl key to file","<p>I generated a private key using commend:</p>

<pre><code>openssl genrsa -out privKey.pem
</code></pre>

<p>Now I want to export this key to file with extension .p12, so I used commend:</p>

<pre><code>openssl pkcs12 -export -inkey privKey.pem -out key.p12 -name ""MyPrivKey""
</code></pre>

<p>but when I try to run this commend via commend line, I have no results (it's running all time and doesn't stop), and when I open the file .p12 I have message: </p>

<pre><code>Could not display 'key.p12'
Reason: Unrecognized or unsupported data.
</code></pre>

<p>Can someone explain me, what I am doing wrong?</p>
","<p>You need a certificate as well as your private key to convert it to PKCS#12. See the manual: <a href=""https://www.openssl.org/docs/apps/pkcs12.html#FILE_CREATION_OPTIONS"" rel=""nofollow"">https://www.openssl.org/docs/apps/pkcs12.html#FILE_CREATION_OPTIONS</a></p>
","550","<openssl><rsa><private-key><pkcs#12>","0","0","2","2014-03-17 00:36:33","22444812","0","","","","","2014-03-16 23:51:19",""
"22444729","Export openssl key to file","<p>I generated a private key using commend:</p>

<pre><code>openssl genrsa -out privKey.pem
</code></pre>

<p>Now I want to export this key to file with extension .p12, so I used commend:</p>

<pre><code>openssl pkcs12 -export -inkey privKey.pem -out key.p12 -name ""MyPrivKey""
</code></pre>

<p>but when I try to run this commend via commend line, I have no results (it's running all time and doesn't stop), and when I open the file .p12 I have message: </p>

<pre><code>Could not display 'key.p12'
Reason: Unrecognized or unsupported data.
</code></pre>

<p>Can someone explain me, what I am doing wrong?</p>
","<p>You need to generate an crt file too.</p>

<pre><code>openssl req -x509 -nodes -newkey rsa:2048 -days 1825 -out cert.crt -keyout key.key
</code></pre>

<p>then</p>

<pre><code>openssl pkcs12 -export -inkey key.key -in cert.crt -out export.p12
</code></pre>

<p>if you have a CA file will be</p>

<pre><code>openssl pkcs12 -export -inkey key.key -in cert.crt -certfile ca.crt -out export.p12
</code></pre>
","550","<openssl><rsa><private-key><pkcs#12>","0","1","2","2014-03-17 00:36:33","22444812","0","","","","","2014-03-16 23:51:19",""
"16945921","Cross Platform Asymmetric Encryption and Decryption","<p>I have created a self-signed certificate in c#, with a private key created with a <code>RSACryptoServiceProvider</code>, 1024 bytes.</p>

<p>I have encrypted a byte array with the public key.</p>

<p>I have then imported the certificate in an Android device.</p>

<p>I try to decrypt my byte array in Android using my certificate private key. My code in Android:</p>

<pre><code>{
    Cipher cipher = Cipher.getInstance(""RSA"");
    cipher.init(Cipher.DECRYPT_MODE, privateKey);
    byte[] decryptedBytes = cipher.doFinal(encryptedByte);
}
</code></pre>

<p>On the last line I get this error: <code>""java.lang.IllegalStateException""</code>.</p>

<p>Here are the exception details:</p>

<pre><code>Java.lang.NullPointerException java.math.BigInteger.remainder(BigInteger.java:919) com.android.org.bouncycastle.crypto.engines.RSACoreEngine.processBlock(RSACoreEn‌​gine.java:181)
com.android.org.bouncycastle.crypto.engines.RSABlindedEngine.processBlock(RSABli‌​ndedEngine.java:109)
com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi.engineDoFi‌​nal(CipherSpi.java:472)
javax.crypto.Cipher.doFinal(Cipher.java:1111)
all4r.and.dc.Document.decrypt(Document.java:65)
all4r.and.dc.Decrypt$3$1.onSelection(Decrypt.java:101)
all4r.and.utils.Certificate$1.alias(Certificate.java:42)
android.security.KeyChain$AliasResponse.alias(KeyChain.java:284)
android.security.IKeyChainAliasCallback$Stub.onTransact(IKeyChainAliasCallback.j‌​ava:55)
android.os.Binder.execTransact(Binder.java:351)
dalvik.system.NativeStart.run(Native Method)
</code></pre>

<p>Any idea on what the cause of the error is? I've been searching for hours, but haven't found the problem yet.</p>
","","549","<c#><android><private-key><encryption-asymmetric>","1","","0","2013-06-06 11:40:02","","5","6","2263584","","2013-06-06 11:40:02","2013-06-05 17:10:01",""
"56287009","How to export Certificate and private key as a single file using java code?","<p>My requirement is to combine a certificate and private key and then, using PEMwriter, I need to export the file.</p>

<p>I used bouncycastle to generate private key and csr. Then, I submitted the CSR to CA and got the certificate. 
THe following code is for generating keypair</p>

<pre><code>KeyPair idPair = KeyPairGenerator.getInstance(""RSA"").genKeyPair();
PublicKey publicKey = idPair.getPublic();
PrivateKey privkey = idPair.getPrivate();
</code></pre>

<p>THe following code is for receiving the certificate and exporting it to .cer file.</p>

<pre><code>CertStore store = response.getCertStore();
            Collection&lt;? extends Certificate&gt; certs = store
                    .getCertificates(null);
            Certificate[] chain = new Certificate[certs.size()];

            int i = 0;
            for (Certificate certificate : certs) {
                chain[i++] = certificate;
            }

            FileOutputStream os = new FileOutputStream(""cert.cer"");
            os.write(""-----BEGIN CERTIFICATE-----\n"".getBytes(""US-ASCII""));
            os.write(Base64.encodeBase64(chain[0].getEncoded(), true));
            os.write(""-----END CERTIFICATE-----\n"".getBytes(""US-ASCII""));
            os.close();
</code></pre>

<p>Now, my goal is when I open the exported file, I must be prompted to input password to install/view the certificate. I'm really confused about this part. Previously I added password to keystore like the following</p>

<pre><code>KeyStore keyStore = KeyStore.getInstance(""PKCS12"", ""BC"");
        keyStore.load(null, null);

        keyStore.setKeyEntry(""mykey"", (Key) keyPair.getPrivate(), ""Password1!"".toCharArray(), certz);

        ByteArrayOutputStream bout = new ByteArrayOutputStream();
        keyStore.store(bout, ""Password1!"".toCharArray()); // this is the password to open the .p12

        byte[] keystore = bout.toByteArray();
        bout.close();
</code></pre>

<p>But, now, I need to protect the certificate with password. Is this even possible? If so, what will be the file extension? And please guide me in the coding part (PemWriter).
Thanks</p>
","<blockquote>
  <p>THe following code is for receiving the certificate and exporting it to .cer file.</p>
</blockquote>

<pre><code>        CertStore store = response.getCertStore();
        Collection&lt;? extends Certificate&gt; certs = store
                .getCertificates(null);
        Certificate[] chain = new Certificate[certs.size()];
        int i = 0;
        for (Certificate certificate : certs) {
            chain[i++] = certificate;
        }
</code></pre>

<p>Asides: you don't need that loop to convert a <code>Collection</code> to an array, just one call <code>.toArray (new T[optionally_correct_size])</code> will do it. On the other hand, since you're only using the first element you don't need an array at all, just <code>Collection&lt;T&gt;.iterator().next()</code>. </p>

<p>More substantively and on the third hand, many -- but definitely not all -- operations done with the privatekey also need the full cert chain, not just the leaf/end-entity cert, to work correctly. For example some signers can compute a signature without the chain, but in some cases or circumstances that signature cannot be verified and thus will be rejected by whatever receives it. Since you give no clue how, by what and for what your exported file(s) will be used, it is impossible to give any advice on this. And if the full chain <em>is</em> needed, it also varies whether you can just use a sequence of individual/separate PEM certs or need something else. </p>

<p>I don't know what <code>Base64</code> encoder you are using; that signature does not match the BouncyCastle one. I hope it generates line breaks correctly. PEM format is NOT merely BEGIN-line, base64, END-line; it is BEGIN-line, base64 <em>with line breaks</em>, END-line. <em>Some</em> software will work, <em>sometimes</em>, even without the line breaks, but some software, sometimes, will fail. See <a href=""https://tools.ietf.org/html/rfc7468#page-5"" rel=""nofollow noreferrer"">RFC 7468 sec 2 near the end</a>. </p>

<blockquote>
  <p>Now, my goal is when I open the exported file, I must be prompted to input password to install/view the certificate. ... But, now, I need to protect the certificate with password. Is this even possible? </p>
</blockquote>

<p>You need to distinguish between the privatekey and the certificate(s). Although related in an important way, these are different things, and the privatekey is designed to be private/secret while the certificate is designed to be public. In particular, the PEM format certificate is not encrypted, so anyone can view it and use it for publickey operations (encrypt or verify) and otherwise do what they like with it.</p>

<p>But to perform a privatekey operation (decrypt or sign) you need the privatekey -- usually <em>linked to</em> a cert or chain as above -- and the privatekey <em>can</em> be password-encrypted in (at least) <strong>two different</strong> ways in customary PEM formats, thus requiring the password to 'open' it. OpenSSL back in the 1990s de-facto defined a PEM encryption scheme which can be used for its several <strong>'legacy' or 'traditional'</strong> privatekey formats, which are different for each algorithm, and indicated in the PEM type in the BEGIN-line, thus <code>-----BEGIN RSA PRIVATE KEY-----</code>, <code>-----BEGIN DSA PRIVATE KEY-----</code>, <code>-----BEGIN EC PRIVATE KEY-----</code>, etc. <strong>Later <a href=""https://tools.ietf.org/html/rfc5208"" rel=""nofollow noreferrer"">PKCS8</a></strong> defined a generic privatekey format for <em>all</em> algorithms, used by much other software including Java crypto (JCA), including an encrypted variant designated by <code>-----BEGIN ENCRYPTED PRIVATE KEY-----</code> (note no algorithm name). The PKCS8 version (only) has been made official by <a href=""https://tools.ietf.org/html/rfc7468#section-11"" rel=""nofollow noreferrer"">RFC7468 sec 11</a>. (There are also other and quite different PEM-like formats for privatekeys used by OpenSSH, PuTTY, and PGP, but none of them use X.509-type certificates. Although GnuPG now implements both PGP and S/MIME, and does use X.509/PKIX <em>for S/MIME</em>. There are numerous existing Qs on SO, and some on security.SX or crypto.SX, if you are interested in these.) <code>bcpkix</code> implements the OpenSSL-legacy forms <em>and</em> the PKCS8 form(s). (Java alone without BouncyCastle implements PKCS8 <em>unencrypted</em>.) </p>

<p>Similarly, 'legacy' Java keystores (JKS and JCEKS) password-encrypt the privatekey(s), but not the certificate(s). The PKCS12 standard is actually very flexible (and complicated), but <em>as usually implemented</em> (including your BC-keystore example) uses strong password encryption for the privatekey(s), and a very weak easily breakable password encryption for the certificate(s); I've never been quite sure why, because this is less convenient without providing any security benefit.</p>

<blockquote>
  <p>If so, what will be the file extension? </p>
</blockquote>

<p>That's mostly up to you, or whoever (if anyone) these files are for. No standard requires a file extension to match the file contents or vice versa, although people usually do so because it is much more convenient. Officially <code>.cer</code> is supposed to be a <em>DER</em> certificate, and <a href=""https://tools.ietf.org/html/rfc7468#section-5.3"" rel=""nofollow noreferrer"">RFC7468 sec 5.3</a> <em>recommends</em> using <code>.crt</code> for a PEM certificate. If you write the key to a separate file, it seems to be fairly common to use <code>.key</code> or <code>.pem</code>, but I know of no standard (and certainly no IANA registration) specifying this. (RFC5958 registers .p8 for what is actually <em>DER</em> PKCS8 unencrypted and RFC8351 registers DER PKCS8 encrypted without specifying <em>any</em> extension.) If you write the key and cert(s) to the <em>same</em> file, which PEM format supports but not all programs do, I haven't even seen common practice other than <code>.pem</code>. </p>

<p>So to finally get to your question :-) 
Given you have the BC provider in your provider list (and the classpath), bcpkix in the classpath, and a <code>PrivateKey</code> object in <code>kv</code>:</p>

<pre><code>import org.bouncycastle.openssl.PKCS8Generator;
import org.bouncycastle.openssl.jcajce.JcaPEMWriter;
import org.bouncycastle.openssl.jcajce.JcaPKCS8Generator;
import org.bouncycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder;
import org.bouncycastle.openssl.jcajce.JcePEMEncryptorBuilder;
import org.bouncycastle.util.io.pem.PemWriter;

        // for the OpenSSL legacy form
        JcaPEMWriter x = new JcaPEMWriter (new OutputStreamWriter(System.out)); // or whatever 
        x.writeObject(kv, new JcePEMEncryptorBuilder(""DES-EDE3-CBC"").build(""password"".toCharArray()) );
        // can substitute AES-{128,192,256}-CBC if desired, for more see source
        x.close(); // or flush to keep underlying writer/stream

        // for the PKCS8 form
        PemWriter y = new PemWriter (new OutputStreamWriter(System.out)); // or whatever 
        y.writeObject(new JcaPKCS8Generator (kv, new JceOpenSSLPKCS8EncryptorBuilder(
                PKCS8Generator.DES3_CBC).setPasssword(""password"".toCharArray()).build() ) );
        // or AES_{128,192,256}_CBC, others will use PBES1 which is deprecated
        y.close(); // or flush to keep underlying writer/stream
</code></pre>
","547","<java><certificate><private-key><pem>","1","3","2","2019-05-27 06:42:57","56292488","0","1","","","","2019-05-24 06:31:22",""
"56287009","How to export Certificate and private key as a single file using java code?","<p>My requirement is to combine a certificate and private key and then, using PEMwriter, I need to export the file.</p>

<p>I used bouncycastle to generate private key and csr. Then, I submitted the CSR to CA and got the certificate. 
THe following code is for generating keypair</p>

<pre><code>KeyPair idPair = KeyPairGenerator.getInstance(""RSA"").genKeyPair();
PublicKey publicKey = idPair.getPublic();
PrivateKey privkey = idPair.getPrivate();
</code></pre>

<p>THe following code is for receiving the certificate and exporting it to .cer file.</p>

<pre><code>CertStore store = response.getCertStore();
            Collection&lt;? extends Certificate&gt; certs = store
                    .getCertificates(null);
            Certificate[] chain = new Certificate[certs.size()];

            int i = 0;
            for (Certificate certificate : certs) {
                chain[i++] = certificate;
            }

            FileOutputStream os = new FileOutputStream(""cert.cer"");
            os.write(""-----BEGIN CERTIFICATE-----\n"".getBytes(""US-ASCII""));
            os.write(Base64.encodeBase64(chain[0].getEncoded(), true));
            os.write(""-----END CERTIFICATE-----\n"".getBytes(""US-ASCII""));
            os.close();
</code></pre>

<p>Now, my goal is when I open the exported file, I must be prompted to input password to install/view the certificate. I'm really confused about this part. Previously I added password to keystore like the following</p>

<pre><code>KeyStore keyStore = KeyStore.getInstance(""PKCS12"", ""BC"");
        keyStore.load(null, null);

        keyStore.setKeyEntry(""mykey"", (Key) keyPair.getPrivate(), ""Password1!"".toCharArray(), certz);

        ByteArrayOutputStream bout = new ByteArrayOutputStream();
        keyStore.store(bout, ""Password1!"".toCharArray()); // this is the password to open the .p12

        byte[] keystore = bout.toByteArray();
        bout.close();
</code></pre>

<p>But, now, I need to protect the certificate with password. Is this even possible? If so, what will be the file extension? And please guide me in the coding part (PemWriter).
Thanks</p>
","<p>As mentioned above for normal use you don't need to protect certificates with passwords. But if you want to store some certificates in a safe place, you can do it in a password-protected keystore file (only java.security code, no PemWriter necessary). </p>

<pre><code>            KeyStore ks = KeyStore.getInstance(""PKCS12"");
            ks.load(null, null);

            Certificate cert = getX509Cert(); // load certificate
            ks.setCertificateEntry(""myCertAlias"", cert);

            FileOutputStream fos = null;
            try {
                fos = new FileOutputStream(PATH + ""newKeyStore.p12"");
                char[] password = PASSWORD_.toCharArray();
                ks.store(fos, password);
            } finally {
                if (fos != null) {
                    fos.close();
                }
            }
</code></pre>
","547","<java><certificate><private-key><pem>","1","1","2","2019-05-27 06:42:57","56292488","0","1","","","","2019-05-24 06:31:22",""
"48634822","Cannot Export PrivateKey Before Import Using RSACng and RsaParameter","<p>the next unit test export a privatekey and save it in bytes arrays using the rsa instance then encrypt the ""hi"" message, all is fine here, but the problem occur when It make rsa2 instance and import the previous privatekey in RSAParameter, then message can be decrypt after import privatekey, but It throw exception when you try to export privatekey of rsa2.</p>

<p>Please could you tell me why It can't extract Imported Private key</p>

<pre><code>    [TestMethod]
    public void TestRsa()
    {
        var rsa = new RSACng(2048);
        ///Export private key to arrays
        var rsaParam = rsa.ExportParameters(true);
        byte[] yQ = new byte[rsaParam.Q.Length];
        byte[] yP = new byte[rsaParam.P.Length];

        byte[] yInverseQ = new byte[rsaParam.InverseQ.Length];
        byte[] yDP = new byte[rsaParam.DP.Length];
        byte[] yDQ = new byte[rsaParam.DQ.Length];

        //Public Part Key
        byte[] yPm = new byte[rsaParam.Modulus.Length];
        byte[] yPe = new byte[rsaParam.Exponent.Length];
        byte[] yD = new byte[rsaParam.D.Length];

        rsaParam.Q.CopyTo(yQ, 0);
        rsaParam.P.CopyTo(yP, 0);
        rsaParam.InverseQ.CopyTo(yInverseQ, 0);
        rsaParam.DP.CopyTo(yDP, 0);
        rsaParam.DQ.CopyTo(yDQ, 0);
        rsaParam.Modulus.CopyTo(yPm, 0);
        rsaParam.Exponent.CopyTo(yPe, 0);
        rsaParam.D.CopyTo(yD, 0);

        var encrypt = rsa.Encrypt(Encoding.UTF8.GetBytes(""hi""), RSAEncryptionPadding.Pkcs1);

        ///Importing private key in another instance of RSACng
        var rsa2 = new RSACng(2048);
        RSAParameters rsaParameters = new RSAParameters()
        {
            Q = yQ,
            P = yP,
            InverseQ = yInverseQ,
            DP = yDP,
            D = yD,
            DQ = yDQ,
            Exponent = yPe,
            Modulus = yPm
        };
        rsa2.ImportParameters(rsaParameters);
        var decryptData = rsa2.Decrypt(encrypt, RSAEncryptionPadding.Pkcs1);
        Assert.AreEqual(Encoding.UTF8.GetString(decryptData), ""hi"");

        rsa2.ExportParameters(true);///How can I prevent exception here
  }
</code></pre>

<p>Thanks all!</p>
","<p>In .NET Core the RSACng object should be in an exportable state when you use ImportParameters, and it should be the case in .NET Framework 4.7.2 as well.</p>

<p>You can put into an exportable state as long as you change the export policy before using the key (by trying to call Export or doing a sign/decrypt/encrypt/verify operation).  For example, this works:</p>

<pre><code>using (RSA rsa1 = new RSACng(2048))
using (RSACng rsa2 = new RSACng())
{
    rsa2.ImportParameters(rsa1.ExportParameters(true));

    rsa2.Key.SetProperty(
        new CngProperty(
            ""Export Policy"",
            BitConverter.GetBytes((int)CngExportPolicies.AllowPlaintextExport),
            CngPropertyOptions.Persist));

    RSAParameters params2 = rsa2.ExportParameters(true);
    Console.WriteLine(params2.D.Length);
}
</code></pre>

<p>Using the <code>NCRYPT_EXPORT_POLICY_PROPERTY</code> described at <a href=""https://msdn.microsoft.com/en-us/library/windows/desktop/aa376242(v=vs.85).aspx"" rel=""nofollow noreferrer"">https://msdn.microsoft.com/en-us/library/windows/desktop/aa376242(v=vs.85).aspx</a>.</p>
","547","<c#><rsa><private-key><.net-4.6.1>","0","1","1","2018-02-06 16:13:28","48647314","4","1","","","","2018-02-06 03:03:21",""
"47845315","How to encrypted data with RSA private key in php?","<p>Currently am working in financial based application using php.So i integrated with third party api to fetch user data.</p>

<p>Based on the integration ,they are authenticating with signature and payload.</p>

<p>As per document , i did everything right for my point of view,but i got response like</p>

<blockquote>
  <p>
  <code>SignatureDoesNotMatch</code>
  
  The request signature we calculated does not match the signature you provided.
  
  </p>
</blockquote>

<p>As per document:</p>

<p><strong>Calculating the Signature:</strong>
Requests, where necessary, must be signed by the sender. The signature of a request is calculated as follows:</p>

<ol>
<li>Condense the payload XML into a single line as follows:
2.Remove the XML declaration
3.Remove all comments
4.Remove all line breaks
5.Normalise spaces</li>
</ol>

<p>6)Generate an SHA1 digest of the condensed payload .
7)Base16 encode the generated SHA1 digest.
8)Encrypt the encoded digest using a Perfios-provided RSA Private Key .
9)Base16 encode the encrypted digest.</p>

<p>Here my script:</p>

<pre><code>$condense_payload ='&lt;payload&gt;&lt;vendorId&gt;test&lt;/vendorId&gt;&lt;txnId&gt;dummyApplicationId&lt;/txnId&gt;&lt;emailId&gt;'.$emailid.'&lt;/emailId&gt;&lt;destination&gt;netbankingFetch&lt;/destination&gt;&lt;returnUrl&gt;https://www.google.com&lt;/returnUrl&gt;&lt;/payload&gt;';


$condense_payload_updated = trim(preg_replace('/(?&lt;=\&gt;)(\r?\n)|(\r?\n)(?=\&lt;\/)/', $condense_payload));


$payload ='
&lt;payload&gt;
&lt;vendorId&gt;test&lt;/vendorId&gt;
&lt;txnId&gt;dummyApplicationId&lt;/txnId&gt;
&lt;emailId&gt;'.$emailid.'&lt;/emailId&gt;
&lt;destination&gt;netbankingFetch&lt;/destination&gt;
&lt;returnUrl&gt;https://www.google.com&lt;/returnUrl&gt;
&lt;/payload&gt;';

/* Convert to Sha1 */
$sha1_convert = sha1($condense_payload_updated);

/* Convert to Hex (base16) */
$first_base16_convert=bin2hex($sha1_convert);


$fp =  fopen(""private_key"", ""r"");

$private_key_string = fread($fp, 8192);

fclose($fp);

/* Convert to private key */
$private_key = openssl_get_privatekey($private_key_string);

$encrypted_private="""";



/* Encrypt digest using key */

openssl_private_encrypt($first_base16_convert, $encrypted_private, $private_key, OPENSSL_PKCS1_PADDING);
/* Convert to Hex (base16) */
$signature=bin2hex($encrypted_private);
</code></pre>

<p>so here generated payload and signature and send the url with post method:</p>

<pre><code>&lt;html&gt;
    &lt;body onload='document.autoform.submit();'&gt;
        &lt;form name='autoform' method='post' action='https://demo.perfios.com/KuberaVault/insights/start'&gt;
            &lt;input type='hidden' name='payload' value='&lt;?php echo $payload; ?&gt;' /&gt;
            &lt;input type='hidden' name='signature' value='&lt;?php echo $signature; ?&gt;'/&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>So finally i got:</p>

<blockquote>
  <p> <code>SignatureDoesNotMatch</code>  The request
  signature we calculated does not match the signature you provided.
   </p>
</blockquote>

<p>Api support team provided java sample code , i complied and run the java , its working.</p>

<p>here java code:</p>

<pre><code>   package javaapplication1;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringReader;
import java.security.Key;
import java.security.KeyPair;
import java.security.MessageDigest;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.Security;

import javax.crypto.Cipher;

import org.bouncycastle.openssl.PEMReader;
import org.bouncycastle.util.encoders.Hex;

public class JavaApplication1 {
    static String email = ""test@hello.com"";
    static String server = ""demo.test.com"";
    public static String vendor = ""test"";
    public static String returnURL = ""https://www.google.com"";


    static String privateKey = ""-----BEGIN RSA PRIVATE KEY-----\n"" + 
            ""MIIEpQIBAAKCAQEAx76oeNWYPkAbbSPyvJdfgfdgcPkQvAMvIHCPgY9yNdN/qsYMHytyit\n"" + 
            ""xdO0aTatgfS/ig4zmqKFVpC9o2YMyQ7E1FYNcl/ev++r4nV+qVXA1OKcsSv4Kbj/\n"" + 
            fgdfg""iNwxGmnhBsRDswY/dEZZDN9RisRpo9NRSOskGRv+nLEA2dLgj0/f9SSzykz3cxAP\n"" + 
            ""bq6bV0unie5C8r6RALj+hTLU7B7QF88SkDsFx0/TYQe4H9QJtFMWJtOnhumY5Ku6\n"" + 
            ""CL4OdZrtz71y4ji8IxQxv2nyqdfgfd0JwYQ4rG84uzJQeRQf2RaJLhnSdfQnonDkP7L1z\n"" + 
            ""NSizzi8VgHI+GVIo9FrLj7DVo+fFzMucbsvvNQIDAQABAoIBAQCMVKOR+SYzneBm\n"" + 
            ""5hmUa2CxW5sVb7qHj54iiwLj4EYY2EnIaljjol+eh56Qrb2fpWiV3FZnQdspn/md\n"" + 
            ""i7W3JBngYABjwmN0/20UVL3cErVZN/XqgiFtKp2gfhfgI3BgPI/YYIWyVKRNJGt/z6Rf6\n"" + 
            ""0+zImQLMbUGNHkHlxuSjas+CL93sYrXo52TXqZgkfghgf40gEkQVLE+SLrtXTFiOOlX/s\n"" + 
            ""WWXyeUY14hl+oVQLmEO6UZd532bxAE0VlIV6Vr2pE3gJqEyaAoGgkT3inxvRPiek\n"" + 
            ""swRm9OONWZD9frKXYqabJTsd87623Czg5h2WGimsN4fZ+LfyBXul24KKVeMDELHn\n"" + 
            ""GvdRm95lAoGBAPMQRrb3iB8oYJc+4KwbtWR/vTQW++G69CeyIfD7WM0Ix3Gy0wod\n"" + 
            ""FwIeKSkYsZ/R5n+9Ucx/RVFv7X86YzYajhH3hl+8/q4c+L1yAGS5hW3m21gIViDt\n"" + 
            ""k1h3gKLI5o4EKGhCRX1teSoZ+n4G7KlYbJas8h5MX3u81GhKRmiVItr/AoGBANJg\n"" + 
            ""KoIhxKsyNRccULosYZBGc3vpkFtpHeZ5w0qxbXaGveUIKvqzUqonGy0o3yqVNRrH\n"" + 
            ""JJREHss+5/HqeuauawKUYLWapCqmVF6IlDc1PxTw+BLDzgzMlX2o43951iTMJXkd\n"" + 
            ""80MOujsnyTdZq7wAzR7KNR3U/OjDFlcORxhCGrnLAoGBAONZcgtp9NTP+6j8k0Ho\n"" + 
            ""mP5rzRmP9gHp0L3gjIbPUvxVHdhnn6ZyFzdP5sgd5ObMeoE5H+3bjYbi3o6Gmo3c\n"" + 
            ""wM5lbDbYnI9XYgIxQ9TzAq8NpFTvV0Btd8jj3lpk9+IWWYVLl5v+bbrHmdmPuIWd\n"" + 
            ""w9Qb6EwWu6kNss/pyXnBJV0ZAoGAPj+2VEsppn50tyHpwSzgsZAnG8NAs8umzUu6\n"" + 
            ""PZ/ChA/aoKqKDSSCkVaA9Bvj7PW5gPLsH/MIKZuzhiGbvCZgA6Nj+liHuxb8X/yJ\n"" + 
            ""3swink+vF95YWfEvSr9ukYm7k6fUbsIt+OmisV5Ua8xcxIR4LWQn02vyae1P7vKK\n"" + 
            ""luL4hYECgYEAmSiiHa4bSLF8MT/IbL2YIrxK4yatABvVWZLkAV7hiFJWeEhLCmCd\n"" + 
            ""OKcX8QSq9lT6TbS6NCEfHfCR0FFrny4nZMT3YnyDkgrYOiHhZL/YVfr3Izr62Gcy\n"" + 
            ""PizNJH/JWoNDonAuFi+eQjgBRNfd894pMeCT4tMu2nE1SOEafzykzPA=\n"" + 
            ""-----END RSA PRIVATE KEY-----"";

    static final String DIGEST_ALGO = ""SHA-1"";
    static final String ENCRYPTION_ALGO = ""RSA/ECB/PKCS1Padding"";
    static String applicationId = ""dummyApplicationId"";
    static String perfiosTransactionId = ""PLEASE UPDATE ME"";
    static String format = ""xml"";

public static String payloadStatement = ""&lt;payload&gt;\n""
            + ""&lt;vendorId&gt;""
            + vendor
            + ""&lt;/vendorId&gt;\n""
            + ""&lt;txnId&gt;""
            + applicationId
            + ""&lt;/txnId&gt;\n""
            + ""&lt;yearMonthFrom&gt;2015-06&lt;/yearMonthFrom&gt;\n"" + 
            ""&lt;yearMonthTo&gt;2016-02&lt;/yearMonthTo&gt;""
            + ""&lt;emailId&gt;#email#&lt;/emailId&gt;\n&lt;destination&gt;statement&lt;/destination&gt;\n""
            + ""&lt;returnUrl&gt;"" + returnURL + ""&lt;/returnUrl&gt;\n"" + ""&lt;/payload&gt;"";









    public static void main(String[] args) throws Exception {
        Security.addProvider(new org.bouncycastle.jce.provider.BouncyCastleProvider());
        if (args.length &gt; 1 &amp;&amp; args[0] != null) {
            if (""encrypt"".equals(args[0])) {
                if (args[1] != null) {
                    String encrypt = encrypt(args[1], ENCRYPTION_ALGO,
                            buildPublicKey(privateKey));
                    System.out.print(encrypt);
                } else {
                    throw new Exception(""Wrong number of arguments provided."");
                }
            } else if (""signature"".equals(args[0])) {
                if (args[1] != null) {
                    String signature = getSignature(ENCRYPTION_ALGO,
                            DIGEST_ALGO, buildPrivateKey(privateKey), args[1]);
                    System.out.print(signature);
                } else {
                    throw new Exception(""Wrong number of arguments provided."");
                }
            }
        } else {
            String argPerfiosTxnId = System.getProperty(""perfiosTransactionId"");
            if (argPerfiosTxnId != null)
                perfiosTransactionId = argPerfiosTxnId;

            String argTxnId = System.getProperty(""applicationId"");
            if (argTxnId != null)
                applicationId = argTxnId;

            System.out
                    .println(""This program helps you try out Perfios APIs to initiate and track Perfios online transactions. ""
                            + ""\nIt generates HTML files that can be opened in a browser to initiate or track the transaction."");

            /** Create a folder for customer */
            File folder = new File(vendor);
            String message = ""\n\nnetbanking and statement APIs are the APIs to start the transaction. \n""
                    + ""Only integration supported to start the transaction is through autopost form as in the netbanking and statement htmls.\n""
                    + ""All other APIs are xml over HTTP and do not need browser to be present.\n""
                    + ""You can directly invoke those APIs using other mechanisms.\n\n""
                    + ""Trying this program:\n""
                    + ""\t(1)First run the program and it will generate the netbanking and statement upload files.\n""
                    + ""\t(2)Depending upon whether you have requested these features to be available, you should be able to start the transactions.\n""
                    + ""\t(3)netbanking and statment HTML start the perfios transaction using browser to browser integration.\n""
                    + ""\t\t(3.1)To start netbanking transaction, open netbanking_* file in your browser..\n""
                    + ""\t\t(3.2)To start statement upload transaction, open statement_* file in your browser..\n""
                    + ""\t(4)You can then check the status of all transactions using txnstatus API.\n""
                    + ""\t\t(4.1)To check the status of transaction, open txnstatus_* file in your browser. \n""
                    + ""\t\t\tThis API could also be accessed without a browser. Without autoform load request\n""
                    + ""\t(5)To retrieve a report, you will need to re-run the program. Change the value of perfiosTransactionId variable in your program.\n""
                    + ""\t\t Compile and run the java program. open retrieve_* file in your browser. This API could also be accessed without a browser.\n""
                    + ""\t\t Without autoform load request\n""
                    + ""\t(5)To delete the transaction related artifacts, you will need to re-run the program. \n""
                    + ""\t\tChange the value of perfiosTransactionId variable in your program. Compile and run the java program. open delete_* \n""
                    + ""\t\tfile in your browser. This API could also be accessed without a browser. Without autoform load request\n""
                    + ""You can pass applicationId and perfiosTransactionId through command line by providing system properties too. ""
                    + ""For e.g. java -DperfiosTransactionId=HDJDJ com.perfios.sample.OnlineSampleCapitalInfusionIndia\n""
                    + ""\t(6)For more details please refer the API guide.\n"";

            System.out.println(message);

            if (!folder.exists())
                folder.mkdir();

            System.out
                    .println(""Your files will be created in the following location: ""
                            + folder.getAbsolutePath());

            /** Create files for the customer */
            String  myHTML = genericCreateHTML(JavaApplication1.payloadStatement);
            createFile(""statement"", myHTML);








        }
    }

    private static void createFile(String classification, String myHTML) {
        String filename = vendor + ""/"" + classification + ""_"" + server
                + "".html"";

        try {
            PrintWriter out = new PrintWriter(filename);
            out.print(myHTML);
            out.close();
            System.out.println(""Successfully created file "" + filename);
        } catch (Exception e) {
            System.out.println(""Error while creating file "" + filename);
            e.printStackTrace();
        }
    }

    private static String genericCreateHTML(String payload) {
        return genericCreateHTML(payload, null);
    }

    private static String genericCreateHTML(String payload, String operation) {

        String emailEncrypted = encrypt(email, ENCRYPTION_ALGO,
                buildPublicKey(privateKey));
        payload = payload.replaceAll(""\n"", """");
        payload = payload.replaceAll(""#email#"", emailEncrypted);

        String signature = getSignature(ENCRYPTION_ALGO, DIGEST_ALGO,
                buildPrivateKey(privateKey), payload);
        if (operation == null)
            operation = ""start"";
        String myHTML = ""&lt;html&gt;\n""
                + "" &lt;body onload='document.autoform.submit();'&gt;\n""
                + ""     &lt;form name='autoform' method='post' action='https://""
                + server + ""/KuberaVault/insights/"" + operation + ""'&gt;\n""
                + ""         &lt;input type='hidden' name='payload' value='"" + payload
                + ""'&gt;\n"" + ""            &lt;input type='hidden' name='signature' value='""
                + signature + ""'&gt;\n"" + ""        &lt;/form&gt;\n"" + ""  &lt;/body&gt;\n""
                + ""&lt;/html&gt;\n"";
        return myHTML;
    }

    public static String getSignature(String encryptAlgo, String digestAlgo,
            Key k, String xml) {
        String dig = makeDigest(xml, digestAlgo);
        return encrypt(dig, encryptAlgo, k);
    }

    private static PrivateKey buildPrivateKey(String privateKeySerialized) {
        StringReader reader = new StringReader(privateKeySerialized);
        PrivateKey pKey = null;
        try {
            PEMReader pemReader = new PEMReader(reader);
            KeyPair keyPair = (KeyPair) pemReader.readObject();
            pKey = keyPair.getPrivate();
            pemReader.close();
        } catch (IOException i) {
            i.printStackTrace();
        }
        return pKey;
    }

    private static PublicKey buildPublicKey(String privateKeySerialized) {
        StringReader reader = new StringReader(privateKeySerialized);
        PublicKey pKey = null;
        try {
            PEMReader pemReader = new PEMReader(reader);
            KeyPair keyPair = (KeyPair) pemReader.readObject();
            pKey = keyPair.getPublic();
            pemReader.close();
        } catch (IOException i) {
            i.printStackTrace();
        }
        return pKey;
    }

    public static String makeDigest(String payload, String digestAlgo) {
        String strDigest = """";
        try {
            MessageDigest md = MessageDigest.getInstance(digestAlgo);
            md.update(payload.getBytes(""UTF-8""));
            byte[] digest = md.digest();
            byte[] encoded = Hex.encode(digest);
            strDigest = new String(encoded);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return strDigest;
    }

    public static String encrypt(String raw, String encryptAlgo, Key k) {



        String strEncrypted = """";
        try {
            Cipher cipher = Cipher.getInstance(encryptAlgo);
            cipher.init(Cipher.ENCRYPT_MODE, k);
            byte[] encrypted = cipher.doFinal(raw.getBytes(""UTF-8""));
            byte[] encoded = Hex.encode(encrypted);
            strEncrypted = new String(encoded);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return strEncrypted;
    }

}
</code></pre>

<p>My point of view , I generated the signature and payload but i dont know where am wrong with my script.Can anyone guide me?</p>
","<p>It tried to fix some possible issues in your code. Maybe try something like this as a basis.</p>

<pre><code>&lt;?php

$email = ""FinmomentaSample@perfios.com"";
$server = ""demo.perfios.com"";
$vendor = ""finmomenta"";
$returnURL = ""https://www.google.com"";
$applicationId = ""dummyApplicationId"";
$perfiosTransactionId = ""PLEASE UPDATE ME"";
$format = ""xml"";

$privateKey = ""-----BEGIN RSA PRIVATE KEY-----\n"" .
    ""MIIEpQIBAAKCAQEAx76oeNWYPkAbbSPyvJcPkQvAMvIHCPgY9yNdN/qsYMHytyit\n"" .
    ""xdO0aTatgfS/ig4zmqKFVpC9o2YMyQ7E1FYNcl/ev++r4nV+qVXA1OKcsSv4Kbj/\n"" .
    ""iNwxGmnhBsRDswY/dEZZDN9RisRpo9NRSOskGRv+nLEA2dLgj0/f9SSzykz3cxAP\n"" .
    ""bq6bV0unie5C8r6RALj+hTLU7B7QF88SkDsFx0/TYQe4H9QJtFMWJtOnhumY5Ku6\n"" .
    ""CL4OdZrtz71y4ji8IxQxv2nyq0JwYQ4rG84uzJQeRQf2RaJLhnSdfQnonDkP7L1z\n"" .
    ""NSizzi8VgHI+GVIo9FrLj7DVo+fFzMucbsvvNQIDAQABAoIBAQCMVKOR+SYzneBm\n"" .
    ""5hmUa2CxW5sVb7qHj54iiwLj4EYY2EnIaljjol+eh56Qrb2fpWiV3FZnQdspn/md\n"" .
    ""i7W3JBngYABjwmN0/20UVL3cErVZN/XqgiFtKp2I3BgPI/YYIWyVKRNJGt/z6Rf6\n"" .
    ""0+zImQLMbUGNHkHlxuSjas+CL93sYrXo52TXqZgk40gEkQVLE+SLrtXTFiOOlX/s\n"" .
    ""WWXyeUY14hl+oVQLmEO6UZd532bxAE0VlIV6Vr2pE3gJqEyaAoGgkT3inxvRPiek\n"" .
    ""swRm9OONWZD9frKXYqabJTsd87623Czg5h2WGimsN4fZ+LfyBXul24KKVeMDELHn\n"" .
    ""GvdRm95lAoGBAPMQRrb3iB8oYJc+4KwbtWR/vTQW++G69CeyIfD7WM0Ix3Gy0wod\n"" .
    ""FwIeKSkYsZ/R5n+9Ucx/RVFv7X86YzYajhH3hl+8/q4c+L1yAGS5hW3m21gIViDt\n"" .
    ""k1h3gKLI5o4EKGhCRX1teSoZ+n4G7KlYbJas8h5MX3u81GhKRmiVItr/AoGBANJg\n"" .
    ""KoIhxKsyNRccULosYZBGc3vpkFtpHeZ5w0qxbXaGveUIKvqzUqonGy0o3yqVNRrH\n"" .
    ""JJREHss+5/HqeuauawKUYLWapCqmVF6IlDc1PxTw+BLDzgzMlX2o43951iTMJXkd\n"" .
    ""80MOujsnyTdZq7wAzR7KNR3U/OjDFlcORxhCGrnLAoGBAONZcgtp9NTP+6j8k0Ho\n"" .
    ""mP5rzRmP9gHp0L3gjIbPUvxVHdhnn6ZyFzdP5sgd5ObMeoE5H+3bjYbi3o6Gmo3c\n"" .
    ""wM5lbDbYnI9XYgIxQ9TzAq8NpFTvV0Btd8jj3lpk9+IWWYVLl5v+bbrHmdmPuIWd\n"" .
    ""w9Qb6EwWu6kNss/pyXnBJV0ZAoGAPj+2VEsppn50tyHpwSzgsZAnG8NAs8umzUu6\n"" .
    ""PZ/ChA/aoKqKDSSCkVaA9Bvj7PW5gPLsH/MIKZuzhiGbvCZgA6Nj+liHuxb8X/yJ\n"" .
    ""3swink+vF95YWfEvSr9ukYm7k6fUbsIt+OmisV5Ua8xcxIR4LWQn02vyae1P7vKK\n"" .
    ""luL4hYECgYEAmSiiHa4bSLF8MT/IbL2YIrxK4yatABvVWZLkAV7hiFJWeEhLCmCd\n"" .
    ""OKcX8QSq9lT6TbS6NCEfHfCR0FFrny4nZMT3YnyDkgrYOiHhZL/YVfr3Izr62Gcy\n"" .
    ""PizNJH/JWoNDonAuFi+eQjgBRNfd894pMeCT4tMu2nE1SOEafzykzPA=\n"" .
    ""-----END RSA PRIVATE KEY-----"";


$payloadStatement = ""&lt;payload&gt;\n"" .
    ""&lt;vendorId&gt;"" . $vendor . ""&lt;/vendorId&gt;\n"" .
    ""&lt;txnId&gt;"" . $applicationId . ""&lt;/txnId&gt;\n"" .
    ""&lt;yearMonthFrom&gt;2017-06&lt;/yearMonthFrom&gt;\n"" .
    ""&lt;yearMonthTo&gt;2017-12&lt;/yearMonthTo&gt;"" .
    ""&lt;emailId&gt;#email#&lt;/emailId&gt;\n&lt;destination&gt;statement&lt;/destination&gt;\n"" .
    ""&lt;returnUrl&gt;"" . $returnURL . ""&lt;/returnUrl&gt;\n"" .
    ""&lt;/payload&gt;"";


echo genericCreateHTML($payloadStatement, 'start', $email, $server, $privateKey);

function genericCreateHTML($payload, $operation, $email, $server, $privateKey)
{
    $email = encryptData($email, $privateKey);
    $payload = str_replace(""#email#"", $email, $payload);

    // Remove all line breaks
    $payload = str_replace(""\n"", """", $payload);

    $signature = getSignature($payload, $privateKey);

    $html = ""&lt;html&gt;\n"" . "" &lt;body onload='document.autoform.submit();'&gt;\n"" .
        ""     &lt;form name='autoform' method='post' action='https://"" . $server . ""/KuberaVault/insights/"" . $operation . ""'&gt;\n"" .
        ""         &lt;input type='hidden' name='payload' value='"" . $payload . ""'&gt;\n"" .
        ""            &lt;input type='hidden' name='signature' value='"" . $signature . ""'&gt;\n"" .
        ""        &lt;/form&gt;\n"" . ""  &lt;/body&gt;\n"" .
        ""&lt;/html&gt;\n"";

    return $html;
}

function getSignature($data, $privateKey)
{
    // Make digest
    $digest = sha1($data);

    // Encrypt
    return encryptData($digest, $privateKey);
}

function encryptData($raw, $privateKey)
{
    $privateKey = openssl_pkey_get_private($privateKey);

    if (!$privateKey) {
        throw new RuntimeException('Invalid private key or passphrase');
    }

    // Encrypt digest using the key
    $encrypted = """";
    openssl_private_encrypt($raw, $encrypted, $privateKey, OPENSSL_PKCS1_PADDING);

    // Convert to Hex (base16)
    $result = bin2hex($encrypted);

    return $result;
}
</code></pre>
","543","<php><encryption><rsa><signature><private-key>","0","1","1","2017-12-19 04:59:51","47847522","2","","7098213","","2017-12-19 04:59:51","2017-12-16 11:47:03",""
"46141265","How does the verification server recognize which public key to use in RSA?","<p><a href=""https://i.stack.imgur.com/B93DO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/B93DO.png"" alt=""enter image description here""></a></p>

<p>I am trying to implement a (simplified) RSA-like verification process in my (Java) application. 
The client sends a request (data + private key signature) and the server either rejects his request or processes it - depending on the signature validity. </p>

<p><strong>But I don't understand how the verification server knows which public key to use for signature decryption. Indeed, no public key - nor public key ID - seem to be sent to the verification server.</strong> </p>

<p>Does it actually test all authorized public keys ? Or is the public key stored from a previous communication exchange ?</p>
","<p>As the figure you attach with the question suggests, the client sends its certificate along with the signature, the certificate contains the public key, the server check for certificate validity and use it to check the signature.</p>
","542","<rsa><digital-signature><private-key><public-key><pki>","1","2","2","2017-09-10 18:23:19","","1","","6371459","","2017-09-10 18:08:35","2017-09-10 13:32:42",""
"46141265","How does the verification server recognize which public key to use in RSA?","<p><a href=""https://i.stack.imgur.com/B93DO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/B93DO.png"" alt=""enter image description here""></a></p>

<p>I am trying to implement a (simplified) RSA-like verification process in my (Java) application. 
The client sends a request (data + private key signature) and the server either rejects his request or processes it - depending on the signature validity. </p>

<p><strong>But I don't understand how the verification server knows which public key to use for signature decryption. Indeed, no public key - nor public key ID - seem to be sent to the verification server.</strong> </p>

<p>Does it actually test all authorized public keys ? Or is the public key stored from a previous communication exchange ?</p>
","<p>The figure has several errors and some omissions, because it is probably a simplification:</p>

<ul>
<li><p>the hash is <strong>digitally signed, not encrypted</strong>, and the signature is verified, not decrypted. The underlying cryptographic operation is not equivalent.</p></li>
<li><p>the signed data should include the certificate and <strong>the certification chain</strong></p></li>
<li><p>if you use a known format like CMS, pkcs#7 or XMLDsig the hash to sign usually includes also a  reference to the signing certificate and content-type to avoid tampering</p></li>
</ul>

<p>To validate a signed document you <strong>verify the signature using the public key of the attached certificate</strong> but it is mandatory to <strong>check that the signing certificate is trusted verifying that the certificate itself or the issuing Certification Authority is present in the client's trustore</strong>. </p>

<p>The signature includes the certification chain because usually the truststore does not contain the intermediate CAs. The certificates of the truststore are exchanged previously</p>

<p>Additionaly the verification process should check that the certificate is not expired and not revoked</p>

<hr>

<p>Note that the verification process is the same for all digital certificates in a public key infrastructure, not just RSA</p>
","542","<rsa><digital-signature><private-key><public-key><pki>","1","2","2","2017-09-10 18:23:19","","1","","6371459","","2017-09-10 18:08:35","2017-09-10 13:32:42",""
"40405436","Write a fabric file for rsync with a ssh key","<p>I want to create a deploy task with a fabric file. We have some times only ftp data or ssh data.</p>

<p>This Code works</p>

<pre><code>def sync_app():
 local(""rsync -rtlv --delete dist/ server:%s"" % code_dir)
</code></pre>

<p>But with this code every user must have the same ssh config file. So i want the data in the project. At this moment i dont know best practice but if i wrote manual the data in the code i get errors. What did i wrong?</p>

<pre><code>def sync_app():
 local(""rsync -rtlv --delete dist/ 'ssh -i /Users/username/.ssh/id_rsa_dploy -p 9600' user@server:%s"" % code_dir)
</code></pre>
","<p>Please post your errors, but I think your issue is being caused by a lack of use of the <code>-e</code> flag.  When using rsync over ssh use <code>-e</code>:</p>

<pre><code>def sync_app():
 local(""rsync -rtlv ""
       ""-e 'ssh -i /Users/username/.ssh/id_rsa_dploy -p 9600' "" 
       ""--delete dist/ user@server:%s"" % code_dir)
</code></pre>

<p><a href=""https://linux.die.net/man/1/rsync"" rel=""nofollow noreferrer"">https://linux.die.net/man/1/rsync</a> :</p>

<pre><code>-e, --rsh=COMMAND
    This option allows you to choose an alternative remote shell program to use for communication between the local and remote copies of rsync. Typically, rsync is configured to use ssh by default, but you may prefer to use rsh on a local network. 
</code></pre>
","542","<python><ssh><rsync><fabric><private-key>","0","0","1","2016-11-13 23:22:14","","1","","","","","2016-11-03 15:27:12",""
"54289650",".NetCore 2.2: How to get a private key of a certificate?","<p>for the implementation of an API I use, I need to provide a certificate, which consists of 2 byte arrays one for the public key and the other one for private key.</p>

<p>My initial idea was to do this with X509Certificate object of .Net. But I am struggling to get the private key bytes.</p>

<pre><code>var certificate = new X509Certificate2(""testCert.pfx"", password, X509KeyStorageFlags.Exportable);
byte[] myPublicKey = certificate.GetRawCertData();
byte[] privateKey = ???
</code></pre>

<p>I've tried to export the key, but I can't export the private key standalone.<br>
And:</p>

<pre><code>certificate.PrivateKey.ToXmlString(true);
</code></pre>

<p>is not available on a Ubuntu System :-(</p>

<p>Do you have any ideas, how to get the private bytes from certificates?
May be X509Certificate2 is not the best solution for this...</p>
","<p>Use an approrpiate method of these <a href=""https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.x509certificates.x509certificate2?redirectedfrom=MSDN&amp;view=netframework-4.7.2#extension-methods"" rel=""nofollow noreferrer"">X509Certificate2 extension methods</a>:</p>

<ul>
<li><code>GetRSAPrivateKey(X509Certificate2)</code> -- for RSA keys</li>
<li><code>GetDSAPrivateKey(X509Certificate2)</code> -- for DSA keys</li>
<li><code>GetECDsaPrivateKey(X509Certificate2)</code> -- for EC keys</li>
</ul>

<p>Extension method you need to use depends on asymmtric key algorithm.</p>
","541","<.net-core><x509certificate><private-key>","0","0","1","2019-01-21 16:01:39","","2","","10288448","","2019-01-21 12:15:35","2019-01-21 12:06:54",""
"44380038","Google Drive Auth: Creating JWT signature from JSON version of private key","<p>I am having trouble creating a JWT for Google Drive authorization. 
The instruction is given in <a href=""https://developers.google.com/identity/protocols/OAuth2ServiceAccount"" rel=""nofollow noreferrer"">this link</a>.</p>

<pre><code>&lt;?php
//helper function
function base64url_encode($data) { 
return rtrim(strtr(base64_encode($data), '+/', '-_'), '='); 
}

//Google's Documentation of Creating a JWT https://developers.google.com/identity/protocols/OAuth2ServiceAccount#authorizingrequests

$raw_key_data=""-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkWhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCLJN7B2USp0bTH\n7aVt1K/pAJa9rgUEkebbRQUPEopManZHgJK8SMzq5nUM3OOVlTdyDyuzxUZW65Y+\nR1xajNHSidE+rJJ3MWwuevXBuUws5oiA+DXJBB6FsTtHDvUPT7sePbJx8Y80S1Jr\nB3apJNdohjSef4UihgjJ93A0PgeSVz7CeUKxrBHdGiK2Ikf7wTCzcRzz/15I6QLu\ncsNbWxo0+koXo9D0+wT3RN+riSyTa2WwYn//B8v6VmDPVrcjxETEXraAIMpqURtK\n4BuK4Qp2pSd1u2zrGc58BVGuT6+nPVpmX6wiZ21sqOulTzgIOXKIuc4zdKvZ+jz/\n1jst3ertAgMBAAECggEADRGn+IYbLGYdeD/Kb2/wG87p2aP8Jas8hzDK4lkH81h2\nho29eoDN+mwt50jh+V08CXMCVE69phFXmb7jHkAmvwMhy6Sy1w4lzpHO/mSUko0O\nmip2BszjvwPgAPMXMlp3RUZfOdOJ80v10Eaxrv5eWxtr2s04aH81WR7sA4Ql+uki\nbTiLbo4odpMVPkoJZATZKQd+L/bBM4a+b3IM87/TE7skMrSgQE6cnjjTI5Uk+WSl\nxjiZvj5XmticW3vPavL/ZXPEZqy5IxvcxdF5rGHCHVu4ah0CmDdc9A3jF0flhewK\nV6mOViqbKGInnMn4kt3l4C3+wF2+dge6t8BQ/TMtwwKBgQDBnpjiC+wRVQy36KCs\ntYdZ60ykuQeKqMyACt6FvC74xy+PjLVntxDaYArva2PVaZSm9B2FgGHPz9AfW80/\n1ZeNHcuwymni8n+4MNpQbJuhuHK8UjSo0rFq6Nrddi9RCjzASSX8s4Dlm01VM65b\nKBnM5p50I9QEY4F4gSZfLLMNowKBgQC3+Tpz23qhkxJPu9cVuvPRFfg1y0NNsp7k\n0qHYMegz1GHoMVs1kg36OtbROqpG2+rIrj0JWTGwLO14fX2TY0jWfao21CGrpkXM\nlY1KSDIMuQv6pd5yh74oqvDDpZwKxxu/nmzcQbd1lN/nFkEW5g0b7e27UoCoovwS\n7qSENbqOLwKBgHYWp8H+aX1stPQZ8p1DngiupTE2FK5yIz/Y4T0JuFBNE+nmdOGL\n2sCFoUXC5sHLwjlNXBAHbCCV66akk/th5yvPR2NNIOWk51bMnOo+Q3GQEJJhRPLO\nhhzhZlN5+IPhzYmtU3jbdjsTzEex3J6GR64b3fqRu4bttZJsmp2jopUnAoGAWW+7\nzt7/+tR4rnJu2Y2NQjQf+mbaTUddb2kWbPe2Hpw9DJgR8zURvngkPor6hIAc33p1\nCbpmwXLV7yFyjthRbJSizwzJYZzvicmaamY2jqDXBf7k6WC8PSD88t/rwAGTp8/o\ntBruiSbawoi7E9q6vL0qOUqeaVzylnGVYQCNtNkCgYBwqL1MNTR8IrXDfZyYdDRP\nWNCRqm7ymuQi7IUKVa+yaBM1ubvEe7EPrlZWlFPDdPmaScx02Qwf++xcGHWzzDX0\nQPmd95OTGafvECXuKVy2NAf2AdCYVruL+17wfPhuz7ANIpgEqsiNAZNe0GtGBjyZ\nVuiSVVML3jW4XUtf63V0/A==\n-----END PRIVATE KEY-----\n"";   

$private_key = openssl_get_privatekey($raw_key_data);
if ($private_key === FALSE)
{
    error_log (""Unable to extract private key from raw key data: "" . openssl_error_string());
};

print(""$private_key\n"");

//{Base64url encoded JSON header}

$jwtHeader = base64url_encode(json_encode(array(
""alg"" =&gt; ""RS256"",
""typ"" =&gt; ""JWT""
)));

//{Base64url encoded JSON claim set}
$now = time();
$jwtClaim = base64url_encode(json_encode(array(
""iss"" =&gt; ""myService-account-id@mySite.iam.gserviceaccount.com"",
""scope"" =&gt; ""https://www.googleapis.com/auth/drive.file"",
""aud"" =&gt; ""https://www.googleapis.com/oauth2/v4/token"",
""exp"" =&gt; $now + 3600,
""iat"" =&gt; $now
)));

//The base string for the signature: {Base64url encoded JSON header}.    {Base64url encoded JSON claim set}

openssl_sign(
$jwtHeader.""."".$jwtClaim,
$jwtSig,
$private_key,
""SHA256""
);

$jwtSign = base64url_encode($jwtSig);

//{Base64url encoded JSON header}.{Base64url encoded JSON claim set}.    {Base64url encoded signature}
$jwtAssertion = $jwtHeader.""."".$jwtClaim.""."".$jwtSig;
print(""$jwtAssertion\n"");

?&gt;
</code></pre>

<p>When I run this code, I get <code>Resource id #4</code> followed by a nonsense signature. I even tried putting the private key in a file and reading from the file in which there is multiple lines (private key separated at <code>\n</code> ) but no success. I can't generate meaningful JWT signature from the private key. Can anyone help me with this issue?</p>

<p>Thanks,</p>
","<p>I have managed to solve this issue. Below is the updated code that reads the JSON file downloaded from Google and creates an <code>assertion</code> with which one can then get access token from Google:</p>

<pre><code>&lt;?php
//helper function
function base64url_encode($data) { 
return rtrim(strtr(base64_encode($data), '+/', '-_'), '='); 
}

// Read the JSON credential file my-private-key.json download from Google
$private_key_file=""my-private-key.json"";
$json_file = file_get_contents($private_key_file);

$info = json_decode($json_file);
$private_key = $info-&gt;{'private_key'};

//{Base64url encoded JSON header}
$jwtHeader = base64url_encode(json_encode(array(
""alg"" =&gt; ""RS256"",
""typ"" =&gt; ""JWT""
)));

//{Base64url encoded JSON claim set}
$now = time();
$jwtClaim = base64url_encode(json_encode(array(
""iss"" =&gt; $info-&gt;{'client_email'},
""scope"" =&gt; ""https://www.googleapis.com/auth/drive.file"",
""aud"" =&gt; ""https://www.googleapis.com/oauth2/v4/token"",
""exp"" =&gt; $now + 3600,
""iat"" =&gt; $now
)));

$data = $jwtHeader.""."".$jwtClaim;

// Signature
$Sig = '';
openssl_sign($data,$Sig,$private_key,'SHA256');
$jwtSign = base64url_encode( $Sig  );


//{Base64url encoded JSON header}.{Base64url encoded JSON claim set}.{Base64url encoded signature}

$jwtAssertion = $data.""."".$jwtSign;
echo ""$jwtAssertion\n"";
</code></pre>

<p>You may then test your code by communicating with Google Drive for example:</p>

<pre><code>curl -d 'grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Ajwt-bearer&amp;assertion=YOUR-JWT-ASSERTION-BUILD-ABOVE' https://www.googleapis.com/oauth2/v4/token
</code></pre>
","541","<php><jwt><private-key><sign>","1","3","1","2017-06-06 08:22:10","","0","","","","","2017-06-06 01:26:35",""
"40118996","BouncyCastle Change KeySpec for AT_SIGNATURE","<p>I found a great example of using BouncyCastle's C# API for generating a CA cert and a self-signed certificate. </p>

<p>However, i need a KEYSPEC = 2 (At_Signature for CERT_KEY_PROV_INFO_PROP_ID) and not a Keyspec of 0. Which this code currently provides:</p>

<pre><code>using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


//Downloaded using nuget, source: http://www.bouncycastle.org/csharp/
//Library is open-source.

namespace CertificateToolLibrary
{
using System;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using Org.BouncyCastle.Asn1;
using Org.BouncyCastle.Asn1.X9;
using Org.BouncyCastle.Asn1.Pkcs;
using Org.BouncyCastle.Asn1.X509;
using Org.BouncyCastle.Crypto;
using Org.BouncyCastle.Crypto.Generators;
using Org.BouncyCastle.Crypto.Parameters;
using Org.BouncyCastle.Crypto.Prng;
using Org.BouncyCastle.Math;
using Org.BouncyCastle.OpenSsl;
using Org.BouncyCastle.Pkcs;
using Org.BouncyCastle.Security;
using Org.BouncyCastle.Utilities;
using Org.BouncyCastle.X509.Extension;
using Org.BouncyCastle.X509;

public class X509Certificate2Builder
{
    public string SubjectName
    { set { _subjectName = value; } }

    public string SubjectAlternativeName
    { set { _subjectAlternativeName = value; } }

    public string IssuerName
    { set { _issuerName = value; } }

    public AsymmetricAlgorithm IssuerPrivateKey
    { set { _issuerPrivateKey = value; } }

    public X509Certificate2 Issuer
    {
        set
        {
            _issuer = value;
            _issuerName = value.IssuerName.Name;
            if (value.HasPrivateKey)
                _issuerPrivateKey = value.PrivateKey;
        }
    }

    public int? KeyStrength
    { set { _keyStrength = value ?? 2048; } }

    public DateTime? NotBefore
    { set { _notBefore = value; } }

    public DateTime? NotAfter
    { set { _notAfter = value; } }

    public bool Intermediate
    { set { _intermediate = value; } }

    private string _subjectName;
    private string _subjectAlternativeName;
    private X509Certificate2 _issuer;
    private string _issuerName;
    private AsymmetricAlgorithm _issuerPrivateKey;
    private int _keyStrength = 2048;
    private DateTime? _notBefore;
    private DateTime? _notAfter;
    private bool _intermediate = true;

    public X509Certificate2 Build()
    {
        // Generating Random Numbers
        var randomGenerator = new CryptoApiRandomGenerator();
        var random = new SecureRandom(randomGenerator);

        // The Certificate Generator
        var certificateGenerator = new X509V3CertificateGenerator();

        // Serial Number
        var serialNumber = BigIntegers.CreateRandomInRange(BigInteger.One, BigInteger.ValueOf(long.MaxValue), random);
        certificateGenerator.SetSerialNumber(serialNumber);

        // Signature Algorithm
        certificateGenerator.SetSignatureAlgorithm(""SHA512WithRSA"");

        // Issuer and Subject Name
        certificateGenerator.SetIssuerDN(new X509Name(_issuerName ?? _subjectName));
        certificateGenerator.SetSubjectDN(new X509Name(_subjectName));

        //Subject Alternative Name
        if (!(String.IsNullOrEmpty(_subjectAlternativeName)))
        {
            //Here we signify ip address instead of DNS SAN. This could be condition upon further development.
            GeneralNames subjectAltName = new GeneralNames(new GeneralName(GeneralName.IPAddress, _subjectAlternativeName));
            certificateGenerator.AddExtension(X509Extensions.SubjectAlternativeName, false, subjectAltName);
        }

        // Authority Key Identifier
        if (_issuer != null)
        {
            var authorityKeyIdentifier = new AuthorityKeyIdentifierStructure(DotNetUtilities.FromX509Certificate(_issuer));
            certificateGenerator.AddExtension(X509Extensions.AuthorityKeyIdentifier.Id, false, authorityKeyIdentifier);

            //var subjectKeyIdentifier = new SubjectKeyIdentifier(DotNetUtilities.FromX509Certificate(_issuer));
            //certificateGenerator.AddExtension(X509Extensions.SubjectKeyIdentifier.Id, false, subjectKeyIdentifier);
            //certificateGenerator.addExtension(X509Extensions.SubjectKeyIdentifier.Id, false, new SubjectKeyIdentifierStructure( keyPair.getPublic()));
        }

        // Basic Constraints - certificate is allowed to be used as intermediate.
        certificateGenerator.AddExtension( X509Extensions.BasicConstraints, false, new BasicConstraints(_intermediate));


        // Valid For
        certificateGenerator.SetNotBefore(_notBefore ?? DateTime.UtcNow.Date.AddDays(-1));
        certificateGenerator.SetNotAfter(_notAfter ?? DateTime.UtcNow.Date.AddYears(3));


        //Key Usage(s) don't set for CA cert, just the SSL cert.
        if (_subjectName != ""CN=Bla Certificate Authority"")
        {
            certificateGenerator.AddExtension(X509Extensions.KeyUsage, true, new KeyUsage(KeyUsage.DigitalSignature | KeyUsage.KeyEncipherment));
            var usages = new[] { KeyPurposeID.IdKPServerAuth, KeyPurposeID.IdKPClientAuth};
            certificateGenerator.AddExtension(X509Extensions.ExtendedKeyUsage.Id, false, new ExtendedKeyUsage(usages));
        }


        // Subject Public Key
        var keyGenerationParameters = new KeyGenerationParameters(random, _keyStrength);
        var keyPairGenerator = new RsaKeyPairGenerator();
        keyPairGenerator.Init(keyGenerationParameters);

        var subjectKeyPair = keyPairGenerator.GenerateKeyPair();
        var issuerKeyPair = _issuerPrivateKey == null
            ? subjectKeyPair
            : DotNetUtilities.GetKeyPair(_issuerPrivateKey);

        certificateGenerator.SetPublicKey(subjectKeyPair.Public);

        //Add the subject key identifier for the SSL Certficate
        if (_subjectName != ""CN=Bla Certificate Authority"")
        {
            certificateGenerator.AddExtension(X509Extensions.SubjectKeyIdentifier, false, new SubjectKeyIdentifierStructure(subjectKeyPair.Public));
        }

        // selfsign certificate
        var certificate = certificateGenerator.Generate(issuerKeyPair.Private, random);

        // merge into X509Certificate2
        return new X509Certificate2(certificate.GetEncoded())
        {
            PrivateKey = ConvertToRsaPrivateKey(subjectKeyPair)
        };
    }

    private static AsymmetricAlgorithm ConvertToRsaPrivateKey(AsymmetricCipherKeyPair keyPair)
    {
        var keyInfo = PrivateKeyInfoFactory.CreatePrivateKeyInfo(keyPair.Private);
        var seq = (Asn1Sequence)Asn1Object.FromByteArray(keyInfo.PrivateKey.GetDerEncoded());
        if (seq.Count != 9)
            throw new PemException(""malformed sequence in RSA private key"");

        var rsa = new RsaPrivateKeyStructure(seq);
        var rsaparams = new RsaPrivateCrtKeyParameters(rsa.Modulus, rsa.PublicExponent, rsa.PrivateExponent, rsa.Prime1, rsa.Prime2, rsa.Exponent1, rsa.Exponent2, rsa.Coefficient);

        return DotNetUtilities.ToRSA(rsaparams);



    }
}
</code></pre>

<p>}</p>

<p>I can't find any online examples of how to modify the keyspec to digital signature. I realize it should happen on the private key side, but there just aren't any examples out there, at least in using the bouncycastle code, specifically in the c# examples.</p>

<p>I figure one could use the rsaparams like cspparams in native c# code, but i just can't find anything on it.</p>

<p>Any help would be hugely appreciated!</p>
","<p>Check out the <strong><a href=""https://people.eecs.berkeley.edu/~jonah/bc/org/bouncycastle/asn1/x509/KeyUsage.html"" rel=""nofollow"">KeyUsage</a></strong> constants class</p>

<p>I think you want to use <strong><a href=""https://people.eecs.berkeley.edu/~jonah/bc/constant-values.html#org.bouncycastle.asn1.x509.KeyUsage.keyEncipherment"" rel=""nofollow"" title=""KeyUsage.keyEncipherment"">KeyUsage.keyEncipherment</a></strong></p>
","538","<c#><ssl-certificate><x509certificate><bouncycastle><private-key>","0","0","3","2016-11-17 19:15:31","","0","","5249795","","2016-10-19 03:46:06","2016-10-18 22:16:38",""
"40118996","BouncyCastle Change KeySpec for AT_SIGNATURE","<p>I found a great example of using BouncyCastle's C# API for generating a CA cert and a self-signed certificate. </p>

<p>However, i need a KEYSPEC = 2 (At_Signature for CERT_KEY_PROV_INFO_PROP_ID) and not a Keyspec of 0. Which this code currently provides:</p>

<pre><code>using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


//Downloaded using nuget, source: http://www.bouncycastle.org/csharp/
//Library is open-source.

namespace CertificateToolLibrary
{
using System;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using Org.BouncyCastle.Asn1;
using Org.BouncyCastle.Asn1.X9;
using Org.BouncyCastle.Asn1.Pkcs;
using Org.BouncyCastle.Asn1.X509;
using Org.BouncyCastle.Crypto;
using Org.BouncyCastle.Crypto.Generators;
using Org.BouncyCastle.Crypto.Parameters;
using Org.BouncyCastle.Crypto.Prng;
using Org.BouncyCastle.Math;
using Org.BouncyCastle.OpenSsl;
using Org.BouncyCastle.Pkcs;
using Org.BouncyCastle.Security;
using Org.BouncyCastle.Utilities;
using Org.BouncyCastle.X509.Extension;
using Org.BouncyCastle.X509;

public class X509Certificate2Builder
{
    public string SubjectName
    { set { _subjectName = value; } }

    public string SubjectAlternativeName
    { set { _subjectAlternativeName = value; } }

    public string IssuerName
    { set { _issuerName = value; } }

    public AsymmetricAlgorithm IssuerPrivateKey
    { set { _issuerPrivateKey = value; } }

    public X509Certificate2 Issuer
    {
        set
        {
            _issuer = value;
            _issuerName = value.IssuerName.Name;
            if (value.HasPrivateKey)
                _issuerPrivateKey = value.PrivateKey;
        }
    }

    public int? KeyStrength
    { set { _keyStrength = value ?? 2048; } }

    public DateTime? NotBefore
    { set { _notBefore = value; } }

    public DateTime? NotAfter
    { set { _notAfter = value; } }

    public bool Intermediate
    { set { _intermediate = value; } }

    private string _subjectName;
    private string _subjectAlternativeName;
    private X509Certificate2 _issuer;
    private string _issuerName;
    private AsymmetricAlgorithm _issuerPrivateKey;
    private int _keyStrength = 2048;
    private DateTime? _notBefore;
    private DateTime? _notAfter;
    private bool _intermediate = true;

    public X509Certificate2 Build()
    {
        // Generating Random Numbers
        var randomGenerator = new CryptoApiRandomGenerator();
        var random = new SecureRandom(randomGenerator);

        // The Certificate Generator
        var certificateGenerator = new X509V3CertificateGenerator();

        // Serial Number
        var serialNumber = BigIntegers.CreateRandomInRange(BigInteger.One, BigInteger.ValueOf(long.MaxValue), random);
        certificateGenerator.SetSerialNumber(serialNumber);

        // Signature Algorithm
        certificateGenerator.SetSignatureAlgorithm(""SHA512WithRSA"");

        // Issuer and Subject Name
        certificateGenerator.SetIssuerDN(new X509Name(_issuerName ?? _subjectName));
        certificateGenerator.SetSubjectDN(new X509Name(_subjectName));

        //Subject Alternative Name
        if (!(String.IsNullOrEmpty(_subjectAlternativeName)))
        {
            //Here we signify ip address instead of DNS SAN. This could be condition upon further development.
            GeneralNames subjectAltName = new GeneralNames(new GeneralName(GeneralName.IPAddress, _subjectAlternativeName));
            certificateGenerator.AddExtension(X509Extensions.SubjectAlternativeName, false, subjectAltName);
        }

        // Authority Key Identifier
        if (_issuer != null)
        {
            var authorityKeyIdentifier = new AuthorityKeyIdentifierStructure(DotNetUtilities.FromX509Certificate(_issuer));
            certificateGenerator.AddExtension(X509Extensions.AuthorityKeyIdentifier.Id, false, authorityKeyIdentifier);

            //var subjectKeyIdentifier = new SubjectKeyIdentifier(DotNetUtilities.FromX509Certificate(_issuer));
            //certificateGenerator.AddExtension(X509Extensions.SubjectKeyIdentifier.Id, false, subjectKeyIdentifier);
            //certificateGenerator.addExtension(X509Extensions.SubjectKeyIdentifier.Id, false, new SubjectKeyIdentifierStructure( keyPair.getPublic()));
        }

        // Basic Constraints - certificate is allowed to be used as intermediate.
        certificateGenerator.AddExtension( X509Extensions.BasicConstraints, false, new BasicConstraints(_intermediate));


        // Valid For
        certificateGenerator.SetNotBefore(_notBefore ?? DateTime.UtcNow.Date.AddDays(-1));
        certificateGenerator.SetNotAfter(_notAfter ?? DateTime.UtcNow.Date.AddYears(3));


        //Key Usage(s) don't set for CA cert, just the SSL cert.
        if (_subjectName != ""CN=Bla Certificate Authority"")
        {
            certificateGenerator.AddExtension(X509Extensions.KeyUsage, true, new KeyUsage(KeyUsage.DigitalSignature | KeyUsage.KeyEncipherment));
            var usages = new[] { KeyPurposeID.IdKPServerAuth, KeyPurposeID.IdKPClientAuth};
            certificateGenerator.AddExtension(X509Extensions.ExtendedKeyUsage.Id, false, new ExtendedKeyUsage(usages));
        }


        // Subject Public Key
        var keyGenerationParameters = new KeyGenerationParameters(random, _keyStrength);
        var keyPairGenerator = new RsaKeyPairGenerator();
        keyPairGenerator.Init(keyGenerationParameters);

        var subjectKeyPair = keyPairGenerator.GenerateKeyPair();
        var issuerKeyPair = _issuerPrivateKey == null
            ? subjectKeyPair
            : DotNetUtilities.GetKeyPair(_issuerPrivateKey);

        certificateGenerator.SetPublicKey(subjectKeyPair.Public);

        //Add the subject key identifier for the SSL Certficate
        if (_subjectName != ""CN=Bla Certificate Authority"")
        {
            certificateGenerator.AddExtension(X509Extensions.SubjectKeyIdentifier, false, new SubjectKeyIdentifierStructure(subjectKeyPair.Public));
        }

        // selfsign certificate
        var certificate = certificateGenerator.Generate(issuerKeyPair.Private, random);

        // merge into X509Certificate2
        return new X509Certificate2(certificate.GetEncoded())
        {
            PrivateKey = ConvertToRsaPrivateKey(subjectKeyPair)
        };
    }

    private static AsymmetricAlgorithm ConvertToRsaPrivateKey(AsymmetricCipherKeyPair keyPair)
    {
        var keyInfo = PrivateKeyInfoFactory.CreatePrivateKeyInfo(keyPair.Private);
        var seq = (Asn1Sequence)Asn1Object.FromByteArray(keyInfo.PrivateKey.GetDerEncoded());
        if (seq.Count != 9)
            throw new PemException(""malformed sequence in RSA private key"");

        var rsa = new RsaPrivateKeyStructure(seq);
        var rsaparams = new RsaPrivateCrtKeyParameters(rsa.Modulus, rsa.PublicExponent, rsa.PrivateExponent, rsa.Prime1, rsa.Prime2, rsa.Exponent1, rsa.Exponent2, rsa.Coefficient);

        return DotNetUtilities.ToRSA(rsaparams);



    }
}
</code></pre>

<p>}</p>

<p>I can't find any online examples of how to modify the keyspec to digital signature. I realize it should happen on the private key side, but there just aren't any examples out there, at least in using the bouncycastle code, specifically in the c# examples.</p>

<p>I figure one could use the rsaparams like cspparams in native c# code, but i just can't find anything on it.</p>

<p>Any help would be hugely appreciated!</p>
","<p>Turns out that i was on a desktop developing, and this keyspec was set to 0. However, when i ran my tool on a 2012 server, the keyspec was set to 1. I'm all set.</p>
","538","<c#><ssl-certificate><x509certificate><bouncycastle><private-key>","0","0","3","2016-11-17 19:15:31","","0","","5249795","","2016-10-19 03:46:06","2016-10-18 22:16:38",""
"40118996","BouncyCastle Change KeySpec for AT_SIGNATURE","<p>I found a great example of using BouncyCastle's C# API for generating a CA cert and a self-signed certificate. </p>

<p>However, i need a KEYSPEC = 2 (At_Signature for CERT_KEY_PROV_INFO_PROP_ID) and not a Keyspec of 0. Which this code currently provides:</p>

<pre><code>using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


//Downloaded using nuget, source: http://www.bouncycastle.org/csharp/
//Library is open-source.

namespace CertificateToolLibrary
{
using System;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using Org.BouncyCastle.Asn1;
using Org.BouncyCastle.Asn1.X9;
using Org.BouncyCastle.Asn1.Pkcs;
using Org.BouncyCastle.Asn1.X509;
using Org.BouncyCastle.Crypto;
using Org.BouncyCastle.Crypto.Generators;
using Org.BouncyCastle.Crypto.Parameters;
using Org.BouncyCastle.Crypto.Prng;
using Org.BouncyCastle.Math;
using Org.BouncyCastle.OpenSsl;
using Org.BouncyCastle.Pkcs;
using Org.BouncyCastle.Security;
using Org.BouncyCastle.Utilities;
using Org.BouncyCastle.X509.Extension;
using Org.BouncyCastle.X509;

public class X509Certificate2Builder
{
    public string SubjectName
    { set { _subjectName = value; } }

    public string SubjectAlternativeName
    { set { _subjectAlternativeName = value; } }

    public string IssuerName
    { set { _issuerName = value; } }

    public AsymmetricAlgorithm IssuerPrivateKey
    { set { _issuerPrivateKey = value; } }

    public X509Certificate2 Issuer
    {
        set
        {
            _issuer = value;
            _issuerName = value.IssuerName.Name;
            if (value.HasPrivateKey)
                _issuerPrivateKey = value.PrivateKey;
        }
    }

    public int? KeyStrength
    { set { _keyStrength = value ?? 2048; } }

    public DateTime? NotBefore
    { set { _notBefore = value; } }

    public DateTime? NotAfter
    { set { _notAfter = value; } }

    public bool Intermediate
    { set { _intermediate = value; } }

    private string _subjectName;
    private string _subjectAlternativeName;
    private X509Certificate2 _issuer;
    private string _issuerName;
    private AsymmetricAlgorithm _issuerPrivateKey;
    private int _keyStrength = 2048;
    private DateTime? _notBefore;
    private DateTime? _notAfter;
    private bool _intermediate = true;

    public X509Certificate2 Build()
    {
        // Generating Random Numbers
        var randomGenerator = new CryptoApiRandomGenerator();
        var random = new SecureRandom(randomGenerator);

        // The Certificate Generator
        var certificateGenerator = new X509V3CertificateGenerator();

        // Serial Number
        var serialNumber = BigIntegers.CreateRandomInRange(BigInteger.One, BigInteger.ValueOf(long.MaxValue), random);
        certificateGenerator.SetSerialNumber(serialNumber);

        // Signature Algorithm
        certificateGenerator.SetSignatureAlgorithm(""SHA512WithRSA"");

        // Issuer and Subject Name
        certificateGenerator.SetIssuerDN(new X509Name(_issuerName ?? _subjectName));
        certificateGenerator.SetSubjectDN(new X509Name(_subjectName));

        //Subject Alternative Name
        if (!(String.IsNullOrEmpty(_subjectAlternativeName)))
        {
            //Here we signify ip address instead of DNS SAN. This could be condition upon further development.
            GeneralNames subjectAltName = new GeneralNames(new GeneralName(GeneralName.IPAddress, _subjectAlternativeName));
            certificateGenerator.AddExtension(X509Extensions.SubjectAlternativeName, false, subjectAltName);
        }

        // Authority Key Identifier
        if (_issuer != null)
        {
            var authorityKeyIdentifier = new AuthorityKeyIdentifierStructure(DotNetUtilities.FromX509Certificate(_issuer));
            certificateGenerator.AddExtension(X509Extensions.AuthorityKeyIdentifier.Id, false, authorityKeyIdentifier);

            //var subjectKeyIdentifier = new SubjectKeyIdentifier(DotNetUtilities.FromX509Certificate(_issuer));
            //certificateGenerator.AddExtension(X509Extensions.SubjectKeyIdentifier.Id, false, subjectKeyIdentifier);
            //certificateGenerator.addExtension(X509Extensions.SubjectKeyIdentifier.Id, false, new SubjectKeyIdentifierStructure( keyPair.getPublic()));
        }

        // Basic Constraints - certificate is allowed to be used as intermediate.
        certificateGenerator.AddExtension( X509Extensions.BasicConstraints, false, new BasicConstraints(_intermediate));


        // Valid For
        certificateGenerator.SetNotBefore(_notBefore ?? DateTime.UtcNow.Date.AddDays(-1));
        certificateGenerator.SetNotAfter(_notAfter ?? DateTime.UtcNow.Date.AddYears(3));


        //Key Usage(s) don't set for CA cert, just the SSL cert.
        if (_subjectName != ""CN=Bla Certificate Authority"")
        {
            certificateGenerator.AddExtension(X509Extensions.KeyUsage, true, new KeyUsage(KeyUsage.DigitalSignature | KeyUsage.KeyEncipherment));
            var usages = new[] { KeyPurposeID.IdKPServerAuth, KeyPurposeID.IdKPClientAuth};
            certificateGenerator.AddExtension(X509Extensions.ExtendedKeyUsage.Id, false, new ExtendedKeyUsage(usages));
        }


        // Subject Public Key
        var keyGenerationParameters = new KeyGenerationParameters(random, _keyStrength);
        var keyPairGenerator = new RsaKeyPairGenerator();
        keyPairGenerator.Init(keyGenerationParameters);

        var subjectKeyPair = keyPairGenerator.GenerateKeyPair();
        var issuerKeyPair = _issuerPrivateKey == null
            ? subjectKeyPair
            : DotNetUtilities.GetKeyPair(_issuerPrivateKey);

        certificateGenerator.SetPublicKey(subjectKeyPair.Public);

        //Add the subject key identifier for the SSL Certficate
        if (_subjectName != ""CN=Bla Certificate Authority"")
        {
            certificateGenerator.AddExtension(X509Extensions.SubjectKeyIdentifier, false, new SubjectKeyIdentifierStructure(subjectKeyPair.Public));
        }

        // selfsign certificate
        var certificate = certificateGenerator.Generate(issuerKeyPair.Private, random);

        // merge into X509Certificate2
        return new X509Certificate2(certificate.GetEncoded())
        {
            PrivateKey = ConvertToRsaPrivateKey(subjectKeyPair)
        };
    }

    private static AsymmetricAlgorithm ConvertToRsaPrivateKey(AsymmetricCipherKeyPair keyPair)
    {
        var keyInfo = PrivateKeyInfoFactory.CreatePrivateKeyInfo(keyPair.Private);
        var seq = (Asn1Sequence)Asn1Object.FromByteArray(keyInfo.PrivateKey.GetDerEncoded());
        if (seq.Count != 9)
            throw new PemException(""malformed sequence in RSA private key"");

        var rsa = new RsaPrivateKeyStructure(seq);
        var rsaparams = new RsaPrivateCrtKeyParameters(rsa.Modulus, rsa.PublicExponent, rsa.PrivateExponent, rsa.Prime1, rsa.Prime2, rsa.Exponent1, rsa.Exponent2, rsa.Coefficient);

        return DotNetUtilities.ToRSA(rsaparams);



    }
}
</code></pre>

<p>}</p>

<p>I can't find any online examples of how to modify the keyspec to digital signature. I realize it should happen on the private key side, but there just aren't any examples out there, at least in using the bouncycastle code, specifically in the c# examples.</p>

<p>I figure one could use the rsaparams like cspparams in native c# code, but i just can't find anything on it.</p>

<p>Any help would be hugely appreciated!</p>
","<pre><code>    public static AsymmetricAlgorithm ToDotNetKey(RsaPrivateCrtKeyParameters privateKey)
    {
        var cspParams = new CspParameters
        {
            ProviderName = ""Microsoft Enhanced RSA and AES Cryptographic Provider"",
            ProviderType = 24,
            KeyContainerName = KEY_CONTAINER_NAME,
            KeyNumber = (int)KeyNumber.Signature,
            Flags = CspProviderFlags.UseMachineKeyStore
        };

        RSACryptoServiceProvider rsaProvider = new RSACryptoServiceProvider(cspParams);

        RSAParameters parameters = new RSAParameters
        {
            Modulus = privateKey.Modulus.ToByteArrayUnsigned(),
            P = privateKey.P.ToByteArrayUnsigned(),
            Q = privateKey.Q.ToByteArrayUnsigned(),
            DP = privateKey.DP.ToByteArrayUnsigned(),
            DQ = privateKey.DQ.ToByteArrayUnsigned(),
            InverseQ = privateKey.QInv.ToByteArrayUnsigned(),
            D = privateKey.Exponent.ToByteArrayUnsigned(),
            Exponent = privateKey.PublicExponent.ToByteArrayUnsigned()
        };

        rsaProvider.ImportParameters(parameters);

        return rsaProvider;
    }
</code></pre>

<p>So just to add another answer here, i was able to force keyspec=2 AT_SIGNATURE using this snippet. But it's currently experiencing issues with signing. Just wanted to throw it out there for other to potentially lead them in the right direction.</p>
","538","<c#><ssl-certificate><x509certificate><bouncycastle><private-key>","0","0","3","2016-11-17 19:15:31","","0","","5249795","","2016-10-19 03:46:06","2016-10-18 22:16:38",""
"44743746","Public private key signing/encoding","<p>I'm stuck trying to base64 encode a public private key. It looks like I can encode public and private keys separately with the <a href=""https://github.com/TakeScoop/SwiftyRSA"" rel=""nofollow noreferrer"">SwiftyRSA library</a>.</p>

<p>My problem is that I can't put them together the way the <a href=""https://developer.box.com/v2.0/docs/authentication-with-jwt"" rel=""nofollow noreferrer"">API JWT assertion</a> should look (in RS256). I've read through plenty of documentation, but I'm having trouble trying to do the final task of having a base64 encoded variable.</p>

<p>I found the code below to be helpful. Essentially what I want to do is combine the public and private key into a token. This code is for javascript, but I can't seem to find something similar for Swift.</p>

<pre><code>// First, let's try to use the top-level one-off methods.
jwt = new lib.JsonWebTokens();
 // Encode JWT token using 512-bit RSA signing algorithm.
token = jwt.encode( payload, ""HS512"", getPublicKey(), getPrivateKey() );
</code></pre>

<p>Would anyone be willing to look at this and tell me the one or two steps I'm missing?</p>

<p>Other details:
This is for the Box api</p>

<p>Thanks in advance!</p>

<p>--------------- EDIT -----------------------------------------------</p>

<p>I was able to implement the SwiftyRSA library. The example code is below. The output gives me a JWT assertion that works with the <strong>jwt.io website</strong>. However...(please read below code)</p>

<pre><code>        do {
        // the keys
        let publicKey = try PublicKey(pemNamed: ""public_key"")
        let privateKey = try PrivateKey(pemNamed: ""dec_private_key"")

        // signing the base64url string
        let clear = try ClearMessage(string: encodedStuff, using: .utf8)
        let signature = try clear.signed(with: privateKey, digestType: .sha256)
        print(signature.data)

        // making the signature string base64url encoded
        let finalSig = signature.base64String.replacingOccurrences(of: ""/"", with: ""_"")
        .replacingOccurrences(of: ""+"", with: ""-"")
        .replacingOccurrences(of: ""="", with: """")
        print(""finalSig: "", finalSig)

        // encrypt the signature and make sure it's in base64url
        let dataToEncrypt = try ClearMessage(string: finalSig, using: .utf8)
        let encryptedData = try dataToEncrypt.encrypted(with: publicKey, padding: .PKCS1)
        let finalEncryptedData = encryptedData.base64String.replacingOccurrences(of: ""/"", with: ""_"")
        .replacingOccurrences(of: ""+"", with: ""-"")
        .replacingOccurrences(of: ""="", with: """")
        print(finalEncryptedData)

        // concatenate assertion
        jwtAssertion = encodedStuff + ""."" + finalEncryptedData
        print(""JWT Assertion: \(jwtAssertion)"")

        // decrypt to see if it works
        let recodedBase64 = base64urlToBase64(base64url: finalEncryptedData)
        let theEncrypted = try EncryptedMessage(base64Encoded: recodedBase64)
        let clearMessage = try theEncrypted.decrypted(with: privateKey, padding: .PKCS1)
        // decode decrypted message
        let finalDecrypted1 = clearMessage.base64String
        let finalDecrypted2 = Data(base64Encoded: finalDecrypted1)
        let finalDecrypted3 = String(data: finalDecrypted2!, encoding: .utf8)
        print(""finalDecrypted3: "", finalDecrypted3 ?? ""no go!"") //this gives you the finalSig (which is decrypted)



    } catch let thisError {
        print(""An error has occurred!"",thisError)
    }
</code></pre>

<p>It turns out I have to use base64url for each, which is only a matter of replacing some characters with other, etc. So, everything looks good and still works on the jwt website, but when I send it using the code below I get this error message: </p>

<blockquote>
  <p>{""error"":""invalid_grant"",""error_description"":""OpenSSL unable to verify data: error:0906D06C:PEM routines:PEM_read_bio:no start line""}</p>
</blockquote>

<p>I've followed all the steps on how to do this for the Box API, but it's just not working out. I'd really like to know what I'm doing wrong here. </p>

<p>Thanks in advance! </p>
","","537","<ios><swift><jwt><public-key-encryption><private-key>","0","","0","2018-03-08 13:27:58","","2","","3856941","","2017-07-03 13:08:12","2017-06-25 06:18:40",""
"30638569","Multiple Keystores vs Multiple Keys and export/import of keys","<p>I'm developing multiple Android applications for various clients. I manage the complete lifecycle of development for my clients which includes development and publishing to Google Play.</p>

<p>I'm concerned about how I should sign the applications I make for my clients. Right now, I have 1 keystore, and for each client, I create their own private key. </p>

<p>My concern is, if one day the clients want to take their Android app and manage it on their own without me, I'll need to give them their private key so that they can publish updates to the app.</p>

<p>My question is, is it possible to do this with only 1 keystore, and somehow export the private key which belongs a certain client from the keystore and give it to them, or should I be creating a keystore for each client? If the former is possible, then how is it technically done?</p>

<p>The scenario which would be ideal for me would be to be able to export a single private key from my keystore into another keystore, and be able to alter the password of this key without it affecting the validity of the key so that it can still be used to update the app it was made for in the future.</p>
","<p>You can import or export your private keys into PKCS#12 (.p12) files using a program called keytool :</p>

<pre><code>keytool -importkeystore -srckeystore existing-store.jks -destkeystore new-store.p12 -deststoretype PKCS12
</code></pre>

<p>This page lists many things that are possible with the keystore, ie. changing its format, and exporting out single keys :</p>

<p><a href=""http://www.startux.de/index.php/java/44-dealing-with-java-keystoresyvComment44"" rel=""nofollow"">http://www.startux.de/index.php/java/44-dealing-with-java-keystoresyvComment44</a></p>

<p>There is also an app called Keystore Explorer which does the same job but using a GUI :</p>

<p><a href=""http://keystore-explorer.sourceforge.net/"" rel=""nofollow"">http://keystore-explorer.sourceforge.net/</a></p>

<p>You can change the password, without affecting signing ability :</p>

<pre><code>keytool -keypasswd -alias ""key name"" -keypass ""old password"" -new ""new password"" -keystore ""keystore path""
</code></pre>

<p>This means, when your client wants their key from your keystore, just export it out. </p>
","534","<java><android><code-signing><keystore><private-key>","2","2","1","2015-06-04 10:37:30","30639788","3","1","4953473","","2015-06-04 10:37:30","2015-06-04 08:20:36",""
"33011724","how to create private key with passphrase in openssl","<p>I am creating <strong>private key</strong> and <strong>csr</strong> as follows:</p>

<pre><code>openssl req -nodes -newkey rsa:2048 -keyout ./private.key -out ./mycsr.csr -subj ""CN=blah""
</code></pre>

<p>I understand since the above command has a <strong>-nodes</strong>(no des) , the private key will not be having a passphrase.</p>

<p>I want to generate <strong>private key with passphrase</strong> and create a csr out of this key. How do I do that in <strong>non-interactive</strong> way.</p>
","","533","<openssl><private-key><csr><passphrase><non-interactive>","0","","0","2015-10-08 09:38:01","","2","","813970","","2015-10-08 09:38:01","2015-10-08 09:26:39",""
"21527667","Openldap Cannot load private key/certificate pair from Windows store","<p>I have an OpenLdap server on my system configured to use certificates from the Windows Store for TLS.</p>

<p>In my slapd.conf file I have TLSCertificateFile and TLSCACertificateFile parameters set to the subject of my certificate. (The subject name is correct for sure, because I use the same config on another computer and it works)</p>

<p>The problem is that I have the certificates in the Windows Store and I have the private key but the OpenLdap is giving me the following error:</p>

<pre><code>Info   :0:CA certificate 'CN=RootCA' loaded from Windows store
Info   :0:Certificate 'CN=child' loaded from Windows store 'MY'
ERROR  :-2509:Load device private key 'CN=child' from windows store 'MY' failed
ERROR  :-2509:Cannot load private key/certificate pair from Windows store
TLS: could not use certificate `CN=child'.
TLS: error:0B080074:x509 certificate routines:X509_check_private_key:key values mismatch .\crypto\x509\x509_cmp.c:318
TLS: error:02001002:system library:fopen:No such file or directory .\crypto\bio\bss_file.c:398
TLS: error:20074002:BIO routines:FILE_CTRL:system lib .\crypto\bio\bss_file.c:400
TLS: error:140AD002:SSL routines:SSL_CTX_use_certificate_file:system lib .\ssl\ssl_rsa.c:470
52ef8879 main: TLS init def ctx failed: -1
</code></pre>

<p>So when I open the mmc/Certificates view I can see the certificates in appropriate places and they have private keys but obviously OpenLdap cannot find them for some reason.</p>

<p>Did anyone have the similar issue?</p>
","","532","<ssl><certificate><openldap><private-key>","1","","0","2014-02-23 07:23:34","","0","","321731","","2014-02-23 07:23:34","2014-02-03 12:38:27",""
"37848191","Downloading p12 certificate from the certificate store using nodejs","<p>Is it possible to download the p12 certificate back again from the certificate store? I have this requirement where the private key and the certificate have been put together in a p12 certificate and this p12 certificate has been installed in the windows certificate store. Now I need to get the private key back again from this certificate installed in certificate store. Since its not possible, is it possible to download the p12 certificate from the cert store? If I can do that,  I can then read the private key from the downloaded p12 certificate. Please assist with some example using javascript/nodejs.</p>
","<p>You can manually extract a certificate from windows store if you have marked as extractable when importing.</p>

<p>The certificate can be saved as p12 using a password. After this you need a third party library to decrypt the p12 file, parse the content and extract the private or public key</p>

<p>The unique library I know to perform this operación is forge <a href=""https://github.com/digitalbazaar/forge"" rel=""nofollow noreferrer"">https://github.com/digitalbazaar/forge</a></p>

<p>See my response  at <a href=""https://stackoverflow.com/questions/36018233/how-to-load-a-pkcs12-digital-certificate-with-javascript-webcrypto-api/37407739#37407739"">How to load a PKCS#12 Digital Certificate with Javascript WebCrypto API</a> to see a full example and also, some key conversions if you need them</p>
","531","<javascript><node.js><security><certificate><private-key>","0","0","1","2016-06-18 15:37:06","","0","","","","","2016-06-16 00:58:05",""
"50418750","openstack heat doesn't recognize key_name parameter","<p>hy</p>

<p>i have an openstack deployed on my laptop. i'm trying to create a stack with heat.</p>

<p>i have created a keypair <code>openstack keypair create heat_key &gt; heat_key.priv</code>
which is recognized by nova <code>nova keypair-list</code> give the following output :</p>

<pre><code>+----------+------+-------------------------------------------------+
| Name     | Type | Fingerprint                                     |
+----------+------+-------------------------------------------------+
| heat_key | ssh  | 0b:7a:36:20:e2:e3:19:3b:ab:a1:95:ac:67:41:67:d7 |
+----------+------+-------------------------------------------------+
</code></pre>

<p>this is my simple HOT template :</p>

<pre><code>heat_template_version: 2013-05-23

description: Hot Template to deploy a single server

parameters:
  image_id:
    type: string
    description: Image ID
  key_name:
    type: string
    description: name of keypair to enable ssh to the instance

resources:
  test_stack:
    type: OS::Nova::Server
    properties:
      name: ""test_stack""
      image: { get_param: image_id }
      flavor: ""ds1G""
      key_name:{ get_param: key_name }

outputs:
  test_stack_ip:
    description: IP of the server
    value: { get_attr: [ test_stack, first_address ] }
</code></pre>

<p>when i try to create the stack </p>

<pre><code>openstack stack create -t myTemp.hot --parameter key_name=heat_key --parameter image_id=trusty-server-cloudimg-amd64-disk1 test_stack
</code></pre>

<p>i get the following error</p>

<pre><code>ERROR: Property error: : resources.test_stack.properties: : Unknown Property key_name:{ get_param
</code></pre>

<p>i have tried with different versions of templates but i get the same error</p>

<p>any idea why this is happening?</p>
","<p>Try to change the parameter name <code>key_name</code> to some other name and execute it</p>

<pre><code>heat_template_version: 2015-10-15

description: Hot Template to deploy a single server

parameters:
  image_id:
    type: string
    description: Image ID
  key_pair_name:
    type: string
    description: name of keypair to enable ssh to the instance

resources:
  test_stack:
    type: OS::Nova::Server
    properties:
      name: ""test_stack""
      image: { get_param: image_id }
      flavor: ""ds1G""
      key_name: { get_param: key_pair_name }

outputs:
  test_stack_ip:
    description: IP of the server
    value: { get_attr: [ test_stack, first_address ] }
</code></pre>
","529","<openstack><private-key><openstack-heat>","1","0","3","2018-05-25 09:12:37","50450380","0","","","","","2018-05-18 20:22:14",""
"50418750","openstack heat doesn't recognize key_name parameter","<p>hy</p>

<p>i have an openstack deployed on my laptop. i'm trying to create a stack with heat.</p>

<p>i have created a keypair <code>openstack keypair create heat_key &gt; heat_key.priv</code>
which is recognized by nova <code>nova keypair-list</code> give the following output :</p>

<pre><code>+----------+------+-------------------------------------------------+
| Name     | Type | Fingerprint                                     |
+----------+------+-------------------------------------------------+
| heat_key | ssh  | 0b:7a:36:20:e2:e3:19:3b:ab:a1:95:ac:67:41:67:d7 |
+----------+------+-------------------------------------------------+
</code></pre>

<p>this is my simple HOT template :</p>

<pre><code>heat_template_version: 2013-05-23

description: Hot Template to deploy a single server

parameters:
  image_id:
    type: string
    description: Image ID
  key_name:
    type: string
    description: name of keypair to enable ssh to the instance

resources:
  test_stack:
    type: OS::Nova::Server
    properties:
      name: ""test_stack""
      image: { get_param: image_id }
      flavor: ""ds1G""
      key_name:{ get_param: key_name }

outputs:
  test_stack_ip:
    description: IP of the server
    value: { get_attr: [ test_stack, first_address ] }
</code></pre>

<p>when i try to create the stack </p>

<pre><code>openstack stack create -t myTemp.hot --parameter key_name=heat_key --parameter image_id=trusty-server-cloudimg-amd64-disk1 test_stack
</code></pre>

<p>i get the following error</p>

<pre><code>ERROR: Property error: : resources.test_stack.properties: : Unknown Property key_name:{ get_param
</code></pre>

<p>i have tried with different versions of templates but i get the same error</p>

<p>any idea why this is happening?</p>
","<p>WORST part about the YAML file is, it is SPACE sensitive, so we need to be really careful while editing or copying conetent of HEAT templete. There is no space between ""key_name"" and ""{"" which is why it is failing.</p>

<blockquote>
  <p>key_name:{ get_param: key_pair_name }</p>
</blockquote>

<p>Just put <code>an extra space</code> between these and it will work.  I tested it :-) </p>

<blockquote>
  <p>key_name: { get_param: key_pair_name }</p>
</blockquote>
","529","<openstack><private-key><openstack-heat>","1","0","3","2018-05-25 09:12:37","50450380","0","","","","","2018-05-18 20:22:14",""
"50418750","openstack heat doesn't recognize key_name parameter","<p>hy</p>

<p>i have an openstack deployed on my laptop. i'm trying to create a stack with heat.</p>

<p>i have created a keypair <code>openstack keypair create heat_key &gt; heat_key.priv</code>
which is recognized by nova <code>nova keypair-list</code> give the following output :</p>

<pre><code>+----------+------+-------------------------------------------------+
| Name     | Type | Fingerprint                                     |
+----------+------+-------------------------------------------------+
| heat_key | ssh  | 0b:7a:36:20:e2:e3:19:3b:ab:a1:95:ac:67:41:67:d7 |
+----------+------+-------------------------------------------------+
</code></pre>

<p>this is my simple HOT template :</p>

<pre><code>heat_template_version: 2013-05-23

description: Hot Template to deploy a single server

parameters:
  image_id:
    type: string
    description: Image ID
  key_name:
    type: string
    description: name of keypair to enable ssh to the instance

resources:
  test_stack:
    type: OS::Nova::Server
    properties:
      name: ""test_stack""
      image: { get_param: image_id }
      flavor: ""ds1G""
      key_name:{ get_param: key_name }

outputs:
  test_stack_ip:
    description: IP of the server
    value: { get_attr: [ test_stack, first_address ] }
</code></pre>

<p>when i try to create the stack </p>

<pre><code>openstack stack create -t myTemp.hot --parameter key_name=heat_key --parameter image_id=trusty-server-cloudimg-amd64-disk1 test_stack
</code></pre>

<p>i get the following error</p>

<pre><code>ERROR: Property error: : resources.test_stack.properties: : Unknown Property key_name:{ get_param
</code></pre>

<p>i have tried with different versions of templates but i get the same error</p>

<p>any idea why this is happening?</p>
","<p>I was able to do it by providing the details in parameters . PFB Sample script which worked for me.</p>

<pre><code>heat_template_version: 2016-10-14

description: Admin VM - Test Heat
parameters:
  image_name_1:
    type: string
    label: Centos-7.0
    description: Centos Linux 7.0
    default: Centos-7.0
  network_id_E1:
    type: string
    label: 58e867ce-841c-48cf-8116-e72d998dbc89
    description: Admin External Network
    default: Admin
  network_id_E1:
    type: string
    label: 4f69c8e5-8f52-4804-89e0-2c8232f9f3aa
    description: Internal-1 Network
    default: SR-IOV Interface
  network_id_I2:
    type: string
    label: 28120cdb-7e8b-4e8b-821f-7c7d8df37c1d
    description: Internal-2 Network
    default: Internal-2
  KeyName:
    type: string
    default: IO_Perf_Cnt
    description: Name of an existing key pair to use for the instance
    constraints:
      - custom_constraint: nova.keypair
        description: Must name a public key (pair) known to Nova
resources:
  AdminVM1:
    type: OS::Nova::Server
    properties:
      availability_zone: naz3
      image:  { get_param: image_name_1 }
      flavor: 4vcpu_8192MBmem_40GBdisk
      key_name: { get_param: KeyName }
      networks:
        - network: { get_param : network_id_E1 }
</code></pre>
","529","<openstack><private-key><openstack-heat>","1","0","3","2018-05-25 09:12:37","50450380","0","","","","","2018-05-18 20:22:14",""
"17060757","RSA Encryption via C# privatekey xml access","<p>I used this article <a href=""http://www.dotnetspider.com/resources/692-RSA-Encryption-C.aspx"" rel=""nofollow"">RSA Encryption in C#</a> and it's perfectly working fine ...
But I think there is a security problem .
if we want to use this method,we must put xml files in web root directory and anyone can access these keys...
how can we prevent this problem ? </p>
","<p>The emphasis of the article is about how to use asymmetric encryption (RSA) and an example in C#.  Key management is, really, another (big) topic.  </p>

<p>On windows, there are <a href=""http://msdn.microsoft.com/en-us/library/f5cs0acs%28v=vs.80%29.aspx"" rel=""nofollow"">key containers</a> where you can save private keys and then set user permissions on who can read/write/modify the key.</p>

<p>You can then <a href=""http://msdn.microsoft.com/en-us/library/yxw286t2%28v=vs.80%29.aspx"" rel=""nofollow"">administer the import and export</a> of the keys in order to move them between machines.</p>

<p>As you point out, key management is vital to design a secure system.  There are many solutions that vary in complexity and cost.</p>
","528","<c#><xml><encryption><rsa><private-key>","1","0","1","2013-06-12 08:37:40","17061100","0","","","","","2013-06-12 08:17:31",""
"41222664","How can a HDInsight cluster using SSH public key be visible to multiple users?","<p>We in a team currently have 2 different Microsoft Azure accounts.</p>

<p>I created a HDInsight cluster and it seems to be visible to all the users.</p>

<p>But have a question which seems a bit confusing. If a HDInsight cluster is created using SSH Public Key how can this be shared across multiple users, since the Private Key is supposed to be available only on a single machine.</p>

<p>Any insights in this regard is very much appreciated</p>
","<p>SSH Public key is used for accessing the cluster not for creating the cluster.  A cluster is created under an Azure Subscription, anybody share the same Azure subscription can see the cluster. Unless it is a secured HDInsight cluster, a cluster has a HTTP user account (by default the username is admin), and one or more ssh user accounts. These accounts are used to access HDInsight clusters.</p>
","527","<azure><ssh-keys><private-key><hdinsight>","2","0","2","2016-12-20 04:11:52","","0","","1900290","","2016-12-19 13:05:23","2016-12-19 12:31:44",""
"41222664","How can a HDInsight cluster using SSH public key be visible to multiple users?","<p>We in a team currently have 2 different Microsoft Azure accounts.</p>

<p>I created a HDInsight cluster and it seems to be visible to all the users.</p>

<p>But have a question which seems a bit confusing. If a HDInsight cluster is created using SSH Public Key how can this be shared across multiple users, since the Private Key is supposed to be available only on a single machine.</p>

<p>Any insights in this regard is very much appreciated</p>
","<p>If multiple users want to SSH to a cluster created with SSH Public Key, there's no way around sharing the Private Key (which is, as you said, generally a bad practice). Alternative is to provision the cluster with SSH password that all users know.</p>
","527","<azure><ssh-keys><private-key><hdinsight>","2","0","2","2016-12-20 04:11:52","","0","","1900290","","2016-12-19 13:05:23","2016-12-19 12:31:44",""
"20898093","How to get private key with asn format from pfx?","<p>How to get private key with asn format from pfx? I need to get the private key with asn format to put to Qt's variable QSslKey to connect https server.</p>

<p>I have to use Win32 Api to do it, and I can't use OpenSSL to transform it.</p>

<p>First I try to get the private key directly:</p>

<pre><code>1.CertOpenSystemStore(NULL, _T(""MY""))
2.CryptAcquireCertificatePrivateKey(...)
3.CryptGetUserKey(...)
4.CryptExportKey(...)
</code></pre>

<p>But the private key I have got, I don't know how to use it. </p>
","<p><strong>Warning</strong> : This is not the exact answer for your question, but i hope it will give you some help towards what you want to acheive</p>

<p>Based on my experience, Windows crypto APIs are designed to use the private key within the certificate store rather than export the key outside, unless you are using CryptoAPI standard functions like PFXExportCertStoreEx ().</p>

<p>CryptExportKey function gives the private/public key pair in a key blob structure which you have to convert to the format you want. The closest thing i have ever seen this being being done is in</p>

<p>Openssl engine for Windows, <strong>filename : e_capi.c</strong></p>

<p>refer to the function</p>

<pre><code> **capi_load_privkey() and subfunction capi_get_pkey()**
</code></pre>

<p>Here conversion of the Key blob to OpenSSL compatible structure is done.
Hope this helps</p>
","525","<visual-c++><private-key><cryptoapi><pfx>","0","1","1","2014-01-07 04:13:59","20953239","0","","608639","","2014-01-07 04:13:59","2014-01-03 06:41:42",""
"56594968","Extract private key and certificate from an android application","<p>I'm new to reverse engineering, I've never developed an android application before and I'm trying to extract from an android application the certificate it's using to authenticate to the server.</p>

<p>One of the answers to this <a href=""https://security.stackexchange.com/questions/63462/using-client-certificate-to-authenticate-an-app"">post</a> mentions that extracting a private key from an apk file is indeed a possible thing.</p>

<p>This <a href=""https://stackoverflow.com/questions/13278431/retrieve-private-key-for-existing-android-app"">post</a> says that unlesss we have the original keystore file of the application we won't be able to extract the private key. Is it possible to get the original <a href=""https://stackoverflow.com/questions/6849558/what-is-android-keystore-file-and-what-is-it-used-for"">keystore file</a>? Most of the <a href=""https://stackoverflow.com/questions/4459719/android-i-lost-my-android-key-store-what-should-i-do"">posts</a> seem to agree on the fact that this is impossible!</p>

<p>I've decompiled the application I'm interested in, and I retrieved the CERT.RSA from it, but I don't know if this can help me extract the certificate and the private key from the application. What can we do with the CERT.RSA file anyways?</p>

<p>I know that an android application is accessible to anyone from the google play store, so if what I'm trying to do is possible anyone could extract the certificate and private key and hack any application, but I just want to know if there were some specific tips/hacks, a good tutorial or just an indication of where to start off?</p>

<p>Here is the pcap I get when I send a request to the server that the app communicates with:
<a href=""https://i.stack.imgur.com/yd0p4.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/yd0p4.png"" alt=""enter image description here""></a></p>

<p><code>10.0.0.1</code> is the client IP address and <code>192.168.10.211</code> is the server's IP address, and we can see that the client is sending 2 certificates to the server during the handshake session, so where do these certificates come from? are they hardcoded in the application?</p>

<p><strong>UPDATE</strong></p>

<p>As you can see on the pcap file, the client does send a certificate to the server during the handshake session, so I spent the last few days trying to retrieve it and use it to forward a request to my server.</p>

<p>I've finally managed to retrieve the certificate, the problem is I don't know how can I use it to get the job done.</p>

<p>Here is exactly what I did:</p>

<p>This is the java code that logs the certificate and the password that the client uses during the handshake protocol:</p>

<pre><code>    public static native byte[] getCplusPKCS12Cert();

    public static native byte[] getCplusPKCS12Pass();

    static {
        System.loadLibrary(""cplusnative"");
    }

    public static SSLSocketFactory a() {
        SSLSocketFactory sSLSocketFactory = null;
        SSLContext instance = SSLContext.getInstance(""TLS"");
        byte[] cplusPKCS12Cert = getCplusPKCS12Cert();
        String s = Base64.getEncoder().encodeToString(cplusPKCS12Cert);
        Log.d('certificate',s);
        byte[] cplusPKCS12Pass = getCplusPKCS12Pass();
        Log.d('password',cplusPKCS12Pass);        
        return sSLSocketFactory;
    }
</code></pre>

<p>This allows me to get the certificate which is a PKCS12 certificate that's secured with a password which is logged to the terminal too when I launch:<code>$ adb logcat</code></p>

<p>This is what I get:</p>

<p>certificate:</p>

<pre><code>MIIQuQIBAzCCEH8GCSqGSIb3DQEHAaCCEHAEghBsMIIQaDCCCx8GCSqGSIb3DQEHBqCCCxAwggsM
AgEAMIILBQYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQYwDgQIYreCShA7AXACAggAgIIK2G6f/joD
/1VqmZGehnd4f6UQ89fDrRUJ1tugG3ncL6ewz8iD/viVbdDtYD2+CYQaXAu2jx4ePRw9ohippdK3
pQLPPDzjzN7p4RmmsdCc3F8lVEmVkDq2IRzB1BSmZ3HK6PU5v5BvUQmIqZpijUiLCLdn7dKNTyvj
FFKDfGS0oy5JVYr+O5WS1CqxfafDtwrX+iCiHMzDulGYVldb9+FHV8SMKkiiwjszih3+hgo+S6DV
a3Cyfir3KEa9G2MBh2VkeQgCQdw893WAyFbIwHdB9QWWkwSWk4FGCtXP4gZ0Vjprv0tRydxnAcxp
ish5b5vmG0uMtguRC2criPAyFhW1NlT2TqzlX/mJW+shdh2FRvSyGlWqzcPdcT8Uks8BnZHpYOZV
P9LbYVnO0X7bEAnNw6lsmbL4jxPJhAXGXX16vaXcCWLF+s64qFG6j/Jp61Vf6MxJWiqaC2AWLIVf
dh9FJjQlvKtoX04uK9abYdBEvJ/J3u+/YIO7EIPiVwet1C23PRahybAQuGIXXHkk23rSDQ2AaIwn
NBCBmW+mv2RuraS5KOm7Lk/9a9jWEWbjTYIMYSiy0PUFjhiZjjf3F1E4OqHGhbmCn3uhiYBGUXLR
D8D33R9kMpzg1CAKq5ZOOyMkcNy2TWiWFB0ykQNuaPoOaoiXtsJiGEM/9ejhFQzOB28GiE3DG7xR
fOb/BQTgjPzzAtfs1yXalzWu9CgguVZ/7/wL9sQVO29BWYwZQvbizEGczmPcHnzK4ft81bK1Ap4j
ZDvqSEfOBbH6j2BNw1d9hPUF/kjaccm/2jKkJTG4zQSz7RzxNs3w+QrYryc5sx8sQgcnYyGemiri
zHoNahbQU9RIzjP3lE0IjTuYl//DVXlVMXMu6JuLGwlC1F5wZ108NH1gUBC/Hepz8PXbwqB+exuS
ouhOeub+MEHXNIaUoBpwaH+68ezDh7EAId9ytZXkiDWO9XMJYvfDIcJHoAKSjEYpnMjr3C9FbUpM
Dm4Bzu2eDOPR5B9T3oXH+HUDlSn6wERxNd79FgWuyUljZ2kQXIPLlKEgcCulAszHQeLEYgh/vbnw
j/4lZ+LNehI6qyAphfEr1WOSfbVVGrZe0ekUDHi0hEifYm3sVwoiJHDE4Z0Qa+xHmGohVPrlvELN
hcG7K1+Hd+MuNgTNAwxj40ix3qGQKEDfXbUXJXbCPu3uLpkFTTWLj9WZKVKM2nvcACi5KpIfuyg2
6HJzRkDB7n58ZFZSm717pVudrKEyCh02d0AZcDGFUzEZdRmr8XYjCcZHh17Q0pBjMSKQ9W99fP/D
sOhX3rLSvx4Z7ox53CuPKGBPONE3wseL7LlPcGoo68yeBt8gCwDkwwe/crSyIQalL+a6XSmo5/TG
YV9baF7pdUpR5OujJfX9b2aDgrUxu/SYEunXUmiX8od2YRR465V5b0o9IdFGh3yY/BVpITnv+mAT
p0n29eLvrGv0POl3bIttY7cScvPVus9ETfQ6abqAL8DFadCh6RxenNZl+/sDsY1tQ0crW080kP1f
5l1Rx5M7uzojYRLLAbwecM7s07oXjHdqEFd8cc81SuwlMIYQ3nA/k2eUXcozGZmrVpkXcDm9RExk
/yFxKYVW5hoQUjseLtit3NoyJrIiK4+iC7WVWnQi2lsCdniXleEOLktb4an3wUzYVlFwhlTVsZgT
y9xZ5uQx4KSV56iOf99kcm1LJrbLwyfhTYfmESYqATcgcIxi7TzhFbxNKH5G/8laWmXufgnEwWqR
AtFdAJUYNhYPC3uVwxyiEt27H03PbVnc/KPtjPKd/NDQTM9wsDQR/UKD/bKZxsCU9H/xbPz6TVNJ
PswN7CCo+lwUMdDqaMSrRSo1alpN0oO6wMAjMMDwMCH5oQUBXWRXy2gyynfsBBjNYTAYb0EOliTy
9l7Lkwpb3ox+NfJpEsfbipfl0HHNx9S6Mq1hiNg1lu+TnCdmo17gxg3Jka7derx0NMOJdKBqUCQB
puJi1GAgZGnoM7PgFYCmwT65p1wc0BpzG66UMp460rGqpBYMhd+0Fynu/v4vJF7tU24qit3xvQBf
/ChRYjcOUU05YAy5ULNVo1EOpE+nucSsEkxJFcNfTcSoyTNkFgW5zsF8lAfo1PvS3dht7kIVComS
lk6c8H9yeLsgZDZ0NIiRTrGlWqI87hHyQzuG2Uc+mcDMRsr3E9dl/gDGaEOS8ati8IcXl0ngYdwU
8l6/RA0F3uKpDIwVa0nADtS/bZxqQAuEv6OJLsvqIctJKUsNHfYJ0yobPSEgn4JJE1RK27Z8gk+G
K6o7JryVF8rC8gB7e0jeBuC80buBAM+g8d3gjE2c2CivJV67pgiRZAT2U70uDScC++BGKgHwgulD
wXbktfxHTzQXnjwIgLChaMvcjNQ69xrPqu9d+sSU32FRSHGq6ArgI6IVJjY/m9SvnVy2oGawR2ir
7czyOdAz7eLNARInyfLL5mZNpUiD3gRc7hwVNgIh9M4q61Am4RwTJNaBVfu2bW6t6eGRBUFYwqEk
ML03oYwgzRObyIAvFcb3bPHzoZDmhZqgctTVCTiwUAr2sp7SqWsuccu2RL2jdWVKyvPD9kPxmn+Q
S+Q1yNJHpqhpktUvRmVVRJ75fcIoS5Y2r/KEK6X6azsplWzstG0eJk3yrx5i6KPs+nKhEHuOv4BN
CMEPIBR8oEz5bQ2RaLj9rqJAYlWLKp7pCcH055GFyIMc8ItbwFheVvcvJPbsWJ5eFlMQ+E16XhjA
cgKYpBfrlzgIUPu59JyygM/AJba3gd/BXk9Z38l/80M7IAncFlL3SaSfssjhUk53szTcioqNAs2a
fRTqExQiDYbeP8kvjLLBNmJ42F3v51hKwhLZvaZfdoDO8pwILigZYmUd5G357RQ2E6GgnrqfAl4Q
Ki6YMDfFtAAM4o1DpQXspDZnr9UJB/1xBTpxAdPimYpnHp+F30wqCvSupeDNSz0eQou3guZVeEYA
6wFKfa248swKCB9sfYDoGFN7l37mkjpSXaN1AMV1MWZ42JiVeSwVvqjuMw6dQqpBIwRbjgAknlGf
mp6ZmwSjty06ogDausrZ8YkmkMN3iPa9rHfo+iNXhty9F3BsQPB+sQkNOHtq50n0+7iuY9IQSzj6
c0EqwpS9qgvCwBXOCjvR9qpp4OUqLSu9SMGtFvjqDQRe1ohG+7EBaiYJHYhVYYHF55q/Ix7P/kTB
WVAHY70MY2j2KInt6vahSq0PS/WgtVzBAwXKv/nLNyU04avjsI9kZjUYC2K6Ob+rAStuQV5jbDvm
8kHNcQ4RWrdTPp3VMTl88/bJoO+/Z9F9cdKUykoNZj07MIgm51KTVPNCiV06EK44JUGOKerwkN1f
xPbvB4CmyNLwZy6UX4v0QHD2sREBjyfJzAtKfn3/k/Wuqqt8UWvf1WeAhvigiE2cz4ZAbUdojAUP
sD5irv/v5GZUTsYVHp5HQlqRRYpukFIwo7C5pEXRQyVomqYwggVBBgkqhkiG9w0BBwGgggUyBIIF
LjCCBSowggUmBgsqhkiG9w0BDAoBAqCCBO4wggTqMBwGCiqGSIb3DQEMAQMwDgQIYn82epgM5yEC
AggABIIEyP7HM+//zkp7+oOAjP8CbZGywV47hkOCQq33s9utRgSw3N+YwA5YJhB2m2q05Cgadgci
JEJqJZS4so/F8DNOSrB2ka0qDM5omK8YQ8vS+x+6GON+sXoXxvSpGXWfqywfDtkZGzBC6bX2CQTe
NpsHTCRemeVUeVtWjQJuPK0KmJkWvBg/RfYBjGJ1KnAxSoctVB7eaMsVHR6kdTlRdz6D2TVhEjIK
hk9VIUwBGBAOxpqDrO9dgDBJEADMgtnXsQQ/z5qeZg6nVReubq3/8nD2UvfWUqYYFfnC2fgVDE9w
GbhH/spFPLV/ue9ZNwTzzl+YQJMnrp+ihow1+Cv2uqxQdwXl0o4a06ENG6xN80IOQiS3u2OMNJVR
rkehXxYN4muWC3PRNxK8ZTkBe9Ljeccnh4IQzkLD+85fV7kiVKX14ipmFNXvhi2hhCntz1fe0pra
63Br9jV7GY2X1ZvLf7AlpNxye3epPOZ9Ns+Fd5cVIll1W6ZCluG2OeXN0Mcv28HsoTme7zVyeXkh
iQrtoni8E915JtLRYAZ3JO6bscsxZJzjdTTyqRlYN5BnmmfH1EJ8al6ReYoU/3iyjU/FjclFvhJo
8MrHTbKWG2YELgdPqBR6tcNMikTkobym8pvaURcu9PmA4zSU054vU17DaS1VWAkUjvhDQ7qEovL5
Xptt5uBkCYr6a2aqR/GYCl7iMxp3YsyKDGK/+qEHn9IX5vD7iMqomvcKqJiys+W3dsFDXbh7Q2jQ
R/hubPm0s6k/fI5AxELKT9SEjKOqi0dyhQRLXy6fzjuUtpkAOCKRPyerorbwLISN/mP32KhWWJVc
lTIflwW3B8Ii5J8XcLL728RFFObkXxD8SGEP4bab2LduzwlYBE+McFq1aYKfeL3Cy7buOYT4VElT
F2iSPLRfKHGh+8sxuDp7UBojOmMRWp6lnsR5Y14Prc6P24GtucderyRUC4Jot84xG1vqsZ0KMCE4
5Ld+oJypVdEG1d4k5zVx2UGQ67fWHFBLNzCPAJVd3kzzfw7ZtYgQnm1VFzlYO5ZJSED4Z46PKFI7
hMQOs08ApehV33Ta/6LN28RVfNdyEs5aLwmnrE8Y0VdcL7rLqemWqmVyy1W3Y9SyDelKJ0yo5Un2
cHWX1qkShMEqWth8f5CbFBU7k4kzKHVYcHiTGsUWjA7rwbMdH5IsxHQDvuo41n66JsckjTx8jXRN
J4kqjkjSAR80lCE/dsHrxQG493ri5zRWQ64btKLYQFOZj0FN8DY3SucDApfFk8+ZqB20kItj6cS4
h5YrDddw6FgtChEBAyk3XzIAi69nJnsJuBcd7eXhhyxTmOBz0iHX++wOsWzCIBcHPtznq7MOELNn
z9uPNKn+sCXNisUBX4n/32RkicSeTuWs6dF5LUUEEvafKzElMCMGCSqGSIb3DQEJFTEWBBTOafLz
SINGSd2kDjnMUo76hTjilDAxMCEwCQYFKw4DAhoFAAQUCNGGtHF/dtoHM4vFV6rwwyrOeeAECDWP
wCFEL+hYAgIIAA==

</code></pre>

<p>password: <code>S0xXYUY4QWtSdW9mYW5VAA==</code></p>

<p>I put the certificate in a .p12 file, but I can't open it. </p>

<p>To overcome this issue I print the certificate to android storage: <code>storage/emulated/0/output.p12</code> which created a file containing hexadecimal data. When I use this file to forward a request to my server using python:</p>

<pre><code>$ python3

&gt; from requests_pkcs12 import get
&gt; r = get(url, pkcs12_filename='theOutput.p12', pkcs12_password='S0xXYUY4QWtSdW9mYW5VAA==')
</code></pre>

<p>I get the following error:</p>

<blockquote>
  <p>Error: [('asn1 encoding routines', 'ASN1_get_object', 'header too long')]</p>
</blockquote>

<p>I feel that I have all the pieces of the puzzle and I only need to put them together, so my question is: How can I use the resources (certificate/password) I have retrieved to forward requests to the server?</p>

<p>Thank you.</p>
","","522","<android><certificate><reverse-engineering><private-key><android-keystore>","0","","0","2019-06-26 09:09:46","","17","","11290658","","2019-06-26 09:09:46","2019-06-14 09:10:54",""
"56480160","C#, .Net Core Private key authentication httpClient","<p>We are having a problem with a friend with loading a private certificate to httpHandler.<br>
  We are using .net core and need to host all aplication in the cloud.<br>
Main goal is to get message from SQS and perform some specified API shots after with consumed data.<br>
We have a problem with certificate with public / private key. We have tried I think all the possible ways of loading it.  </p>

<pre><code>    public async Task&lt;HttpResponseMessage&gt; VisitHttps()
    {
        // Proceed for an invalid cerficate
        ServicePointManager.ServerCertificateValidationCallback +=
        (sender, certificate, chain, sslPolicyErrors) =&gt; true;

        // Add the certificate
        var handler = new HttpClientHandler();
        var cert = GetMyCert();
        if (cert != null)
        {
            handler.ClientCertificates.Add(cert);
            handler.ClientCertificateOptions = ClientCertificateOption.Manual;
            handler.SslProtocols = System.Security.Authentication.SslProtocols.Tls12;
            //handler.PreAuthenticate = true;
        }
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12 | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls;


        HttpClient cclient = new HttpClient(handler)
        {
            //BaseAddress = new Uri(""https://someurl.com"")

        };
        cclient.DefaultRequestHeaders.Accept.Clear();
        cclient.DefaultRequestHeaders.Accept.Add(new 

MediaTypeWithQualityHeaderValue(""application/json""));
            return await cclient.GetAsync(""https://some-url.com/ping""); }
</code></pre>

<p>And the method GetMyCert() looks like below:  </p>

<pre><code>string currentLocation = $""{AppDomain.CurrentDomain.BaseDirectory}key-public.crt"";
                //var xcert = new X509Certificate2(currentLocation, ""password"");

                ////var currentLocationPriv = $""{AppDomain.CurrentDomain.BaseDirectory}key-private.crt"";
                ////var privcert = new X509Certificate2(currentLocationPriv, ""password"", X509KeyStorageFlags.EphemeralKeySet);
                //var certStore = new X509Store(StoreName.My, StoreLocation.CurrentUser);
                //certStore.Open(OpenFlags.ReadWrite);
                //certStore.Add(xcert);
                //certStore.Close();
            //return xcert;

            X509Store store = new X509Store(""My"", StoreLocation.CurrentUser);
            X509Certificate2 cert;
            cert = new X509Certificate2(File.ReadAllBytes(currentLocation), ""password"", X509KeyStorageFlags.MachineKeySet);
            bool result = cert.Verify();
            var r2 = result;
            return cert;
</code></pre>

<p>commented lines are variances of what we have tried to do.<br>
We have no idea what else we should try to handle this issue.<br>
Any guidelines would be more than welcome  </p>

<p>EDIT:<br>
I've tried registering this inside startup class but it seems not working anyway. I always got the private key field inside certificate empty. And hasPrivateKey marked as false.</p>

<pre><code> private void CreateCert(IServiceCollection services)
    {
        string currentLocation = $""{AppDomain.CurrentDomain.BaseDirectory}key-public.crt"";
        var certificate = new X509Certificate2(currentLocation, ""password"");
        services.AddHttpClient(""TestClient"", client =&gt;
        {
            client.BaseAddress = new Uri(""https://someurl.com"");
        })
        .ConfigurePrimaryHttpMessageHandler(() =&gt;
            {
            var handler = new HttpClientHandler();
            handler.ClientCertificates.Add(certificate);
            return handler;
        });
    }  
</code></pre>

<p>My Test code:</p>

<pre><code>        [Fact]
    public async Task ShouldPong()
    {
        var testClient = new TestClient()
        {
            BaseAddress = new Uri(""https://someurl.com"")
        };
        var result = await testClient.GetAsync(""/ping"");
        result.StatusCode.Should().Be(HttpStatusCode.OK);
    }
</code></pre>

<p>TestClient:  </p>

<pre><code>public class TestClient : HttpClient
{
    public TestClient()
        :base()
    {

    }

    public TestClient(HttpMessageHandler handler)
        : base(handler)
    {

    }
}  
</code></pre>

<p>EDIT:<br>
The problem was solved when changing the .crt files into a .pfx file. Since the API we was hitting was hosted on nginx.</p>
","<p>I think you're not instantiating the client correctly, accordingly with the doc for <a href=""https://docs.microsoft.com/en-us/aspnet/core/fundamentals/http-requests?view=aspnetcore-2.2#named-clients"" rel=""nofollow noreferrer"">Named Clients</a>.</p>

<p>You will need to receive the IHttpClientFactory in run-time and ask for your named client like this:</p>

<pre class=""lang-cs prettyprint-override""><code> var client = _clientFactory.CreateClient(""TestClient"");
</code></pre>

<p>About testing with Dependency Injection, I believe this Microsoft tutorial can help: <a href=""https://docs.microsoft.com/en-us/aspnet/core/test/integration-tests?view=aspnetcore-2.2"" rel=""nofollow noreferrer"">Integration Tests Asp.Net Core</a>. The deal here is, as the Startup.cs file and the Core Dependency Injector are part of the framework, you need to setup simulate the web application in the test context. And Microsoft provides the WebApplicationFactory for that. </p>

<p><a href=""https://docs.microsoft.com/en-us/aspnet/core/test/integration-tests?view=aspnetcore-2.2#basic-test-of-app-endpoints"" rel=""nofollow noreferrer"">This</a> example demonstrate a test with a httpClient given by the IHttpClientFactory in a simulated web application environment.</p>
","517","<c#><.net><public-key-encryption><private-key>","6","0","2","2019-06-12 10:01:25","56559458","4","","6134278","","2019-06-12 09:59:13","2019-06-06 14:55:34",""
"56480160","C#, .Net Core Private key authentication httpClient","<p>We are having a problem with a friend with loading a private certificate to httpHandler.<br>
  We are using .net core and need to host all aplication in the cloud.<br>
Main goal is to get message from SQS and perform some specified API shots after with consumed data.<br>
We have a problem with certificate with public / private key. We have tried I think all the possible ways of loading it.  </p>

<pre><code>    public async Task&lt;HttpResponseMessage&gt; VisitHttps()
    {
        // Proceed for an invalid cerficate
        ServicePointManager.ServerCertificateValidationCallback +=
        (sender, certificate, chain, sslPolicyErrors) =&gt; true;

        // Add the certificate
        var handler = new HttpClientHandler();
        var cert = GetMyCert();
        if (cert != null)
        {
            handler.ClientCertificates.Add(cert);
            handler.ClientCertificateOptions = ClientCertificateOption.Manual;
            handler.SslProtocols = System.Security.Authentication.SslProtocols.Tls12;
            //handler.PreAuthenticate = true;
        }
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12 | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls;


        HttpClient cclient = new HttpClient(handler)
        {
            //BaseAddress = new Uri(""https://someurl.com"")

        };
        cclient.DefaultRequestHeaders.Accept.Clear();
        cclient.DefaultRequestHeaders.Accept.Add(new 

MediaTypeWithQualityHeaderValue(""application/json""));
            return await cclient.GetAsync(""https://some-url.com/ping""); }
</code></pre>

<p>And the method GetMyCert() looks like below:  </p>

<pre><code>string currentLocation = $""{AppDomain.CurrentDomain.BaseDirectory}key-public.crt"";
                //var xcert = new X509Certificate2(currentLocation, ""password"");

                ////var currentLocationPriv = $""{AppDomain.CurrentDomain.BaseDirectory}key-private.crt"";
                ////var privcert = new X509Certificate2(currentLocationPriv, ""password"", X509KeyStorageFlags.EphemeralKeySet);
                //var certStore = new X509Store(StoreName.My, StoreLocation.CurrentUser);
                //certStore.Open(OpenFlags.ReadWrite);
                //certStore.Add(xcert);
                //certStore.Close();
            //return xcert;

            X509Store store = new X509Store(""My"", StoreLocation.CurrentUser);
            X509Certificate2 cert;
            cert = new X509Certificate2(File.ReadAllBytes(currentLocation), ""password"", X509KeyStorageFlags.MachineKeySet);
            bool result = cert.Verify();
            var r2 = result;
            return cert;
</code></pre>

<p>commented lines are variances of what we have tried to do.<br>
We have no idea what else we should try to handle this issue.<br>
Any guidelines would be more than welcome  </p>

<p>EDIT:<br>
I've tried registering this inside startup class but it seems not working anyway. I always got the private key field inside certificate empty. And hasPrivateKey marked as false.</p>

<pre><code> private void CreateCert(IServiceCollection services)
    {
        string currentLocation = $""{AppDomain.CurrentDomain.BaseDirectory}key-public.crt"";
        var certificate = new X509Certificate2(currentLocation, ""password"");
        services.AddHttpClient(""TestClient"", client =&gt;
        {
            client.BaseAddress = new Uri(""https://someurl.com"");
        })
        .ConfigurePrimaryHttpMessageHandler(() =&gt;
            {
            var handler = new HttpClientHandler();
            handler.ClientCertificates.Add(certificate);
            return handler;
        });
    }  
</code></pre>

<p>My Test code:</p>

<pre><code>        [Fact]
    public async Task ShouldPong()
    {
        var testClient = new TestClient()
        {
            BaseAddress = new Uri(""https://someurl.com"")
        };
        var result = await testClient.GetAsync(""/ping"");
        result.StatusCode.Should().Be(HttpStatusCode.OK);
    }
</code></pre>

<p>TestClient:  </p>

<pre><code>public class TestClient : HttpClient
{
    public TestClient()
        :base()
    {

    }

    public TestClient(HttpMessageHandler handler)
        : base(handler)
    {

    }
}  
</code></pre>

<p>EDIT:<br>
The problem was solved when changing the .crt files into a .pfx file. Since the API we was hitting was hosted on nginx.</p>
","<p>The problem was resolved by creating a .PFX file. The server we were hitting was hosted on nginx that requires .pfx format. The .crt files are PEM certificate that was not valid for nginx.</p>
","517","<c#><.net><public-key-encryption><private-key>","6","3","2","2019-06-12 10:01:25","56559458","4","","6134278","","2019-06-12 09:59:13","2019-06-06 14:55:34",""
"31274628","openpgp.js: generate public key text string from private key text string","<p>Using Javascript and openpgp.js, how can I read private key from text and produce public key?</p>

<p>I'm trying to allow user to input their private PGP key to textbox and using data in that textbox (and passphrase) produce public PGP KEY text.</p>

<p>So far I've managed to read the private key using:</p>

<pre><code>var privateKey = openpgp.key.readArmored(document.getElementById('privkeybox').value).keys[0];
privateKey.decrypt(passphrase);
</code></pre>

<p>I've also found the mysterious <code>privateKey.toPublic(privateKey);</code> function, however, I can't seem to get the whole thing going (produce the <code>BEGIN PUBLIC PGP KEY</code> - line).</p>

<p>If it does affect at all, this is done in browser.</p>
","<p>Posting an answer if someone else seems to need this, to get string form of public key from recently read private key, one can use:</p>

<pre><code>privatekey.toPublic().armor();
</code></pre>
","516","<javascript><private-key><public-key><pki><openpgp.js>","1","4","2","2018-11-27 18:45:57","","0","","595833","","2018-11-27 18:45:57","2015-07-07 16:44:05",""
"31274628","openpgp.js: generate public key text string from private key text string","<p>Using Javascript and openpgp.js, how can I read private key from text and produce public key?</p>

<p>I'm trying to allow user to input their private PGP key to textbox and using data in that textbox (and passphrase) produce public PGP KEY text.</p>

<p>So far I've managed to read the private key using:</p>

<pre><code>var privateKey = openpgp.key.readArmored(document.getElementById('privkeybox').value).keys[0];
privateKey.decrypt(passphrase);
</code></pre>

<p>I've also found the mysterious <code>privateKey.toPublic(privateKey);</code> function, however, I can't seem to get the whole thing going (produce the <code>BEGIN PUBLIC PGP KEY</code> - line).</p>

<p>If it does affect at all, this is done in browser.</p>
","<p>Works great!</p>

<p>privatekey.toPublic().armor();</p>

<p>should be: privateKey.toPublic().armor(); (capital K)</p>

<p>so:</p>

<pre><code>var privateKey = 
openpgp.key.readArmored(document.getElementById('privkeybox').value).keys[0];
privateKey.decrypt(passphrase);

privateKey.toPublic().armor();
</code></pre>

<p>minor nitpic! anyway thanks for posting, certainly helped me.</p>
","516","<javascript><private-key><public-key><pki><openpgp.js>","1","0","2","2018-11-27 18:45:57","","0","","595833","","2018-11-27 18:45:57","2015-07-07 16:44:05",""
"37217664","Bouncy Castle Generating Encryption Keys With Password","<p>I am in the process of writing an application that accesses very sensitive data (in c#). I have a requirement that says that the application will need to be able to generate public/private keys using a passphrase. This is an absolute must. I will also need to keep the old keys around. We are using bouncy castle lib and PGP. I looked through documentation and cannot seem to find a way to generate them with the phrase.</p>

<p><strong>Here is how I am generating them currently:</strong> </p>

<pre><code>var generator = new DsaKeyPairGenerator();
var paramgen = new DsaParametersGenerator();

paramgen.Init(512, 100, new SecureRandom());

var param = new DsaKeyGenerationParameters(new SecureRandom(), paramgen.GenerateParameters());

generator.Init(param);

return generator.GenerateKeyPair();
</code></pre>

<p><strong>Here is how I grab they keys:</strong></p>

<pre><code>var publicKey = new PgpPublicKey(Org.BouncyCastle.Bcpg.PublicKeyAlgorithmTag.Dsa, keys.Public, DateTime.Now);
var privateKey = new PgpPrivateKey(keys.Private, publicKey.KeyId);
</code></pre>

<p>Is there a way to do this whether it be in bouncy castle or any other encryption lib?</p>
","","515","<c#><encryption><bouncycastle><private-key><public-key>","0","","0","2016-05-13 20:14:23","","2","","3159635","","2016-05-13 20:14:23","2016-05-13 19:11:26",""
"51480421","java.security.InvalidKeyException: invalid key format","<pre><code>String distributionDomain = ""d21geuebylb7j1.cloudfront.net"";
    String privateKeyFilePath = ""/Users/Desktop/rsa-private-key.der"";
    String s3ObjectKey = ""small.mp4"";
    String policyResourcePath = ""http://"" + distributionDomain + ""/"" + s3ObjectKey;
    System.out.println(privateKeyFilePath);
    byte[] derPrivateKey = null;
</code></pre>

<p>I am trying to make signed URL for my cloudfront distribution but I am getting invalid key error. I am getting issue with my rsa-private-key.der file. I have made this file from pem file as mentioned in Cloudfront documentation.
Below is my error logs:</p>

<pre><code>Exception in thread ""main"" org.jets3t.service.CloudFrontServiceException: java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: invalid key format
    at org.jets3t.service.CloudFrontService.signUrlCanned(CloudFrontService.java:2148)
    at test.SignedURL.main(SignedURL.java:74)
Caused by: java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: invalid key format
    at java.base/sun.security.rsa.RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:216)
    at java.base/java.security.KeyFactory.generatePrivate(KeyFactory.java:390)
    at org.jets3t.service.security.EncryptionUtil.signWithRsaSha1(EncryptionUtil.java:526)
    at org.jets3t.service.CloudFrontService.signUrlCanned(CloudFrontService.java:2133)
    ... 1 more
Caused by: java.security.InvalidKeyException: invalid key format
    at java.base/sun.security.pkcs.PKCS8Key.decode(PKCS8Key.java:330)
    at java.base/sun.security.pkcs.PKCS8Key.decode(PKCS8Key.java:356)
    at java.base/sun.security.rsa.RSAPrivateCrtKeyImpl.&lt;init&gt;(RSAPrivateCrtKeyImpl.java:91)
    at java.base/sun.security.rsa.RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:75)
    at java.base/sun.security.rsa.RSAKeyFactory.generatePrivate(RSAKeyFactory.java:315)
    at java.base/sun.security.rsa.RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:212)
    ... 4 more
</code></pre>
","<p>I had same issue this solved my issue.</p>

<p>You can try this:</p>

<pre><code>public enum CloudFrontUrlSigner
extends Enum&lt;CloudFrontUrlSigner&gt;
Utility class for generating pre-signed URLs for serving private CloudFront content. All dates must be in UTC. Use Calendar to set the timezone specifically before converting to a Date object, or else use DateUtils to turn a UTC date String into a Date object.
 Protocol protocol = Protocol.http;
 String distributionDomain = ""d1b2c3a4g5h6.cloudfront.net"";
 File privateKeyFile = new File(""/path/to/cfcurlCloud/rsa-private-key.pem"");
 String s3ObjectKey = ""a/b/images.jpeg"";
 String keyPairId = ""APKAJCEOKRHC3XIVU5NA"";
 Date dateLessThan = DateUtils.parseISO8601Date(""2012-11-14T22:20:00.000Z"");
 Date dateGreaterThan = DateUtils.parseISO8601Date(""2011-11-14T22:20:00.000Z"");
 String ipRange = ""192.168.0.1/24"";

 String url1 = CloudFrontUrlSigner.getSignedURLWithCannedPolicy(
              protocol, distributionDomain, privateKeyFile,
              s3ObjectKey, keyPairId, dateLessThan);

 String url2 = CloudFrontUrlSigner.getSignedURLWithCustomPolicy(
              protocol, distributionDomain, privateKeyFile,
              s3ObjectKey, keyPairId, dateLessThan,
              dateGreaterThan, ipRange);
</code></pre>

<p>here is the link of AWS Documentation: <a href=""https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/cloudfront/CloudFrontUrlSigner.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/cloudfront/CloudFrontUrlSigner.html</a></p>
","515","<amazon-web-services><amazon-cloudfront><private-key>","1","1","1","2018-07-24 11:06:29","51497052","3","1","","","","2018-07-23 13:49:15",""
"45715921","download file from sftp using private key in place of password","<p>i want to download file from sftp using private key in place of password. i have a username and sftp login but was not able to find a command. 
I am using curl and trying it for first time. Can someone help me with the command.</p>
","<p>The Key options for curl are:</p>

<p>--key  for a private key. I believe this is for TLS SSH</p>

<p>--pubkey  for SFTP or SCP public key</p>

<p>Put a colon (:) after the username to prevent it from asking for a password when you are using keys.</p>
","514","<curl><download><sftp><private-key>","0","0","1","2017-08-16 14:25:25","","0","","","","","2017-08-16 14:12:30",""
"47619162","Connection to Sftp using private key ruby","<pre><code>require 'net/ssh'
require 'net/sftp'

SREVER = ""roku.staging.com"" # Server name
KEYFILE = ""path_to_privat/id_rsa"" # Path to private key

Net::SFTP.start(SREVER, 'admin', :keys=&gt;[KEYFILE]) do |sftp|
  sftp.mkdir! ""/myfolder/test""
  puts ""Connected to SFTP server""
end
</code></pre>

<p>After ran the code it still ask me password.</p>

<blockquote>
  <p>admin@roku.staging.com's password:</p>
</blockquote>

<p>Could you please help to resolve this</p>
","<p>Try to with this function, I think that your parameters are not ok, try fullfilling this key only a string</p>

<pre><code>  def self.upload_xml(file)
    Net::SFTP.start(
      ""ip"",
      ""user"",
      #password: ""password"", is a comment
      key_data: [],
      keys: ""/private/key/path/rsa_file"",
      keys_only: true,
      verify_host_key: false
    ) do |sftp|
      # do your things for example upload a file
      sftp.upload!(file.document.path,
                   file.document.original_filename)
    end
  end
</code></pre>

<p>and the configuration, the path to your private key should be and absolute path,</p>

<p>also try/verify your private rsa file:</p>

<p>$sftp -i .ssh/ssh-2-rsa user@sftp.ip.net</p>
","514","<ruby><sftp><private-key>","0","0","1","2017-12-03 16:07:28","","2","","368167","","2017-12-03 14:21:55","2017-12-03 14:03:08",""
"22117011","Private key for RSA decryption C++","<p>I've tried to write a function to find the private key for RSA using the Extended Euclidean algorithm, I can't find the error but I really don't want to start again from scratch! For certain values it is correct but for others it isn't and I can't work out why, I really appreciate the help and I'm sorry if this question is too vague (I know that tends to annoy people on here). Can anyone find the error? Thank you very much in advance: </p>

<pre><code>unsigned long long int  modinv(unsigned long long int  u, unsigned long long int  v)
{
    unsigned long long int  inv, u1, u3, v1, v3, t1, t3, q;
    unsigned long long int  iter;

    u1 = 1;
    u3 = u;
    v1 = 0;
    v3 = v;

    iter = 1;

    while (v3 != 0)
    {

        q = u3 / v3;
        t3 = u3 % v3;
        t1 = u1 + q * v1;

        u1 = v1; v1 = t1; u3 = v3; v3 = t3;
        iter = -iter;
    }

    if (u3 != 1)
        return 0;
    if (iter &lt; 0)
        inv = v - u1;
    else
        inv = u1;
    return inv;
}
</code></pre>
","<p>Do not use unsigned values here because it invalidates the algorithm. So instead of <code>unsigned long long int</code> you could use <code>long long int</code>. Also note that <code>iter = -iter</code> will not work as you intended when using unsigned values because it will underflow. Let's say you have <code>iter = 1</code> then <code>-iter</code> won't be <code>-1</code> but instead <code>18446744073709551615</code> (=2^64 - 1). The check for <code>iter &lt; 0</code> will always be false, too.</p>

<p>For any real life applications you will need much larger numbers than you can fit into 64-bit types. There are many ways of doing this but <a href=""https://gmplib.org"" rel=""nofollow"">GMP</a> (GNU Multiple Precision lib) has <code>mpz_powm(r, base, exp, mod)</code> that you can use in the decryption phase. More info <a href=""https://gmplib.org/manual/Integer-Exponentiation.html#Integer-Exponentiation"" rel=""nofollow"">here</a>.</p>

<p>So basically if you had your cipher text <code>c</code> and your private key defined as <code>n</code> (=p*q) and <code>d</code> then you could decrypt <code>c</code> into plaintext <code>m</code> like this:</p>

<pre><code>#include &lt;gmp.h&gt; // requires GMP lib to be installed.
void rsaDecrypt(const mpz_t c, const mpz_t n, const mpz_t d, mpz_t m) {
  mpz_init(m);
  mpz_powm(m, c, d, n); // m = c^d (mod n)
}
</code></pre>
","513","<c++><encryption><rsa><private-key>","0","1","1","2014-03-01 23:00:09","22117594","0","","","","","2014-03-01 16:30:06",""
"28971728","Import Private Key to keychain as non-extractable objective C OSX app","<p>I have a shell script that imports a p12 to a User's keychain. For instance an example from the command line on OSX would be: </p>

<pre><code>""security import /tmp/somecertificate.p12 -k ~/Library/Keychains/login.keychain -P somepass -x ""
</code></pre>

<p>The -x flag marks the private key as non exportable, and it works.  </p>

<p>Is there a way to do this in objective C ? I am currently writing an OSX app, and want to do this natively with the Security Framework. I  have this code which works and imports the P12 to the keychain, but I can't figure out how to mark the private key as non-extractable. My objective C for p12 import is as follows:</p>

<pre><code>NSString * password = @""somepassword"";
NSString * path = [[NSBundle mainBundle]
                   pathForResource:@""somecertificate"" ofType:@""p12"" inDirectory:@""/tmp""];

// prepare password
CFStringRef cfPassword = CFStringCreateWithCString(NULL,
                                                   password.UTF8String,
                                                   kCFStringEncodingUTF8);
const void *keys[]   = { kSecImportExportPassphrase };
const void *values[] = { cfPassword };
CFDictionaryRef optionsDictionary
= CFDictionaryCreate(kCFAllocatorDefault, keys, values, 1,
                     NULL, NULL);

// prepare p12 file content
NSData * fileContent = [[NSData alloc] initWithContentsOfFile:path];
CFDataRef cfDataOfFileContent = (__bridge CFDataRef)fileContent;

// extract p12 file content into items (array)
CFArrayRef items = CFArrayCreate(NULL, 0, 0, NULL);
OSStatus status = errSecSuccess;
//import p12
status = SecPKCS12Import(cfDataOfFileContent,
                         optionsDictionary,
                         &amp;items);
</code></pre>

<p>Thanks for any info you can provide. </p>
","","512","<objective-c><macos><keychain><private-key>","1","","0","2015-03-10 18:47:23","","0","","","","","2015-03-10 18:47:23",""
"48549458","ruby convert string private key back to openssl class for encryption","<p>I have a situation where the private key is stored as a string in the database.</p>

<pre><code>&gt; private_key
&gt; =&gt; ""-----BEGIN RSA PRIVATE KEY-----\nMIIEpk9KuPZrNC+pvJzohwXAwJwC8kIZaidMsKbOmyAz\nZBXKkUZ+gxDu4bd7InKwvjhufmnby0X+XcoPDfn/AoGAViYhxIGcQkVnvSzmdXQS\ngAgyl9LLB8MIM+q31Aflv0Vg31qjzxBb1p6Am+TwSE5rl+IWULlUAGPNAp5OLztb\nHY4DVNyfRspd5LiOoVhsqCVitFcV0\nSwZFd4EmgDlWgZ6F0Dkv/RdIzWcQNOqwQm9OXoEl30D7cbHbbDbncGNJ4oPHaNta\no3mNu4MCgYB47e229eaJIaVOTkzY2arqiq8hVbIIrqHv8bRtK93TbCM8APow7Hrd\nlUac3SGmlDbFZ486O7PfT2bblf2u4xpcvKPN6ApHpdegoN1eCwqthWnXCMETbWaM\nqavVjCaqGFSYOnCxqoiURtiQkW+u3FJaMi4joZqhU34vAnV9mn9G9w==\n-----END
&gt; RSA PRIVATE KEY-----\n
</code></pre>

<p>""</p>

<p>How do i convert to OpenSSL:Pkey class.</p>

<pre><code>#&lt;OpenSSL::PKey::RSA:0x007fd98c80bc28&gt;
</code></pre>

<p>The reason I want to do this so that I can encrypt it as follows.</p>

<pre><code>cipher = OpenSSL::Cipher.new 'DES-EDE3-CBC'

key_secure = key.export cipher, pass_phrase
</code></pre>

<p>Since it is a string I get this error:</p>

<pre><code>undefined method `export' for #&lt;String:0x007fdb832f6b40&gt;
</code></pre>
","<blockquote>
  <p>How do i convert to OpenSSL:Pkey class</p>
</blockquote>

<pre><code>require 'openssl'

key = OpenSSL::PKey::RSA.generate(1024, 3)
encoded_str = key.to_s  #This is your string
puts encoded_str

puts '*' * 30

key = OpenSSL::PKey::RSA.new encoded_str
puts key.to_s  #Should be the same as your string

puts '*' * 30

cipher = OpenSSL::Cipher.new 'DES-EDE3-CBC'
pass_phrase = ""hello world""
pem_encoded_str = key.export cipher, pass_phrase
puts pem_encoded_str


--output:--
-----BEGIN RSA PRIVATE KEY-----
MIICWwIBAAKBgQCtyWCVI8dkpH9ol9q3Ve5GUpOCvrMZWKIiMTOSn6WsQQOZU1Lw
Xb2hBjiSWA2bh1REPaW/+OwGfxHruPv80/J/4vwpezPagprcUSOdfi1coD+X4Cdd
Sd4Y81i11kjlHLVNVYtU8eDS5D8LeotIuG4Lq65HoNrHZC7DCygvBmu1cwIBAwKB
gHPblbjChO3C/5sP5yTj9C7ht6x/IhDlwWwgzQxqbnLWAmY3jKA+fmtZeww6s70E
4tgpGSql8q7/YUfQp/3ioal9EhShxMj4GlgcBxBC9RCsQd7AhF/iOVD0ZihTJib1
1A1M46jp1GagybKO+bRao/eMHr6S6pWjNHdZAxAatqDbAkEA5an7qRz3MBNJespJ
p83dYqbO2uZxjMTT24+KWjJfS7bbH3Kr9vEeZHkbptjSasjk1Gf86UNE4oC6LuBU
mSco/QJBAMG3Dt9vtd5gDqxOu3Hv5js1+uR6W+nDS6kv7v9dS2BAXkLDK5wxGo6X
Y/0758WvM4UYLNs3ogzfVdbDQkUymy8CQQCZG/0baKTKt4ZR3DEaiT5BxInnREuz
LeKSX7GRduoyeedqTHKkoL7tphJvOzbx20M4RVNGLNiXAHwfQDhmGhtTAkEAgSS0
lPUj6ZVfHYnSS/VEJ3lR7abn8SzdG3VJ/5OHlYA+1yzHvXYRtGTtU31FLnTNA2Vz
PM/BXeo5OdeBg3cSHwJAcrIdUXxPfk21dDymgmTMkj4EsLhaO6/5nGpElt2JNQ8S
tfgUq8Z2b5XXtm6QJRxAoMYFvfxMfkH93ChpHQjVVg==
-----END RSA PRIVATE KEY-----
******************************
-----BEGIN RSA PRIVATE KEY-----
MIICWwIBAAKBgQCtyWCVI8dkpH9ol9q3Ve5GUpOCvrMZWKIiMTOSn6WsQQOZU1Lw
Xb2hBjiSWA2bh1REPaW/+OwGfxHruPv80/J/4vwpezPagprcUSOdfi1coD+X4Cdd
Sd4Y81i11kjlHLVNVYtU8eDS5D8LeotIuG4Lq65HoNrHZC7DCygvBmu1cwIBAwKB
gHPblbjChO3C/5sP5yTj9C7ht6x/IhDlwWwgzQxqbnLWAmY3jKA+fmtZeww6s70E
4tgpGSql8q7/YUfQp/3ioal9EhShxMj4GlgcBxBC9RCsQd7AhF/iOVD0ZihTJib1
1A1M46jp1GagybKO+bRao/eMHr6S6pWjNHdZAxAatqDbAkEA5an7qRz3MBNJespJ
p83dYqbO2uZxjMTT24+KWjJfS7bbH3Kr9vEeZHkbptjSasjk1Gf86UNE4oC6LuBU
mSco/QJBAMG3Dt9vtd5gDqxOu3Hv5js1+uR6W+nDS6kv7v9dS2BAXkLDK5wxGo6X
Y/0758WvM4UYLNs3ogzfVdbDQkUymy8CQQCZG/0baKTKt4ZR3DEaiT5BxInnREuz
LeKSX7GRduoyeedqTHKkoL7tphJvOzbx20M4RVNGLNiXAHwfQDhmGhtTAkEAgSS0
lPUj6ZVfHYnSS/VEJ3lR7abn8SzdG3VJ/5OHlYA+1yzHvXYRtGTtU31FLnTNA2Vz
PM/BXeo5OdeBg3cSHwJAcrIdUXxPfk21dDymgmTMkj4EsLhaO6/5nGpElt2JNQ8S
tfgUq8Z2b5XXtm6QJRxAoMYFvfxMfkH93ChpHQjVVg==
-----END RSA PRIVATE KEY-----
******************************
-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: DES-EDE3-CBC,73C71A1D7325EAAF

2sKeayKdmnDxHyYs35ydnt/ZRUUzgVvVl4c9ohxZWurHQwQDNAZ7j1WE+/JNo44y
dlY9LPW2PfT4fw5yC/k0uN1YPTgtOBKL9jpKfI8pcpea2fyAJzDXu8bdvWiWDnF2
9pjO/ghe1pZNdfU+yGkweIr6qQH4b6piWPtvf0VBBQnjqq7OqFDYYp1eXVal27+B
VaZLYk1nWDInUPE7bEEHY5VZLVRNg/wCQ0qPoCDbBXb3cyss9pg7ysrNNi6Fa0Yq
Z00GYK1yENDnH4mJj9VzDAC1yV8592SdW1qDzDR0QCtQ5BenWunAS61R7wyLkS0L
vCahavVGW9etAcwXUy12qysNz8MnnGT75/aTqMx6Eu1oj7Lu4orQlz7qNcb7Mtwe
5tLCRW59PT57K52KSJNjKJpAUrSZ9kJCwt9Mk+zAiRkIg48DztuF0STJ1U0qAN9V
s61tVHJAPWl9Th7xxGt6pfLErOpikqcte6tFnaMcBRqzeCVXcQfDLMY/RZJgW+34
CM54FyRH8cGDiajSnpGMsCNM3y41Mk+02yrwVA4jOvXq4yrCjCghL8SnZ9FkTTuh
6+Uuc2B2DFVbiOwDRCgaIo9jLgEu4Et400QQMnllE9RxDlFIgnCoXP8A9fhNRZu5
zuH+1K7NpKxqLIqldZdiPKLsXS/rE7CFi/u1RVcHidCnpKR2aPO47ntpLUK9jcHY
ZRpa0hoNY/5mkMgth5qJL6bD6YDkE+6Spsdpxq2f11HK9IuyiTvIav2BVHbIrXcM
voMhuSWVW9RPphY9rVxesZWmHN0VPBwwVqNg5KnbLv4=
-----END RSA PRIVATE KEY-----
</code></pre>
","510","<ruby><openssl><private-key><ruby-2.1>","0","1","1","2018-02-01 04:26:10","48551171","5","1","421705","","2018-01-31 23:05:20","2018-01-31 18:52:01",""
"4002317","Can I update existing apps in the app store if I have rejected my distribution certificate because I lost my private key?","<p>I have done A LOT of looking around on the internet and just cannot find the answer to this question. I lost my private key, and so I have rejected and re-assigned new certificate/key combo, but am having issues submitting app updates to apps signed with the old key with my new key.</p>

<p>Is it possible to update an existing app with a newly replaced private key that is different than the one it was originally signed with?</p>
","<p>Yes, you should be able to submit app updates with a different distribution certificate. I've done it on multiple occasions. What specific issues are you having?</p>
","510","<iphone><app-store><distribution><code-signing><private-key>","3","1","1","2011-05-20 16:57:56","","1","","","","","2010-10-23 03:27:21",""
"46921430","OpenSSL certificate creation and pem/cer output","<p>There are a few similar question here, but none of them answered my case. I am attempting to get an SSL certificate to work in CURL over HTTPS for a web service.</p>

<p>First, I created the csr</p>

<pre><code>openssl req -newkey rsa:2048 -keyout myserver_private.key -out myserver_pkcs10.csr
</code></pre>

<p>I have both of these files on my linux box.</p>

<p>I sent the csr file to be signed by the web service and they sent back:</p>

<p><code>signingauthority_Root_CA.crt</code>, <code>myserver_pkcs10.csr</code>, <code>theirserver_CA.crt</code></p>

<p>For my <code>curl_setopt($ch, CURLOPT_SSLCERT, ""?.pem"");</code> I now need the .pem file. How do I create this and from which file? <code>theirserver_CA.crt</code>?</p>

<p>Do I also need to use <code>curl_setopt($ch, CURLOPT_CAINFO, ""?.cer"");</code> and if so, how do I create this .cer file? Is this the intermediary aka signing authority?</p>
","<p>Open the <code>*.crt</code> files with a text editor. If they are PEM, they wil contain blocks of Base64 text delimited with <code>-----BEGIN CERTIFICATE-----</code> and <code>-----END CERTIFICATE-----</code>.</p>

<p>If that's the case, simply rename the file.</p>

<p>If the file is a binary file it is DER.  To convert to Base64 (PEM) use:</p>

<pre><code>openssl x509 -in &lt;DER filename&gt; -outform PEM -out &lt;PEM filename&gt;
</code></pre>

<p>The <code>CURLOPT_CAINFO</code> will be <code>theirserver_CA.crt</code></p>

<p>I'd have thought the CA would have sent back <code>myserver.crt</code> too, which would be used for <code>CURLOPT_SSLCERT</code>.</p>

<p>Use:</p>

<pre><code>openssl x509 -noout -subject -issuer -in &lt;PEM file&gt;
</code></pre>

<p>to view the subject and issuer of each certificate in order to work out what you've been sent.</p>
","509","<curl><https><private-key><public-key><php-openssl>","0","1","1","2017-10-25 09:50:05","","0","","608639","","2017-10-25 09:50:05","2017-10-24 23:17:30",""
"51928381","How to encrypt data with RSA private key in C#","<p>I'm working with a third party API which developed in Java. It requires to encrypt data with given RSA private key to generate a signature. But '<code>RSACryptoServiceProvider'</code> in C# only allow encrypt by a public key.</p>

<p>So far I have tried to use 'BouncyCastle' to encrypt data with a private key. But the API response with an error. It says, <code>'verify signature failed'</code>.</p>

<p>Hot to fix this, any ideas?</p>

<p>BTW:
I use below code to convert Java private key to C# xml private key. Does this correct?</p>

<pre><code>RsaPrivateCrtKeyParameters privateKeyParam = (RsaPrivateCrtKeyParameters)PrivateKeyFactory.CreateKey(Convert.FromBase64String(priKey));
return string.Format(""&lt;RSAKeyValue&gt;&lt;Modulus&gt;{0}&lt;/Modulus&gt;&lt;Exponent&gt;{1}&lt;/Exponent&gt;&lt;P&gt;{2}&lt;/P&gt;&lt;Q&gt;{3}&lt;/Q&gt;&lt;DP&gt;{4}&lt;/DP&gt;&lt;DQ&gt;{5}&lt;/DQ&gt;&lt;InverseQ&gt;{6}&lt;/InverseQ&gt;&lt;D&gt;{7}&lt;/D&gt;&lt;/RSAKeyValue&gt;"",
    Convert.ToBase64String(privateKeyParam.Modulus.ToByteArrayUnsigned()),
    Convert.ToBase64String(privateKeyParam.PublicExponent.ToByteArrayUnsigned()),
    Convert.ToBase64String(privateKeyParam.P.ToByteArrayUnsigned()),
    Convert.ToBase64String(privateKeyParam.Q.ToByteArrayUnsigned()),
    Convert.ToBase64String(privateKeyParam.DP.ToByteArrayUnsigned()),
    Convert.ToBase64String(privateKeyParam.DQ.ToByteArrayUnsigned()),
    Convert.ToBase64String(privateKeyParam.QInv.ToByteArrayUnsigned()),
    Convert.ToBase64String(privateKeyParam.Exponent.ToByteArrayUnsigned()));
</code></pre>
","<p>I suppose you have to use:</p>

<ul>
<li>a Private Key to decrypt encrypted data or sign data, and </li>
<li>a Public Key to encrypt data or verify a signature.</li>
</ul>
","504","<c#><.net><encryption><private-key>","0","1","2","2018-08-29 14:49:03","","4","","8356523","","2018-08-20 10:13:28","2018-08-20 10:05:12",""
"51928381","How to encrypt data with RSA private key in C#","<p>I'm working with a third party API which developed in Java. It requires to encrypt data with given RSA private key to generate a signature. But '<code>RSACryptoServiceProvider'</code> in C# only allow encrypt by a public key.</p>

<p>So far I have tried to use 'BouncyCastle' to encrypt data with a private key. But the API response with an error. It says, <code>'verify signature failed'</code>.</p>

<p>Hot to fix this, any ideas?</p>

<p>BTW:
I use below code to convert Java private key to C# xml private key. Does this correct?</p>

<pre><code>RsaPrivateCrtKeyParameters privateKeyParam = (RsaPrivateCrtKeyParameters)PrivateKeyFactory.CreateKey(Convert.FromBase64String(priKey));
return string.Format(""&lt;RSAKeyValue&gt;&lt;Modulus&gt;{0}&lt;/Modulus&gt;&lt;Exponent&gt;{1}&lt;/Exponent&gt;&lt;P&gt;{2}&lt;/P&gt;&lt;Q&gt;{3}&lt;/Q&gt;&lt;DP&gt;{4}&lt;/DP&gt;&lt;DQ&gt;{5}&lt;/DQ&gt;&lt;InverseQ&gt;{6}&lt;/InverseQ&gt;&lt;D&gt;{7}&lt;/D&gt;&lt;/RSAKeyValue&gt;"",
    Convert.ToBase64String(privateKeyParam.Modulus.ToByteArrayUnsigned()),
    Convert.ToBase64String(privateKeyParam.PublicExponent.ToByteArrayUnsigned()),
    Convert.ToBase64String(privateKeyParam.P.ToByteArrayUnsigned()),
    Convert.ToBase64String(privateKeyParam.Q.ToByteArrayUnsigned()),
    Convert.ToBase64String(privateKeyParam.DP.ToByteArrayUnsigned()),
    Convert.ToBase64String(privateKeyParam.DQ.ToByteArrayUnsigned()),
    Convert.ToBase64String(privateKeyParam.QInv.ToByteArrayUnsigned()),
    Convert.ToBase64String(privateKeyParam.Exponent.ToByteArrayUnsigned()));
</code></pre>
","<p>In asymmetric cryptography, using private key to encrypts acts as a signature: every one can verifies that you had signed using your public key but only you can sign using your private key (see <a href=""https://en.wikipedia.org/wiki/Public-key_cryptography#Digital_signatures"" rel=""nofollow noreferrer"">https://en.wikipedia.org/wiki/Public-key_cryptography#Digital_signatures</a>).
Obviously you have to keep a pair of keys to be used exclusively for this purpose.</p>

<p>With BouncyCastle library, you can achieve this result using RsaEngine:</p>

<pre><code>using Org.BouncyCastle.Crypto;
using Org.BouncyCastle.Crypto.Engines;    

public void Test()
{
    RsaEngine engine;
    AsymmetricKeyParameter key;
    bool forEncryption;
    int chunkPosition = 0;
    int i = 0;
    int blockSize;
    int chunkSize;
    List&lt;byte&gt; output = new List&lt;byte&gt;();
    byte[] byteMessageArray;


    // Initialize key variable with your public or private key
    // Initialize byteMessageArray with your message to be encrypted or decrypted
    // Set forEncryption variable value 


    engine = new RsaEngine();
    engine.Init(forEncryption, key);
    blockSize = engine.GetInputBlockSize();

    while ((chunkPosition &lt; byteMessageArray.Length))
    {
        chunkSize = Math.Min(blockSize, byteMessageArray.Length - (i * blockSize));
        output.AddRange(engine.ProcessBlock(byteMessageArray, chunkPosition, chunkSize));
        chunkPosition = (chunkPosition + blockSize);
        i += 1;
    }

    //Now in output you have messagge encrypted or decrypted with your private or public key
}
</code></pre>
","504","<c#><.net><encryption><private-key>","0","0","2","2018-08-29 14:49:03","","4","","8356523","","2018-08-20 10:13:28","2018-08-20 10:05:12",""
"34261024","Encrypted Private key in JAVA: java.security.InvalidKeyException","<p>Hi I am trying to read Encrypted Private key in JAVA. The Key is being used is PKCS# 8 with Encryption Algo as PBE with SHA-1 and 2 key DESede.</p>

<p>The code as given below:</p>

<pre><code>EncryptedPrivateKeyInfo encryptPKInfo = new EncryptedPrivateKeyInfo(""RSA"",readFileBytes(filename));
Cipher cipher = Cipher.getInstance(encryptPKInfo.getAlgName());
PBEKeySpec pbeKeySpec = new PBEKeySpec(""pwd"".toCharArray());
SecretKeyFactory secFac = SecretKeyFactory.getInstance(""PBEWithSHA1AndDESede"");
Key pbeKey = secFac.generateSecret(pbeKeySpec);
AlgorithmParameters algParams = encryptPKInfo.getAlgParameters();
cipher.init(Cipher.DECRYPT_MODE, pbeKey,algParams);
KeySpec pkcs8KeySpec = encryptPKInfo.getKeySpec(cipher);
KeyFactory kf = KeyFactory.getInstance(""RSA"");
return kf.generatePrivate(pkcs8KeySpec);
</code></pre>

<p>And i am facing the below mentioned error:</p>

<pre><code>Exception in thread ""main"" java.security.InvalidKeyException: No installed provider supports this key: com.sun.crypto.provider.PBEKey
at javax.crypto.Cipher.chooseProvider(Cipher.java:888)
at javax.crypto.Cipher.init(Cipher.java:1507)
at javax.crypto.Cipher.init(Cipher.java:1438)
at com.abc.utils.CertificateUtil.readEncryptedPrivateKey(CertificateUtil.java:62)
at com.abc.test.Test1.main(Test1.java:16)
</code></pre>
","<pre><code>SecretKeyFactory secFac = SecretKeyFactory.getInstance(""PBEWithSHA1AndDESede"")
</code></pre>

<p><code>PBEWithSHA1AndDESede</code> is not the name of a cipher algorithm supported by Java. For the correct list, see <a href=""http://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#Cipher"" rel=""nofollow"">Standard Algorithm Names</a>.</p>

<p>Possibly you meant <code>PBEWithHmacSHA1AndDESede</code>?</p>
","503","<java><security><private-key><pkcs#8>","0","0","1","2015-12-15 04:44:50","","1","","5541981","","2015-12-15 04:39:09","2015-12-14 06:32:38",""
"12076273","How to store a private key in token/smart card using keygen tag in Google Chrome","<p>I need to specify the location of private key storage to smart cards/tokens using the keygen tag.
Using Mozilla Firefox, when a form containing the keygen tag is submitted and any cryptographic hardware device is plugged in, the browser prompts a combo box where i can choose which storage device i want to put my private key in.
Yet, when using Google Chrome, it doesnt prompt the combo box and always store the private key in disk!
Anyone already face the same problem? Any alternative solution?</p>

<p>Thx!</p>
","","502","<html5><google-chrome><private-key><pki><key-pair>","2","","0","2012-08-28 13:55:03","","0","1","","","","2012-08-22 15:16:21",""
"35267448","pkcs11-tool doesn't recognise RSA key","<p><code>pkcs11-tool</code> fails to import the RSA private key, even though it's parsed correctly by openssl. It fails with:</p>

<pre><code>error: OpenSSL error during RSA private key parsing
Aborting.
</code></pre>

<p>The key is already in the DSA format and I'm trying to import it using:</p>

<pre><code>pkcs11-tool --module ... -y privkey --slot ... -w some/path.der -l --id ...
</code></pre>
","<p>The RSA private key may be encoded in DER in two ways. Either it has a heading defining what key it is, or it may be just a list of fields (as defined by PKCS#1 RSAPrivateKey sequence). <code>openssl</code> command itself handles both forms transparently in most cases, but <code>d2i_RSAPrivateKey</code> does not. It expects the <code>RSAPrivateKey</code> sequence to be directly available.</p>

<p>The required file can be generated from either DER or PEM format file. It's done using <code>openssl rsa -in ... -outform DER -out ...</code></p>

<p>The wrapped format looks like this in <code>openssl asn1parse</code> output:</p>

<pre><code> 0:d=0  hl=4 l=2370 cons: SEQUENCE          
 4:d=1  hl=2 l=   1 prim: INTEGER           :00
 7:d=1  hl=2 l=  13 cons: SEQUENCE          
 9:d=2  hl=2 l=   9 prim: OBJECT            :rsaEncryption
20:d=2  hl=2 l=   0 prim: NULL              
22:d=1  hl=4 l=2348 prim: OCTET STRING      [HEX DUMP].....
</code></pre>

<p>The unwrapped one looks like this:</p>

<pre><code>  0:d=0  hl=4 l=2344 cons: SEQUENCE          
  4:d=1  hl=2 l=   1 prim: INTEGER           :00
  7:d=1  hl=4 l= 513 prim: INTEGER           :...
524:d=1  hl=2 l=   3 prim: INTEGER           :010001
529:d=1  hl=4 l= 513 prim: INTEGER           :...
</code></pre>
","498","<private-key><pkcs#11>","0","0","1","2016-02-08 10:32:11","","0","","","","","2016-02-08 10:32:11",""
"12387275","Pack a certificate containing the private key in .apk on download","<p>I'm developing an android application that uses self-signed certificates with a private key to authenticate a secure connection which is needed to transfer data to the application (using httpclient). Since each user has a different certificate, containing his own private key I need a way to include that in the application. </p>

<p>Is it possible to pack said certificate in an android application when the user completes the process of obtaining it and instead of offering him the download of his certificate, offer him to download the application which already contains his certificate?</p>

<p>Or are there any alternative approaches? Perhaps generating the certificate within the application using the private and public key?</p>
","<p>Are you expecting your users to be technically competent and willing to install your app on their own, using ADB?</p>

<p>In my opinion, a better option is to have your (generic) app recognize that it has no certificate and walk the user through retrieving it from your server. This retrieval could entail fetching a previously generated certificate (such as through entering a code you've provided in advance) or generating a new one (either locally or on your remote server, depending on your situation and security requirements). Not only will this work for more users, it will be less to maintain on your end as well.</p>
","494","<android><certificate><apk><private-key><self-signed>","1","2","1","2012-09-12 11:39:25","12387331","0","0","","","","2012-09-12 11:35:42",""
"19089163","Python RSA encrypted message pass to other languages to decypt","<p>I am using the RSA python package to encrypt a message and try to pass it to a PHP site to decrypt. See below:</p>

<pre><code>message = rsa.encrypt('abc', pubkey)
print message
print type(message)
</code></pre>

<p>What I get is some encrypted text</p>

<pre><code>q??$$??kK?Y??p?[e?[??f???x??s!?s?&gt;?z?*y?p?????????分?
?   ???({u????NH?B???N?%?@5|?~?????\U?.??r?Y?q
&lt;type 'str'&gt;
</code></pre>

<p>What's the best way to pass it to other languages to decrypt?</p>
","<p>That's not a text, it's a binary data. As you are using python2 it doesn't fully distinguish <code>bytes</code> from <code>str</code> so you should care about this.</p>

<p>The other side should get this bytes exactly as rsa outputs them so you can just write them into your connection or file (presuming you are talking binary to them).</p>
","494","<python><encryption><rsa><private-key><public-key>","1","2","2","2013-09-30 09:34:11","19089591","0","0","","","","2013-09-30 07:58:51",""
"19089163","Python RSA encrypted message pass to other languages to decypt","<p>I am using the RSA python package to encrypt a message and try to pass it to a PHP site to decrypt. See below:</p>

<pre><code>message = rsa.encrypt('abc', pubkey)
print message
print type(message)
</code></pre>

<p>What I get is some encrypted text</p>

<pre><code>q??$$??kK?Y??p?[e?[??f???x??s!?s?&gt;?z?*y?p?????????分?
?   ???({u????NH?B???N?%?@5|?~?????\U?.??r?Y?q
&lt;type 'str'&gt;
</code></pre>

<p>What's the best way to pass it to other languages to decrypt?</p>
","<p>For web you can base64 encode the data. It's a common and good way to encode binary data.</p>

<pre><code>&gt;&gt;&gt; import base64
&gt;&gt;&gt; base64.b64encode(b""data"")
'ZGF0YQ=='
&gt;&gt;&gt; base64.b64decode(base64.b64encode(b""data""))
'data'
</code></pre>

<p>By the way you are not suppose to use RSA that way. It's highly insecure to use raw RSA. You must use a probabilistic encryption scheme with proper padding, e.g. RSAES-OAEP. PKCS#1 defines such scheme for encryption and signatures.</p>
","494","<python><encryption><rsa><private-key><public-key>","1","2","2","2013-09-30 09:34:11","19089591","0","0","","","","2013-09-30 07:58:51",""
"11120619","SQLite database encryption","<p>I am using open_ssl to create public and private keys to secure the transaction of a database and the server.</p>

<p>The problem is that the database's (sqllite) only have the input of a byte array of 16bits. The open ssl method that I'm using creates around 600 - 1024 bits, so using that is impossible.</p>

<p>Any idea of what I could do to the public key to use this 16bit encryption technique?</p>

<p>Thanks in advance!</p>
","<p>Sounds like you're trying to use public / private key pairs when symmetric keys ought to be used.</p>

<p>I'd just generate a random string of 16 bytes and use that.  You can get it from /dev/urandom on Linux.</p>

<p>Public / private key pairs are longer because they have special requirements that regular symmetric algorithm keys don't.  The mudolo of an RSA key pair, for instance, needs to be a multiple of two primes, which excludes a lot of numbers / strings.  eg. 60000 isn't a multiple of just two primes - it's factorization shows that it's a multiple of 5^4 * 2^5 * 3.</p>
","494","<sqlite><openssl><public-key-encryption><private-key><16-bit>","0","0","1","2012-06-24 06:08:04","","0","","","","","2012-06-20 13:24:05",""
"50574673","Need a working Ruby basic RSA Private Public key example","<p>I've been able to create private and public keys with some success, and to encode a message, but on decoding the message I get thrown an error</p>

<p>My code so far is:</p>

<pre><code>require 'openssl'
require 'base64'


key = OpenSSL::PKey::RSA.generate(2048)

pri_key = key
pub_key = key.public_key

string = 'Hello World!';

rsa_public_key = OpenSSL::PKey::RSA.new(pub_key)
encrypted_string = Base64.encode64(rsa_public_key.public_encrypt(string))

puts ""Encrypted Message:""
puts encrypted_string

# This creates an error
my_string = pri_key.private_decrypt(encrypted_string)


puts ""The decoded message""
puts my_string
</code></pre>

<p>This throws this error after printing the encoded message</p>

<pre><code>Example Decrypt.txt:25:in `private_decrypt': data greater than mod len (OpenSSL::PKey::RSAError)
        from Example Decrypt.txt:25:in `&lt;main&gt;'
</code></pre>
","<p>You base 64 encode the encrypted string, but you don’t decode it before decrypting. Since the base 64 encoded string is longer than the encrypted string, and longer than the modulus, you get the error.</p>

<p>Try base 64 decoding before encrypting:</p>

<pre><code>my_string = pri_key.private_decrypt(Base64.decode64(encrypted_string))
</code></pre>
","491","<ruby><encryption><rsa><private-key><public-key>","0","5","1","2018-05-29 00:13:31","50574724","0","","","","","2018-05-29 00:04:09",""
"14898152","rare characters at the beginning openssl_private_encrypt","<p>I have a tester page from my Broker, in the first section I include a certificate (.crt) file</p>

<blockquote>
  <p><code>MIIFETCCA/mgAwIBAgIUMDAwMDAwMDAwMDAwM...</code></p>
</blockquote>

<p>and a second section with an encrypted string with my private key, the original string is ""<code>f2e140eb-2b09-44ab-8504-87b25d81914c</code>"", and the resulting encrypted string with my priv key is:</p>

<blockquote>
  <p><code>ugSMAsCQlIKIlQ17exIvSEqkA60eWcnF4AAEVJG3BP4hYcCc+DCKeeHur6X2ShbjYWoeugPJe7AecPO0JY9jG75R67jS1OLUeUkB7HZqXCSzPANKWjQ/vx+0O0PlHHcWI24aUFCSiA2iuNXcssIbt2uJAChegXa7XKgNXxDJm+o=</code></p>
</blockquote>

<p>there is a button with label ""Decipher"", when a press it, I obtain:</p>

<blockquote>
  <p><code>�����������������������������������������������������������������������������������������f2e140eb-2b09-44ab-8504-87b25d81914c</code></p>
</blockquote>

<p>As you can see, I obtained the original string, but a lot of strange characters at the beginning, with this, I can not continue with the signature process.</p>

<p>Technical notes (maybe I am doing something wrong):
The first part (certificate:MIIFETC.....) is obtained with:</p>

<pre><code>$filename=""instancia_ope.cer"";
$imgbinary = fread(fopen($filename, ""r""), filesize($filename));
$certificadoInstancia64 = base64_encode($imgbinary);
</code></pre>

<p>and the string encrypted with my priv key (ugSMAsCQlIKI......) with:</p>

<pre><code>$llave_priv = file_get_contents(""i.pem"");  //i.pem is my private key file
$plaintext = ""f2e140eb-2b09-44ab-8504-87b25d81914c"";
openssl_private_encrypt($plaintext, $encrypted, $llave_priv);
$reto = base64_encode($encrypted);
</code></pre>

<p>I obtained the i.pem file from the .key file with</p>

<pre><code>openssl pkcs8 -inform DER -in instancia_ope.key -out i.pem
</code></pre>

<p>Is there any error in my procedure? I asked my Broker what the decipher button does, but I have not received answer.</p>
","<p>It looks like you have retrieved the raw result from a decrypt option. However, looking at your result, that result was not created by a PKCS#1 v2.1 compatible encryption. This probably means there is something wrong with the encryption procedure.</p>
","490","<php><encryption><openssl><private-key>","2","0","2","2013-02-16 22:21:16","","1","","474189","","2013-02-15 17:30:34","2013-02-15 15:40:14",""
"14898152","rare characters at the beginning openssl_private_encrypt","<p>I have a tester page from my Broker, in the first section I include a certificate (.crt) file</p>

<blockquote>
  <p><code>MIIFETCCA/mgAwIBAgIUMDAwMDAwMDAwMDAwM...</code></p>
</blockquote>

<p>and a second section with an encrypted string with my private key, the original string is ""<code>f2e140eb-2b09-44ab-8504-87b25d81914c</code>"", and the resulting encrypted string with my priv key is:</p>

<blockquote>
  <p><code>ugSMAsCQlIKIlQ17exIvSEqkA60eWcnF4AAEVJG3BP4hYcCc+DCKeeHur6X2ShbjYWoeugPJe7AecPO0JY9jG75R67jS1OLUeUkB7HZqXCSzPANKWjQ/vx+0O0PlHHcWI24aUFCSiA2iuNXcssIbt2uJAChegXa7XKgNXxDJm+o=</code></p>
</blockquote>

<p>there is a button with label ""Decipher"", when a press it, I obtain:</p>

<blockquote>
  <p><code>�����������������������������������������������������������������������������������������f2e140eb-2b09-44ab-8504-87b25d81914c</code></p>
</blockquote>

<p>As you can see, I obtained the original string, but a lot of strange characters at the beginning, with this, I can not continue with the signature process.</p>

<p>Technical notes (maybe I am doing something wrong):
The first part (certificate:MIIFETC.....) is obtained with:</p>

<pre><code>$filename=""instancia_ope.cer"";
$imgbinary = fread(fopen($filename, ""r""), filesize($filename));
$certificadoInstancia64 = base64_encode($imgbinary);
</code></pre>

<p>and the string encrypted with my priv key (ugSMAsCQlIKI......) with:</p>

<pre><code>$llave_priv = file_get_contents(""i.pem"");  //i.pem is my private key file
$plaintext = ""f2e140eb-2b09-44ab-8504-87b25d81914c"";
openssl_private_encrypt($plaintext, $encrypted, $llave_priv);
$reto = base64_encode($encrypted);
</code></pre>

<p>I obtained the i.pem file from the .key file with</p>

<pre><code>openssl pkcs8 -inform DER -in instancia_ope.key -out i.pem
</code></pre>

<p>Is there any error in my procedure? I asked my Broker what the decipher button does, but I have not received answer.</p>
","<p>Looks like your broker does plain textbook RSA decryption, not PKCS#1 padded RSA like OpenSSL does by default. Therefore the brokers test application does not remove the padding and you get a padded plaintext block as a result.</p>

<p>You can try to encrypt without any random padding by using <code>OPENSSL_NO_PADDING</code> as optional fourth argument to <a href=""http://php.net/manual/en/function.openssl-private-encrypt.php"" rel=""nofollow"">openssl_private_encrypt</a>:</p>

<pre><code>openssl_private_encrypt($plaintext, $encrypted, $llave_priv, OPENSSL_NO_PADDING);
</code></pre>

<p>Note that using <a href=""http://www.di.ens.fr/~pnguyen/pub_BoJoNg00.htm"" rel=""nofollow"">unpadded plain textbook RSA is inherently insecure</a> in most circumstances. In general, RSA should be used with a secure random padding mechanism, such as <a href=""https://en.wikipedia.org/wiki/Optimal_asymmetric_encryption_padding"" rel=""nofollow"">PKCS#1 2.1 OAEP</a>. Otherwise there are a lot of cryptographic security issues, such as the complete interchangeability of decryption and signing, <a href=""http://rdist.root.org/2009/10/06/why-rsa-encryption-padding-is-critical/"" rel=""nofollow"">easy attacks against the mathematical structure</a> including <a href=""https://en.wikipedia.org/wiki/Malleability_%28cryptography%29"" rel=""nofollow"">malleability</a>, and the lack of <a href=""https://en.wikipedia.org/wiki/Semantic_security"" rel=""nofollow"">semantic security</a>. These may or may not be applicable to your situation, since you seem to essentially use an ad-hoc RSA signature protocol.</p>
","490","<php><encryption><openssl><private-key>","2","0","2","2013-02-16 22:21:16","","1","","474189","","2013-02-15 17:30:34","2013-02-15 15:40:14",""
"53638955","ASN.1 encoding routines:OPENSSL_internal:HEADER_TOO_LONG","<p>I have a problem with rconstructing the private key from byte array in Kotlin (using Android Studio)</p>

<p>I must load the private key that I have defined like below. 
From what I know, this EC Private key is 32 bytes long which correspond to secp256r1 curve</p>

<pre><code>0x3C, 0x6D, etc... (this have 32 in total)
</code></pre>

<p>This is what i have: </p>

<pre><code>val privateKeyArray = arrayOf(0x3C, 0x6D, etc...) //this have 32 size
</code></pre>

<p>Then I am trying to convert it to byteArray:</p>

<pre><code>val privateKeyBytes = privateKeyArray.map { it.toByte() }.toByteArray())
</code></pre>

<p>And then I want to sign some data with it:</p>

<pre><code>val keyFactory = KeyFactory.getInstance(""EC"")
val privateKey = keyFactory.generatePrivate(PKCS8EncodedKeySpec(privateKeyBytes))  //THIS line gives the Exception

val content = ""random string"".toByteArray()
val signer = Signature.getInstance(""SHA256withECDSA"")
signer.initSign(privateKey)
signer.update(content)
val signature = signer.sign()
</code></pre>

<p>However, when i am trying to generate the privateKey from the keyFactory I am getting the following Exception:</p>

<blockquote>
  <p>java.security.spec.InvalidKeySpecException: java.lang.RuntimeException: error:0c000079:ASN.1 encoding routines:OPENSSL_internal:HEADER_TOO_LONG
          at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2927)</p>
</blockquote>

<p>How can I properly read the private key in this case?</p>
","<p>I used BouncyCastle as the security provider, so you can try it as well.
looks like the spec you are using is <code>secp256r1</code>. in this case, try following code to regen the PrivateKey object from the byte array that represents the key. remember, the byte array is just a BigInteger in Java. </p>

<p>let me know if it works or not.</p>

<pre><code>public PrivateKey generatePrivateKey(byte[] keyBin) throws InvalidKeySpecException, NoSuchAlgorithmException {
    ECNamedCurveParameterSpec spec = ECNamedCurveTable.getParameterSpec(""secp256r1"");
    KeyFactory kf = KeyFactory.getInstance(""ECDSA"", new BouncyCastleProvider());
    ECNamedCurveSpec params = new ECNamedCurveSpec(""secp256r1"", spec.getCurve(), spec.getG(), spec.getN());
    ECPrivateKeySpec privKeySpec = new ECPrivateKeySpec(new BigInteger(keyBin), params);
    return kf.generatePrivate(privKeySpec);
}
</code></pre>
","488","<android><encryption><kotlin><bouncycastle><private-key>","0","2","1","2018-12-06 00:53:46","53643056","1","","5434346","","2018-12-05 19:52:52","2018-12-05 18:53:54",""
"31531103","How to securely deploy PPK file in WPF C# app?","<p>I have a C# app that connects to a SFTP server to transfer log files.
The app achieves this by using WinSCP .NET assembly to connect to the server.</p>

<p>How do I securely store the <code>.ppk</code> private key file such that the user is not able to take this file to access the SFTP for themselves?</p>

<p><a href=""http://winscp.net/eng/docs/library#csharp"" rel=""nofollow"">http://winscp.net/eng/docs/library#csharp</a></p>

<p>Based on the way the library reference the <code>.ppk</code>, it may not be possible to avoid storing the <code>.ppk</code> file on the local disk during run-time?</p>

<p>Thanks in advance.</p>
","<p>There's generally no way to hide any kind of credentials that (any) application possess from the end user. You can only make them hard to be found, but it's questionable whether it is even worth the effort.</p>

<p>What you can (and should do) is to make sure the credentials grants only as little access as necessary.</p>

<p>So in your case, make sure the account, you authenticate with the private key:</p>

<ul>
<li>has only write access (no read access, nor even list)</li>
<li>and has a low disk quota</li>
<li>is regularly (or automatically) monitored for any unusual activity</li>
</ul>

<hr>

<p>Specifically regarding the private key for WinSCP .NET assembly:</p>

<p>Yes, it has to be stored on the disk (i.e. temporarily extracted to a temp folder). Though you can have the private key encrypted with a passphrase. And have the passphrase hard-coded in the application (obfuscated if your want).</p>

<p>See <a href=""https://winscp.net/eng/docs/library_sessionoptions"" rel=""nofollow noreferrer""><code>SessionOptions.SshPrivateKeyPassphrase</code></a>.</p>

<hr>

<p>See also WinSCP article on <a href=""https://winscp.net/eng/docs/guide_protecting_credentials_for_automation"" rel=""nofollow noreferrer"">Protecting credentials used for automation</a>.</p>
","487","<c#><sftp><private-key><winscp><winscp-net>","1","0","2","2017-08-03 07:14:06","31533057","1","1","850848","","2015-07-21 07:43:47","2015-07-21 05:33:36",""
"31531103","How to securely deploy PPK file in WPF C# app?","<p>I have a C# app that connects to a SFTP server to transfer log files.
The app achieves this by using WinSCP .NET assembly to connect to the server.</p>

<p>How do I securely store the <code>.ppk</code> private key file such that the user is not able to take this file to access the SFTP for themselves?</p>

<p><a href=""http://winscp.net/eng/docs/library#csharp"" rel=""nofollow"">http://winscp.net/eng/docs/library#csharp</a></p>

<p>Based on the way the library reference the <code>.ppk</code>, it may not be possible to avoid storing the <code>.ppk</code> file on the local disk during run-time?</p>

<p>Thanks in advance.</p>
","<p>Since the WinSCP .NET assembly is calling the command-line scripting interface there is probably no way to do this.  I'm one of the developers of <a href=""https://enterprisedt.com/products/edtftpnetpro/"" rel=""nofollow"">edtFTPnet/PRO</a>, which is a native .NET implementation of various file-transfer protocols, including SFTP.  Our interface allows you to set the private key using a byte-array (see <a href=""https://enterprisedt.com/products/edtftpnetpro/doc/manual/api/html/P_EnterpriseDT_Net_Ftp_SecureFTPConnection_ClientPrivateKeyBytes.htm"" rel=""nofollow"">SecureFTPConnection.ClientPrivateKeyBytes</a>).  Our product is not free, but it should get you where you want to go.</p>
","487","<c#><sftp><private-key><winscp><winscp-net>","1","0","2","2017-08-03 07:14:06","31533057","1","1","850848","","2015-07-21 07:43:47","2015-07-21 05:33:36",""
"51723258","AWS AMI cannot retrieve password after packer creation using private key","<p>I am building a windows server AMI using packer. It works fine with a hardcoded password, but I am trying to create the AMI so that the password is autogenerated. I tried what was suggested below and the packer logs looks good, it gets a password.</p>

<p><a href=""https://stackoverflow.com/questions/42138964/how-to-create-windows-image-in-packer-using-the-keypair/42164384#42164384"">How to create windows image in packer using the keypair</a>
<a href=""https://i.stack.imgur.com/AKpR7.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/AKpR7.png"" alt=""enter image description here""></a></p>

<p>However when I create an EC2 instance from the AMI in terraform the connection to the windows password is lost and cannot be retrieved. What is missing here?</p>

<p><strong>Packer json</strong></p>

<pre><code>{  
  ""builders"": [
    {
      ""profile"" : ""blah"",
      ""type"": ""amazon-ebs"",
      ""region"": ""eu-west-1"",
      ""instance_type"": ""t2.micro"",
      ""source_ami_filter"": {
        ""filters"": {
          ""virtualization-type"": ""hvm"",
          ""name"": ""*Windows_Server-2012-R2*English-64Bit-Base*"",
          ""root-device-type"": ""ebs""
        },
        ""most_recent"": true,
        ""owners"": ""amazon""
      },
      ""ssh_keypair_name"" : ""shared.key"",
      ""ssh_private_key_file"" : ""./common/sharedkey.pem"",
      ""ssh_agent_auth"" : ""true"",
      ""ami_name"": ""test-{{timestamp}}"",
      ""user_data_file"": ""./common/bootstrap_win.txt"",
      ""communicator"": ""winrm"",
      ""winrm_username"": ""Administrator""      
    }
  ]
}
</code></pre>
","<p>Adding Ec2Config.exe -sysprep at the end worked.</p>

<pre><code>{
      ""type"": ""windows-shell"",
      ""inline"": [""C:\\progra~1\\Amazon\\Ec2ConfigService\\Ec2Config.exe -sysprep""]
}
</code></pre>

<p>Though beware it seems my IIS configuration does not work after sysprep.</p>
","484","<passwords><windows-server-2012-r2><private-key><amazon-ami><packer>","1","1","1","2018-09-24 09:00:10","51724674","0","","2685690","","2018-08-07 10:35:14","2018-08-07 09:22:43",""
"25493913","get private key for Mac OS","<p>I am trying to retrieve the private key from the Keychain for digital signing later.</p>

<p>With the code below, I can get to all my certificates in the smart card and local drive, but not the private keys.  I have many private key and certificate pairs in the smart card.    </p>

<pre><code>KeyStore keyStore = KeyStore.getInstance(""KeychainStore"", ""Apple"");

keyStore.load(null, ""-"".toCharArray());

Enumeration&lt;String&gt; aliases = keyStore.aliases();

while (aliases.hasMoreElements()) {
    String alias = aliases.nextElement();

    if (keyStore.isKeyEntry(alias)) {
        try {
            PrivateKey key = (PrivateKey) keyStore.getKey(alias, ""-"".toCharArray());
        }
        catch (RuntimeException e) {
            System.out.println(""    Key failed to load (""+e.getMessage()+"")"");
        }

        Certificate certificate = keyStore.getCertificate(alias);

        String subject = """";

        if ((certificate != null) &amp;&amp; (certificate instanceof X509Certificate)) {
            subject =((X509Certificate)certificate).getSubjectX500Principal().getName();
        }
    }
}
</code></pre>

<p>How can I retrieve the private key a specific certificate? <code>getKey()</code> always returns null except for one system private key.</p>
","","482","<java><macos><itext><smartcard><private-key>","2","","0","2015-01-14 20:05:26","","0","","589259","","2014-08-29 00:56:34","2014-08-25 20:31:59",""
"20068812","RSA finding private key D","<p>Im trying to find the private key D in the RSA cryptology. What I already have are the following numbers.</p>

<p>EDIT:</p>

<p>How should it be be done further to calculate the D? I've tried to use the extended euclidian algorithm but I didn't manage to apply it correctly.</p>
","<p>Ok, what you want is a solution to</p>

<p>d * 1617 + t * 2320 = 1</p>

<p>As you have said before, you need to use extended euclidean algorithm so solve this. I did it with an <a href=""http://www.mathcelebrity.com/euclidalgo.php"" rel=""nofollow"">online calculator</a> (but it is easy to implement, just go to wikipedia and do it).</p>

<p>This gives me the following result:</p>

<p>d = 33, t = -23</p>
","482","<rsa><private-key>","-1","0","1","2013-11-19 12:46:46","20069587","4","","3008266","","2013-11-19 12:46:46","2013-11-19 10:18:42",""
"32247393","openssl smime message signing","<p>Here is how one should sign a message with <code>openssl smime</code>? according to the <a href=""https://www.openssl.org/docs/manmaster/apps/smime.html"" rel=""nofollow"">docs</a></p>

<pre><code>openssl smime -sign -in in.txt -text -out mail.msg -signer mycert.pem \
 -inkey mykey.pem -certfile mycerts.pem
</code></pre>

<p>But why is there a <code>-signer</code> key with a certificate -- isn't a private key passed in <code>-inkey</code> enough for message signing? Isn't it just a usual asymmetric encryption scheme, where my private key is for message signing and my certificate (i.e., signed public key corresponding to my private key) is for my counterpart to encrypt the message?</p>
","<p>As far as I found out this is for the second side to verify your signature -- in case if it does not have that certificate.</p>
","481","<encryption><openssl><public-key-encryption><private-key><sign>","0","0","1","2015-08-27 12:21:25","","0","","","","","2015-08-27 10:50:16",""
"39473843","ansible vault with private key as password (similar to eyaml)?","<p>Part of puppet to ansible migration.
current puppet config uses eyaml:</p>

<pre><code>:eyaml:
  :datadir: /opt/puppet/yamls
  :pkcs7_private_key: /opt/puppet/secure/keys/eyaml_private_key.pkcs7.pem
  :pkcs7_public_key:  /opt/puppet/public/eyaml_public_key.pkcs7.pem
  :extension: 'yaml'
</code></pre>

<p>Ansible has vault which achieves the encryption, but from what I have understood so far, it requires storing password as plain text in a file.</p>

<p>Can I use key combination similar to eyaml for ansible vault?</p>
","<p>You are correct that ansible-vault only supports use of a password as an encryption key.</p>

<p><a href=""https://www.vaultproject.io/"" rel=""nofollow"">Hashicorp Vault</a> has a pluggable authentication system, and one of the built-in options <a href=""https://www.vaultproject.io/docs/auth/cert.html"" rel=""nofollow"">uses PEM-format certs</a>.  There is <a href=""https://github.com/jhaals/ansible-vault"" rel=""nofollow"">a simple plugin</a> that integrtes Vault with Ansible.  Vault also offers a number of other advantages over a shared-encrypted-file approach, but that's a larger topic that's not suited for here.</p>
","479","<ansible><private-key><ansible-vault>","1","1","2","2016-09-13 21:10:51","","0","","","","","2016-09-13 15:31:14",""
"39473843","ansible vault with private key as password (similar to eyaml)?","<p>Part of puppet to ansible migration.
current puppet config uses eyaml:</p>

<pre><code>:eyaml:
  :datadir: /opt/puppet/yamls
  :pkcs7_private_key: /opt/puppet/secure/keys/eyaml_private_key.pkcs7.pem
  :pkcs7_public_key:  /opt/puppet/public/eyaml_public_key.pkcs7.pem
  :extension: 'yaml'
</code></pre>

<p>Ansible has vault which achieves the encryption, but from what I have understood so far, it requires storing password as plain text in a file.</p>

<p>Can I use key combination similar to eyaml for ansible vault?</p>
","<blockquote>
  <p>from what I have understood so far, it requires storing password as plain text in a file.</p>
</blockquote>

<p>Not quite correct. You can <a href=""http://docs.ansible.com/ansible/playbooks_vault.html#running-a-playbook-with-vault"" rel=""nofollow"">pass executable</a> path as <code>--vault-password-file</code> value.<br>
So you can have some script that will do any sort of password management and just print the key to stdout (that will be piped as vault password to Ansible).</p>
","479","<ansible><private-key><ansible-vault>","1","1","2","2016-09-13 21:10:51","","0","","","","","2016-09-13 15:31:14",""
"14068765","Javascript read private key information","<p>Hello I have the following private key I think it's a X509 structure :</p>

<pre><code>d40d6e2db69da265b5139fcbae0fc8dbd8b46594d138765bfc5c2498047928a1bc71eee93f4405475c953bff2e8196384acb656aec2c40a5110e11480f696f448c66a3d2f1429c1fff2ec4be68da7e5321466edf448fd8df68140d02b1e39e89c1780b5ab33d5ee2aa990fde4b8dfbe98959bcba0931e641fcfccf2afdb636193f16f4cb2052e44be95ef7d730d11a8abe2e818169e924d04439bf593db8f8250762b49892c9e8504a1ab14fb5891947d3a879f4910cffb33e7840238d44b2adc8f0db8f80ecdb7afdd8cc62a47b33bdc9d1502842460165e8d166127a2bd42d692a2aef312f02bffdc9211e51e9e48e7c717106275aeb4efd7c8f26f84b3e3aa222d8c506a98bb6adbf7b8bcad055c34585e6e6cb156119f947ea997a2db42c7db38ac4856cbd7f84f1b5be283fafb5897f0cd014bdc0ad692750f36e4ab609eda830d7385a6e40d071467e80d1d17d4dbfc23c65d4bdd2da3ee1f89ee7e574fc221705b98fe1037079ebc99f51af039de86c9143e20e4eb93f7fe64f2a20ee9245001f747620ab8ad20b0b9d45496b9b426265f30284224aee3a01df9ed2a28dfe253c9e4bdad7d86f247e9d2b9e76424639c3352ddbbaae7ee17e50e22e5f6aa438dcf47eece3c70e1684a01dc264255ca09eb331a61e36b7a6e900e2b3b64559723556eff13230f76d545a6f7cbafe1d5c67c67944b509060dbe4f8e9ea98820b66caea6f7672e8463cf07d3093885636c67cce8ae96b6ac49e2619fc2787c2649d9b7d339d0944dbe4c52efec04924b1837218390c707d796ef20e02162cacc804ad59e18b3733f0e119aa8b46919dd85bc301ddb1c2339d4669c28a4d0
</code></pre>

<p>How can I read this private key information to extract the modulus and private exponent to use them for decryption?</p>

<p>I have tried this ASN1 decoder <a href=""http://lapo.it/asn1js/"" rel=""nofollow"">http://lapo.it/asn1js/</a> but I get no result, can someone help me please?</p>

<p>This is my public key X509 structure:</p>

<pre><code>30819e300d06092a864886f70d010101050003818c00308188028180599a96c54ef07f5288a061a56386376fd9e2e0a253cb035f2b0c65c85c99153a848a8247d9e28d8be1dbad5e754e8393e591cc53e5abec2f0a44b4844646cc283123fdd799c50dd5acd1277fd9afeb9c5a12a53b9edfff0ac53d6e94e5f1678c3bd0ccd8d08b18d4a42f845b79b8b19203e24e189801ca396f5732bfe628edeb0203010001
</code></pre>
","<p>The ""public key X509 structure"" is an RSA public key but it's not an X.509 cert.  It's encoded in base-16.  I reencoded it in base64 and got this:</p>

<pre><code>MIGeMA0GCSqGSIb3DQEBAQUAA4GMADCBiAKBgFmalsVO8H9SiKBhpWOGN2/Z4uCi
U8sDXysMZchcmRU6hIqCR9nijYvh261edU6Dk+WRzFPlq+wvCkS0hEZGzCgxI/3X
mcUN1azRJ3/Zr+ucWhKlO57f/wrFPW6U5fFnjDvQzNjQixjUpC+EW3m4sZID4k4Y
mAHKOW9XMr/mKO3rAgMBAAE=
</code></pre>

<p>I then did OpenSSL's asn1parse and got this:</p>

<pre><code>    0:d=0  hl=3 l= 158 cons: SEQUENCE
    3:d=1  hl=2 l=  13 cons:  SEQUENCE
    5:d=2  hl=2 l=   9 prim:   OBJECT            :rsaEncryption
   16:d=2  hl=2 l=   0 prim:   NULL
   18:d=1  hl=3 l= 140 prim:  BIT STRING
</code></pre>

<p>As for the ""private key""...  I've no idea what format that's in.  There are three main formats for RSA private keys that I'm aware of - PuTTY, PKCS#1, and XML Signatures - and that one isn't any of those.  Could be some made up one off format though.  How'd you get the key?  Did someone give it to you?  Maybe you're a new hire at a company and that's something they've asked you to investigate?</p>
","479","<javascript><rsa><private-key>","1","0","1","2013-01-02 06:13:35","","2","","493122","","2012-12-30 14:45:33","2012-12-28 11:24:09",""
"10327099","What differences between certificate private key that retrieved from .pfx file and personal My Store?","<p>I wanna know What differences between certificate private key that retrieved from .pfx file and personal My Store.
I retrieved certificate private key with these two types by using java language.</p>

<p><strong>retrieved from personal My Store :</strong> </p>

<p><strong>Private Key</strong> : <em>RSAPrivateKey [size=2048 bits, type=Exchange, container={DE6E412F-9F87-4E26-8A3A-9C1DAC06A110}]</em></p>

<p><strong>retrieved from .pfx file by user input :</strong></p>

<p><strong>Private Key :</strong> <em>RSA Private CRT Key
            modulus: c5fa714a47a29dd5344035ef10484eb5b477d8caf8a9466c94e700a3ab2298a21fba809b9f426c5c2f8bf7263c1ca261e2310d097031bf0727361c0d7b0a432a310a4f5fb0f3e268ee42e64c3f6081d64a586dd90e87e7443246491ef9bb9d5ec8decae31240d49a8e1dcdb4f56baa3c170e5d6529d4a1cac192d628716083344763b267b1643a325e80935eafc31ff3900d859f05668677f28619800d52c0a89e353d208f72671558a9feb9dfbbb809cb99e50b375620ccde8bfe2d45b74df7e07925f9ccb0eb84a54d92937a0b631e4115d67b7f29f6a4256341d1b038be49a08b24ee12e5cc93006e7668eebf14888693260e43f47961c87372b6ebafbe57
    public exponent: 10001
   private exponent: 3863f45eeef68fb449b4bc6802a045e315ab4951cef010421f4b88f0156fbe3ff77f9ce036c5a9adbc5146ad5a53e1a0b5d7b8d9e65e15064991ecfd9dfd37524e339c962a05dd887bcd0c61cd6f84abeff32e1eb437db949e294cec88bf7abca3c469cfb1c44b8a564e80e8393b587ad32a6149ce57655a2636d7cf1f34194a8b8369daea458dc0e37172ea29ab4004ca6a7e571e4118474121239f58628bee948e08e4d0780e691b66009aacf60eb833053d3a58ca3f98e3fe4b2a2e1e1e254f8f11737692895b0f7b8c8644cc00e6fc3cd6153613cfb9fd1a1f4b649a88849a34f0178cc0b12974dec9a6143850fd9a04a1c64d83839d89d0bb168eb968d9
             primeP: ddad2933da59cbc2a7129df80e5ddd730ce4711f056fff802699dc12816dcd742a8bcb8bff10acc4eb43bb24dbaf8e3db3b1e026a39a69042907aed105aa344131da0817749ef25d02ce51e34adabede8e4a09b2dae5268b5da4e154939e10a67b2cd9ebe9fcfb93c1c5508dacb2a7d7b4821bc83f97e30d1973e32538bb1b15
             primeQ: e4a1eeb2137558806760445f25f6a90a9450160e153782c0c1ac4b76e63aeec605093764cb02d40a1ab74cdb7180c02e9052c40b7bcb4aafd9e24a4797cda0d5090bf70665ddd55de041bb3d48a0359e28a831a2db77ae5265316b26b3722a52d019c98a8c4e34999f8f90671691d172ea4f4e020f5ce31d70018976621c9ebb
     primeExponentP: 5aa210c58591cf305fb4c9e780a03a096f0cfb7f2e6ef32cc71b831201df0df05ff0d6210001265240ca697a91637ea9958db552b6f34bda8a97fc8eb35d3a8e293eb6ae385d40446d004414c5271880cff64f6ed3f67ac2e25fa64d3929982f290f566e113600fa11708615d6b518d0a599c89820000eb1ed65274ab19e365d
     primeExponentQ: ad7b31e36d605d071169ba777816f1ad555c6f5fc0399ebd2437d80b20271786a9cb947ca68e3ed66bef2a2258bd9915bbed1154a55a5c11930261da711556344fe904479683fca27ec7618bdecfb1df907a0f2fc3d7cc2e391a86739735c9678d00042d5cc8faa096b218a0204004ed6d5d3f93d0946ac0ab7c7f1194e0a29
     crtCoefficient: 7f70f9439d3ab04af8dc5ff8f11fbc60d3e62d5a6220c9421de09374f431214f7cba3cb8eb302c8c79a5c84555c5e29ebec9edc2d1547fd07aea860888a50d5aa1aa2eeb5a40d2f46523bd8fa4125c34dde6a91f9f3c88e9bc3bee484e9367125b20c630fcf2e8144ea31f688a67def228fdcdc02dd6b64e23e0bd67e330c5e6</em></p>

<p>Please explain me.</p>
","<p>Your private remains the same. You can generate your private key in the Microsoft key store referenced by a key container. When you import your private key from a PFX, the private key gets imported in to the  Microsoft key store byt referenced by the PFX certificate context.</p>
","477","<java><certificate><private-key><pfx>","0","0","1","2012-06-22 08:36:02","","0","","1061200","","2012-04-30 03:07:34","2012-04-26 04:06:18",""
"31633744","openssl commands equivalent in python?","<p>I'm currently getting a private key with </p>

<p><code>openssl pkcs8 -in file.key -inform DER</code></p>

<p>And for some cer file</p>

<p><code>openssl x509 -text -inform DER -in file.cer</code></p>

<p>I can handle the extraction calling the commands on the terminal from python but I would prefer to do it with python libraries.</p>

<p>I looked for examples with <em>pyopenssl</em> but I didn't find something really similar to what I'm trying to achieve.</p>

<p><strong>How can I achieve the same result using python libraries?</strong></p>
","<p>Have a look at <a href=""http://cryptography.io"" rel=""nofollow"">cryptography.io</a>. There's <a href=""https://cryptography.io/en/latest/x509/reference/#cryptography.x509.load_der_x509_certificate"" rel=""nofollow"">DER certificate loading</a> and <a href=""https://cryptography.io/en/latest/hazmat/primitives/asymmetric/serialization/#der"" rel=""nofollow"">private key loading</a> supports PKCS#8 format.</p>
","469","<linux><python-3.x><openssl><private-key>","3","3","2","2015-08-08 04:50:05","31889713","0","","3080244","","2015-07-29 15:37:24","2015-07-26 04:50:22",""
"31633744","openssl commands equivalent in python?","<p>I'm currently getting a private key with </p>

<p><code>openssl pkcs8 -in file.key -inform DER</code></p>

<p>And for some cer file</p>

<p><code>openssl x509 -text -inform DER -in file.cer</code></p>

<p>I can handle the extraction calling the commands on the terminal from python but I would prefer to do it with python libraries.</p>

<p>I looked for examples with <em>pyopenssl</em> but I didn't find something really similar to what I'm trying to achieve.</p>

<p><strong>How can I achieve the same result using python libraries?</strong></p>
","<p>Since using python cryptography didn't work for me I looked for an alternative package.</p>

<p>I found using <code>chilkat</code> is exactly what I needed. It has pkcs8 support and it's really fast.</p>

<p>My code is as follows</p>

<pre><code>def get_private_key(filepath, password):
    pkey = chilkat.CkPrivateKey()
    pkey.LoadPkcs8EncryptedFile(filepath, password)
    return pkey.getPkcs8Pem()


def get_certificate_and_serial(filepath):
    cert = chilkat.CkCert()
    cert.LoadFromFile(filepath)
    serial = unhexlify(cert.serialNumber())
    return cert.exportCertPem(), serial.decode('utf-8')
</code></pre>

<p>Chilkat can be found <a href=""https://www.chilkatsoft.com/python.asp"" rel=""nofollow""><strong>here</strong></a></p>
","469","<linux><python-3.x><openssl><private-key>","3","0","2","2015-08-08 04:50:05","31889713","0","","3080244","","2015-07-29 15:37:24","2015-07-26 04:50:22",""
"54168369","InvalidKeySpecException: How do I extract a private key from a .der file?","<p>I have a private key file in the .der format. I'm trying to save this private key as a PrivateKey object (with Java) like this:</p>

<pre><code>PrivateKey clientPrivKey = getPrivateKeyFromKeyFile(""C:\\Users\\Bob\\Desktop\\Assignments\\Project\\VPN Project\\src\\client-private.der"");
</code></pre>

<p>This is what the getPrivateKeyFromKeyFile method looks like:</p>

<pre><code>private static PrivateKey getPrivateKeyFromKeyFile(String keyfile) throws Exception
    {
        Path path = Paths.get(keyfile);
        byte[] privKeyByteArray = Files.readAllBytes(path);
        PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(privKeyByteArray);
        KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
        PrivateKey myPrivKey = keyFactory.generatePrivate(keySpec); 
        return myPrivKey;
    }
</code></pre>

<p>But when I try this, I keep getting InvalidKeySpecException because of this line of code:</p>

<pre><code>PrivateKey myPrivKey = keyFactory.generatePrivate(keySpec);
</code></pre>

<p>I'm not sure what's the issue here. I opened up the private key file and everything looks fine. It starts with <code>-----BEGIN RSA PRIVATE KEY-----</code> and ends with <code>-----END RSA PRIVATE KEY-----</code>.</p>

<p>And in case it's relevant, I created this private key using this OpenSSL command:</p>

<pre><code>genrsa -out client-private.der 2048
</code></pre>
","<p>A file generated with</p>

<pre><code>openssl genrsa -out &lt;path to output-file&gt; 2048
</code></pre>

<p>is actually not a <code>.der</code>-file, but a <code>.pem</code>-file (see e.g. <a href=""https://stackoverflow.com/questions/22743415/what-are-the-differences-between-pem-cer-and-der/22743616"">What are the differences between .pem, .cer and .der?</a>) and the data are not stored in the <code>PKCS8</code>-format, but in the <code>PKCS1</code>-format (see e.g. <a href=""https://stackoverflow.com/questions/48958304/pkcs1-and-pkcs8-format-for-rsa-private-key"">PKCS#1 and PKCS#8 format for RSA private key</a>).
Keys in the <code>PKCS1</code>-format can not be processed directly using standard Java tools. For this, third-party libraries like BouncyCastle are necessary (see e.g. <a href=""https://stackoverflow.com/questions/41934846/read-rsa-private-key-of-format-pkcs1-in-java"">Read RSA private key of format PKCS1 in JAVA</a>).</p>

<p>Another possibility is to convert the <code>PKCS1</code>-formatted key into a <code>PKCS8</code>-formatted key with OpenSSL first (see e.g. <a href=""https://stackoverflow.com/questions/15344125/load-a-rsa-private-key-in-java-algid-parse-error-not-a-sequence/29827944"">Load a RSA private key in Java (algid parse error, not a sequence)</a>):</p>

<pre><code>openssl pkcs8 -topk8 -inform PEM -outform PEM -in &lt;path to the input-pkcs1-pem-file&gt; -out &lt;path to the output-pkcs8-pem-file&gt; -nocrypt
</code></pre>

<p>And then, after (programmatic) deletion of the Beginn-/End-line and after base64-decoding the private key can be generated (see e.g. <a href=""https://stackoverflow.com/questions/11787571/how-to-read-pem-file-to-get-private-and-public-key"">How to read .pem file to get private and public key</a>) e.g. with</p>

<pre><code>private static PrivateKey getPrivateKeyFromKeyFile(String keyfile) throws Exception
{
    Path path = Paths.get(keyfile);
    byte[] privKeyByteArray = Files.readAllBytes(path);
    // added ----------------------------------------------------------------
    String privKeyString = new String(privKeyByteArray);
    privKeyString = privKeyString.replace(""-----BEGIN PRIVATE KEY-----"", """");
    privKeyString = privKeyString.replace(""-----END PRIVATE KEY-----"", """");
    privKeyString = privKeyString.replace(""\r\n"", """");
    privKeyByteArray = Base64.getDecoder().decode(privKeyString);
    // ----------------------------------------------------------------------
    PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(privKeyByteArray);
    KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
    PrivateKey myPrivKey = keyFactory.generatePrivate(keySpec); 
    return myPrivKey;
}
</code></pre>
","467","<java><rsa><private-key><der><pkcs#8>","0","2","1","2019-01-13 15:35:13","","0","","","","","2019-01-13 11:26:23",""
"54183329","Openssl cant extract private key from pkcs12 keystore in fips mode","<p>I have inherited some PKI scripts during the process of our upgrading from RHEL6 to RHEL7 and we seem to be having some issues with OpenSSL and Java's Keytool. I am by no means a PKI expert and have begun to scratch the surface of PKI from researching this issue.</p>

<p>We generate a JKS using keytools genkeypair </p>

<pre><code>keytool -genkeypair -alias $ALIAS -keyalg RSA -keysize 2048 -keystore $keystore.jks -storepass $pass -keypass $pass -dname ""{$dname}"" -ext san=${san}
</code></pre>

<p>and then convert that JKS into a PKCS12 keystore.</p>

<pre><code>keytool -importkeystore -srckeystore $keystore.jks -destkeystore $p12keystore -srcstoretype JKS -deststoretype PKCS12 -srcstorepass $pass -deststorepass $pass -srcalias $ALIAS destalias $ALIAS -srckeypass $pass -destkeypass $pass -noprompt
</code></pre>

<p>We then try to extract the private key and store it in a PEM file.</p>

<pre><code>openssl pkcs12 -in $p12keystore -nocerts -out $key.pem  -passin $pass -passout $pass -nomacver
</code></pre>

<p>The operation succeeds without issue when we have FIPS disabled on the system. When we enable FIPS, we receive an error</p>

<pre><code>error:060740A0:digital envelope routines:EVP_PBE_CipherInit:unknown cipher: evp_pbe.c:181
</code></pre>

<p>doing some digging i find that our keytool doesn't change how it structures the PKCS12 keystore when fips is enabled and I think that this is causing the issue. when i inspect the keystore using openssl I get a similar error after it shows the PCKS7 data inside the keystore</p>

<pre><code>PKCS7 Encrypted data: pbeWithSHA1And40BitRC2-CBC, Iteration 50000
Error outputing keys and certificates
error:060740A0:digital envelope routines:EVP_PBE_CipherInit:unknown cipher: evp_pbe.c:181
</code></pre>

<p>I believe that this algorithm is not FIPS compliant which is causing OpenSSL to error out since in fips mode, it disables this cipher and it cant interpret the certificate therefore it cant get into the private key to extract it.</p>

<p>I have a feeling I'm either using a non-Fips compliant version of java (openjdk 1.8.0._171-b19) or I am missing some crypto extension that i would need to make my java FIPS compliant in RHEL7.</p>

<p>I came across some of the previous issues that say to use -descert option as a workaround to use 3DES to get the key but that didn't change the outcome. Any ideas or similar issues you may have encountered?  </p>
","","463","<java><openssl><ssl-certificate><private-key><keytool>","0","","0","2019-01-14 14:24:01","","0","","","","","2019-01-14 14:24:01",""
"22979653","Get RSA Private Key in RAW format","<p>I was working on a Project which purely involves PROVEN Mathematical equations, One of step requires value of private key, not for decryption or encryption.</p>

<p>In RSA we do have (e,n) as public key, (d,n) as private key. I am using phpseclib RSA implementation, there's option for us to get public key in RAW format, but there's none for private key. I came to know from documentation that phpseclib's RSA pads &amp; then encrypts (Which I do not want, as application is purely a mathematical).</p>

<p>Solution for me would be to get either of following two</p>

<p>(a) Get Private Key in Raw Format.</p>

<p>(b) Use some other implementation of RSA which gives me RAW values of both Private Key &amp; Public Key or if there's none implement my own RSA algorithm.</p>

<p>I did go through documentation of phpseclib, no useful solution was found. My question may not be properly formatted, but any help in this matter is welcome. Thanks in advance...</p>
","<p>After you load the key you could probably do something like this:</p>

<pre><code>$rsa = new Crypt_RSA();
$rsa-&gt;loadKey('...');
echo $rsa-&gt;modulus;
echo $rsa-&gt;exponent; // private exponent
echo $rsa-&gt;publicExponent;
echo $rsa-&gt;exponents[1]; // dp
echo $rsa-&gt;exponents[2]; // dq
echo $rsa-&gt;coefficients[2]; // inverseq
echo $rsa-&gt;primes[1]; // p
echo $rsa-&gt;primes[2]; // q
</code></pre>
","461","<php><encryption><rsa><private-key><phpseclib>","0","0","1","2014-04-10 19:15:39","22997039","0","2","","","","2014-04-10 05:54:01",""
"55921599","Convert 12 words mnemonic to Private Key in Ethereum","<p>I'm making an Android application where users can login using their Ethereum account and make transactions. So far, the user can login with his private key. I want to add the option of using the 12 mnemonic words to login as well. </p>

<p>I am able to generate the seed (mnemonic + passphrase) using MnemonicUtils: <a href=""https://github.com/web3j/web3j/blob/master/crypto/src/main/java/org/web3j/crypto/MnemonicUtils.java"" rel=""nofollow noreferrer"">https://github.com/web3j/web3j/blob/master/crypto/src/main/java/org/web3j/crypto/MnemonicUtils.java</a>. But how can I generate the private key of the account from that seed?
I have already tried using the code below, but it generates a different private key everytime for the exact same mnemonic.</p>

<pre class=""lang-java prettyprint-override""><code>String mnemonic="""" //I put here my own mnemonic
ECKeyPair exKey= null;
        try {

               exKey = Keys.createEcKeyPair();
                } catch (InvalidAlgorithmParameterException e) {
                e.printStackTrace();
                } catch (NoSuchAlgorithmException e) {
                e.printStackTrace();
                } catch (NoSuchProviderException e) {
                e.printStackTrace();
                }

                WalletFile wallet=null;
                try {
                wallet = Wallet.createLight(mnemonic,exKey);
                } catch (CipherException e) {
                e.printStackTrace();
                }

                Credentials credentials = null;
                try {
                credentials = Credentials.create(Wallet.decrypt(mnemonic,wallet));
                } catch (CipherException e) {
                e.printStackTrace();
                }
String privateKeyGenerated = credentials.getEcKeyPair().getPrivateKey().toString(16);
                Log.d(""PK"", privateKeyGenerated);
</code></pre>
","","460","<blockchain><ethereum><private-key><mnemonics>","0","","0","2019-05-17 21:31:55","","0","","11432623","","2019-04-30 13:39:01","2019-04-30 13:07:00",""
"47386610","What is the best practice to store SSH keys in database?","<p>I am building rest APIs for an application in node.js, where user needs to upload their server details like,
<strong>HostName</strong>
<strong>UserName</strong>
<strong>PrivateKey</strong></p>

<p>Once the user uploads all the details I am retrieving permissions from the server and display them in table format.</p>

<p>I don't want the user to upload the same server details again and again, so how do I store the private key and other server details securely in MongoDB database.</p>

<p>What kind of encryption techniques should I use?
I want to achieve this in node.js.</p>
","","460","<node.js><mongodb><rest><ssh><private-key>","5","","0","2017-11-20 07:03:38","","4","1","","","","2017-11-20 07:03:38",""
"25566243","server to server copy using custom port and private key with passphrase parameter","<p>While copy some file from server to server using scp command custom port and private key with passphrase parameter gives error</p>

<p>Command is like</p>

<blockquote>
  <p>scp -i xxxxxxx.pem   -P xxxxx   /path/source-file.zip
  root@example.com:/path/to/destination/file.zip</p>
</blockquote>

<p>error message</p>

<pre><code>ssh: connect to host example.com port xxxxx: Connection timed out
lost connection
</code></pre>

<p>While connecting example.com using privatekey(with custom port and passphrase) is working fine. But not working while we use scp command. </p>
","<p>This syntax is not working for me. </p>

<p>So I have used alternate method like <code>wget</code> and <code>CURL</code></p>
","459","<linux><ssh><copy><scp><private-key>","0","0","1","2015-04-01 10:11:46","29388105","2","","","","","2014-08-29 10:17:25",""
"42646539","How to access RSA private key at start of an app?","<p>I want to have a <code>RSA</code> pair key (private and public key) saved before running so i can send my encrypted message(with public key) and when server gives me a result back, decrypt it using private key.</p>

<p>Obviously i want my private key to be safe from any vulnerability such as exposure. I don't want to generate/store it in Run Time(like using <code>keystore</code>). It should exists with application package.</p>

<p>bottom line  i don't want to generate RSA key pairs each time i run my app, because i want to put those in my server too and i want a secure way to store them(<a href=""https://rammic.github.io/2015/07/28/hiding-secrets-in-android-apps/"" rel=""nofollow noreferrer"">there are some ways to extract things</a>.</p>
","<p>I do not recommend to embed a RSA encryption/decryption keypair in your app because:</p>

<ul>
<li><p>If the key is compromised then the security of your system is affected completely and you will need to distribute a new app to all your users</p></li>
<li><p>The ciphertext size is limited by the key length</p></li>
</ul>

<p>To encrypt/decrypt messages between client and server you just need to use a TLS channel (https). </p>
","459","<android><rsa><keystore><private-key>","0","1","1","2017-03-12 05:03:48","42666539","0","","3952987","","2017-03-12 05:03:48","2017-03-07 11:01:17",""
"23460248","Using Keytool in a java program?","<p>I am trying to write a program to generate RSA keys private.der, and public.der in PKCS#8, DER format.</p>

<p>I can do it in OpenSSL manually easily, but I have no idea how to do it in java. I read about Keytool that you can also use manually. But I want to automate the process in a program to generate a unique usable keypair each time the program is ran, and export them to a folder.</p>

<p>Any help would be appreciated. </p>
","<p>Key generation works as follows:</p>

<pre><code>KeyPairGenerator keyGen = KeyPairGenerator.getInstance(""RSA"");
keyGen.initialize(2048); // Keysize
KeyPair kp = keyGen.genKeyPair():
PrivateKey privKey = kp.getPrivate();
PublicKey pubKey = kp.getPublic();
</code></pre>

<p>Then use <code>privKey.getEncoded()</code> and <code>pubKey.getEncoded()</code> to get the encoded versions.</p>
","459","<encryption><rsa><private-key><public-key>","0","1","1","2014-05-04 19:44:32","23460754","1","","608639","","2014-05-04 19:44:32","2014-05-04 18:54:40",""
"15190942","Encrypting a private key with a passphrase","<p>I am working on a system where I need to store an RSA private key on a server.</p>

<p>I intend to use OpenSSL to generate the private key and to apply a passphrase to it so that the private key is encrypted on the server.</p>

<p>Can anyone tell me what process OpenSSL uses to encrypt the private key?  In other words, how does it use the passphrase to generate an encrypted version of the private key?</p>

<p>I believe that TripleDES is used here somehow to symmetrically encrypt the private key.  Is there a salt added to the passphrase, or can a salt be added somehow to make it more secure?</p>

<p>Any advice that you can give would be much appreciated.</p>
","","459","<encryption><openssl><rsa><private-key><passphrase>","0","","0","2013-03-03 21:10:55","","4","","","","","2013-03-03 21:10:55",""
"45668330","github, use same private and public key cross different machines. permission denied (publickey)","<p>Currently, I put all my private and public keys in bitbucket, then I clone them into different machines. e.g. home laptop, work desktop, etc.</p>

<p>Right now, I am using serria in Mac. I tested the private key with github and it seems fine.</p>

<pre><code>ssh -i id_rsa_kenpeter -vT git@github.com


debug1: Entering interactive session.
debug1: pledge: network
Hi kenpeter! You've successfully authenticated, but GitHub does not provide shell access.
debug1: client_input_channel_req: channel 0 rtype exit-status reply 0
debug1: channel 0: free: client-session, nchannels 1
Transferred: sent 2664, received 1776 bytes, in 0.6 seconds
Bytes per second: sent 4164.9, received 2776.6
debug1: Exit status 1
</code></pre>

<p>I tried to push something to github and I got this.</p>

<pre><code>OpenSSH_7.4p1, LibreSSL 2.5.0
debug1: Reading configuration data /Users/kenpeter/.ssh/config
debug1: Reading configuration data /etc/ssh/ssh_config
debug2: resolving ""github.com"" port 22
debug2: ssh_connect_direct: needpriv 0
debug1: Connecting to github.com [192.30.255.112] port 22.
debug1: Connection established.
debug1: identity file /Users/kenpeter/.ssh/id_rsa type 1
debug1: key_load_public: No such file or directory
debug1: identity file /Users/kenpeter/.ssh/id_rsa-cert type -1
debug1: key_load_public: No such file or directory
debug1: identity file /Users/kenpeter/.ssh/id_dsa type -1
debug1: key_load_public: No such file or directory
debug1: identity file /Users/kenpeter/.ssh/id_dsa-cert type -1
debug1: key_load_public: No such file or directory
debug1: identity file /Users/kenpeter/.ssh/id_ecdsa type -1
debug1: key_load_public: No such file or directory
debug1: identity file /Users/kenpeter/.ssh/id_ecdsa-cert type -1
debug1: key_load_public: No such file or directory
debug1: identity file /Users/kenpeter/.ssh/id_ed25519 type -1
debug1: key_load_public: No such file or directory
debug1: identity file /Users/kenpeter/.ssh/id_ed25519-cert type -1
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_7.4
debug1: Remote protocol version 2.0, remote software version libssh_0.7.0
debug1: no match: libssh_0.7.0
debug2: fd 6 setting O_NONBLOCK
debug1: Authenticating to github.com:22 as 'git'
debug3: hostkeys_foreach: reading file ""/Users/kenpeter/.ssh/known_hosts""
debug3: record_hostkey: found key type RSA in file /Users/kenpeter/.ssh/known_hosts:12
debug3: load_hostkeys: loaded 1 keys from github.com
debug3: order_hostkeyalgs: prefer hostkeyalgs: ssh-rsa-cert-v01@openssh.com,rsa-sha2-512,rsa-sha2-256,ssh-rsa
debug3: send packet: type 20
debug1: SSH2_MSG_KEXINIT sent
debug3: receive packet: type 20
debug1: SSH2_MSG_KEXINIT received
debug2: local client KEXINIT proposal
debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c
debug2: host key algorithms: ssh-rsa-cert-v01@openssh.com,rsa-sha2-512,rsa-sha2-256,ssh-rsa,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519
debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc
debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc
debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1
debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1
debug2: compression ctos: none,zlib@openssh.com,zlib
debug2: compression stoc: none,zlib@openssh.com,zlib
debug2: languages ctos: 
debug2: languages stoc: 
debug2: first_kex_follows 0 
debug2: reserved 0 
debug2: peer server KEXINIT proposal
debug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1
debug2: host key algorithms: ssh-dss,ssh-rsa
debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr,aes256-cbc,aes192-cbc,aes128-cbc,blowfish-cbc
debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr,aes256-cbc,aes192-cbc,aes128-cbc,blowfish-cbc
debug2: MACs ctos: hmac-sha2-256,hmac-sha2-512,hmac-sha1
debug2: MACs stoc: hmac-sha2-256,hmac-sha2-512,hmac-sha1
debug2: compression ctos: none,zlib,zlib@openssh.com
debug2: compression stoc: none,zlib,zlib@openssh.com
debug2: languages ctos: 
debug2: languages stoc: 
debug2: first_kex_follows 0 
debug2: reserved 0 
debug1: kex: algorithm: curve25519-sha256@libssh.org
debug1: kex: host key algorithm: ssh-rsa
debug1: kex: server-&gt;client cipher: chacha20-poly1305@openssh.com MAC: &lt;implicit&gt; compression: none
debug1: kex: client-&gt;server cipher: chacha20-poly1305@openssh.com MAC: &lt;implicit&gt; compression: none
debug3: send packet: type 30
debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
debug3: receive packet: type 31
debug1: Server host key: ssh-rsa SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8
debug3: hostkeys_foreach: reading file ""/Users/kenpeter/.ssh/known_hosts""
debug3: record_hostkey: found key type RSA in file /Users/kenpeter/.ssh/known_hosts:12
debug3: load_hostkeys: loaded 1 keys from github.com
debug3: hostkeys_foreach: reading file ""/Users/kenpeter/.ssh/known_hosts""
debug3: record_hostkey: found key type RSA in file /Users/kenpeter/.ssh/known_hosts:62
debug3: load_hostkeys: loaded 1 keys from 192.30.255.112
debug1: Host 'github.com' is known and matches the RSA host key.
debug1: Found key in /Users/kenpeter/.ssh/known_hosts:12
debug3: send packet: type 21
debug2: set_newkeys: mode 1
debug1: rekey after 134217728 blocks
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug3: receive packet: type 21
debug1: SSH2_MSG_NEWKEYS received
debug2: set_newkeys: mode 0
debug1: rekey after 134217728 blocks
debug2: key: /Users/kenpeter/.ssh/id_rsa (0x7fab0bd00f40)
debug2: key: /Users/kenpeter/.ssh/id_dsa (0x0)
debug2: key: /Users/kenpeter/.ssh/id_ecdsa (0x0)
debug2: key: /Users/kenpeter/.ssh/id_ed25519 (0x0)
debug3: send packet: type 5
debug3: receive packet: type 6
debug2: service_accept: ssh-userauth
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug3: send packet: type 50
debug3: receive packet: type 51
debug1: Authentications that can continue: publickey
debug3: start over, passed a different list publickey
debug3: preferred publickey,keyboard-interactive,password
debug3: authmethod_lookup publickey
debug3: remaining preferred: keyboard-interactive,password
debug3: authmethod_is_enabled publickey
debug1: Next authentication method: publickey
debug1: Offering RSA public key: /Users/kenpeter/.ssh/id_rsa
debug3: send_pubkey_test
debug3: send packet: type 50
debug2: we sent a publickey packet, wait for reply
debug3: receive packet: type 51
debug1: Authentications that can continue: publickey
debug1: Trying private key: /Users/kenpeter/.ssh/id_dsa
debug3: no such identity: /Users/kenpeter/.ssh/id_dsa: No such file or directory
debug1: Trying private key: /Users/kenpeter/.ssh/id_ecdsa
debug3: no such identity: /Users/kenpeter/.ssh/id_ecdsa: No such file or directory
debug1: Trying private key: /Users/kenpeter/.ssh/id_ed25519
debug3: no such identity: /Users/kenpeter/.ssh/id_ed25519: No such file or directory
debug2: we did not send a packet, disable method
debug1: No more authentication methods to try.
Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>

<p>It seems it didn't know how to use the private key <code>id_rsa_kenpeter</code>
I have lots of public/private key and a config file in .ssh. Bitbucket is working fine. How do I resolve for github?</p>
","<p>Here is the <a href=""https://stackoverflow.com/questions/33656916/ansible-with-github-permission-denied-publickey"">solution</a>.</p>

<p>Basically, I need to do <code>ssh-add ~/.ssh/your_private_key</code></p>

<p>After adding the private key to ssh agent, it seems like setting a global variable then ssh is aware the private key and uses it. Ubuntu never need to add to ssh-add</p>
","455","<git><github><ssh><private-key>","0","1","2","2017-08-14 10:02:17","","1","","","","","2017-08-14 06:08:25",""
"45668330","github, use same private and public key cross different machines. permission denied (publickey)","<p>Currently, I put all my private and public keys in bitbucket, then I clone them into different machines. e.g. home laptop, work desktop, etc.</p>

<p>Right now, I am using serria in Mac. I tested the private key with github and it seems fine.</p>

<pre><code>ssh -i id_rsa_kenpeter -vT git@github.com


debug1: Entering interactive session.
debug1: pledge: network
Hi kenpeter! You've successfully authenticated, but GitHub does not provide shell access.
debug1: client_input_channel_req: channel 0 rtype exit-status reply 0
debug1: channel 0: free: client-session, nchannels 1
Transferred: sent 2664, received 1776 bytes, in 0.6 seconds
Bytes per second: sent 4164.9, received 2776.6
debug1: Exit status 1
</code></pre>

<p>I tried to push something to github and I got this.</p>

<pre><code>OpenSSH_7.4p1, LibreSSL 2.5.0
debug1: Reading configuration data /Users/kenpeter/.ssh/config
debug1: Reading configuration data /etc/ssh/ssh_config
debug2: resolving ""github.com"" port 22
debug2: ssh_connect_direct: needpriv 0
debug1: Connecting to github.com [192.30.255.112] port 22.
debug1: Connection established.
debug1: identity file /Users/kenpeter/.ssh/id_rsa type 1
debug1: key_load_public: No such file or directory
debug1: identity file /Users/kenpeter/.ssh/id_rsa-cert type -1
debug1: key_load_public: No such file or directory
debug1: identity file /Users/kenpeter/.ssh/id_dsa type -1
debug1: key_load_public: No such file or directory
debug1: identity file /Users/kenpeter/.ssh/id_dsa-cert type -1
debug1: key_load_public: No such file or directory
debug1: identity file /Users/kenpeter/.ssh/id_ecdsa type -1
debug1: key_load_public: No such file or directory
debug1: identity file /Users/kenpeter/.ssh/id_ecdsa-cert type -1
debug1: key_load_public: No such file or directory
debug1: identity file /Users/kenpeter/.ssh/id_ed25519 type -1
debug1: key_load_public: No such file or directory
debug1: identity file /Users/kenpeter/.ssh/id_ed25519-cert type -1
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_7.4
debug1: Remote protocol version 2.0, remote software version libssh_0.7.0
debug1: no match: libssh_0.7.0
debug2: fd 6 setting O_NONBLOCK
debug1: Authenticating to github.com:22 as 'git'
debug3: hostkeys_foreach: reading file ""/Users/kenpeter/.ssh/known_hosts""
debug3: record_hostkey: found key type RSA in file /Users/kenpeter/.ssh/known_hosts:12
debug3: load_hostkeys: loaded 1 keys from github.com
debug3: order_hostkeyalgs: prefer hostkeyalgs: ssh-rsa-cert-v01@openssh.com,rsa-sha2-512,rsa-sha2-256,ssh-rsa
debug3: send packet: type 20
debug1: SSH2_MSG_KEXINIT sent
debug3: receive packet: type 20
debug1: SSH2_MSG_KEXINIT received
debug2: local client KEXINIT proposal
debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c
debug2: host key algorithms: ssh-rsa-cert-v01@openssh.com,rsa-sha2-512,rsa-sha2-256,ssh-rsa,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519
debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc
debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc
debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1
debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1
debug2: compression ctos: none,zlib@openssh.com,zlib
debug2: compression stoc: none,zlib@openssh.com,zlib
debug2: languages ctos: 
debug2: languages stoc: 
debug2: first_kex_follows 0 
debug2: reserved 0 
debug2: peer server KEXINIT proposal
debug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1
debug2: host key algorithms: ssh-dss,ssh-rsa
debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr,aes256-cbc,aes192-cbc,aes128-cbc,blowfish-cbc
debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr,aes256-cbc,aes192-cbc,aes128-cbc,blowfish-cbc
debug2: MACs ctos: hmac-sha2-256,hmac-sha2-512,hmac-sha1
debug2: MACs stoc: hmac-sha2-256,hmac-sha2-512,hmac-sha1
debug2: compression ctos: none,zlib,zlib@openssh.com
debug2: compression stoc: none,zlib,zlib@openssh.com
debug2: languages ctos: 
debug2: languages stoc: 
debug2: first_kex_follows 0 
debug2: reserved 0 
debug1: kex: algorithm: curve25519-sha256@libssh.org
debug1: kex: host key algorithm: ssh-rsa
debug1: kex: server-&gt;client cipher: chacha20-poly1305@openssh.com MAC: &lt;implicit&gt; compression: none
debug1: kex: client-&gt;server cipher: chacha20-poly1305@openssh.com MAC: &lt;implicit&gt; compression: none
debug3: send packet: type 30
debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
debug3: receive packet: type 31
debug1: Server host key: ssh-rsa SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8
debug3: hostkeys_foreach: reading file ""/Users/kenpeter/.ssh/known_hosts""
debug3: record_hostkey: found key type RSA in file /Users/kenpeter/.ssh/known_hosts:12
debug3: load_hostkeys: loaded 1 keys from github.com
debug3: hostkeys_foreach: reading file ""/Users/kenpeter/.ssh/known_hosts""
debug3: record_hostkey: found key type RSA in file /Users/kenpeter/.ssh/known_hosts:62
debug3: load_hostkeys: loaded 1 keys from 192.30.255.112
debug1: Host 'github.com' is known and matches the RSA host key.
debug1: Found key in /Users/kenpeter/.ssh/known_hosts:12
debug3: send packet: type 21
debug2: set_newkeys: mode 1
debug1: rekey after 134217728 blocks
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug3: receive packet: type 21
debug1: SSH2_MSG_NEWKEYS received
debug2: set_newkeys: mode 0
debug1: rekey after 134217728 blocks
debug2: key: /Users/kenpeter/.ssh/id_rsa (0x7fab0bd00f40)
debug2: key: /Users/kenpeter/.ssh/id_dsa (0x0)
debug2: key: /Users/kenpeter/.ssh/id_ecdsa (0x0)
debug2: key: /Users/kenpeter/.ssh/id_ed25519 (0x0)
debug3: send packet: type 5
debug3: receive packet: type 6
debug2: service_accept: ssh-userauth
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug3: send packet: type 50
debug3: receive packet: type 51
debug1: Authentications that can continue: publickey
debug3: start over, passed a different list publickey
debug3: preferred publickey,keyboard-interactive,password
debug3: authmethod_lookup publickey
debug3: remaining preferred: keyboard-interactive,password
debug3: authmethod_is_enabled publickey
debug1: Next authentication method: publickey
debug1: Offering RSA public key: /Users/kenpeter/.ssh/id_rsa
debug3: send_pubkey_test
debug3: send packet: type 50
debug2: we sent a publickey packet, wait for reply
debug3: receive packet: type 51
debug1: Authentications that can continue: publickey
debug1: Trying private key: /Users/kenpeter/.ssh/id_dsa
debug3: no such identity: /Users/kenpeter/.ssh/id_dsa: No such file or directory
debug1: Trying private key: /Users/kenpeter/.ssh/id_ecdsa
debug3: no such identity: /Users/kenpeter/.ssh/id_ecdsa: No such file or directory
debug1: Trying private key: /Users/kenpeter/.ssh/id_ed25519
debug3: no such identity: /Users/kenpeter/.ssh/id_ed25519: No such file or directory
debug2: we did not send a packet, disable method
debug1: No more authentication methods to try.
Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>

<p>It seems it didn't know how to use the private key <code>id_rsa_kenpeter</code>
I have lots of public/private key and a config file in .ssh. Bitbucket is working fine. How do I resolve for github?</p>
","<blockquote>
  <p>It seems it didn't know how to use the private key <code>id_rsa_kenpeter</code>.</p>
</blockquote>

<p>no, it does not know if you will not tell it how to use it, since it does not have standard name.</p>

<blockquote>
  <p>I have lots of public/private key and a config file in .ssh. Bitbucket is working fine. How do I resolve for github?</p>
</blockquote>

<p>Yes, your <code>~/.ssh/config</code> is a key to this question. Same way as you specified your key to the <code>ssh</code> command, you can do it in the configuration:</p>

<pre><code>Hostname github.com
  IdentityFile id_rsa_kenpeter
</code></pre>

<p>You will also probably have to use a full path to that file, since you plan to use a git from different directories than the one where is the key file.</p>
","455","<git><github><ssh><private-key>","0","0","2","2017-08-14 10:02:17","","1","","","","","2017-08-14 06:08:25",""
"26116689","Encrypt private key with java code","<p>i have generate a private key with java code and a save it so:</p>

<pre><code>KeyPair keys;
    try {
        keys = KeyTools.genKeys(""2048"", AlgorithmConstants.KEYALGORITHM_RSA);
        //SAVE PRIVKEY
        //PrivateKey privKey = keys.getPrivate();
        //byte[] privateKeyBytes = privKey.getEncoded();
        PKCS10CertificationRequest  pkcs10 = new PKCS10CertificationRequest(""SHA256WithRSA"",
                CertTools.stringToBcX509Name(""CN=NOUSED""), keys.getPublic(), null, keys.getPrivate());

        //Save Privatekey
        String privateKeyFilename = ""C:/Users/l.calicchio/Downloads/privateKey.key"";
        String password=""prismaPrivateKey"";
        byte[] start=""-----BEGIN PRIVATE KEY-----\n"".getBytes();
        byte[] end=""\n-----END PRIVATE KEY-----"".getBytes();
        byte[] privateKeyBytes = keys.getPrivate().getEncoded();

        byte[] encryptedPrivateKeyBytes = passwordEncrypt(password.toCharArray(), privateKeyBytes);

        File f=new File(privateKeyFilename);
        if (f.exists()){
            f.delete();
        }

        FileOutputStream fos = new FileOutputStream(f,true);
        fos.write(start);
        fos.write(Base64.encode(encryptedPrivateKeyBytes));
        fos.write(end);
        fos.close();
</code></pre>

<p>Now i want add passphrase to private key.
so i found this code:</p>

<pre><code>private static byte[] passwordEncrypt(char[] password, byte[] plaintext) throws Exception {
    String MYPBEALG = ""PBEWithSHA1AndDESede"";

    int count = 20;// hash iteration count
    SecureRandom random = new SecureRandom();
    byte[] salt = new byte[8];
    random.nextBytes(salt);

    // Create PBE parameter set
    PBEParameterSpec pbeParamSpec = new PBEParameterSpec(salt, count);
    PBEKeySpec pbeKeySpec = new PBEKeySpec(password);
    SecretKeyFactory keyFac = SecretKeyFactory.getInstance(MYPBEALG);
    SecretKey pbeKey = keyFac.generateSecret(pbeKeySpec);

    Cipher pbeCipher = Cipher.getInstance(MYPBEALG);

    // Initialize PBE Cipher with key and parameters
    pbeCipher.init(Cipher.ENCRYPT_MODE, pbeKey, pbeParamSpec);

    // Encrypt the encoded Private Key with the PBE key
    byte[] ciphertext = pbeCipher.doFinal(plaintext);

    // Now construct  PKCS #8 EncryptedPrivateKeyInfo object
    AlgorithmParameters algparms = AlgorithmParameters.getInstance(MYPBEALG);
    algparms.init(pbeParamSpec);
    EncryptedPrivateKeyInfo encinfo = new EncryptedPrivateKeyInfo(algparms, ciphertext);

    // and here we have it! a DER encoded PKCS#8 encrypted key!
    return encinfo.getEncoded();
</code></pre>

<p>but when i use this openssl command
openssl asn1parse -in privateKey.key
i have no error, but when i try this:
openssl rsa -noout -modulus -in privatekey.it 
i have a error:</p>

<blockquote>
  <p>unable to load private key 9964:error:0D0680A8:asn1 encoding
  routines:ASN1_CHECK_TLEN:wrong tag:.\crypto\as n1\tasn_dec.c:1319:
  9964:error:0D06C03A:asn1 encoding
  routines:ASN1_D2I_EX_PRIMITIVE:nested asn1 err
  or:.\crypto\asn1\tasn_dec.c:831: 9964:error:0D08303A:asn1 encoding
  routines:ASN1_TEMPLATE_NOEXP_D2I:nested asn1 e
  rror:.\crypto\asn1\tasn_dec.c:751:Field=version,
  Type=PKCS8_PRIV_KEY_INFO 9964:error:0907B00D:PEM
  routines:PEM_READ_BIO_PRIVATEKEY:ASN1 lib:.\crypto\pem\p
  em_pkey.c:132:</p>
</blockquote>

<p>I think that the private key is missing the following line:
Proc-Type: 4,ENCRYPTED
""DEK-Info: "" + ""AES-256-CBC""......
but how i add this(where i get this information?)?
tnx</p>
","<p>Please read the manual, <code>man rsa</code> gives the following details:</p>

<blockquote>
  <p>Note this command uses
         the traditional SSLeay compatible format for private key encryption:
         newer applications should use the more secure PKCS#8 format using the
         pkcs8 utility.</p>
</blockquote>
","455","<java><encryption><private-key><ejbca>","0","1","1","2014-09-30 18:16:32","","0","2","4004025","","2014-09-30 09:10:38","2014-09-30 08:58:32",""
"6008429","Private key encryption method wanted","<p>I am programming some server-client software and wanted some encryption. Both the server and client share a private key which is fixed length. Haven't decided what length I am going to have the key, but I do know that the key will be between 1 and 32 characters. The key is predetermined (so for instance I may decide I want the key to be abc1234)</p>

<p>I am programming in Java and need the algorithm to be a quick as possible as the clients are most likely to be mobile devices. I don't need any compression but I would prefer if the encrypted string wasn't larger.</p>

<p>I am not looking for top-notch encryption here obviously, but it is my understanding that any key based encryption can't be broken without knowledge of the private key anyway.</p>

<p>Can anyone recommend me an algorithm/method for encryption/decryption with a shared private key?</p>
","<p><em>it is my understanding that any key based encryption can't be broken without knowledge of the private key anyway</em></p>

<p>That's not even close to true. A lousy algorithm absolutely can be broken without knowledge of the private key.</p>

<p>Anyhow, if there's a shared key, consider <a href=""http://en.wikipedia.org/wiki/Advanced_Encryption_Standard"" rel=""nofollow"">AES</a>.</p>

<p>And read up on the <a href=""http://download.oracle.com/javase/6/docs/technotes/guides/security/crypto/CryptoSpec.html"" rel=""nofollow"">JCE/JCA</a> as Java can do AES and other types of encryption out of the box.  <strong>Much</strong> better than rolling your own.</p>
","455","<java><algorithm><encryption><private-key>","1","3","1","2011-05-15 12:46:23","6008444","6","0","","","","2011-05-15 12:42:27",""
"49731729","Using public key in asymmetric encryption with X.509 certificates","<p>Sometimes ago I've read an article about using asymmetric keys like public and private keys to send data securely. What I've understood was that the <strong>server</strong> has 1 key <strong>(private key)</strong> that it use to encrypt data and all <strong>clients</strong> use the second key <strong>(public key)</strong> to decrypt it.</p>

<p>Now how should I expect to receive the key and how should I work with?</p>

<p>If I receive a Certificate from the server, wouldn't it contain both public and private keys?!</p>

<pre><code>X509Store certStore = new X509Store(StoreName.My, StoreLocation.CurrentUser);
var cert = GetCertificate(certStore);
var privatekey= cert.PrivateKey;
var publicKey= cert.PublicKey;
</code></pre>

<p>Is it possbile to remove the private key from the certificate? How? and how can I understand if the certificate has the private key?</p>
","<p>First a little bit of clarification:</p>

<p>In <a href=""https://en.wikipedia.org/wiki/Public-key_cryptography"" rel=""nofollow noreferrer"">Public-key cryptography</a> the <strong>public key</strong> is used to <strong>encrypt</strong> the data and the <strong>private key</strong> is used (by the server) to <strong>decrypt</strong> the data.</p>

<p>The owner of the private key stores private key and only shares a public key.
Any certificate from a server should contain <strong>only</strong> a <strong>public key</strong>.
(It would be a big security issue if the certificate contains the private Key. You could decrypt the messages from any other user)</p>

<p>To check if the cerificate has a private key you can use the <a href=""https://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509certificate2.hasprivatekey(v=vs.110).aspx"" rel=""nofollow noreferrer"">HasPrivateKey-Property</a></p>

<pre><code>cert.HasPrivateKey;
</code></pre>

<p>And to get a certificate with only the public key you can use:</p>

<pre><code>byte[] bytes = cert.Export(X509ContentType.Cert);
var publicCert = new X509Certificate2(bytes);
</code></pre>
","453","<c#><x509certificate><private-key>","2","2","2","2018-04-09 11:59:00","49732291","3","","","","","2018-04-09 11:20:50",""
"49731729","Using public key in asymmetric encryption with X.509 certificates","<p>Sometimes ago I've read an article about using asymmetric keys like public and private keys to send data securely. What I've understood was that the <strong>server</strong> has 1 key <strong>(private key)</strong> that it use to encrypt data and all <strong>clients</strong> use the second key <strong>(public key)</strong> to decrypt it.</p>

<p>Now how should I expect to receive the key and how should I work with?</p>

<p>If I receive a Certificate from the server, wouldn't it contain both public and private keys?!</p>

<pre><code>X509Store certStore = new X509Store(StoreName.My, StoreLocation.CurrentUser);
var cert = GetCertificate(certStore);
var privatekey= cert.PrivateKey;
var publicKey= cert.PublicKey;
</code></pre>

<p>Is it possbile to remove the private key from the certificate? How? and how can I understand if the certificate has the private key?</p>
","<blockquote>
  <p>If I receive a Certificate from the server, wouldn't it contain both public and private keys?!</p>
</blockquote>

<p>No, not necessarily.</p>

<p>There are two different ways of obtaining the certificate </p>

<ul>
<li>PKCS#7/PEM - the file usually contains only the public part of the certificate</li>
<li>PKCS#12/PFX - the store contains certificates with private keys</li>
</ul>

<blockquote>
  <p>Is it possbile to remove the private key from the certificate?</p>
</blockquote>

<p>By exporting it to a format that lets you store only the public part of the certificate. </p>

<p>Open a web browser, navigate to any site that uses SSL.</p>

<p>Now click the lock icon and, from there, the certificate information. What you have at the client side (in the browser) is the certificate <strong>without</strong> the private key. You can save it and even import into the system cert store but still without the private key.</p>

<blockquote>
  <p>and how can I understand if the certificate has the private key?</p>
</blockquote>

<p>If you load it with your C# code, accessing the <code>HasPrivateKey</code> property will be <code>true</code> only for certs with private keys available.</p>
","453","<c#><x509certificate><private-key>","2","1","2","2018-04-09 11:59:00","49732291","3","","","","","2018-04-09 11:20:50",""
"29791372","Access private key used for signing my APK through the code","<p>I have a signed APK. What I want to do is, access the private key and sign (encrypt) some message using it.
Is it possible to access this private key through my code in run time?
Any sample code to do the same?</p>
","<ol>
<li><p>Never, ever place you Keyring for signing playstore apks in your app.
Because everyone can extract the keyring from your app and use it.</p></li>
<li><p>Best practice is to create a new keypair inside of your app on first start. So every installation of your app has its own keypair. Otherwise your users could encrypt data from other installations, too.</p></li>
<li><p>More secure is it, to ask the user for password. Which you can then use to secure the keystore for the newly generated keypair. This way also a stolen keystore of your app is harder to crack, because it has a password which only your user knows.</p></li>
<li><p>Very complex scenarios uses a key exchange system, where your user keys are generated and managed by a server application. Transport can be done with AES encryption etc.</p></li>
</ol>

<p>Here is good presentation about basic cryptography on android from a good fried al sutton ;) <a href=""http://de.slideshare.net/AlSutton/2014-droidcon-nlandroidcryptography?ref=https://www.linkedin.com/in/alsutton"" rel=""nofollow"">http://de.slideshare.net/AlSutton/2014-droidcon-nlandroidcryptography?ref=https://www.linkedin.com/in/alsutton</a></p>
","451","<android><private-key><android-keystore><jks>","-1","1","1","2015-04-22 09:24:11","","1","","","","","2015-04-22 08:07:43",""
"51606458","How to encrypt and decrypt messages using Virgil security?","<p>I am trying to integrate Virgil security in my basic chat application but it won't as needed.</p>

<p>While chatting 2 users say A and B. After both users logged in and have some communication between them. Now both users reload/logged out or logged in then old messages was sent was not able to decrypt as new private keys will be generated.
I so not want to stored the public and private key of users in database or in local storage.</p>
","<p>David from Virgil here. Thanks for the question and sorry for making you puzzled.</p>

<p>I believe the issue is: while the sample app generated user private &amp; public keys both for Alice and Bob, published the public keys to our Cards service, it hasn’t saved the private keys anywhere. So, the private keys remained in the browser's local storage and as such, didn’t sync to other browsers/devices where your users have logged in next. So in lack of their private keys, your users weren’t able to decrypt their messages... This is a limitation of the sample app and we should fix that ASAP (task created).</p>

<p>In order to get the app working, I.e. make your users be able to log in from another browser and decrypt messages, they need to retrieve their respected private keys from a central location. Now, it'd be too lame for me to recommend to just save the user private keys to your database (and enable others to access it + decrypt your users' messages), so we created a technology called BrainKey to encrypt the user private key with a key that we derive from the user’s password. Similar approach how Apple uses your TouchID-derived key to encrypt your keychain.</p>

<p>This is what you need to do to make it work:</p>

<ol>
<li><p>During user signup (on the client device), generate a private key for your user and publish the public key to our Cards service.</p></li>
<li><p>Then use the user's password to generate a BrainKey (which technically is a private key).</p></li>
<li><p>Generate the public key from the BrainKey and encrypt the user's previously (Step 1) generated private key.</p></li>
<li><p>Now, save this encrypted private key to your database for the user.</p></li>
</ol>

<p>Every single time your user logs in with her password, re-generate the same BrainKey from her password, download the encrypted private key from your DB, decrypt it with the BrainKey and now you can use this key to decrypt all chat messages that were sent to her.</p>

<p>Here’s a reference and sample code for our BrainKey tech: <a href=""https://developer.virgilsecurity.com/docs/javascript/use-cases/v1/brainkey"" rel=""nofollow noreferrer"">https://developer.virgilsecurity.com/docs/javascript/use-cases/v1/brainkey</a></p>

<p>Does it make sense? Would you like to see a sample code that does it? If you join our Slack, we can chat real-time, I’m @dave: <a href=""https://join.slack.com/t/virgilsecurity/shared_invite/enQtMjg4MDE4ODM3ODA4LTc2OWQwOTQ3YjNhNTQ0ZjJiZDc2NjkzYjYxNTI0YzhmNTY2ZDliMGJjYWQ5YmZiOGU5ZWEzNmJiMWZhYWVmYTM"" rel=""nofollow noreferrer"">https://join.slack.com/t/virgilsecurity/shared_invite/enQtMjg4MDE4ODM3ODA4LTc2OWQwOTQ3YjNhNTQ0ZjJiZDc2NjkzYjYxNTI0YzhmNTY2ZDliMGJjYWQ5YmZiOGU5ZWEzNmJiMWZhYWVmYTM</a></p>

<p>​David</p>
","447","<encryption><private-key><public-key>","1","1","2","2018-08-03 16:38:20","51676872","0","3","","","","2018-07-31 06:09:11",""
"51606458","How to encrypt and decrypt messages using Virgil security?","<p>I am trying to integrate Virgil security in my basic chat application but it won't as needed.</p>

<p>While chatting 2 users say A and B. After both users logged in and have some communication between them. Now both users reload/logged out or logged in then old messages was sent was not able to decrypt as new private keys will be generated.
I so not want to stored the public and private key of users in database or in local storage.</p>
","<p>I'm Dim from Virgil. Let me help you with this use-case.</p>

<p>I prepared some additional information:</p>

<p>Steps #1 and #2 from Virgil Simple JS Demo (You’ve already seen it)</p>

<p><strong>Step #1. User Registration Step.</strong></p>

<p><a href=""https://i.stack.imgur.com/YaVEA.jpg"" rel=""nofollow noreferrer"">users register their Public Keys</a></p>

<p>At this step:</p>

<ul>
<li>You authenticate Alice</li>
<li>After you successfully authenticated Alice, you give her a JWT to grant her access to Virgil’s Cloud APIs</li>
<li>Alice generates her Private Key (2) -> stores her Private Key into Local Storage -> creates her Virgil Card</li>
<li>Alice Publishes (3) her Virgil Card on Virgil Cards Service (She uses her JWT to do it).</li>
<li>Then you authenticate Bob (User B): same story as Alice.</li>
</ul>

<p>At the end, Alice and Bob have their own Private Keys and Virgil Cards (Public Key published into our cloud for users to find each other’s Public Keys). </p>

<p><strong>Step #2. Simple Communication (chat).</strong></p>

<p><a href=""https://i.stack.imgur.com/8JzCe.jpg"" rel=""nofollow noreferrer"">Simple e2e encrypted communication</a></p>

<p>At this step:</p>

<ul>
<li>Alice looks for &amp; finds Bob’s Public Key at Virgil Cards Service (1)</li>
<li>Alice loads her Private Key from her Local Storage in a browser</li>
<li>Alice signs (with her Private Key) and encrypts (with Bob’s Public Key) a message and sends to Bob through your Application Server</li>
<li>Bob receives the encrypted and signed message</li>
<li>Bob goes to Cards Service to find Alice’s Public Key in order to verify her signature</li>
<li>Bob loads his Private Key from his Local Storage and decrypts the message</li>
</ul>

<p><strong>As a result</strong>, Bob verified Alice’s signature and decrypted the Message from Alice.</p>

<p>And now, <strong>comes the problem</strong>: Alice decided to use another Browser (or a Device B), but she can’t encrypt Bob’s previous messages on the new device.</p>

<p><strong>Solution:</strong> you should transmit her Previous Private Key from Device A to Device B. To do this in the most secure way:</p>

<ul>
<li>is to encrypt Private Key on a device A with some Additional Secret Key.</li>
<li>transmit encrypted Private Key to Device B. </li>
<li>use the same Additional Secret Key on Device B to decrypt the encrypted Private Key from Device A.</li>
</ul>

<p>So, as you see you must use some special Additional Secret Key on both devices (some messengers do this with a QR code between the devices) to do it securely. To do it simpler though, we have a special tech for you to you generate the “Additional Secret Key” that will be the same on both devices. We call that Secret Key - a Brain Key. <strong>Brain Key</strong> - a strong cryptographic asymmetric key based on Alice’s PASSWORD. </p>

<p>You can find more information about this key here: <a href=""https://developer.virgilsecurity.com/docs/java/use-cases/v1/brainkey"" rel=""nofollow noreferrer"">https://developer.virgilsecurity.com/docs/java/use-cases/v1/brainkey</a></p>

<p>So now, let’s take a look at the next step.</p>

<p><strong>Step #3. Store your Private Key in the Cloud</strong></p>

<p><a href=""https://i.stack.imgur.com/EdKNy.jpg"" rel=""nofollow noreferrer"">store somewhere encrypted Private Key</a></p>

<p>At this step:</p>

<ul>
<li>Alice enters her Password</li>
<li>Alice generates a Brain Key from her password (1)</li>
<li>Alice encrypts her Private Key with the Brain Key (2)</li>
<li>Alice uploads her encrypted private key somewhere in Cloud (to your app’s backend/database)  </li>
</ul>

<p><strong>As a result</strong>, Alice will have her encrypted Private Key in the cloud, that she used to chat with Bob.</p>

<p><strong>Step #4. Alice now uses her new Browser (or new Device)</strong></p>

<p><a href=""https://i.stack.imgur.com/2pI6w.jpg"" rel=""nofollow noreferrer"">transmit a Private Key</a></p>

<p>At this step:</p>

<ul>
<li>Alice enters her Password (the same that she used previously for Brain Key generation).</li>
<li>This generates her Brain Key (1)</li>
<li>Alice downloads her encrypted Private Key from the Cloud / from your backend/database (2)</li>
<li>Alice decrypts the encrypted Private Key with the Brain Key</li>
</ul>

<p><strong>As a result</strong>, Alice will get her Private Key on a Device B, that she used to chat with Bob on a Device A. This way, the chat conversation survived her device change.</p>

<p>Every time when Alice uses a new device, she can re-generate the same Brain Key and easily get her Private Key, the key that she uses on all her devices to chat with Bob.</p>
","447","<encryption><private-key><public-key>","1","2","2","2018-08-03 16:38:20","51676872","0","3","","","","2018-07-31 06:09:11",""
"17992748","private key .pem loaded into aws elastic beanstalk (ebs)","<p>I am configuring a Java application using eclipse which is then deployed onto elastic beanstalk using Tomcat. This application uses Jsch, which is a technology that enables the application to connect to another server (or instance) using a .pem file. The only problem I have is that I do not know how to load the .pem file into elastic beanstalk in order for it to be used by the application. In normal circumstances (i.e. when using an stand alone instance rather than ebs), the application would just reference the .pem file from where it was located in the filesystem. However with ebs, I'm unsure of how to load it in, or reference it, because ebs is supposed to be composed of multiple instances right?</p>
","<p>First of all, EBS (Elastic Block Storage) is an AWS product which is <em>very different</em> from AWS Elastic Beanstalk. If you start talking to people knowledgeable in AWS, don't use <em>EBS</em> and <em>Elastic Beanstalk</em> interchangeably. :)</p>

<p>Elastic Beanstalk is designed to run websites and web applications which you <em>deploy</em> to it. As such, you'll need to add the <code>*.pem</code> file to the application source code that you deploy. Your application should know how to access it from within itself.</p>
","444","<amazon-web-services><elastic-beanstalk><jsch><private-key><pem>","0","1","1","2013-08-03 06:13:22","","0","","2015869","","2013-08-01 11:27:23","2013-08-01 11:25:29",""
"42753518","Nodejs crypto Decryption and browser encryption","<p>I need to pass a public key to the browser from nodejs and the browser should encrypt the user data and send it to the nodejs server, then nodejs should be able to decrypt it.
I am trying to use crypto of nodejs in the server side and <a href=""https://github.com/wwwtyro/cryptico"" rel=""nofollow noreferrer"">https://github.com/wwwtyro/cryptico</a> cryptico in the browser.</p>

<p>I looked into angularjs-crypo, ursa etc, It made me more confused.
PS: Im new to encryption and cryptography, any help would be appreciated</p>
","","439","<node.js><public-key-encryption><private-key>","0","","0","2017-03-12 21:40:32","","9","","","","","2017-03-12 21:40:32",""
"28986417","How to properly encrypt a JS generated RSA private key with a passphrase?","<p>I have a php back-end that previously generated RSA private/public keypairs on its own, encrypting the private part with a given passphrase.</p>

<p>Now I'm using this library: <a href=""http://travistidwell.com/jsencrypt/"" rel=""nofollow"">http://travistidwell.com/jsencrypt/</a> to generate a keypair on client side. But I didn't find how to encrypt the private key with a passphrase using this library. So I tried using this: <a href=""http://www.movable-type.co.uk/scripts/aes.html"" rel=""nofollow"">http://www.movable-type.co.uk/scripts/aes.html</a> but it seems that a key I get doesn't work, I can't encrypt/decrypt using it on my php back-end and different keys management apps don't recognize the key.</p>

<p>What am I doing wrong and how to successfully encrypt the original JSEncrypt'ed private key properly with a passphrase?</p>

<p>This is how the keypair was generated on PHP:</p>

<pre><code>                $config = array(
                    ""digest_alg"" =&gt; ""sha256"",
                    ""private_key_bits"" =&gt; 2048,
                    ""private_key_type"" =&gt; OPENSSL_KEYTYPE_RSA,
                    ""encrypt_key"" =&gt; true
                );
                $keypair = openssl_pkey_new($config);

                $pkey_pass = '123';

                openssl_pkey_export($keypair, $privKey, $pkey_pass, $config);
                $fp = fopen($keys_folder . '/private.pem', 'w');
                fwrite($fp, $privKey);
                fclose($fp);

                $pubKey = openssl_pkey_get_details($keypair);
                $fp = fopen($keys_folder . '/public.pem', 'w');
                fwrite($fp, $pubKey);
                fclose($fp);
</code></pre>
","<p>Maybe you could adapt code <a href=""http://phpseclib.sourceforge.net/"" rel=""nofollow"">from phpseclib</a>. Quoting it:</p>

<pre><code>if (!empty($this-&gt;password) || is_string($this-&gt;password)) {
    $iv = Random::string(8);
    $symkey = pack('H*', md5($this-&gt;password . $iv)); // symkey is short for symmetric key
    $symkey.= substr(pack('H*', md5($symkey . $this-&gt;password . $iv)), 0, 8);
    $des = new TripleDES();
    $des-&gt;setKey($symkey);
    $des-&gt;setIV($iv);
    $iv = strtoupper(bin2hex($iv));
    $RSAPrivateKey = ""-----BEGIN RSA PRIVATE KEY-----\r\n"" .
                     ""Proc-Type: 4,ENCRYPTED\r\n"" .
                     ""DEK-Info: DES-EDE3-CBC,$iv\r\n"" .
                     ""\r\n"" .
                     chunk_split(base64_encode($des-&gt;encrypt($RSAPrivateKey)), 64) .
                     '-----END RSA PRIVATE KEY-----';
} else {
    $RSAPrivateKey = ""-----BEGIN RSA PRIVATE KEY-----\r\n"" .
                     chunk_split(base64_encode($RSAPrivateKey), 64) .
                     '-----END RSA PRIVATE KEY-----';
}
</code></pre>

<p>src: <a href=""https://raw.githubusercontent.com/phpseclib/phpseclib/master/phpseclib/Crypt/RSA.php"" rel=""nofollow"">https://raw.githubusercontent.com/phpseclib/phpseclib/master/phpseclib/Crypt/RSA.php</a></p>
","437","<php><encryption><openssl><private-key>","3","1","2","2015-03-12 20:09:54","","2","","","user3078676","2015-03-11 12:26:31","2015-03-11 12:17:38",""
"28986417","How to properly encrypt a JS generated RSA private key with a passphrase?","<p>I have a php back-end that previously generated RSA private/public keypairs on its own, encrypting the private part with a given passphrase.</p>

<p>Now I'm using this library: <a href=""http://travistidwell.com/jsencrypt/"" rel=""nofollow"">http://travistidwell.com/jsencrypt/</a> to generate a keypair on client side. But I didn't find how to encrypt the private key with a passphrase using this library. So I tried using this: <a href=""http://www.movable-type.co.uk/scripts/aes.html"" rel=""nofollow"">http://www.movable-type.co.uk/scripts/aes.html</a> but it seems that a key I get doesn't work, I can't encrypt/decrypt using it on my php back-end and different keys management apps don't recognize the key.</p>

<p>What am I doing wrong and how to successfully encrypt the original JSEncrypt'ed private key properly with a passphrase?</p>

<p>This is how the keypair was generated on PHP:</p>

<pre><code>                $config = array(
                    ""digest_alg"" =&gt; ""sha256"",
                    ""private_key_bits"" =&gt; 2048,
                    ""private_key_type"" =&gt; OPENSSL_KEYTYPE_RSA,
                    ""encrypt_key"" =&gt; true
                );
                $keypair = openssl_pkey_new($config);

                $pkey_pass = '123';

                openssl_pkey_export($keypair, $privKey, $pkey_pass, $config);
                $fp = fopen($keys_folder . '/private.pem', 'w');
                fwrite($fp, $privKey);
                fclose($fp);

                $pubKey = openssl_pkey_get_details($keypair);
                $fp = fopen($keys_folder . '/public.pem', 'w');
                fwrite($fp, $pubKey);
                fclose($fp);
</code></pre>
","<blockquote>
  <p>How to encrypt a JS generated RSA private key with a passphrase?</p>
</blockquote>

<p>You have one of two choices. First, encrypt the entire key beofre it reaches disk. Then decrypt it before you use it. In this case, you treat the key like a file you want to encrypt.</p>

<p>Second, use PKCS #8, a.k.a. <a href=""http://www.ietf.org/rfc/rfc5208.txt"" rel=""nofollow"">RFC 5208, Public-Key Cryptography Standards (PKCS) #8: Private-Key Information Syntax Specification Version 1.2</a>. In particular, see section 6 of RFC 5208, <em>EncryptedPrivateKeyInfo</em>.</p>

<p>You have a third option, but its not advised. The third option is to use an encrypted PEM encoding. Its not advisable because its been superseded by PKCS #8.</p>

<p>In the future, you will have a fourth option, and that is to use <a href=""http://www.w3.org/TR/WebCryptoAPI/"" rel=""nofollow"">WebCrypto</a> to store your key. In this case, you moved the problem of secure storage to the platform.</p>

<p>Unfortunately, I don't know about the library you are using, so I don't know what it may (or may not offer). But the answers above cover the OpenSSL bits of your question.</p>
","437","<php><encryption><openssl><private-key>","3","0","2","2015-03-12 20:09:54","","2","","","user3078676","2015-03-11 12:26:31","2015-03-11 12:17:38",""
"17486819","BouncyCastleProvider do not get PrivateKey and certificate chain from PKCS#12 file","<p>I have file <code>cert.pfx</code> exported on Windows. This file contains my certificate. On Ubuntu i can open it with password and I see the certificate. But when I loaded this file:</p>

<pre><code>BouncyCastleProvider provider = new BouncyCastleProvider();
Security.addProvider(provider);
KeyStore ks = ks = KeyStore.getInstance(""pkcs12"", provider.getName());
ks.load(new FileInputStream(""/home/test/.cert.pfx"", ""xxxxxx"".toCharArray());
String alias = ks.aliases().nextElement();
PrivateKey pk = (PrivateKey) ks.getKey(alias, pts.getRandom());
Certificate[] chain = ks.getCertificateChain(alias);
</code></pre>

<p>After this operations I have <code>null</code> in <code>pk</code> and <code>chain</code>.<br/>
Also I have registered BC provider in <code>java.security</code></p>
","<p>I changed <code>BouncyCastleProvider</code> to <code>SunJSSE</code>. Now my correctly code is:</p>

<pre><code>String providerName = ""SunJSSE"";
KeyStore ks = ks = KeyStore.getInstance(""pkcs12"", providerName);
ks.load(new FileInputStream(""/home/test/.cert.pfx"", ""xxxxxx"".toCharArray());
String alias = ks.aliases().nextElement();
PrivateKey pk = (PrivateKey) ks.getKey(alias, pts.getRandom());
Certificate[] chain = ks.getCertificateChain(alias);
</code></pre>

<p>Now in <code>pk</code> is my privarte key, and in <code>chain</code> is certificate chain.<br/>
I don't know why in BC doesn't work. I have other certificate and BC provider work correctly.</p>
","437","<java><bouncycastle><private-key><pkcs#12><pfx>","0","1","1","2013-07-05 10:40:33","17486820","0","","","","","2013-07-05 10:34:48",""
"13749677","How to fully encrypt data in Ruby using Private Key encryption?","<p>First, some info on our system, which is basically an eTendering solution for the construction industry.</p>

<p>So:</p>

<ul>
<li>List item</li>
<li>Our system has multiple companies</li>
<li>Each company has multiple users</li>
<li>Each company can create multiple auctions</li>
<li>Other companies can then submit their bids for the available auctions. A bid consists of hundreds or thousands of individual items, and we would just need to encrypt the 'price' section of these records.</li>
</ul>

<p>The problem that we're facing is that our large customers do not want us to ever have access to the bid prices, at least while the bidding is in progress, which is totally understandable. Right now, we are simply encrypting the prices via a symmetric encryption, so even though the prices are effectively encrypted in the database, their concern is that we have the key to decrypt the prices.</p>

<p>We're thus looking at some form of public key encryption system.
Here is our initial thoughts on the solution:</p>

<ol>
<li>When a company signs up, we create a public/private keypair using OpenSSL for it and we save it in S3 or straight into the database. For this to be really useful, we would enforce the user to use a strong password for the private key, which would of course not be saved in the database.</li>
<li>When a company submits a bid for an auction, we encrypt the prices using the public key of the auction's owner company and we save them into the database.</li>
<li>When the auction bidding period is over and the issuing company wants to generate the report the first time, we ask him to input his password and use that along with his company's private key to decrypt the prices.</li>
<li>To make subsequent traffic faster, we cache the decrypted data (and maybe encrypt it using a simple symetrical encryption system)</li>
</ol>

<p>So here are the questions (and we're unfortunately not security experts, so sorry if those are stupid questions):</p>

<ul>
<li>Does this make any sense or is it a totally ludicrous or overkill solution?</li>
<li>Would we generate the keys using OpenSSL, OpenPGP or another solution?</li>
<li>What happens if a user wants to change his password or generate a new key? Would there be no other way but to decrypt/re-encode everything with the new key?</li>
<li>What would some of the pitfalls be with this solution?</li>
<li>Are there any better solutions that you could recommend?</li>
</ul>
","<p>To be clear: I have a hunch that your clients are probably not willing to sacrifice <em>all of the conveniences</em> that come with having your system manage some of the cryptography; you should probably present several options and their weaknesses vs convenience.</p>

<h3>General Points</h3>

<p>Before anything else, you start start with an explicit <a href=""http://en.wikipedia.org/wiki/Threat_model"" rel=""nofollow"">threat model</a>, covering every possible attack you can think of.  Even if you choose not to address some of the attacks (it's unrealistic to handle everything), you'll ferret out the more obvious attacks, and have at least a basic set of steps for handling others should they occur.</p>

<h3>Re: Does this make any sense?</h3>

<p>I think the general premise, while overkill on the part of your customers, makes sense from a security perspective.  Your clients want a cryptographically secure system; fair enough.</p>

<p>However, some points on your proposed solution:</p>

<ul>
<li><p>By allowing the client to pass their password over the wire, an attacker (which your client seems to think could be you) needs to only man in the middle that password to gain access to the pricing data.</p>

<ul>
<li>SSL helps mitigate this, but an errant log line somewhere along the line could very well expose the client's password by accident.</li>
</ul></li>
</ul>

<p>The <em>only</em> truly cryptographically secure way (as I see it) for the client to <em>ensure</em> that you don't have access to the pricing data is for them to encrypt it, and your system just acts as a broker for the encrypted data.  This, in effect, makes you a broker of encrypted packets and public keys, but your system <strong>should never see</strong> private keys.</p>

<p>The question is: are clients willing to manage their own keys, or is that too burdensome to them?  You might be able to automate most of it, at least (client app/website would handle storing the private key locally, and would also be responsible for gathering public keys of the other interested parties in order to decrypt their encrypted bids)</p>

<h3>Re: Would we generate the keys using OpenSSL, OpenPGP, or another solution?</h3>

<p>Really doesn't matter all that much; each of those options just define the container format for the public/private keys and any metadata.  Use whichever one fits your language/platform best.</p>

<p>The main decision point should be in which encryption algorithm and key strength: RSA-2048?  RSA-4096?  elliptic curve?  something else?</p>

<p>Specific to Ruby: You're probably just going to want to use the <a href=""http://ruby-doc.org/stdlib-1.9.3/libdoc/openssl/rdoc/index.html"" rel=""nofollow"">OpenSSL</a> library, since it's part of the standard library.  But to reiterate my point above: It's even better if your servers never even see the private keys (if the clients are ok with the trade off of better security over convenience)</p>

<h3>Re: What happens if a user wants to change his password or generate a new key?</h3>

<p>Changing a password is trivial: the private key its self is just encrypted w/ some symmetric algorithm.  Changing the password involves decrypting the existing key, and re-encrypting it with the new key.  If the client were to lose their password, there is no recovery.</p>

<p>Generating a new key is probably safer, but requires more diligence on your part (encrypted payloads will need to identify which key they match, and clients could have multiple keys active at a time).  This is a good thing, though; it is a common practice to rotate keys regularly, even if they are not compromised.</p>
","437","<ruby><security><encryption><private-key><public-key>","5","4","3","2013-12-12 19:35:12","","0","3","2432317","","2013-12-12 04:38:23","2012-12-06 18:00:09",""
"13749677","How to fully encrypt data in Ruby using Private Key encryption?","<p>First, some info on our system, which is basically an eTendering solution for the construction industry.</p>

<p>So:</p>

<ul>
<li>List item</li>
<li>Our system has multiple companies</li>
<li>Each company has multiple users</li>
<li>Each company can create multiple auctions</li>
<li>Other companies can then submit their bids for the available auctions. A bid consists of hundreds or thousands of individual items, and we would just need to encrypt the 'price' section of these records.</li>
</ul>

<p>The problem that we're facing is that our large customers do not want us to ever have access to the bid prices, at least while the bidding is in progress, which is totally understandable. Right now, we are simply encrypting the prices via a symmetric encryption, so even though the prices are effectively encrypted in the database, their concern is that we have the key to decrypt the prices.</p>

<p>We're thus looking at some form of public key encryption system.
Here is our initial thoughts on the solution:</p>

<ol>
<li>When a company signs up, we create a public/private keypair using OpenSSL for it and we save it in S3 or straight into the database. For this to be really useful, we would enforce the user to use a strong password for the private key, which would of course not be saved in the database.</li>
<li>When a company submits a bid for an auction, we encrypt the prices using the public key of the auction's owner company and we save them into the database.</li>
<li>When the auction bidding period is over and the issuing company wants to generate the report the first time, we ask him to input his password and use that along with his company's private key to decrypt the prices.</li>
<li>To make subsequent traffic faster, we cache the decrypted data (and maybe encrypt it using a simple symetrical encryption system)</li>
</ol>

<p>So here are the questions (and we're unfortunately not security experts, so sorry if those are stupid questions):</p>

<ul>
<li>Does this make any sense or is it a totally ludicrous or overkill solution?</li>
<li>Would we generate the keys using OpenSSL, OpenPGP or another solution?</li>
<li>What happens if a user wants to change his password or generate a new key? Would there be no other way but to decrypt/re-encode everything with the new key?</li>
<li>What would some of the pitfalls be with this solution?</li>
<li>Are there any better solutions that you could recommend?</li>
</ul>
","<blockquote>
  <p>When a company signs up, we create a public/private keypair using OpenSSL for it and we save it in S3 or straight into the database. For this to be really useful, we would enforce the user to use a strong password for the private key, which would of course not be saved in the database.</p>
</blockquote>

<p>I am a bit sceptical about this step. If you (the developer company) generate both the public and the private key used for the encryption it means you are 50% into being able to break the encryption. The only thing that protects your customer is the password, which you might be able to bruteforce (i am not suggesting that you will but you have the ability to do so)</p>

<p>If you will use PKI (or what you have described) you need to ensure that the key creation does not happen on your system. The client should create the pair on their systems and then provide you with their publoic key which you will use to encrypt the prices. The client then will be able to decrypt using the private key on which they have sole control</p>

<blockquote>
  <p>What would some of the pitfalls be with this solution?</p>
</blockquote>

<p>The pitfall is that you are making a complex solution. Especially if you follow my advice above, then you place your trust on the customer to not ""lose"" the private key (and/or password) or else they won't be able to decrypt the prices. In addition, if the key leaks from their side, it's difficult to prove that your application is ""innocent""</p>

<blockquote>
  <p>Would we generate the keys using OpenSSL, OpenPGP or another solution?</p>
</blockquote>

<p>In order to prevent the pitfall of a customer losing a key, you might want to look into PGP (the commercial version does this for sure) and into the concept of ADK (additional decryption key) and ""split keys"". The idea is that besides encrypting with the public key of the customer you also encrypt with a ""corporate"" key which can only be used if y out of x number of people come together (as an example, 10 people can possess parts of the key and if 6 of them come together they can reconstruct the key). The parts can be shared amongst your company, the client, their lawyer, etc</p>
","437","<ruby><security><encryption><private-key><public-key>","5","3","3","2013-12-12 19:35:12","","0","3","2432317","","2013-12-12 04:38:23","2012-12-06 18:00:09",""
"13749677","How to fully encrypt data in Ruby using Private Key encryption?","<p>First, some info on our system, which is basically an eTendering solution for the construction industry.</p>

<p>So:</p>

<ul>
<li>List item</li>
<li>Our system has multiple companies</li>
<li>Each company has multiple users</li>
<li>Each company can create multiple auctions</li>
<li>Other companies can then submit their bids for the available auctions. A bid consists of hundreds or thousands of individual items, and we would just need to encrypt the 'price' section of these records.</li>
</ul>

<p>The problem that we're facing is that our large customers do not want us to ever have access to the bid prices, at least while the bidding is in progress, which is totally understandable. Right now, we are simply encrypting the prices via a symmetric encryption, so even though the prices are effectively encrypted in the database, their concern is that we have the key to decrypt the prices.</p>

<p>We're thus looking at some form of public key encryption system.
Here is our initial thoughts on the solution:</p>

<ol>
<li>When a company signs up, we create a public/private keypair using OpenSSL for it and we save it in S3 or straight into the database. For this to be really useful, we would enforce the user to use a strong password for the private key, which would of course not be saved in the database.</li>
<li>When a company submits a bid for an auction, we encrypt the prices using the public key of the auction's owner company and we save them into the database.</li>
<li>When the auction bidding period is over and the issuing company wants to generate the report the first time, we ask him to input his password and use that along with his company's private key to decrypt the prices.</li>
<li>To make subsequent traffic faster, we cache the decrypted data (and maybe encrypt it using a simple symetrical encryption system)</li>
</ol>

<p>So here are the questions (and we're unfortunately not security experts, so sorry if those are stupid questions):</p>

<ul>
<li>Does this make any sense or is it a totally ludicrous or overkill solution?</li>
<li>Would we generate the keys using OpenSSL, OpenPGP or another solution?</li>
<li>What happens if a user wants to change his password or generate a new key? Would there be no other way but to decrypt/re-encode everything with the new key?</li>
<li>What would some of the pitfalls be with this solution?</li>
<li>Are there any better solutions that you could recommend?</li>
</ul>
","<p>So here's my suggestion, if you want to solve this using encryption...</p>

<ul>
<li>Each user <em>and</em> each company should generate <a href=""http://openpgp.com"" rel=""noreferrer"">OpenPGP</a> (or <a href=""http://gnupg.org"" rel=""noreferrer"">GnuPG</a>) <a href=""http://en.wikipedia.org/wiki/Public-key_cryptography"" rel=""noreferrer"">asymmetric</a> public/private key pairs</li>
<li>Each of those public keys should be uploaded to a <a href=""http://en.wikipedia.org/wiki/Key_server_%28cryptographic%29"" rel=""noreferrer"">public key server</a></li>
<li>Companies could optionally ""<a href=""http://en.wikipedia.org/wiki/Digital_signature"" rel=""noreferrer"">sign</a>"" the public keys of the individual users, to designate a trust relationship with those users (and revoke that signature if that relationship changes)</li>
<li>The auctioneer or non-partisan arbiter would also generate a key pair and push that public key to the public key server</li>
<li>As part of an auction registration process, each user would import the public key of the auctioneer, and the auctioneer would import the public key of each user</li>
<li>A trusted third party, perhaps a <a href=""http://en.wikipedia.org/wiki/Software_as_a_service"" rel=""noreferrer"">SaaS</a> vendor outside of the auctioneer, would host a service through which users and the auctioneer would communicate</li>
<li>Bidding users would create a bid by

<ul>
<li>signing their bid with their private key</li>
<li>encrypting their proposed price to <em>two</em> keys: their own public key <em>and</em> the auctioneer's public key</li>
<li>submitting their bid to the trusted third party service, which would need to enforce an embargo on any user retrieving bids before the auction expiration</li>
</ul></li>
<li>At auction end, and <em>only</em> after auction end, the auctioneer retrieves all of the bids, decrypts them, and verifies signatures</li>
</ul>

<p>A couple of key points:</p>

<ul>
<li>It's essential that no user or company private keys are ever shared or stored within the service -- that's the only real ""flaw"" I see in your proposed methodology in your question.  If that's the case, it would be very possible for one user to accuse an administrator of ""fraud"" or ""tampering"" with bids, as an administrator of your server would ultimately have access to the private keys of all users, since you've generated them yourself.</li>
<li>Along those same lines, it's essential that any an all communication and ""bids"" are cryptographically ""signed"" with the <em>truly</em> private keys by each user.  This is how you would know that a bid came from one particular user and <em>only</em> that user, and that the bid could not have been tampered with.</li>
<li>Encrypting the bids to the public keys of the bidding user and the auctioneer ensures that the third party SaaS vendor has no introspection into the bids themselves during the blackout period while the auction is open.  I believe this is the most important point to solving your problem as described.</li>
<li>Note that it might actually be preferred to encrypt each bid to a ring of <em>all</em> of the bidding users, if by design you want to make all bids public after the auction is closed.  That would be a slight modification to my algorithm as described above.</li>
</ul>

<p>In the interest of full disclosure and perhaps some subtle marketing, I happen to be the architect and CTO of a company called <a href=""http://gazzang.com"" rel=""noreferrer"">Gazzang</a> who has implemented a product called <a href=""http://gazzang.com/products/ztrustee"" rel=""noreferrer"">zTrustee</a> which operates exactly as described above ;-)</p>
","437","<ruby><security><encryption><private-key><public-key>","5","5","3","2013-12-12 19:35:12","","0","3","2432317","","2013-12-12 04:38:23","2012-12-06 18:00:09",""
"40660426","How to stop Windows CryptoAPI to add private key to public-only cert upon decryption","<p>I'm trying to test S/MIME decryption but CryptDecryptMessage function in decryption mode keeps working even if the certificate in Personal store is public-only (while private key is needed for decryption). Magically, the certificate turns into private+public certificate after this function is called.</p>

<p>Initially, I had full certificate in my Personal store and everything was working fine. Then, I had to test what would happen if someone tried to decrypt having just a public-key cert. So I exported public key, removed cert from the store and imported the public key alone. But I can't do my testing that because Windows somehow adds the private key back to the cert. Perhaps, there is some internal cache of private keys or something like that which is activated when CryptoAPI needs the private key. I would like to disable this feature if possible or somehow tell the system that I don't want to use it with my CryptoAPI calls.</p>

<p>The same occurs with Outlook (as it internally uses the same CryptoAPI functions).</p>

<p>I now added the excerpt from sources (cannot create the fully self-contained sample as it turns out to be too complex) but the decryption part should be OK. I double checked that the private key appears in the certificate at the very moment when CryptDecryptMessage is executed, not before or after.</p>

<pre><code>// stores is 1 entry (MY), got with CertOpenStore
// contentBytes is our data to decrypt
IntPtr[] storeHandles = new IntPtr[stores.Length];
for (int i = 0; i &lt; stores.Length; i++)
{
    if (stores[i] != null)
    {
        storeHandles[i] = stores[i].Handle;
    }
}
byte[] contentBytes = data;
IntPtr pDecryptPara = IntPtr.Zero;
IntPtr pbEncryptedBlob = IntPtr.Zero;
uint cbEncryptedBlob = (uint)contentBytes.Length;
IntPtr pbDecrypted = IntPtr.Zero;
uint cbDecrypted = 0;
CRYPT_DECRYPT_MESSAGE_PARA decryptPara = new CRYPT_DECRYPT_MESSAGE_PARA();
decryptPara.cbSize = (uint)Marshal.SizeOf(decryptPara.GetType());
decryptPara.dwMsgAndCertEncodingType = PKCS_7_ASN_ENCODING | X509_ASN_ENCODING;
decryptPara.cCertStore = (uint)storeHandles.Length;

GCHandle storeHandlesHandle = GCHandle.Alloc(storeHandles, GCHandleType.Pinned);
decryptPara.rghCertStore = (IntPtr) storeHandlesHandle.AddrOfPinnedObject();

IntPtr pXchgCert = IntPtr.Zero;

pDecryptPara = Marshal.AllocHGlobal((int)decryptPara.cbSize);
Marshal.StructureToPtr(decryptPara, pDecryptPara, true);

pbEncryptedBlob = Marshal.AllocHGlobal((int)cbEncryptedBlob);
Marshal.Copy(contentBytes, 0, pbEncryptedBlob, (int)cbEncryptedBlob);
// At this point the cert in MY storage does not have private key
int ret = CryptoApiFuncs.CryptDecryptMessage(pDecryptPara, pbEncryptedBlob, cbEncryptedBlob, pbDecrypted, ref cbDecrypted, ref pXchgCert);
// Now the cert has the private key
</code></pre>
","","436","<c#><winapi><certificate><private-key><cryptoapi>","1","","0","2016-11-21 17:12:49","","2","1","695182","","2016-11-21 17:12:49","2016-11-17 16:41:45",""
"51027036","What is the difference between apiserver-kubelet-client, apiserver and kubelet certificates","<p>I am getting confused with all the certificates and keys in Kubernetes.  </p>

<p>Inside the master I have the following certificates and keys:  </p>

<pre><code>/etc/kubernetes/pki/apiserver.crt
/etc/kubernetes/pki/apiserver.key

/etc/kubernetes/pki/apiserver-kubelet-client.crt
/etc/kubernetes/pki/apiserver-kubelet-client.key

/var/lib/kubelet/pki/kubelet.crt
/var/lib/kubelet/pki/kubelet.key
</code></pre>

<p>The <code>apiserver-kubelet-client (crt\key)</code> is used for secure communication between the apiserver and the kubelet inside the Master.<br>
Why I have also the <code>kubelet (crt\key)</code>? Isn't the <code>apiserver-kubelet-client (crt\key)</code> is enough ?  </p>

<p>Why I need <code>apiserver (crt\key)</code> if I have <code>apiserver-kubelet-client (crt\key)</code>  ?  </p>

<p>Hope someone can make some order with this.  </p>

<p>I read <a href=""https://jvns.ca/blog/2017/08/05/how-kubernetes-certificates-work"" rel=""nofollow noreferrer"">this</a> article about Kubernetes PKI but I am still don't understand what is difference between the above certificates and keys.   </p>
","<p>While preparing certs, you will end up with at least 1 file.</p>

<ul>
<li>CA_CERT

<ul>
<li>put in on node where apiserver runs, for example in /srv/kubernetes/ca.crt.</li>
</ul></li>
<li>MASTER_CERT

<ul>
<li>signed by CA_CERT</li>
<li>put in on node where apiserver runs, for example in /srv/kubernetes/server.crt</li>
</ul></li>
<li>MASTER_KEY

<ul>
<li>put in on node where apiserver runs, for example in /srv/kubernetes/server.key</li>
</ul></li>
</ul>

<p>You can read about it in Kubernetes docs <a href=""https://kubernetes.io/docs/setup/scratch#preparing-certs"" rel=""nofollow noreferrer"">here</a>.</p>

<p>It’s hard to say by the names of your certs what are they used for.
You should refer to the standard configuration.
Besides, you can have a look at <a href=""https://github.com/kelseyhightower/kubernetes-the-hard-way/blob/master/docs/04-certificate-authority.md"" rel=""nofollow noreferrer"">kelseyhightower/kubernetes-the-hard-way</a> as he’s showing how and when to use certificates.</p>

<p>You can check this <a href=""https://github.com/kubernetes/kubernetes/issues/54665#issuecomment-340908025"" rel=""nofollow noreferrer"">comment</a> posted on Github regarding what kind of certifications are needed between which services.</p>
","435","<kubernetes><ssl-certificate><private-key><pki>","0","0","1","2018-06-26 13:10:18","","1","","","","","2018-06-25 15:28:00",""
"40217262","Convert sun.security.mscapi.RSAPrivateKey to java.security.interfaces.RSAPrivateKey","<p>how to convert <code>sun.security.mscapi.RSAPrivateKey</code>  from <code>java.security.interfaces.RSAPrivateKey</code> ?</p>

<p><strong>My code snippet:</strong></p>

<pre><code>RSAPrivateKey key = (RSAPrivateKey)(pvtKey);
</code></pre>

<p>where <strong>pvtKey</strong> is <code>java.security.interfaces.RSAPrivateKey type.</code></p>

<p><strong>this line gives me exception :</strong></p>

<pre><code>java.lang.ClassCastException: sun.security.mscapi.RSAPrivateKey cannot be cast to java.security.interfaces.RSAPrivateKey
</code></pre>
","","435","<java><encryption><rsa><private-key>","1","","0","2016-10-24 11:29:51","","2","","","","","2016-10-24 11:29:51",""
"21145142","How to hex encode ciphertext","<p>I have a question about function openssl_private_encrypt() in PHP.
Before coding, I have valid private key generated with OpenSSL.
Based on one of the forum thread in php.net, I have code below:</p>

<pre><code>$fp = fopen(""D:\\myprivatekey.pem"", ""r"");
$priv_key = fread($fp, 8192);
fclose($fp);
$res = openssl_get_privatekey($priv_key, 'mypassphrase');
openssl_private_encrypt('plaintext', $crypttext, $res);
echo ""String crypted: $crypttext"";
</code></pre>

<p>I have copied file libeay32.dll and ssleay32.dll from C:\xampp\php to C:\xampp\apache\bin
Then the result is full of unreadable character like:</p>

<p>String crypted: ^«ƒ¸GÖÕaR³žØc®íû›&amp;x©bŒsÌÌ‰R+\,Î™lãq4¨­¼Œ8´˜pcšM¸¹”ŽµÀ;›1¬‘­‚ác;³•ç›¤À0Ž¾Ne@»ÿ­¡¯æ´^b‡ãIAÂ)¯{û³òÌ+A=Gô\M¾GrXt^Ëï·âOE-¶¹HÝû×L5ÆÙJ˜”ÄWºÚú9t/Ó:­ÛÑÇÙ­­¨Bpþq/,Œo·@¿e™¾^7[º qom…ójR*ˆn„nÇ®Nx«ïÈøkW2„9L«RÇÇôZ&amp; ãÞò¾rAO „Íj+¥`~û°rÌÿ5Ô!„¿W</p>

<p>How can I get the output as ASCII string MD5-like (but more than 32 in length), for example:
87f0ea083c7a03bb89aec910 ........</p>

<p>I think the unreadable characters can be converted to array of bytes, and then convert it as string, but how I can do that in PHP?</p>

<p>Thanks.</p>
","<p>Problem solved. Just use function bin2hex().</p>

<p>Thanks for stackoverflow, when I typed the question, it shows me another similar thread as suggestion, brilliant !!</p>
","433","<php><encryption><openssl><private-key><non-ascii-characters>","0","0","1","2014-01-15 18:38:34","","1","","168493","","2014-01-15 18:38:34","2014-01-15 18:12:17","2014-01-16 07:40:34"
"26089973","extract public key from RSA private key in c++ without openssl","<p>I know RSA private key contains the information of the associated public key. How can I dump the public key from the private key? I want to do it in iOS environment without openssl. Is it possible?</p>
","<p>yes it is possible ...</p>

<p>but you have to handle all the stuff about the way how the key is represented, i.e. how the specific parts of the key are stored in a file, etc</p>

<p>your private key consists of some numbers, usually like this:
d (private exponent), N (common modulus) P,Q (two very large primes) dP and dQ (intermediate values for a computational shortcut ... ignore them for your task)</p>

<p>what you want to do is to calculate PHI = (P-1)*(Q-1) and then run the extended euclidean algorithm (see wikipedia for that) for d and PHI to find the multiplicative inverse element of d mod PHI ... this element is e (public exponent)</p>

<p>your public key then is the tuple (e, N)</p>
","430","<ios><rsa><private-key><public-key><key-pair>","0","0","1","2014-09-29 06:07:56","","6","","","","","2014-09-28 21:44:46",""
"49470312","Equivalent of RSACryptoServiceProvider.FromXmlString in Java","<p>I have my private key in XML format and I am going to sign my data with that key. In .Net you can load your private key in XML format like this</p>

<pre><code>RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();
rsa.FromXmlString(""&lt;RSAKeyValue&gt;&lt;Modulus&gt;oQRshGhLf2Fh..."");
</code></pre>

<p>Is there a similar method in Java? If not, what alternatives would I have?</p>

<p>Right now my code looks like this</p>

<pre><code>Signature rsa = Signature.getInstance(""SHA1withRSA"");  
rsa.initSign(getPrivate(“&lt;RSAKeyValue&gt;&lt;Modulus&gt;oQRshGhLf2Fh...”));
rsa.update(message.getBytes());
byte[] signed = rsa.sign();
</code></pre>
","<p>Java doesn't have specific support for XML crypto keys (except possibly within XMLDSIG?) but it does have pretty extensive support for XML in general. I don't do dotnet, and you don't provide test data, so I had to make some up, but I <em>think</em> the following will work:</p>

<pre><code>import java.io.*;
import java.math.*;
import java.security.*;
import java.security.spec.*;
import javax.xml.bind.DatatypeConverter;
import javax.xml.parsers.*;
import org.w3c.dom.*;

String s = ""&lt;RSAKeyValue&gt;&lt;Modulus&gt;iDedXXkixunqnh278qUll8sWYIqyy/FfTd59kq6HDwXDapOXmYKkcsy+HTFbbLRb/bbJsMVEessdbwEVysedzx38QnWOBmGmY1VTKO8Ph3X1dkVktMT8zCbgKMBBT17dTbBE+B9zO6jqcN120qaHc8rOGC2KztM5xnEa3hNvSwk=""
        +""&lt;/Modulus&gt;&lt;Exponent&gt;AQAB""
        +""&lt;/Exponent&gt;&lt;P&gt;1TmBWEl5DARzhcmaaLJELymx0Sw3xcdEqEi/2nnIYrLE1YCb0OQVHvyFBBnXEgk81zxoqkPmItNO1yHzX7UIzw==""
        +""&lt;/P&gt;&lt;Q&gt;o4tFYK9HE4UhaLUGzx9WpFlX8NXsXcYxzV2ewCR1EXaMCA8xowSyyDfzhUugfKI02rTeQRucTnuttbJEQsu0pw==""
        +""&lt;/Q&gt;&lt;DP&gt;IKzGSHxB43iPJ3JkiiS/VCbki/Rlu5Y0zEERvW4qKg3RIhKqThGVtwDldWJsVeQ6gZVNSMJM8wtEqq0WOZVpew==""
        +""&lt;/DP&gt;&lt;DQ&gt;UAn3GExwEqOTKDWAcZm6w5BeM6Xemj5HXWS2Lv8otDU6by9QcaH5BXgsnE3Y62ZPS8I9C8xBgT+SUlw+gBpF/Q==""
        +""&lt;/DQ&gt;&lt;InverseQ&gt;lbcDsYsWBNg365eRqp8n8sGLR5gdG+SV5YUAZY+Bf1P2V9cpIm8YpVcUKZXkE5SwGub7p+mCQkAbaoT/pQyXOg==""
        +""&lt;/InverseQ&gt;&lt;D&gt;fi82wa5DfwyV4J8eymod5v2k3w3dD3urk5D1tnmid1IZcpMCrpwNBqOPwa9FR+/T/7XiJLS4+R9LRtc0fsJn9maEfUV26ry3vqQXYRlobdsWMFuNZPmHD1S7ef1fkGthDGWMmdiKyyy5Cy+lXEM/9VlexSKMxZc3Tor+v5SCB/k=""
        +""&lt;/D&gt;&lt;/RSAKeyValue&gt;"";

DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder();
// there are many options possible for XML but not needed here
Element el = db.parse(new ByteArrayInputStream (s.getBytes())).getDocumentElement();
// or other source including file if applicable
String[] names = {""Modulus"", ""Exponent"", ""D"", ""P"", ""Q"", ""DP"", ""DQ"", ""InverseQ""};
BigInteger[] vals = new BigInteger [names.length];
for( int i = 0; i &lt; names.length; i++ ){ 
    String v = el.getElementsByTagName(names[i]).item(0).getTextContent();
    vals[i] = new BigInteger(1, DatatypeConverter.parseBase64Binary(v));
}
PrivateKey pk = KeyFactory.getInstance(""RSA"").generatePrivate(
        new RSAPrivateCrtKeySpec (vals[0], vals[1], vals[2], vals[3], vals[4], vals[5], vals[6], vals[7]) );
//
Signature si = Signature.getInstance(""SHA1withRSA"");
si.initSign(pk); si.update(""foobar\r\n"".getBytes()); byte[] ss = si.sign();
</code></pre>
","428","<java><rsa><private-key><sign>","0","1","1","2018-03-27 18:50:38","49503427","0","","2627218","","2018-03-27 18:50:38","2018-03-24 21:50:34",""
"43426891","Passphrase for private key using ftpUpload function in R","<p>I'm writing something in R which needs to upload a file to a server using SSH key authentication. I'm using the below code from the RCurl package, but the private key I'm using has a passphrase. For the life of me, I can't figure out how to specify the passphrase for the key. Has anyone got experience of using the ftpUpload function, or possibly has a better way of doing this in R?</p>

<pre><code>ftpUpload(what = pathtofile,
       to = serverlocation,
       verbose = TRUE,
       .opts = list(
         ssh.private.keyfile = pathtokey
       ))
</code></pre>
","<p>From the R Documentation for <a href=""https://www.rdocumentation.org/packages/RCurl/versions/1.95-4.8/topics/curlOptions"" rel=""nofollow noreferrer"">curlOptions</a> and running <code>listCurlOptions()</code> it looks like <code>keypasswd</code> is what you're looking for. </p>

<p><strong>EDIT / UPDATE:</strong> I've tried adding this option to my own code and running it and it works fine for me. Your final call should look something like below:</p>

<pre><code>ftpUpload(what = pathtofile,
   to = serverlocation,
   verbose = TRUE,
   .opts = list(
     ssh.private.keyfile = pathtokey,
     keypasswd = passphrase
   ))
</code></pre>

<p>And your output should look something like:</p>

<pre><code>*   Trying 123.456.789…
* TCP_NODELAY set
* Connected to 123.456.789 (123.456.789) port 22 (#0)
* SSH MD5 fingerprint: abcdefghij123456789
* SSH authentication methods available: publickey
* Using SSH public key file '/Users/User1/.ssh/id_rsa.pub'
* Using SSH private key file '/Users/User1/.ssh/id_rsa'
* Initialized SSH public key authentication
* Authentication complete
* Connection #0 to host 123.456.789 left intact
OK 
0 
</code></pre>
","427","<r><ssh><private-key><rcurl><passphrase>","0","0","1","2017-06-19 02:11:53","44556084","0","","","","","2017-04-15 13:54:16",""
"12085247","How to extract Private key Exponent in RSA","<p>When i use <code>- (void)generateKeyPairRSA</code> i get these values for public and private key <strong>Public key SecKeyRef: 0x7131000
 Private key SecKeyRef: 0x790b000</strong>.</p>

<p>How to extract n,e,d values from private and public key??</p>
","","426","<iphone><objective-c><rsa><private-key>","1","","0","2012-08-23 08:37:44","","4","1","1425885","","2012-08-23 08:37:44","2012-08-23 05:29:07",""
"27516563","Best practice for using git private key on a public server with a shared user","<p>I Currently use some servers to do some benchmarks.  I need to log into multiple servers and git clone ... from assembla.</p>

<p>Currently I copy my private key to the server and then update the <code>.ssh/config</code> file.  Although I share this user and server with other people to do their benchmarks.  What is the best practice for this(without creating a new user for everyone on the server).  Is there anyway I can use ssh-add key then use git on the server and pull the repo without storing the key on the server?</p>
","<h2>Enable SSH agent forwarding</h2>

<p>Since you're using key-based authentication, the best solution is to allow
<em>forwarding of the authentication agent connection over the secure channel</em>.
If your public key is stored on the last server, there’s no need to store your
corresponding private key on the intermediate host.</p>

<p>Since the default client setting is <strong>not</strong> to forward the authentication
agent to the remote host, you should enable agent forwarding in your client
configuration. Add the following line to your <code>~/.ssh/config</code>:</p>

<pre><code>Host intermediate.server.name
    ForwardAgent yes
</code></pre>

<p>On the server, the default is to enable Agent Forwarding but in case it has
been disabled, you should ensure that the following line is uncommented in the
server’s SSHD configuration (usually <code>/etc/sshd_config</code>).</p>

<pre><code>AllowAgentForwarding yes
</code></pre>

<p>GitHub have a good article on <a href=""https://developer.github.com/guides/using-ssh-agent-forwarding/"" rel=""nofollow"">Using SSH agent forwarding</a> which references Steve Friedl's comprehensive <a href=""http://www.unixwiz.net/techtips/ssh-agent-forwarding.html"" rel=""nofollow"">Guide to SSH Agent Forwarding</a>.</p>
","424","<git><ssh><private-key><assembla>","1","1","1","2014-12-17 11:18:41","27523987","0","","1002260","","2014-12-17 02:02:12","2014-12-17 00:40:56",""
"12963001","Certificate not bound to the private key using keygen","<p>We are using html5  tag to generate keypair in google chrome. We get the P10 which we pass to the CA and get the signed cert back . Then we import the certificate to the CAPI store . After importing the certificate ,we noticed that the certificate is not bound to the private key which was generated using the  tag which makes it unusable.</p>

<p>We used the exact same procedure for firefox and safari and they work .The difference is that both firefox and safari use their own keystore where as Chrome makes use of the Windows CAPI store.</p>

<p>Does anybody have any idea about any additional steps that might be required to bound the certificate to the private key ? </p>

<p>We have investigated the issue quite a bit ,but there is not a whole lot of information about this issue. </p>

<p>Any help would be appreciated.</p>
","","421","<html5><google-chrome><private-key><pki><key-pair>","3","","0","2014-09-10 12:21:35","","2","","","","","2012-10-18 20:15:16",""
"1105913","I need to sign a binary stream with a certificate","<p>I basically need to create a self signed certificate and then sign a binary stream with it to create a signature. I tried searching Google but i can't seem to get the right keywords for related results. Any help is appreciated.</p>
","<p>You need to use the private key, not the certificate to sign a stream.  Since you tagged this with Java, I am assuming you want to use the JCA.</p>

<p>Check out this example: <a href=""http://java.sun.com/j2se/1.4.2/docs/guide/security/CryptoSpec.html#SigEx"" rel=""nofollow noreferrer"">http://java.sun.com/j2se/1.4.2/docs/guide/security/CryptoSpec.html#SigEx</a></p>
","418","<java><signature><self-signed><private-key>","1","1","1","2009-07-10 01:32:05","1106756","4","","135856","","2009-07-10 01:32:05","2009-07-09 19:14:24",""
"18330644","Integer Encryption","<p>I am looking for an encryption function (so, 1:1 mapping) that maps integer to integer.</p>

<p>For example, let's say I have <code>N1</code> (integer) and a <code>password</code>. I use the encryption function to get integer <code>N2</code>. Then if (and only if) I know the password I should be able to get back <code>N1</code> from <code>N2</code>.</p>

<p>What is the best function for that?</p>
","<p>Take a look at <a href=""https://en.wikipedia.org/wiki/Format-preserving_encryption"" rel=""nofollow"">format preserving encryption</a> I think it is what you are looking for. For example you can use Feistel network and AES to encrypt integer and get encrypted integer. There are many examples of encrypting credit card number preserving its format.</p>
","411","<encryption><hash><private-key>","1","2","1","2013-08-20 09:03:06","18331038","3","1","","","","2013-08-20 08:41:54",""
"40929654","Customize openssl generate RSA key params","<p>I want to generate a keypair with openssl, but I can't set parameters to generate my private/public key. 
I want pass an input parameter, for example a identifier (example mac address), to obtain an unique private/public key. For the same identifier I want the same private/public key.
How I can make this?
Thanks in advance :D</p>
","<p>RSA key pairs have to be generated randomly. </p>

<p>Making the generation deterministically - you no longer generate a key but derive the key from certain data (e.g. based on a MAC address). This reduces the security of the generated keys to zero - hence they are useless and you don't even have to start to generate them.</p>

<p>The central assumption the security of RSA bases on is that the private key is only known to the key owner. If you take a public information like the MAC address the following formula applies:</p>

<p>RSA key pair = your-derivation-algorithm( MAC address )</p>

<p>If you want to know the RSA private key (which is part of the key pair) you need the MAC address and the derivation-algorithm. The MAC is public and the derivation-algorithm will be public earlier or later.</p>

<p>Hence the RSA private key is public too, which makes it useless from a security perspective because everybody who knows the MAC address can generate it.</p>

<p>Keep in mind: Security bases on secret data in combination with a well-engineered algorithm. Whether the algorithm is public or not should not have any effect on the security. If it has an effect you have an insecure algorithm you can throw away.</p>
","409","<openssl><rsa><private-key>","1","-1","1","2016-12-02 18:26:46","","2","","1254800","","2016-12-02 12:12:06","2016-12-02 10:12:02",""
"53111636","In jenkins ssh-agent plugin can't find credential specified as parameter","<p>I created a credentials parameter TEST_CREDENTIALS , and when i try to inject as ssh plugin agent parameterized as ${TEST_CREDENTIALS}, i see the below error </p>

<p>java.io.IOException: [ssh-agent] Could not find specified credentials </p>
","<p>Creating a Credential in Jenkins does not mean that an environment variable is created automatically.</p>

<p>This is what you do in a pipeline job to ""get at"" the credential details, namely the username and password.</p>

<pre><code>.
.
.
environment {
    ARTIFACTORY_CID = 'CREDENTIAL_NAME'
}

withCredentials([usernamePassword(credentialsId: ""${env.ARTIFACTORY_CID}"", passwordVariable: 'p_password', usernameVariable: 'p_username')]) {
    server.username = ""${p_username}""
    server.password = ""${p_password}""
}
</code></pre>

<p>CREDENTIAL_NAME should be a human-readable descriptive name for your credential (I like to name things based on the function they perform).</p>

<p><code>withCredentials([...])</code> is the pipeline clause that puts the components of the credential (username and password in this case) into environment variables for you.</p>

<p>Given that in this example my credential type is ""Username with password"" I have to use <code>usernamePassword(...)</code>.  If my credential type was ""SSH Username with private key"" I would use <code>sshUserPrivateKey(...)</code>.</p>

<p><code>usernameVariable</code> sets the name of a new environment variable for the username.
<code>passwordVariable</code> sets the name of a new environment variable for the password.</p>

<p>You can then access and make use of the username and password values from the credential using the environment variables <code>${p_username}</code> and <code>${p_password}</code>.</p>
","407","<jenkins><private-key><ssh-agent>","0","0","1","2018-11-02 05:21:52","","0","","","","","2018-11-02 01:41:18",""
"26974022","How does a Certificate Authority send a private key safely to a consumer?","<p>How does a Certificate Authority send the private key securely to their consumer?</p>
","","404","<private-key><ca><certificate-authority>","1","","0","2014-11-17 13:41:51","","6","","","","","2014-11-17 13:41:51",""
"49488317","keyStore rsa privateKeyEntry, public key and private key are equals","<p>I generated  and store RSA key into android keyStore ,
then I generated an AES  key and encrypt that with RSA public-key,  when i want to decrypt encrypted-AES-key i got this error :java.security.InvalidKeyException: Need RSA private or public key</p>

<pre><code>    KeyStore.PrivateKeyEntry privateKeyEntry = (KeyStore.PrivateKeyEntry) keyStore.getEntry(KEY_ALIAS, null);
    Cipher output = Cipher.getInstance(RSA_MODE, ""AndroidOpenSSL"");
    output.init(Cipher.DECRYPT_MODE, privateKeyEntry.getPrivateKey());
</code></pre>

<p>after log privateKeyEntry.getCertificate().getPublicKey()
and privateKeyEntry.getPrivateKey()</p>

<p>I saw the keys mModulas are equals, anyone has any idea about that?</p>
","<p>You are using keys managed by ""AndroidKeyStore"" key. Try to remove ""AndroidOpenSSL"" here</p>

<pre><code> Cipher output = Cipher.getInstance(RSA_MODE, ""AndroidOpenSSL"");
</code></pre>

<blockquote>
  <p>after log <code>privateKeyEntry.getCertificate().getPublicKey()</code> and <code>privateKeyEntry.getPrivateKey()</code> I saw the keys mModulas are equals, anyone has any idea about that?</p>
</blockquote>

<p>The public modulus of the private key and the public key are the same. This is normal</p>
","400","<android><rsa><keystore><private-key><public-key>","2","3","1","2018-03-26 12:49:05","49491888","3","","4650625","","2018-03-26 09:53:27","2018-03-26 09:39:33",""
"15495614","Generating a Private Key From CA with OpenSSL","<p>I'm trying to use OpenSSL to create a private key which matches (the public key of?) a certain CA (PEM file), but I don't know what command to use to achieve this.</p>

<p>If I just create a random private key and try to use it with the CA I get a ""No certificate matches private key"" error.</p>

<p>Eventually I would like to use my private key here: <a href=""http://gazelle.ihe.net/pki/details/assemble.seam"" rel=""nofollow"">http://gazelle.ihe.net/pki/details/assemble.seam</a></p>
","<p>It's not possible to generate a private key from a public key. That's the whole point of encryption. See <a href=""http://en.wikipedia.org/wiki/Public-key_cryptography/"" rel=""nofollow"">wikipedia</a> for more information about encryption.</p>

<p>For the thing you want to do, you have to generate a public and private key using OpenSSL en have your public key signed by a CA. For more information about how to generate your public/private keypair using openssl see <a href=""http://www.openssl.org/docs/HOWTO/keys.txt"" rel=""nofollow"">http://www.openssl.org/docs/HOWTO/keys.txt</a>. Make sure you don't enter a password when prompted for it, otherwise, every time your server/service restarts, you'll be prompted to enter it and it can cause downtime of your application. </p>
","395","<openssl><private-key><ca>","0","0","1","2013-03-19 09:39:01","","0","","","","","2013-03-19 09:25:46",""
"30197552","Load and use PKCS#8 Private Key","<p>I am currently generating and saving a key pair of RSA keys inside a Java REST Server using the following block of code:</p>

<pre><code>        keyPairGenerator = KeyPairGenerator.getInstance(""RSA"");

        keyPairGenerator.initialize(2048);
        KeyPair keyPair = keyPairGenerator.genKeyPair();

        publicKey=keyPair.getPublic();
        publicKeyBase64 = Base64.encodeBase64String(publicKey.getEncoded()) ;

        PrivateKey privateKey = keyPair.getPrivate();
        privateKeyBase64 =  Base64.encodeBase64String(privateKey.getEncoded());
</code></pre>

<p>Now I want to use this same private key to decrypt another information returned from the server using an iOS client. As far as I know, the iOS does not provide great native support for RSA encryption. How can I decrypt information using this private key, supposing that I currently have the key encoded as a PKCS#8 Base64 string (like inside the variable privateKeyBase64)?</p>

<p>Thank you!</p>
","","395","<ios><rsa><private-key>","0","","0","2015-05-12 17:20:30","","4","1","","","","2015-05-12 17:20:30",""
"23011384","The private key for is not installed on this mac","<p>I wanted to use xcode for particular project in a machine other than usually i am working. I tried to archive the project and got an error ""The private key for is not installed on this mac - distributing”<br>
Then i exported the developer profile and problem solved. But it doest work in the first machine. how to overcome this problem.</p>
","<p>You have to export your Certificate (Developer and/or Distribution) from your keychain as .p12 file and import it to the other machines.</p>
","388","<ios><xcode><private-key><iphone-developer-program>","0","2","1","2014-04-11 11:36:21","23011493","0","1","","","","2014-04-11 11:29:35",""
"44842400","Zevenet Load Balancer - SSL Certificate","<p>I am wondering if anyone has any experience with Zevenet Load Balancers.</p>

<p>I have setup the community version (V4). I have 2 web servers with replicated content, I have a virtual IP setup in the system which points to the 2 IP addresses of the web servers. The load balancer works for HTTP and HTTPS traffic correctly but shows an cert error when trying to get to the servers via HTTPS.</p>

<p>I want to combat this by adding a certificate to the load balancer. To do this I have followed the these steps:</p>

<p><a href=""https://www.zevenet.com/knowledge-base/howtos/manage-certificates-with-zen-load-balancer/"" rel=""nofollow noreferrer"">https://www.zevenet.com/knowledge-base/howtos/manage-certificates-with-zen-load-balancer/</a> (ignoring the bit about purchasing a cert from SofIntel as we use JISC for our Certs)</p>

<p>Basically I created a certificate in the load balancer, generated the CSR, purchased a certificate from JISC by uploading the CSR generated from the load balancer. </p>

<p>I then downloaded the ZIP file from JISC which contains the crt for the domain, as well as the root certificates required also in the ZIP.</p>

<p>I tried uploading the ZIP to the load balancer and it pops up an error showing that the certificate needs to be created in a PEM format.</p>

<p>I then found this here:</p>

<p><a href=""https://www.zevenet.com/knowledge-base/howtos/create-certificates-pem-format/"" rel=""nofollow noreferrer"">https://www.zevenet.com/knowledge-base/howtos/create-certificates-pem-format/</a></p>

<p>I am not really sure what this is asking me to do....does this mean the original CSR that I generated is irrelevant now? The instructions on the above link say that the PEM file needs to be the following:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY----- Private Key (without passphrase) -----END RSA PRIVATE KEY----- 
-----BEGIN CERTIFICATE----- Certificate (CN=www.mydomain.com) -----END CERTIFICATE----- 
-----BEGIN CERTIFICATE----- Intermediate (Intermediate CA, if exists) -----END CERTIFICATE----- 
-----BEGIN CERTIFICATE----- Root (ROOT CA, who signs the Certificate) -----END CERTIFICATE-----
</code></pre>

<p>Essentially I already have the domain certificate, the intermediate and the root all from JISC now. But is there any way  can go about getting the Private key from the load balancer so that I can just create the PEM file manually.</p>

<p>I am pretty new to cert stuff, not sure why it wont just let me upload the zip file.</p>
","","387","<ssl><private-key><public-key><pem><csr>","0","","0","2017-06-30 10:41:42","","4","","472495","","2017-06-30 10:41:42","2017-06-30 08:51:14",""
"43230534","HTTP transport error - unable to find valid certification path to requested target","<p>I am trying to call a SOAP webservice which is secured by SSL. They have provided me with a <strong>.p12</strong> file.</p>

<p>I have extracted the <strong>privateKey.pem</strong> and <strong>publicCertificate.pem</strong> and <strong>keystore.jks</strong>.</p>

<ul>
<li>Which of these files I really need to call the SOAP web service and why?</li>
<li>How should I use them? System.setProperty?</li>
<li>Do you advice me to store them in the application or in the host machine somewhere?</li>
</ul>
","<p>if i get it right you are trying to call a soap service that is secured by ssl? If the service is secured by a certificate provided from an official trustcenter than there is nothing you have to do. (Maybe keep your java up to date in case of new root certificates)</p>

<p>If the service is secured by a self signed certificate then you have to provide the public key to the javavm to accept this certificate as trusted. You could add the Zertifikat to the java keystore file located in “C:\Program Files\Java\jre1.8.0_121\lib\security\cacerts” (depends on your operating system). </p>

<p>There is a very nice description for that here: <a href=""https://stackoverflow.com/questions/2893819/telling-java-to-accept-self-signed-ssl-certificate"">telling java to accept self-signed ssl certificate</a></p>
","381","<java><ssl><ssl-certificate><keystore><private-key>","0","0","1","2017-04-05 12:31:56","","0","","3210604","","2017-04-05 12:31:56","2017-04-05 11:58:27","2017-04-05 13:43:26"
"46012756","How to store Encryption Keys while in use","<p>I am making a social media type website, and I store user details such as emails, names and other personal details.</p>

<p>I will be encrypting the personal details using an Encrypt-then-MAC concept. When the user registers, a cryptographically secure string will be made to use as the private encryption key. When the user selects a password, the encryption key will be encrypted using the password.</p>

<p>The password will NOT be stored in the database, but will be the private key to decrypt the encryption key used to encrypt the personal details. The only person who knows the password is the user. My question is: how can I store the encryption key once decrypted?</p>

<p>I have thought of having a table with one column for IP and another column for the encryption key, but some people close the browser window without logging out, therefore there would not a possible way to remove the entry from the database when they have finished their session on the website.</p>

<p>Another way would be to store it in a cookie, but that could be intercepted when sent back to the server. I would like to know if there is a secure, <em>nearly foolproof</em> way to store the encryption key, client side or server side.</p>

<p>Thanks in advance.</p>

<p>EDIT:</p>

<p>In reply to TheGreatContini's answer - 
The idea of a ""zero-knowledge web application"" (in your blog) is a good one, however, for zero-knowledge, even the key cannot be stored in the database, this complicates things a bit, as you would then have to use the user's password as the key. Using the password isn't as secure, as it is a bit harder to verify the password to prevent data which has been ""decypted with the wrong key"" from passing. There is the concept of Encrypt-then-MAC but that only verifies if the data is legit, and will assume that a hacker has messed with some data and data cannot be trusted, however, as you cannot actually verify the password (the hash would not be stored as it is ""zero-knowledge""), so the password may just be wrong.</p>
","<p>Not sure I have the answer, but a few considerations:</p>

<p>(1) Sessions need to be timed out.  Perhaps you can do this by periodically running batch jobs that scan the database looking for sessions that have lacked activity.  This requires storing in the db the date of the last action from the user.</p>

<p>(2) Generally keys are higher value than the content they protect because the keys have a longer lifetime than the individual data elements that the protect (because the data may change or additional data may be added).  Rather than storing the key in the db, you can store the decrypted contents in the database for the length of the session.  Of course, this is provided that you did (1).</p>

<p>Perhaps I am not adding much beyond what you already know, however may be worth considering <a href=""https://littlemaninmyhead.wordpress.com/2015/09/08/a-retrospective-on-ashely-madison-and-the-value-of-threat-modeling/"" rel=""nofollow noreferrer"">a blog I wrote exactly about this topic</a>.  The low level details start in the section ""A second line of defence for all the sensitive data.""  Prior to that it mainly motivates the concept.  Glad to see somebody actually doing something like this.</p>
","374","<security><encryption><private-key><conceptual>","1","0","1","2017-09-06 20:26:32","","1","0","8279989","","2017-09-06 20:26:32","2017-09-02 10:20:39",""
"54432997","IntelliJ: Setting private key as environment variable doesn't work (Spring boot project)","<p>I have a spring boot project in which if I use private key (multiline text) it works perfectly fine (which means no issue with the key) but when I am trying to set it as environment variable in intellij it shows </p>

<blockquote>
  <p>Reason: Property 'spring.cloud.config.server.git.privateKey' is not a valid private key</p>
</blockquote>

<p>I am fully aware that this is happening because of new line chars. So I tried to replace new lines with \n (as text) some thing like</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----\nline1\nline2.....\nlinen\n-----END RSA PRIVATE KEY-----
</code></pre>

<p>But it doesn't work either.</p>

<p><strong>The working version in property file is:</strong></p>

<pre><code>privateKey: |
            -----BEGIN RSA PRIVATE KEY-----
           secret data....
            -----END RSA PRIVATE KEY-----
</code></pre>
","<p>IntelliJ environment variables cannot support new lines, see <a href=""https://unix.stackexchange.com/q/369972"">https://unix.stackexchange.com/q/369972</a>.</p>

<p>If you are determined to use environment variables, then I think your best option would be to point to a private key using an environment variable.</p>

<p>Another option would be to parse the environment variable, replacing <code>\n</code> occurrences with actual new lines. This is kind of a mess, because then you are conditionally parsing or not parsing the private key.</p>
","374","<spring><spring-boot><intellij-idea><private-key>","1","2","1","2019-01-30 09:08:03","","0","","4420967","","2019-01-30 06:20:35","2019-01-30 03:35:06",""
"49597986","RSA Key encrypt and decrypt issue","<p>I am trying to send a encrypted response to client's api using public key and trying to decrypt the response that comes out of the client using my private key.
When i try to decrypt the message, it says ""Key does not exist"". Below are the codes that I am using. </p>

<pre><code>public string Encryption(string strText, string publickey)
{
  var data = Encoding.UTF8.GetBytes(strText);
  using (var rsa = new RSACryptoServiceProvider(2048))
  {
    try
    {
      var key = ""&lt;RSAKeyValue&gt;&lt;Modulus&gt;"" + publickey.Replace('-', '+').Replace(' ', '+') + ""&lt;/Modulus&gt;&lt;Exponent&gt;AQAB&lt;/Exponent&gt;&lt;/RSAKeyValue&gt;"";
      rsa.FromXmlString(key);
      var encryptedData = rsa.Encrypt(data, true);
      var base64Encrypted = Convert.ToBase64String(encryptedData);
      return base64Encrypted;
    }
    catch (Exception ex)
    {
      return ex.Message;
    }
    finally
    {
      rsa.PersistKeyInCsp = false;
    }
  }
}
</code></pre>

<p>And for Decryption</p>

<pre><code>  public string Decrypt(string data, string privateKey)
{
  CspParameters cp = new CspParameters();
  cp.KeyContainerName = ""MyKeyContainerName"";
  var rsa = new RSACryptoServiceProvider(cp);
  var dataArray = data.Split(new char[] { ',' });
  byte[] dataByte = new byte[dataArray.Length];
  dataByte = Encoding.UTF8.GetBytes(data);
  var encoder = new UnicodeEncoding();
  var key = ""&lt;RSAKeyValue&gt;&lt;Modulus&gt;"" + privateKey + ""&lt;/Modulus&gt;&lt;Exponent&gt;AQAB&lt;/Exponent&gt;&lt;/RSAKeyValue&gt;"";
  rsa.FromXmlString(key);
  var decryptedByte = rsa.Decrypt(dataByte, false);
  return encoder.GetString(decryptedByte);
}
</code></pre>

<p>Hope this is enough. Please advice</p>
","<p>You're trying to perform a series of transformations, but you're not doing the opposite thing in each direction.</p>

<p>You've taken the encrypted binary data and converted it to base64, but then you're taking the base64 data and converting it back to binary using UTF-8, after splitting it by commas for some reason:</p>

<pre><code>var dataArray = data.Split(new char[] { ',' });
byte[] dataByte = new byte[dataArray.Length];
dataByte = Encoding.UTF8.GetBytes(data);
</code></pre>

<p>To reverse the last operation of the base64-encoding, you should be performing a base64-decoding:</p>

<pre><code>byte[] dataByte = Convert.FromBase64String(data);
</code></pre>

<p>That may not be the <em>only</em> thing wrong, but it's the <em>first</em> thing I spotted.</p>
","373","<c#><encryption><rsa><public-key-encryption><private-key>","0","1","1","2018-04-01 16:25:21","","3","","","","","2018-04-01 12:19:59",""
"43264456","Have cert file and key file, need to build truststore and keystore for CXF ClientBuilder","<p>I have two text files, one with a ""<code>-----BEGIN CERTIFICATE-----</code>"" header, one with a ""<code>-----BEGIN RSA PRIVATE KEY-----</code>"" header.  I need to use CXF ClientBuilder to make a REST service call to a remote host.</p>

<p>I think my loading of the cert file is ok, but I can't figure out how to handle the private key file properly.</p>

<p>I have the following tentative code (which doesn't quite compile yet, as you'll see) to initialize the Client object (with some minor elisions):</p>

<pre><code>private Certificate buildCertFromFile(String fileName) throws CertificateException {
    return CertificateFactory.getInstance(""X.509"").generateCertificate(ClassLoaderUtils.getResourceAsStream(fileName, &lt;ThisClass&gt;.class));
}

@PostConstruct
public void init() {
    try {
        KeyStore    trustStore  = KeyStore.getInstance(""jks"");
        trustStore.load(null, null);
        trustStore.setCertificateEntry(""cert"", buildCertFromFile(""&lt;path to cert file&gt;""));

        KeyStore    keyStore    = KeyStore.getInstance(""jks"");
        keyStore.load(null, ""abc"".toCharArray());

        // Need something here.
        keyStore.setKeyEntry(""key"", key, ""abc"", chain);

        ClientBuilder   builder = ClientBuilder.newBuilder();
        builder.trustStore(trustStore);
        builder.keyStore(keyStore, ""abc"");

        builder.hostnameVerifier(new HostnameVerifier() {
            @Override
            public boolean verify(String host, SSLSession session) {
                try {
                    Certificate[] certs = session.getPeerCertificates();
                    return certs != null &amp;&amp; certs[0] instanceof X509Certificate;
                }
                catch (SSLException ex) {
                    return false;
                }
            }

        });

        client  = builder.build();
    }
    catch (KeyStoreException | NoSuchAlgorithmException | CertificateException | IOException ex) {
        ex.printStackTrace();
    }
}
</code></pre>

<p><strong>Update:</strong></p>

<p>I'm experimenting with the following method to load the private key file:</p>

<pre><code>public static PrivateKey getPrivateKey(String filename) throws IOException, NoSuchAlgorithmException, InvalidKeySpecException {
    String  contents    = IOUtils.toString(ClassLoaderUtils.getResourceAsStream(filename, TguardService.class), ""UTF-8"");
    contents    = contents.replaceAll(""-----[A-z ]+-----"", """").trim();
    System.out.println(""contents["" + contents + ""]"");
    byte[]  bytes   = Base64.getDecoder().decode(contents);
    System.out.println(""decoded["" + new String(bytes) + ""]"");
    PKCS8EncodedKeySpec spec = new PKCS8EncodedKeySpec(bytes);
    KeyFactory kf = KeyFactory.getInstance(""RSA"");
    return kf.generatePrivate(spec);
}
</code></pre>

<p>However, this is giving me the following error:</p>

<pre><code>Caused by: java.lang.IllegalArgumentException: Illegal base64 character a
at java.util.Base64$Decoder.decode0(Unknown Source)
at java.util.Base64$Decoder.decode(Unknown Source)
at java.util.Base64$Decoder.decode(Unknown Source)
at com.att.detsusl.tguardrest.TguardService.getPrivateKey(TguardService.java:58)
</code></pre>

<p>The debugging output shows that ""contents"" looks somewhat like this:</p>

<pre><code>contents[MIIEp....
...
...
...kdOA=]
</code></pre>

<p><strong>Update</strong>:</p>

<p>Ok, I managed to figure out that I had to remove ALL the newlines from the encoded string, so now it gets through base64 decode, but now it fails on the call to ""generatePrivate()"", with the following:</p>

<pre><code>java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException : algid parse error, not a sequence
at sun.security.rsa.RSAKeyFactory.engineGeneratePrivate(Unknown Source)
at java.security.KeyFactory.generatePrivate(Unknown Source)
at com.att.detsusl.tguardrest.TguardService.getPrivateKey(TguardService.java:63)
</code></pre>

<p>I've seen some notes that imply that I must have a ""PKCS#1"" format, instead of ""PKSC#8"" and talk about calling ""openssl"" to convert the file.  I'd really rather not do that.  Is there a straightforward way to do this conversion (assuming this is what I need) in Java?  I intend this code to execute only once at application startup.</p>

<p><strong>Update</strong>:</p>

<p>Ok, after considering the alternatives, I used openssl to convert the file to PKCS#8 format.  After that, I was able to complete the construction of the Client object, but I get another error while trying to make a connection.  I considered it possible that this is a related but different problem (and I wanted to reduce the number of ""Updates"" on a single posting), so I posted that as a separate question at <a href=""https://stackoverflow.com/questions/43268952/cxf-rest-client-call-with-2-way-auth-failing-with-unable-to-find-valid-certific"">CXF REST client call with 2-way auth failing with &quot;unable to find valid certification path to requested target&quot;</a> .</p>

<p>Also note that I've converted the key file from PKCS#1 to PKCS#8, but I never did anything with the cert file.</p>

<p>In the meantime, I could use a little more background on PKCS#1 vs. PKCS#8.  How ""legacy"" is PKCS#1?  I note that the original name of the key file that was given to me used an acronym representing the previous name of our organization, which changed several years ago.</p>
","","371","<java><ssl><certificate><cxf><private-key>","0","","0","2017-04-07 15:11:57","","3","","-1","","2017-05-23 12:32:17","2017-04-06 19:45:06",""
"52939472","Changing Bitcoin Wallet Address Range for Plutus.py","<p>I am working with the following script from <a href=""https://github.com/Isaacdelly/Plutus/blob/master/plutus.py"" rel=""nofollow noreferrer"">https://github.com/Isaacdelly/Plutus/blob/master/plutus.py</a></p>

<p>The script works for wallet addresses in the 2^160 range.  I am curious where in the script I can change this to look at the 2^128 range or 2^n range. Would it be possible to even have a window? Like 2^0 - 2^100?</p>

<p>Not trying to do anything malicious, just trying to get data to show that even selecting ranges is futile due to the large number of addresses.</p>

<pre><code> # Plutus Bitcoin Brute Forcer
# Made by Isaac Delly
# https://github.com/Isaacdelly/Plutus

try:
    import sys
    import os
    import time
    import hashlib
    import binascii
    import multiprocessing
    from multiprocessing import Process, Queue
    from multiprocessing.pool import ThreadPool
    import threading
    import base58
    import ecdsa
    import requests
except ImportError:
    import subprocess
    subprocess.check_call([""python"", '-m', 'pip', 'install', 'base58==1.0.0'])
    subprocess.check_call([""python"", '-m', 'pip', 'install', 'ecdsa==0.13'])
    subprocess.check_call([""python"", '-m', 'pip', 'install', 'requests==2.19.1'])
    import base58
    import ecdsa
    import requests

def generate_private_key():
    return binascii.hexlify(os.urandom(32)).decode('utf-8')

def private_key_to_WIF(private_key):
    var80 = ""80"" + str(private_key) 
    var = hashlib.sha256(binascii.unhexlify(hashlib.sha256(binascii.unhexlify(var80)).hexdigest())).hexdigest()
    return str(base58.b58encode(binascii.unhexlify(str(var80) + str(var[0:8]))), 'utf-8')

def private_key_to_public_key(private_key):
    sign = ecdsa.SigningKey.from_string(binascii.unhexlify(private_key), curve = ecdsa.SECP256k1)
    return ('04' + binascii.hexlify(sign.verifying_key.to_string()).decode('utf-8'))

def public_key_to_address(public_key):
    alphabet = ""123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz""
    count = 0; val = 0
    var = hashlib.new('ripemd160')
    var.update(hashlib.sha256(binascii.unhexlify(public_key.encode())).digest())
    doublehash = hashlib.sha256(hashlib.sha256(binascii.unhexlify(('00' + var.hexdigest()).encode())).digest()).hexdigest()
    address = '00' + var.hexdigest() + doublehash[0:8]
    for char in address:
        if (char != '0'):
            break
        count += 1
    count = count // 2
    n = int(address, 16)
    output = []
    while (n &gt; 0):
        n, remainder = divmod (n, 58)
        output.append(alphabet[remainder])
    while (val &lt; count):
        output.append(alphabet[0])
        val += 1
    return ''.join(output[::-1])

def get_balance(address):
    try:
        response = requests.get(""https://bitaps.com/api/address/"" + str(address))
        return int(response.json()['balance']) 
    except:
        return -1

def data_export(queue):
    while True:
        private_key = generate_private_key()
        public_key = private_key_to_public_key(private_key)
        address = public_key_to_address(public_key)
        data = (private_key, address)
        queue.put(data, block = False)

def worker(queue):
    while True:
        if not queue.empty():
            data = queue.get(block = True)
            balance = get_balance(data[1])
            process(data, balance)

def process(data, balance):
    private_key = data[0]
    address = data[1]
    if (balance == 0):
        print(""{:&lt;34}"".format(str(address)) + "": "" + str(balance))
    if (balance &gt; 0):
        file = open(""plutus.txt"",""a"")
        file.write(""address: "" + str(address) + ""\n"" +
                   ""private key: "" + str(private_key) + ""\n"" +
                   ""WIF private key: "" + str(private_key_to_WIF(private_key)) + ""\n"" +
                   ""public key: "" + str(private_key_to_public_key(private_key)).upper() + ""\n"" +
                   ""balance: "" + str(balance) + ""\n\n"")
        file.close()

def thread(iterator):
    processes = []
    data = Queue()
    data_factory = Process(target = data_export, args = (data,))
    data_factory.daemon = True
    processes.append(data_factory)
    data_factory.start()
    work = Process(target = worker, args = (data,))
    work.daemon = True
    processes.append(work)
    work.start()
    data_factory.join()

if __name__ == '__main__':
    try:
        pool = ThreadPool(processes = multiprocessing.cpu_count()*2)
        pool.map(thread, range(0, 10))
    except:
        pool.close()
        exit()
</code></pre>

<p>Thank you</p>
","<p>You seem to be misunderstanding the purpose of the 2^160 bit range.</p>

<p>Each standard bitcoin address is tied to the HASH160 of the public key. A HASH160 is 160 bits long, which is why your search space is 2^160. If you are able to find two private keys for which the HASH160 of the public keys are equal, any of those two private keys can spend coins sent to that address.</p>

<p>Searching a smaller space does not make sense since you are no longer searching for bitcoin addresses. If you just want to search random hash functions, then you simply need to replace RIPEMD160 hash function with another one that has an output in whatever bitsize you wish to search.</p>

<p>Note that if you do that, the rest of the code talking about checking balances etc. will be of no use, since your output will no longer be a bitcoin address.</p>
","371","<python><bitcoin><private-key>","1","2","1","2018-10-23 03:07:00","52940132","0","","1069068","","2018-10-23 02:17:46","2018-10-23 00:31:03",""
"50560535","Adding private key to certificate with only public key on Windows Server in .NET","<p>The following lines of code, which is part of a .NET FW 4.6.2 Console Application, execute without exceptions when run on a Windows 10. But when running on a Windows Server 2016 it causes a <code>CryptographicException</code> to be thrown when the <code>Export</code> method is called, saying <strong>Keyset does not exist</strong> (even when running as Administrator). (If compiling code for .NET Core 2, it compiles, but the executable throws a <code>PlatformNotSupportedException</code> on the first row.)</p>

<pre><code>Certificate.PrivateKey = RSA;
byte[] Bin = Certificate.Export(X509ContentType.Pfx, password);
</code></pre>

<p>Background: <code>Certificate</code> is an <code>X509Certificate2</code> with only a public key. <code>RSA</code> is a <code>RSACryptoServiceProvider</code> containing the private key corresponding to the same public key. The certificate is created by a remote ACME-compliant CA (Let's Encrypt), which is why only the public key is available, and why the private key is kept separate by the client.</p>

<p>The code runs without exception on Windows 10, and the generated PFX file contains the private key as it should.</p>

<p>The question is: Why does it throw an exception in one case, but not the other? And what would the suggested work-around be?</p>

<p>Source of console application: <a href=""https://github.com/PeterWaher/IoTGateway/tree/master/Utilities/Waher.Utility.Acme"" rel=""nofollow noreferrer"">https://github.com/PeterWaher/IoTGateway/tree/master/Utilities/Waher.Utility.Acme</a></p>

<p>Compiled version:
<a href=""https://waher.se/Downloads/Waher.Utility.Acme.zip"" rel=""nofollow noreferrer"">https://waher.se/Downloads/Waher.Utility.Acme.zip</a></p>

<p>Command-line parameters, to repeat the situation: (replace EMAIL, DOMAIN and WEBFOLDER with corresponding values)</p>

<pre><code>Waher.Utility.Acme.exe -let -ce EMAIL -a -nk -dns DOMAIN -dns www.DOMAIN -http WEBFOLDER -f Certificate -pwd Test -v
</code></pre>

<p>The following event was logged in the security log of the Windows Server machine (while it worked fine for the Windows 10 machine):</p>

<pre><code>Log Name:      Security
Source:        Microsoft-Windows-Security-Auditing
Date:          5/28/2018 6:56:27 PM
Event ID:      5061
Task Category: System Integrity
Level:         Information
Keywords:      Audit Failure
User:          N/A
Computer:      Domain
Description:
Cryptographic operation.

Subject:
    Security ID:        Domain\PeterWaher
    Account Name:       PeterWaher
    Account Domain:     Domain
    Logon ID:       0xBFDEC 

Cryptographic Parameters:
    Provider Name:  Microsoft Software Key Storage Provider
    Algorithm Name: UNKNOWN
    Key Name:   Domain\PeterWaher
    Key Type:   User key.

Cryptographic Operation:
    Operation:  Open Key.
    Return Code:    0x80090016
</code></pre>
","","367","<c#><.net><certificate><x509><private-key>","2","","0","2018-05-28 19:21:52","","6","1","5790478","","2018-05-28 19:21:52","2018-05-28 06:44:02",""
"29772160","how to parse an rsa encrypted private key in java?","<p>I am trying to obtain the modulus value of an RSA encrypted private key. I looked into using the library bouncy castle but have had no luck.</p>

<p>Can someone recommend a way of doing this?</p>
","<p>This worked for me when reading key from a PEM file, using BouncyCastle 1.51.</p>

<pre><code>        pemParser =
            new PEMParser(Files.newBufferedReader(Paths.get(""key_in_pem.pem""), StandardCharsets.UTF_8));
        Object parsedObj = pemParser.readObject();
        PEMEncryptedKeyPair pemEncKeyPair = (PEMEncryptedKeyPair) parsedObj;
            PEMDecryptorProvider pemDecryptorProvider =
                new JcePEMDecryptorProviderBuilder().build(keyPairPassword.toCharArray());
            PEMKeyPair pemKeyPair = pemEncKeyPair.decryptKeyPair(pemDecryptorProvider);
            JcaPEMKeyConverter jcaPEMKeyConverter = new JcaPEMKeyConverter().setProvider(
                BouncyCastleProvider.PROVIDER_NAME);
            keyPair = jcaPEMKeyConverter.getKeyPair(pemKeyPair);
</code></pre>

<p>Then you can get private key from keyPair with <code>keyPair.getPrivate()</code>, and get its corresponding data.</p>
","367","<java><parsing><rsa><private-key>","-2","0","1","2015-04-21 14:44:19","","1","","601245","","2015-04-21 14:33:26","2015-04-21 12:24:21",""
"43685689","get negative D, when I try to generate private key RSA","<p>I have the method to calculate D(private key) for RSA. The method uses extended Euclidean algorithm. So sometimes I get negative D and it isn't right how I can fix it?
D * e mod (p-1)(q-1)=1;
here is the code of the method</p>

<pre><code>public static BigInteger extEuclid(BigInteger a, BigInteger b)
{

        BigInteger x = BigInteger.ZERO, y = BigInteger.ONE, lastx = BigInteger.ONE, lasty = BigInteger.ZERO, temp;
        while (!b.equals(BigInteger.ZERO))
        {
            BigInteger q = a.divide(b);
            BigInteger r = a.mod(b) ;
        a = b;
        b = r;

        temp = x;
        x = lastx.subtract(q.multiply(x));
        lastx = temp;

        temp = y;
        y = lasty.subtract(q.multiply(y));
        lasty = temp;
    }

    return lastx;
}


public void calcD(){
  d = extEuclid(e, fEuler);
}
</code></pre>
","","363","<java><algorithm><rsa><private-key>","0","","0","2017-04-28 17:35:37","","7","","6536637","","2017-04-28 17:35:37","2017-04-28 17:23:09",""
"28686345","NoSuchElementException when reading p12 file in java application from system?","<p>In my spring MVC java application, I have a method:</p>

<pre><code>public static PrivateKey getPrivateKey( String password, InputStream privateKeyFileStream) {
    KeyStore ks;
    Key key = null;
    try {
      ks = KeyStore.getInstance(""PKCS12"");
      ks.load(privateKeyFileStream, password.toCharArray());

      Enumeration&lt;String&gt; enumeration = ks.aliases();

      // uses the default alias
      String keyAlias = (String) enumeration.nextElement();

      key = ks.getKey(keyAlias, password.toCharArray());
    } catch (KeyStoreException e) {
      ErrorLog.Log(ErrorLog.FATAL, ""Error creating WebService. Failed to read private key"", e, ""WebService"", ""constructor"");
    } catch (NoSuchAlgorithmException e) {
      ErrorLog.Log(ErrorLog.FATAL, ""Error creating WebService. Failed to read private key"", e, ""WebService"", ""constructor"");
    } catch (CertificateException e) {
      ErrorLog.Log(ErrorLog.FATAL, ""Error creating WebService. Failed to read private key"", e, ""WebService"", ""constructor"");
    } catch (IOException e) {
      ErrorLog.Log(ErrorLog.FATAL, ""Error creating WebService. Failed to read private key"", e, ""WebService"", ""constructor"");
    } catch (UnrecoverableKeyException e) {
      ErrorLog.Log(ErrorLog.FATAL, ""Error creating WebService. Failed to read private key"", e, ""WebService"", ""constructor"");
    }

    return (PrivateKey) key;
  }
</code></pre>

<p>When I utilize this method in my application locally, like so:</p>

<pre><code>File file = new File(""../bin/file.p12"");
InputStream privateKeyFileStream = null;
try {
  privateKeyFileStream = FileUtils.openInputStream(file);
} catch (IOException e) {
  ErrorLog.Log(ErrorLog.FATAL, ""Error creating WebService."", e, ""WebService"", ""constructor"");
}
PrivateKey privateKey = getPrivateKey(""password"", privateKeyFileStream);
</code></pre>

<p>everything works fine. The p12 file is located in my the bin directory of my tomcat folder. </p>

<p>However, for my testing environment, I place the same p12 file in the same bin folder in the tomcat directory, and when trying to read the file I get the following exception:</p>

<pre><code>java.util.NoSuchElementException
    at java.util.Collections$EmptyEnumeration.nextElement(Collections.java:3083)
    at com.class.util.class.Class.getPrivateKey(ClassUtils.java:92)
    at com.class.util.class.Class.getInstance(Class.java:77)
    at
</code></pre>

<p>The line of code thats throwing the error is:</p>

<pre><code>String keyAlias = (String) enumeration.nextElement();
</code></pre>

<p>It's basically failing to find any certificate entries on the p12 file, yet when I run</p>

<pre><code>keytool -list -keystore file.p12 -storepass password -storetype PKCS12 -v
</code></pre>

<p>both on my local system, and the testing environment location, it shows:</p>

<pre><code>Your keystore contains 1 entry

Alias name: test
Creation date: Feb 11, 2015
Entry type: PrivateKeyEntry
Certificate chain length: 1
Certificate[1]:
</code></pre>

<p>What seems to be going wrong?</p>
","<p>I instead decided to read the p12 file from the resources directory in the application which worked fine.</p>
","358","<java><ssl><ssl-certificate><private-key>","0","0","1","2015-02-27 21:36:10","28774724","0","","","","","2015-02-24 00:39:47",""
"49757632","Java : Unable to convert to Private key inputStream to PrivateKey Object","<p>I'm trying to convert the input stream of a private key file. This file contains the private key in <code>byte[]</code> type and this is present in my file system. This is how I'm reading it as a stream : </p>

<pre><code>File file = new File(""/home/user/Desktop/user(4).key"");
oldPrivateKey = new FileInputStream(file);
</code></pre>

<p>And this is the method where I'm trying to convert the private key stream to it's object type.</p>

<pre><code>public PrivateKey getPrivateKeyObject(InputStream privateKey) throws EmprisException
{
    PrivateKey privateKeyObject = null;
    byte[] privateKeyBytes;
    try {
        privateKeyBytes = IOUtils.toByteArray(privateKey);
        PKCS8EncodedKeySpec privateKeySpec = new PKCS8EncodedKeySpec(privateKeyBytes);
        KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
        privateKeyObject = keyFactory.generatePrivate(privateKeySpec);
        } catch(Exception e){
        e.printStackTrace();
    }
    return privateKeyObject;
}
</code></pre>

<p>And this is the error I'm getting : </p>

<pre><code>java.security.InvalidKeyException: IOException : Short read of DER length
</code></pre>

<p>What could be the reason for this message?
Would greatly appreciate your help and thanks in advance.</p>
","","357","<java><rsa><inputstream><private-key>","0","","0","2018-04-10 19:22:27","","4","","238704","","2018-04-10 19:22:27","2018-04-10 15:31:33",""
"3751889","Public & Private Keys in .NET besides RSA","<p>Am I missing something obvious here (I  hope I am), besides RSA, are there any other crypto methods in .NET that use a public &amp; private key?</p>

<p>Thanks!</p>
","<ul>
<li><a href=""http://msdn.microsoft.com/en-us/library/system.security.cryptography.dsacryptoserviceprovider%28v=VS.100%29.aspx"" rel=""nofollow noreferrer"">DSA</a></li>
<li><a href=""http://msdn.microsoft.com/en-us/library/system.security.cryptography.ecdiffiehellmancng.aspx"" rel=""nofollow noreferrer"">ECDiffieHelman</a>  (Contrary to MSDN docs, <em>not</em> supported on Windows XP)</li>
</ul>
","357","<.net><encryption><private-key><public-key-encryption>","1","0","4","2010-09-23 03:51:50","3751954","0","","60761","","2010-09-20 18:52:00","2010-09-20 13:26:51",""
"3751889","Public & Private Keys in .NET besides RSA","<p>Am I missing something obvious here (I  hope I am), besides RSA, are there any other crypto methods in .NET that use a public &amp; private key?</p>

<p>Thanks!</p>
","<p><a href=""http://en.wikipedia.org/wiki/Public-key_cryptography#Examples"" rel=""nofollow noreferrer"">http://en.wikipedia.org/wiki/Public-key_cryptography#Examples</a></p>
","357","<.net><encryption><private-key><public-key-encryption>","1","0","4","2010-09-23 03:51:50","3751954","0","","60761","","2010-09-20 18:52:00","2010-09-20 13:26:51",""
"3751889","Public & Private Keys in .NET besides RSA","<p>Am I missing something obvious here (I  hope I am), besides RSA, are there any other crypto methods in .NET that use a public &amp; private key?</p>

<p>Thanks!</p>
","<p>Rsa is derived from the class <a href=""http://msdn.microsoft.com/en-us/library/system.security.cryptography.asymmetricalgorithm.aspx"" rel=""nofollow noreferrer"">AsymmetricAlgorithm</a></p>

<p>From there, MSDN lists the following derived classes:</p>

<pre><code>System.Security.Cryptography.DSA
System.Security.Cryptography.ECDiffieHellman
System.Security.Cryptography.ECDsa
System.Security.Cryptography.RSA
</code></pre>
","357","<.net><encryption><private-key><public-key-encryption>","1","1","4","2010-09-23 03:51:50","3751954","0","","60761","","2010-09-20 18:52:00","2010-09-20 13:26:51",""
"3751889","Public & Private Keys in .NET besides RSA","<p>Am I missing something obvious here (I  hope I am), besides RSA, are there any other crypto methods in .NET that use a public &amp; private key?</p>

<p>Thanks!</p>
","<p>No. You are not missing anything. RSA appears to be the only public key encryption scheme implemented in .NET. DSA and ECDSA are signature schemes and Diffie-Hellman is a key agreement scheme.</p>
","357","<.net><encryption><private-key><public-key-encryption>","1","0","4","2010-09-23 03:51:50","3751954","0","","60761","","2010-09-20 18:52:00","2010-09-20 13:26:51",""
"42614471","login to WPEngine Git Push with Tower Git","<p>I've set up my developer name and public key on WPEngine's Git Push dashboard. i'm able to connect via the terminal:</p>

<pre><code>$ ssh git@git.wpengine.com info
    hello &lt;my wpengine dev name&gt;
    R W production/my_installname
    R W staging/my_installname
</code></pre>

<p>so it all looks to be set up correctly. </p>

<p>but when trying to connect with Tower Git client, i'm getting the error:</p>

<blockquote>
  <p>Can't Authenticate with Server Authentication with the server failed.
  Please verify your username and password.</p>
</blockquote>

<p>for the Tower login, i'm using:</p>

<p><strong>Remote URL</strong>: git@git.wpengine.com:production/my_repo.git</p>

<p><strong>Authentication</strong>: Private Key</p>

<p><strong>Username</strong>: (i tried my dev name and my email address, neither worked)</p>

<p><strong>SSH</strong>: ~/.ssh/id_rsa (which i generated for WPEngine, and uploaded the associated public key)</p>

<p>i've tried all different combinations of usernames and URLs, etc. nothing is working. any ideas? thank you!</p>
","<h3>Prerequisite</h3>

<p>From your question I gather you're on macOS, most likely macOS 10.12 which stopped autoloading SSH keys into the keychain and creating this situation. 
However, the Walkthrough is valid for all OS/Tower versions.</p>

<h2>Use Tower's Service Interface to prepare SSH key loading</h2>

<p>Navigate to Tower's service view with <code>Cmd+Ctrl+S</code>.<br>
In the bottom left click the <code>+</code> to choose ""Add Custom Server""</p>

<p>As authentication information enter</p>

<p>Server name: <code>ssh://git@git.wpengine.com</code><br>
Choose SSH Key authentication and enter your credentials</p>

<h3>Cloning Repositories</h3>

<p>Should now work as expected</p>

<h3>Existing Repositories - make sure they're linked to your Service</h3>

<p>Open your repository in Tower, click your remote in the sidebar (most likely <code>origin</code>)
Hover the <code>Fetch URL</code> to reveal the ""Edit"" button
Press it and make sure your Custom Service is selected in this dialog
Test by clicking ""Fetch""</p>

<p>You can find out more about connecting/authenticating the official Tower help:<br>
<a href=""https://www.git-tower.com/help/mac/manage-hosting-services/manage-ssh-keys"" rel=""nofollow noreferrer"">https://www.git-tower.com/help/mac/manage-hosting-services/manage-ssh-keys</a><br>
<a href=""https://www.git-tower.com/help/mac/remote-repositories/connect-authenticate"" rel=""nofollow noreferrer"">https://www.git-tower.com/help/mac/remote-repositories/connect-authenticate</a></p>

<p><sub>Disclaimer: I'm with the support team for Tower</sub></p>
","357","<wordpress><git><ssh><private-key><git-tower>","3","0","2","2019-01-24 19:10:44","42625639","0","","","","","2017-03-05 21:46:09",""
"42614471","login to WPEngine Git Push with Tower Git","<p>I've set up my developer name and public key on WPEngine's Git Push dashboard. i'm able to connect via the terminal:</p>

<pre><code>$ ssh git@git.wpengine.com info
    hello &lt;my wpengine dev name&gt;
    R W production/my_installname
    R W staging/my_installname
</code></pre>

<p>so it all looks to be set up correctly. </p>

<p>but when trying to connect with Tower Git client, i'm getting the error:</p>

<blockquote>
  <p>Can't Authenticate with Server Authentication with the server failed.
  Please verify your username and password.</p>
</blockquote>

<p>for the Tower login, i'm using:</p>

<p><strong>Remote URL</strong>: git@git.wpengine.com:production/my_repo.git</p>

<p><strong>Authentication</strong>: Private Key</p>

<p><strong>Username</strong>: (i tried my dev name and my email address, neither worked)</p>

<p><strong>SSH</strong>: ~/.ssh/id_rsa (which i generated for WPEngine, and uploaded the associated public key)</p>

<p>i've tried all different combinations of usernames and URLs, etc. nothing is working. any ideas? thank you!</p>
","<p>I came across this while trying to add my wpengine repositories to Tower and had to try a few different URLs before getting the correct one. The connection is specific to the repository not the account, unlike in the terminal. </p>

<p>This URL scheme worked: <code>ssh://git@git.wpengine.com/production/repo.git</code> </p>

<p>The username in the form field is <code>git</code> and you select the correct SSH key in the dropdown (just as Samuel stated above). Obviously, the only difference is adding the path to the repo; but I tried a few options with port numbers and different URL schemes that didn't work so I thought I'd post to save anyone else the hassle of figuring it out in 2019.</p>
","357","<wordpress><git><ssh><private-key><git-tower>","3","1","2","2019-01-24 19:10:44","42625639","0","","","","","2017-03-05 21:46:09",""
"47803294","PEM_write_bio_RSAPrivateKey throws keygen errors in FIPS mode","<p>I am trying to generate a 2048 bit RSA Private Key that is encrypted with a AES256CBC cipher while in FIPS mode. I am using OpenSSL 1.0.2l here. I tried the latest 1.0.2 snapshot and that isn't making any difference.</p>

<p>My problem is that PEM_write_bio_RSAPrivateKey does not return 1 and I get this error:</p>

<pre><code>26660:error:0607606B:digital envelope routines:PKCS5_v2_PBE_keyivgen:unsupported cipher:.\crypto\evp\p5_crpt2.c:229:
26660:error:06074078:digital envelope routines:EVP_PBE_CipherInit:keygen failure:.\crypto\evp\evp_pbe.c:197:
26660:error:23077073:PKCS12 routines:PKCS12_pbe_crypt:pkcs12 algor cipherinit error:.\crypto\pkcs12\p12_decr.c:87:
26660:error:2306C067:PKCS12 routines:PKCS12_item_i2d_encrypt:encrypt error:.\crypto\pkcs12\p12_decr.c:188:
26660:error:2307D067:PKCS12 routines:PKCS8_encrypt:encrypt error:.\crypto\pkcs12\p12_p8e.c:96:
</code></pre>

<p>Code:</p>

<pre><code>#include &lt;stdio.h&gt;
#include &lt;tchar.h&gt;
#include &lt;cassert&gt;
#include &lt;memory&gt;
#include &lt;io.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;openssl/crypto.h&gt;
#include &lt;openssl/bn.h&gt;
#include &lt;openssl/rsa.h&gt;
#include &lt;openssl/pem.h&gt;
#include &lt;openssl/bio.h&gt;
#include &lt;openssl/x509.h&gt;
#include &lt;openssl/evp.h&gt;
#include &lt;openssl/err.h&gt;
#include &lt;openssl/fips.h&gt;

using std::unique_ptr;
#define ASSERT assert

using BN_ptr = std::unique_ptr&lt;BIGNUM, decltype(&amp;::BN_free)&gt;;
using RSA_ptr = std::unique_ptr&lt;RSA, decltype(&amp;::RSA_free)&gt;;
using EVP_KEY_ptr = std::unique_ptr&lt;EVP_PKEY, decltype(&amp;::EVP_PKEY_free)&gt;;
using BIO_FILE_ptr = std::unique_ptr&lt;BIO, decltype(&amp;::BIO_free)&gt;;
using BIO_MEM_ptr = std::unique_ptr&lt;BIO, decltype(&amp;::BIO_free)&gt;;
using namespace std;

int main(int argc, char* argv[])
{
    int rc;
    //PART 1: Enter FIPS mode
    CRYPTO_malloc_init();
    if (0 == FIPS_mode())
    {
        printf(""FIPS_mode says FIPS not set.\n"");
    }

    rc = FIPS_mode_set(1);
    if (rc != 1)
    {
        printf(""FIPS_mode_set failed.\n"");

        ERR_load_crypto_strings();
        ERR_print_errors_fp(stderr);

        getchar();

        exit(1);
    }
    else
    {
        printf(""FIPS_mode_set worked.\n"");
    }

    //PART 2: Make the CA Private Key

    char filename_ca[] = ""C:\\Users\\jlaird\\source\\repos\\keygen_sample\\Release\\ca.key.pem"";
    char unsigned password_ca[] = ""capass"";

    RSA_ptr rsa(RSA_new(), ::RSA_free);
    BN_ptr bn(BN_new(), ::BN_free);

    //binary input/output file access
    BIO_FILE_ptr pem5(
        BIO_new_file(
            filename_ca, //file name
            ""w+"" //access mode
        ),
        ::BIO_free
    );

    BIO_MEM_ptr bio(BIO_new(BIO_s_mem()), ::BIO_free);

    //allocate a big number
    rc = BN_set_word(
        bn.get(),
        RSA_F4
    );

    //success is indicated by a value of 1
    if (rc == 1)
    {
        printf(""BN_set_word worked\n"");
    }
    else
    {
        printf(""FAIL\n"");
    }

    //Generate key
    rc = RSA_generate_key_ex(
        rsa.get(), //pointer to rsa key
        2048, //desired size of key in bits
        bn.get(), //get pointer to our big number
        NULL //progress callback (we don't care so NULL)
    );

    //success is indicated by a value of 1
    if (rc == 1)
    {
        printf(""RSA_generate_key_ex worked\n"");
    }
    else
    {
        printf(""FAIL\n"");
    }

    rc = RSA_print(bio.get(), rsa.get(), 0);

    //success is indicated by a value of 1
    if (rc == 1)
    {
        printf(""RSA_print worked\n"");
    }
    else
    {
        printf(""FAIL\n"");
    }

    BUF_MEM* mem = NULL;
    BIO_get_mem_ptr(bio.get(), &amp;mem);
    ASSERT(mem != NULL);

    string s;
    if (mem-&gt;data &amp;&amp; mem-&gt;length)
        s.assign(mem-&gt;data, mem-&gt;length);

    if (s.length())
        cout &lt;&lt; s &lt;&lt; endl;
    else
        cout &lt;&lt; ""Failed to retrieve key"" &lt;&lt; endl;

    // Convert RSA to PKEY
    //allocate RSA to PKEY memory
    EVP_KEY_ptr pkey(
        EVP_PKEY_new(),
        ::EVP_PKEY_free
    );

    printf(""Convert RSA to PKEY.\n"");

    //get our private key from the rsa key
    rc = EVP_PKEY_set1_RSA(
        pkey.get(),
        rsa.get()
    );

    //success is indicated by a value of 1
    if (rc == 1)
    {
        printf(""EVP_PKEY_set1_RSA worked\n"");
    }
    else
    {
        printf(""FAIL\n"");
    }

    printf(""get our private key from the rsa key.\n"");

    //Write private key
    rc = PEM_write_bio_RSAPrivateKey(
        pem5.get(), //binary file pointer
        rsa.get(), //key in use
        EVP_aes_256_cbc(), //cipher
        NULL,
        0,
        NULL,
        password_ca
    );

    //success is indicated by a value of 1
    if (rc == 1)
    {
        printf(""PEM_write_bio_RSAPrivateKey worked\n"");
    }
    else
    {
        printf(""PEM_write_bio_RSAPrivateKey FAIL\n"");
        ERR_load_crypto_strings();
        ERR_print_errors_fp(stderr);
    }

    printf(""done!.\n"");
    getchar();

    return 0;
}
</code></pre>

<p>Full output of program:</p>

<pre><code>FIPS_mode says FIPS not set.
FIPS_mode_set worked.
BN_set_word worked
RSA_generate_key_ex worked
RSA_print worked
Private-Key: (2048 bit)
modulus:
    00:c4:30:0c:a4:ce:25:6c:13:e9:b8:6b:aa:f4:50:
    e4:f4:bb:af:ae:cd:4a:b8:0e:a0:35:01:74:ac:d0:
    58:96:cc:0d:48:0e:51:6a:00:77:5e:6b:f6:33:0a:
    10:1c:fc:8c:5e:67:5c:d3:c0:e2:1b:98:d8:98:9e:
    82:83:88:83:4e:35:6d:4e:a5:b4:3f:09:6b:56:b8:
    d2:b1:67:3f:d2:c6:79:f6:90:5e:18:1b:39:98:9d:
    89:f9:cd:1d:21:d9:0f:bd:ae:83:38:17:83:98:9f:
    6b:53:16:05:b3:dd:4f:00:f5:d6:27:83:84:c2:ce:
    03:aa:5e:0f:ba:51:a9:50:1d:35:3f:8c:76:8a:bb:
    78:54:ff:e3:11:9d:7c:fd:09:ac:5e:8c:57:84:ca:
    20:11:92:39:34:e5:8a:15:68:33:c1:90:e2:d2:03:
    d2:8b:e4:b6:77:5f:2c:17:93:81:cf:0f:5c:13:d2:
    bc:ae:72:2d:47:eb:ca:0d:cd:19:76:4d:75:5d:cd:
    70:1b:aa:c4:96:cf:e7:8f:d3:36:83:6f:c3:30:65:
    02:b2:cc:9a:c0:a5:5b:bb:53:09:66:01:12:4e:d7:
    6c:44:e8:62:a4:24:a6:21:bf:da:7e:d5:68:c4:94:
    40:7f:ba:25:47:92:ea:97:fd:99:17:db:76:b9:69:
    52:99
publicExponent: 65537 (0x10001)
privateExponent:
    11:1f:1e:63:5d:a8:4f:6b:d7:78:64:51:19:9c:5b:
    b6:ee:10:51:81:92:15:49:15:7b:3a:c2:cb:78:2d:
    5b:0f:b8:d3:02:88:e1:66:e4:04:06:09:09:00:46:
    52:b9:49:a8:cd:7d:80:ef:72:ec:34:a5:26:80:a2:
    e4:46:cc:2a:cd:a7:d9:f6:c5:29:c1:31:30:72:d5:
    d4:6c:ad:d9:bf:bf:92:20:9c:4d:9f:46:a2:06:91:
    ad:8e:d4:8d:89:2b:82:02:d2:69:d9:47:7f:50:de:
    65:74:65:10:02:ee:eb:a7:08:c7:0f:07:cd:96:7c:
    24:68:ac:17:b7:1b:bf:25:7e:46:52:5b:33:13:9c:
    0b:48:1f:f9:47:cf:09:ed:5d:4d:18:85:d2:49:30:
    94:1c:bb:25:7b:bc:63:31:93:c3:17:f7:b8:d5:77:
    6d:2b:36:de:b1:d4:07:e4:ce:9c:ca:29:ef:dd:0a:
    3f:60:4a:80:ac:a8:8e:81:95:21:35:6a:49:c5:0c:
    e3:2f:50:59:7e:c3:73:3e:ac:98:29:15:57:4b:ad:
    fc:70:88:9d:fc:50:39:69:a9:a4:ee:80:db:4e:36:
    70:dd:a1:d6:2c:79:77:9d:0d:c3:ef:d2:5e:15:d4:
    77:e3:b1:20:12:c6:59:6e:41:d9:ef:9e:8b:a4:13:
    19
prime1:
    00:e7:9c:27:77:b9:5c:72:0e:81:2e:fb:2f:46:e4:
    a8:0e:af:31:63:31:86:d2:2c:71:46:1f:2a:fd:30:
    5c:44:45:02:8b:eb:0e:b7:50:9d:25:e2:0b:3a:07:
    2f:74:84:48:f0:d3:83:68:bf:6f:e1:59:c4:b4:88:
    40:0d:89:57:6d:fe:23:82:af:de:b4:25:ac:6c:76:
    26:ce:c7:e1:b7:f9:78:9d:2b:a7:87:25:ce:db:9a:
    b4:b7:cb:e6:3d:a1:33:a7:dc:15:a3:5a:99:7c:cc:
    b1:2d:e9:c3:72:a3:e6:25:f0:5e:c5:77:47:9e:2c:
    8f:51:da:81:62:79:41:98:fd
prime2:
    00:d8:d8:f7:22:11:96:35:07:fb:30:8b:70:d0:bf:
    fc:7e:ab:2d:9d:f8:94:92:12:74:b4:69:97:1b:5d:
    c3:7e:a9:d7:8d:23:04:0b:56:04:4f:fa:40:3d:cf:
    18:2f:53:bc:a6:bc:23:19:d1:4f:3e:36:90:d6:f0:
    e6:4a:4e:8e:6f:12:87:52:51:f0:90:53:d0:f8:44:
    d6:8d:9b:35:5a:7d:09:a8:0e:9b:87:76:8a:94:5e:
    ed:a1:22:80:71:8b:98:e6:f0:09:91:70:b1:a5:e4:
    9f:12:96:be:a6:a9:74:8a:83:e4:33:cd:b3:db:ff:
    71:cd:37:b0:ef:61:3a:10:cd
exponent1:
    61:42:98:ec:54:e1:b6:5f:d2:ed:e8:bb:6c:b8:de:
    bd:f3:e1:f8:76:b6:d8:11:a3:ab:bf:b0:ec:cb:df:
    23:28:1b:ae:a8:11:f0:f7:20:56:e5:3a:b3:ae:8a:
    c6:12:3b:13:2e:af:53:50:78:ea:18:29:5b:6a:90:
    03:5f:36:60:d1:45:16:3f:46:75:3e:10:cf:27:3a:
    9a:c1:23:4f:7f:aa:9f:cd:d2:37:15:b0:6d:55:e5:
    27:fd:ae:fd:18:71:b9:be:d9:33:54:fb:79:85:f7:
    ad:81:29:fb:3d:4a:8b:8a:0a:32:40:29:ca:09:8a:
    51:e4:41:4b:1a:02:6a:fd
exponent2:
    00:d2:82:05:9f:60:1d:46:4c:02:30:85:1d:36:b9:
    39:9f:aa:03:75:b8:6c:5a:45:6a:5f:fd:a5:40:5e:
    cc:ba:78:9c:95:19:aa:02:6b:35:72:82:88:bc:b7:
    ff:4d:6a:67:d8:21:09:9e:35:90:4c:df:e1:c9:97:
    40:a8:60:0c:6b:8d:3c:2a:d0:fa:cc:d1:61:2a:b2:
    80:ea:25:03:2d:5d:f6:f2:db:83:66:84:d0:50:ea:
    ba:9a:d3:88:87:31:b2:74:76:0f:83:ce:37:d6:c8:
    d3:17:d3:99:2e:e7:90:08:2b:b3:6c:0a:c4:10:cc:
    b1:28:3c:69:1a:69:73:59:fd
coefficient:
    00:88:66:c0:36:fa:1b:e8:cc:d7:25:13:34:fb:de:
    cc:cf:29:1c:e7:b0:0e:26:a1:e2:04:43:c4:a1:17:
    41:c0:bc:6a:11:3f:03:67:ae:9a:23:b0:d6:ec:9e:
    7b:6c:cf:ce:ba:35:4f:7a:d3:e8:49:45:48:e6:cd:
    ea:83:ee:76:34:f0:53:6b:90:72:67:41:a5:0c:ae:
    02:25:4e:c5:da:b6:01:fc:13:9f:eb:8d:c4:0b:8d:
    a7:a0:4d:c8:8e:a0:56:00:51:31:c9:50:03:37:ab:
    85:8f:bf:3c:4e:af:17:11:7a:38:6e:be:ac:94:1a:
    dc:54:8e:07:62:fc:b8:1f:04

Convert RSA to PKEY.
EVP_PKEY_set1_RSA worked
get our private key from the rsa key.
PEM_write_bio_RSAPrivateKey FAIL
26660:error:0607606B:digital envelope routines:PKCS5_v2_PBE_keyivgen:unsupported cipher:.\crypto\evp\p5_crpt2.c:229:
26660:error:06074078:digital envelope routines:EVP_PBE_CipherInit:keygen failure:.\crypto\evp\evp_pbe.c:197:
26660:error:23077073:PKCS12 routines:PKCS12_pbe_crypt:pkcs12 algor cipherinit error:.\crypto\pkcs12\p12_decr.c:87:
26660:error:2306C067:PKCS12 routines:PKCS12_item_i2d_encrypt:encrypt error:.\crypto\pkcs12\p12_decr.c:188:
26660:error:2307D067:PKCS12 routines:PKCS8_encrypt:encrypt error:.\crypto\pkcs12\p12_p8e.c:96:
done!.
</code></pre>

<p>^I have no idea what all that means. Its like using FIPS mode won't allow that algorithm! What will it allow then???</p>
","<p>OK so I figured this out after thinking about the errors more and spotting this:</p>

<p><a href=""https://wiki.openssl.org/index.php/Manual:OpenSSL_add_all_algorithms(3)"" rel=""nofollow noreferrer"">https://wiki.openssl.org/index.php/Manual:OpenSSL_add_all_algorithms(3)</a></p>

<p>If I call OpenSSL_add_all_algorithms() after I call FIPS_mode_set(1) then PEM_write_bio_RSAPrivateKey works. That is, this does not throw an error:</p>

<pre><code>rc = PEM_write_bio_RSAPrivateKey(
        pem5.get(), //binary file pointer
        rsa.get(), //key in use
        EVP_aes_256_cbc(), //cipher to use
        NULL,
        0,
        NULL,
        password_ca
    );
</code></pre>

<p>Then I call EVP_cleanup() after I'm done to free up memory from the OpenSSL_add_all_algorithms() call.</p>
","356","<openssl><private-key><fips>","0","0","1","2017-12-14 15:08:46","47816535","0","","","","","2017-12-13 22:50:03",""
"51685529","Generating the 256bit ECDSA private key","<p>I want to make an 256 bit <code>ECDSA</code> private key with <code>secp256k1</code> curve by php.</p>

<p>I used this snippet:</p>

<pre><code>$pk_Generate = openssl_pkey_new(array(
    'private_key_bits' =&gt; 256,
    'private_key_type' =&gt; OPENSSL_KEYTYPE_EC,
    'curve_name' =&gt; 'secp256k1'
));

while ($msg = openssl_error_string())
    echo $msg . ""&lt;br /&gt;\n"";

openssl_pkey_export($pk_Generate, $pk_Generate_Private);
var_dump($pk_Generate_Private); // show me NULL
</code></pre>

<p>but it give me this error:</p>

<pre><code>error:0E06D06C:configuration file routines:NCONF_get_string:no value
error:0E06D06C:configuration file routines:NCONF_get_string:no value
error:0E06D06C:configuration file routines:NCONF_get_string:no value
error:0E06D06C:configuration file routines:NCONF_get_string:no value
</code></pre>

<p>also if this code works fine, it shows me private key in <code>PEM</code> format but I want it in hex string format.</p>

<p>please guide me.</p>
","<p>Try this</p>

<pre><code>$config = [
    ""config"" =&gt; getenv('OPENSSL_CONF'),
    'private_key_type' =&gt; OPENSSL_KEYTYPE_EC,
    'curve_name' =&gt; 'secp256k1'
];
$res = openssl_pkey_new($config);
if (!$res) {
    echo 'ERROR: Fail to generate private key. -&gt; ' . openssl_error_string();
    exit;
}
// Generate Private Key
openssl_pkey_export($res, $priv_key, NULL, $config);
// Get The Public Key
$key_detail = openssl_pkey_get_details($res);
$pub_key = $key_detail[""key""];

echo ""priv_key:&lt;br&gt;"".$priv_key;
echo ""&lt;br&gt;&lt;br&gt;pub_key:&lt;br&gt;"".$pub_key;
</code></pre>
","351","<php><private-key><ecdsa>","0","0","1","2018-11-19 18:40:19","","0","","","","","2018-08-04 12:25:26",""
"48089261","How to recover private key of an existing one","<p>I'm getting error while updating my mac OS to High sierra 10.13.2 so, I have installed fresh OS. And now I lost my private key, also I have  downloaded my Distribution certificate from apple.developer account but, It showing error of Missing Private key..</p>

<p>I Have done tried many link/blogs where other saying revoke your certificate &amp; create new one to upload app. I tried to follow instruction and created another certificate from XCode, now it showing revoke the certificate error in XCode.</p>

<p>I have Following doubts which i mentioned below ..</p>

<p>1.Is there is any way to recover my private keys?(I'm having old distribution certificate)</p>

<p>2.If I revoked my distribution certificate, but I have  uploaded two apps by using those certificate so,Those app will affect by this setp?</p>

<p>3.If i created new Certificate then can i upload the new version of the existing app</p>

<p>please help me i Forgot Live applications private key and now I need to upload a new version of existing app any help will be very appreciable.</p>
","<p>No, you can't recover the lost key. Create a new key and add it to your keychain. Then create a new certificate with the new key. Create updated provisioning profiles with the new certificate. Use the new provisioning profiles to build and submit app updates.</p>

<p>None of this will affect your existing apps already in the App Store.</p>
","349","<ios><xcode><macos><private-key>","1","1","1","2018-01-05 05:34:15","","0","","5762271","","2018-01-05 05:34:15","2018-01-04 05:35:46",""
"52396203","How can I add a private key to a certificate in the windows trust store in c++?","<p>I have a file with a certificate in it, and I have a file with a private key file in it.</p>

<p>if I run this command</p>

<p>certutil –MergePFX certfile.cer certfile.pfx</p>

<p>I get a pfx file that if I run with explorer, it runs the windows certificate import wizard. If I run through the wizard, I end up with the cert with the key in the windows trust store. Exactly what I need.</p>

<p>I'm trying to do this programatically.</p>

<p>The problem seems to be in the CertAddCertificateContextToStore function.
In the remarks it says: </p>

<blockquote>
  <p>The certificate context is not duplicated using CertDuplicateCertificateContext. Instead, the function creates a new copy of the context and adds it to the store. In addition to the encoded certificate, CertDuplicateCertificateContext also copies the context's properties, with the exception of the CERT_KEY_PROV_HANDLE_PROP_ID and CERT_KEY_CONTEXT_PROP_ID properties.</p>
</blockquote>

<p>So certduplicatecertificatecontext very specifically will not copy the private key, and it seems that CertAddCertificateContextToStore doesn't either.</p>

<p>I have a HCRYPTPROV struct with my private key and I use CERT_KEY_CONTEXT_PROP_ID and CERT_KEY_PROV_HANDLE_PROP_ID (I tried them both) to CertSetCertificateContextProperty my certificate context, and then I store it in the windows trust store with CertAddCertificateContextToStore. And no matter what I try, the certificate goes in without the private key.</p>

<p>I'm verifying this with the certmgr tool that shows if a private key is attached, and I can also see it not work when I use that client certificate in a curl request I'm making.</p>

<p>Another thing I tried was this:</p>

<p>The last parameter to CertAddCertificateContextToStore is the handle to the copy of the context that is made. I figure the original context is the one I created where I read the certificate in from disk. This new certificate is the one tied to the actual on-disk store that certmgr reads.</p>

<p>So after I call CertAddCertificateContextToStore, I take the new cert and I add the private key, again via CertSetCertificateContextProperty, and then for good measure, I call CertControlStore to push the in-memory version of the context to disk. Still no effect. Every function call succeeds, but the private key never makes it to the windows trust store.</p>

<p>So in short, my question is what is the windows certificate import tool doing that I am not that will allow me to store a private key along with the certificate in the windows trust store?</p>

<p>I've found a handful of other questions and program examples and message boards dating back to 2002 and none are very explicit, and none of the code examples do exactly what I need, but I know I have all the pieces, they just don't yield the result.</p>
","<p>I strongly believe that you set incorrect properties. You should set only <code>CERT_KEY_PROV_INFO_PROP_ID</code> context property in the <code>CertSetCertificateContextProperty</code> call to associate certificate with private key.</p>

<p>If you have a HCRYPTPROV handle, then you have all necessary information to construct <code>CRYPT_KEY_PROV_INFO</code> structure.</p>
","342","<certificate><x509certificate><private-key>","0","0","1","2018-09-19 04:43:13","52398207","0","","","","","2018-09-19 00:14:26",""
"40147924","Deploy Symfony app with LexikJWTAuthenticationBundle on Heroku","<p>I have my app deployed to Heroku, then I added an api with LexikJWTAuthenticationBundle for authentication. I created public and private keys with a passphrase like the documentation says, and it works great on my local machine, yet I do not know how to create or copy those files to Heroku. </p>
","<p>You probably have something like that in your config.yml:</p>

<pre><code>lexik_jwt_authentication:
    private_key_path: '%kernel.root_dir%/var/jwt/private.pem'   
    public_key_path:  '%kernel.root_dir%/var/jwt/public.pem'    
    pass_phrase:      'somepassphrase'                        
    token_ttl:        2592000
</code></pre>

<p>In my case this resolves to a path like /app/var/jwt/ and in that folder I have two files private.pem and public.pem.</p>

<p>You say it's running in dev, so you should have something similar.
So you just have to upload/checkin/deploy the folder structure and files with your standard deployment (Symfony and other) files to Heroku. What is your exact issue?</p>

<p><strong>Strong recommendation:</strong>
You should <strong>have different set of key pairs for every environment</strong>, so in a minimal setup you shouldn't define the lexik_jwt_authentication not in your config.yml but twice, in your config_dev.yml and your config_prod.yml and and have a different set of pem files for dev and prod.</p>
","337","<symfony><heroku><private-key><public-key><lexikjwtauthbundle>","5","-1","2","2018-06-30 08:40:12","","0","2","","","","2016-10-20 07:20:30",""
"40147924","Deploy Symfony app with LexikJWTAuthenticationBundle on Heroku","<p>I have my app deployed to Heroku, then I added an api with LexikJWTAuthenticationBundle for authentication. I created public and private keys with a passphrase like the documentation says, and it works great on my local machine, yet I do not know how to create or copy those files to Heroku. </p>
","<p>With LexikJWTAuthenticationBundle v2.5.0, this is now possible to give keys as environment variables : <a href=""https://github.com/lexik/LexikJWTAuthenticationBundle/commit/154c60e90b8f10e1fdca819a681b5f189e8ed9ef#diff-850942b3ba24ab03a40aaa81b6152852"" rel=""nofollow noreferrer"">commit 154c60e90b8f10e1fdca819a681b5f189e8ed9ef</a>.</p>

<p><strong>Replace keys path for string keys in lexik_jwt_authentication.yaml :</strong></p>

<p>Before :</p>

<pre><code>lexik_jwt_authentication:
    private_key_path: '%kernel.project_dir%/%env(JWT_PRIVATE_KEY_PATH)%'
    public_key_path: '%kernel.project_dir%/%env(JWT_PUBLIC_KEY_PATH)%'
</code></pre>

<p>After :</p>

<pre><code>lexik_jwt_authentication:
    secret_key: '%env(JWT_SECRET_KEY)%'
    public_key: '%env(JWT_PUBLIC_KEY)%'
</code></pre>

<p>I didn't find a solution to paste full keys as string in .env file, so I kept <code>private_key_path</code> and <code>public_key_path</code> in <code>config/dev/lexik_jwt_authentication.yaml</code> for my dev environment, and used <code>secret_key</code> and <code>public_key</code> only in <code>config/prod/lexik_jwt_authentication.yaml</code>, for my Heroku production.</p>

<p>To finish, add env variables on Heroku, deploy and you're done :</p>

<p><a href=""https://i.stack.imgur.com/I3jdE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/I3jdE.png"" alt=""JWT_PUBLIC_KEY""></a></p>

<p><a href=""https://i.stack.imgur.com/7Hpi2.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/7Hpi2.png"" alt=""JWT_SECRET_KEY""></a></p>
","337","<symfony><heroku><private-key><public-key><lexikjwtauthbundle>","5","4","2","2018-06-30 08:40:12","","0","2","","","","2016-10-20 07:20:30",""
"32433543","how trust store and key store protect root certificates and private keys?","<p>root certificate and private keys are very important for establishing a trusted and secure communication channel. My question is these data are protected in systems such as Windows or Linux. </p>
","<p>Only file password is the security that too can be broken if someone has file system access.
In case of Linux you must keep permissions to minimum possible with readonly to owner of keystore.</p>

<p>Oracle has few solutions like wallet etc but that can be broken as well by tools . </p>
","337","<certificate><private-key><pki><truststore>","0","0","1","2015-09-16 21:56:29","","3","","","","","2015-09-07 07:46:37",""
"43649510","how to fix this exception: Exception in thread ""main"" java.lang.ClassCastException","<p>exception is :Exception in thread ""main"" java.lang.ClassCastException: [Ljava.security.cert.Certificate; cannot be cast to [Ljava.security.cert.X509Certificate;</p>

<p>in keystore.jks file, it has one entry, its alias is ""/btsmed-1/certh-1/necert-1"", certificate chain in this keystore.jks file was set into by this method:</p>

<pre><code>keystore.setKeyEntry(alias, Keys.keyPair().getPrivate(),KEY_STORE_PASSWORD.toCharArray(), certChain);
keystore.store(out, KEY_STORE_PASSWORD.toCharArray());
</code></pre>

<p>before I re-load jks to keystore, when execute this statement:</p>

<pre><code>X509Certificate[] certs1 = (X509Certificate[])keystore.getCertificateChain(alias);
</code></pre>

<p>it will not throw cast exception.</p>

<p>but after keystore.load(fIn, password); it will throw cast exception when execute this statement:</p>

<pre><code>X509Certificate[] certs1 = (X509Certificate[]) keystore.getCertificateChain(alias);
</code></pre>

<p>====================below is source code.</p>

<pre><code>public class KeystoreLoad {

    public static void main(String[] args) throws Exception {
      char[] password = ""nokia123"".toCharArray();
      String alias = ""/btsmed-1/certh-1/necert-1"";

      KeyStore keystore = KeyStore.getInstance(""JKS"");

      keystore.load(null, null);

      FileInputStream fIn = new FileInputStream(""d://keystore/keystore.jks"");

      keystore.load(fIn, password);

      X509Certificate[] certs1 = (X509Certificate[]) keystore.getCertificateChain(alias);
      System.out.println(Arrays.toString(certs1));

    }

}
</code></pre>
","<p>try this one</p>

<pre><code>import java.io.FileInputStream;
import java.security.KeyStore;
import java.util.Arrays;

import java.security.cert.X509Certificate;

public class TestDemo {

    public static void main(String[] args) throws Exception {

        char[] password = ""nokia123"".toCharArray();
        String alias = ""/btsmed-1/certh-1/necert-1"";

        KeyStore keystore = KeyStore.getInstance(""JKS"");

        keystore.load(null, null);

        FileInputStream fIn = new FileInputStream(""d://keystore/keystore.jks"");

        keystore.load(fIn, password);
        keystore.getCertificateChain(alias);
        X509Certificate[] certs1 = (X509Certificate[]) keystore.getCertificateChain(alias);

        System.out.println(Arrays.toString(certs1));

    }

}
</code></pre>

<p>got it insted of imporing javax.security.cert.X509Certificate use 
 java.security.cert.X509Certificate</p>
","335","<java><security><x509certificate><keystore><private-key>","-1","0","2","2017-05-03 13:28:47","","0","","","","","2017-04-27 05:47:03",""
"43649510","how to fix this exception: Exception in thread ""main"" java.lang.ClassCastException","<p>exception is :Exception in thread ""main"" java.lang.ClassCastException: [Ljava.security.cert.Certificate; cannot be cast to [Ljava.security.cert.X509Certificate;</p>

<p>in keystore.jks file, it has one entry, its alias is ""/btsmed-1/certh-1/necert-1"", certificate chain in this keystore.jks file was set into by this method:</p>

<pre><code>keystore.setKeyEntry(alias, Keys.keyPair().getPrivate(),KEY_STORE_PASSWORD.toCharArray(), certChain);
keystore.store(out, KEY_STORE_PASSWORD.toCharArray());
</code></pre>

<p>before I re-load jks to keystore, when execute this statement:</p>

<pre><code>X509Certificate[] certs1 = (X509Certificate[])keystore.getCertificateChain(alias);
</code></pre>

<p>it will not throw cast exception.</p>

<p>but after keystore.load(fIn, password); it will throw cast exception when execute this statement:</p>

<pre><code>X509Certificate[] certs1 = (X509Certificate[]) keystore.getCertificateChain(alias);
</code></pre>

<p>====================below is source code.</p>

<pre><code>public class KeystoreLoad {

    public static void main(String[] args) throws Exception {
      char[] password = ""nokia123"".toCharArray();
      String alias = ""/btsmed-1/certh-1/necert-1"";

      KeyStore keystore = KeyStore.getInstance(""JKS"");

      keystore.load(null, null);

      FileInputStream fIn = new FileInputStream(""d://keystore/keystore.jks"");

      keystore.load(fIn, password);

      X509Certificate[] certs1 = (X509Certificate[]) keystore.getCertificateChain(alias);
      System.out.println(Arrays.toString(certs1));

    }

}
</code></pre>
","<p>It is because the java compiler doesn't know if all the objects in the <code>Certificate[]</code> returned by the <code>getCertificateChain()</code> method contains only <code>X509Certificate</code> [even though the <code>X509Certificate</code> is the only class that extends the <code>Certificate</code> class as of now].</p>

<p>So if you need the <code>X509Certificate[]</code> you have to loop through the <code>Certificate[]</code>, like below:</p>

<pre><code>Certificate[] certChain = ks.getCertificateChain(""ALIAS"");

X509Certificate[] x509CertChain = new X509Certificate[certChain.length];
for (int i = 0; i &lt; certChain.length; i++)
    x509CertChain[i] = (X509Certificate) certChain[i];
</code></pre>
","335","<java><security><x509certificate><keystore><private-key>","-1","1","2","2017-05-03 13:28:47","","0","","","","","2017-04-27 05:47:03",""
"54181827","How to recover the tampered file after running git-crypt","<p>I have a repository in github. Recently I cloned it and executed</p>

<p><code>git-crypt unlock ~/config/mykey.key</code></p>

<p>In the entire repository, there are only two encrypted files. 
1) A private key
2) myfile.env file</p>

<p>The <code>git-crypt</code> command which I executed tampers the files. It deletes the 
<code>myfile.env</code> and alters the private key file.</p>

<p>I get this error</p>

<p><code>git-crypt: error: encrypted file has been tampered with!</code>
<code>error: external filter '""git-crypt"" smudge' failed 1</code>
<code>error: external filter '""git-crypt"" smudge' failed</code>
<code>fatal: myfile.env: smudge filter git-crypt failed</code>
<code>Error: 'git checkout' failed</code>
<code>git-crypt has been set up but existing encrypted files have not been decrypted</code></p>

<p>Is ther a way to solve this ?</p>
","","334","<git><encryption><decode><private-key><git-crypt>","0","","0","2019-01-14 12:45:55","","1","","","","","2019-01-14 12:45:55",""
"14357920","git create branch in multiple repos","<p>I have many git repositories. I'm writing script which creates <strong>newBranch</strong> from <strong>master</strong> at every repo. So I do this command set for every repo:</p>

<pre><code>git checkout master
git branch newBranch
git push origin newBranch
</code></pre>

<p>I've got problem with last command. It promts password for repo. </p>

<p>Usually I use GitExtension with which works perfect with putty and private key. How can I force 'git push' command to use these settings?</p>

<p>My script will be used by other users with the same CPU configuration, so I need to read this settings automatically.</p>
","<p>Git Extensions will automatically load the required SSH key into PuTTY’s agent (pageant.exe) for a repo where a private key is specified. If you don’t use Git Extensions you will need to do that manually.</p>

<p>If you set the environment variable <code>GIT_SSH</code> correctly to <code>plink.exe</code> (Git Extensions should have done that), it will be enough to just launch pageant and load your key into it.</p>
","332","<git><push><putty><private-key>","0","1","1","2013-01-16 12:28:31","14358507","1","","","","","2013-01-16 11:57:44",""
"17601369","OS X: What might cause ssh-agent to stop providing passphrase for encrypted SSH private key?","<p>As far as I can tell, the only thing I did was modify my <code>~/.ssh/known_hosts</code> file, because I set up a new Parallels VM with a Bridged Network Adapter and the client Linux gained a local LAN IP which matched a previous entry in the known hosts file (thus preventing me from connecting to it). </p>

<p>(I'm not sure if this is the cause, but) I edited my known hosts file, and sometime after, when pushing to git, SSH started asking me to provide the password for the private key, which it had never done up to that point (since setting up the machine in February).</p>

<p>I now realize I should have at least run <code>ssh</code> with a verbose flag to see what was happening, and i have since learned about <code>ssh-add</code> and <code>ssh-agent</code> and all that, and I'm guessing <code>ssh-add -l</code> might have told me it stopped ""tracking"" it or something so i could ""re-add"" it with <code>ssh-add</code>.  </p>

<p>My question is, could manually editing the known hosts file possibly have triggered <code>ssh-agent</code> to stop saving the private key passphrase as a security measure? If not, is there anything that would trigger this, that I may have inadvertently done between the times that I did any pushing with git?</p>

<p>What I did was: </p>

<ul>
<li>verify my <code>~/.ssh/id_rsa</code> was encrypted. Got slightly confused about why I never got prompted for said passphrase (hardly remember setting it up with one, but I probably did)</li>
<li>decrypted it with <code>openssl rsa -in ~/.ssh/id_rsa -out ~/.ssh/id_rsa</code></li>
<li>got my pushing done</li>
<li>found out about <code>ssh-agent</code>, thought, hmm, explains why I never got prompted for passphrase, I should set it up like it was since my file is now plaintext</li>
<li>encrypted it with <code>ssh-keygen -p -f ~/.ssh/id_rsa</code></li>
</ul>

<p>And I was slightly surprised to find that it is no longer asking me for the private key encryption passphrase anymore after I re-encrypted the private key using that last command. <code>ssh-add -l</code> now reports one entry (mentioning that very file, <code>~/.ssh/id_rsa</code>). I only wish I ran <code>ssh-add -l</code> prior to decrypting the private key. </p>

<p>Is everything still kosher?  Did I get hacked?</p>
","<p>I had the same thing happen and was likewise concerned about being hacked.  I still don't know exactly what happened, which is disconcerting.  </p>

<p>Anyway, here's what I do whenever I'm suddenly asked for my passphrase:  </p>

<pre><code>$ eval `ssh-agent -s`
$ ssh-add
</code></pre>

<p>It will ask me one more time for my passphrase then that's it.  </p>
","332","<macos><security><ssh><openssl><private-key>","1","3","1","2013-10-02 11:27:49","","1","1","340947","","2013-07-11 19:09:46","2013-07-11 19:04:11",""
"41219011","Why KeyPair.getPrivate().getEncoded() is null?","<pre><code>public KeyPair generateKeyPair(@NonNull Context context, @NonNull String alias) {
    Calendar startDate = Calendar.getInstance();
    Calendar endDate = Calendar.getInstance();
    endDate.add(Calendar.YEAR, 1);

    KeyPairGenerator keyPairGenerator;
    try {
        keyPairGenerator = KeyPairGenerator.getInstance(""RSA"", ""AndroidKeyStore"");
        AlgorithmParameterSpec spec;
        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.M) {
            spec = new KeyGenParameterSpec.Builder(alias, KeyProperties.PURPOSE_SIGN | KeyProperties.PURPOSE_VERIFY)
                    .setCertificateNotBefore(startDate.getTime())
                    .setCertificateNotAfter(endDate.getTime())
                    .setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_RSA_PKCS1)
                    .setDigests(KeyProperties.DIGEST_SHA256, KeyProperties.DIGEST_SHA512)
                    .build();
        } else {
            spec = new KeyPairGeneratorSpec.Builder(context)
                    .setAlias(alias)
                    .setSubject(new X500Principal(""CN=fake""))
                    .setSerialNumber(BigInteger.ONE)
                    .setStartDate(startDate.getTime())
                    .setEndDate(endDate.getTime())
                    .build();
        }
        keyPairGenerator.initialize(spec);
    } catch (Exception e) {
        e.printStackTrace();
        return null;
    }
    return keyPairGenerator.generateKeyPair();
}
</code></pre>

<p>i know privateKey.getEncoded can be null, but how to get the privateKey base64 value?</p>
","<p>If you were using a provider based on a hardware cryptographic device <a href=""https://developer.android.com/training/articles/keystore"" rel=""nofollow noreferrer""><code>AndroidKeyStore</code></a> it has been set up not to publish private keys outside of it. Therefore, <code>Key.getEncoded()</code> on the private key might actually return null. More details <a href=""https://books.google.com.sg/books?id=xZDIAu90ukEC&amp;pg=PA181&amp;lpg=PA181&amp;dq=getPrivate().getEncoded()%20return%20null&amp;source=bl&amp;ots=lu-JPNjZp1&amp;sig=ACfU3U0sO1i-BhoyLDXPqh3RiYIu4mDNJg&amp;hl=en&amp;sa=X&amp;ved=2ahUKEwij6qi-0-XgAhUCiXAKHXL5A2kQ6AEwBXoECAYQAQ#v=onepage&amp;q=getPrivate().getEncoded()%20return%20null&amp;f=false"" rel=""nofollow noreferrer"">here</a></p>
","329","<android><private-key>","6","1","1","2019-03-03 09:32:45","","1","","","","","2016-12-19 09:03:07",""
"13388863","Quicker way to calculate RSA private key in PHP","<p>Hi I am required to do my own implementation of the RSA algorithm in php. The only thing I have a problem with is the part that calculates the private key. The way my function works is by getting a random number and checking to see if it fits into the private key formula. This works fine, however the only problem is that when using very large numbers, it takes ages and the page times out. I was wondering, is there a better way that I can implement this without having to keep generating random numbers? Here is the required code:</p>

<pre><code>$decrypt = rand(1,($phi-1));
while(!private($decrypt, $encrypt, $phi)){
$decrypt = rand(1,($phi-1));
}

...

function private($decrypt, $encrypt, $phi) {

 if(($decrypt * $encrypt) % ($phi) == 1){
 Return true;
 }
 else{
 Return false;
 }
}
</code></pre>
","<p>This approach will not work. PHP numeric types are double-precision floating point numbers, and as such cannot represent integers exactly beyond around 53 bits. You will most likely need to use a PHP multiprecision library such as <a href=""http://us1.php.net/manual/en/book.bc.php"" rel=""nofollow"">bcmath</a> or <a href=""http://us1.php.net/manual/en/book.gmp.php"" rel=""nofollow"">gmp</a>. This will still not be fast, but it will at least give correct results.</p>
","329","<php><rsa><private-key>","0","1","2","2012-11-15 00:31:24","","0","","","","","2012-11-14 23:00:43",""
"13388863","Quicker way to calculate RSA private key in PHP","<p>Hi I am required to do my own implementation of the RSA algorithm in php. The only thing I have a problem with is the part that calculates the private key. The way my function works is by getting a random number and checking to see if it fits into the private key formula. This works fine, however the only problem is that when using very large numbers, it takes ages and the page times out. I was wondering, is there a better way that I can implement this without having to keep generating random numbers? Here is the required code:</p>

<pre><code>$decrypt = rand(1,($phi-1));
while(!private($decrypt, $encrypt, $phi)){
$decrypt = rand(1,($phi-1));
}

...

function private($decrypt, $encrypt, $phi) {

 if(($decrypt * $encrypt) % ($phi) == 1){
 Return true;
 }
 else{
 Return false;
 }
}
</code></pre>
","<p>Option 1:</p>

<p>You'd be better of doing this sequentially. Your rand() can find numbers that have been used previously. Let's say your max is 10, the requred number is 8 or 4, with rand() you could get 3,5,9,10,3,6,2,7,3,6,9,10,1,3,5,6,3,7,8 before hitting an answer. If you run sequentially, you have a max of 10 calls to get it.</p>

<p>But, you need a random number, so you probably should start at a random number, then increase sequentially until you get a hit - that way you could get 8, or you could get 4, depending on your start point.</p>

<p>Option 2:</p>

<p>After that, there are other solutions you can mathematically do. Start with a random number, work out what the modulus is, and the difference from 1 (if negative, add <code>$phi</code>). Then you can run from 1 to <code>$decrypt</code> to find out what number modded gives teh difference from 1, and then add that to encrypt for your response.</p>

<pre><code>$decrypt = 7
$encrypt = 9
$phi = 3
($decrypt * $encrypt) % ($phi) = 0
$differenceInMod = 1 - ($decrypt * $encrypt) % ($phi) = 1;
if ($differenceInMod &lt; 0) {
    $differenceInMod+=$phi;
}
for($i = 1; $i&lt;$decrypt; $i++) {
   if (($decrypt * $i) % ($phi) == $differenceInMod) {
      $validEncrypt = $encrypt + $i;
      break;
   }
}
</code></pre>

<p>Probably no faster that stright sequential (option 1) - but numbers are smaller and you have limits.</p>
","329","<php><rsa><private-key>","0","0","2","2012-11-15 00:31:24","","0","","","","","2012-11-14 23:00:43",""
"46048024","Where can i find public key of specific node on chef server?","<p>As per docs, using chef-validator key chef-client creates a private key for node and public key and store the public key on chef-server. I would like to view public key of specific node on chef-server but couldn't find path/directory where public keys are stored on the chef server. Can anyone please help me with this?</p>
","<p>They live in the Chef Server database so you can't see them directly. You can use <code>knife client show</code> to access them via the API though.</p>
","328","<chef><private-key>","2","1","1","2017-09-05 07:37:34","","0","","5575691","","2017-09-05 07:15:25","2017-09-05 06:08:14",""
"13661750","What is key file format for JSch?","<p>JSch has a method <code>addIdentity(String prvkey, String passphrase)</code>, where prvkey is private key file. In which format it should be?</p>

<p>I have keys for Putty, OpenSSH and SSHCom. </p>
","<p>The file that you use for ssh is used in Jcsh</p>
","327","<java><jsch><private-key>","0","0","1","2012-12-01 18:16:56","","0","","258483","","2012-12-01 18:14:53","2012-12-01 17:22:27",""
"41036330","Store private key in microservices","<p>There are some microservice which communicating with each other with rsa encrypted messages. The private keys are in files currently, what is the best practice to store the private and public keys in the containers? The current solution is in the /etc/ssl, but this is a little bit hard to manage and not to safety.</p>
","<p>I don't know your exact use case but you could consider taking a look at Hashicorp Vault. It has a <a href=""https://www.vaultproject.io/docs/secrets/pki/index.html"" rel=""nofollow noreferrer"">PKI secrets plugin</a> which lets you storing public/private key pairs. If it fits your use case this might be a good read, as at least someone else has thought about storing it securely.</p>

<p>The nice thing about vault is that in theory (this depends on the plugin that's being used) you could create a situation where the private keys are completely managed by vault and your messages are being authenticated with the vault. This will make it hard for an attacker to get your private keys. However, you might end up needing to write your own vault plugin to get this completely working with your application.</p>
","326","<microservices><private-key><public-key>","3","0","1","2018-07-05 22:11:13","51200539","0","1","","","","2016-12-08 09:49:18",""
"54178516","Creating a custom .SNK file","<p>How can we generate a custom <a href=""https://stackoverflow.com/questions/131181/what-is-a-snk-for"">.SNK file</a> (used to sign an assembly with a strong name), if I already have my private/public key pair (in arbitrary format, but for the sake of the clarity, let's say we've generated it on linux, using <a href=""https://www.ssh.com/ssh/keygen/"" rel=""nofollow noreferrer"">ssh-keygen</a>)?</p>
","<p>You can store the keys in Microsoft CNG formerly CSP and the SNK can be easily pointing to the Key container .. that way you can even have the keys store in an HSM, this however create a problem with sharing keys on different machine .. if the keys are on a pkcs12 file you can easily make a batch file to store it in the KeyContainer and then use it </p>

<p>So you same key pairs on each machine which can be security if these keys are very important. </p>

<p>On other hand you can use also the CSP or CNG Provider </p>

<pre><code>&lt;PropertyGroup&gt;
    &lt;SignAssembly&gt;true&lt;/SignAssembly&gt;
    &lt;DelaySign&gt;false&lt;/DelaySign&gt;
    &lt;KeyContainerName&gt;YOUR_CONTAINER_NAME_HERE&lt;/KeyContainerName&gt;
&lt;/PropertyGroup&gt;
</code></pre>

<p>If you also want the key to show up in the 'properties' section of the project then you can add the following section</p>

<pre><code>&lt;None Include=""$(KEY_CONTAINER_HERE)""&gt;
  &lt;Link&gt;Properties\App.snk&lt;/Link&gt;
&lt;/None&gt;
</code></pre>

<p>If you can generate pk12 or pfx file .. with the key pairs, then you can use sn.exe -i   .. to generate p12 file you can use openssl</p>
","323","<.net><assemblies><private-key><public-key><snk>","2","0","1","2019-03-08 09:12:36","","2","1","","","","2019-01-14 09:14:44",""
"34459588","Secure communication using encrypted messages","<p>I have a question about how to encrypt messages between users. Note i will only talk about cryptography theory and not platform dependent code like C++ with Windows Cryptography. I am talking about system programming and not web programming encryption with TLS, SSL, etc...</p>

<p><strong>Also, ignore Certificates and Signing of messages, so just think of the Public keys as already being verified as not fraudulent and messages as being from the correct user.</strong></p>

<p>I believe the best way to reach fast and secure encryption communication between users is to have both users with a session key because symmetric encryption is faster than asymmetric, and using asymmetric encryption (RSA) for the secure transfer of the session key.</p>

<p>I know there are other key agreement algorithms like Diffie-Hellmans, but lets stick with RSA which is what i've chosen.</p>

<p>Please tell me if you see where this might be a insecure (man-in-the-middle attack) or drastically inefficient way of performing encrypted communications.</p>

<p>Theory steps:</p>

<p>i.) Parties = {Server, Client}</p>

<p>ii.) Server: Generate session key (RC4)</p>

<p>iii.) Client: Generate private/public key pair (RSA)</p>

<p>iv.) Client: Send public key to Server</p>

<p>v.) Server: Encrypt session key with Client's Public Key, then send encrypted 
session key to Client</p>

<p>vi.) Client: Decrypt session key using Client's Private Key</p>

<p>vii.) Both parties now hold the session key for fast encrypted communications</p>

<p>Server(Server's Session key) &lt;--> Session Key's encrypted packet (Communication medium) &lt;--> Client(Server's Session key, Client's Public/Private key pair)</p>

<p>Thanks! </p>
","<p><strong>Assumptions</strong>: </p>

<ul>
<li><strong>Public Key Tampering is not possible</strong>.

<ul>
<li>I think you mean this, by ""ignore Certificates and Signing of messages""</li>
</ul></li>
<li><strong>Cryptosystem is not broken</strong>.

<ul>
<li>Symmetric cipher is not broken (RC4 is broken, for example)</li>
<li>Asymmetric cipher is not broken</li>
<li>One-way Hash function is not broken</li>
<li>Random number generator is not broken</li>
</ul></li>
</ul>

<p><strong>Under these conditions, that's perfectly safe.</strong> In fact what you described in your question is how PGP works.</p>

<p><a href=""https://i.stack.imgur.com/u9Ygh.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/u9Ygh.png"" alt=""enter image description here""></a></p>

<p>If you are willing to learn more about attacks against PGP, go <a href=""https://www.sans.org/reading-room/whitepapers/vpns/attacks-pgp-users-perspective-1092"" rel=""nofollow noreferrer"">here</a>.
And if you are willing to learn basics of cryptology, <a href=""https://www.khanacademy.org/computing/computer-science/cryptography"" rel=""nofollow noreferrer"">this</a> is an excellent beginner tutorial.</p>
","317","<security><encryption><rsa><public-key-encryption><private-key>","-1","3","2","2015-12-25 03:24:28","34459612","0","","","","","2015-12-25 02:41:44",""
"34459588","Secure communication using encrypted messages","<p>I have a question about how to encrypt messages between users. Note i will only talk about cryptography theory and not platform dependent code like C++ with Windows Cryptography. I am talking about system programming and not web programming encryption with TLS, SSL, etc...</p>

<p><strong>Also, ignore Certificates and Signing of messages, so just think of the Public keys as already being verified as not fraudulent and messages as being from the correct user.</strong></p>

<p>I believe the best way to reach fast and secure encryption communication between users is to have both users with a session key because symmetric encryption is faster than asymmetric, and using asymmetric encryption (RSA) for the secure transfer of the session key.</p>

<p>I know there are other key agreement algorithms like Diffie-Hellmans, but lets stick with RSA which is what i've chosen.</p>

<p>Please tell me if you see where this might be a insecure (man-in-the-middle attack) or drastically inefficient way of performing encrypted communications.</p>

<p>Theory steps:</p>

<p>i.) Parties = {Server, Client}</p>

<p>ii.) Server: Generate session key (RC4)</p>

<p>iii.) Client: Generate private/public key pair (RSA)</p>

<p>iv.) Client: Send public key to Server</p>

<p>v.) Server: Encrypt session key with Client's Public Key, then send encrypted 
session key to Client</p>

<p>vi.) Client: Decrypt session key using Client's Private Key</p>

<p>vii.) Both parties now hold the session key for fast encrypted communications</p>

<p>Server(Server's Session key) &lt;--> Session Key's encrypted packet (Communication medium) &lt;--> Client(Server's Session key, Client's Public/Private key pair)</p>

<p>Thanks! </p>
","<blockquote>
  <p>lets stick with RSA which is what i've chosen.</p>
</blockquote>

<p>That's where your biggest vulnerability is.</p>

<p>Protocols such as TLS (which can use RSA) SSH and PGP provide a well defined mechanism for negotiating encryption, and implementations such as openssl provide a documented, tested, portable, robust and we'll tested abstraction layer. </p>

<p>Rolling your own solution carries massive risks of injecting vulnerabilities. And entails ongoing pain in maintenance.</p>

<p>BTW RC4 is considered broken by many people.</p>
","317","<security><encryption><rsa><public-key-encryption><private-key>","-1","1","2","2015-12-25 03:24:28","34459612","0","","","","","2015-12-25 02:41:44",""
"37051366","Is it a bad idea to generate private keys (certs) at server side?","<p>I'm working with some encryption project (using C#) and there is a task, which I'm thinking how to do well.</p>

<p>I need client to generate private keys for asymmetric encryption, but as I have reviewed some libraries, it's NOT such clean &amp; easy task.</p>

<p>Why?</p>

<p>For generating private keys in Windows, I have the next possibilities:</p>

<ul>
<li><p>generate them using <code>makecert.exe</code>, <code>pvk2pfx.exe</code> etc... but these tools
are from Windows SDK and seems to be they're linked with other DLLs,
so if client have a clean OS (without any installed library) I may:
1). Install Windows SDK on client's PC 2). Copy <code>makecert.exe</code> and other utilities and
hold it with the project distribution (I think, it's a bad idea due different Windows versions (from 7 to 10) and 32/64 bits architecture</p></li>
<li><p>generate using <code>Bouncy Castle</code>, not bad way (also I can use programming language and NOT external tools, which is an advantage for me), but the C# version isn't documented well and there are some ugly places in source code</p></li>
<li><p>using <code>OpenSSL</code>, don't like it, because there are several functions call
with errors in library, itself (with multithreading)</p></li>
<li><p>using <code>PowerShell</code> (also an option, but I suppose there would be
problems with supporting it on the old version of Windows like 7)</p></li>
</ul>

<p>Due those facts, I suppose, what if I free the client from generating private keys? Is it a bad idea? I can generate it at server side and <strong>DON'T SAVE</strong> private keys at it, just transfer via TLS.</p>

<p>Which secure vulnerabilities exist with a such way? Consider, that use of TLS is the <strong>STRICT</strong> option.</p>
","<p>It depends on your application. There are at least couple of issues with generating private key on server.</p>

<ol>
<li><p>Client must trust you are not saving this key for later. You know that you don't but client does not know that. Depending on application it might be important distinction.</p></li>
<li><p>Even if you send key over TLS, it still can be intercepted by man in the middle under certain circumstances. For example, company might install trusted root certificate on each computer in organization, then intercept and decrypt all ssl traffic which goes in\out this organisation. Again that might or might not be important depending on the type of your application.</p></li>
</ol>

<p>Suppose that you write chat application targeted at large audience, and want to encrypt all messages between users. Then if you will generate keys on server - no one will (or at least should) use your application. First you can dump all their keys to government\whatever (they cannot be 100% sure this cannot happen), and even if you won't do that - there are whole countries where ssl traffic is inspected by using ""fake"" trusted root certificates.</p>

<p>So long story short - if you can generate private keys on client - do that. In your case I think you can.</p>
","316","<c#><windows><security><transfer><private-key>","3","0","2","2016-05-05 22:16:49","37052314","5","","","","","2016-05-05 13:03:19",""
"37051366","Is it a bad idea to generate private keys (certs) at server side?","<p>I'm working with some encryption project (using C#) and there is a task, which I'm thinking how to do well.</p>

<p>I need client to generate private keys for asymmetric encryption, but as I have reviewed some libraries, it's NOT such clean &amp; easy task.</p>

<p>Why?</p>

<p>For generating private keys in Windows, I have the next possibilities:</p>

<ul>
<li><p>generate them using <code>makecert.exe</code>, <code>pvk2pfx.exe</code> etc... but these tools
are from Windows SDK and seems to be they're linked with other DLLs,
so if client have a clean OS (without any installed library) I may:
1). Install Windows SDK on client's PC 2). Copy <code>makecert.exe</code> and other utilities and
hold it with the project distribution (I think, it's a bad idea due different Windows versions (from 7 to 10) and 32/64 bits architecture</p></li>
<li><p>generate using <code>Bouncy Castle</code>, not bad way (also I can use programming language and NOT external tools, which is an advantage for me), but the C# version isn't documented well and there are some ugly places in source code</p></li>
<li><p>using <code>OpenSSL</code>, don't like it, because there are several functions call
with errors in library, itself (with multithreading)</p></li>
<li><p>using <code>PowerShell</code> (also an option, but I suppose there would be
problems with supporting it on the old version of Windows like 7)</p></li>
</ul>

<p>Due those facts, I suppose, what if I free the client from generating private keys? Is it a bad idea? I can generate it at server side and <strong>DON'T SAVE</strong> private keys at it, just transfer via TLS.</p>

<p>Which secure vulnerabilities exist with a such way? Consider, that use of TLS is the <strong>STRICT</strong> option.</p>
","<p>Depends upon multiple considerations!</p>

<ul>
<li>What do your users expect?  Designs that aim to provide ""zero-knowledge"" solutions such as <a href=""https://spideroak.com/features/zero-knowledge"" rel=""nofollow"">SpiderOak</a> guarantee that not even a person with full admin access to the server can decrypt your data.  In this case, generating the key on the server and promising that you do not store it doesn't cut it: anybody with full admin access to the server could break that promise any time.  So to achieve real zero-knowledge, you would have to generate keys on client side.</li>
<li>Are you willing to accept the performance impact?  Does it open DoS vectors?  Maybe because I am a security guy, I absolutely would not be doing it on the server.</li>
</ul>

<p>If I were you, I would be pursuing BouncyCastle on client side.</p>
","316","<c#><windows><security><transfer><private-key>","3","0","2","2016-05-05 22:16:49","37052314","5","","","","","2016-05-05 13:03:19",""
"13415419","Does RSA encrpytion work for small numbers?","<p>Suppose:</p>

<pre><code>p = 3
q = 11
n = 33
phi = 20
e = 7
d = 3
</code></pre>

<p>If I want to encrypt the number 123, I would do <code>(123^7) % 33</code>, which equals<code>18</code>.
Now if I want to decrypt <code>18</code>, I do <code>(18^3) % 33</code>, which gives me <code>24</code>.
As you can see, the input number and decrypted number is not the same. Does anyone know why this is? Also does this mean I have to break the number <code>123</code> up into single digits and then encrypt <code>1</code>, <code>2</code> and <code>3</code> separately?</p>

<p>EDIT: I am aware that due to the value of <code>n</code>, anything I <code>mod</code> by <code>n</code> would be lower than <code>n</code>. Does that mean I have to intially choose very large numbers for <code>p</code> and <code>q</code>?</p>
","<p>From <a href=""http://en.wikipedia.org/wiki/RSA_%28algorithm%29#Encryption"" rel=""nofollow"">the Wikipedia page for RSA</a> (my emphasis):</p>

<blockquote>
  <p>Bob then wishes to send message M to Alice.</p>
  
  <p>He first turns <code>M</code> into an integer <code>m</code>, <strong>such that <code>0 &lt;= m &lt; n</code></strong> by using an
  agreed-upon reversible protocol known as a padding scheme. He then
  computes the ciphertext c corresponding to</p>

<pre><code>c = m^e (mod n)
</code></pre>
</blockquote>

<p>Your <code>m</code> (<code>123</code>) is <strong>not</strong> less than <code>n</code> (<code>33</code>), so it doesn't work. So yes, you would need to start with larger <code>p</code> and <code>q</code> to get a larger <code>n</code>.</p>
","314","<math><rsa><private-key>","3","4","1","2012-11-16 12:06:18","","1","","71059","","2012-11-16 11:19:11","2012-11-16 11:10:40",""
"41257415","I am getting error while using SecKeyEncrypt with Secure Enclave","<p>I am try to use the kSecAttrTokenIDSecureEnclave for generating KeyPair using function .
But when try to encrypt data using function</p>

<pre><code>SecKeyEncrypt(publicKey,padding,(const uint8_t *)[symmetricKey bytes],keyBufferSize,cipherBuffer,&amp;cipherBufferSize);
</code></pre>

<p>getting error code -50, which show a parameter error.
Can anyone suggest me what I am missing ?</p>

<hr>

<p>here is my functions that generate key pair and try to encrypt the data</p>

<pre><code>- (void)generateKeyPair{
  OSStatus sanityCheck = noErr;

NSData *privateTag = [[NSData alloc] initWithBytes:privateKeyIdentifier length:sizeof(privateKeyIdentifier)];
NSData *publicTag = [[NSData alloc] initWithBytes:publicKeyIdentifier length:sizeof(publicKeyIdentifier)];


// Container dictionaries.
NSMutableDictionary * privateKeyAttr = [[NSMutableDictionary alloc] init];
NSMutableDictionary * publicKeyAttr = [[NSMutableDictionary alloc] init];
NSMutableDictionary * keyPairAttr = [[NSMutableDictionary alloc] init];


CFErrorRef error = NULL;
// Should be the secret invalidated when passcode is removed? If not then use `kSecAttrAccessibleWhenUnlocked`.
SecAccessControlRef sacObject = SecAccessControlCreateWithFlags(
                                                                kCFAllocatorDefault,
                                                                kSecAttrAccessibleWhenPasscodeSetThisDeviceOnly,
                                                                kSecAccessControlTouchIDAny | kSecAccessControlPrivateKeyUsage,
                                                                &amp;error
                                                                );

if (error != errSecSuccess) {
    NSLog(@""Generate key error: %@\n"", error);
}
[privateKeyAttr setObject:(__bridge id)sacObject forKey:(id)kSecAttrAccessControl];

[keyPairAttr setObject:[NSNumber numberWithUnsignedInteger:256] forKey:(id)kSecAttrKeySizeInBits];
[keyPairAttr setObject:(id)kSecAttrTokenIDSecureEnclave forKey:(id)kSecAttrTokenID];
[keyPairAttr setObject:(id)kSecAttrKeyTypeECSECPrimeRandom forKey:(id)kSecAttrKeyType];

// Set the private key dictionary.
[privateKeyAttr setObject:[NSNumber numberWithBool:YES] forKey:(id)kSecAttrIsPermanent];
[privateKeyAttr setObject:privateTag forKey:(id)kSecAttrApplicationTag];
// See SecKey.h to set other flag values.

// Set the public key dictionary.
[publicKeyAttr setObject:[NSNumber numberWithBool:NO] forKey:(id)kSecAttrIsPermanent];
[publicKeyAttr setObject:publicTag forKey:(id)kSecAttrApplicationTag];
// See SecKey.h to set other flag values.

// Set attributes to top level dictionary.
[keyPairAttr setObject:privateKeyAttr forKey:(id)kSecPrivateKeyAttrs];
[keyPairAttr setObject:publicKeyAttr forKey:(id)kSecPublicKeyAttrs];

// SecKeyGeneratePair returns the SecKeyRefs just for educational purposes.
sanityCheck = SecKeyGeneratePair((CFDictionaryRef)keyPairAttr, &amp;publicKeyRef, &amp;privateKeyRef);
LOGGING_FACILITY( sanityCheck == noErr &amp;&amp; publicKeyRef != NULL &amp;&amp; privateKeyRef != NULL, @""Something really bad went wrong with generating the key pair."" );


//Encypt
NSString *stringData = @""Hello Testing"";
NSLog(@""encryptedData Data = %@"",stringData);
NSData *encryptedData = [self wrapSymmetricKey:[stringData dataUsingEncoding:NSUTF8StringEncoding] keyRef:publicKeyRef];

}


- (NSData *)wrapSymmetricKey:(NSData *)symmetricKey keyRef:(SecKeyRef)publicKey {
OSStatus sanityCheck = noErr;
size_t cipherBufferSize = 0;
size_t keyBufferSize = 0;

LOGGING_FACILITY( symmetricKey != nil, @""Symmetric key parameter is nil."" );
LOGGING_FACILITY( publicKey != nil, @""Key parameter is nil."" );

NSData * cipher = nil;
uint8_t * cipherBuffer = NULL;

// Calculate the buffer sizes.
cipherBufferSize = SecKeyGetBlockSize(publicKey);
keyBufferSize = [symmetricKey length];

// Allocate some buffer space. I don't trust calloc.
cipherBuffer = malloc(cipherBufferSize * sizeof(uint8_t) );
memset((void *)cipherBuffer, 0x0, cipherBufferSize * sizeof(uint8_t));
SecPadding          padding = kSecPaddingNone;
// Encrypt using the public key.
sanityCheck = SecKeyEncrypt(    publicKey,
                            padding,
                            (const uint8_t *)[symmetricKey bytes],
                            keyBufferSize,
                            cipherBuffer,
                            &amp;cipherBufferSize
                            );

LOGGING_FACILITY1( sanityCheck == noErr, @""Error encrypting, OSStatus == %d."", sanityCheck );

// Build up cipher text blob.
cipher = [NSData dataWithBytes:(const void *)cipherBuffer length:(NSUInteger)cipherBufferSize];

if (cipherBuffer) free(cipherBuffer);

return cipher;
}
</code></pre>
","","314","<ios><security><public-key-encryption><private-key>","2","","0","2016-12-21 08:01:24","","3","1","3093854","","2016-12-21 08:01:24","2016-12-21 07:33:56",""
"22840197","How to get RSA parameters (exponent and mod) from PrivateKey in Objective-C?","<p>I'm trying to get the RSA Private Parameters (D,e) from a PrivateKey in Objective-C</p>

<p>Until now I've been capable of read a .p12 file and get its PublicKey:</p>

<pre><code>{
- (NSData *)getPublicKeyExp:(NSData*) bitsPublicKey
{
    NSData* pk = bitsPublicKey;
    if (pk == NULL) return NULL;

    int iterator = 0;

    iterator++; // TYPE - bit stream - mod + exp
    [self derEncodingGetSizeFrom:pk at:&amp;iterator]; // Total size

    iterator++; // TYPE - bit stream mod
    int mod_size = [self derEncodingGetSizeFrom:pk at:&amp;iterator];
    iterator += mod_size;

    iterator++; // TYPE - bit stream exp
    int exp_size = [self derEncodingGetSizeFrom:pk at:&amp;iterator];

    return [pk subdataWithRange:NSMakeRange(iterator, exp_size)];
}

- (NSData *)getPublicKeyMod:(NSData*) bitsPublicKey
{
    NSData* pk = bitsPublicKey;
    if (pk == NULL) return NULL;

    int iterator = 0;

    iterator++; // TYPE - bit stream - mod + exp
    [self derEncodingGetSizeFrom:pk at:&amp;iterator]; // Total size

    iterator++; // TYPE - bit stream mod
    int mod_size = [self derEncodingGetSizeFrom:pk at:&amp;iterator];

    return [pk subdataWithRange:NSMakeRange(iterator, mod_size)];
}

- (int)derEncodingGetSizeFrom:(NSData*)buf at:(int*)iterator
{
    const uint8_t* data = [buf bytes];
    int itr = *iterator;
    int num_bytes = 1;
    int ret = 0;

    if (data[itr] &gt; 0x80) {
        num_bytes = data[itr] - 0x80;
        itr++;
    }

    for (int i = 0 ; i &lt; num_bytes; i++) ret = (ret * 0x100) + data[itr + i];

    *iterator = itr + num_bytes;
    return ret;
}
}
</code></pre>

<p>I get Public exponent and modulo.</p>

<p>My problem became when I try to do the same with a Private Key in the same .p12 format. I use same functions before but the parameters aren't valid. I've been broken my brain on this problem. Could you give me some clue please?</p>

<p>Thanks in advance</p>
","","312","<objective-c><rsa><private-key><exponent>","1","","0","2014-04-03 14:05:10","","0","","","","","2014-04-03 14:05:10",""
"43051848","Add RSA key to Android project in a secure way","<p>In my Android project a need to cypher and decypher RSA values.
I have both private &amp; public RSA keys in *.pem files.
I have added it to the project but when I  try to create the release apk, lint says:</p>

<blockquote>
  <p>Error:Error: The raw/private_key.pem file seems to be a private key file. Please make sure not to embed this in your APK file. [PackagedPrivateKey]
  Error:Execution failed for task ':app:lintVitalRelease'.</p>
  
  <blockquote>
    <p>Lint found fatal errors while assembling a release target.   To proceed, either fix the issues identified by lint, or modify your
    build script as follows:   ...   android {
          lintOptions {
              checkReleaseBuilds false
              // Or, if you prefer, you can continue to check for errors in release builds,
              // but continue the build even when errors are found:
              abortOnError false
          }   }   ...</p>
  </blockquote>
</blockquote>

<p>I have tried to find the right way to add the keys to the project without success.</p>

<p>Any help on how to add the keys properly?
Thanks.</p>
","","310","<android><encryption><rsa><private-key><public-key>","0","","0","2017-03-27 16:34:48","","2","","","","","2017-03-27 16:34:48",""
"43889675","Decrypting binary file with asc private key in java","<p>Dears,</p>

<p>I have a <strong>binary</strong> file in .DAT format, and a private key in .asc format with the following format </p>

<pre><code>-----BEGIN PGP PRIVATE KEY BLOCK----- 
Version: GnuPG v1

//key goes here
-----END PGP PRIVATE KEY BLOCK-----
</code></pre>

<p>Tried using java security, and Bouncy Castle library with no hope.</p>

<p>If I used the following code to create a private key object</p>

<pre><code>byte[] encoded = Base64.decodeBase64(privateKeyPEM);
KeyFactory kf = KeyFactory.getInstance(""RSA"");
RSAPrivateKey privKey = (RSAPrivateKey) kf.generatePrivate(new PKCS8EncodedKeySpec(encoded));
</code></pre>

<p>I got <code>InvalidKeyFormat exception</code>.
If I didn't use <code>PKCS8EncodedKeySpec</code> , I got a decrypted file with nothing readable.</p>
","","307","<java><encryption><binary><rsa><private-key>","1","","0","2017-05-10 10:20:06","","1","","","","","2017-05-10 10:20:06",""
"25628787","Amazon EC2 - Install Private Key on new instance BEFORE user-data script runs","<p>I'm looking for a secure way to install a private key on new instances that can then been utilized by user details scripts. I am <strong>not</strong> looking to use this key for SSHing; instead, I'd like the user-data script to pull an encrypted file and decrypt it using the private key. </p>

<p>Is this possible? I'd like to avoid using something totally AWS-specific for portability, but am open to whatever options are out there.</p>
","","305","<amazon-web-services><amazon-ec2><private-key>","0","","0","2014-09-02 17:10:34","","9","","","","","2014-09-02 17:10:34",""
"30528445","Why is CAS using the server SSL private key?","<p>I'm looking into a jasig CAS installation on a WebLogic server.</p>

<p>In the past, WL was serving SSL for the CAS-Server. Now, the SSL layer is provided by load balancer. And we use a new server certificate (the former has expired)</p>

<p>So SSL is deactivated on WL.
But the identity configuration and the SSL configuration still remains for the alias ""casserver"" That identity configuration, shouldn't being used. Because SSL is deactivated.</p>

<p>But something is happening because WL says the opposite:</p>

<p>CAS: 2015-05-29 09:00:10,353 INFO [org.jasig.cas.CentralAuthenticationServiceImpl] - (Granted service ticket [ST-xxxyyyzzz-cas] for service [<a href=""https://myweb/root-context/j_spring_cas_security_check]"" rel=""nofollow"">https://myweb/root-context/j_spring_cas_security_check]</a> for user [john.doe])
(29-may-2015 09H00' CEST) (Alert) (Security) (BEA-090154) (Identity certificate has expired: [
... SerialNumber: the-former-certificate-serial-number</p>

<p>And I also find more references to the former keystore and the former SSL certificate alias:</p>

<p>CAS: 2015-05-27 14:00:33,611 INFO [org.jasig.cas.authentication.AuthenticationManagerImpl] - (AuthenticationHandler: org.jasig.cas.adaptors.x509.authenticat
ion.handler.support.X509CredentialsAuthenticationHandler successfully authenticated the user which provided the following credentials: org.jasig.cas.adaptor
s.x509.authentication.principal.X509CertificateCredentials@12341234)
(27-may-2015 14H00' CEST) (Notice) (Security) (BEA-090171) (Loading the identity certificate and private key stored under the alias <strong>casserver</strong> fr
om the JKS keystore file <strong>/.../old-identity-keystore.jks</strong>.)</p>

<p>Why is WL loading the keystore with each request?</p>

<p>How is it still working with an expired certificate?</p>

<p>Thanks in advance</p>
","<p>I removed the SSL alias.  There were no reason to use it, because SSL is disabled.</p>

<p>Now, there are warnings saying that there are no alias.  But the system works correctly (as expected)</p>

<p>I think that WL is trying to setup it's SSL certificate during the load of the SSL layer, every time I ask to create SSL conections (despite I'm going to use SSL as a client).  </p>
","305","<ssl-certificate><cas><weblogic-10.x><private-key>","0","0","1","2015-07-01 10:55:09","","2","","612837","","2015-05-29 11:39:06","2015-05-29 11:28:39",""
"42176564","Error with creating Private Key in Python 3 RSA","<p>I'm trying to create a random RSA Private key in Python but I'm getting a Error message and I don't know what to do.
The code I'm using now is from <a href=""https://stackoverflow.com/questions/42175763/error-while-creating-private-key-with-rsa-in-python/42175843#42175843"">this</a> Thread I created earlier, but I won't work.</p>

<p>Code:</p>

<pre><code>from Crypto import Random
from Crypto.PublicKey import RSA

def random_generator():
    return Random.new().read(32)

private_key = RSA.generate(1024, random_generator)
print(str(private_key))
</code></pre>

<p>Error Message:</p>

<pre><code>Traceback (most recent call last):
  File ""/home/simon/Python/Projects/FileServer/encrypt.py"", line 7, in &lt;module&gt;
    private_key = RSA.generate(1024, random_generator)
  File ""/usr/lib/python3/dist-packages/Crypto/PublicKey/RSA.py"", line 508, in generate
    obj = _RSA.generate_py(bits, rf, progress_func, e)    # TODO: Don't use legacy _RSA module
  File ""/usr/lib/python3/dist-packages/Crypto/PublicKey/_RSA.py"", line 50, in generate_py
    p = pubkey.getStrongPrime(bits&gt;&gt;1, obj.e, 1e-12, randfunc)
  File ""/usr/lib/python3/dist-packages/Crypto/Util/number.py"", line 265, in getStrongPrime
    randfunc)
TypeError: random_generator() takes 0 positional arguments but 1 was given
</code></pre>
","<p>From the <a href=""https://www.dlitz.net/software/pycrypto/api/current/Crypto.PublicKey.RSA-module.html"" rel=""nofollow noreferrer"">documentation</a>:</p>

<blockquote>
  <p><code>generate(bits, randfunc=None, progress_func=None, e=65537)</code></p>
  
  <p>Parameters:</p>
  
  <p>...</p>
  
  <ul>
  <li><code>randfunc</code> (callable) - Random number generation function; it should accept a single integer N and return a string of random data N bytes long. If not specified, a new one will be instantiated from Crypto.Random.</li>
  </ul>
</blockquote>

<p>Your <code>random_generator()</code> doesn't take any parameters. It is supposed to take one parameter - the number of byes to return. Also the implementation is bad - you're creating a new instance every time which could seriously weaken the randomness of the numbers it generates.</p>

<p>But since you're just using a <code>Crypto.Random</code> instance there's no need for you to specify this parameter at all - just leave it out.</p>

<pre><code>from Crypto.PublicKey import RSA

private_key = RSA.generate(1024)
print(str(private_key))
</code></pre>

<hr>

<p>If you <em>insist</em> on providing your own randfunc, pass it the bound <code>read</code> method of a <code>Crypto.Random</code> instance:</p>

<pre><code>from Crypto import Random
from Crypto.PublicKey import RSA

r = Random.new()

private_key = RSA.generate(1024, r.read)
print(str(private_key))
</code></pre>
","304","<python-3.x><encryption><rsa><private-key>","-2","1","1","2017-02-11 14:03:03","42176626","2","","-1","","2017-05-23 10:30:49","2017-02-11 13:45:01",""
"39061118","Acquia Dev Desktop won't let me push changes to server","<p>I've just edited some code in my Bartik theme and saved it locally. When I try to push my local code to the server using Acquia Dev Desktop I get a message that says: 'Bad Private Key File'</p>

<p>I have copied down the private key exactly as it appeared on my Acquia Cloud account in the credentials section, but the problem persists. </p>

<p>The desktop application gives me an option to generate my own private key, but this is different from the one that appears online on my Acquia Cloud account. In any case, generating my own private key results in 'SSH authentication failed'. </p>

<p>I would really appreciate any help!</p>
","<p><a href=""https://help.github.com/articles/generating-an-ssh-key/#platform-mac"" rel=""nofollow"">Github offers an excellent and straightforward guide</a> for generating public/private key pairs.  Most version control systems and cloud services that use SSH do this.  One you have the key, you just copy and paste it to the server and you're good to go.</p>
","302","<drupal><ssh><private-key><public-key><acquia>","1","0","2","2018-03-26 04:07:55","","3","","5729613","","2016-08-21 22:54:01","2016-08-21 05:32:04",""
"39061118","Acquia Dev Desktop won't let me push changes to server","<p>I've just edited some code in my Bartik theme and saved it locally. When I try to push my local code to the server using Acquia Dev Desktop I get a message that says: 'Bad Private Key File'</p>

<p>I have copied down the private key exactly as it appeared on my Acquia Cloud account in the credentials section, but the problem persists. </p>

<p>The desktop application gives me an option to generate my own private key, but this is different from the one that appears online on my Acquia Cloud account. In any case, generating my own private key results in 'SSH authentication failed'. </p>

<p>I would really appreciate any help!</p>
","<ol>
<li>Generate public ssh key and private ssh key</li>
<li>public ssh key is for acquia cloud</li>
<li>private ssh key is for local dev desktop</li>
</ol>
","302","<drupal><ssh><private-key><public-key><acquia>","1","0","2","2018-03-26 04:07:55","","3","","5729613","","2016-08-21 22:54:01","2016-08-21 05:32:04",""
"42153526","After computer restart, 'System.Security.Cryptography.CryptographicException' : Keyset does not exist","<p>I am using following code to sign the data:</p>

<pre><code>        RSACryptoServiceProvider csp;

        X509Store my = new X509Store(StoreName.My, StoreLocation.LocalMachine);

        my.Open(OpenFlags.ReadOnly);

        foreach (X509Certificate2 cert in my.Certificates)
        {
            if (cert.Subject.Contains(certSubject))
            {
                csp = (RSACryptoServiceProvider)cert.PrivateKey;
            }
        }
        csp.SignHash(hash, CryptoConfig.MapNameToOID(""SHA256""));
</code></pre>

<p>First time after installing the certificate to my local machine works fine but when I try to sign after the computer restarting it throws an exception. What could be the possible reason, please help.</p>
","<p>I had the same issue. IIS Express running in my account was able to access the private key of the certificate on the day I was importing it on the local machine but not after a restart. The way I was able to fix was by explicitly grant full rights to my account in the <strong>certlm</strong> console (even thou my account was already in the local administrators group which had full-rights on that private key).</p>
","301","<c#><x509certificate><private-key><system.security>","0","1","1","2017-03-07 13:44:09","","3","","3894138","","2017-02-10 09:44:58","2017-02-10 07:12:21",""
"52912510","sign a string by xml privateKey in node js","<p>I have an sh1 hashed string which I want to sign it by an xml private key in my node js code.how can I do it?I used crypto to do so but it does not support xml private key.so can any one please tell me what to do ?here is my code:</p>

<pre><code>   var sha1 = crypto.createHash('sha1');
   const crypto = require('crypto');

   const sign = crypto.createSign('RSA-SHA1');
   const TerminalCode = 123;
   const MerchantCode = 4566;
   const privateKey =""&lt;RSAKeyValue&gt;&lt;Modulus&gt;tew9OJzFRBF0UbAU5M3vF18UDWxCseQkWtQI7tTrQcJisT31oqSv0uvwx3zQf0oGj9VnxeNeytm+xFxVt1lq+oGP5icJdiFdPHl2P5lD+T4sEyKGsiuPqXXkpWG3oY1V2t4BHmnJTr4jPRYInSQi9RvOWDUtRlgFLEQxgV2flvc=&lt;/Modulus&gt;&lt;Exponent&gt;AQAB&lt;/Exponent&gt;&lt;P&gt;3ElB9JPqabnMPzr8K1Fi4qd8YxIdbJln2JMx54G0ISjMzhv29GW3g3jOpAAtKlR49HTnz5F4T65mWm3jRhK4NQ==&lt;/P&gt;&lt;Q&gt;02rAXLUMpPu/CByB2TamTkVDpRsDRteGZ2dBjtOB4D6YQir6hsuQpnhCR7vzz7p8IFf06flL/Ly7ZL1Bpo5v+w==&lt;/Q&gt;&lt;DP&gt;HYWX2D5GiRrEW6j9CJUkqnmFuwU/ekFo4GaBpqQETvlX0TuAMiq7mFwFXYdEhkrB1wkf0/qL5CncP7xAXDDADQ==&lt;/DP&gt;&lt;DQ&gt;WSN5V50+Z5F9Sf47AUp5dCbgDo0FJKlakd6HVaD38YRyzfMxDgRmSMoLqBMnCT6ndzuel8f0seshV6g0NfV4YQ==&lt;/DQ&gt;&lt;InverseQ&gt;g7bnQMwCsRSOtPCBYub7P4AHJgvv+kbc4Kacq0UlZk8f+uMSoPU14stoiNHeo3htW8rx/XySW72EuLG6ej6OWA==&lt;/InverseQ&gt;&lt;D&gt;nsISix0EaWpx//eRxDqSs+qdLTmU2nkl4L25LfNReomQZuyTN+RQK9kKvowFx49qOosZjG/ngU6UU/fgNakq2QkKw8D9w+cbwF7kyDpr6AkngfY0w+X3q5hZUEcCFKiA6P0nw55TvSoGvtQK+zAdVAjJGmHCZ4qIWzXLX1CcOUE=&lt;/D&gt;&lt;/RSAKeyValue&gt;""





    var string =`#${MerchantCode}#${TerminalCode}#123#$12344566#$12342326#http://kalno.ir/pasargad/payback#${1003}#$434536`
    sha1.update(string);
    sha1 = sha1.digest('hex');
    sign.write(toString(sha1));
// sign.end();
    privateKey = sign.sign(privateKey, 'base64')
</code></pre>

<p>but when I do so , crypto sign gives me an error containing that this xml private key is not correct.""Error: error:0906D06C:PEM routines:PEM_read_bio:no start line""</p>
","<p>Convert your XML key to PEM using <a href=""https://superdry.apphb.com/tools/online-rsa-key-converter"" rel=""nofollow noreferrer"">Online Converter</a> or use libraries like <a href=""https://www.npmjs.com/package/rsa-xml"" rel=""nofollow noreferrer"">rsa-xml</a> to convert it in Node.JS</p>

<pre><code>const RSAXML = require('rsa-xml');
const xmlKey = '&lt;RSAKeyValue&gt;...&lt;/RSAKeyValue&gt;';
const pemKey = new RSAXML().exportPemKey(xmlKey);

console.log(pemKey); // -----BEGIN RSA PRIVATE KEY----- ...
</code></pre>
","300","<node.js><private-key><cryptojs>","1","1","1","2018-10-21 07:53:18","52913197","1","","5053201","","2018-10-21 06:33:35","2018-10-21 05:58:45",""
"50527998","Connect to SFTP server using OpenSSH Private Key","<p>I am trying to connect to an SFTP server setup using <a href=""https://hostedftp.com/"" rel=""nofollow noreferrer"">https://hostedftp.com/</a>. Through the OS X terminal, I can connect to it using the command : <code>sftp -oHostKeyAlgorithms=+ssh-dss -i &lt;path_to_identity_file_or_private_key&gt; sftp_username@hostname</code></p>

<p>When I try to achieve the same above operation using golang packages <strong>crypto/ssh</strong> and <strong>sftp</strong>, I cannot find a suitable example anywhere to connect using a private key. At all places, a relevant example has been given to connect to sftp server using a password.</p>

<p>For reference, I have been trying to use almost the same code as on <a href=""https://github.com/pkg/sftp/blob/master/examples/buffered-read-benchmark/main.go"" rel=""nofollow noreferrer"">https://github.com/pkg/sftp/blob/master/examples/buffered-read-benchmark/main.go</a>, but no luck so far. I am unable to figure out on how to add private key to <strong>ssh.ClientConfig</strong> auth method.</p>

<p>Looking for some help with a code sample that connect to sftp server using openssh private key (perhaps its byte array) using golang sftp or crypto/ssh package.</p>
","","299","<go><sftp><private-key>","0","","0","2018-05-25 11:23:43","","2","","13860","","2018-05-25 11:23:43","2018-05-25 11:17:42","2018-05-25 12:17:28"
"48750107","RSA 512 bit implementation in android with NO PADDING","<p>My question is that on how to use RSA 512 bit in Android; I was able to generate the public and private keys by looking up on the internet but not sure if its with NO padding as I could not find any solution for it.The public key would be sent to the server also with the integer encrypted with the private key.
I am new to it so it would be great to have some help. Thanks!</p>

<p>genreateKeys(""RSA"",512)</p>

<p>The following code:</p>

<pre><code>    private static void generateKeys(String keyAlgorithm, int numBits) {

    try {
        // Get the public/private key pair
        KeyPairGenerator keyGen = KeyPairGenerator.getInstance(keyAlgorithm);
        keyGen.initialize(numBits);
        KeyPair keyPair = keyGen.genKeyPair();
        PrivateKey privateKey = keyPair.getPrivate();
        PublicKey publicKey = keyPair.getPublic();

        System.out.println(""\n"" + ""Generating key/value pair using "" + privateKey.getAlgorithm() + "" algorithm"");

        // Get the bytes of the public and private keys
        byte[] privateKeyBytes = privateKey.getEncoded();
        byte[] publicKeyBytes = publicKey.getEncoded();

        // Get the formats of the encoded bytes
        String formatPrivate = privateKey.getFormat(); // PKCS#8
        String formatPublic = publicKey.getFormat(); // X.509

        System.out.println(""Private Key : "" + HttpRequest.Base64.encode(String.valueOf(privateKeyBytes)));
        System.out.println(""Public Key : "" + HttpRequest.Base64.encode(String.valueOf(publicKeyBytes)));

        // The bytes can be converted back to public and private key objects
        KeyFactory keyFactory = KeyFactory.getInstance(keyAlgorithm);
        EncodedKeySpec privateKeySpec = new PKCS8EncodedKeySpec(privateKeyBytes);
        PrivateKey privateKey2 = keyFactory.generatePrivate(privateKeySpec);

        EncodedKeySpec publicKeySpec = new X509EncodedKeySpec(publicKeyBytes);
        PublicKey publicKey2 = keyFactory.generatePublic(publicKeySpec);

        // The original and new keys are the same
        System.out.println(""  Are both private keys equal? "" + privateKey.equals(privateKey2));
        System.out.println(""  Are both public keys equal? "" + publicKey.equals(publicKey2));
    } catch (InvalidKeySpecException specException) {
        System.out.println(""Exception"");
        System.out.println(""Invalid Key Spec Exception"");
    } catch (NoSuchAlgorithmException e) {
        System.out.println(""Exception"");
        System.out.println(""No such algorithm: "" + keyAlgorithm);
    }

}
</code></pre>

<p>It gives me the output of public and private keys but its not with NO PADDING also how can I use the private key to encrypt my integer value?</p>
","","298","<java><android><rsa><public-key-encryption><private-key>","0","","0","2018-12-28 14:33:30","","8","","","","","2018-02-12 15:39:35",""
"55261449","How to generate SSL certificate & public key for encryption?","<p>I am working with some XYZ API provider. </p>

<p>What they are asking is the following:</p>

<ul>
<li>Certificate with 4096 bits public key for encryption (.pem or .cer
format)</li>
<li>SSL certificate for sending callback response on call back URL.</li>
</ul>

<p>I generated the self-signed SSL certificate using OpenSSL &amp; shared with them along with the private key (I know we shouldn't). They asked me to share a valid public key &amp; SSL certificate. </p>

<p>I even generated a certificate &amp; private key on DigiCert, but couldn't figure out how to generate a public key for SSL Certificate.  </p>

<p>Can anyone kindly suggest how to generate Public key &amp; private key for the SSL Certificate? </p>

<p>Kindly also suggest if I can use Comodo or DigiCert to generate a public key for the SSL certificate?</p>
","<p>An SSL Certificate <strong>is</strong> a public key verified and signed by a <em>Certificate Authority</em>. You generate a public/private key pair, then from that generate a <a href=""https://en.wikipedia.org/wiki/Certificate_signing_request"" rel=""nofollow noreferrer"">Certificate Signing Request</a> (which <strong>includes</strong> the public key), which you send to the <em>CA</em>. It then signs that public key included in the <em>CSR</em> producing the <strong>certificate</strong> which is sends back to you. See also <a href=""https://en.wikipedia.org/wiki/Certificate_authority#Issuing_a_certificate"" rel=""nofollow noreferrer"">here</a>.</p>

<p>It sounds like you already have this though, so you'd need to clarify what you're trying to achieve. It sounds like it may be a client authentication / mutual authentication scenario? If so, it depends on what the service provider requires - certificates for client authentication may need to be signed either by a public authority that the server trusts, or by the server itself.</p>
","293","<ssl><ssl-certificate><public-key-encryption><private-key><public-key>","0","2","1","2019-03-21 21:52:34","55289811","2","","","","","2019-03-20 13:05:40",""
"43644710","JAVA - How to store and read an RSA private key from an sqlite db","<p>I store the keys as byte[] to the sqlite database.
When I want to get the private Key with:</p>

<pre><code>ResultSet rs  = pstmt.executeQuery();
                    while(rs.next()){                       
                        KeyFactory rsaKeyFac =  KeyFactory.getInstance(""RSA"");
                        PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(rs.getBytes(1));
                        RSAPrivateCrtKey privKey;
                        privKey = (RSAPrivateCrtKey) rsaKeyFac.generatePrivate(keySpec);
                        result = privKey;
                }
</code></pre>

<p>I only get : <br></p>

<pre><code>sun.security.rsa.RSAPrivateCrtKeyImpl@fffd1339
</code></pre>

<p><br>
My public key retrievement works! But with the private key and the certificate I don't get it.
Can anyone help?</p>
","","292","<java><database><sqlite><get><private-key>","0","","0","2017-04-26 21:20:02","","5","","","","","2017-04-26 21:20:02",""
"9685999","Regarding iphone distribution private key issue","<p>I want to upload my app to app store. My client has given his own apple id for uploading for his account. I tried to install the distribution certificate of my client's account on my Mac but it is not working for me. The private key is missing in that certificate.</p>

<p>What do I have to do for this to work?</p>
","<p>He will have the the key stored in the <strong>Keychain Access</strong> application in his mac.. </p>

<p>Tell him to export the key <strong>.p12</strong> format and send you..If you import that key and the certificate .. you will be able to upload the app</p>

<p>the Key Name will be the same as done in when you request a Certificate from a Certificate Authority..The name you entered there for the certificate is the key to be extracted.</p>
","291","<ios><app-store><distribution><private-key>","0","5","1","2012-03-13 16:28:00","","2","","456188","","2012-03-13 16:28:00","2012-03-13 14:26:04",""
"41836506","Setting private key in certificate hangs windows service","<p>I have application and I have to use a certificate which requires a pin from prompt window.</p>

<p>I have following code.</p>

<pre><code>SecureString password = GetPassword();
X509Certificate2 certificate = GetCertificate();

var cspParameters = new CspParameters(1,
                                     ""ProviderName"",
                                     ""KeyContainerName"",
                                     null,
                                     password);

certificate.PrivateKey = new RSACryptoServiceProvider(cspParameters);
</code></pre>

<p>Everything works fine in console application but when I run that code in windows service or console application started from task scheduler then application freezes on that line.</p>

<pre><code>certificate.PrivateKey = new RSACryptoServiceProvider(cspParameters);
</code></pre>

<p>No exceptions, no progress.</p>

<p>I'm running windows service with the same credentials as an application.</p>

<p>Windows 10 / Windows Server 2012</p>

<p>Do you have any ideas what is wrong?</p>
","<p>The problem is that PIN prompt appears in the service account's desktop which is not exposed to console user (even if both run under the same account). The service doesn't hang, it waits for PIN input and will never receive it.</p>
","291","<c#><windows-services><private-key><x509certificate2>","8","0","2","2017-06-05 19:08:04","44376007","2","","","","","2017-01-24 18:39:31",""
"41836506","Setting private key in certificate hangs windows service","<p>I have application and I have to use a certificate which requires a pin from prompt window.</p>

<p>I have following code.</p>

<pre><code>SecureString password = GetPassword();
X509Certificate2 certificate = GetCertificate();

var cspParameters = new CspParameters(1,
                                     ""ProviderName"",
                                     ""KeyContainerName"",
                                     null,
                                     password);

certificate.PrivateKey = new RSACryptoServiceProvider(cspParameters);
</code></pre>

<p>Everything works fine in console application but when I run that code in windows service or console application started from task scheduler then application freezes on that line.</p>

<pre><code>certificate.PrivateKey = new RSACryptoServiceProvider(cspParameters);
</code></pre>

<p>No exceptions, no progress.</p>

<p>I'm running windows service with the same credentials as an application.</p>

<p>Windows 10 / Windows Server 2012</p>

<p>Do you have any ideas what is wrong?</p>
","<p>Ok, after a break I have found solution.</p>

<p>I had to add impersonation around this line:</p>

<pre><code>certificate.PrivateKey = new RSACryptoServiceProvider(cspParameters);
</code></pre>

<p>I used the same credentials like in my service and set LogonType as Interactive.</p>
","291","<c#><windows-services><private-key><x509certificate2>","8","1","2","2017-06-05 19:08:04","44376007","2","","","","","2017-01-24 18:39:31",""
"54122006","How to securely reference a .json private key file from a Java app running on Google Cloud","<p>I'm working on an app that will run on the Google Cloud Platform, and it needs to authenticate to the Google Admin 'Directory' SDK. The recommended approach that everyone (including Google) seems to suggest, is to create a service account in the Google Cloud Platform, and use the private key credentials for the service account to authenticate within the app that's running on Google Cloud Platform. Here is Google's recommended approach:</p>

<p><a href=""https://developers.google.com/admin-sdk/directory/v1/guides/delegation"" rel=""nofollow noreferrer"">Perform G Suite Domain-Wide Delegation of Authority</a></p>

<p>To summarise the approach, for a Java app it requires the following:</p>

<ul>
<li>Upload the private key file to a file location available application (the private key file can be JSON instead of P12 as suggested in the above guide)</li>
<li>Programatically load the file in the application, and use its credentials to authenticate</li>
</ul>

<p>My question is this - if the file is directly uploaded to the src/main/resources folder for the application that runs on the Google Cloud Platform, is this is a significant security risk? How easy would it be for a hacker to access the file? If it's a risk, then what is a secure alternative to this approach?</p>
","<p>For this answer I will assume that you are running on Google Compute Engine. The same type of answer will apply to App Engine, Containers, Kubernetes and Cloud Functions.</p>

<blockquote>
  <p>My question is this - if the file is directly uploaded to the
  src/main/resources folder for the application that runs on the Google
  Cloud Platform, is this is a significant security risk?</p>
</blockquote>

<p>This is a security risk and is a very poor security practice. Numerous prominent companies have been breached with credentials stored in source code.</p>

<blockquote>
  <p>How easy would it be for a hacker to access the file?</p>
</blockquote>

<p>Unknown. There are many different types of breaches. If a hacker obtains shell access to your instance you are in serious trouble. If a hacker obtains root shell access, they can do almost anything they want.</p>

<blockquote>
  <p>If it's a risk, then what is a secure alternative to this approach?</p>
</blockquote>

<p><strong>Best practices for security regarding credentials: do not store credentials in your source code or on your computing resources.</strong></p>

<p>Normally you would access your credentials from Compute Engine Metadata server. These credentials are created by Google Cloud when your instance starts up. You can control these permissions in the Google Console under ""Cloud API access scopes"" OR via a service account that you specify for the VM.</p>

<p>However, with G-Suite, you need to create delegated credentials. I do not recommend mixing the credentials that are used by your VM with the credentials used for G-Suite. This means that you still need access to credentials in Json format (or P12 for legacy applications).</p>

<p>Since best security practices are to not store these credentials in source code or on the instance, you need to store them securely someplace else that you can access securely. One option is Google Cloud Storage. Assign a Cloud Storage read-only scope to your instance so that you can read the credentials Json file from Cloud Storage. Read the credentials using your SDK directly into memory and do not involve disk operations or utilities such as <code>gsutil</code>. I recommend that you create a seperate bucket for privileged files such as credentials.</p>

<p>Note that you are using several credentials. 1) the credentials stored in Google's metadata server. 2) the credentials that you download from Cloud Storage. 3) the delegated credentials that you create to access G-Suite and other Google applications.</p>

<p>The first set of credentials (Application Default Credentials - ADC) are used for normal cloud access including reading the second set of credentials from Cloud Storage. The third set are created in your software.</p>

<p>The credentials that you store on Cloud Storage do not need any privileges except domain wide delegation. The privileges are added via scopes when you create the G-Suite credentials (credentials #3).</p>

<p>Note: Do not store the email address used for delegated credentials in your source code. Store this in another Json file on Cloud Storage.</p>
","290","<java><security><google-cloud-platform><private-key>","0","2","1","2019-01-10 06:02:21","54122740","2","","3996167","","2019-01-10 05:08:29","2019-01-10 04:33:32",""
"56412273","Generate and read base64 private key to sign the JWT token from java","<p>1- Generating a Private Key, from the command line:</p>

<blockquote>
  <p>openssl genrsa -aes256 -out private.key 2048</p>
</blockquote>

<ol start=""2"">
<li><p>from <code>java</code>, read it:</p>

<pre><code>String privateKey = IOUtils.toString(TestJwtSecurityUtil.class.getResourceAsStream(""/private.key""));
privateKey = privateKey.replace(""-----BEGIN RSA PRIVATE KEY-----"", """");
privateKey = privateKey.replace(""-----END RSA PRIVATE KEY-----"", """");
privateKey = privateKey.replaceAll(""\\s+"","""");

byte[] encodedKey = DatatypeConverter.parseBase64Binary( privateKey );


PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(encodedKey);

KeyFactory kf = KeyFactory.getInstance(""RSA"");
PrivateKey pKey = kf.generatePrivate(keySpec); // fails
</code></pre></li>
</ol>

<p>Got exception:</p>

<blockquote>
  <p>Exception in thread ""main"" java.security.spec.InvalidKeySpecException:
  java.security.InvalidKeyException: IOException :
  DerInputStream.getLength(): lengthTag=58, too big.</p>
</blockquote>

<p>I tried to convert to base64:</p>

<pre><code>byte[] encodedKey = DatatypeConverter.parseBase64Binary( encodedString );
 PrivateKey pKey = kf.generatePrivate(keySpec); // fails
</code></pre>

<p>got:</p>

<pre><code>Exception in thread ""main"" java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: invalid key format
    at java.base/sun.security.rsa.RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:251)
</code></pre>

<p>Q: how to pass this? To make private key being read so in the end I could sing the JWT token:</p>

<pre><code>final JwtBuilder builder = Jwts.builder().setId(""id1"")
                ....
                .signWith(signatureAlgorithm, pKey);
</code></pre>
","<p>Yes, it is duplicate. But since I spent more than 1 h looking for it in SO site. Based on this <a href=""https://stackoverflow.com/questions/41934846/read-rsa-private-key-of-format-pkcs1-in-java"">reply</a>, and <a href=""https://www.bouncycastle.org/"" rel=""nofollow noreferrer"">bouncycastle</a>'s PEMParser. Thanks, @dave_thompson_085  </p>

<ol>
<li><p>To create a private-public keys:</p>

<ul>
<li>openssl genrsa -out private.key 4096</li>
<li>openssl rsa -pubout -in private.key -out public.key</li>
</ul></li>
<li><p>then from <code>java</code> </p></li>
</ol>

<p>--</p>

<pre><code>         final PrivateKey pKey = getPrivateKey();

         final SignatureAlgorithm signatureAlgorithm = SignatureAlgorithm.RS256; // private key to sign / public to confrim a sign
     final JwtBuilder builder = Jwts.builder().setId(""id1"")
                    .setIssuedAt(now)
                    .setSubject(subject)
                    .setIssuer(issuer)
                    .setAudience(""api"")
                    .addClaims(Map.of(
                            ""user_name"", ""test user"",
                            ""authorities"", List.of(""ROLE_USER""),
                            ""scope"", List.of(""read"", ""write""),
                            ""client_id"", ""test-client""
                            )
                    )                     .signWith(signatureAlgorithm, pKey);
</code></pre>

<hr>

<pre><code>String jwt = builder.compact();
</code></pre>

<p>where:</p>

<pre><code>private static PrivateKey getPrivateKey() throws Exception {

        val path = TestUtils.class.getResource(""/"").getPath();

        final PEMParser pemParser = new PEMParser(new FileReader(path + ""/private.key""));
        final JcaPEMKeyConverter converter = new JcaPEMKeyConverter().setProvider(""BC"");
        final PEMKeyPair object = (PEMKeyPair) pemParser.readObject();
        final KeyPair kp = converter.getKeyPair(object);
        final PrivateKey pKey = kp.getPrivate();

        return pKey;
    }
</code></pre>

<p>Then to check, paste: generated <code>jwt</code> to <a href=""https://jwt.io/"" rel=""nofollow noreferrer"">https://jwt.io/</a> (or any other tool) to see/check the content.</p>

<p>put a public.key content there to check the signature. To see that all is green.</p>
","290","<java><jwt><private-key>","1","1","1","2019-06-02 17:35:02","","3","","","","","2019-06-02 04:51:53",""
"39587504","JWT Public Keys and Private Keys Invalid","<p>I am trying to use JWT.io (<a href=""https://jwt.io/#libraries"" rel=""nofollow"">https://jwt.io/#libraries</a>) to create a JWT token.  However, when I add either my public key or private key for the signature portion, it keeps saying it is invalid.</p>

<p>I created the private and public key with the following respectively:</p>

<p>Generating a Private Key
 openssl genrsa -aes256 -out private_key.em 2048</p>

<p>Generating a Public Key
 openssl rsa -pubout -in private_key.pem -out public_key.em</p>

<p>Then all I do is copy-paste them into jwt.io.</p>

<p>All my other data is fine, it is just the public key and private key.  </p>
","<p>JWT.io needs to use your private key to generated the signature for the JWT. However, your private key is encrypted with a password that JWT.io does not have because you used the <code>-aes256</code> flag with the <code>openssl genrsa</code> command. You should generate an unencrypted private key with the following command:</p>

<pre><code>openssl genrsa -out private_key.em 2048
</code></pre>

<p>and paste that in to the JWT.io private key entry alongside of the public key.</p>
","288","<oauth-2.0><jwt><public-key-encryption><private-key><public-key>","1","0","1","2016-09-20 07:43:39","","0","","","","","2016-09-20 06:53:31",""
"25088786","track every system and external library call on an OS X app","<p><strong>I want to examine every system and external library call of a given application, together with the data structures that are passed around.</strong>  (The application in question is some kind of packaged software based on OpenSSL and around OS X keychain, and I want to see if I could get a hold of the private key, which is marked as <a href=""https://security.stackexchange.com/questions/64323/export-non-extractable-private-key-from-keychain-on-os-x"">non-extractable in Keychain Access</a>.)</p>

<p>How could I do that on OS X?</p>

<p>I think DTrace comes to mind, but I couldn't find any sample tricks to do the above.</p>
","<p>To examine every system call and external library call, the DTrace script is like this:  </p>

<pre><code>#!/usr/sbin/dtrace -s

syscall:::entry
/ pid == $1 /
{
}

pid$1:lib*::entry
{
}
</code></pre>

<p>The usage is like: ./check.d pid (The process ID). For the input parameters, you can use arg0...argN (uint64_t type) to refer them.  </p>

<p>But I think you should find the related syscall and library functions firstly, else the output is very huge and hard to debug.  </p>

<p>Hope this can help!</p>
","288","<macos><keychain><private-key><disassembly><dtrace>","0","1","1","2014-08-04 10:00:57","","2","","-1","","2017-03-17 10:45:55","2014-08-01 21:14:44",""
"39446999","public private key generation in php and storing them in variable","<p>I am quite new to php and public private key..</p>

<p>Can somebody guide me .. how to generate public private key in php and store hem in variables. </p>

<p>Thanks</p>

<p>Update my code lloks like this.</p>

<pre><code>   $privateKey = openssl_pkey_new(array('private_key_bits' =&gt; 2048));
   $details = openssl_pkey_get_public($privateKey);
   $publicKey = $details['key'];

   echo $publicKey;
</code></pre>
","<p>You can use <code>openssl_pkey_new()</code> of php to generate private key which is documented in detail <a href=""http://php.net/manual/en/function.openssl-pkey-new.php"" rel=""nofollow noreferrer"">here</a>
For public key get the details using <code>$all_values = openssl_pkey_get_details($privateKey);</code> function and get public key out of it like <code>$all_values['key'];</code></p>

<p><strong>Update:</strong></p>

<p>or there is also another post on stackoverflow stating the same thing:<a href=""https://stackoverflow.com/questions/7414044/can-php-openssl-generate-private-public-key-certificate-pairs"">here</a></p>
","287","<php><public-key-encryption><private-key>","1","1","1","2016-09-12 09:53:14","39447095","1","","6777962","","2016-09-12 09:53:14","2016-09-12 09:18:21",""
"25044418","Can DTrace find non-extractable private key from Keychain on OS X?","<p>I'm trying to get a hold of a private key that <a href=""https://security.stackexchange.com/questions/64323/export-non-extractable-private-key-from-keychain-on-os-x"">doesn't seem to be exportable from <strong>Keychain Access.app</strong></a> directly on OS X, probably because it was imported with the option to make it non-extractable.</p>

<p>What I think might work is trying to intercept the said private key when it's used by the VPN software, the web-browser or some system software for the actual PKI authentication; is there a way to do this, perhaps with DTrace?</p>
","","287","<macos><keychain><private-key><pki><dtrace>","2","","0","2014-08-08 20:52:23","","3","","-1","","2017-03-17 10:45:55","2014-07-30 18:36:31",""
"31916083","Reproduce openssl_private_encrypt() with OpenSSL","<p>Because I'm trying to convert a piece of PHP code to Python I'm trying to find out what the PHP function <a href=""http://php.net/manual/en/function.openssl-private-encrypt.php"" rel=""nofollow""><code>openssl_private_encrypt()</code></a> does exactly.</p>

<p>I'd like to be able to reproduce what <a href=""http://php.net/manual/en/function.openssl-private-encrypt.php"" rel=""nofollow""><code>openssl_private_encrypt()</code></a> generates with <a href=""https://www.openssl.org/"" rel=""nofollow""><code>OpenSSL</code></a> directly, but for some reason I'm not getting the same results. What is <a href=""http://php.net/manual/en/function.openssl-private-encrypt.php"" rel=""nofollow""><code>openssl_private_encrypt()</code></a> doing with OpenSSL exactly?</p>

<p>OpenSSL's <code>RSA_private_encrypt()</code> is being used by PHP's <code>openssl_private_encrypt()</code> <a href=""https://github.com/php/php-src/blob/03a670eaaa2b89f7b98b62908502ac5736dac2eb/ext/openssl/openssl.c#L4490"" rel=""nofollow"">according to the PHP source code</a>. The same OpenSSL method is being used by <code>openssl rsautl -sign</code> <a href=""http://grokbase.com/t/gg/golang-nuts/13artf0ete/go-nuts-crypto-rsa-doesnt-seem-to-have-openssls-rsa-private-encrypt#201310263opcaw3jpn5ksd7n3pd5ijvrm4"" rel=""nofollow"">according to a different source</a>. The same (default) padding <code>-pkcs</code> is also being used. Yet I can't seem to reproduce the same encryption result.</p>

<p>The following PHP code:
    

<pre><code>$key = ""-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA1tV0KlPGaeOnhlcYy3D5dr4Yd++Jz0puBBs8GIa4ammLqaoY
7Xo4J/jp9El3eK2GjwR82uXMNrICZKT0gU4k7LfXD5GUz5TqOfMIWSIM1mKPb67L
Xg5qfJ/8/cLY1RguzImd+ONQJ+MOtjtxE5BXq2luNL9k2Qw1aEhQR22xyzPPBwD9
0nCLhiq56lVXrG10+W9wMdNwtxTLc4hf3OF8IwEActV+Yw9xU8FuJnuAgovaFRQ2
/UC5OhPZckxhGoYJ7J5GSFBTNTuOuwyR/mGWXxgMNS/aQVOwK/+m7JWlwgOT5BdU
qL4ctk7rzRCWLdPhu0UmOxfHJMzjnqoXIWtL7wIDAQABAoIBAQDR2ryYxDDjKuBw
GBA+WmM1HMgmEDVb6ebB2CDCDIeEWwl0eJXVFDhaw4k1ebZciZURi16zLRpoq0Yv
LfsxfDYRjhtkN99XTq3mYYLcHqjPmoNmoyZBAHAAwP+OmpDYx8CfSCaqAtI/xEqQ
tEvmwm8BIAHpQLSwWH6rGUhiHcM5K953f5x10xuWSOH6xlAzdkLbjgN70aOQEbxw
703mKznw25UPspt89RFQPQDtgUnu76TzUp7jytxiyomj3h0CixTIAZd0OtF4g5kn
clNLCYSTVt2PBvlH/tDgVQ31JwLlzfrkHblTHFB4YNz49rempMGou/X+mHB4y5S1
CiN1LR4hAoGBAOxMywVgVmtPyLCFEetf9N1mWjiPpHsgmm+DxZPleQ8+G3G7Uc94
MO2ZUyEXayjK5L4ZwP/RoZGwo0j9VU1tzpRnjtpZYuRQNpqc3+VSzj3yasgaUh9H
syPyMCHn3H/9Qc4wD4hvRNtTTtESAaA0NM6zBGPOOCbYPelsbrwhcsoZAoGBAOi+
hXPKDhdw+whZZssOlSaZW42qfyGZwHkugRmSGplMHA3yrNGnRyn/CtQNA/r5fe/1
T/3XQy35+OyY7IxduPUUXMk4RAi1w61hr4PFs3MuewVEXUTus6q5gs/gZs1wK1DZ
BIFCHNfUYx6Bnq2O2Ytwvr7AiUlDOZRPddM1dRdHAoGAWiLk4pUgAek6LZNlBXrh
5b5QNfkdDdae8mC6cjL7XcQcJeMFTvWS/F8bJalQOAxE+vrJ8wtc7T0K3CG+cz2q
qlNiW4nzPhIW8h1bDpfqkhixgMkBgGsSO2j70UMnii7p9iPBGRMQmfUKQJf0xM6F
Qj9pMkUMiEy+ORcimmLL7akCgYB2EkkjT4rMi41eU/RY6OHzffM7MBZkllpVX6kw
rrT9teW5kbXoegMZJAB7SMsPJEimVf2pme3Dwj9sz7uZDebJtfXIQtoIzSUirR7c
K4x4z0iriF4EnU/aOVhKWt3sNI5U6nNlm4OEXoOWM02rYH+uRJkPrh83Ynowagst
Bb6L+wKBgQCAQpA7RytBXig/wF95qYtLnDjRAV+CoNldfAMVjB1+xvXgGWsq8jDW
bD9q+bFcGg7KQf7Lp/0VUkgB1p+bWVp+kq2XNfXgmrgzfzFsra95xPb7YJEFFoy1
o/fsQwasOd+ijJsMOWzrAG3eTIz3H3AsBJTed/tiUe5dNvVzmuj5ZA==
-----END RSA PRIVATE KEY-----"";

openssl_private_encrypt(""narf"", $signature, $key);
echo bin2hex($signature);
</code></pre>

<p>Gives me:</p>

<pre><code>b8a0b9ed54c4e6e7fb4da1b4180dcf8d56baf7cf4309b99c26f44079f5da
0b1566f8a6bb83d83b7a87078eb34e05b68e91e7a8279241bee16a1d003e
c3a99ebcbc1096b01f9bbe11ab1cce1ffc26ac38d8739efbf077c55ee80b
9afefb737ab816ef5b56e9120861a0fd53f36fb23bda6c545581ea220857
f055408ff7b8a2b4450a77928a9600bb6d053a22fb32d20834240953db3f
e0a31d453a9a2d956d0e7e56ca7849fde44e88c07363779e37ab53ecc7da
e5a91cef2a79232a782b56365937f6d48a351cf33036d8a15a859a47d781
09ac57e6261f8c73f44eb45e776d88182713b92aed359ec2953c01fdcf51
e59fbc4b1835cf4809d59ff95d869be9
</code></pre>

<p>While command line:</p>

<pre><code>openssl rsautl -sign -inkey test_rsa -out data_out &lt;&lt;&lt; ""narf""
xxd -p data_out
</code></pre>

<p>Where <code>test_rsa</code> is the same key as in the PHP code. I get:</p>

<pre><code>bc9d5dc772385965a7889a3e387b6398f3e58811aa0aee4b45a1576c08c2
7cde7e8d3e4b27d7fc350018b6c36f055c047ef9cd9aa8831a315fe5a350
ec271aaafa59f9dd9dda5b1ddf826e0f134785d9753eaabc866b0c716ce2
b7ac71a4ee79a3827cfc73c2169bff8ee7173172d8af8c9630e91d63c430
d308e15a1fb85a7b6fe257836e018102b8e55825c6a1a2413232b9a025a3
ca38e451d49cb04ad8a9be8452f213220d62711417c1e33adcededf9c172
2e87007e3fe25fba093774adfef3d3e72f4b3fa578a5a99721a002e69158
7e48e56ff5477162630739f74a385bb9e65da44821a278f6792e52c0edc8
356393e85b4692f33cd845d3a02760d4
</code></pre>

<p>Why aren't the results the same?</p>
","<p>The PKCS1 padding uses some random bytes, so the encrypted output is different every time.</p>

<p>Both the PHP and the openssl outputs return the input string 'narf' when run through <code>xxd -r -p|openssl rsautl -verify -inkey test_rsa</code>.</p>
","287","<php><encryption><openssl><private-key>","0","0","1","2018-08-23 09:08:39","","6","","143224","","2015-08-10 12:49:33","2015-08-10 09:30:14",""
"23536551","Secure storage of private key","<p>We want to store our passwords for FTP, websites, databases, etc. You can compare our software to keypass but we wanted to do our own solution.
The passwords will be encrypted and stored in a database. We can't use checksums because we need to show the passwords in plaintext.</p>

<p>The problem is that we couldn't find a good solution to store the private key. If it's written in the code, you can get it quite easily. If it's hidden in a dll, you can't hide it effectively, because the machine has to use it. All users of our software have full access to the source code, the database with the encripted passwords and are admins on their PCs, so they could read the code when it's used.</p>

<p>We thought about storing the private keys in a seperate database which is accessed with another password but the key will be used anyway. </p>

<p>So, we're not getting anywhere. We are aware that there is no 100% save solution for this but there got to be an almost safe one.</p>
","<p>First i would advise against writing your own solution, there are so many ways to do it wrong, and you need to invest a lot of time to know about all important points.</p>

<p>You don't need to store a key anywhere, just use the key to encrypt the data then forget the key. For decrypting you use the key as entered, if the key is correct you get back the data, otherwise you get back scrambled content.</p>

<p>Because users do not like to type strong keys and prefere passwords, you should use a key-derivation function like BCrypt or PBKDF2 (Password-Based-Key-Derivation-Function-2), which can translate a password to a key.</p>
","285","<encryption><passwords><private-key>","-1","0","1","2014-05-08 11:22:49","23540356","4","","","","","2014-05-08 08:27:20","2014-05-20 19:08:52"
"56188794",".pem file format in wireshark","<p>I've spent the whole day trying to decrypt some SSL packets on Wireshark using my .pem certificate but in vain.</p>

<p>I got the certificate using mitmproxy.</p>

<p>The header and footer of my .pme certificate are the following:</p>

<pre><code>-----BEGIN CERTIFICATE-----

-----END CERTIFICATE-----

</code></pre>

<p>When I import the certificate on Wireshark (<strong>Edit > preferences > protocols > ssl > Edit</strong>) so I can decrypt SSL packets I get the following error:</p>

<blockquote>
  <p>Can't load private key from /home/user/Téléchargements/mitmproxy-ca.pem: can't import pem data: The requested data were not available.</p>
</blockquote>

<p>Many resources like <a href=""https://stackoverflow.com/questions/18460035/unable-to-load-private-key-pem-routinespem-read-biono-start-linepem-lib-c6/42901864"">generate a root certificat</a> say that I need to have the following header and footer so that Wireshark manages to parse the private key:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----

-----END RSA PRIVATE KEY-----
</code></pre>

<p>So did I; I've modified my header and footer, but Wireshark is still incapable of loading the private key.</p>

<p>Any ideas on how I can make this work?</p>
","<p>Changing the header and footer doesn't change the contents.</p>

<p>If you started off with the certificate (which only contains the public key) then changing the header and footer to <code>BEGIN/END RSA PRIVATE KEY</code> doesn't change the file to a private key.</p>

<p>You need to get hold of the original private key file.</p>

<p>Also, if you stop and think about it, a certificate is <em>public</em> information.  If all that were needed to decrypt a TLS/SSL connection was a certificate then all the secure communications in the world would be compromised.</p>
","285","<openssl><wireshark><private-key><pem>","0","2","1","2019-05-17 14:54:34","56188934","0","","","","","2019-05-17 14:46:10",""
"52717076","IllegalArgumentException: Only private key data is currently supported","<p>I get this error by this method:</p>

<pre><code>@Bean
public JwtAccessTokenConverter accessTokenConverter() {

    JwtAccessTokenConverter converter = new JwtAccessTokenConverter();
    Resource resource = new ClassPathResource(""publickey.txt"");
    String publicKey = null;
    try {
        publicKey = IOUtils.toString(resource.getInputStream());
    } catch (final IOException e) {
        throw new RuntimeException(e);
    }
    converter.setSigningKey(publicKey);
    converter.setVerifierKey(publicKey);
    return converter;
}
</code></pre>

<p>Anyone who has a solution for this error?</p>
","","284","<java><spring-boot><encryption><oauth-2.0><private-key>","1","","0","2018-10-09 08:57:53","","4","","","","","2018-10-09 08:57:53",""
"22839874","How should I manage iOS certificates and keys with contract developers?","<p>I have an iPhone app that was built with by a contract developer (Dev 1). Dev 1 gave me copies of all the certificates and keys that were used to sign and publish the app:</p>

<p><img src=""https://i.stack.imgur.com/bfFav.png"" alt=""certificates for app""></p>

<p>Dev 1 is no longer working on this project and I've moved on to another developer (Dev 2).</p>

<p>My questions are:</p>

<ol>
<li>Is there any security risk with Dev 1 still having copies of all these certificates/keys? If I revoke his access to the company Apple Developer Program account can he do anything with them?</li>
<li>Which certificates/keys are needed by Dev 2 to be able to sign and publish an update to the app?</li>
<li>Obviously in a best-case situation Dev 1 would have kept developing the app indefinitely. But in the case where there are Devs 1, 2, 3 etc (successively working on the app), what is considered the best practice for the safe handling of keys and certificates for publishing? Especially if the company itself doesn't have the expertise (or a Mac!) to publish the app to the App Store in-house?</li>
</ol>
","<p>If you contract out to a developer, add him to your own developer account. This way you keep control of certificates and keys.</p>
","284","<ios><app-store><certificate><code-signing><private-key>","2","1","1","2014-04-16 16:25:56","22842864","3","","321731","","2014-04-16 16:25:56","2014-04-03 13:52:20",""
"39457836","SSLv3 mutual authentication using libcurl and smart card","<p>I need some help to establish a communication channel to consume a webservice using SSLv3 with mutual authentication, libcurl and a smart card, which will store the client certificate, the key pair and will be responsible for signatures, encryptions, etc.</p>

<p>For testing purposes, without using the smart card, the following brief code runs smoothly:</p>

<pre><code>....
(SOAP message configurations)
....

curl_easy_setopt (curl, CURLOPT_USE_SSL, CURLUSESSL_ALL);
curl_easy_setopt (curl, CURLOPT_SSLVERSION, 3);
curl_easy_setopt (curl, CURLOPT_SSL_VERIFYPEER, 1);

curl_easy_setopt (curl, CURLOPT_SSL_VERIFYHOST, 2);
curl_easy_setopt (curl, CURLOPT_SSLCERT, ""clientCertificateFile"");
curl_easy_setopt (curl, CURLOPT_KEYPASSWD, ""testPrivateKeyPass"");
curl_easy_setopt (curl, CURLOPT_SSLKEY, ""testPrivateKeyFile"");
curl_easy_setopt (curl, CURLOPT_CAINFO, ""CAcertificateFile"");
curl_easy_setopt (curl, CURLOPT_URL, ""URLtoWebService"");

curl_easy_perform (curl);
</code></pre>

<p>After running this code, I can establish communication using SSLv3 and get the expected response from the webservice. However, I need to establish this secure channel using the smart card. I have free access to the following information:</p>

<ul>
<li>""clientCertificateFile"" - stored on the smart card, in PEM format. It can be read through access function.</li>
<li>""CAcertificateFile"" - stored on disk, in PEM format. It can be read through access function.</li>
<li>""URLtoWebService"" - stored in the application.</li>
</ul>

<p>""testPrivateKeyFile"" and ""testPrivateKeyPass"" are temporary files used only for testing and should be replaced by the smart card.</p>

<p>My doubt is: How to use the smart card to replace the private key and password in the libcurl setup process?</p>

<p>The smart card does not allow access to private key, only to the public key, as expected. I can send to the smart card data to be signed or encrypted, using the private key, and get the resulting buffer.</p>

<p>Is there any way to redirect part of the SSLv3 connection handshake to use my smart card? Some setting in lib ssl, or libcurl?</p>

<p>Thanks for listening!</p>
","","283","<libcurl><smartcard><private-key><handshake><sslv3>","1","","0","2016-09-12 19:55:14","","0","1","","","","2016-09-12 19:55:14",""
"15279989","How to setup private/public keys and certificates for HTTPS server?","<p>I working to develop small HTTPS server that will be included in my android application. And the client will be browser. User can browse to the contain that I have on my HTTPS server. Can someone tell me what kind of setup do I need as far as the certificate and private/public keys are concerned. I am planning to use openssl to create my self-signed certificate. </p>

<p>FYI, I have initial setup done. And since my certificate is self-signed, browser displays warning to accept it on your own risk. So I believe server authentication is working. What do I need for server to authenticate the client ?</p>

<p>Thanks</p>
","<p>The problem with hosting an HTTPS webserver on an android device is that the certificates are validated using a domain name. Without a domain name the client browser will display an error unless the server certificate is installed and trusted locally. </p>

<p>The two options are:</p>

<ol>
<li>Register a domain name, use dynamic dns, and then request an ssl/tls certificate based on that name.</li>
<li><a href=""https://stackoverflow.com/questions/12957731/installing-self-signed-certificate-programmatically"">Installing self-signed certificate programmatically</a></li>
</ol>

<p>There is an Android library that supports https: <a href=""http://tjws.sourceforge.net/"" rel=""nofollow noreferrer"">http://tjws.sourceforge.net/</a></p>
","283","<ssl><https><openssl><ssl-certificate><private-key>","0","0","1","2013-03-07 19:51:18","","0","","","","","2013-03-07 19:26:23",""
"29038729","Why doesn't `OpenSSL::Pkey::RSA.new` prompt for a missing password in JRuby?","<p>I'm trying to figure out if there's a way to make JRuby prompt for a missing password (as MRI Ruby does)
when <code>OpenSSL::PKey::RSA.new</code> is called without a password.</p>

<p>For example, given this script:</p>

<pre><code># example.rb
require 'openssl'

def test pemkey_text, pemkey_pass
  puts ""Decrypting key using password #{pemkey_pass.inspect}""
  begin
    key = OpenSSL::PKey::RSA.new pemkey_text, pemkey_pass
    puts ""success""
  rescue OpenSSL::PKey::RSAError =&gt; e
    puts %(failure: #{e.message}\n\t#{e.backtrace.join(""\n\t"")})
  end
end

pemkey_text = DATA.read
pemkey_pass = ""correct horse battery staple""

test pemkey_text, pemkey_pass
test pemkey_text, nil

__END__
-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,40D5A4CB36A82BF11E864AB17F4796BF

OfBi5HqB22AhV9pEtyf2/LIGt+80Dd53po8i+MXa2rBTSzHVDIqtECDjXogJjfYi
osuCQTTDddYtXL00LBYKxO94mERmfpYg94oiccBQRbSCkvYmxoY5Tw9ExllPcORR
M0BqvpVlGBZeHDSqrsHXM1ApREx8Iz9IaR3ZR0cX5DXHWlo3qEumKiafAcd5PdRJ
o7fFY6tt4zCzNZ63yK9lt6/M3KNeY9stPOwoHm3R548HQwIz+m6M5CVwy40XejEM
5O2LS5AUoib0GxFHOQJBDGf9wcq35ivyz4bhDzRYPBaoA6/SCACiW8e4jLkqhw4B
ye1f3ESBmpFEPRTwBVA+vnvYkfVLf0MlGWNY3J3zxJKC9TJUT3tkNY41gndh6761
i41ObaTIV+DlL4uNB7UDkS+8PjTQ+ndAbu3277yI+UCu8RbebpnWpmTDviTigH4z
zZSCrW1A0OLWwFr+sfKPo8QSkcA+H4fMX3IER7tl77I62idRO+jbZzauhj8lyiHO
LJt3AIOEjQ9YZm0GSLbWbZvu2fN9WP5BVrTcrKXAhjTTdQoNWgwVKVSbs6v0umvM
fOIUZ4I1VPBpdfd6Q0XL4LtvNf/nUh+o92Udmuguj/mOwrlh1Aujkfjy0U/jBbIw
ieXUC3CvWKkD9AzXwln7FbsFq6HdFZ6QUFc63WxzoEY6G6R0dK8U1zEy+cNbtlgD
IeXmldJ+hdbP32BOnBfKYAEWvCTJXjixvM25B5v4S5HqUW5CzATszMD+TvNuOpt0
Unca2Dl25FJnhAVE0TScfhMXLdaQv3cP1PRa4ylEL8dg3L8HsdYD6hgAlrHFRnKF
-----END RSA PRIVATE KEY-----
</code></pre>

<p>If I run it with MRI Ruby, it prompts for a password during the second <code>test</code>:</p>

<pre><code>% rvm use ruby-2.1
Using /usr/local/rvm/gems/ruby-2.1.5
% ruby example.rb
Decrypting key using password ""correct horse battery staple""
success
Decrypting key using password nil
Enter PEM pass phrase:
success
</code></pre>

<p>However, if I run it with JRuby, the second <code>test</code> raises an error instead
of prompting the user for a password:</p>

<pre><code>% rvm use jruby
Using /usr/local/rvm/gems/jruby-1.7.16.1
% ruby example.rb
Decrypting key using password ""correct horse battery staple""
success
Decrypting key using password nil
failure: Neither PUB key nor PRIV key:
        org/jruby/ext/openssl/PKeyRSA.java:281:in `initialize'
        example.rb:6:in `test'
        example.rb:17:in `(root)'
</code></pre>

<p>I'm wondering if this is because some combination of my install of java/openssl/jruby/jruby_openssl, but none
of the various permutations of alternate installs have succeeded, so I'm beginning to wonder
if there's a way to make this work at all.</p>

<p>And if you want to know why I don't just prompt for the password myself, it's because I'm trying
to use <code>rubygems</code> <code>gem</code> command, which <a href=""https://github.com/ruby/ruby/blob/05c29680e515c000552008f725747261ffa6008d/lib/rubygems/request.rb#L56"" rel=""nofollow"">doesn't include a way to pass it the private key password currently</a>.</p>
","","282","<ruby><openssl><rubygems><jruby><private-key>","0","","0","2015-03-13 17:52:33","","6","","9859","","2015-03-13 17:52:33","2015-03-13 17:46:17",""
"50877671","Is it safe to put the reCaptcha private key in html page?","<p>Everyone can see my HTML code and accordingly my  reCaptcha private key. Is it a safe thing?</p>
","<p>Simple answer: No.</p>

<p>As you said everything is public on your page and even with a lot of obfuscation it is always possible to retrieve it.</p>
","281","<html><recaptcha><private-key>","-3","0","2","2018-06-15 14:37:50","50877754","2","","","","","2018-06-15 14:32:22",""
"50877671","Is it safe to put the reCaptcha private key in html page?","<p>Everyone can see my HTML code and accordingly my  reCaptcha private key. Is it a safe thing?</p>
","<p>From the reCAPTCHA docs: </p>

<blockquote>
  <p>The secret key authorizes communication between your application
  backend and the reCAPTCHA server to verify the user's response. The
  secret key needs to be kept safe for security purposes.</p>
  
  <p><a href=""https://developers.google.com/recaptcha/intro"" rel=""nofollow noreferrer"">https://developers.google.com/recaptcha/intro</a></p>
</blockquote>
","281","<html><recaptcha><private-key>","-3","0","2","2018-06-15 14:37:50","50877754","2","","","","","2018-06-15 14:32:22",""
"44810996","Is storing a private key possible to be secure?","<p>This question is about a project of mine. I have a server-side application running on my Raspberry Pi, while the client-side application is supposed to be distributed on all my other devices. The following exzerpt is showing the code of the client-side.</p>

<p>I've been digging the Internet and what I have gathered is that in the end there no 100% safe way to store a private key. However, it is considered good practice to safe all keys in a KeyStore. The following is my solution to it, but my problem is: <strong>the KeyStore-file</strong>, <code>client.jks</code>, <strong>lies inside the JAR, together with the hardcoded password</strong>. <code>client.jks</code> contains the server-side's public key and the client-side's private key.</p>

<pre><code>        KeyStore keyStore = KeyStore.getInstance(""JKS"");
        keyStore.load(new FileInputStream(KEYSTORE), PASSWORD.toCharArray());

        KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(""SunX509"");
        keyManagerFactory.init(keyStore, PASSWORD.toCharArray());

        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(""SunX509"");
        trustManagerFactory.init(keyStore);

        SSLContext sslContext = SSLContext.getInstance(""TLS"");
        sslContext.init(keyManagerFactory.getKeyManagers(), trustManagerFactory.getTrustManagers(), new SecureRandom());

        SSLSocket connection = (SSLSocket) sslContext.getSocketFactory().createSocket(""localhost"", 6789);
        System.out.println(""Connection successful!"");
</code></pre>

<p>The Strings <code>KEYSTORE</code> and <code>PASSWORD</code> contain the KeyStore-file and the password, both hardcoded.
Is this really the best practice or am I missing something? Is the new <code>SecureRandom</code> object created for every connection enough to make the connection safe?</p>

<p>Best regards and thank you for your answers!</p>
","","280","<java><ssl><public-key-encryption><private-key><jks>","0","","0","2017-06-28 19:27:42","","2","2","","","","2017-06-28 19:27:42",""
"8862912","Deprotected .p12 private key file","<p>I use apn node.js module to send Apple Push Notification but it does not work. </p>

<p>In the configuration, I use my key and certificate in .pem format but the key is protected. 
I have created this key.pem file from key.p12 file.<br>
I'd like to deprotect the key so I do not have to enter passphrase.<br>
I did not find how to do this, any idea ?</p>
","<p>I figured it out.<br>
Once the key is in .pem file, I just needed to issue the following command:</p>

<pre><code>openssl rsa -out deprotected_key.pem -in key.pem
</code></pre>
","280","<security><push-notification><apple-push-notifications><private-key><pem>","0","1","1","2013-05-01 16:31:00","8863466","2","","1221571","","2013-05-01 16:31:00","2012-01-14 14:44:29",""
"50965042","RSA key pair is not working","<p>here is my key generation:</p>

<pre><code>KeyPairGenerator keyGen = null;
                try {
                    keyGen = KeyPairGenerator.getInstance(""RSA"");
                    keyGen.initialize(1024);
                } catch (NoSuchAlgorithmException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
                String publicKey=  Base64.getEncoder().encodeToString(keyGen.genKeyPair().getPublic().getEncoded());
                String privateKey = Base64.getEncoder().encodeToString(keyGen.genKeyPair().getPrivate().getEncoded());}
</code></pre>

<p>here is my signed token generation code</p>

<pre><code>private String generateRSASignedToken(JWTClaimsSet claimsSet) {
            SignedJWT signedJwt  = new SignedJWT(new JWSHeader(JWSAlgorithm.RS256), claimsSet);

            RSASSASigner signer = new RSASSASigner(getPrivateKey());
            String token= null;
            try {
                    signedJwt.sign(signer);
                    token = signedJwt.serialize();

            } catch (JOSEException e) {
                e.printStackTrace();
            }
            return token;
        }
</code></pre>

<p>getting public and private key</p>

<pre><code>private  RSAPrivateKey getPrivateKey() {
                java.security.Security.addProvider(new org.bouncycastle.jce.provider.BouncyCastleProvider());
                try(InputStream stream = getClass().getClassLoader().getResourceAsStream(""private.key"")){
                String privatekey = IOUtils.toString(stream, Charset.defaultCharset().toString());
                System.out.println(""after: ""+privatekey);
                byte[] key =  Base64.getDecoder().decode(privatekey);
                PKCS8EncodedKeySpec spec = new PKCS8EncodedKeySpec(key);
                KeyFactory kf = KeyFactory.getInstance(""RSA"");
                return (RSAPrivateKey) kf.generatePrivate(spec);}
                catch (Exception e) {
                    e.printStackTrace();
                    return null;
                }
            }


            private  RSAPublicKey getPublicKey(){
              try(InputStream stream = getClass().getClassLoader().getResourceAsStream(""public.key"")){
              String publickey = IOUtils.toString(stream, Charset.defaultCharset().toString());
              System.out.println(""after: ""+publickey);
              byte[] key = Base64.getDecoder().decode(publickey);
              X509EncodedKeySpec spec = new X509EncodedKeySpec(key);
              KeyFactory kf = KeyFactory.getInstance(""RSA"");
              return (RSAPublicKey) kf.generatePublic(spec);}
                catch (Exception e) {
                      e.printStackTrace();
                      return null;
                }}
</code></pre>

<p>token verification :</p>

<pre><code>String token = generateRSASignedToken(claimsSet);
                JWSVerifier verifier = new RSASSAVerifier(getPublicKey());
                SignedJWT jwt=null;
                try {
                    jwt = SignedJWT.parse(token);
                    System.out.println(jwt.verify(verifier));
                } catch (ParseException | JOSEException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                } 
</code></pre>

<p>every thing looks fine from token generation part to getting public and private key but verification part is not working. It is printing false for the key pair generated. It was working fine with key pair I got from online tool(which I can't use due to licensing problem) but not when I generated keys.</p>
","<p>The problem is here:</p>

<pre><code>String publicKey  = Base64.getEncoder().encodeToString(keyGen.genKeyPair().getPublic().getEncoded());
String privateKey = Base64.getEncoder().encodeToString(keyGen.genKeyPair().getPrivate().getEncoded());
</code></pre>

<p><em>Every</em> time you call <code>genKeyPair()</code> a new key pair is generated. Thus <code>publicKey</code> and <code>privateKey</code> come from different and unrelated key pairs. The solution is simply to save the key pair just generated, e.g.</p>

<pre><code>KeyPair kp = keyGen.genKeyPair();
String publicKey  = Base64.getEncoder().encodeToString(kp.getPublic().getEncoded());
String privateKey = Base64.getEncoder().encodeToString(kp.getPrivate().getEncoded());
</code></pre>

<p>NOTE: there may be other problems with the code, this is the first one I spotted.</p>
","279","<java><rsa><private-key><public-key>","0","1","1","2018-06-21 13:02:14","","0","","7020538","","2018-06-21 09:58:27","2018-06-21 09:26:32",""
"13384631","use RSA private key generated in php to encrypt in c","<p>I have a RSA Private Key generated with openssl_pkey_new() in php. I save this in a txt file. Is it posible to use that key for decryptin in c.
I tried this but with no success:</p>

<pre><code>RSA *r = PEM_read_RSAPrivateKey(""C:/xampp/htdocs/RSA/daten.txt"", NULL, NULL, NULL);
resultDecrypt = RSA_private_decrypt( 128 /* resultEncrypt*/ , encrypted, decrypted, r, RSA_PKCS1_OAEP_PADDING);
printf(""%d from decrypt: '%s'\n"", resultDecrypt, decrypted);
RSA_free ( r );
</code></pre>

<p>Thanks!!</p>
","","278","<php><c><encryption><openssl><private-key>","0","","0","2012-11-14 18:07:55","","7","","","","","2012-11-14 18:07:55",""
"48521925","Java: Recover the Public Key by only having the PrivateKey? Possible?","<p>Source:
<a href=""https://stackoverflow.com/questions/2411096/how-to-recover-a-rsa-public-key-from-a-byte-array/48521836#48521836"">How to recover a RSA public key from a byte[] array?</a></p>

<p>This is my KeyPair generation Method:</p>

<pre><code>    try {
        KeyPairGenerator keyGen = KeyPairGenerator.getInstance(""ECDSA"", ""BC"");
        SecureRandom random = SecureRandom.getInstance(""SHA1PRNG"");
        ECGenParameterSpec ecSpec = new ECGenParameterSpec(""prime192v1"");
        // Initialize the key generator and generate a KeyPair
        keyGen.initialize(ecSpec, random); // 256 bytes provides an
                                            // acceptable security level
        KeyPair keyPair = keyGen.generateKeyPair();
        // Set the public and private keys from the keyPair
        privateKey = keyPair.getPrivate();
        publicKey = keyPair.getPublic();


        System.out.println(""Private and public keys:"");
        System.out.println(""PRIVATE: "" + StringUtil.getStringFromKey(this.privateKey));
        System.out.println(""PUBLIC: "" + StringUtil.getStringFromKey(this.publicKey));

    } catch (Exception e) {
        throw new RuntimeException(e);
    }
</code></pre>
","<p>In general, private keys contain enough information to rebuild public keys (it's the opposite, computing the private key from the public key, which is hopefully not feasible). In the case of a normal RSA private key in Java, you would use <code>java.lang.security.KeyFactory.getKeySpec()</code> to obtain a <code>java.security.spec.RSAPrivateCrtKeySpec</code> instance, that contains, among other things, the modulus (<code>getModulus()</code>) and the public exponent (<code>getPublicExponent()</code>), i.e. the two elements of the public key.</p>

<p>Now, of course, your code is <em>not</em> a generator for an RSA key pair, but for an elliptic curve key pair, which is an altogether different animal. There again, though, the private key contains enough information to recompute the public key. However, this involves an elliptic curve multiplication, an operation which is doable (that's the kind of operation used when signing or verifying an ECDSA signature) but for which I am not sure there is a ready-to-use API in Java.</p>

<p>In any case, when you generate the private key, you actually generate a key <em>pair</em> with both the private key and the public key. If you store a copy of the public key along with the private key, then you do not have to worry about recomputing the public key.</p>
","278","<java><private-key><recover><generate>","-1","5","1","2018-01-30 14:16:24","","8","2","","","","2018-01-30 12:50:51",""
"4680575","md5 collision how is it possible?","<p>i don't understand how one can create a rough Certificate just by making a MD5 collision. Even if you were able to find another string whose hash matches the original how would you sign it ? You do not have access to the Certificate authority's private key ?</p>
","","275","<md5><digital-certificate><private-key><hash-collision>","2","","0","2011-01-13 13:33:03","","2","","428789","","2011-01-13 13:33:03","2011-01-13 13:31:09",""
"46347875","MacOS: SecKeyCreateWithData fails with code 50","<p>I've got the following Swift code below:</p>

<pre><code>    let privString = ""MHQCAQEEIEuXPCziDSJqCxpOHEhcg1sEm7EtEiH2XVvXK69DcUHroAcGBSuBBAAKoUQDQgAECDDYmcIpUxC2EVJu8o/qPHPoZMId11A/2nVAXJByFOYSigUnZ6njK4qZQMGxLr3xNND17yYoXZ21QKus4bUHfg==""

    let privData = NSData(base64Encoded: privString)
    let privRaw = privData?.bytes.assumingMemoryBound(to: UInt8.self)
    let CFPrivData = CFDataCreate(nil, privRaw!, privData!.length)

    let options: [String: Any] = [kSecAttrKeyType as String: kSecAttrKeyTypeECDSA,
                                  kSecAttrKeyClass as String: kSecAttrKeyClassPrivate,
                                  kSecAttrKeySizeInBits as String: 256]
    var error: Unmanaged&lt;CFError&gt;?

    guard let privKey = SecKeyCreateWithData(CFPrivData!, options as CFDictionary, &amp;error) else {
        throw error!.takeRetainedValue() as Error
    }
</code></pre>

<p>The key is a PEM file with the headers stripped and the private key was generated with the following command</p>

<pre><code>openssl ecparam -genkey -name secp256k1 -noout -out ngthnd_priv.pem
</code></pre>
","","274","<macos><openssl><private-key><pem>","1","","0","2017-09-21 15:36:47","","1","","8649949","","2017-09-21 15:36:47","2017-09-21 15:30:52",""
"31475358","Get RSA private key from certificate","<p>I have a GlobalSign ssl certificate and opening it in Microsoft Management Console, it states ""You have a private key that corresponds to this certificate.""</p>

<p>How do I read that private key in the following format as I need it for a key exchange:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
.....
.....
.....
-----END RSA PRIVATE KEY-----
</code></pre>
","","273","<ssl><certificate><ssl-certificate><rsa><private-key>","0","","0","2015-07-17 11:59:07","","2","","","","","2015-07-17 11:59:07",""
"27056230","Connect with PuTTY client to EC2 service?","<p>How to connect with SSH client to EC2 service ?</p>

<p>I have the <code>.pem</code> file with <code>*.ppk</code> extension and structure:</p>

<pre><code>PuTTY-User-Key-File-2: ssh-rsa
Encryption: none
Comment: imported-openssh-key
Public-Lines: 6
KEY ^ LINES
Private-Lines: 14
KEY LINES
Private-MAC: KEY
</code></pre>

<p>I have Putty<br>
<a href=""http://s017.radikal.ru/i400/1411/46/f11ad26d87e0.png"" rel=""nofollow"">http://s017.radikal.ru/i400/1411/46/f11ad26d87e0.png</a></p>

<p>Do I have to upload this file in PuTTY?</p>

<p>But how to make it... PuTTY has no Open File dialog... What is the way ?</p>

<p>The common way of using PuTTY is in  Host Name (or IP address) field to enter domain name.<br>
For EC2 service that is Public IP I suppose.<br>
I enter this value and have console opened, it propose to enter login...<br>
I have no login, except from login to enter to EC2</p>

<p>--- my answer:
Hi, Thanks I found how attach .pkk file , but opened console again demands for login.
Also where to enter username as you wrote </p>

<blockquote>
  <p>after you specify your EC2 hostname and username</p>
</blockquote>

<p>?</p>
","<p>first you have to convert pem file to ppk by using puttygen, so after you will that ppk file use it under ssh auth give that file location and in hostname give ec2 instance name, it will allow you to login, user-name give ec2-user name if you are using linux, or check for the user-name according to your OS.</p>
","272","<ssh><amazon-ec2><putty><private-key>","0","0","2","2017-02-16 15:37:28","","0","1","","user2054381","2014-11-21 09:34:14","2014-11-21 07:29:31",""
"27056230","Connect with PuTTY client to EC2 service?","<p>How to connect with SSH client to EC2 service ?</p>

<p>I have the <code>.pem</code> file with <code>*.ppk</code> extension and structure:</p>

<pre><code>PuTTY-User-Key-File-2: ssh-rsa
Encryption: none
Comment: imported-openssh-key
Public-Lines: 6
KEY ^ LINES
Private-Lines: 14
KEY LINES
Private-MAC: KEY
</code></pre>

<p>I have Putty<br>
<a href=""http://s017.radikal.ru/i400/1411/46/f11ad26d87e0.png"" rel=""nofollow"">http://s017.radikal.ru/i400/1411/46/f11ad26d87e0.png</a></p>

<p>Do I have to upload this file in PuTTY?</p>

<p>But how to make it... PuTTY has no Open File dialog... What is the way ?</p>

<p>The common way of using PuTTY is in  Host Name (or IP address) field to enter domain name.<br>
For EC2 service that is Public IP I suppose.<br>
I enter this value and have console opened, it propose to enter login...<br>
I have no login, except from login to enter to EC2</p>

<p>--- my answer:
Hi, Thanks I found how attach .pkk file , but opened console again demands for login.
Also where to enter username as you wrote </p>

<blockquote>
  <p>after you specify your EC2 hostname and username</p>
</blockquote>

<p>?</p>
","<p>On the initial PuTTY <em>Configuration</em> window (after you specify your EC2 hostname and username), go to the <em>Connection > SSH > Auth</em> page and specify your <code>.ppk</code> key file in the <em>Private key file for authentication</em> box.</p>

<p>For more details, see:<br>
<a href=""https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/putty.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/putty.html</a></p>

<p>I'm assuming you have obtained the <code>.ppk</code> file by converting the <code>.pem</code> file downloaded when creating EC2 instance. You do not need to ""upload"" such <code>.ppk</code> file (or actually it's public part) anywhere as this is done automatically, when creating the EC2 instance. Had you generated the <code>.ppk</code> yourself, it's a different story.</p>

<p><em>Note that this it is NOT the <code>.pem</code> file with the <code>.ppk</code> extension. It's the <code>.ppk</code> file. It has nothing to do with the <code>.pem</code> anymore after converting.</em></p>
","272","<ssh><amazon-ec2><putty><private-key>","0","0","2","2017-02-16 15:37:28","","0","1","","user2054381","2014-11-21 09:34:14","2014-11-21 07:29:31",""
"48258547","C# Xamarin ; Private key - store and retrieve","<p>I have an issue with retrieving Private key from <code>X509Storage</code> after restart of application.</p>

<p>I am working with:</p>

<ul>
<li><a href=""https://developer.xamarin.com/api/type/System.Security.Cryptography.X509Certificates.X509Store/"" rel=""nofollow noreferrer"">Storage</a></li>
<li><a href=""https://developer.xamarin.com/api/type/System.Security.Cryptography.X509Certificates.X509Certificate/"" rel=""nofollow noreferrer"">Certificate</a></li>
</ul>

<p>My process:</p>

<p><strong>1 Create storage</strong></p>

<pre><code>Storage = new X509Store(StoreName.TrustedPublisher, 
StoreLocation.CurrentUser);
Storage.Open(OpenFlags.ReadWrite);
</code></pre>

<p><strong>2 Create Certificate with Private key</strong></p>

<pre><code>Cert = new X509Certificate2(
    Convert.FromBase64String(""...my certificate...""),
    """",
    X509KeyStorageFlags.UserKeySet | 
    X509KeyStorageFlags.PersistKeySet |
    X509KeyStorageFlags.Exportable);
var privateKey = new RSACryptoServiceProvider();
privateKey.FromXmlString(""...my private key relevant to certificate..."");
privateKey.PersistKeyInCsp = true;
Cert.PrivateKey = privateKey;
</code></pre>

<p><strong>3 Insert Certificate to storage</strong></p>

<pre><code>Storage.Add(Cert);
</code></pre>

<p><strong>4 Verify, that Certificate with Private key is in storage</strong></p>

<pre><code>var certs = Storage.Certificates;
foreach (var cert in certs)
{
   CertsView.Append(""Name: "" + cert.Subject + ""; Has PK: ""+ cert.HasPrivateKey +  ""\n"");
}
</code></pre>

<p><strong>5 Restart application and verify again</strong></p>

<p>I am able to retrieve certificate, which I have inserted.
However, certificate is without private key at this point.</p>

<p>What I am missing?</p>
","","269","<xamarin><private-key><x509certificate2>","3","","0","2018-01-15 07:53:51","","1","","6783663","","2018-01-15 07:53:51","2018-01-15 07:26:27",""
"44261028","Modification of rsa encrypted cipher text","<p>I've the following problem:</p>

<p>I use a RSA private key to encrypt a given plain text. I want to send it to another application over an unsecure channel. The other application only knows the public key. </p>

<p>Is it possible for a man in the middle to change parts of the cipher text so that the decryption results in a modified text?</p>

<p>I tried this by myself in my Java application, but if I do so, I always get </p>

<p><pre><code>
<code>javax.crypto.BadPaddingException: Decryption error
    at sun.security.rsa.RSAPadding.unpadV15(RSAPadding.java:380) ~[na:1.8.0_131]
    at sun.security.rsa.RSAPadding.unpad(RSAPadding.java:291) ~[na:1.8.0_131]
    at com.sun.crypto.provider.RSACipher.doFinal(RSACipher.java:356) ~[sunjce_provider.jar:1.8.0_112]
    at com.sun.crypto.provider.RSACipher.engineDoFinal(RSACipher.java:389) ~[sunjce_provider.jar:1.8.0_112]
    at javax.crypto.Cipher.doFinal(Cipher.java:2048) ~[na:1.8.0_121]</code></pre></code></p>

<p>I'm using algorithm ""RSA/ECB/PKCS1Padding"" in my Java application for encryption and decryption.</p>

<p>Regards</p>
","<p>The correct answer to the question was given by Maarten Bodewes:</p>

<blockquote>
  <p>""I use a RSA private key to encrypt a given plain text."". You should stop right there. Encryption with an RSA private key is not signature generation and it does not provide confidentiality of the message either; it is not a secure cipher. You encrypt with the public key and decrypt with the private key, period. –</p>
</blockquote>
","266","<encryption><rsa><private-key>","0","0","1","2017-05-31 07:02:14","44277825","5","1","5359550","","2017-05-30 11:52:49","2017-05-30 11:28:11",""
"26045500","Loading pk12 java.io.File for Google Client API in a Servlet Container","<p>I have an application that gets deployed into Tomacat servlet containers. I have a background job that gets run where I make a call to Google Analytics that is authorized using a Service Account's PK12 file. </p>

<p>I don't have access to the container's file system, so I deploy the pk12 file in my WAR's WEB-INF/ . I don't anticipate being given access to add any authentication keys into the Servlet Container's host's system registry/keychain.</p>

<p>GoogleCredential's Buidler.setServiceAccountPrivateKeyFromP12File(File) only takes java.io.File, so I ended up doing something that is kludgey to authorize. I open the PK12 file using serveltContenxt.getResourceAsStream and copy it's contents to a temporary file which I pass into the Credential's builder. </p>

<p>When I tried to do </p>

<pre><code>java.io.File p12File = new java.io.File(servletContext.getResource('...pk12.file...').getFile()) 
</code></pre>

<p>there was an error saying that the File doesn't exists because it tries to open a file on disk while the pk12 file is either not unbundled or the URI that comes back isn't the correct one for the file. </p>

<p>What's the right way to do this? I'm new to the world of PrivateKey authentication and the google client api.</p>

<p>Here's my currently working code: </p>

<pre><code>        // create file because credential only takes a File object
        final File p12File = File.createTempFile(""xxx"", "".tmp""); 
        p12File.deleteOnExit();
        InputStream in = servletContext.getResourceAsStream(""...pk12.file..."");
        FileOutputStream out = new FileOutputStream(p12File);  
        org.apache.commons.io.IOUtils.copy(in, out);
        out.flush();
        out.close();
        in.close();

        GoogleCredential credential = new  GoogleCredential.Builder().setTransport(httpTransport)
                .setJsonFactory(JSON_FACTORY)
                .setServiceAccountId(""xxxxxxx@developer.gserviceaccount.com"")
            .setServiceAccountScopes(Collections.singleton(AnalyticsScopes.ANALYTICS_READONLY))
                .setServiceAccountPrivateKeyFromP12File(p12File)
                .build();

        p12File.delete();

        // Set up and return Google Analytics API client.
        this.analytics = new Analytics.Builder(httpTransport, JSON_FACTORY, credential).setApplicationName(""mybackgroundprocess/1.0"").build();
</code></pre>

<p>thanks</p>
","<p>I found the same problem was answered here:
<a href=""https://stackoverflow.com/questions/18621508/getting-a-privatekey-object-from-a-p12-file-in-java"">Getting a PrivateKey object from a .p12 file in Java</a></p>

<p>I just had to create a private key from the resource</p>

<pre><code>InputStream in = servletContext.getResourceAsStream(""p12.file"");
PrivateKey privateKey = SecurityUtils.loadPrivateKeyFromKeyStore(SecurityUtils.getPkcs12KeyStore(), in, ""notasecret"", ""privatekey"", ""notasecret"");
</code></pre>

<p>and then call </p>

<pre><code>GoogleCredential.Builder.setServiceAccountPrivateKey(PrivateKey privateKey)
</code></pre>
","266","<tomcat><servlets><private-key><google-client>","0","1","1","2014-10-08 22:16:26","26267382","0","","3654142","","2014-09-25 19:20:19","2014-09-25 18:23:09",""
"33792468","Private key parameters in C#","<p>I got an application that in C#, using RSACryptoServiceProvider, I load a public key from an XML and then I'm encrypting a hash value and saving it. </p>

<p>In another application, I load the private key and then I'm able to decrypt the information correctly.</p>

<p>The problem is that I want to make quick tests to see if everything's ok. </p>

<p>From <a href=""https://msdn.microsoft.com/en-us/library/system.security.cryptography.rsaparameters.aspx"" rel=""nofollow"">MSDN</a>, </p>

<blockquote>
  <p>The security of RSA derives from the fact that, given the public key { e, n }, it is computationally infeasible to calculate d, either directly or by factoring n into p and q. Therefore, any part of the key related to d, p, or q must be kept secret. </p>
</blockquote>

<p>so the most important parameters of the private key are the exponent and the primes (D, P, Q). </p>

<p>My test was to modify the private key before loading it. First, I changed one character in the first prime and I got a bad key. Same when just modifying one character in the second prime. </p>

<p>But when I modified one character in the exponent, it was still able to correctly decode it. So my question is, which things can be changed from the private key and still be able to decode, and which are essential?</p>
","<p>While Modulus, Exponent, and D are all that are required to do RSA technically, very few implementations actually use D, because it's much more efficient to do <a href=""https://en.wikipedia.org/wiki/RSA_(cryptosystem)#Using_the_Chinese_remainder_algorithm"" rel=""nofollow"">RSA via the Chinese Remainder Theorem</a>.</p>

<p>While the Windows CAPI (used by RSACryptoServiceProvider) will roundtrip any value of D you import, it doesn't actually use it. Windows CNG (used by RSACng) requires that D be provided on import of a private key, then promptly throws it away, recomputing it on export (or import, I suppose). </p>

<p>You can see that last quirk by generating an RSA key with OpenSSL (which generates <code>d</code> via <code>phi</code> (which is the form Wikipedia mentions) and importing it into CNG, which when exporting has replaced <code>d</code> with the calculation based on <code>lambda</code> (LCM(p-1, q-1)).</p>

<p>Anyways, what all this amounts to is that while ""changing D is bad"" it can, in practice, just be ignored by the library doing the actual math; and that seems to be the case here.  But you shouldn't do it, because it might not interoperate well after going via a PFX or other private key transfer mechanism.</p>
","264","<c#><encryption><rsa><private-key>","3","0","1","2016-07-30 23:09:30","","6","0","","","","2015-11-18 23:23:48",""
"53534454","How to work with elliptic curve SECP256K1 key in Azure Key Vault when the key is used also by a blockchain","<p>I'm wondering how to work with SECP256K1 keys within Azure Key Vault when at the same time the key is also required for account creation on a blockchain.</p>

<p><strong>WHAT HAS TO BE ACHIEVED</strong></p>

<ol>
<li>Generate SECP256K1 key pair</li>
<li>Use public key for account creation on a blockchain</li>
<li>Store private key to Key Vault and use it for signing purposes</li>
</ol>

<p><strong>ATTEMPT #1 - GENERATE OUTSIDE KEY VAULT AND IMPORT</strong></p>

<p>I have generated SECP256K1 key pair outside Key Vault. As a result I have private key and public key available as strings.
My idea was to import the private key to Key Vault with help of Azure SDK for.NET wia following piece of code (ECParameters used are from Microsoft.Azure.KeyVault.WebKey.ECParameters namespace):</p>

<pre><code>  //this part of code is taken from https://www.scottbrady91.com/C-Sharp/JWT-Signing-using-ECDSA-in-dotnet-Core
  var privateKeyBytes = Encoding.UTF8.GetBytes(privateKey);
  var privateKeyInt =
    new Org.BouncyCastle.Math.BigInteger(+1, privateKeyBytes);
  var parameters = SecNamedCurves.GetByName(""secp256k1"");
  var ecPoint = parameters.G.Multiply(privateKeyInt);
  var privateKeyX = ecPoint.Normalize().XCoord.ToBigInteger()
    .ToByteArrayUnsigned();
  var privateKeyY = ecPoint.Normalize().YCoord.ToBigInteger()
    .ToByteArrayUnsigned();

  //the following part is my code
  var ecParameters = new ECParameters();
  ecParameters.Curve = ""P-256K"";
  ecParameters.X = privateKeyX;
  ecParameters.Y = privateKeyY;
  ecParameters.D = privateKeyBytes;

  var key = new JsonWebKey(ecParameters);
  JsonWebKeyVerifier.Options options =
    JsonWebKeyVerifier.Options.DenyIncompatibleOperations
    | JsonWebKeyVerifier.Options.DenyExtraneousFields;
  string error = (string) null;

  JsonWebKeyVerifier.VerifyByKeyType(key, options, ref error);

  await client.ImportKeyWithHttpMessagesAsync(vaultBaseUri, name, key);
</code></pre>

<p>The resulting key for import looks like this (copied from Visual Studio variable view, maybe it's shortened):</p>

<pre><code>  {
    ""kty"": ""EC"",
    ""crv"": ""P-256K"",
    ""x"": ""vSUHj6deEhPI6QeILgfgf2I7VTgmiDon_5nsss560OA"",
    ""y"": ""DK8DnzEOv57arN6f4Wou-vXkty7uje0n2xTHgGAehp8"",
    ""d"": ""NUpoaEEzWTFVYXBKNWZuRWZNUkVxZkpKY29LWGdMcHpFUnVNQ2E2Wjd0YkNhY2NpQ3N5""
  }
</code></pre>

<p>Although JsonWebKeyVerifier returns no error and a call to key.IsValid() returns true, the call to Key Vault failed with HTTP 400 Bad Request. I have turn on logging on Key Vault instance and following log appears there (id, username, IP addresses and GUIDs are changed intentionally, I'm not sure what is confidential; I can provide them on demand):</p>

<pre><code>{
  ""time"": ""2018-11-28T16:28:05.2034585Z"",
  ""category"": ""AuditEvent"",
  ""operationName"": ""KeyImport"",
  ""resultType"": ""Success"",
  ""resultDescription"": ""EC key is not valid - cannot instantiate crypto service."",
  ""correlationId"": ""5682a894-0150-484f-a398-6922efed4458"",
  ""callerIpAddress"": ""XX.XX.XXX.XXX"",
  ""identity"": {
    ""claim"": {
      ""http://schemas.microsoft.com/identity/claims/objectidentifier"": ""00000000-0000-0000-0000-000000000000"",
      ""appid"": ""00000000-0000-0000-0000-000000000000"",
      ""http://schemas.microsoft.com/identity/claims/scope"": ""user_impersonation"",
      ""http://schemas.xmlsoap.org/ws/2005/05/identity/claims/upn"": ""xxx.xxxxxx@xxxxxxxx.com"",
      ""ipaddr"": ""XX.XX.XXX.XXX"",
      ""http://schemas.microsoft.com/claims/authnmethodsreferences"": ""pwd""
    }
  },
  ""properties"": {
    ""id"": ""https://xxxxxxx.vault.azure.net/keys/testJK1"",
    ""clientInfo"": ""FxVersion/4.6.27019.06 OSName/Windows OSVersion/Microsoft.Windows.10.0.17134. Microsoft.Azure.KeyVault.KeyVaultClient/3.0.2.0"",
    ""httpStatusCode"": 400,
    ""requestUri"": ""https://xxxxxxxx.vault.azure.net/keys/testJK1?api-version=7.0"",
    ""isAccessPolicyMatch"": true,
    ""keyProperties"": {
      ""type"": ""EC""
    }
  },
  ""resourceId"": ""/SUBSCRIPTIONS/00000000-0000-0000-0000-000000000000/RESOURCEGROUPS/XXXXXX-RG/PROVIDERS/MICROSOFT.KEYVAULT/VAULTS/XXXXXXX"",
  ""operationVersion"": ""7.0"",
  ""resultSignature"": ""Bad Request"",
  ""durationMs"": ""259""
}
</code></pre>

<p><strong>ATTEMPT #2 - GENERATE WITHIN KEY VAULT AND EXPORT</strong></p>

<p>Even if I'm able to generate SECP256K1 EC key within Key Vault, I didn't find how to export its public key part.</p>

<p><em>EDIT 11/23/2018</em></p>

<p>GetKey method on Azure Key Vault returns JsonWebKey that contains X and Y coordinates.</p>

<p><strong>QUESTIONS</strong></p>

<ol>
<li>Is it possible to import SECP256K1 key via Azure SDK for .NET? If yes, could you provide me a link to working example?</li>
<li>Am I doing something wrong/insufficent in my code during attempt to import the key to Key Vault?</li>
<li>Is it possible to export SECP256K1 public key from Key Vault?</li>
<li>Do you have any other idea how to accomplish the achievements described herein before?</li>
</ol>

<p><em>EDIT 11/29/2018</em></p>

<ol start=""5"">
<li>Is there a way how to construct public key from X and Y coordinates (ideally in .NET world)?</li>
</ol>

<p>Thanks in advance.</p>

<p>Regards,
Jan</p>

<p>PS: I originally posted this question on <a href=""https://social.msdn.microsoft.com/Forums/azure/en-US/3ba8cbcc-59a7-4adc-ab69-950f71cc4c8d/how-to-work-with-elliptic-curve-secp256k1-key-used-by-a-blockchain?forum=AzureKeyVault"" rel=""nofollow noreferrer"">Azure Key Vault blog</a>, but here is probably much broader audience. I'll link both sources once it will be answered,</p>
","","263","<blockchain><private-key><public-key><azure-keyvault><elliptic-curve>","1","","0","2018-11-29 14:42:49","","4","1","2281580","","2018-11-29 14:42:49","2018-11-29 08:12:49",""
"49733903","Firebase Cloud Messaging + Django: How to securely store the service account's private key?","<p>I just started implementing FCM into my Django backend.</p>

<p>The problem I encountered is the following.</p>

<p>In <a href=""https://firebase.google.com/docs/cloud-messaging/auth-server#authorize_http_v1_send_requests"" rel=""nofollow noreferrer"">the docs</a> you are told to generate a private key JSON file and securely store it.
Usually I store my keys in an os.env variable. But this is not possible, since this is a whole file and not just a value. Also on the same page, the doc tells you how to get a request token:</p>

<pre><code>def _get_access_token():
  """"""Retrieve a valid access token that can be used to authorize requests.

  :return: Access token.
  """"""
  credentials = ServiceAccountCredentials.from_json_keyfile_name(
      'service-account.json', SCOPES)
  access_token_info = credentials.get_access_token()
  return access_token_info.access_token
</code></pre>

<p>As you can see here, the library needs direct access to the file.</p>

<p>So my question is? How do I securely store this? I'm currently hosting on heroku, so I need this in my version control system.</p>
","<p>Most teams keep the JSON file out of version control and add to the environment manually. </p>

<p>While not exactly the same as keeping the values in an environment variable, it has similar security. A developer with only access to version control can't access the key, and a developer cannot accidentally run on their own system with the production keys. But on the other hand: someone who has access to the production server, can get the key in both cases.</p>
","262","<django><firebase><firebase-authentication><firebase-cloud-messaging><private-key>","0","1","4","2019-10-28 12:20:18","49735315","2","","","","","2018-04-09 13:15:09",""
"49733903","Firebase Cloud Messaging + Django: How to securely store the service account's private key?","<p>I just started implementing FCM into my Django backend.</p>

<p>The problem I encountered is the following.</p>

<p>In <a href=""https://firebase.google.com/docs/cloud-messaging/auth-server#authorize_http_v1_send_requests"" rel=""nofollow noreferrer"">the docs</a> you are told to generate a private key JSON file and securely store it.
Usually I store my keys in an os.env variable. But this is not possible, since this is a whole file and not just a value. Also on the same page, the doc tells you how to get a request token:</p>

<pre><code>def _get_access_token():
  """"""Retrieve a valid access token that can be used to authorize requests.

  :return: Access token.
  """"""
  credentials = ServiceAccountCredentials.from_json_keyfile_name(
      'service-account.json', SCOPES)
  access_token_info = credentials.get_access_token()
  return access_token_info.access_token
</code></pre>

<p>As you can see here, the library needs direct access to the file.</p>

<p>So my question is? How do I securely store this? I'm currently hosting on heroku, so I need this in my version control system.</p>
","<p>The way we do it:</p>

<p>Encrypt the json string / Store in Resource file
Decryption key, stored as Env variable.</p>

<p>When creating the credentials decrypt the encrypted string.</p>
","262","<django><firebase><firebase-authentication><firebase-cloud-messaging><private-key>","0","3","4","2019-10-28 12:20:18","49735315","2","","","","","2018-04-09 13:15:09",""
"49733903","Firebase Cloud Messaging + Django: How to securely store the service account's private key?","<p>I just started implementing FCM into my Django backend.</p>

<p>The problem I encountered is the following.</p>

<p>In <a href=""https://firebase.google.com/docs/cloud-messaging/auth-server#authorize_http_v1_send_requests"" rel=""nofollow noreferrer"">the docs</a> you are told to generate a private key JSON file and securely store it.
Usually I store my keys in an os.env variable. But this is not possible, since this is a whole file and not just a value. Also on the same page, the doc tells you how to get a request token:</p>

<pre><code>def _get_access_token():
  """"""Retrieve a valid access token that can be used to authorize requests.

  :return: Access token.
  """"""
  credentials = ServiceAccountCredentials.from_json_keyfile_name(
      'service-account.json', SCOPES)
  access_token_info = credentials.get_access_token()
  return access_token_info.access_token
</code></pre>

<p>As you can see here, the library needs direct access to the file.</p>

<p>So my question is? How do I securely store this? I'm currently hosting on heroku, so I need this in my version control system.</p>
","<p>this is Based on what ivanspenchev suggested in his post.</p>

<p>Flow is : read json data -> encrypt with a key - > decrypt with a key.  I am not using his suggested encrypt algo, because I dont like it.</p>

<p>But the basic idea is, that you have a class ""EncryptEngine"" that does two things, encrypts a string, and decrypts a string. </p>

<pre><code>public class EncryptEngine
{

Cipher ecipher;
Cipher dcipher;
// 8-byte Salt
byte[] salt = {
    (byte) 0xA9, (byte) 0x9B, (byte) 0xC8, (byte) 0x32,
    (byte) 0x56, (byte) 0x35, (byte) 0xE3, (byte) 0x03
};
// Iteration count
int iterationCount = 19;

public EncryptEngine() {

}

/**
 *
 * @param secretKey Key used to encrypt data
 * @param plainText Text input to be encrypted
 * @return Returns encrypted text
 * @throws java.security.NoSuchAlgorithmException
 * @throws java.security.spec.InvalidKeySpecException
 * @throws javax.crypto.NoSuchPaddingException
 * @throws java.security.InvalidKeyException
 * @throws java.security.InvalidAlgorithmParameterException
 * @throws java.io.UnsupportedEncodingException
 * @throws javax.crypto.IllegalBlockSizeException
 * @throws javax.crypto.BadPaddingException
 *
 */
public String encrypt(String secretKey, String plainText)
        throws NoSuchAlgorithmException,
        InvalidKeySpecException,
        NoSuchPaddingException,
        InvalidKeyException,
        InvalidAlgorithmParameterException,
        UnsupportedEncodingException,
        IllegalBlockSizeException,
        BadPaddingException {
    //Key generation for enc and desc
    KeySpec keySpec = new PBEKeySpec(secretKey.toCharArray(), salt, iterationCount);
    SecretKey key = SecretKeyFactory.getInstance(""PBEWithMD5AndDES"").generateSecret(keySpec);
    // Prepare the parameter to the ciphers
    AlgorithmParameterSpec paramSpec = new PBEParameterSpec(salt, iterationCount);

    //Enc process
    ecipher = Cipher.getInstance(key.getAlgorithm());
    ecipher.init(Cipher.ENCRYPT_MODE, key, paramSpec);
    String charSet = ""UTF-8"";
    byte[] in = plainText.getBytes(charSet);
    byte[] out = ecipher.doFinal(in);
    String encStr = new String(Base64.getEncoder().encode(out));
    return encStr;
}

/**
 * @param secretKey Key used to decrypt data
 * @param encryptedText encrypted text input to decrypt
 * @return Returns plain text after decryption
 * @throws java.security.NoSuchAlgorithmException
 * @throws java.security.spec.InvalidKeySpecException
 * @throws javax.crypto.NoSuchPaddingException
 * @throws java.security.InvalidKeyException
 * @throws java.security.InvalidAlgorithmParameterException
 * @throws java.io.UnsupportedEncodingException
 * @throws javax.crypto.IllegalBlockSizeException
 * @throws javax.crypto.BadPaddingException
 */
public String decrypt(String secretKey, String encryptedText)
        throws NoSuchAlgorithmException,
        InvalidKeySpecException,
        NoSuchPaddingException,
        InvalidKeyException,
        InvalidAlgorithmParameterException,
        UnsupportedEncodingException,
        IllegalBlockSizeException,
        BadPaddingException,
        IOException {
    //Key generation for enc and desc
    KeySpec keySpec = new PBEKeySpec(secretKey.toCharArray(), salt, iterationCount);
    SecretKey key = SecretKeyFactory.getInstance(""PBEWithMD5AndDES"").generateSecret(keySpec);
    // Prepare the parameter to the ciphers
    AlgorithmParameterSpec paramSpec = new PBEParameterSpec(salt, iterationCount);
    //Decryption process; same key will be used for decr
    dcipher = Cipher.getInstance(key.getAlgorithm());
    dcipher.init(Cipher.DECRYPT_MODE, key, paramSpec);
    byte[] enc = Base64.getDecoder().decode(encryptedText);
    byte[] utf8 = dcipher.doFinal(enc);
    String charSet = ""UTF-8"";
    String plainStr = new String(utf8, charSet);
    return plainStr;
}    
public static void main(String[] args) throws Exception {
    EncryptEngine cryptoUtil=new EncryptEngine();
    String key=""ezeon8547"";   
    JsonFactory f = new JsonFactory();
    JsonParser jp = 
    f.createJsonParser(/MyDocuments/Repo/Myproject/service-account.json);
    String plain;
  while (jp.nextToken() == JsonToken.START_OBJECT)) {
         plain += jp.toString();
       }
    String enc=cryptoUtil.encrypt(key, plain);
    System.out.println(""Original text: ""+plain);
    System.out.println(""Encrypted text: ""+enc);
    String plainAfter=cryptoUtil.decrypt(key, enc);
    System.out.println(""Original text after decryption: ""+plainAfter);
 }
}
</code></pre>
","262","<django><firebase><firebase-authentication><firebase-cloud-messaging><private-key>","0","2","4","2019-10-28 12:20:18","49735315","2","","","","","2018-04-09 13:15:09",""
"49733903","Firebase Cloud Messaging + Django: How to securely store the service account's private key?","<p>I just started implementing FCM into my Django backend.</p>

<p>The problem I encountered is the following.</p>

<p>In <a href=""https://firebase.google.com/docs/cloud-messaging/auth-server#authorize_http_v1_send_requests"" rel=""nofollow noreferrer"">the docs</a> you are told to generate a private key JSON file and securely store it.
Usually I store my keys in an os.env variable. But this is not possible, since this is a whole file and not just a value. Also on the same page, the doc tells you how to get a request token:</p>

<pre><code>def _get_access_token():
  """"""Retrieve a valid access token that can be used to authorize requests.

  :return: Access token.
  """"""
  credentials = ServiceAccountCredentials.from_json_keyfile_name(
      'service-account.json', SCOPES)
  access_token_info = credentials.get_access_token()
  return access_token_info.access_token
</code></pre>

<p>As you can see here, the library needs direct access to the file.</p>

<p>So my question is? How do I securely store this? I'm currently hosting on heroku, so I need this in my version control system.</p>
","<p>please read the below documentation provided for firebase_admin.credentials.Certificate().</p>

<p><a href=""https://i.stack.imgur.com/6T4bB.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/6T4bB.png"" alt=""fd""></a></p>

<p>So, you can create a credential Certificate by passing a dict from the parsed key file contents. key file content can come from an encrypted environment variable value. Use this credential to initialize the app.</p>
","262","<django><firebase><firebase-authentication><firebase-cloud-messaging><private-key>","0","0","4","2019-10-28 12:20:18","49735315","2","","","","","2018-04-09 13:15:09",""
"47351743","Android - InvalidKeySpecException - java lang runtime exception SSLInternal:TOO_LONG when trying to read .der file","<p>I am trying to read a <strong>private key</strong> from a der file. I am getting the following error in my logcat. And the returned value is empty.</p>

<p><strong>java.security.spec.InvalidKeySpecException: java.lang.RuntimeException: error:0c0000af:ASN.1 encoding routines:OPENSSL_internal:TOO_LONG</strong></p>

<p>I tried searching for situations where this had already happened but could find none. I would like to know what this error means and how I can solve it.</p>

<p>Here is my code:</p>

<pre><code>public static String decryptionWithFile(String encrypted,String privateFile2)throws Exception  {
    PrivateKey privateKey = getPrivateKey(privateFile2);

    Cipher cipher = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
    cipher.init(Cipher.DECRYPT_MODE, privateKey);
    byte[] bts = Hex.decodeHex(encrypted.toCharArray());
    bts = cipher.doFinal(bts);


    bts = getFinalBytesOfDycryptedString(bts);
    String decryptedMessage = new String(cipher.doFinal(encrypted.getBytes()));
    return new String(bts,""UTF-8"");
}
</code></pre>

<p>And here is the getPrivateKey(); Method:</p>

<pre><code>private static PrivateKey getPrivateKey(String privateFile2)throws Exception  {
    File f = new File(privateFile2);
    FileInputStream fis = new FileInputStream(f);
    DataInputStream dis = new DataInputStream(fis);
    byte[] keyBytes = new byte[(int) f.length()];
    dis.readFully(keyBytes);
    dis.close();
    KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
    PKCS8EncodedKeySpec spec = new PKCS8EncodedKeySpec(keyBytes);
    RSAPrivateKey privKey = (RSAPrivateKey) keyFactory.generatePrivate(spec);
    return privKey;
}
</code></pre>

<p><strong><em>Important Note: I added the .der file to my assets folder and then saved it to a file in Internal Storage in order to access the path - which my function requires. Do you think, anything must have happened to the file during this process? (It worked fine with the Public Key)</em></strong></p>
","<p>The problem turned out to be what I'd guessed. When I was writing the .der file to the Internal Storage, it was getting altered somehow and thus wasn't working.</p>

<p>So instead of that. I directly used the <code>InputStream</code> returned from getAssets().open(filename) to read the private key. That fixed it.</p>
","262","<java><android><encryption><private-key><der>","0","0","1","2017-11-17 17:47:49","47356502","1","3","2328121","","2017-11-17 13:33:50","2017-11-17 13:27:33",""
"50154917","How to encode RSA private key for reduce","<p>I'm developing a blockchain system with python flask. I use RSA keys(size = 2048) for wallet. I use base64 for reduce size of private key but it still too long </p>

<pre><code>rsaObj = RSA.generate(2048)
privateKey = rsaObj.exportKey()

print privateKey
# output
""""""
-----BEGIN RSA PRIVATE KEY-----
MIIEpQIBAAKCAQEA3qP80JKhGgn9IQ4P0khE5Y67bA0rPCgEp2pE1i7I5V32X9rH
ttO8O3qgchdtUojhaDtMk3ixj8ihNGtRPcYlJ34rEn0eafddSZVnteb9RMrtKOyx
d+1pWPORyQY+DqJ9byySDCjXlgUODQkiYtrdbUI9CQU/U3DxcFNnbSmVRfAI4gN/
Pgb//QMLjlSQhtiSWERrQHGhcjoUXuhF2sYTK/JQ5HUL6sj82XRBVLJVqe6pUYZD
JMlJg2rqW9agw/nWlOnL7gmRpJQmZOJ4u7l8mAByknDquDU6yop2l7wQOpfspp5B
CDKsbhoZUxpFMkuoHCyKAlRKuk6854JW6ORdGwIDAQABAoIBAQCDVbFZSGYIekP8
L9NddIxP7nbZMpuCjQjRyXp57ndL9rXTrbeKPjUX0Sq8ot02htCRMAnoJJZ5/xw5
U+VEz5IzTdYSvgQm9mjtc1kOkQhugFaOgbHe0QoIEwa40xnggDIGVwCAc8dZE/pJ
7k1+iyV7wktG+vV0P3ftjwW/+3u3GNwOmwikQ1KXQ2UobWXDPSULpPo053uSh2i4
D4GFs4PS4f7qQQT3/BuEJpp/EdVAQjyJwG6BnDbwOpYu8hd3bqe1ST38v0jzlqjM
rDhvbrvpwr4Ugbs4TCpWCibb4lOoy0yLU8Ixt7bQQgDGJLdIC7s/01qC+jdOLiPB
vGOJz+zBAoGBAOaVanrADhvFYsabWYVeYh8qwNBoLuyFFsepFwzCCvuCoycIyopm
EwblyikGyH0K9UKBU7abnCKEld1s3hHdVkeNfb/eMjaoEqEHdUxWkw+oLNoZJxri
+4PFlNUs1YDKIWCOTzcm3JKHX6Td4CS66BSqtGo7sA3YxAMlnwAWGFDZAoGBAPcu
b0dMOrGOcDfx7kMfHrINsH0WSF8zNB/Dxky+AT9MCQomrbdOuPUF5nEogtyAMwhi
0yqZQz03Ilned65v72XJ4r3breQ5gkKRfmjJ3EPuYO7amqBhdBNW7z27d5uhGcee
/qp9VYPTBDBU4EyCfmLDMR9jwnHaYXjWd708PyUTAoGAJOEtAKkLGKH/ZGigbtZj
tzxtTmf7aVT4CcMfrqiyfPuuAKZFTtF4pZfHN7ygAG/qPlLVAtXsqRCvr5SkCBNw
o00cGb3+JgPHxv2cYzNNnil10wRG3uQC+lZ1sYrUMx8hK4JXZSjQCpegUowyN221
hOiwpnUZeX18DEzOG4NtLDECgYEAnkPjCDms0wcqnweO0PdaBhNxz4W27Q2x8CzA
CV8XGVor544AaIBFOM2AUS/pKhoDkvkD0CC1xrpIilZBNzWAiSIMxhekbZ7M4qaZ
06p8GBrHgegCXXJIiiF9qX8hBErQYNpSoQMDABbadb/CpfpfxgjIqRqM4605/88C
d+3dWHUCgYEAj2bFYD6+U2Rf3M9kkBRqob9y7xHv42OyJmTzbZWG0/6zO09cF48l
RGrZ2RvaXJNCOm8ZIRiA1q6Le0WLdiWEzlhmFkqfNIGY2pa6jls04H8sRqPB5qm+
0nBpV2fI0uM1CGYZmVdVcphlk9IH+KF97WtsKIZXIUkh+hE03bB9Ax8=
-----END RSA PRIVATE KEY-----
""""""

print base64.b64encode(privateKey)
# output
""""""
LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBM3FQODBKS2hHZ245SVE0UDBraEU1WTY3YkEwclBDZ0VwMnBFMWk3STVWMzJYOXJICnR0TzhPM3FnY2hkdFVvamhhRHRNazNpeGo4aWhOR3RSUGNZbEozNHJFbjBlYWZkZFNaVm50ZWI5Uk1ydEtPeXgKZCsxcFdQT1J5UVkrRHFKOWJ5eVNEQ2pYbGdVT0RRa2lZdHJkYlVJOUNRVS9VM0R4Y0ZObmJTbVZSZkFJNGdOLwpQZ2IvL1FNTGpsU1FodGlTV0VSclFIR2hjam9VWHVoRjJzWVRLL0pRNUhVTDZzajgyWFJCVkxKVnFlNnBVWVpECkpNbEpnMnJxVzlhZ3cvbldsT25MN2dtUnBKUW1aT0o0dTdsOG1BQnlrbkRxdURVNnlvcDJsN3dRT3Bmc3BwNUIKQ0RLc2Job1pVeHBGTWt1b0hDeUtBbFJLdWs2ODU0Slc2T1JkR3dJREFRQUJBb0lCQVFDRFZiRlpTR1lJZWtQOApMOU5kZEl4UDduYlpNcHVDalFqUnlYcDU3bmRMOXJYVHJiZUtQalVYMFNxOG90MDJodENSTUFub0pKWjUveHc1ClUrVkV6NUl6VGRZU3ZnUW05bWp0YzFrT2tRaHVnRmFPZ2JIZTBRb0lFd2E0MHhuZ2dESUdWd0NBYzhkWkUvcEoKN2sxK2l5Vjd3a3RHK3ZWMFAzZnRqd1cvKzN1M0dOd09td2lrUTFLWFEyVW9iV1hEUFNVTHBQbzA1M3VTaDJpNApENEdGczRQUzRmN3FRUVQzL0J1RUpwcC9FZFZBUWp5SndHNkJuRGJ3T3BZdThoZDNicWUxU1QzOHYwanpscWpNCnJEaHZicnZwd3I0VWdiczRUQ3BXQ2liYjRsT295MHlMVThJeHQ3YlFRZ0RHSkxkSUM3cy8wMXFDK2pkT0xpUEIKdkdPSnorekJBb0dCQU9hVmFuckFEaHZGWXNhYldZVmVZaDhxd05Cb0x1eUZGc2VwRnd6Q0N2dUNveWNJeW9wbQpFd2JseWlrR3lIMEs5VUtCVTdhYm5DS0VsZDFzM2hIZFZrZU5mYi9lTWphb0VxRUhkVXhXa3crb0xOb1pKeHJpCis0UEZsTlVzMVlES0lXQ09UemNtM0pLSFg2VGQ0Q1M2NkJTcXRHbzdzQTNZeEFNbG53QVdHRkRaQW9HQkFQY3UKYjBkTU9yR09jRGZ4N2tNZkhySU5zSDBXU0Y4ek5CL0R4a3krQVQ5TUNRb21yYmRPdVBVRjVuRW9ndHlBTXdoaQoweXFaUXowM0lsbmVkNjV2NzJYSjRyM2JyZVE1Z2tLUmZtakozRVB1WU83YW1xQmhkQk5XN3oyN2Q1dWhHY2VlCi9xcDlWWVBUQkRCVTRFeUNmbUxETVI5anduSGFZWGpXZDcwOFB5VVRBb0dBSk9FdEFLa0xHS0gvWkdpZ2J0WmoKdHp4dFRtZjdhVlQ0Q2NNZnJxaXlmUHV1QUtaRlR0RjRwWmZITjd5Z0FHL3FQbExWQXRYc3FSQ3ZyNVNrQ0JOdwpvMDBjR2IzK0pnUEh4djJjWXpOTm5pbDEwd1JHM3VRQytsWjFzWXJVTXg4aEs0SlhaU2pRQ3BlZ1Vvd3lOMjIxCmhPaXdwblVaZVgxOERFek9HNE50TERFQ2dZRUFua1BqQ0RtczB3Y3Fud2VPMFBkYUJoTnh6NFcyN1EyeDhDekEKQ1Y4WEdWb3I1NDRBYUlCRk9NMkFVUy9wS2hvRGt2a0QwQ0MxeHJwSWlsWkJOeldBaVNJTXhoZWtiWjdNNHFhWgowNnA4R0JySGdlZ0NYWEpJaWlGOXFYOGhCRXJRWU5wU29RTURBQmJhZGIvQ3BmcGZ4Z2pJcVJxTTQ2MDUvODhDCmQrM2RXSFVDZ1lFQWoyYkZZRDYrVTJSZjNNOWtrQlJxb2I5eTd4SHY0Mk95Sm1UemJaV0cwLzZ6TzA5Y0Y0OGwKUkdyWjJSdmFYSk5DT204WklSaUExcTZMZTBXTGRpV0V6bGhtRmtxZk5JR1kycGE2amxzMDRIOHNScVBCNXFtKwowbkJwVjJmSTB1TTFDR1labVZkVmNwaGxrOUlIK0tGOTdXdHNLSVpYSVVraCtoRTAzYkI5QXg4PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
""""""
</code></pre>

<p>I want to encode private key and reduce size for give it to user because of private key is too long.</p>
","","260","<python><base64><rsa><encode><private-key>","0","","0","2018-05-03 12:40:09","","7","","1135367","","2018-05-03 12:40:09","2018-05-03 12:17:47",""
"54407219","is it possible to generate RSA privatekey using modulus and exponent like did on Java side?","<p>I am using RSA decryption on an iOS solution. I want to use the same parameters used on Java side to create the privateKey, but i am not able to find how.
is there a way to do it or is it possible to export this privateKey using Java and then import it on the iOS solutions ? </p>

<pre><code>byte[] modulusBytes = Base64.decode(""base64EncodedString"");
byte[] DBytes = Base64.decode(""anotherBase64EncodedString"");
BigInteger modulus = new BigInteger(1, modulusBytes );
BigInteger exponent = new BigInteger(1, DBytes);

RSAPrivateKeySpec rsaPrivKey = new RSAPrivateKeySpec(modulus, exponent);
KeyFactory fact = KeyFactory.getInstance(""RSA"");
PrivateKey privKey = fact.generatePrivate(rsaPrivKey);
Cipher cipher = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
</code></pre>

<p>My iOS application will decrypt a QRCode using this algorithme. the QRCode is encrypted using Java by a public key like below. to decrypt this code, we use the code above on Java side. so how we can generate the same privatekey that will be able to decrypt ? is it possible to do it without the same modulus and exponent ?</p>

<pre><code>byte[] modulusBytes = Base64.decode(""base64EncodedString"");

byte[] exponentBytes = Base64.decode(""AQAB"");
BigInteger modulus = new BigInteger(1, modulusBytes );
BigInteger exponent = new BigInteger(1, exponentBytes);

RSAPublicKeySpec rsaPubKey = new RSAPublicKeySpec(modulus, exponent);
KeyFactory fact = KeyFactory.getInstance(""RSA"");
PublicKey pubKey = fact.generatePublic(rsaPubKey);
</code></pre>
","<p>This is not the way it is supposed to work. You could generate a pair of private and public keys on each side, and exchange the <strong>public</strong> keys. The each side would encrypt the messages they wish to send (provided they are not too long) with the other side's public key, and decrypt the received messages with their own private key. But the private key is and should remain just that, <strong>private</strong>.</p>
","258","<java><ios><swift><rsa><private-key>","0","1","1","2019-10-11 08:19:08","","8","","10980386","","2019-01-29 11:43:26","2019-01-28 17:21:35",""
"45940783","JWT token - Passcode for private key","<p>I am trying to build a JWT token using an online JWT generator located at <a href=""http://kjur.github.io/jsjws/tool_jwt.html"" rel=""nofollow noreferrer"">http://kjur.github.io/jsjws/tool_jwt.html</a></p>

<p>I understand how a JWT is put together but one thing that is confusing me is a field the form asks for termed a ""<strong>passcode for private key</strong>"". I understand what a private key is, however, I am not familiar with a passcode for a private key.</p>

<p>Does anyone know what this is referring to?</p>
","<p>A PKCS#8 private key can be encrypted with a password using a DES3 or AES symmetric encryption algorithm </p>

<p>The online generator is asking you for a key like this and the corresponding password</p>

<pre><code>-----BEGIN ENCRYPTED PRIVATE KEY-----
MIIFDjBABgkqhkiG9w0BBQ0wMzAbBgkqhkiG9w0BBQwwDgQI9Gl6VRM+2s8CAggA
MBQGCCqGSIb3DQMHBAj5X9pErhcqLgSCBMhbG7htniJ8vUmZRVq8rF00MYp5IbLU
CFwj8yPEizGf9p65yFfxM1YdgsqSpJV2oHSFyZDumXyL1ujmfG1w0VeK8Vw4/T74
ttpo8JAnUI7Z7qS/xi3jbdACJKHCcrGq9QhWikeDdtWn8cCw9EaM5EtybB7ecshu
kJxSPmeenT28GD05aM5tUkExsInZmMJboUDGHaJ6zJQgad1PwIylwWfsmSn4Lw9z
U2MD0PmiqxQ796k4kjrJtQ8is8XCh8u7IFvlaibn/DKTK8WTLJB10KeRQ6TDxqcP
0X25tVN/FIWfHE8KIDdWCo2oYqqWyjWv9cuyoYDR0pmye0Gq3jlMjZcsg0r/DLhU
fqhZ7TxnuPUaS1aJ4MZXuKLR8nBqOalDeI/IXZSGV9ZTNIndqZkTxCPegD6/1Kdg
WCYZ6K3oxn1DCu9IUt/haJ4YSbAC+mEAgApGnVMllxb1W4yHgERpgKcz0cLl8zQ9
KUkB6gTe7upmTQilXJze73w6sP1l6t047EgMiCnleuNElZ/+WYd+B8V6qJ0izKJp
9uZqWu6P+JwlppDhKMfjIIdSwKi+UbtUPTYmu1FN0MzgjEwnp2hTiHwrSKv1LsI3
kgn0ML1xI9eXbU1bNfwydFLi3A725A/S1/eK0gOnzid+vlRJdPgY9kC37Q/EcrqM
auYbY1ThK+iu2d5Dtdkr/L2XQoeHEh7/mCs/J2o50CPl8XvxozDa34FHFG41phGU
6jur0/kejg/QQ9pFAjMPV67xD/D+d3DxAGjs2goqwOHhcvByvuEH5i+fqs8Xmqhh
Xgl2SnYm3mMVXDNE9adqpvWJTl93A8gIJlfZz4rKgJbUJDMYDXTroL+cqiFjeYCZ
U5NRh8c/LYrpG+RWzK0rm9omEf8ja3kSQK5KIsiuMoGwPQ+W0cZ0dZGBntJeM9aH
rM5lgAfVQLPW73ZfoxKYPNMMZ7gIXTRMmoRT3tGG+52mCL8dyS6ry6Ej98DEOJEH
Akc9ejRqiLvoW8D4Qaw79udPVCKpt/wHa7XvPbAq/SskOjuhG3gcMfgsvX+aBmHu
XjkbQFEAUG9t4UC2C12zodn7o5M0/xr2IdLxxWigkh1X20uuVZuonLfxduMjwhjP
qym506o9R9uw6nApw5cZLyJfCkVas5e5KJmjzZThhA0cpG5GdmChtj1ytvNx/PvU
qJGs7M0t00AS75HMB4U4Yte3ZFIac6d/YOZzunPZYhRAivjLuzOnasCX6X+Z4I7P
QLIoprHdYU3tL5kDmtcep/Yh6FKK9yMdSQ9+2nM8KFE1lOsSVPV/NTClFI1s9sEv
4FchPDwsiXhawgHz57N97bORblGchX23BcpPG3mCv23NM/S4cA7RhfQUSzcxZ6SS
/vPqrU1bG56MnbcMF71QqMW3V8aLwl3pKwY28FNuPCg4KpxkE4NM2BtwysiIixBw
l8hUv7x8ZFF1UMc2h0Cxdm0FNt358l2U9LfnjZMSiLdElWjKVDm8ZGz8iEF6EYWM
du9XX2VHkgAbyoeb9m2wBOX79nQ9/lOawUy70gZOXD+alvnfKdyHWxV9Ij90RB0K
HTc28h7Bvn2pmsghGOeHU83cIZ5CWFZns5jOr7AX4WfK+5IEd8ftc896/Iy4XsZ8
gRo=
-----END ENCRYPTED PRIVATE KEY-----
</code></pre>
","257","<rsa><jwt><private-key>","1","2","1","2017-08-29 14:48:49","45941883","0","","","","","2017-08-29 13:44:28",""
"51661119","Git submodules fail to authenticate to bitbucket","<p>I'm pulling repository from bitbucket using ssh credentials with private key</p>

<p>Project contains some git submodules, here's how I set up to pull them as well:
<a href=""https://i.stack.imgur.com/jU62D.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jU62D.png"" alt=""enter image description here""></a></p>

<p>However the build fails as the permission is denied during <code>git submodule update</code> </p>

<pre><code> &gt; /opt/bitnami/git/bin/git submodule update --init --recursive wallets
hudson.plugins.git.GitException: Command ""/opt/bitnami/git/bin/git submodule update --init --recursive wallets"" returned status code 1:
stdout: 
stderr: Cloning into '/opt/bitnami/apps/jenkins/jenkins_home/workspace/wallet-core/wallets'...
Permission denied (publickey).
fatal: Could not read from remote repository.
</code></pre>

<p>However the repository itself was checked out without problems. Both repositories belong to the same project and team for which the private key is configured and added to jenkins, so I assume that chekout and submodule procedures don't use the same authentification method. How can I solve this?</p>
","<p>Turns out it was simple as checking the ""Use credentials from default remote of parent repository"" box</p>
","257","<git><jenkins><git-submodules><ssh-keys><private-key>","0","0","1","2018-08-02 20:12:09","","0","","","","","2018-08-02 19:46:34",""
"40909071","Is there any way to get private key in EVP_KEY structure from windows certstore?","<p>I tried to get private key from certstore using windows API(PFXExportCertStoreEx).</p>

<p>This API is able to export the CRYPT_DATA_BLOB from certstore for corresponding CERT_INDEX. But I need private key  in EVP_KEY structure , Since my application is using openssl API for SSL_CTX. So the exported structure CRYPT_DATA_BLOBit is not fit to the EVP_PKEY in SSL context(SSL_CTX).</p>

<p>Any help would be appreciated.</p>

<p>I am new to this windows certstore. If you need any  more info let me know.</p>
","<pre><code>CRYPT_DATA_BLOB dataBlob = {0};
if(PFXExportCertStoreEx(hStore, &amp;dataBlob, password, NULL,
            EXPORT_PRIVATE_KEYS | REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY | REPORT_NO_PRIVATE_KEY))
{
    if (dataBlob.cbData &gt; 0)
    {
        dataBlob.pbData = (BYTE*)malloc(dataBlob.cbData);
        if (PFXExportCertStoreEx(hSystemStore, &amp;dataBlob, password.toStdWString().c_str(), NULL,
                    EXPORT_PRIVATE_KEYS | REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY | REPORT_NO_PRIVATE_KEY))
        {
            EVP_PKEY *pkey;
            X509 *cert;
            STACK_OF(X509) *ca = NULL;
            PKCS12 *p12;
            int i;
            CRYPTO_malloc_init();
            OpenSSL_add_all_algorithms();
            SSLeay_add_all_algorithms();
            ERR_load_crypto_strings();

            BIO* input = BIO_new_mem_buf((void*)dataBlob.pbData, dataBlob.cbData);
            p12 = d2i_PKCS12_bio(input, NULL);

            PKCS12_parse(p12, password.toStdString().c_str(), &amp;pkey, &amp;cert, &amp;ca);
        }
    }
}
</code></pre>
","257","<windows><openssl><certificate><private-key>","1","0","1","2017-09-11 05:49:11","46148959","1","","","","","2016-12-01 11:07:54",""
"45858573","Android RSA decryption using private key, non-sense result","<p>I am doing RSA decryption in my Android project, and somehow the result makes non-sense. I am showing my code here: </p>

<pre><code>private static final int MAX_DECRYPT_BLOCK = 256;


private static RSAPrivateKey loadPrivateKey(InputStream in) throws Exception {
    RSAPrivateKey priKey;
    try {
        BufferedReader br = new BufferedReader(new InputStreamReader(in));
        String readLine = null;
        StringBuilder sb = new StringBuilder();
        while ((readLine = br.readLine()) != null) {
            if (readLine.charAt(0) == '-') {
                continue;
            } else {
                sb.append(readLine);
                sb.append('\r');
            }
        }
        byte[] priKeyData = Base64.decode(new String(sb), Base64.NO_WRAP);



        PKCS8EncodedKeySpec keySpec= new PKCS8EncodedKeySpec(priKeyData);
        KeyFactory keyFactory= KeyFactory.getInstance(""RSA"",new BouncyCastleProvider());
        priKey= (RSAPrivateKey) keyFactory.generatePrivate(keySpec);
    } catch (IOException e) {
        throw new Exception(""error reading the key"");
    } catch (NullPointerException e) {
        throw new Exception(""inputstream is null"");
    }
    return priKey;
}


/**
 * decrypt with a private key
 *
 * @param privateKey
 * @param cipherData
 * @return
 * @throws Exception
 */
private static byte[] decrypt(RSAPrivateKey privateKey, byte[] cipherData) throws Exception {
    if (privateKey == null) {
        throw new Exception(""key is null"");
    }
    Cipher cipher = null;
    try {
        cipher = Cipher.getInstance(""RSA"");
        cipher.init(Cipher.DECRYPT_MODE, privateKey);

        int inputLen = cipherData.length;
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        int offSet = 0;
        byte[] cache;
        int i = 0;
        while (inputLen - offSet &gt; 0) {
            if (inputLen - offSet &gt; MAX_DECRYPT_BLOCK) {
                cache = cipher.doFinal(cipherData, offSet, MAX_DECRYPT_BLOCK);
            } else {
                cache = cipher.doFinal(cipherData, offSet, inputLen - offSet);
            }
            out.write(cache, 0, cache.length);
            i++;
            offSet = i * MAX_DECRYPT_BLOCK;
        }
        byte[] decryptedData = out.toByteArray();
        out.close();
        return decryptedData;

    } catch (NoSuchAlgorithmException e) {
        throw new Exception(""no such algorithm"");
    } catch (NoSuchPaddingException e) {
        e.printStackTrace();
        return null;
    } catch (InvalidKeyException e) {
        throw new Exception(""InvalidKeyException"");
    } catch (IllegalBlockSizeException e) {
        throw new Exception(""IllegalBlockSizeException"");
    } catch (BadPaddingException e) {
        throw new Exception(""BadPaddingException"");
    }
}

public static String RSADecrypt(Context context, String KeyFileNameInAssetFolder, byte[] content) {
    try {
        InputStream inputStream = context.getResources().getAssets().open(KeyFileNameInAssetFolder);
        RSAPrivateKey privateKey = loadPrivateKey(inputStream);
        byte[] b = decrypt(privateKey, content);
        return new String(b,""utf-8"");
    } catch (Exception e) {
        e.printStackTrace();
    }
    return ""error"";
}
</code></pre>

<p>and I am calling with this statement:</p>

<pre><code>String result = RSAUtils.RSADecrypt(getApplicationContext(), Constant.PRIVATE_KEY_PKCS8_FILE_NAME,Base64.decode(qrcode_result,Base64.NO_WRAP));
</code></pre>

<p>And this is the private key:</p>

<pre><code>&gt; -----BEGIN PRIVATE KEY-----
MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCsQTbkXviKG1od
wVp0t15JB4OkdDUo8O36/yzLoJmsmPf3yFzAJ3YzEAaWAKKpUx92c9yfW4vW849F
pno/GUJLwPkIG5ss1YR55P5UI76kpLM74ZXume9+WfEuQ3B/HHkcnmCVl4CV/Xqq
4X4d3Rc7zGTbGSHdVui1QJ5ubQoqHjSGaO9j2SvMsqDSU20S1DjrL/8sb0e7B63a
fJVzOZFi7E62zqYzfBOEupY+24Ac8i7s8tyX3Bd4OJ1zdQ+si5yeIkaRiD8ZeUbJ
3yS2MlUohvuwmJy7uxpP8mYXmaXM1ZtMFLaLRUc4leA7KDRlDXHJLSYAkFxCyw8J
RTK2QOcTAgMBAAECggEARRrUnsHLC/z1JkLPu0tlM/8jvPIx8X7Wun9sxTRk8m1b
7bggHaa3ML0ZJ0yR9UQ3txm8ROJBM7b6n4KuQGotwp5kSfBpTI9MWmqX7cF5ViwN
C9TwhYyUHCiRLXI4y4XswKJ5NQpWt9W9RJi6M9ji3Uaen5dxko6vRSfrZ3mvPj2/
blW5HV8j3RIzJ3942CzQw2IX/hQWhityFxTwGY3f3Rh05jpI+SowJlOTIheOHqlR
2VFTLTYIvmoZJduFzxlM4t5W3VzGZl/KmC1apNh2N3xPcmimq/YsrDqN5GgkNhuh
/WTTB7pa3qsQlFPKnwylLc2LviQafiR+yunolImCwQKBgQDS9TIth96x+McD2Gu7
1QQlalhDK1+s/O9rjQV4la9FykEFdJB7+Q9xyq9vIqqSVIFj8rI1wqziHp3czUkY
Ijqcgp0DB1Stbwp3DPh3Rq4zVHHnKplzhMwAaDBOVaHmEGaiyB/LwspCcDoON+i+
70Bzdc6EW/KqNpGlP3OPJT2pSwKBgQDRCIlyklOnKQnzbCaMwFkBZBJlHHqgIl1Z
S7jdFaTX7uUkbXF3WVtJlY1+r6h0rK075hX/61VlhfoFjBIR/7ZDaBkrH3Nd6cdU
PJIOgnQEYobRAF4ugWSPTsf0A6bjd7tsVZ7+1ediKwg1QY9Pk2hj/jRb0FD2nKZ+
yWI3RPekWQKBgBM1DfeFSmpr2zrnZo+4imMZtqWO+mwWr3ncYiYjgszY6Gilv036
VESpDqYQwvUFyq4d98nbSsBfx0HGUyRmYW3EmqUe8r/Dv3EtdiXuAohb5O8GOuiA
q85RrixDsbTvw1iI3hRATQgVjcOjpYZU5Epe7ImykXqb81DXYR8kZePXAoGBAJWk
CuFeJ0yPcHQ2hBJW0GDShuijTpW8hB8cuiZrDCsY9ijxwDy0V0mCKlz62xlLVGiA
+lbO3b9j/exirbz81jnDF+FrDme4p92Bzv1cHjnVXrXYEZQxRQ/iUfo5cwt790xC
ryO3dYEtVR7q4/EPkbejj0/6/TrOQdKZ0BnI4Y9hAoGBALlFBlvCRspXYBOXf0XM
5V0Q4t1vAxgcfNaKi4h612UZDF2GluYIwtuF+uJlxYvhRxq1gzmgP5+Z9gblMb6d
8ysWfWPl2RWGYNw0nwOYhWI1/cWRNpfH7W+OY2kHmB3G1bHnf5PxUb+1JL2PvfXS
fZ8JY1/xKqYSoSORJYQh2Z7D
-----END PRIVATE KEY-----
</code></pre>

<p>and this is the string I tried to decrypt:</p>

<pre><code>JRhdX3DLGbMVcxN6jV3697yUkfZUBfz/ee6P8pGlgHFnOo5OWgXH0fc10Ps4li3UKkyVqo1+iz10/zzhjVTbSKC5Fai6dLnQgrFVz6lOqOeR83+x4ezyF75kORdgAyEp5MiW0LHsK13ryYEqZ1GHiZdJ6E54nbLZsZGKJJkRZ2OVQW9hovqBQXAP3M8dGk1liruiY+xAHfKkeS73m+IPYPTNGQT+y5IDACoq8dLUvV4nw76p2ZUfyYFgoYOir9KBN2SbfcndR71DZUPWdRnZoDLNFCfvMjC2Ui27j3CxcQLzJSt4K4K+kmU6n5t8Xb6YyGb2j+5pduXcnZMgc5cjsm6NBIXUv+DQzXeRo61vHrXKWeamJ+Whl0RnA9HjIl6medxfE64xHgF+aD6lqbQcwWwHWm/s3f5XkS0xP21bYuOt8mgmHC90qhJNRGKmTGgyxxls/18aV4eZEIRUg82wCIXavvQGLA3hk5UWl4YkrpaGYh+SX1t3yfi+wQ8f30lQBrKl4A0iKk4WHKNCka6nd3sc8bDwD42cvQiFSPCp7m4DRtXy1CRzNmRG7FmSK8SgkQOWSWE+6KRKat88j0Nw+Rg6U1YaMBofJOLKfIswLHgW44Bpf2c0eynJEZdLi94oOh7lkTHcaqwBiO1MWg9eiYT/j7qXCPjoi9q3PzPhxoA=
</code></pre>

<p>and the decryption result is like this:</p>

<p><a href=""https://i.stack.imgur.com/NfuaP.png"" rel=""nofollow noreferrer"">result image</a></p>
","","256","<java><android><rsa><private-key>","0","","0","2017-08-24 12:27:11","","8","3","472495","","2017-08-24 12:27:11","2017-08-24 09:57:15",""
"51722110","The best way to manage private key in a shared computer","<p>I'd like to know a secure way to manage a private key in a shared computer.
The private key is used for GitHub authentication to pull/push/clone/ to ""git://..."". However, the PC is shared with other people.  Some of them can be root users, so they can read my private key. If they read it, they will have an access privilege to my repository. In addition, my GitHub password is too long to remember. It is generated by a password management application, so I don't remember it. Because of this, I can not type password by using a Git URL ""https://..."".</p>

<p>What I want to do is to use <code>git</code> in a shared PC in a secure way. 
Could you give me some suggestions or solutions?</p>
","<p>Inside the git console you can add a passphrase to your key while generating it.</p>

<p>Basicly execute <code>ssh-keygen</code> and it will ask you where to place the key and what passphrase you want.</p>

<pre><code>$ ssh-keygen -t rsa -b 4096 -C ""your_email@example.com""

Generating public/private rsa key pair.
Enter file in which to save the key (/home/private/.ssh/id_rsa):
Enter passphrase (empty for no passphrase): [PASSPHRASE]
Enter same passphrase again: [PASSPHRASE]
Your identification has been saved in /home/private/.ssh/id_rsa.
Your public key has been saved in /home/private/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:SPGTnzBrBfGCktlJm3iNRepVRS4XymcCrs3zq/g4g2g your_email@example.com
The key's randomart image is:
+---[RSA 4096]----+
|      o.*..o+    |
|     * &amp; B o .   |
|    = @ @ B =    |
|     = * O B     |
|      + S o      |
|       . o       |
|   . .    .      |
|  E . oo   .     |
| .    o+o..      |
+----[SHA256]-----+
</code></pre>

<p><strong>Here is an indepth tutorial by github:</strong></p>

<p><a href=""https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/"" rel=""nofollow noreferrer"">https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/</a></p>

<p><em>Also all modern git managers provide a generator with passphrase.</em></p>
","255","<git><security><private-key>","1","1","1","2018-08-07 08:30:05","51722258","0","","","","","2018-08-07 08:22:16",""
"53543582","How to get the private key from the files generated while creating CSR (one .cer and one .keystore file)?","<p>I have generated the CSR request on our wintel server ( we need to bind our application hosted on this server for Https) using below commands in keytool:</p>

<pre><code>Keytool -genkey -alias &lt;server name&gt; -keyalg RSA -keysize 2048 -keystore &lt;server name&gt;.keystore
    Enter keystore password - changeit
    Confirm the password – changeit
    Common Name: ******
    Organization: ***
    Organization Unit: **
    Locality: ****
    State: ***
    Country: **
    Enter key password or hit enter to keep same as keystore password

keytool -certreq -keyalg RSA -alias &lt;server name&gt; -file certreq.csr -keystore &lt;server name&gt;.keystore
</code></pre>

<p>Two files are generated </p>

<ul>
<li>certreq.cer</li>
<li>.keystore</li>
</ul>

<p>I send the two files to the concerned team, they got the SSL certificate and installed it on the same server.</p>

<p>Now the certificate is there in <code>console root\certificates (local computer)\personal\certificates</code> but its not appearing in IIS for binding. The team is now asking me for the private key to resolve the issue.</p>

<p>Can someone let me how to get the private key from the .cer and .keystore file?
And if you can point out the reason why certificate is not appearing in IIS and how to resolve it, I would really appreacite that.</p>

<p>P.S: I am not sure if this is the right place for this question. Help me out to know the right place if this is not.</p>

<p>Edit: For someone stuck with same questions, check out the answer 
 by garethTheRed here- <a href=""https://serverfault.com/questions/943496/how-to-install-cer-and-p7b-certificates-to-use-in-iis/943500#943500"">https://serverfault.com/questions/943496/how-to-install-cer-and-p7b-certificates-to-use-in-iis/943500#943500</a><br>
In my case, the certificate received from CA was directly installed, thats why it was not private key verified, and was not appearing in IIS also. We had to import the public key(the .cer file) to the keystore </p>

<pre><code>keytool -importcert -file certificate.cer -keystore &lt;server name&gt;.keystore -alias &lt;server name&gt;
</code></pre>

<p>and then convert the keystore to a PKCS#12, with:</p>

<pre><code>keytool -importkeystore -srckeystore &lt;server name&gt;.keystore -destkeystore &lt;server name&gt;.pfx -srcstoretype JKS - deststoretype PKCS12 -deststorepass &lt;new password&gt;
</code></pre>

<p>Then we imported the pfx in certificate store.</p>
","","254","<iis><private-key><csr>","1","","0","2018-12-13 08:26:27","","2","","7845063","","2018-12-13 08:26:27","2018-11-29 16:32:41",""
"12343257","Decrypt data Xcode to PHP","<p>I'm making an application with Xcode which encrypts information using the private key of a certificate, this information is sent to a server using a POST in PHP (Eg: username = ""encrypted data"") and I want to decrypt this information in the PHP with the private key and get the real information, I encrypted the information with SecKeyEncrypt in Xcode and then sent to PHP, but how I can decrypt it with the private key in php?</p>
","<p>The function you are looking for is <code>mcrypt_decrypt</code> that comes with the <code>mcrypt</code> extension.</p>
","252","<php><iphone><xcode><security><private-key>","0","0","1","2012-10-28 10:11:35","12343411","1","","1440875","","2012-10-28 10:11:35","2012-09-09 21:44:46",""
"38725693","Decryption using private key issue in Android","<p>I am getting an encrypted string from the backend server, which I need to decrypt using private key in Android.The decryption works, but it appends a special character at the end of the decrypted string.
Here is the code I am using:</p>

<pre><code>public static String decryptString(String value, Context context){

    value = ""Ss7LVqgWeamgPGkt62qSNydTJnwiUet8UemYWR0jzCLOvtW+RazpJmGG657/nWhu5UQGXzEMwIK1jcBXIXkw3EAX6WdocYBKpVJPWpmlEbf4IzPcev67wgx4vd3ylK8KrpPDj92EKE6ElDi/U91e+VS3bhURHye0w9ncaITTm+szGFiDL/fcy+0hnrYJdA3IrElZntYk14SCccb2M0LJ+nTFdfzEgsUH8vW5ei986d4HTKUqBvkoU+JAtHXTYq1sKNSd4L3Xm5fZ0OPpdIKEWqHDntjsMRsX62eTON+iC1OVsKK2vRqvSbVLvE45ww3N6iZNBG1gewcC8v5wJwonmA=="";
    byte[] decodedBytes = null;
    try {
        //Cipher c = Cipher.getInstance(""AES/ECB/PKCS7Padding"", ""AndroidOpenSSL"");
        //Cipher c = Cipher.getInstance(""RSA/ECB/OAEPWithSHA-256AndMGF1Padding"", ""AndroidOpenSSL"");
        Cipher c = Cipher.getInstance(""RSA/ECB/PKCS1Padding"", ""AndroidOpenSSL"");
        c.init(Cipher.DECRYPT_MODE,  getPrivateKey(context) );

        decodedBytes = c.doFinal(Base64.decode(value, Base64.DEFAULT));


        //decodedBytes = c.doFinal(value.getBytes(""ISO-8859-1""));

    } catch (Exception e) {
        e.printStackTrace();
    }

    return new String(decodedBytes);
}  

public static PrivateKey getPrivateKey(Context context){

    // reads the key_public key stored in a file
    InputStream is = context.getResources().openRawResource(R.raw.key_private);

    BufferedReader br = new BufferedReader(new InputStreamReader(is));
    List&lt;String&gt; lines = new ArrayList&lt;String&gt;();
    String line = null;

    try {


        while ((line = br.readLine()) != null)
            lines.add(line);


        // removes the first and last lines of the file (comments)
        if (lines.size() &gt; 1 &amp;&amp; lines.get(0).startsWith(""-----"") &amp;&amp; lines.get(lines.size()-1).startsWith(""-----"")) {
           lines.remove(0);
         lines.remove(lines.size()-1);
        }

        // concats the remaining lines to a single String
        StringBuilder sb = new StringBuilder();
        for (String aLine: lines)
            sb.append(aLine);
        String keyString = sb.toString();
        byte [] encoded = Base64.decode(keyString, Base64.DEFAULT);



    PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(encoded);

        KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");

        PrivateKey myPrivKey = keyFactory.generatePrivate(keySpec);

        return myPrivKey;

    }catch (Exception e){

        e.printStackTrace();
    }
    return null;

}
</code></pre>

<p>Finally, I call the first function from the main activity:</p>

<pre><code>String decryptedString =  AppUtils.decryptString(encryptedString, MainActivity.this);
</code></pre>

<p>I am attaching my private key for reference:</p>

<pre><code>-----BEGIN PRIVATE KEY-----
MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDuDOP1sBXEKUwR
WQcH459iGj74fGPqnIFJ+cOxNFFeymXs0L0u4n7v6NCAGvZJ5HtdWeUbT+xMMNMW
k8swrQs/qZ36KXzxhL6hy0gj4i86G5L73vQ39g/qlnxhfR+OxhVnDUE4TOt9xhN9
20Mf6xVhVOVmUQwhny6sQqvkhaebzJ32QuTlHFVT8mMGSTwXcHUqRi2ApeyRW9ln
BCLf/P5k+/O5W4lRmyfvumZoipegf0e75hGmgJYxXETomU50DmLMNdQ05/rlpcW5
FEm3Gf60pd+/mqkB+3LlyTPAM7sEfwKgL+CZSqYtz3O/m7tYSK7BtCIbE1bvksjj
bPQA1DYXAgMBAAECggEAZDvDRLEnCRjGccuFvVmnw7v/ZcuimqfZfJeRQa0g0gPx
FNzzu6kc/9GM8VPo/kYZd74hTPXDLnWkfC4w8Ub7pIu7/Bi6Bkv5pNCeiJV1g0cX
BbzkIigWnZVNvBLeVdSsMF8RZi5lPelITcckJW1r7Da9/O4FaKbJFTlhfXCVmXCn
74Bs0q8QZHA/WLwcy5DP+uqdko8T3vtBSPx7HEBbEhy94SEAsQfkdLTa0KQ2WlLI
ythR5DH0GUIoTIBeFsM7w2Ldj7EYbviC8OlIu3h3wHwPutAVzweqsSq5OPAwPnNP
oQZz6gqNaldE0jwVDD8aoLOzCrw1+NW0AmzWJx1VgQKBgQD5g1m8PagCwb/2BQqi
Q3ORjmbHS9dIo3IV+2RM7bYag5fv5CEfApH42rGzPr/pebmYIVQnfYkqDrfHmR95
56+7bOXxKDTkSCdursRa23L3WbIokhLJOPVr7FARc+mKFUEkrpHZcDsIoIUw+Bn4
Sa2myhFvazuJoGpjjAk8olpc1wKBgQD0PT+/ahG5tWW9Nt7wvQfi+KWW5l0fWb+R
ozbuFnZbmKkQZ45bCdU/G3qImtdtTynGX4LjaSyh/vEtebLlrCsfzRc7hQRHpM3o
9tjPUX8zSFNQQA8I7+iTQRQtdiAeOeEt5kethWG9qSbnkBFzkXwVhdvdkhRy4EzW
aKVwU26IwQKBgQCa4oiPq45ht7fbliGVvF0/G7B9QnzvIFavgpAumNkT+GAWj/xn
bYcDfW4VoHwtCFzHLNk6clj0/JHkmw7I86NIqz7JxnWex5OCx4YoCFWDafCH8rUq
p+rhBZ5mVxe/mZYImTz8Rwi+QDatwTUNxV7ATGsqSNx6gFPKW6FYPEfvnQKBgEvd
fqCxjOH3k6urkKKMxRdejukJk2F6mkPdw+E+vvMCv3kmAZULv96DZZNrLYF5tos0
/c4vzDphm365r7Uhvp95MD8/uS2b5o33py72rKE8VQy3aTQoeUDMVT0t1RoudmCw
iBFBPjQQh9Ij8RfJ2BZDZyEzEAEC5TswdDso30vBAoGBAJQqlK6mjhyCmqAs8V2j
vHbzv2/NTG2sYOaMGMsk1Zeh5nQq98rHA/7s1eEkX4AlC38QXisvKi7ywYrlpZoz
+K0Z1sd0tlysH74cK8xWDnLQ4j9l0rD9RtxYHlrdldrsP4P4rE1a2SwAchM3GDpG
R3LcU9BOe9ch+aW3b+PRIkgK
-----END PRIVATE KEY-----
</code></pre>

<p>Here is the output:</p>

<pre><code>NDcxMDQ3MjguMTQ2ODg3NTI4MTr4iAAldbBVX2RD3cNw/rlKpmOp1p8YXIYqUVlvX7rmgg==��
</code></pre>

<p>The decrypted string should end with ""=="".Can someone kindly help me to figure out, how to remove the special characters at the end of the decrypted string.</p>

<p>Thanks</p>
","<p>These values at the end must have been added during encryption. They are probably <code>00</code> valued bytes that were added by a language with null terminated strings or similar. The point is that PKCS#1 unpadding will fail if the ciphertext itself is altered, so the only reasonable explanation is that the values have been included in the plaintext.</p>

<p>Print out the <code>decodedBytes</code> in hexadecimals to find out the values. You can likely get rid of them by using the <code>String#trim()</code> method.</p>
","250","<android><encryption><rsa><private-key>","0","0","1","2016-08-02 19:07:59","","5","","","","","2016-08-02 16:17:09",""
"52111045","C#: Keyset does not exist in Azure Functions on consumption plan","<p>Many of us faced ""Keyset does not esist"" exception when trying to work with X509Certificate2.
The symptoms are:</p>

<ol>
<li><p>You load .pfx into X509Certificate2</p></li>
<li><p>You use it in any operation requiring private key</p></li>
<li><p>You get ""Keyset does not exist"" exception.</p></li>
</ol>

<p>In code it looks like the following:</p>

<pre><code>string CreateJWTToken(byte[] certificate, string psw, string serviceUserIss, string serviceUserSub, string serviceUserAud)
    {
        using (X509Certificate2 combinedCertificate = new X509Certificate2(certificate, psw,
              X509KeyStorageFlags.MachineKeySet
            | X509KeyStorageFlags.PersistKeySet 
            | X509KeyStorageFlags.Exportable))
        {
            var signingKey = new X509SecurityKey(combinedCertificate);
            var credentials = new Microsoft.IdentityModel.Tokens.SigningCredentials(signingKey, SecurityAlgorithms.RsaSha256);
            var header = new JwtHeader(credentials);
            var payload = new JwtPayload
            {
               { ""iss"", serviceUserIss},
               { ""sub"", serviceUserSub},
               { ""aud"", serviceUserAud},
               { ""exp"", $""{unixTimestamp}""}
            };
            var secToken = new JwtSecurityToken(header, payload);
            var handler = new JwtSecurityTokenHandler();
            return handler.WriteToken(secToken); // here exception is thrown
        }
    }
</code></pre>

<p>It works fine locally, and even in local Azure Functions host, but for some reason it sometimes (like in 5% cases) throws ""Keyset does not exist"" when run in Azure Function (timer-triggered) on consumption plan.</p>
","<p>The issue appeared to be in some nuances of how Azure Functions on consumption plan works with certificates.</p>

<p>I do not know details, but <code>X509Certificate2</code>'s PrivateKey is sometimes cleared by... By something. Is it aggressive garbage collector? Is it something related to auto-scaling, or to resources shared between different hosts? I do not know.</p>

<p>But issue seems to be resolved by avoiding usage of X509Certificate2, by using BouncyCastle's mechanism to load private key from PFX. See code snippet below.</p>

<p>Snippet below also uses Jose.JWT for creating JWT token.</p>

<pre><code>    private static string CreateJWTTokenBountyCastle(byte[] certificate, string psw, string serviceUserIss, string serviceUserSub, string serviceUserAud)
    {
        string jwt;
        using (RSACryptoServiceProvider rsax = OpenCertificate(certificate, psw)) // open using BouncyCastle and avoid usage of X502Certificate2
        {
            Dictionary&lt;string, object&gt; payload = new Dictionary&lt;string, object&gt;(){
                { ""iss"", serviceUserIss },
               { ""sub"", serviceUserSub},
               { ""aud"", serviceUserAud},
            jwt = Jose.JWT.Encode(payload, rsax, Jose.JwsAlgorithm.RS256);
        }
        return jwt;
    }
    private static RSACryptoServiceProvider OpenCertificate(byte[] certB, string pwd)
    {
        MemoryStream ms = new MemoryStream(certB);

        Pkcs12Store st = new Pkcs12Store(ms, pwd.ToCharArray());

        var alias = st.Aliases.Cast&lt;string&gt;().FirstOrDefault(p =&gt; st.IsKeyEntry(p));
        AsymmetricKeyEntry keyEntry = st.GetKey(alias);

        var kkey = DotNetUtilities.ToRSAParameters((RsaPrivateCrtKeyParameters)keyEntry.Key);
        RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();
        rsa.ImportParameters(kkey);
        return rsa;
    }
</code></pre>
","248","<c#><azure><security><azure-functions><private-key>","0","0","1","2018-08-31 08:02:09","","0","","","","","2018-08-31 08:02:09",""
"20942164","How do I install my SSH keys on a new computer?","<p>I just switched from PC to Mac. I had been connecting to a server via SSH using a key on the PC. I thought all I'd have to do to connect on the Mac would be copy the <code>.ssh</code> directory into my home directory and then run the <code>ssh</code> command in the terminal with the right credentials, but it doesn't seem to be working.</p>

<p>When I run this command;</p>

<pre><code>ssh [user]@[hostname] -p 2222
</code></pre>

<p>I get this result;</p>

<pre><code>Permission denied (publickey).
</code></pre>

<p>In my <code>.ssh</code> directory, there are three <code>.pub</code> files and three key files with no extension. There's also a <code>known_hosts</code> file and a <code>key_backup</code> directory with some keys in it.</p>
","<p>As long as you get the proper private key that matches the public key that is stored on the remote platform what you described is correct. </p>

<p>You can add in up to three -v on the ssh command to get more debug information. This can confirm it is using the proper keys. Other things to verify is that the owenership and permissions of the keys on both the Mac and the remote boxes are restricted to the user, and none other.</p>
","247","<macos><ssh><private-key>","-1","0","2","2014-01-06 03:20:00","20942388","1","","","","","2014-01-06 02:49:29","2014-03-06 08:45:13"
"20942164","How do I install my SSH keys on a new computer?","<p>I just switched from PC to Mac. I had been connecting to a server via SSH using a key on the PC. I thought all I'd have to do to connect on the Mac would be copy the <code>.ssh</code> directory into my home directory and then run the <code>ssh</code> command in the terminal with the right credentials, but it doesn't seem to be working.</p>

<p>When I run this command;</p>

<pre><code>ssh [user]@[hostname] -p 2222
</code></pre>

<p>I get this result;</p>

<pre><code>Permission denied (publickey).
</code></pre>

<p>In my <code>.ssh</code> directory, there are three <code>.pub</code> files and three key files with no extension. There's also a <code>known_hosts</code> file and a <code>key_backup</code> directory with some keys in it.</p>
","<p>Supposing you did copy the correct keys, you need to add your identities to ssh-agent. Try the following:</p>

<pre><code>ssh-add /Users/&lt;username&gt;/.ssh/id_rsa
</code></pre>

<p>Where <code>&lt;username&gt;</code> is your username and <code>id_rsa</code> is a private key. It's important to use the <strong>absolute path</strong>. Upon success, you'll see something like:</p>

<pre><code>Identity added: /Users/johndoe/.ssh/id_rsa (/Users/johndoe/.ssh/id_rsa)
</code></pre>

<p>Repeat for every key you want.</p>
","247","<macos><ssh><private-key>","-1","2","2","2014-01-06 03:20:00","20942388","1","","","","","2014-01-06 02:49:29","2014-03-06 08:45:13"
"50174961","How to get Bitcoin Private Key from an ExtPrivKey using NBitcoin","<p>So, I am trying to send some money over using NBitcoin, there is a step where i am failing and that is creating de bitcoin secret to sign the transaction, I have the address, and the ExtPrivKey but i haven't gotten any luck signing it, any recommendation, this is my code below.</p>

<pre><code> var priv = mbwallet.SelectedWallet.PrivateKeys[0].ToWif();
        //var ool = new BitcoinSecret(base58, App.Network);
        var privkey = mbwallet.SelectedWallet.PrivateKeys[0].PrivateKey.GetBitcoinSecret(App.Network).ToWif();
        var key = Key.Parse(privkey, App.Network);
        var keysT = key.GetWif(App.Network);
        //var myaddress = mbwallet.SelectedWallet.PrivateKeys[0].PrivateKey.PubKey.GetAddress(App.Network);
        var myaddress = mbwallet.SelectedWallet.CurrentAddress;


        string address = Address.Text;
        var destination = BitcoinAddress.Create(address, App.Network);
        decimal value = Convert.ToDecimal(Value.Text);

        var coins2 = GetCoins(value);


        TransactionBuilder txBuilder = new TransactionBuilder();
        var tx = txBuilder.AddCoins(coins2)
            .AddKeys(keysT)
            .SetChange(myaddress)
            .Send(destination, new Money(value, MoneyUnit.BTC))
            .SendFees(""0.0002"");
        //.BuildTransaction(true);
        var tx2 = txBuilder.BuildTransaction(true);
        //Console.WriteLine(txBuilder.Verify(tx));

        var hello = tx2.ToHex();
        var txRepo = new NoSqlTransactionRepository();
        //txRepo.Put(tx.GetHash(), tx);
        //Assert(txBuilder.Verify(tx)); //check fully signed


        List&lt;ICoin&gt; GetCoins(decimal sendAmount)
        {
            //var mbwallet = (root.DataContext as MainWindowViewModel);
            var amountMoney = new Money(sendAmount, MoneyUnit.BTC);
            var client = new QBitNinjaClient(App.Network);
            var txInAmount = Money.Zero;
            var coins1 = new List&lt;ICoin&gt;();
            foreach (var balance in client.GetBalance(mbwallet.SelectedWallet.CurrentAddress,//MBWallet.Wallet.Address,
        true).Result.Operations)
            {
                var transactionId = balance.TransactionId;
                var transactionResponse =
        client.GetTransaction(transactionId).Result;
                var receivedCoins = transactionResponse.ReceivedCoins;
                foreach (Coin coin in receivedCoins)
                {
                    if (coin.TxOut.ScriptPubKey ==
                        mbwallet.SelectedWallet.CurrentAddress.ScriptPubKey)//MBWallet.Wallet.BitcoinPrivateKey.ScriptPubKey) // this may not be necessary
                    {
                        coins1.Add(coin);
                        txInAmount += (coin.Amount as Money);
                    }
                }
            }
            return coins1;
        }
</code></pre>
","<p>For what I see in the code you already add the private key to the builder so basically you only need to sign , something like this</p>

<p>Transaction signed = txBuilder.SignTransaction(tx2);</p>
","246","<c#><bitcoin><private-key><nbitcoin>","1","1","1","2019-01-17 18:38:43","","0","","","","","2018-05-04 12:27:34",""
"32406847","Private Key not present after certificates chain importation","<p>I have installed four certificates as my CA suggests me but once I list certificates any private key is showed:</p>

<pre>
keytool -list -keystore ertstore02.keystore -storepass pass4certstore02

Keystore type: JKS
Keystore provider: SUN

Your keystore contains 4 entries

root, Sep 4, 2015, trustedCertEntry,
Certificate fingerprint (SHA1):  XX:XX:X:XX
latiendamiga.com, Sep 4, 2015, trustedCertEntry,
Certificate fingerprint (SHA1):  XX:XX:X:XX
intermed, Sep 4, 2015, trustedCertEntry,
Certificate fingerprint (SHA1):  XX:XX:X:XX
root_01, Sep 4, 2015, trustedCertEntry,
Certificate fingerprint (SHA1):  XX:XX:X:XX
</pre>

<p>Installation was executed as follow:</p>

<pre>
keytool -import -trustcacerts -keystore certstore02.keystore -alias root -file gd-class2-root.crt -storepass pass4certstore02
keytool -import -trustcacerts -keystore certstore02.keystore -alias root_01 -file gdroot-g2_cross.crt -storepass pass4certstore02
keytool -import -trustcacerts -keystore certstore02.keystore -alias intermed -file gdig2.crt -storepass pass4certstore02
keytool -import -trustcacerts -keystore certstore02.keystore -alias latiendamiga.com -file certissues4me.crt -storepass pass4certstore02
</pre>

<p>Then it doesn't work and I don't know how fix it.</p>

<p>Could somebody help me to fix it?</p>

<p>Thanks in advance. </p>
","<p>You have to import the signed certificate using the same alias you used when generating the keypair and the CSR. Otherwise they are not associated.</p>
","245","<ssl><certificate><private-key>","0","0","1","2016-04-21 12:36:10","32408061","2","","301832","","2016-04-21 12:36:10","2015-09-04 21:29:52","2019-07-31 01:29:32"
"50831804","How to HSM device store and protect private key?","<p>I am studing about HSM device  but i dont know this device protects and saves the Key?
HSM saves key outside or inside? If inside, How many key the HSM can protect?</p>

<p>Thanks.</p>
","<p>That all depends on the HSM in question.  Different vendors do things differently.</p>

<p>There are some which store the keys in encrypted files (Thales springs to mind), while others store them internally (Gemalto springs to mind here).</p>

<p>The number of keys that can be stored is often dictated by which option boxes you tick when you order the device.  The more you pay, the more it will store.</p>
","245","<security><private-key><pci-compliance><hsm>","0","1","1","2018-07-20 15:57:26","","0","","1076479","","2018-07-20 15:57:26","2018-06-13 07:50:32",""
"31721916","SSH connect with key","<p>I am trying to connect (to localhost now just for test purpose) using public/private key pair but I am unsuccesful at the moment.</p>

<p>Here is what i have done so far:</p>

<ol>
<li><code>ssh-keygen -t rsa</code> 
(no passphrase and store the key in <code>id_rsa</code> (private) and <code>id_rsa.pub</code> (public)</li>
<li><p>Set permissions</p>

<pre><code>chmod 700 $HOME/.ssh
chmod 600 $HOME/.ssh/id_rsa*
</code></pre></li>
<li><p>Copied <code>id_rsa.pub</code> content to <code>authorized_keys</code> and added permission <code>chmod 600</code></p></li>
</ol>

<p>Now when I try to log in with <code>ssh username@localhost</code> it still asks me for a password. </p>

<p>Am I doing something wrong?</p>

<p>The system i work on is Scientific Linux 6.4 (Carbon)</p>
","<p>You should check your system's log.</p>

<p>Let me show you an example, if I've my home directory with a <code>0777</code> mask, <code>sshd</code> will refuse to log me and I can find why in the <code>/var/log/auth.log</code> file (I'm on an Ubuntu 15.04 workstation):</p>

<pre><code>Jul 30 13:14:04 hostname sshd[16232]: Authentication refused: bad ownership or modes for directory /home/max
Jul 30 13:14:05 hostname sshd[16232]: Connection closed by 127.0.0.1 [preauth]
</code></pre>

<p>You should specify your Operating System in order to have a more focused answer.</p>
","241","<authentication><ssh><private-key><public-key>","0","0","1","2015-07-30 11:57:43","","1","0","4846578","","2015-07-30 11:57:43","2015-07-30 10:57:39",""
"54670096","Generate CSR and Private key in Java code","<p>I have to build a integration with an API that requires the system to send a CSR to register the Certificate.</p>

<p>Example:</p>

<pre><code>POST https://xxx.api/v1/cert/request
Header:
Content-Type: text/plain
Authorization: Bearer {{access_token_tmp}}
Body:
-----BEGIN CERTIFICATE REQUEST-----
...
-----END CERTIFICATE REQUEST-----
</code></pre>

<p>I want make the process automatic because our application will run in several clients.</p>

<p>They recommend use opensll to generate CSR and key:</p>

<pre><code>openssl req -new -subj ""/CN=CliendID/OU=Name Client/L=RIO/ST=RJ/C=BR"" -out partner.csr -nodes -sha512 -newkey rsa:2048 -
keyout partner.key
</code></pre>

<p>I found codes teaching how generate CRL, but using sun's proprietary class:
<a href=""https://www.journaldev.com/223/java-generate-csr-program"" rel=""nofollow noreferrer"">https://www.journaldev.com/223/java-generate-csr-program</a></p>
","","240","<java><keystore><private-key><csr>","0","","0","2019-02-13 12:21:50","","1","","","","","2019-02-13 12:21:50",""
"48080919","C++ access trusted root certificates","<p>I have created a public/private key pair with openSSL and converted it into a <code>*.pfx</code> file with openSSL. I then imported this file into the <code>Windows Trusted Certificate Store</code>.</p>

<p>I now would like to access the private key from this certificate via c++ code.
Is this possible? If yes, can you please point me into a direction? I haven't found anything suitable yet.</p>
","<p>Yes it is possible to access the private key.</p>

<p><a href=""https://msdn.microsoft.com/en-us/library/windows/desktop/aa376050(v=vs.85).aspx"" rel=""nofollow noreferrer"">CertEnumCertificatesInStore</a> returns <a href=""https://msdn.microsoft.com/en-us/library/windows/desktop/aa377189(v=vs.85).aspx"" rel=""nofollow noreferrer"">PCCERT_CONTEXT </a> structure which contain the encoded and decoded representations of certificates. Passing this structure to the <a href=""https://msdn.microsoft.com/en-us/library/windows/desktop/aa379885(v=vs.85).aspx"" rel=""nofollow noreferrer"">CryptAcquireCertificatePrivateKey</a> obtains the private key from the certificate</p>
","237","<c++><windows><certificate><private-key><cryptoapi>","0","1","1","2018-01-04 09:03:38","","1","1","608639","","2018-01-04 03:57:11","2018-01-03 16:03:22",""
"13351637","Result is not random in Android","<p>I am implementing an encryption algorithm which uses large numbers, so while making a java application I have to use the class BigInteger.</p>

<p>However, when I tried to implement the same in an android application the constructor </p>

<pre><code>public BigInteger(int bitLength,int certainty,Random rnd), 
</code></pre>

<p>no random BigInteger is generated (The same integer is generated again and again 35879 :P) . A random BigInteger is generated successfully in a simple java Application.</p>

<p>For a reference,</p>

<p><a href=""http://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html#constructor_detail"" rel=""nofollow"">http://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html#constructor_detail</a></p>

<p>Also, Please tell me if I import something of the form java.util.* , is it expected to work in any android application ?? </p>

<p><strong>Please make your comments if Android does not support BigInteger or any other class exists similar to that which is supported ???</strong></p>

<p>Here the method systemoutprintln() is used for printing the respective string to a layout.</p>

<p>Here is a code for your reference,</p>

<pre><code>public class keyGenerator {

/**
 * @param args the command line arguments
 */

  static  Vector check = new Vector();


  static protected BigInteger p= new BigInteger(""161"");
  static protected BigInteger q= new BigInteger(""47"");
  static protected Random s =new Random();
  static protected BigInteger n = new BigInteger(""1"");
  static protected BigInteger trails;
  static protected BigInteger lambda ;
  static protected BigInteger nsq  = new BigInteger(""1"");
  static protected BigInteger g = new BigInteger(""1"");
  static protected BigInteger temp = new BigInteger(""1"");
  static protected long timetkn;
  static protected View myview;
  static protected String[] printarray = new String[1000];
  static protected int ii=0;

static protected int maxbit;
private static BigInteger two = new BigInteger(""2"");

public keyGenerator() {

  //  Activity activity = new Activity();
// et.append(""Second Part!!"");
// EditText et = (EditText)activity.findViewById(R.string.second);
//    et.append(""Working"");


    long keyStart = SystemClock.uptimeMillis();
    p = new BigInteger(7,1,s);

            Systemoutprintln(""Assumed p :"" +p.toString());
  /*  while(!isPrime(p) &amp;&amp; ( (p.compareTo(two)==1) || (p.compareTo(two))==0) )
    {
            p = new BigInteger(7,1,s);

    Systemoutprintln(p.toString());
    }*/


    Systemoutprintln(""Assumed q :"" +p.toString());
    q = new BigInteger(7,1,s);
</code></pre>
","<p>This should work, according to the java docs on <a href=""http://docs.oracle.com/javase/1.4.2/docs/api/java/util/Random.html#Random%28%29"" rel=""nofollow noreferrer"">Random numbers</a>. However, I am noticing that you are printing the bigInteger p twice, with two different labels. Is it remotely possible that you are mixing them up?</p>

<p>EDIT: With some help from digitaljoel, I found this prior quest:</p>

<p><a href=""https://stackoverflow.com/questions/9441598/is-there-a-java-equivalent-to-openssls-bn-rand-range"">Is there a java equivalent to OpenSSL&#39;s bn_rand_range?</a></p>

<p>Essentially, you should use SecureRandom, and use the method given there, namely:</p>

<pre><code>Random r = new SecureRandom();    
BigInteger q = something_big;
BigInteger ans;

do
    BigInteger(bits_in_q, r);
while (ans &gt; q)
</code></pre>
","232","<java><android><encryption><private-key>","3","2","2","2013-11-24 04:55:29","13351790","4","","1102512","","2013-11-24 04:55:29","2012-11-12 21:13:11",""
"13351637","Result is not random in Android","<p>I am implementing an encryption algorithm which uses large numbers, so while making a java application I have to use the class BigInteger.</p>

<p>However, when I tried to implement the same in an android application the constructor </p>

<pre><code>public BigInteger(int bitLength,int certainty,Random rnd), 
</code></pre>

<p>no random BigInteger is generated (The same integer is generated again and again 35879 :P) . A random BigInteger is generated successfully in a simple java Application.</p>

<p>For a reference,</p>

<p><a href=""http://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html#constructor_detail"" rel=""nofollow"">http://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html#constructor_detail</a></p>

<p>Also, Please tell me if I import something of the form java.util.* , is it expected to work in any android application ?? </p>

<p><strong>Please make your comments if Android does not support BigInteger or any other class exists similar to that which is supported ???</strong></p>

<p>Here the method systemoutprintln() is used for printing the respective string to a layout.</p>

<p>Here is a code for your reference,</p>

<pre><code>public class keyGenerator {

/**
 * @param args the command line arguments
 */

  static  Vector check = new Vector();


  static protected BigInteger p= new BigInteger(""161"");
  static protected BigInteger q= new BigInteger(""47"");
  static protected Random s =new Random();
  static protected BigInteger n = new BigInteger(""1"");
  static protected BigInteger trails;
  static protected BigInteger lambda ;
  static protected BigInteger nsq  = new BigInteger(""1"");
  static protected BigInteger g = new BigInteger(""1"");
  static protected BigInteger temp = new BigInteger(""1"");
  static protected long timetkn;
  static protected View myview;
  static protected String[] printarray = new String[1000];
  static protected int ii=0;

static protected int maxbit;
private static BigInteger two = new BigInteger(""2"");

public keyGenerator() {

  //  Activity activity = new Activity();
// et.append(""Second Part!!"");
// EditText et = (EditText)activity.findViewById(R.string.second);
//    et.append(""Working"");


    long keyStart = SystemClock.uptimeMillis();
    p = new BigInteger(7,1,s);

            Systemoutprintln(""Assumed p :"" +p.toString());
  /*  while(!isPrime(p) &amp;&amp; ( (p.compareTo(two)==1) || (p.compareTo(two))==0) )
    {
            p = new BigInteger(7,1,s);

    Systemoutprintln(p.toString());
    }*/


    Systemoutprintln(""Assumed q :"" +p.toString());
    q = new BigInteger(7,1,s);
</code></pre>
","<p>If you look at <a href=""http://developer.android.com/reference/java/math/BigInteger.html"" rel=""nofollow"">the docs</a> you will see that the rand argument in the constructor you are calling is unused.</p>

<p><code>Implementation Note: the Random argument is ignored. This implementation uses OpenSSL's bn_rand as a source of cryptographically strong pseudo-random numbers.</code></p>

<p>Perhaps remove it and supply null as the argument, or remove the certainty argument, in which case it will use your Random object (according to the docs.)</p>
","232","<java><android><encryption><private-key>","3","3","2","2013-11-24 04:55:29","13351790","4","","1102512","","2013-11-24 04:55:29","2012-11-12 21:13:11",""
"55922319","How can I determine the format of an ssh private key file?","<p>I am developing an application that uses ssh keys (JSch), and it won't accept some ssh keys. I want to make guidelines to users so they know which keys they can use and which one they can't. Hence the question: how can I determine the format of an ssh private key file, going beyond the RSA/etc and the number of bits?</p>

<p>For instance, at the end of this question is a 3072 bit RSA key that was generated using <code>ssh-keygen</code> with no parameters on android/termux. it works in <code>ssh</code> but both JSch and JuiceSSH refuse to even open it. <code>openssl rsa -text -noout -in file</code> says:</p>

<blockquote>
  <p>unable to load Private Key<br>
  1991864336:error:0909006C:PEM routines:get_name:no start line:../crypto/pem/pem_lib.c:745:Expecting: ANY PRIVATE KEY</p>
</blockquote>

<p>I can fix this by running <code>ssh-keygen -p -m PEM -f file</code>, and this might be a workaround for some users, but it would help to know in advance which formats work and which don't.</p>

<pre><code>-----BEGIN OPENSSH PRIVATE KEY-----
b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn
NhAAAAAwEAAQAAAYEAxeXW062gz3y29H9nni0pz+IDetDpMWxOsyLXAIJuyRrXNqmcsLTz
f2qMP4ua3ENkqjoa+wwv95Ft+X4eb920FoKCL4vzpSWgFH8MfCL8Szs1y0/vgzVEipBMCh
FwIXqtnFaTvVS69vgZKARspIEod9z/Qvh0fsz5xCHlGwL2xy5eiUL2gjLXcfQxJQft5oo8
POBFSjCxWUwuE7MrqiaFbSUk3ULVyBVwTAJdC363oYWD5DV2WlYvxsEFQREbn4yRVjvzfe
1hKeKA/JnzZVYrCLOt5hOBTppY0rSSsiGCvhX+hKNStgG2JMSheBfjytENZ3hx050vfL6Z
5zOib97Gb+5qygbtcVosYsfXK34zOiMdDOBojItw0s0aZ3nSF+D1l+XqBaeHIBeX3+JoyN
kYjH/JPC1/hykrbi0ueOmaYI2xmBrqT8Z7aUX3EyKSOWNOMAWTiPDB2SFpjoQHuznq7nFg
/8zBbAU6/J3u/28sivhKDHXZLcZ7aw8glm3fr5DzAAAFiDYAnjo2AJ46AAAAB3NzaC1yc2
EAAAGBAMXl1tOtoM98tvR/Z54tKc/iA3rQ6TFsTrMi1wCCbska1zapnLC0839qjD+LmtxD
ZKo6GvsML/eRbfl+Hm/dtBaCgi+L86UloBR/DHwi/Es7NctP74M1RIqQTAoRcCF6rZxWk7
1Uuvb4GSgEbKSBKHfc/0L4dH7M+cQh5RsC9scuXolC9oIy13H0MSUH7eaKPDzgRUowsVlM
LhOzK6omhW0lJN1C1cgVcEwCXQt+t6GFg+Q1dlpWL8bBBUERG5+MkVY7833tYSnigPyZ82
VWKwizreYTgU6aWNK0krIhgr4V/oSjUrYBtiTEoXgX48rRDWd4cdOdL3y+meczom/exm/u
asoG7XFaLGLH1yt+MzojHQzgaIyLcNLNGmd50hfg9Zfl6gWnhyAXl9/iaMjZGIx/yTwtf4
cpK24tLnjpmmCNsZga6k/Ge2lF9xMikjljTjAFk4jwwdkhaY6EB7s56u5xYP/MwWwFOvyd
7v9vLIr4Sgx12S3Ge2sPIJZt36+Q8wAAAAMBAAEAAAGAdd2LUq3R3mJAMWUEWOA7S/Yn7m
koymfgg67XcRU+WIak8YiZq2FKuXPDLkG+rTtyZDSRRz6d/wxd/L/R7vyTuuhmE11+crjz
G+IDlJfdvgz44Cuu0m3Scdi5gTGboEUJy9iAy74AUQG5Me1Yq63FZYZ5ffCuqar5g4hQhQ
MB6eXDJmt8mFUhnlw7PPv5BFsGv5cvjZ1ss2u88by/3+prg3Mg/qtE2pNyO8MYmbUSN6Bm
ym/RGsLEV9M0hulik2dLSFfChfywm0//fBfD3L2Gusvr+sh9xq3W3e6qYilmy/QhSNy1XV
brDFGAzqmTISoeblZscmAsA1bKvt3rsU0Lfkxom3NnyXvSGJ7LXy+tzInu873+p2gyCylB
c4KpepodLGI8xLH6RFiyV4g0sFWgFROE9eLSR1mNa8tA54jD6NzEoy6ThlLnwH00DKccb1
6zNK0aNaJyXVEOUd5D0OR3/XkH9DhSl1W0GMHP9Y4JVgxWp1YMFqqYOyQqt9zNGO1JAAAA
wQCb63qWGLJp4RKdCyqkE1gdp4ohcgeofkRZvTPHZ6cepXDYSrefoxbOiFg6AmvWmyJxW+
pqjDaDj1OBvk729JdqBDKI/VyGxp992hIVssllD/MTvJR4omepfj91HsWRmlMSkpeGBAre
2gxI6oRVT/J/6oegUATeQOGOMunZIv6Q1JKcda9/zjPL4Pg9xDzp+VyfoMZpLNKp1F2tzT
VC6SueiDR0INVhWLOtWUSMZCWrvhMQmwz5jreuzkNallEdb/YAAADBAOiPLZbhMvUGCwwu
qodmzHGAQ7TrG1ifF8s/6weENsr2SPAJ7t+nbjmjtwlq+Sb+ye49cRh2jElqFQ3ckJVWfA
3WFkv7T576o2/Duye023i2coPmaZ0V44Qf3jVnV2Dl3663E7bQt4xYCNU4Odaq4EdhBsyy
ey/jIRR13UVfWf3q9zRvOWEk5kaE92bN0L8AEX2CfV6cTSrV8oHxLSG1RAr4706jXXV/34
N4QYwfCap1GW2rcPUu7oX+RMOk8mMgnQAAAMEA2dhG3XHIHbScvSs9m/C5WjIJ+uBKNeP5
YODIoy9cy9oK9AUFWr+RlSRv1rlx2/y2krsojKI0Y/GEW/0aNt85vD400MMDAgKx4Nl99C
uVXXysH9Y0BjSKZ/bqnYN/FL6apWrTxS7s3ZJTkuHgjf1ymo3ySLUyYX4wkJtTx71BJFg5
6FlKmYZKu6JSIoIzDKR6Uaqb8s0HOgj9a9bf7kXBk2CWfYz1BU777NqQdZAJdJtSH52fXg
Rlk/d8DHNpBVrPAAAAEXUwX2ExNzFAbG9jYWxob3N0AQ==
-----END OPENSSH PRIVATE KEY-----
</code></pre>
","","227","<ssh><private-key><openssh>","1","","0","2019-04-30 13:45:46","","2","","","","","2019-04-30 13:45:46",""
"54138952","How do I convert a SSH2 PUBLIC KEY (rsa-key file) to PEM? (Base-64 encoded public key of X.509 certificate)","<p>I have a private/public key that was generated by Putty in the following format:</p>

<pre><code>SSH2 PUBLIC KEY rsa-key
</code></pre>

<p>However, I am trying to get it to work with <a href=""https://www.docebo.com/knowledge-base/authentication-api-ssp-app-grant-types/#post-simple-toc-heading-6"" rel=""nofollow noreferrer"">Docebo API using the JWT Grant Type</a>, which requires a different format (according to <a href=""https://stackoverflow.com/questions/51334239/docebo-setting-up-oauth-jwt-bearer-grant-type-public-key-is-invalid"">this post</a>).</p>

<p>How would I convert my key(s) to work with that format?  Is there a way within Putty?</p>
","<p>I figured out the steps to take to get the proper format of key using OpenSSL:</p>

<pre><code>openssl genrsa -out private.key 1024
openssl req -new -x509 -key private.key -out publickey.cer 
openssl x509 -in publickey.cer -out publickey.pem
</code></pre>
","225","<putty><public-key-encryption><private-key><pem>","0","1","1","2019-01-11 19:04:32","","3","1","","","","2019-01-11 00:51:01",""
"40494738","Generating non-compatible certificate with a CA","<p>I'm using this stretch of code to create a request, which will be sent to validation in my CA, but when arrives there is denied:</p>

<p>Using:</p>

<ul>
<li>.NET framework 3.5</li>
<li>Is a Dll project</li>
<li>IIS 6.0</li>
<li>CertEnroll.dll</li>
<li><p>There is no possibility to update technology</p>

<pre><code>[ComVisible(true), Description(""Create User Key Pair"")]
public String CreateBase64KeyPair(string CN)
{
    string msg = string.Empty;

    try
    {
        CX509CertificateRequestCertificate objPkcs10 = (CX509CertificateRequestCertificate)Activator.CreateInstance(Type.GetTypeFromProgID(""X509Enrollment.CX509CertificateRequestCertificate""));
        IX509PrivateKey objPrivateKey = (IX509PrivateKey)Activator.CreateInstance(Type.GetTypeFromProgID(""X509Enrollment.CX509PrivateKey""));
        CCspInformation objCSP = (CCspInformation)Activator.CreateInstance(Type.GetTypeFromProgID(""X509Enrollment.CCspInformation""));
        CCspInformations objCSPs = (CCspInformations)Activator.CreateInstance(Type.GetTypeFromProgID(""X509Enrollment.CCspInformations""));
        CX500DistinguishedName objDN = (CX500DistinguishedName)Activator.CreateInstance(Type.GetTypeFromProgID(""X509Enrollment.CX500DistinguishedName""));
        CX509Enrollment objEnroll = (CX509Enrollment)Activator.CreateInstance(Type.GetTypeFromProgID(""X509Enrollment.CX509Enrollment""));
        CObjectIds objObjectIds = (CObjectIds)Activator.CreateInstance(Type.GetTypeFromProgID(""X509Enrollment.CObjectIds""));
        CObjectId objObjectId = (CObjectId)Activator.CreateInstance(Type.GetTypeFromProgID(""X509Enrollment.CObjectId""));
        CX509ExtensionKeyUsage objExtensionKeyUsage = (CX509ExtensionKeyUsage)Activator.CreateInstance(Type.GetTypeFromProgID(""X509Enrollment.CX509ExtensionKeyUsage""));
        CX509ExtensionEnhancedKeyUsage objX509ExtensionEnhancedKeyUsage = (CX509ExtensionEnhancedKeyUsage)Activator.CreateInstance(Type.GetTypeFromProgID(""X509Enrollment.CX509ExtensionEnhancedKeyUsage""));


        //  Initialize the csp object using the desired Cryptograhic Service Provider (CSP)
        objCSP.InitializeFromName(YPSIDCSP_NAME);
        //  Add this CSP object to the CSP collection object
        objCSPs.Add(objCSP);                
        //Provide key container name, key length and key spec to the private key object
        objPrivateKey.Length = 1024; //KEY_LEN_MY_DEFAULT
        objPrivateKey.ProviderType = X509ProviderType.XCN_PROV_RSA_FULL; //XEnroll.ProviderType=1
        objPrivateKey.KeySpec = X509KeySpec.XCN_AT_SIGNATURE; //XEnroll.KeySpec=AT_KEYEXCHANGE
        objPrivateKey.KeyUsage = X509PrivateKeyUsageFlags.XCN_NCRYPT_ALLOW_ALL_USAGES;
        objPrivateKey.ExportPolicy = X509PrivateKeyExportFlags.XCN_NCRYPT_ALLOW_EXPORT_FLAG;
        objPrivateKey.MachineContext = false;
        //  Provide the CSP collection object (in this case containing only 1 CSP object) to the private key object
        objPrivateKey.CspInformations = objCSPs;
        //  Create the actual key pair
        objPrivateKey.Create();

        //  Initialize the PKCS#10 certificate request object based on the private key.
        //  Using the context, indicate that this is a user certificate request and don’t provide a template name
        objPkcs10.InitializeFromPrivateKey(X509CertificateEnrollmentContext.ContextUser, objPrivateKey, string.Empty);

        // Key Usage Extension
        objExtensionKeyUsage.InitializeEncode(
            CERTENROLLLib.X509KeyUsageFlags.XCN_CERT_DIGITAL_SIGNATURE_KEY_USAGE |
            CERTENROLLLib.X509KeyUsageFlags.XCN_CERT_KEY_ENCIPHERMENT_KEY_USAGE |
            CERTENROLLLib.X509KeyUsageFlags.XCN_CERT_DATA_ENCIPHERMENT_KEY_USAGE|
            CERTENROLLLib.X509KeyUsageFlags.XCN_CERT_NON_REPUDIATION_KEY_USAGE
        );

        objPkcs10.X509Extensions.Add((CX509Extension)objExtensionKeyUsage);

        // Enhanced Key Usage Extension
        objObjectId.InitializeFromValue(""1.3.6.1.5.5.7.3.2""); // OID for Client Authentication usage

        objObjectIds.Add(objObjectId);

        objX509ExtensionEnhancedKeyUsage.InitializeEncode(objObjectIds);


        objPkcs10.X509Extensions.Add((CX509Extension)objX509ExtensionEnhancedKeyUsage);


        //  Encode the name in using the Distinguished Name object
        //TODO: TDSiS: Validar essa questão da CN
        objDN.Encode(""CN=""+ CN.Trim(), X500NameFlags.XCN_CERT_NAME_STR_NONE);

        //  Assing the subject name by using the Distinguished Name object initialized above
        objPkcs10.Subject = objDN;

        // Create enrollment request
        objEnroll.InitializeFromRequest(objPkcs10);

        return objEnroll.CreateRequest(EncodingType.XCN_CRYPT_STRING_BASE64);
    }
    catch (Exception ex)
    {
        return ex.Message;
    }
}
</code></pre></li>
</ul>

<p>any doubts about the specifications, just tell me.</p>

<p>Thank you in advance for help! :)</p>
","","217","<c#><x509><private-key><public-key><certenroll>","0","","0","2016-11-08 19:15:00","","4","","","","","2016-11-08 19:15:00",""
"50680085","OpenSSL - saving Private Key from string and creating a self-signed x509 certificate","<p>I am using OpenSSl.crypto to create an X509 self signed certificate. I have a private key as a string and would like to use that key to sign the certificate. I am struggling to save the key from a string to the right format that I can then use to load as a PKey object to use with OpenSSL.crypto.load_privatekey(crypto.FILETYPE_PEM, key). I keep getting an error because its probably that I am not saving it in the right format. Please help. Thank you!</p>
","<p>try using <code>class OpenSSL.crypto.PKey</code>to create pkey object
docs here: <a href=""https://pyopenssl.org/en/stable/api/crypto.html#pkey-objects"" rel=""nofollow noreferrer"">https://pyopenssl.org/en/stable/api/crypto.html#pkey-objects</a></p>
","216","<python><python-2.7><openssl><x509><private-key>","-1","0","1","2018-06-04 12:04:50","","0","","","","","2018-06-04 11:58:08",""
"16354808","How can I rsync/scp files/folders among EC2 servers?","<p>I tried to execute scp/rsync command between two of my EC2 servers but I got the error as be low snapshot.</p>

<p>Normally when I <code>ssh connect</code> to my servers via PuTTY, I need to attach a private key. So what I can guess is that the command is requiring the keys.</p>

<p>How can I add the key in the command?</p>

<p><img src=""https://i.stack.imgur.com/NcOnC.png"" alt=""enter image description here""></p>
","<p><a href=""http://linux.die.net/man/1/scp"" rel=""nofollow"">man scp</a> would display an option <code>-i</code>:</p>

<pre><code>  -i identity_file
         Selects the file from which the identity (private key) for RSA authentication is read.  This option is directly passed to ssh(1).
</code></pre>

<p>Since the option is passed to ssh (as noted above), it can be passed to <code>rsync</code>: <code>-e ""ssh -i /path/to/private/key""</code></p>
","216","<ssh><rsync><scp><private-key>","0","2","1","2019-09-30 22:52:22","","1","","472495","","2019-09-30 22:52:22","2013-05-03 08:44:34",""
"49798857","Where to store SSH private key file in application","<p>I am using <a href=""https://winscp.net/eng/index.php"" rel=""nofollow noreferrer"">WinSCP .NET assembly</a> to upload files over SFTP, and one of the <code>SessionOptions</code> <a href=""https://winscp.net/eng/docs/library_sessionoptions"" rel=""nofollow noreferrer"">properties</a> is <code>SshPrivateKeyPath</code> which is the location of the private key file that I created with PuTTYgen. The file is on the <code>C:</code> drive on my PC:</p>

<pre><code>SessionOptions sessionOptions = new SessionOptions
{
    SshPrivateKeyPath = ""C:\Users\blah\Documents\MyPrivateKey.ppk"";
}
</code></pre>

<p><em>note: I actually have the filepath as a config setting, but you get the idea.</em></p>

<p>Doing this makes sense to me as when deployed to a test/live environment, the key and its location will be different.  Also as it's not part of the project it keeps it out of source control.</p>

<p>However I can't seem to find a standard approach to this and I worry that what I'm doing is not the right thing to do.  Any suggestions?</p>
","<p>There's no definitive answer to your question. It's basically something that should be part of your software specification.</p>

<p>But to give some answer:</p>

<p>If the application uses the key for its internal use, i.e. the end user is not aware that the application uses SSH/SFTP to send some data somewhere, the key should be part of the application.</p>

<p>In that case, either deploy the key to your application installation folder or embed it into your binary.</p>

<hr>

<p>Note that this is obviously a security issue. As long as your application need to contain credentials (be it private key or password) of your server, the end user can get hold of the credentials and abuse them. No matter how hard you try to hide them.</p>

<p>So the credentials must have as little privileges as possible. For example, if the application uploads files to the server, the account for which the private key (or password) is for, should allow only the upload and nothing else. It should not allow modification of existing files. It should not even allow listing of exiting files. It should have a limit on file size. Etc, etc. If you are not experienced with this, you really need to get this set up by someone experienced.</p>
","213","<.net><ssh><private-key><winscp><winscp-net>","1","0","1","2018-04-13 09:01:54","49813007","3","1","850848","","2018-04-13 09:01:54","2018-04-12 14:13:24",""
"23857638","Can't restore privateKey RSA","<p>I have this issue about java cryptography.
I take a password from the user then I product a private key and a public key.From the public key I create the cipher and then I store the private key and the cipher.</p>

<p>Then from my second application I read the password again from the user , the cipher file and the private key and then I try to match the password with the decryption of the cipher and the private Key.</p>

<hr>

<p>My first application:</p>

<pre><code>private static byte[] encrypt(byte[] inpBytes, PublicKey key,
String xform) throws Exception {
 Cipher cipher = Cipher.getInstance(xform);
 cipher.init(Cipher.ENCRYPT_MODE, key);
return cipher.doFinal(inpBytes);
}


 String xform = ""RSA"";
 // Generate a key-pair
 KeyPairGenerator kpg = null;
        try {
            kpg = KeyPairGenerator.getInstance(""RSA"");
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(Efarmogi_1.class.getName()).log(Level.SEVERE, null, ex);
        }
 kpg.initialize(512); // 512 is the keysize.
 KeyPair kp = kpg.generateKeyPair();
 /create public and private key
 PublicKey pubk = kp.getPublic();
 PrivateKey prvk = kp.getPrivate();

 //password from user 
 String password = T_Password.getText();

byte[] dataBytes = password.getBytes();
//create cipher
byte[] encBytes = null;
        try {
            encBytes = encrypt(dataBytes, pubk, xform);
        } catch (Exception ex) {
            Logger.getLogger(Efarmogi_1.class.getName()).log(Level.SEVERE, null, ex);
        }

//storing
//cipher
  FileOutputStream cipher = null;
        try {
            cipher = new FileOutputStream( ""Xrhstes\\""+T_Username.getText()+""\\hash_""+T_Username.getText());

            cipher.write(encBytes);//write with bytes

            cipher.close();
        } catch (IOException ex) {
            Logger.getLogger(Efarmogi_1.class.getName()).log(Level.SEVERE, null, ex);
        }

//private key
 byte[] key2 = prvk.getEncoded();
            FileOutputStream keyfos2 = null;
        try {
            keyfos2 = new FileOutputStream(""Xrhstes\\""+T_Username.getText()+""\\private_""+ T_Username.getText()+"".pem"");

            keyfos2.write(key2);

            keyfos2.close();
</code></pre>

<hr>

<p>and this is the second application:</p>

<pre><code>   private static byte[] decrypt(byte[] inpBytes, PrivateKey key,String xform) throws Exception{
Cipher cipher = Cipher.getInstance(xform);
cipher.init(Cipher.DECRYPT_MODE, key);
return cipher.doFinal(inpBytes);
}

//fetch private key           
byte[] prvk1 = new byte[(int)new File(""C:\\...\\""+T_Username.getText()+""\\private_""+ T_Username.getText()).length()]; 

//make it from bytes to private key
  KeyFactory kf= KeyFactory.getInstance(""RSA"");
  PrivateKey prvk=kf.generatePrivate(new PKCS8EncodedKeySpec(prvk1));

//fetch cipher
 byte[] encBytes = new byte[(int)new File(""C:\\...\\""+T_Username.getText()+""\\hash_""+ T_Username.getText()).length()]; 

//decrypt with our password given from user
    String xform = ""RSA"";

         byte[] decBytes = decrypt(encBytes,prvk, xform);

        boolean expected = java.util.Arrays.equals(password, decBytes);
        System.out.println(""Test "" + (expected ? ""SUCCEEDED!"" : ""FAILED!""));
</code></pre>

<hr>

<p>My issue is when I try to retransform the bytes saved , back to privateKey I get multiple errors that key type is invalid(problem starts at decoding PKCS8EncodedKeySpec it is noted that KeySpec is invalid).I tried numerous ways but still the same,could someone guide me where is my mistake ?  thanks in advance!!! </p>
","<p>With the following lines:</p>

<pre><code>byte[] prvk1 = new byte[(int)new File(""C:\\...\\""+T_Username.getText()+""\\private_""+ T_Username.getText()).length()];
</code></pre>

<p>and</p>

<pre><code>byte[] encBytes = new byte[(int)new File(""C:\\...\\""+T_Username.getText()+""\\hash_""+ T_Username.getText()).length()];
</code></pre>

<p>You actually create two empty byte arrays. You only indicate the size of the array using <code>File.length()</code>, which obviously is not correct. Try again after actually reading the files, e.g. using the <a href=""http://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#readAllBytes-java.nio.file.Path-"" rel=""nofollow""><code>readAllBytes</code></a> method (requires Java 8 or higher).</p>
","213","<java><security><encryption><rsa><private-key>","-1","0","1","2014-05-25 23:11:33","","0","3","","","","2014-05-25 16:44:52",""
"18876996","OSX, code signing private keys","<p>Where can I find the private key used to generate the mac code signing certificate?</p>

<p>I have looked within keychain but cannot find it.</p>
","<p>Okay quite simple now I have found the solution. In order to view the private keys used when signing you need to open keychain as root.</p>

<pre><code>sudo /Applications/Utilities/Keychain\ Access.app/Contents/MacOS/Keychain\ Access
</code></pre>

<p>When opened view the login chain > Keys. Your private and public keys for your certificates will be found here. You can then right click to export these out.</p>
","213","<macos><code-signing><private-key>","0","0","1","2013-09-19 09:46:45","18891395","0","","","","","2013-09-18 15:58:27",""
"26675318","Error while importing Certificate with Private key","<p>I want to create an <code>X509Certificate2</code> object in my C# by importing a Certificate which contains private key.</p>

<p>This certificate I have exported from my Database using the following LOC –</p>

<p><code>BACKUP CERTiFiCATE TestCert
       TO FiLE = 'C:\Avdhut\TestCert1.cer'
WiTH PRiVATE KEY
       (
              FiLE = 'C:\Avdhut\TestCertWithPrivateKey.cer',
              ENCRYPTiON BY PASSWORD = 'wiND0w5'
       )</code></p>

<p>I have the following C# code –
<code>
X509Certificate2 cert = new X509Certificate2(@""C:\Avdhut\TestCertWithPrivateKey.cer"", ""wiND0w5"");
</code>
It however throws an exception stating –
<b>CryptographicException was unhandled</b>
Cannot find the requested object</p>
","<p>Apparently, your certificate file is malformed (formatted in PEM) and which is not supported by .NET. Look in this thread for additional information: <a href=""https://stackoverflow.com/questions/13754685/how-do-i-use-a-private-key-in-c-cannot-find-the-requested-object"">How do I use a private key in C#? &quot;Cannot find the requested object.&quot;</a></p>
","212","<certificate><private-key><x509certificate2>","0","0","1","2014-10-31 15:14:31","","0","","","","","2014-10-31 12:59:55",""
"53045840","Kotlin convert PKCS1 to PKCS8","<p>I generate private key this way:</p>

<pre><code>val keyPairGenerator = KeyPairGenerator.getInstance(""ECDSA"", ""SC"")
val spec = ECGenParameterSpec(""secp256k1"")
keyPairGenerator.initialize(spec, SecureRandom())
keyPairGenerator.genKeyPair()
val kp = keyPairGenerator.generateKeyPair()
</code></pre>

<p>And im getting <code>144</code> length private key. Then i convert my private key to <code>PKCS1</code> format:</p>

<pre><code>val pkInfo = PrivateKeyInfo.getInstance(kp.private.encoded)
val encodable = pkInfo.parsePrivateKey()
val primitive = encodable.toASN1Primitive()
val pkcs1 = primitive.encoded //118 length here
</code></pre>

<p>In come cases i need to convert <code>pkcs1</code> back to <code>pkcs8</code>. And that's unclear for me. Cannot find any working solution. Is it even possible?</p>

<p>P.S. pkcs8 to pkcs1 convertion was found <a href=""https://stackoverflow.com/a/29892431/4182946"">here</a></p>
","<p>As indicated, the private key is in X9.62 format. It cannot be in PKCS#1 format because that format specifies RSA, not ECC.</p>

<p>Furthermore, your PKCS#8 private key contains <em>more</em> information than the X9.62 formatted private key that you've extracted from it. You can see the decoding of PKCS#8 <a href=""https://lapo.it/asn1js/#MIGNAgEAMBAGByqGSM49AgEGBSuBBAAKBHYwdAIBAQQgnN2lDp6DkGYlcpHby9vZqKF381CqUioSgWOrfpVWIsWgBwYFK4EEAAqhRANCAAQ5LSQ2aYx6J16BCntODx3Ma7-3DYX_jfUBKqdp4yxBy5fY8exKd_4DoxqkdWaEKghi3bCN-wzhpwne6JukGfTX"" rel=""nofollow noreferrer"">here</a>:</p>

<pre><code>SEQUENCE (3 elem)
  INTEGER 0
  SEQUENCE (2 elem)
    OBJECT IDENTIFIER 1.2.840.10045.2.1 ecPublicKey (ANSI X9.62 public key type)
    OBJECT IDENTIFIER 1.3.132.0.10 secp256k1 (SECG (Certicom) named elliptic curve)
  OCTET STRING (1 elem)
    SEQUENCE (4 elem)
      INTEGER 1
      OCTET STRING (32 byte) 9CDDA50E9E839066257291DBCBDBD9A8A177F350AA522A128163AB7E955622C5
      [0] (1 elem)
        OBJECT IDENTIFIER 1.3.132.0.10 secp256k1 (SECG (Certicom) named elliptic curve)
      [1] (1 elem)
        BIT STRING (520 bit) ... the optional public key ...
</code></pre>

<p>The internal X9.62 key is the sequence <em>within</em> the octet string and the secret (S) is the 32 byte octet string.</p>

<p>So you have to add back the information. This is an <code>AlgorithmIdentifier</code> that indicates <code>ecPublicKey</code> <em>operations</em> as well as the curve used (repeated for the public key).</p>

<p>So without further ado, the operations to recreate the PKCS#8 structure (with <code>x962</code> replacing <code>pkcs1</code>):</p>

<pre><code>ASN1Primitive prim = ASN1Primitive.fromByteArray(x962);
PrivateKeyInfo keyInfo = new PrivateKeyInfo(new AlgorithmIdentifier(
        X9ObjectIdentifiers.id_ecPublicKey,
        SECObjectIdentifiers.secp256k1), prim);
</code></pre>

<p>note that this is the non-encrypted variant of PKCS#8 which just shows the private key type. The encrypted variant encrypts this structure and adds information on the used wrapping mechanism (e.g. AES encrypted).</p>
","211","<java><encryption><kotlin><private-key><pkcs#8>","1","1","1","2018-11-01 22:03:37","53109829","4","","589259","","2018-11-01 22:03:37","2018-10-29 12:46:44",""
"29501707","How exactly is a SSL certificate validated?","<p>I have done some research on this but still have some trouble connecting the dots as to what exactly happens when the server send its certificate to the client in terms of verifying signature and root certificates. </p>

<ul>
<li><p>When you create a CSR, it generates a private key along with it, and you send it to the CA to generate the cert and sign it, but doesn't the CA use it's own private key to sign? So what is the point of the private key you generated with your CSR?</p></li>
<li><p>When server sends its certificate for client to validate, how exactly does client validate that it is a valid CA cert. It has a collection of trusted CA certs, ok - but how exactly are they used to verify that it was a valid CA that signed the server's certificate using the signature and public key of the server certificate? What things are compared to make sure it was not forged?</p></li>
<li><p>Is there any point in encrypting your internal self signed certs? How about an internal root cert? Or is the private key the only one worth encrypting?</p></li>
<li><p>If we don't keep a database of encrypted data for our web service (over SSL) for example, would we ever care about storing our own private key once we generated the self signed cert, and if we do, they why?</p></li>
</ul>
","<blockquote>
  <p>When you create a CSR, it generates a private key along with it</p>
</blockquote>

<p>Or you have already generated your own private key.</p>

<blockquote>
  <p>and you send it to the CA to generate the cert and sign it</p>
</blockquote>

<p>You send the CSR. You don't send your private key. It's private. You don't send it to anyone.</p>

<blockquote>
  <p>but doesn't the CA use it's own private key to sign?</p>
</blockquote>

<p>Yes.</p>

<blockquote>
  <p>So what is the point of the private key you generated with your CSR?</p>
</blockquote>

<p>It pairs with the public key contained in the certificate and it is part of the process used to prove that you and only you own that certificate, as only you can generate digital signatures with that private key that can be verified by the public key in the certificate.</p>

<blockquote>
  <p>When server sends its certificate for client to validate, how exactly does client validate that it is a valid CA cert. It has a collection of trusted CA certs, ok - but how exactly are they used to verify that it was a valid CA that signed the server's certificate using the signature and public key of the server certificate? What things are compared to make sure it was not forged?</p>
</blockquote>

<p>The certificate itself is verified, by verifying its digital signature; it is checked for being within its validity period; and then an attempt is made to form a certificate chain using the alleged signer of the certificate (the 'issuer') and the trusted certificates in the collection.</p>

<blockquote>
  <p>Is there any point in encrypting your internal self signed certs?</p>
</blockquote>

<p>No. They are public documents. Only the private key is private, and that isn't in the certificate.</p>

<blockquote>
  <p>How about an internal root cert?</p>
</blockquote>

<p>No.</p>

<blockquote>
  <p>Or is the private key the only one worth encrypting?</p>
</blockquote>

<p>Yes.</p>

<blockquote>
  <p>If we don't keep a database of encrypted data for our web service (over SSL) for example, would we ever care about storing our own private key once we generated the self signed cert, and if we do, they why?</p>
</blockquote>

<p>Because it's private. It is a critical part of your identity. If you leak it, others can impersonate you.</p>
","209","<ssl><ssl-certificate><verification><private-key><root-certificate>","1","3","1","2015-04-07 23:19:40","29503105","0","1","","","","2015-04-07 21:32:43",""
"22684872","Cannot connect to AWS EC2 using private key sent to myself (Permission denied: public key)","<p>I know this is an issue that is common but I believe the cause in my case is not the usual.</p>

<p>I have an ubuntu AWS EC2 instance that I access using the private key on my mac.</p>

<p>I wanted access whilst I'm at work so I put the key in my dropbox account and downloaded it onto my work (windows) pc and placed in the <code>C:/Users/[myusername]/.ssh</code> directory. I also <code>chmod 600</code>'d it.</p>

<p>I'm using the Git shell for ssh as it has SSH and I don't want to install putty for now.</p>

<p>So I run the command</p>

<pre><code>C:\Users\[myusername]\.ssh&gt; ssh -v -i .\key_pair.pem ubuntu@[redacted].compute.amazonaws.com
</code></pre>

<p>(with the correct dns name of course.)</p>

<p>Here is the output:</p>

<pre><code>OpenSSH_4.6p1, OpenSSL 0.9.8e 23 Feb 2007
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: Applying options for *
debug1: Connecting to [redacted].compute.amazonaws.com [[redacted]] port 22.
debug1: Connection established.
debug1: identity file .\\key_pair.pem type -1
debug1: Remote protocol version 2.0, remote software version OpenSSH_5.9p1 Debian-5ubuntu1.1
debug1: match: OpenSSH_5.9p1 Debian-5ubuntu1.1 pat OpenSSH*
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_4.6
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: server-&gt;client aes128-cbc hmac-md5 none
debug1: kex: client-&gt;server aes128-cbc hmac-md5 none
debug1: SSH2_MSG_KEX_DH_GEX_REQUEST(1024&lt;1024&lt;8192) sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_GROUP
debug1: SSH2_MSG_KEX_DH_GEX_INIT sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_REPLY
Warning: Permanently added '[redacted].compute.amazonaws.com,[redacted]' (RSA) to the list of known hosts.
debug1: ssh_rsa_verify: signature correct
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: publickey
debug1: Next authentication method: publickey
debug1: Offering public key: C:\\Users\\[myusername]\\.ssh\\github_rsa
debug1: Authentications that can continue: publickey
debug1: Trying private key: .\\key_pair.pem
debug1: read PEM private key done: type RSA
debug1: Authentications that can continue: publickey
debug1: No more authentication methods to try.
Permission denied (publickey).
</code></pre>

<p>I'm sure that the key I used is correct as it works on my Mac. Is there anything else I'm doing wrong?</p>

<p>Edit:
I notice the debug output mentions:</p>

<pre><code>debug1: Offering public key: C:\\Users\\[myusername]\\.ssh\\github_rsa
</code></pre>

<p>Does the fact that it's offering an unrelated public key affect authentication?</p>
","<p><strong><code>.\key_pair.pem</code></strong> is wrong. </p>

<p>Use <strong><code>./key_pair.pem</code></strong> instead with Git bash (it doesn't matter whether you are on windows)</p>
","209","<amazon-web-services><ssh><amazon-ec2><private-key>","0","0","1","2014-03-28 09:51:14","","6","","1606323","","2014-03-28 09:51:14","2014-03-27 10:32:35",""
"44440408","Setting Private and Public Key as a String, rather than loading from a file","<p>The below code needs the path to the key file. </p>

<pre><code>String PATHPRIVATE = ""C:\\keys\\PRIVATE_KEY.pem"";
String PATHPUBLIC = ""C:\\keys\\PUBLIC_KEY.pem"";

plugin.setSignPrivateKey(RSAEncryption.readFile(PATHPRIVATE));
plugin.setCipherPublicKeyFromFile(PATHPUBLIC);
</code></pre>

<p>Details of the plugin class.</p>

<pre><code> public void setSignPrivateKey(String signPrivateKey)
    {
        SignPrivateKey = signPrivateKey;
    }

 public void setCipherPublicKeyFromFile(String file)
        throws Exception
    {
        CipherPublicKey = RSAEncryption.readFile(file);
    }

public void setPublicKeyFromFile(String file)
        throws Exception
    {
        StringPublicKey = readFile(file);
    }
</code></pre>

<p>In local it works fine, but when I load it on a server as an application deployment, the need is to do away with the physical key file and rather load it as a string i.e. the contents of the key file to be loaded as a string and not from a file.</p>

<p>How to do something like the below.</p>

<pre><code>plugin.setSignPrivateKey(RSAEncryption.readFile(""-----BEGIN RSA PRIVATE KEY-----
MIICXQIBAAKBgQDEnL+ATwAj0hVbqoaiSaJke-----END RSA PRIVATE KEY-----""));
    plugin.setCipherPublicKeyFromFile(""-----BEGIN PUBLIC KEY-----
MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCf8X4kBjhtiK6YZ6JcW9sfGfAX
-----END PUBLIC KEY-----"");
</code></pre>

<p>Thanks. </p>
","","205","<java><encryption><rsa><public-key-encryption><private-key>","0","","0","2017-06-09 08:43:35","","3","","2967948","","2017-06-09 08:43:35","2017-06-08 15:54:26",""
"31079065","How to create valid public and private key for digital sign?","<p>How i can get free X509 Certificates with true public and private key?<br>
I use .net to encrypt and decrypt document.<br>
Its can import <code>pfx</code> file.<br>
And now how i can create single <code>pfx</code> file with <code>public &amp; private</code> for each User?  </p>
","<p>You need to use <a href=""https://msdn.microsoft.com/en-us/library/ff699202.aspx"" rel=""nofollow"">makecert and pvk2pfx</a>, both get installed with visual studio.</p>

<p>First run makecert to get a certificate (cer file) and private key file (pvk file)</p>

<pre><code>makecert -sv yourprivatekeyfile.pvk -n ""cert name"" yourcertfile.cer -b mm/dd/yyyy -e mm/dd/yyyy -r
</code></pre>

<p>where:</p>

<ul>
<li>-sv yourprivatekeyfile.pvk is the name of the file containing the private key. </li>
<li>-n ""cert name"" is the name that will appear on the certificate (and in the certificate store).</li>
<li>yourcertfile.cer is the name of the certificate file. </li>
<li>-b  mm/dd/yyyy is the date when the certificate becomes valid.</li>
<li>-e  mm/dd/yyyy is the date when the certificate expires.</li>
<li>-r indicates that this will be a self-signed certificate.</li>
</ul>

<p>One you have your two files you can combine them in to a pfx file</p>

<pre><code>PVK2PFX –pvk yourprivatekeyfile.pvk –spc yourcertfile.cer –pfx yourpfxfile.pfx –po yourpfxpassword
</code></pre>

<p>where:</p>

<ul>
<li>-pvk  yourprivatekeyfile.pvk is the private key file that you created</li>
<li>-spc  yourcertfile.cer is the certificate file you created</li>
<li>-pfx  yourpfxfile.pfx is the name of the .pfx file that will be created.</li>
<li>-po  yourpfxpassword is the password that you want to assign to the .pfx file.</li>
</ul>
","203","<.net><encryption><public-key-encryption><private-key><pki>","-1","1","1","2015-06-26 18:14:03","31079622","0","","","","","2015-06-26 17:37:28",""
"38746792","Capistrano private key","<p>I have Capistrano installed in my local virtual machine with Linux environment. Also I have a user created in remote server and public/private keys pare generated by PUTTYGEN(private.ppk and id_rsa.pub). </p>

<p>All work fine from windows when I'm trying to connect to the server using password-less method but all will go down if I try to use Capistrano tool, because it will ask me a password from my ssh user which I don't know.</p>

<p>So the only way I can manage with it is make Capistrano to use private kay authentication method.</p>

<p>Could you give an advice to me what I have to change in config of Capistrano to work with private key?</p>
","","203","<configuration><capistrano><private-key>","0","","0","2016-08-03 14:41:57","","2","","","","","2016-08-03 14:41:57",""
"29077770","How to get PrivateKey from keystore.pkcs12 file","<p>I am trying to get privateKey from keystore file,</p>

<pre><code>    keyStore.load(KeyStoreinputStream, ""keystorepass"".toCharArray());

PrivateKey key = (PrivateKey) keyStore.getKey(alias, new char[0]);
</code></pre>

<p>new char[0] --> I have not given password for private key at the time of generation.</p>

<p><strong>getting below exception:</strong></p>

<pre><code>java.security.UnrecoverableKeyException: Get Key failed: Given final block not properly padded
    at java.security.KeyStore.getKey(KeyStore.java:792)
Caused by: javax.crypto.BadPaddingException: Given final block not properly padded
    at com.sun.crypto.provider.CipherCore.doFinal(CipherCore.java:811)
    at com.sun.crypto.provider.CipherCore.doFinal(CipherCore.java:676)
    at com.sun.crypto.provider.PKCS12PBECipherCore.implDoFinal(PKCS12PBECipherCore.java:355)
</code></pre>
","<p><code>new char[0]</code> isn't correct. If there is no key password, use <code>null.</code></p>
","203","<java><encryption><keystore><private-key><pkcs#12>","0","0","1","2015-03-16 15:03:08","29080129","0","","","","","2015-03-16 13:14:55",""
"34651654","Creating certificate with private key and extracting private key / alias name from certificate","<p>I want to perform digital signature generation using private/public key cryptography. I have created the keystore and added the two alias (sender and receiver ) into the keystore.</p>

<p>While signing the data, I will be extracting the private key from keystore and sign the data. While verifying the data, I will be doing it from keystore. But I wanted to do digital sign using a certificate.</p>

<p>I have the following related questions:</p>

<ol>
<li>How to create the certificate to include private key ?</li>
<li>During sign process, how to extract the same private key from the certificate ?</li>
<li>Can we do the creation/extraction of this using open-source such <code>keytool</code>, <code>openssl</code> etc.? Or do I need to get in touch with a certificate authority?</li>
</ol>
","","202","<certificate><digital-signature><private-key>","0","","0","2016-01-07 21:25:37","","4","","589259","","2016-01-07 21:25:37","2016-01-07 09:34:03",""
"19582871","Resolve ""valid signing identity not found in xcode"" without import and export","<p>i have only apple id and password</p>

<p>And i need to upload the app</p>

<p>Checklist of task which I have done:</p>

<ul>
<li>Download distribution certificate</li>
<li>Download distribution provisioning profile</li>
<li>itunes detail for application upload filled up and status is 'waiting for Upload'</li>
</ul>

<p>Error I am getting is ""valid signing identity not found in xcode""</p>

<p>I can't import or export the certificates.
All i can do is from apple.developer.com account</p>

<p>To solve this i have Tried:</p>

<ul>
<li>Window->Organizer->Teams->Refresh </li>
</ul>

<p>But doing so xcode downloaded Developer Certificate which i don't nedd, i just want to upload the app.</p>

<p>Is there any way i can solve this without import and export of .p12 certificate.</p>

<p>if i request another certificate signing request do i need to develop another certificates?</p>

<p><strong>EDIT</strong>
I have added distribution certificate in my keychain, but it does't show it private key along with it.</p>

<p>Here is screen of this:</p>

<p><img src=""https://i.stack.imgur.com/RbA1w.png"" alt=""enter image description here""></p>
","<p>Finally I solved the problem</p>

<p>Here are steps:</p>

<ol>
<li>Request new CertificateSigningRequest.certSigningRequest</li>
<li>provisioning profile -> edit</li>
<li>Change its certificate with newer one</li>
</ol>

<p>This 3 steps solved my problem</p>
","200","<ios><ssl><certificate><private-key>","0","0","1","2013-10-25 15:27:31","","2","","2166798","","2013-10-25 15:27:31","2013-10-25 06:45:11",""
"32459597","What are the security levels of SFTP?","<p>From what I understand you have different levels of security with SFTP. What are the levels from weakest to strongest?  </p>

<p>FTP  - Not possible over SFTP<br>
SFTP - no host key checking<br>
SFTP - host key checking<br>
SFTP - login and password (LAP)<br>
SFTP - LAP + host key  </p>

<p>I ask because I've seen this Java code:  </p>

<pre><code>config.put(""StrictHostKeyChecking"", ""no"");
</code></pre>

<p>And I've read that you can connect to SFTP with and without keys. </p>

<p>FYI My understanding may be way off.  </p>
","<p>The host key checking indeed contributes to the security of the SSH/SFTP. Though it is in no way related to the authentication (password). So it's not like there are ""levels of security"" that combine these two aspects.</p>

<p>Moreover, your probably confuse the host key checking with the public key authentication.</p>

<p>Read my <a href=""https://winscp.net/eng/docs/ssh_keys"" rel=""nofollow noreferrer"">article on SSH keys</a> to understand the difference between the host key and the key used for authentication.</p>

<hr>

<p>Host key checking: You should never set the <code>StrictHostKeyChecking</code> to <code>no</code>, unless you connect within a private network, where you do not expect any kind of <a href=""https://en.wikipedia.org/wiki/Man-in-the-middle_attack"" rel=""nofollow noreferrer"">man-in-the-middle attacks</a>.</p>

<p>Authentication: If possible, use the public key authentications. The password authentication is less secure.</p>

<hr>

<p>The FTP is in no way related to the SFTP. Anyway, I do not know, what you mean by ""FTP security level"".</p>
","199","<ssh><sftp><ssh-keys><private-key><public-key>","0","2","1","2017-02-14 12:42:44","","0","1","850848","","2015-09-08 14:26:00","2015-09-08 13:50:08",""
"42697966","generate X.509 or PEM and privat key (RSA, PEM) from two certificates from GeoTrust","<p>I've got following lines from GeoTrust:</p>

<pre><code>Web Server CERTIFICATE
-----------------

-----BEGIN CERTIFICATE-----
...
-----END CERTIFICATE-----


INTERMEDIATE CA:
---------------------------------------

-----BEGIN CERTIFICATE-----
...
-----END CERTIFICATE-----
</code></pre>

<p>Is it possible and what should I do to generate X.509 or PEM file and privat key (RSA, PEM) file from this?</p>

<p>Thanks!</p>
","<pre><code>-----BEGIN CERTIFICATE-----
...
-----END CERTIFICATE-----
</code></pre>

<p>Is a PEM-encoded certificate.  If you extract that and save it into <code>yourcert.pem</code> (or <code>yourcert.cer</code>) you'll have the PEM certificate saved as a single file.  You can do the same with the intermediate(s), if you like.</p>

<p>Some applications want a combined data file where you take the PEM encoded certificate and then follow it (in the same file) with the PEM encoded private key.  Wherever you created your certificate signing request you should still have a key hanging around.</p>

<pre><code>cat yourcert.pem your.key &gt; yourcertwithkey.pem
</code></pre>
","199","<ssl><openssl><rsa><private-key><pem>","-1","1","1","2017-03-09 15:37:01","42699421","3","","","","","2017-03-09 14:31:13","2017-03-10 01:56:52"
"21279309","privateEncrypt equivalent in c#","<p>Trying to connect to chef api from c# .</p>

<p>documentation says, sign the header with the private pem key</p>

<p>My Collegues working on node js use a library called ursa which lets them sign a string using the method privateEncrypt</p>

<p>what is wierd though is that method is called 'privateEncrypt' , i thought private keys are for decryption.</p>

<p>any opinion on an equivalent in the c# world ? or how to connect to chef api from c#</p>
","<p>If you want to encrypt something with RSA in C# you could use the RSA class: <a href=""http://msdn.microsoft.com/en-us/library/system.security.cryptography.rsa(v=vs.110).aspx"" rel=""nofollow"">http://msdn.microsoft.com/en-us/library/system.security.cryptography.rsa(v=vs.110).aspx</a></p>

<p>Asymmetric cryptography is just a pair of keys for decrypting/encrypting. You just choose one of them to be private and the other one to be public. If you encrypt using one of them the decryption should be done with the other one.</p>
","197","<c#><chef><private-key><pem>","0","0","1","2014-01-22 09:58:14","21279584","0","","578411","","2014-01-22 09:47:34","2014-01-22 09:46:37","2014-03-28 17:25:37"
"23175365","Phpseclib Private key in Vb.net","<p>I am trying to decrypt a RSA encrypted string, which i encrypted with phpseclib, with vb.net.</p>

<p>The problem: I generated a keypair (public and private) with phpseclib and enrcypted the string with php and publickey. Now i want to decrypt this with a simple vb.net tool. but i can't load the private key i generated with phpseclib...</p>

<p>Can anybody help me, how to import or load the private key into vb.net, so that i can decrypt messages?
Thanks!</p>

<p>The Code:</p>

<pre><code>phpseclib and vb.net
</code></pre>
","<p>You didn't actually post your code.</p>

<p>In any event, your key is probably just not in the right format. In my experience, .NET usually likes keys to be in an XML format, which you can have phpseclib make for you thusly:</p>

<pre><code>&lt;?php
include('Crypt/RSA.php');

$rsa = new Crypt_RSA();

$rsa-&gt;setPrivateKeyFormat(CRYPT_RSA_PRIVATE_FORMAT_XML);

extract($rsa-&gt;createKey());
echo $privatekey;
?&gt;
</code></pre>
","197","<vb.net><encryption><rsa><private-key><phpseclib>","0","0","1","2014-04-20 20:27:50","","0","","","","","2014-04-19 20:50:09",""
"42942720","How to signing on computer with private key in Android's app data","<p>I am using <a href=""https://github.com/opendnssec/SoftHSMv2"" rel=""nofollow noreferrer"">SoftHSMv2</a>
as cryptoki library for both Android and PC. I want to using Android device to replace an USB token and signing on PC with a certificate and key pair stored in my Android app data.<br />
Just import the certificate from Android into PC's cert store are enough to PKCS#11 perform signing?<br />
Do I need modify PKCS#11 library to push data to Android or any other modify?</p>
","<p>Since you did not specify which operating systems on PC you are targeting I'm assuming that Windows one of them. </p>

<p>Windows itself doesn't support PKCS#11 standard and it has its own interface called CryptoAPI. So, if you want to perfom signing operation in such programs as Microsoft Outlook you need to implement a <a href=""https://msdn.microsoft.com/ru-ru/library/windows/desktop/aa380245(v=vs.85).aspx"" rel=""nofollow noreferrer"">Cryptographic Service Provider</a> (CSP)
 or <a href=""https://msdn.microsoft.com/en-us/library/windows/desktop/bb931355(v=vs.85).aspx"" rel=""nofollow noreferrer"">Key Storage Provider</a> (KSP). Or if your android device represents in system as a smart card you could implement <a href=""https://msdn.microsoft.com/en-us/windows/hardware/drivers/smartcard/smart-card-minidrivers"" rel=""nofollow noreferrer"">Smart Card Minidriver</a>. Schematic it will be something like this:</p>

<pre><code>Windows -&gt; YOUR_CSP (or YOUR_KSP) -&gt; pkcs11 -&gt; anroid device

Windows -&gt; Microsoft Base Smart Card Crypto Provider 
(or Microsoft Smart Card Key Storage Provider) -&gt; SCMinidriver -&gt; pkcs11 -&gt;android device 
</code></pre>

<p><a href=""https://www.microsoft.com/en-us/download/details.aspx?id=30688"" rel=""nofollow noreferrer"">Here</a> you can get the SDK.</p>

<p>Also you should know that still not all programms supports KSP (only CSP). </p>

<p>Note that Windows 7 and below requires that CSP dll <a href=""https://msdn.microsoft.com/en-us/windows/hardware/drivers/install/authenticode-signing-of-csps"" rel=""nofollow noreferrer"">must be signed</a> with Code Signing certificate.</p>
","193","<android><certificate><private-key><signing><pkcs#11>","0","2","1","2017-03-22 21:08:31","42962689","2","0","","","","2017-03-22 04:24:38",""
"56567599","Unable to establish connection to unix server using Jsch and private key from IPSwitch client","<p>I am trying to establish a connection to a Unix server and put/get files using SFTP. I am using JCraft's Jsch 0.1.53 and RSA token based authentication. No password. </p>

<p>I have generated the private key and public keys using IPSwitch software and have configured the public key for the user in the Unix server.</p>

<p>I am using the private key generated by the IPSwitch in my Java program which in turn uses JSch. </p>

<p>IPSwitch's Store.ini file looks like</p>

<pre><code>[____Item____0]
____ItemName____=auto
PublicKey=C:\ClientKeyStore\Pub203E.tmp
Pass=_y**************************NyYbpT
PrivateKey=C:\ClientKeyStore\Pri203F.tmp
[__CONFIG__]
Count=1
</code></pre>

<p>private key looks like,</p>

<pre><code>-----BEGIN ENCRYPTED PRIVATE KEY-----

MIIFHzBJB*******************************

B**************************************B

************1on4MNDZfTgQ==

-----END ENCRYPTED PRIVATE KEY-----
</code></pre>

<p>There are lots of examples in stackoverflow and elsewhere. I tried it but I am hitting <em>com.jcraft.jsch.JSchException: Auth</em> cancel.</p>

<pre><code>import com.jcraft.jsch.Channel;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.JSchException;
import com.jcraft.jsch.Session;
import com.jcraft.jsch.UserInfo;


public class UnixUtilities {

public void unixConnectionUsingKey(String username, String hostIPAddress, int portNumber) throws JSchException {

    JSch jsch = new JSch();

    jsch.addIdentity(""src/main/resources/keys/id_rsa"");

    Session session = jsch.getSession(username, hostIPAddress, portNumber);

    session.setConfig(""StrictHostKeyChecking"", ""no"");
    session.setConfig(""PreferredAuthentications"", ""publickey,keyboard-interactive,password"");

    UserInfo userinfo = new MyUserInfo();
    session.setUserInfo(userinfo);

    session.connect();

    Channel channel = session.openChannel(""sftp"");
}

}

class MyUserInfo implements UserInfo {
String password = null;

@Override
public String getPassphrase() {
    return null;
}

@Override
public String getPassword() {
    return password;
}

public void setPassword(String passwd) {
    password = passwd;
}

@Override
public boolean promptPassphrase(String message) {
    return true;
}

@Override
public boolean promptPassword(String message) {
    return true;
}

@Override
public boolean promptYesNo(String message) {
    return true;
}

@Override
public void showMessage(String message) {
    // TODO Auto-generated method stub

}
}
</code></pre>

<p>I am hitting</p>

<pre><code>com.jcraft.jsch.JSchException: Auth cancel
at com.jcraft.jsch.Session.connect(Session.java:511)
at com.jcraft.jsch.Session.connect(Session.java:183)
</code></pre>

<p>When I use only <em>publickey</em> instead of <em>publickey,keyboard-interactive,password</em> as <em>PreferredAuthentications</em>, I am hitting,</p>

<pre><code>  com.jcraft.jsch.JSchException: Auth fail
    at com.jcraft.jsch.Session.connect(Session.java:512)
    at com.jcraft.jsch.Session.connect(Session.java:183)
</code></pre>

<p>Also, if I ignore the below 2 lines, i.e., if I comment the below 2 lines</p>

<pre><code>UserInfo userinfo = new MyUserInfo();

session.setUserInfo(userinfo);
</code></pre>

<p>I am hitting,</p>

<pre><code>com.jcraft.jsch.JSchException: USERAUTH fail
at com.jcraft.jsch.UserAuthPublicKey.start(UserAuthPublicKey.java:119)
at com.jcraft.jsch.Session.connect(Session.java:463)
at com.jcraft.jsch.Session.connect(Session.java:183)
</code></pre>

<p>The Jsch log is as follows,</p>

<pre><code>    Connecting to ***.***.**.*** port ****

    Connection established

    Remote version string: SSH-2.0-6.4.0.370 SSH Tectia Server

    Local version string: SSH-2.0-JSCH-0.1.53

    CheckCiphers: aes256-ctr,aes192-ctr,aes128-ctr,aes256-cbc,aes192-cbc,aes128-cbc,3des-ctr,arcfour,arcfour128,arcfour256

    aes256-ctr is not available.

    aes192-ctr is not available.

    aes256-cbc is not available.

    aes192-cbc is not available.

    CheckKexes: diffie-hellman-group14-sha1,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521

    CheckSignatures: ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521

    SSH_MSG_KEXINIT sent

    SSH_MSG_KEXINIT received

    kex: server: diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-hellman-group14-sha256@ssh.com,diffie-hellman-group-exchange-sha1,diffie-hellman-group-exchange-sha256

    kex: server: ssh-rsa,ssh-rsa-sha256@ssh.com

    kex: server: aes128-cbc

    kex: server: aes128-cbc

    kex: server: hmac-sha1,hmac-sha1-96,hmac-sha256-2@ssh.com,hmac-sha224@ssh.com,hmac-sha256@ssh.com,hmac-sha384@ssh.com,hmac-sha512@ssh.com

    kex: server: hmac-sha1,hmac-sha1-96,hmac-sha256-2@ssh.com,hmac-sha224@ssh.com,hmac-sha256@ssh.com,hmac-sha384@ssh.com,hmac-sha512@ssh.com

    kex: server: none,zlib

    kex: server: none,zlib

    kex: server: 

    kex: server: 

    kex: client: ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1

    kex: client: ssh-rsa,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521

    kex: client: aes128-ctr,aes128-cbc,3des-ctr,3des-cbc,blowfish-cbc

    kex: client: aes128-ctr,aes128-cbc,3des-ctr,3des-cbc,blowfish-cbc

    kex: client: hmac-md5,hmac-sha1,hmac-sha2-256,hmac-sha1-96,hmac-md5-96

    kex: client: hmac-md5,hmac-sha1,hmac-sha2-256,hmac-sha1-96,hmac-md5-96

    kex: client: none

    kex: client: none

    kex: client: 

    kex: client: 

    kex: server-&gt;client aes128-cbc hmac-sha1 none

    kex: client-&gt;server aes128-cbc hmac-sha1 none

    SSH_MSG_KEXDH_INIT sent

    expecting SSH_MSG_KEXDH_REPLY

    ssh_rsa_verify: signature true

    Permanently added '***.***.**.***' (RSA) to the list of known hosts.

    SSH_MSG_NEWKEYS sent

    SSH_MSG_NEWKEYS received

    SSH_MSG_SERVICE_REQUEST sent

    SSH_MSG_SERVICE_ACCEPT received

    Authentications that can continue: publickey

    Next authentication method: publickey

    Disconnecting from ***.***.**.*** port ****
</code></pre>

<p>I am using the same key that was generated by IPSwitch and have named it as id_rsa in my eclipse. Is the private key generated out of IPSwitch supposed to work for JSch as well?</p>

<p>When I connect via IPSwitch, it works all fine. Could you please help me here?Thanks in advance.</p>
","<p>To provide a <em>passphrase</em> for an <em>encrypted private key</em>, you need to implement <a href=""https://epaul.github.io/jsch-documentation/javadoc/com/jcraft/jsch/UserInfo.html#promptPassphrase-java.lang.String-"" rel=""nofollow noreferrer""><code>UserInfo.promptPassphrase</code></a> and <a href=""https://epaul.github.io/jsch-documentation/javadoc/com/jcraft/jsch/UserInfo.html#getPassphrase--"" rel=""nofollow noreferrer""><code>UserInfo.getPassphrase</code></a>, not <code>UserInfo.getPassword</code> and <code>UserInfo.promptPassword</code>.</p>

<pre><code>@Override
public boolean promptPassphrase(String message) {
    return true;
}

@Override
public String getPassphrase() {
    return password;
}
</code></pre>

<p><em>(and for a consistency, you should rename your <code>password</code> field to <code>passphrase</code>).</em></p>
","193","<java><rsa><jsch><private-key><public-key>","0","0","2","2019-06-18 07:09:19","","8","1","850848","","2019-06-18 07:09:19","2019-06-12 17:33:42",""
"56567599","Unable to establish connection to unix server using Jsch and private key from IPSwitch client","<p>I am trying to establish a connection to a Unix server and put/get files using SFTP. I am using JCraft's Jsch 0.1.53 and RSA token based authentication. No password. </p>

<p>I have generated the private key and public keys using IPSwitch software and have configured the public key for the user in the Unix server.</p>

<p>I am using the private key generated by the IPSwitch in my Java program which in turn uses JSch. </p>

<p>IPSwitch's Store.ini file looks like</p>

<pre><code>[____Item____0]
____ItemName____=auto
PublicKey=C:\ClientKeyStore\Pub203E.tmp
Pass=_y**************************NyYbpT
PrivateKey=C:\ClientKeyStore\Pri203F.tmp
[__CONFIG__]
Count=1
</code></pre>

<p>private key looks like,</p>

<pre><code>-----BEGIN ENCRYPTED PRIVATE KEY-----

MIIFHzBJB*******************************

B**************************************B

************1on4MNDZfTgQ==

-----END ENCRYPTED PRIVATE KEY-----
</code></pre>

<p>There are lots of examples in stackoverflow and elsewhere. I tried it but I am hitting <em>com.jcraft.jsch.JSchException: Auth</em> cancel.</p>

<pre><code>import com.jcraft.jsch.Channel;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.JSchException;
import com.jcraft.jsch.Session;
import com.jcraft.jsch.UserInfo;


public class UnixUtilities {

public void unixConnectionUsingKey(String username, String hostIPAddress, int portNumber) throws JSchException {

    JSch jsch = new JSch();

    jsch.addIdentity(""src/main/resources/keys/id_rsa"");

    Session session = jsch.getSession(username, hostIPAddress, portNumber);

    session.setConfig(""StrictHostKeyChecking"", ""no"");
    session.setConfig(""PreferredAuthentications"", ""publickey,keyboard-interactive,password"");

    UserInfo userinfo = new MyUserInfo();
    session.setUserInfo(userinfo);

    session.connect();

    Channel channel = session.openChannel(""sftp"");
}

}

class MyUserInfo implements UserInfo {
String password = null;

@Override
public String getPassphrase() {
    return null;
}

@Override
public String getPassword() {
    return password;
}

public void setPassword(String passwd) {
    password = passwd;
}

@Override
public boolean promptPassphrase(String message) {
    return true;
}

@Override
public boolean promptPassword(String message) {
    return true;
}

@Override
public boolean promptYesNo(String message) {
    return true;
}

@Override
public void showMessage(String message) {
    // TODO Auto-generated method stub

}
}
</code></pre>

<p>I am hitting</p>

<pre><code>com.jcraft.jsch.JSchException: Auth cancel
at com.jcraft.jsch.Session.connect(Session.java:511)
at com.jcraft.jsch.Session.connect(Session.java:183)
</code></pre>

<p>When I use only <em>publickey</em> instead of <em>publickey,keyboard-interactive,password</em> as <em>PreferredAuthentications</em>, I am hitting,</p>

<pre><code>  com.jcraft.jsch.JSchException: Auth fail
    at com.jcraft.jsch.Session.connect(Session.java:512)
    at com.jcraft.jsch.Session.connect(Session.java:183)
</code></pre>

<p>Also, if I ignore the below 2 lines, i.e., if I comment the below 2 lines</p>

<pre><code>UserInfo userinfo = new MyUserInfo();

session.setUserInfo(userinfo);
</code></pre>

<p>I am hitting,</p>

<pre><code>com.jcraft.jsch.JSchException: USERAUTH fail
at com.jcraft.jsch.UserAuthPublicKey.start(UserAuthPublicKey.java:119)
at com.jcraft.jsch.Session.connect(Session.java:463)
at com.jcraft.jsch.Session.connect(Session.java:183)
</code></pre>

<p>The Jsch log is as follows,</p>

<pre><code>    Connecting to ***.***.**.*** port ****

    Connection established

    Remote version string: SSH-2.0-6.4.0.370 SSH Tectia Server

    Local version string: SSH-2.0-JSCH-0.1.53

    CheckCiphers: aes256-ctr,aes192-ctr,aes128-ctr,aes256-cbc,aes192-cbc,aes128-cbc,3des-ctr,arcfour,arcfour128,arcfour256

    aes256-ctr is not available.

    aes192-ctr is not available.

    aes256-cbc is not available.

    aes192-cbc is not available.

    CheckKexes: diffie-hellman-group14-sha1,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521

    CheckSignatures: ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521

    SSH_MSG_KEXINIT sent

    SSH_MSG_KEXINIT received

    kex: server: diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-hellman-group14-sha256@ssh.com,diffie-hellman-group-exchange-sha1,diffie-hellman-group-exchange-sha256

    kex: server: ssh-rsa,ssh-rsa-sha256@ssh.com

    kex: server: aes128-cbc

    kex: server: aes128-cbc

    kex: server: hmac-sha1,hmac-sha1-96,hmac-sha256-2@ssh.com,hmac-sha224@ssh.com,hmac-sha256@ssh.com,hmac-sha384@ssh.com,hmac-sha512@ssh.com

    kex: server: hmac-sha1,hmac-sha1-96,hmac-sha256-2@ssh.com,hmac-sha224@ssh.com,hmac-sha256@ssh.com,hmac-sha384@ssh.com,hmac-sha512@ssh.com

    kex: server: none,zlib

    kex: server: none,zlib

    kex: server: 

    kex: server: 

    kex: client: ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1

    kex: client: ssh-rsa,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521

    kex: client: aes128-ctr,aes128-cbc,3des-ctr,3des-cbc,blowfish-cbc

    kex: client: aes128-ctr,aes128-cbc,3des-ctr,3des-cbc,blowfish-cbc

    kex: client: hmac-md5,hmac-sha1,hmac-sha2-256,hmac-sha1-96,hmac-md5-96

    kex: client: hmac-md5,hmac-sha1,hmac-sha2-256,hmac-sha1-96,hmac-md5-96

    kex: client: none

    kex: client: none

    kex: client: 

    kex: client: 

    kex: server-&gt;client aes128-cbc hmac-sha1 none

    kex: client-&gt;server aes128-cbc hmac-sha1 none

    SSH_MSG_KEXDH_INIT sent

    expecting SSH_MSG_KEXDH_REPLY

    ssh_rsa_verify: signature true

    Permanently added '***.***.**.***' (RSA) to the list of known hosts.

    SSH_MSG_NEWKEYS sent

    SSH_MSG_NEWKEYS received

    SSH_MSG_SERVICE_REQUEST sent

    SSH_MSG_SERVICE_ACCEPT received

    Authentications that can continue: publickey

    Next authentication method: publickey

    Disconnecting from ***.***.**.*** port ****
</code></pre>

<p>I am using the same key that was generated by IPSwitch and have named it as id_rsa in my eclipse. Is the private key generated out of IPSwitch supposed to work for JSch as well?</p>

<p>When I connect via IPSwitch, it works all fine. Could you please help me here?Thanks in advance.</p>
","<p>Thanks to  Martin Prikryl and the community for being with this while I solve this problem. </p>

<p>It was simple. As Martin mention one of his comment, I just had to generate one more set of keys using another tool like SSH-Keygen and use it instead. I used a software called VANDYKE SecureCRT to generate one more set of keys and it works just fine with JSch. Looks like IPSwitch does something while generating keys which does not seem to work with JSch. It could be that 'Pass' which is available in the config file of IPSwitch, which is specific to IPSwitch. </p>

<p>Code is as follows,</p>

<pre><code>        JSch jsch = new JSch();
        jsch.addIdentity(privateKeyPath);


        JSch.setLogger(new com.jcraft.jsch.Logger() {
            Path path = Paths.get(""target/jsch.log"");
            @Override
            public boolean isEnabled(int level){
                return true;
            }
            public void log(int level, String message){
                try {
                    StandardOpenOption option =
                       !Files.exists(path) ? StandardOpenOption.CREATE : StandardOpenOption.APPEND;
                    Files.write(path, java.util.Arrays.asList(message), option);
                } catch (IOException e) {
                    System.err.println(message);
                }
            }
        });

        Session session = jsch.getSession(username, host, port);

        session.setConfig(""StrictHostKeyChecking"", ""no"");
        session.setConfig(""PreferredAuthentications"", ""publickey"");
        session.connect();
</code></pre>

<p>Here the setlogger method helps you with good logs. If you dont want it, you can ignore that step.</p>
","193","<java><rsa><jsch><private-key><public-key>","0","0","2","2019-06-18 07:09:19","","8","1","850848","","2019-06-18 07:09:19","2019-06-12 17:33:42",""
"2844438","Is there a public / private key encryption scheme that will not change a message's length?","<p>Is there a public / private key encryption scheme that will not change a message's length?</p>

<p>I would like to encrypt a message one packet at a time, but if the packet grows, it would no longer just be one packet long.</p>
","<p>Here's a simple scheme: Use public / private key encryption to establish a symmetric key. Then do all of your encryption using that symmetric key.</p>

<p>If you also need to ensure message integrity and non-repudiation, then you can run the message through a hash function, which will map it to a fixed length. Then you can sign the hash.</p>

<p>Typically, you wouldn't want to use public keys to encrypt messages anyway. Public / private key pairs are harder to generate and more expensive to use for long encryption, compared to symmetric keys.</p>
","193","<encryption><packet><public-key><private-key><fixed-length-record>","1","3","1","2010-05-16 16:25:14","2844462","1","1","","","","2010-05-16 16:10:30",""
"36386123","save window.crypto generated private key in the browser keystore?","<p>We are trying to implement the following workflow:</p>

<ul>
<li>generate private key in browser, using window.crypto</li>
<li>create a PKCS10 certificate signing request in the browser</li>
<li>send the PKCS10 to a server</li>
<li>the server signs the request and returns an x509 certificate in PEM format</li>
<li>the browser stores the certificate for itself</li>
</ul>

<p>The same thing already works using the keygen tag in the browser and using SPKAC instead of pkcs10. Now, however the browser does not store the certificate returned, just wants to save them. When we try to import the certificate to the browser by hand, we got ""the private key for the certificate is missing or invalid"".
We suspect that the private key generated by window.crypto.generateKey() does not get stored in the browser's keystore. How to get the private key stored in the keystore?</p>

<p>The implementation of the first two steps is based on <a href=""http://blog.engelke.com/2014/08/23/public-key-cryptography-in-the-browser/"" rel=""nofollow noreferrer"">http://blog.engelke.com/2014/08/23/public-key-cryptography-in-the-browser/</a></p>

<p>Update: As some browsers use the OS keystore, I am also looking into the possibility to save the key into the OS keystore through some other way.
What I have figured out so far:</p>

<p>Java cannot be used according to this question: <a href=""https://stackoverflow.com/questions/24904138/tell-java-to-use-windows-keystore"">Tell Java to use Windows keystore</a></p>

<p>In Windows one can use ActiveX controls.</p>

<p>Summary: Found no standard cross-browser and cross-OS way to generate and meaningfully use X509 certificates. There are combinations (new chrome versions (dropping keygen support) on non-windows OS) where there is no way to do this.</p>
","","192","<x509><private-key><window.crypto>","1","","0","2016-04-09 09:05:38","","0","","-1","","2017-05-23 12:15:53","2016-04-03 13:42:10",""
"35321815","How to convert Domino specific kyr file to pkcs12 on 64-bit windows","<p>I need to get the private key out of my Domino kyr file, to import into another server. The key should be in the best case pkcs12 format.  I am aware of the <a href=""http://www-01.ibm.com/support/docview.wss?uid=swg21308138&amp;cm_mc_uid=88336895938914309254675&amp;cm_mc_sid_50200000=1455122078"" rel=""nofollow"">IKEYMAN</a> tool by IBM. However, I cannot use that because I don't have access to a 32-bit windows XP. And unfortunately, only version 5 can understand the kyr format. 
It is a very strange conundrum. I hope somebody can help me out.</p>
","<p>Just download ""kyrtool"" <a href=""http://www-933.ibm.com/support/fixcentral/swg/selectFixes?parent=ibm~Lotus&amp;product=ibm/Lotus/Lotus%20Domino&amp;release=9.0.1.2&amp;platform=All&amp;function=fixId&amp;fixids=KYRTool_9x_ClientServer&amp;includeSupersedes=0"" rel=""nofollow"">from IBM</a> and put it in the appropriate directory. This download contains versions for windows and linux. </p>

<p>Use the <code>show keys</code> command as described in <a href=""https://www-10.lotus.com/ldd/dominowiki.nsf/m_Home.xsp?documentId=B28BEC96CB4E1E6A85257DA1006B0545#mobileViewer"" rel=""nofollow"">this link</a> to show the private key in Base64 Format. You can then simply convert it into anything you need with e.g. Openssl.</p>
","189","<xpages><lotus-domino><private-key>","0","0","1","2016-02-10 22:28:32","35327254","0","","","","","2016-02-10 17:21:40",""
"16496530","Biometric locked file vault","<p>I'm trying to create a file vault that is locked using biometrics.  Using a library like libCrypto++ seems a nice plan.  Its simple to store things in the vault as the public key can be kept in the clear.  </p>

<p>However the part I'm struggling with is how you convert from the biometrics to the private key.  I assume I need to store the private key somewhere but I can't figure out how.  Otherwise I run the risk of using a very secure system for file storage and then suffering from a far less secure private key.</p>

<p>I'm sure there must be a solution to this, I just can't think of one.</p>
","<p>With biometric you will never get same image or same templates. Everytime you get a new capture, you will have a different image that will supply a different template. So you can`t use it as a key to encrypt some file. You can try to take a hash code from biometric templates. Therefore this is not a good way because noise, rotation, translation and several other things that influence on biometric capture.</p>

<p>There are several academic articles dealing with this subject. But I yet didn`t see one that has a good way to deal with this.</p>

<p>The better way I saw is to use biometric devices to capture a template, match this template with a template previously saved in a database, and if you have a match, release the key kept in a database.</p>

<p>You need this because match of biometric data is not a byte to byte equal operation have many other things to care as I told before.</p>
","188","<c++><public-key-encryption><private-key><biometrics>","0","1","1","2013-06-05 21:22:06","16950118","0","","","","","2013-05-11 11:19:21",""
"54834666","Setting up DKIM Private Key? Where do I put it? Details inside","<p>I have been searching for hours for this answer and don't have much experience recently with DKIM.</p>

<p>I've updated my host(HostMonster) DNS TXT records with the DKIM public key information as follows:</p>

<p><code>default._domainkey.domain.com = k=rsa;p=key</code></p>

<p><code>verify._domainkey.domain.com = k=rsa;p=key</code></p>

<p><code>_domainkey = k=rsa;p=key</code></p>

<p>But I'm not sure where to put the private DKIM key? </p>

<p>My client is using Thunderbird to send mails from their machine and from there it goes directly to HostMonster hosted email, then out to their federal client who enforces DKIM signing and rejects unsigned messages.</p>

<p>After hours of searching on Google, I've yet to find where to put that private key! There's nowhere in thunderbird to put it, and one DNS ""expert"" said to put it as a TXT record in the DNS with the private key as the DNS value of that record, but I was under the assumption that would make the record public and expose the private key?</p>

<p>Thank you for your help in this matter! I've been pulling my hair out over this one and my client is dead in the water being unable to send signed messages to conduct business! My apologies if this isn't posted in the correct forum!</p>
","","188","<dns><rsa><private-key><dkim>","1","","0","2019-02-22 20:33:29","","2","","7187604","","2019-02-22 20:33:29","2019-02-22 20:24:11",""
"49640987","Using Public/Private key pair as proof of delivery","<h1>The problem</h1>

<p>I'm working on a mobile application where <code>user A</code> should <strong>physically</strong> delivery something to <code>user B</code>, and the user <code>A</code> MUST prove that delivered it.</p>

<p>There is a restriction:</p>

<ul>
<li>User A or User B might be offline on the delivery, so it can not rely on internet connection</li>
</ul>

<h1>My approach</h1>

<p>I thought about using cryptography to solve this problem:</p>

<p>When the delivery is scheduled, the following process occurs:</p>

<ol>
<li>A key-pair is generated, and stored on database.</li>
<li>The private key belongs to <code>User B</code> and should be transfere to his mobile app.</li>
<li>Some <code>well-known+delivery_uuid</code> string is encrypted using the public key, and transferred to the <code>User A</code>.</li>
<li>User A is oriented to only show the encrypted code (in form of a QRCode) if the delivery occurs.</li>
<li>User B is oriented to read the QRCode using the mobile app when delivering.</li>
<li>Since the encrypted message begins with a <code>well-known</code> string, the <code>User B</code> mobile app can decrypt it and verify that the message is OK. The application store the <code>delivery_uuid</code> part if valid, and sends to server-side to keep track as soon as user get internet access.</li>
<li>If the <code>User B</code> try to fake the <code>delivery_uuid</code>, it will obviously not match.</li>
<li>If the <code>User A</code> try to fake the QRCode, the <code>User B</code>'s app will not be able to validate the message.</li>
</ol>

<h1>Concerns</h1>

<ol>
<li>The fact of a <code>well-known</code> piece be present on every encrypted message can make it weaker? Considering that the key-pair is used just once.</li>
<li>The public key should NOT be visible to anyone. Only the back-end must use it to create the delivery proof message. Same obviously apply to the <code>delivery_uuid</code></li>
<li>Sh*t happens. If the user B mobile app somehow crashes and loose the <code>delivery_uuid</code> before sending it to back-end, the <code>user B</code> will need to rely on <code>user A</code> honesty.</li>
<li>How strong must my keys be? Considering the monetary value of the package is low. Is RSA the better encryptation in this case?</li>
</ol>

<p>I really know that this question is complex, but I really appreciate if someone can help-me with it.</p>

<p><em>Note:</em> I'm not sure that Stackoverflow is the right stackexchange community to ask about this, please comment if it's offtopic. But since it have something about logic, I think that's the right place.</p>
","<p>Seems a little complicated. Why not</p>

<ol>
<li><p>UserB (and every user who installs the app to receive deliveries) is issued a public/private key pair. The private key is held only by UserB; if it is lost, a new pair can be issued. Meanwhile, the public key is public, and is stored in a database along with UserB's identity. </p></li>
<li><p>Upon receipt of the delivery, UserB generates a simple text document containing the date and time, the QRCode, the name of the person receiving the package, or whatever information is needed. The document also contains the public key. Any format will do.</p></li>
<li><p>UserB signs the document with his private key and appends the signature to the end of the document. Now you have a cleartext document spelling out everything that happened, and proof that UserB agreed to it.</p></li>
<li><p>UserB shares the document with UserA, and/or uploads it anywhere that is needed, e.g. system of record. Both UserA and UserB can keep an offline copy.</p></li>
<li><p>If proof of delivery is ever needed, UserA just needs to produce the signed document.</p></li>
</ol>
","186","<security><rsa><digital-signature><private-key>","3","3","5","2018-06-24 06:03:42","","3","1","6371459","","2018-04-04 06:01:04","2018-04-04 00:34:54",""
"49640987","Using Public/Private key pair as proof of delivery","<h1>The problem</h1>

<p>I'm working on a mobile application where <code>user A</code> should <strong>physically</strong> delivery something to <code>user B</code>, and the user <code>A</code> MUST prove that delivered it.</p>

<p>There is a restriction:</p>

<ul>
<li>User A or User B might be offline on the delivery, so it can not rely on internet connection</li>
</ul>

<h1>My approach</h1>

<p>I thought about using cryptography to solve this problem:</p>

<p>When the delivery is scheduled, the following process occurs:</p>

<ol>
<li>A key-pair is generated, and stored on database.</li>
<li>The private key belongs to <code>User B</code> and should be transfere to his mobile app.</li>
<li>Some <code>well-known+delivery_uuid</code> string is encrypted using the public key, and transferred to the <code>User A</code>.</li>
<li>User A is oriented to only show the encrypted code (in form of a QRCode) if the delivery occurs.</li>
<li>User B is oriented to read the QRCode using the mobile app when delivering.</li>
<li>Since the encrypted message begins with a <code>well-known</code> string, the <code>User B</code> mobile app can decrypt it and verify that the message is OK. The application store the <code>delivery_uuid</code> part if valid, and sends to server-side to keep track as soon as user get internet access.</li>
<li>If the <code>User B</code> try to fake the <code>delivery_uuid</code>, it will obviously not match.</li>
<li>If the <code>User A</code> try to fake the QRCode, the <code>User B</code>'s app will not be able to validate the message.</li>
</ol>

<h1>Concerns</h1>

<ol>
<li>The fact of a <code>well-known</code> piece be present on every encrypted message can make it weaker? Considering that the key-pair is used just once.</li>
<li>The public key should NOT be visible to anyone. Only the back-end must use it to create the delivery proof message. Same obviously apply to the <code>delivery_uuid</code></li>
<li>Sh*t happens. If the user B mobile app somehow crashes and loose the <code>delivery_uuid</code> before sending it to back-end, the <code>user B</code> will need to rely on <code>user A</code> honesty.</li>
<li>How strong must my keys be? Considering the monetary value of the package is low. Is RSA the better encryptation in this case?</li>
</ol>

<p>I really know that this question is complex, but I really appreciate if someone can help-me with it.</p>

<p><em>Note:</em> I'm not sure that Stackoverflow is the right stackexchange community to ask about this, please comment if it's offtopic. But since it have something about logic, I think that's the right place.</p>
","<p>If I understand the problem correctly, there are three parties here :</p>

<ul>
<li>The verifying party, which is your back-end.</li>
<li>The selling party, which is User A.</li>
<li>The buying party, which is User B.</li>
</ul>

<p>Also I do not buy the idea that ""The public key should NOT be visible to anyone"". They are meant to be, that's why they are called public. </p>

<p>Now, In order to make sure that the item was delivered </p>

<ul>
<li>By User A</li>
<li>To User B, </li>
</ul>

<p>We can have the following setup.</p>

<ol>
<li>The verifying party ( i.e. the backend ) generates a token, associates it with the buyer, the seller, item and persists the info.</li>
<li>The verifying party encrypts the token with User A's ( seller ) public key. </li>
<li>The verifying party encrypts the already encrypted token with User B's ( buyer ) public key.</li>
<li>The verifying party sends the double encrypted token along to User B. Since it has been encrypted with User B's public key, only User B can read it. </li>
<li>User B decrypts the double encrypted token using his private key and saves the result in his device. The result is now encrypted with User A's public key, which means only User A can read it.</li>
<li>When User A comes to deliver the item, User B hands over the encrypted token as acknowledgement. This can be done via a QR code scan.</li>
<li>User A decrypts the encrypted token with his private key and keeps it in the device. </li>
<li>Whenever it is feasible ( in terms of availability of internet ) to prove it to the back-end, User A encrypts the token with the backend's public key and sends it along to the back-end. </li>
<li>The back-end decrypts the encrypted token with its private key and does a lookup in its persistence store, matches the buyer and the seller and completes the verification.</li>
</ol>
","186","<security><rsa><digital-signature><private-key>","3","3","5","2018-06-24 06:03:42","","3","1","6371459","","2018-04-04 06:01:04","2018-04-04 00:34:54",""
"49640987","Using Public/Private key pair as proof of delivery","<h1>The problem</h1>

<p>I'm working on a mobile application where <code>user A</code> should <strong>physically</strong> delivery something to <code>user B</code>, and the user <code>A</code> MUST prove that delivered it.</p>

<p>There is a restriction:</p>

<ul>
<li>User A or User B might be offline on the delivery, so it can not rely on internet connection</li>
</ul>

<h1>My approach</h1>

<p>I thought about using cryptography to solve this problem:</p>

<p>When the delivery is scheduled, the following process occurs:</p>

<ol>
<li>A key-pair is generated, and stored on database.</li>
<li>The private key belongs to <code>User B</code> and should be transfere to his mobile app.</li>
<li>Some <code>well-known+delivery_uuid</code> string is encrypted using the public key, and transferred to the <code>User A</code>.</li>
<li>User A is oriented to only show the encrypted code (in form of a QRCode) if the delivery occurs.</li>
<li>User B is oriented to read the QRCode using the mobile app when delivering.</li>
<li>Since the encrypted message begins with a <code>well-known</code> string, the <code>User B</code> mobile app can decrypt it and verify that the message is OK. The application store the <code>delivery_uuid</code> part if valid, and sends to server-side to keep track as soon as user get internet access.</li>
<li>If the <code>User B</code> try to fake the <code>delivery_uuid</code>, it will obviously not match.</li>
<li>If the <code>User A</code> try to fake the QRCode, the <code>User B</code>'s app will not be able to validate the message.</li>
</ol>

<h1>Concerns</h1>

<ol>
<li>The fact of a <code>well-known</code> piece be present on every encrypted message can make it weaker? Considering that the key-pair is used just once.</li>
<li>The public key should NOT be visible to anyone. Only the back-end must use it to create the delivery proof message. Same obviously apply to the <code>delivery_uuid</code></li>
<li>Sh*t happens. If the user B mobile app somehow crashes and loose the <code>delivery_uuid</code> before sending it to back-end, the <code>user B</code> will need to rely on <code>user A</code> honesty.</li>
<li>How strong must my keys be? Considering the monetary value of the package is low. Is RSA the better encryptation in this case?</li>
</ol>

<p>I really know that this question is complex, but I really appreciate if someone can help-me with it.</p>

<p><em>Note:</em> I'm not sure that Stackoverflow is the right stackexchange community to ask about this, please comment if it's offtopic. But since it have something about logic, I think that's the right place.</p>
","<p>Use signatures and not encryption.</p>

<p>0) The app, as distributed, contains the public portion of a keypair only the server knows.</p>

<p>1) Every user that installs the app <strong>generates</strong> a keypair, keeping the private key, and uploading the public key to a database.</p>

<p>2) When a delivery is scheduled, the server generates a delivery ID and creates a message containing:</p>

<ul>
<li>The Delivery ID</li>
<li>The deliverer's (user A's) public key fingerprint.</li>
<li>The recipient's (user B's) public key fingerprint.</li>
</ul>

<p>A will receive this message and signature prior to making delivery. B can, but need not receive it prior to delivery.</p>

<p>3) When A meets B, A can off-line transfer the message and signature to B. QR code would be difficult, depending on key size, but NFC would certainly work. B can verify the server signature and know that the message has not been falsified or tampered with. A can transfer his public key to B and B can verify its fingerprint via the signed message. A can prove he is who he says he is by creating a signature with the private key belonging to the public key that was just transferred and verified.</p>

<p>4) B can prove who he is by creating a signature with the public key matching the fingerprint in the delivery message. B would have to transfer his public key to A if A didn't already have it, and A can verify it matches the fingerprint stored in the message.</p>

<p>5) B can certify receipt by creating a signature on a message saying so (however you want to format that) and off-line delivering it to A. A can then present this to the server, which the server can verify because it has B's public key.</p>
","186","<security><rsa><digital-signature><private-key>","3","1","5","2018-06-24 06:03:42","","3","1","6371459","","2018-04-04 06:01:04","2018-04-04 00:34:54",""
"49640987","Using Public/Private key pair as proof of delivery","<h1>The problem</h1>

<p>I'm working on a mobile application where <code>user A</code> should <strong>physically</strong> delivery something to <code>user B</code>, and the user <code>A</code> MUST prove that delivered it.</p>

<p>There is a restriction:</p>

<ul>
<li>User A or User B might be offline on the delivery, so it can not rely on internet connection</li>
</ul>

<h1>My approach</h1>

<p>I thought about using cryptography to solve this problem:</p>

<p>When the delivery is scheduled, the following process occurs:</p>

<ol>
<li>A key-pair is generated, and stored on database.</li>
<li>The private key belongs to <code>User B</code> and should be transfere to his mobile app.</li>
<li>Some <code>well-known+delivery_uuid</code> string is encrypted using the public key, and transferred to the <code>User A</code>.</li>
<li>User A is oriented to only show the encrypted code (in form of a QRCode) if the delivery occurs.</li>
<li>User B is oriented to read the QRCode using the mobile app when delivering.</li>
<li>Since the encrypted message begins with a <code>well-known</code> string, the <code>User B</code> mobile app can decrypt it and verify that the message is OK. The application store the <code>delivery_uuid</code> part if valid, and sends to server-side to keep track as soon as user get internet access.</li>
<li>If the <code>User B</code> try to fake the <code>delivery_uuid</code>, it will obviously not match.</li>
<li>If the <code>User A</code> try to fake the QRCode, the <code>User B</code>'s app will not be able to validate the message.</li>
</ol>

<h1>Concerns</h1>

<ol>
<li>The fact of a <code>well-known</code> piece be present on every encrypted message can make it weaker? Considering that the key-pair is used just once.</li>
<li>The public key should NOT be visible to anyone. Only the back-end must use it to create the delivery proof message. Same obviously apply to the <code>delivery_uuid</code></li>
<li>Sh*t happens. If the user B mobile app somehow crashes and loose the <code>delivery_uuid</code> before sending it to back-end, the <code>user B</code> will need to rely on <code>user A</code> honesty.</li>
<li>How strong must my keys be? Considering the monetary value of the package is low. Is RSA the better encryptation in this case?</li>
</ol>

<p>I really know that this question is complex, but I really appreciate if someone can help-me with it.</p>

<p><em>Note:</em> I'm not sure that Stackoverflow is the right stackexchange community to ask about this, please comment if it's offtopic. But since it have something about logic, I think that's the right place.</p>
","<p>Let's assume that:
- A has a key pair.
- B holds a delivery UUID.
The goal is to enable B to provide a proof that only A can provide. </p>

<p>As previous answers this can be solved by digital signature. You should let B and A to enchange the necessary information. B should provide the delivery Id, and A must sign it. </p>

<ul>
<li>You need to hold the public keys of the partners.</li>
<li>You need to provide a way for the information exchange, bluetooth perhaps?</li>
</ul>

<p>I believe that you may need more than this simple protocol.</p>
","186","<security><rsa><digital-signature><private-key>","3","0","5","2018-06-24 06:03:42","","3","1","6371459","","2018-04-04 06:01:04","2018-04-04 00:34:54",""
"49640987","Using Public/Private key pair as proof of delivery","<h1>The problem</h1>

<p>I'm working on a mobile application where <code>user A</code> should <strong>physically</strong> delivery something to <code>user B</code>, and the user <code>A</code> MUST prove that delivered it.</p>

<p>There is a restriction:</p>

<ul>
<li>User A or User B might be offline on the delivery, so it can not rely on internet connection</li>
</ul>

<h1>My approach</h1>

<p>I thought about using cryptography to solve this problem:</p>

<p>When the delivery is scheduled, the following process occurs:</p>

<ol>
<li>A key-pair is generated, and stored on database.</li>
<li>The private key belongs to <code>User B</code> and should be transfere to his mobile app.</li>
<li>Some <code>well-known+delivery_uuid</code> string is encrypted using the public key, and transferred to the <code>User A</code>.</li>
<li>User A is oriented to only show the encrypted code (in form of a QRCode) if the delivery occurs.</li>
<li>User B is oriented to read the QRCode using the mobile app when delivering.</li>
<li>Since the encrypted message begins with a <code>well-known</code> string, the <code>User B</code> mobile app can decrypt it and verify that the message is OK. The application store the <code>delivery_uuid</code> part if valid, and sends to server-side to keep track as soon as user get internet access.</li>
<li>If the <code>User B</code> try to fake the <code>delivery_uuid</code>, it will obviously not match.</li>
<li>If the <code>User A</code> try to fake the QRCode, the <code>User B</code>'s app will not be able to validate the message.</li>
</ol>

<h1>Concerns</h1>

<ol>
<li>The fact of a <code>well-known</code> piece be present on every encrypted message can make it weaker? Considering that the key-pair is used just once.</li>
<li>The public key should NOT be visible to anyone. Only the back-end must use it to create the delivery proof message. Same obviously apply to the <code>delivery_uuid</code></li>
<li>Sh*t happens. If the user B mobile app somehow crashes and loose the <code>delivery_uuid</code> before sending it to back-end, the <code>user B</code> will need to rely on <code>user A</code> honesty.</li>
<li>How strong must my keys be? Considering the monetary value of the package is low. Is RSA the better encryptation in this case?</li>
</ol>

<p>I really know that this question is complex, but I really appreciate if someone can help-me with it.</p>

<p><em>Note:</em> I'm not sure that Stackoverflow is the right stackexchange community to ask about this, please comment if it's offtopic. But since it have something about logic, I think that's the right place.</p>
","<p>After reading the answers, I've formulated a solution to the problem. I'm posting it as answer to know from everyone comments about it validity.</p>

<p>First, let give names to the actors to simplify:</p>

<ul>
<li>User A is the Seller</li>
<li>User B is the Buyer</li>
</ul>

<h1>The use case</h1>

<ol>
<li>The <em>buyer</em> decides to buy, and make the payment. Now he talk with the <em>seller</em> to combine the delivery.</li>
<li>After payment confirmed, the <em>back-end</em> generates an <code>UUID</code> , and associate it with that <code>transaction_id</code>. Let's call it <code>delivery_uuid</code>. By the business logic, only the <em>buyer</em> have access to it.</li>
<li>The <em>buyer</em> app requests the <code>delivery_uuid</code> to the <em>back-end</em>, which produce a message containing both the <code>delivery_uuid</code> and the <code>transaction_id</code>, then digitally sign this message. Lets call this <code>delivery secret</code></li>
<li>The <em>buyer</em> app will keep this message in storage.</li>
<li>When both <em>seller</em> and <em>buyer</em> meet, and the buyer checks if the product is OK, then he gives the <code>delivery secret</code>, using a QRCode or NFC.</li>
<li>With the <code>delivery secret</code> in hands, the seller's app can check the <code>delivery secret</code> authenticity (using the application's public key), then store it to send to <em>back-end</em> as <strong>proof of delivery</strong> as soon as he have internet access.</li>
<li>Now that the <em>back-end</em> have the <strong>proof of delivery</strong>, the payment to the seller is made.</li>
</ol>

<h2>Considerations</h2>

<h3>Buyer signature to the message</h3>

<p>I think that it's not necessary, since by the <em>back-end</em> conception, only the <em>buyer</em> have access to the <code>delivery secret</code>. If the <code>delivery secret</code> leaked, certainly I'm in a bigger trouble.</p>

<h3>Seller signature to the message</h3>

<p>Also not necessary, the only concern about the seller is that he needs to send the <code>delivery secret</code> to the back-end. If he loose the cellphone, that's not our problem. If the application crashes and the <code>delivery secret</code> is lost, then we have a problem.</p>

<h3>Server signature</h3>

<p>This signature allow the seller to make sure that the <code>delivery secret</code></p>

<ul>
<li>Belongs to the right transaction, preventing the the buyer to use an authentic <code>delivery token</code> from another transaction.</li>
<li>Have a valid <code>delivery_uuid</code></li>
<li>Make sure that <code>delivery secret</code> is still valid (we may add a validity to it)</li>
</ul>
","186","<security><rsa><digital-signature><private-key>","3","0","5","2018-06-24 06:03:42","","3","1","6371459","","2018-04-04 06:01:04","2018-04-04 00:34:54",""
"53087467","How to get the certificate part only and the private key part only respectively from PEM file in the command way?","<p>Convert a PKCS#12 file (.pfx .p12) containing a private key and certificates to PEM, by, for instance:</p>

<p><code>openssl pkcs12 -in cert_and_pvt_key.pfx -out cert_and_pvt_key.pem</code></p>

<p>then I have a PEM file with both certificate and private key, now, I want to get certificate file and private key file respectively, yes, I know cert_and_pvt_key.pem is in text format, we can copy the key part and cert part as we like, but, this is not elegant, I want something sophisticated, like <code>openssl pkcs12</code>, is there anything available?</p>
","<p>You can use the <code>-nocerts</code> and <code>-nokeys</code> option to <code>openssl pkcs12</code> to only output the part you need.  Run <code>openssl pkcs12</code> with each in turn:</p>

<pre><code>openssl pkcs12 -in cert_and_pvt_key.pfx -nokeys -out cert.pem
</code></pre>

<p>then:</p>

<pre><code>openssl pkcs12 -in cert_and_pvt_key.pfx -nocerts -out pvt_key.pem
</code></pre>

<p>If you haven't got access to the original PKCS#12 file, then it becomes a little more difficult.  The following <em>should</em> work:</p>

<pre><code>openssl pkcs12 -export -in cert_and_pvt_key.pem | openssl pkcs12 -nokeys -out cert.pem
</code></pre>

<p>and:</p>

<pre><code>openssl pkcs12 -export -in cert_and_pvt_key.pem | openssl pkcs12 -nocerts -out pvt_key.pem
</code></pre>

<p>However, this asks for a pass-phrase when the the PKCS#12 is created and again when it attempts to split the file to certificate and keys.  OpenSSL provides the <code>-nodes</code> verb to disable this pass-phrase, but it doesn't seem to work with <code>-export</code>.  Therefore, it would fail in a script.</p>

<p>Otherwise, you're left with splitting the file with <code>awk</code> or similar.  There are plenty of examples on this site.</p>
","184","<ssl><openssl><certificate><private-key><pem>","0","0","1","2018-11-05 21:32:03","","0","","","","","2018-10-31 15:55:27",""
"3481175","How would one write a private/public key system for a server authentication?","<p>I guess this might have been posted somewhere, I did search, but couldn't find anything.</p>

<p>I have this server on which I run a game server, and where I want to have some TCP server (possibly written in Ruby) that will provide a pseudo-session with few commands available (like restart the game server, send the logs, etc.)</p>

<p>What I want is an SSH-like authentication, where people have public &amp; private DSA keys (which I know how to generate), and the public key is recognized by the server as correct authentication.</p>

<p>I am not looking for code implementation, but mainly how this should be architectured.</p>

<p>What I was thinking was something like:</p>

<ul>
<li><code>[Client]</code> Connect to the server</li>
<li><code>[Server]</code> Send public key</li>
<li><code>[Client]</code> Send public key encoded with server's public key</li>
<li><code>[Server]</code> Compare the key with a database of authorized clients</li>
<li><code>[Server]</code> Generate session key, send it encrypted with client pub</li>
<li><code>[Client]</code> Decodes session key and starts sending messages always accompanied by the session key</li>
</ul>

<p>But I feel like this is missing something. Especially, when looking at DSA and PK systems, I keep seeing message signing, and I'm not sure I understand how different it is than using pub keys to encrypt and the session key?</p>

<p>If my question is not clear, I'd be glad to edit my post of course :-).</p>
","<p>If you want a SSL like implementation, then why not just use SSL?</p>
","184","<language-agnostic><public-key><private-key><dsa>","0","2","3","2010-08-13 23:43:53","3481228","1","","","","","2010-08-13 22:51:08",""
"3481175","How would one write a private/public key system for a server authentication?","<p>I guess this might have been posted somewhere, I did search, but couldn't find anything.</p>

<p>I have this server on which I run a game server, and where I want to have some TCP server (possibly written in Ruby) that will provide a pseudo-session with few commands available (like restart the game server, send the logs, etc.)</p>

<p>What I want is an SSH-like authentication, where people have public &amp; private DSA keys (which I know how to generate), and the public key is recognized by the server as correct authentication.</p>

<p>I am not looking for code implementation, but mainly how this should be architectured.</p>

<p>What I was thinking was something like:</p>

<ul>
<li><code>[Client]</code> Connect to the server</li>
<li><code>[Server]</code> Send public key</li>
<li><code>[Client]</code> Send public key encoded with server's public key</li>
<li><code>[Server]</code> Compare the key with a database of authorized clients</li>
<li><code>[Server]</code> Generate session key, send it encrypted with client pub</li>
<li><code>[Client]</code> Decodes session key and starts sending messages always accompanied by the session key</li>
</ul>

<p>But I feel like this is missing something. Especially, when looking at DSA and PK systems, I keep seeing message signing, and I'm not sure I understand how different it is than using pub keys to encrypt and the session key?</p>

<p>If my question is not clear, I'd be glad to edit my post of course :-).</p>
","<p>Instead of SSH-like, why not use SSH? Or use SSL, which has nearly ubiquitous library support for any platform?</p>

<p>First, it's easier. The code is written, tested, reviewed, and maintained.</p>

<p>Second, it's safer. If you don't understand why messages need to be signed, what else might you be overlooking? Honestly, even TLS (SSL), which has had a lot of scrutiny, had a serious flaw in the renegotiation bug that was recently publicized. Even when you know what you are doing, designing a secure protocol is hard.</p>

<p>By the way, SSH and SSL compute a message authentication code for every protocol record so that a man-in-the-middle cannot tamper with the message content.</p>
","184","<language-agnostic><public-key><private-key><dsa>","0","2","3","2010-08-13 23:43:53","3481228","1","","","","","2010-08-13 22:51:08",""
"3481175","How would one write a private/public key system for a server authentication?","<p>I guess this might have been posted somewhere, I did search, but couldn't find anything.</p>

<p>I have this server on which I run a game server, and where I want to have some TCP server (possibly written in Ruby) that will provide a pseudo-session with few commands available (like restart the game server, send the logs, etc.)</p>

<p>What I want is an SSH-like authentication, where people have public &amp; private DSA keys (which I know how to generate), and the public key is recognized by the server as correct authentication.</p>

<p>I am not looking for code implementation, but mainly how this should be architectured.</p>

<p>What I was thinking was something like:</p>

<ul>
<li><code>[Client]</code> Connect to the server</li>
<li><code>[Server]</code> Send public key</li>
<li><code>[Client]</code> Send public key encoded with server's public key</li>
<li><code>[Server]</code> Compare the key with a database of authorized clients</li>
<li><code>[Server]</code> Generate session key, send it encrypted with client pub</li>
<li><code>[Client]</code> Decodes session key and starts sending messages always accompanied by the session key</li>
</ul>

<p>But I feel like this is missing something. Especially, when looking at DSA and PK systems, I keep seeing message signing, and I'm not sure I understand how different it is than using pub keys to encrypt and the session key?</p>

<p>If my question is not clear, I'd be glad to edit my post of course :-).</p>
","<p>If you do choose to go the route of implementing your own layer of security (which <em>is</em> sometimes the right answer), there are a lot of subtleties to be aware of. Start by reading what I consider the definitive tomb on the topic:</p>

<p>Bruce Schneier's <a href=""https://rads.stackoverflow.com/amzn/click/com/0471117099"" rel=""nofollow noreferrer"" rel=""nofollow noreferrer"">Applied Cryptography</a></p>
","184","<language-agnostic><public-key><private-key><dsa>","0","2","3","2010-08-13 23:43:53","3481228","1","","","","","2010-08-13 22:51:08",""
"25602019","Android in-app purchase: are developer payload and nonce negligible for an app with no accounts, no subscriptions, no downloads?","<p>My app just has a in app purchase for full license. It has no subscriptions, no downloads of items from any server. The license purchase is performed just one time and accounts are not managed so just the Google account is relevant. The Google account is the user. I am pointing all this out because I have strongly protected the private key and the sku name and deem it is enough for my app. </p>

<p>Is strongly protecting the private key and the sku name enough for an app like mine? I think it is enough: no developer payload (no accounts) or nonce (no replay attacks) are needed. Am I right or wrong?</p>
","<p>Might be good idea to implement android's own licensing as it will save you many troubles and will let you have better track of the licenses your customers have adquired, check this out:</p>

<p><a href=""http://developer.android.com/google/play/licensing/index.html"" rel=""nofollow"">http://developer.android.com/google/play/licensing/index.html</a></p>

<p>It also explains best practices, and takes on the subject of ofuscation to patch up your data security.</p>
","182","<android><in-app-purchase><private-key><nonce><developer-payload>","0","0","1","2014-09-01 09:01:09","","0","","","","","2014-09-01 08:46:18",""
"18133773","PHP using openssl functions cause the webpage to not load","<p>So I'm working with encryption and decryption for the first time and have ran into a bit of an issue. To obtain my private and public keys, I have this code:</p>

<pre><code>//get public key
$client_cert = openssl_x509_read(file_get_contents(""path\to\certificate""));
$pub_key = openssl_pkey_get_public($client_cert);

//get private key
$pk = file_get_contents(""path\to\pk.pem"");
$private_key = openssl_pkey_get_private($pk);
</code></pre>

<p>If I run a var dump on either $pub_key or $private_key, I see that they are both resources of type OpenSSL key. However, if I try to run openssl_pkey_get_details on either of these, the web page dies and I get a message saying the webpage is not available. This also happens if I try to run this line:</p>

<pre><code>openssl_private_encrypt($server_challenge, $encrypted_server_challenge, $private_key);
</code></pre>

<p>I've checked both the apache and php logs but neither of them show anything. Any help would be greatly appreciated</p>

<p>Edit: This is the full block of code</p>

<pre><code>//get public key
$client_cert = openssl_x509_read(file_get_contents(""C:\Users\Brandon\Desktop\Work\ClientCertification.cer""));
$pub_key = openssl_pkey_get_public($client_cert);

//get private key
$pk = file_get_contents(""C:\Users\Brandon\Desktop\Work\pk.pem"");
$private_key = openssl_pkey_get_private($pk);

$client = new SoapClient(""https://ws5.responsys.net/webservices/wsdl/ResponsysWS_Level1.wsdl"");
$response = $client-&gt;authenticateServer($this-&gt;loginParameters);

//encrypt server challenge with private key
$server_challenge = implode($response-&gt;result-&gt;serverChallenge);

openssl_private_encrypt($server_challenge, $encrypted_server_challenge, $private_key);
</code></pre>
","","182","<php><encryption><openssl><private-key>","0","","0","2013-08-08 18:56:40","","9","0","974639","","2013-08-08 18:56:40","2013-08-08 18:48:33",""
"19034589","Encrypt data using private key provided as text (i.e. without keystore)","<p>There's a ton of documentation out there on how to create keystores and use them with java. Unfortunately that copious documentation entirely swamps anything out there on how to do encryption without using a keystore, and I've been unable to find a good starting point. I understand that most of the time keystores are a good idea. I have a very specific and oddball case (which I don't want to disclose the details of so don't ask) where I want to be able to provide a private key as text in a format similar to what is used for ssh in the .ssh/id_rsa private key file:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,508C51E6852AFF6BE89DB2B8A185DC4A

lG/N0foobarbazfobarbazFoOB4R842foobarbazfobarbazFoOB4R842foobarb
azfobarfoobarbazfobarbazFoOB4R842foobarbazfobarbazFoOB4R842fooba
rbazfobarbazFoOB4R842foobarbazfobarbazFoOB4R842fjdsjkfdsjklfadsj
azfobarfoobarbazfobarbazFoOB4R842foobarbazfobarbazFoOB4R842fooba
rbazfobarbazFoOB4R842foobarbazfobarbazFoOB4R842fjdsjkfdsjklfadsj
azfobarfoobarbazfobarbazFoOB4R842foobarbazfobarbazFoOB4R842fooba
rbazfobarbazFoOB4R842foobarbazfobarbazFoOB4R842fjdsjkfdsjklfadsj
azfobarfoobarbazfobarbazFoOB4R842foobarbazfobarbazFoOB4R842fooba
rbazfobarbazFoOB4R842foobarbazfobarbazFoOB4R842fjdsjkfdsjklfadsj
azfobarfoobarbazfobarbazFoOB4R842foobarbazfobarbazFoOB4R842fooba
rbazfobarbazFoOB4R842foobarbazfobarbazFoOB4R842fjdsjkfdsjklfadsj
azfobarfoobarbazfobarbazFoOB4R842foobarbazfobarbazFoOB4R842fooba
rbazfobarbazFoOB4R842foobarbazfobarbazFoOB4R842fjdsjkfdsjklfadsj
azfobarfoobarbazfobarbazFoOB4R842foobarbazfobarbazFoOB4R842fooba
rbazfobarbazFoOB4R842foobarbazfobarbazFoOB4R842fjdsjkfdsjklfadsj
azfobarfoobarbazfobarbazFoOB4R842foobarbazfobarbazFoOB4R842fooba
rbazfobarbazFoOB4R842foobarbazfobarbazFoOB4R842fjdsjkfdsj0b+FMFD
-----END RSA PRIVATE KEY-----
</code></pre>

<p>And then use that to encrypt some other data. One problem I have is that although I've set up numerous ssh accounts in the past I don't know the actual name of that particular format (is it PEM? but examples of pem I have seen while searching lack the Proc-Type and DEK-Info lines) so searching for javadoc or other advice on consuming it is not possible.  </p>

<p>Questions are these: What  is the name of the above format? What is the best way to consume that format from a Java String with the intent of using it to encrypt data (to later be decrypted with the matching public key of course)?</p>
","","182","<java><encryption><private-key>","1","","0","2013-09-26 17:23:50","","4","","","","","2013-09-26 17:19:33",""
"31846252","Unable to create p12 from aps_production created from apple developer account using push","<p>I am developing an iOS app using intelXDK which uses push notification but i found one problem in achieving this.
Unable to create p12 from aps_production created from apple developer account using push.pusCSR issued from intelXDK,i could not add this certificate to my keychain showing some error like ""The “System Roots” keychain cannot be modified.""</p>

<p>Please help me on this to make this push notifications i am fresher to this platform</p>
","<p>and push works now</p>

<p>1.created both dist and aps production cert with same csr and converted aps_production key to p12.</p>

<p>2.Uploaded to certificate stage in intelXDK.</p>

<p>3.Leave aps_production certificate tab and build the app.</p>

<p>it will work fine!!</p>
","181","<ios><apple-push-notifications><private-key><intel-xdk>","0","0","1","2015-08-06 11:14:01","","1","","","","","2015-08-06 03:19:32",""
"8312747","Store PrivateKey in ServletContext","<p>I would like your opinion. I am developing a <code>Servlet</code> that has to <strong>sign</strong> the requests that it sends to an endpoint. </p>

<p>In order to avoid read from file the server's keystore, load it and get the private key, I am doing all of that in a listener that implements <code>ServletContextListener</code>. In this way this is done only when the servlet is initialised (deployed).  </p>

<p>Once I get the private key I am storing it in the application's <code>ServletContext</code>. Do you think that is a good design decision?</p>

<p>Thanks in advance.</p>
","<p>Whatever solution you choose, you'll have the private key in memory at some time. So any cracker having access to the memory could find a way to get this private key. Loading it once and storing it in memory at startup looks like a good solution to me. Just make sure that the server is not easily accessible to malicious persons.</p>
","181","<java><private-key><servlets>","0","1","1","2011-12-16 05:41:57","8312951","0","","738746","","2011-12-16 05:41:57","2011-11-29 14:48:54",""
"51241149","Convert C# to NodeJS (Sha1, Message Digest, Sign with Private Key)","<p>I have a task to convert C# code to NodeJS. I got stuck in the conversion. Looks a bit complicated to me. Any help would be appreciated.</p>

<pre><code>byte[] str = ASCIIEncoding.Unicode.GetBytes('mystring');
SHA1 sha1 = SHA1.Create();
byte[] hashdata = sha1.ComputeHash(str);

RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();
rsa.FromXmlString(PrivateKey);
byte[] signature = rsa.SignData(hashdata, new SHA1CryptoServiceProvider());
return Convert.ToBase64String(signature);
</code></pre>

<p>This is what i come up with. But it is not producing the same result as C# code.</p>

<pre><code>var convertString = require('convert-string');
var sha1 = require('js-sha1');
var rsaSign = require('jsrsasign');
var rsaUtil = require('jsrsasign-util');

var privateKeyFile = 'files/pvtKey'; //Its a PEM Private Key converted from XML Private Key.
/* -----BEGIN RSA PRIVATE KEY-----
MIICXQIBAAKBgQCYeml ... 
-----END RSA PRIVATE KEY-----*/
var bytesArray = convertString.stringToBytes('mystring');
var messageDigest = sha1(bytesArray);
var privateKeyContent = rsaUtil.readFile(privateKeyFile);
var privateKey = rsaSign.KEYUTIL.getKey(privateKeyContent);
var sig = new rsaSign.KJUR.crypto.Signature({'alg': 'SHA1withRSA'});
sig.init(privateKey);
sig.updateHex(messageDigest);
var signedMsgDigest = sig.sign();
return Buffer.from(signedMsgDigest).toString('base64');
</code></pre>
","<p>After a long struggle, i managed to convert myself. Just leaving it here. May save time for someone.</p>

<p><strong>authhelper.js</strong></p>

<pre><code>var sha1 = require('js-sha1');
var rsaSign = require('jsrsasign');
var rsaUtil = require('jsrsasign-util');

var authhelper = {
    generateAuthKey: function (str, privateKeyFile) {
        // Change to bytes array with UTF-16 encoding
        var bytesArray = this.stringToByteArray(str, 'utf16le');

        // Hash result of step b with SHA1 algorithm to get message digest
        var messageDigest = sha1(bytesArray);

        // Sign message digest using private key (SHA1 with RSA)
        var privateKeyContent = rsaUtil.readFile(privateKeyFile);
        var privateKey = rsaSign.KEYUTIL.getKey(privateKeyContent);
        var sig = new rsaSign.KJUR.crypto.Signature({'alg': 'SHA1withRSA'});
        sig.init(privateKey);
        sig.updateHex(messageDigest);
        var signedMsgDigest = sig.sign();

        // Encode with Base64
        var authKey = Buffer.from(signedMsgDigest, 'hex').toString('base64');

        return authKey;
    },

    stringToByteArray: function (str, encoding) {
        var byteArr = [];

        var buffer = new Buffer(str, encoding);
        for (var i = 0; i &lt; buffer.length; i++) {
            byteArr.push(buffer[i]);
        }

        return byteArr;
    }
};

module.exports = authhelper;
</code></pre>

<p><strong>In routes.js import the authhelper.js and use it as below.</strong></p>

<pre><code>var authHelper = require('authhelper');

var str = 'mystring';
var privateKeyFile = 'files/pvtKey';
var authKey = authHelper.generateAuthKey(str, privateKeyFile);
</code></pre>
","179","<c#><node.js><rsa><sha1><private-key>","0","0","1","2018-07-12 04:50:13","","0","","","","","2018-07-09 08:33:37",""
"35152375","can't connect to server via Jsch using maven","<p>I can't connect to my server via Jsch. I'm getting</p>

<blockquote>
  <p>com.jcraft.jsch.JSchException: Algorithm negotiation fail</p>
</blockquote>

<p>pom looks like that </p>

<pre><code>    &lt;dependency&gt;
        &lt;groupId&gt;com.jcraft&lt;/groupId&gt;
        &lt;artifactId&gt;jsch&lt;/artifactId&gt;
        &lt;version&gt;0.1.53&lt;/version&gt;
    &lt;/dependency&gt;
</code></pre>

<p>my Code looks like that</p>

<pre><code>import com.jcraft.jsch.JSch;
import com.jcraft.jsch.Session;

public class UserAuthPubKey {
    public static void main(String[] arg) {
        try {
            JSch jsch = new JSch();

            String user = ""...."";
            String host = ""...."";
            String privateKey = ""C:\\Users\\user\\.ssh\\id_rs_user"";

            jsch.addIdentity(privateKey);

            Session session = jsch.getSession(user, host, 22);

            session.connect();
            System.out.println(""session connected....."");

        } catch (Exception e) {
            System.err.println(e);
        }
    }
}
</code></pre>

<hr>

<blockquote>
  <p>I had to replace the JRE - java unlimited strength policy. That solved
  my problem</p>
</blockquote>
","","178","<java><ssh><jsch><private-key>","1","","0","2016-02-02 14:12:38","","0","","5603658","","2016-02-02 14:12:38","2016-02-02 11:37:16","2016-02-14 16:16:53"
"16915234","Unable to sign text block with Private Key","<p>I am trying to create a digital signature of a load of clipboard text. I am:</p>

<ol>
<li>Creating a SHA-256 hash of the plain text.</li>
<li>Encrypting this hash with my PRIVATE key.</li>
<li>Attempting to decrypt this with my PUBLIC key.</li>
</ol>

<p>I'm doing this as I am of the understanding that anything signed with my PRIVATE key can be decrypted with my PUBLIC - such as this for verification?  Is this wrong?</p>

<p>I'm encrypting the hash with these methods:</p>

<pre><code>                public static string EncryptText(string text, int keySize, string publicKey)
            {
                var encrypted = Encrypt(Encoding.UTF8.GetBytes(text), keySize, publicKey);
                return Convert.ToBase64String(encrypted);
            }

            public static byte[] Encrypt(byte[] data, int keySize, string publicKeyXml)
            {
                if (data == null || data.Length == 0) throw new ArgumentException(""Data are empty"", ""data"");
                int maxLength = GetMaxDataLength(keySize);
                if (data.Length &gt; maxLength) throw new ArgumentException(String.Format(""Maximum data length is {0}"", maxLength), ""data"");
                if (!IsKeySizeValid(keySize)) throw new ArgumentException(""Key size is not valid"", ""keySize"");
                if (String.IsNullOrEmpty(publicKeyXml)) throw new ArgumentException(""Key is null or empty"", ""publicKeyXml"");

                using (var provider = new RSACryptoServiceProvider(keySize))
                {
                    provider.FromXmlString(publicKeyXml);
                    return provider.Encrypt(data, OptimalAsymmetricEncryptionPadding);
                }
            }
</code></pre>

<p>but passing my <code>PRIVATE KEY</code> down instead of my <code>PUBLIC KEY</code>.</p>

<p>Then to verify the signature, I am using:</p>

<pre><code>                public static string DecryptText(string privateKey, int keySize, string text)
            {
                var decrypted = Decrypt(Convert.FromBase64String(text), keySize, privateKey);
                return Encoding.UTF8.GetString(decrypted);
            }

            public static byte[] Decrypt(byte[] data, int keySize, string publicAndPrivateKeyXml)
            {
                if (data == null || data.Length == 0) throw new ArgumentException(""Data are empty"", ""data"");
                if (!IsKeySizeValid(keySize)) throw new ArgumentException(""Key size is not valid"", ""keySize"");
                if (String.IsNullOrEmpty(publicAndPrivateKeyXml)) throw new ArgumentException(""Key is null or empty"", ""publicAndPrivateKeyXml"");

                using (var provider = new RSACryptoServiceProvider(keySize))
                {
                    provider.FromXmlString(publicAndPrivateKeyXml);
                    return provider.Decrypt(data, OptimalAsymmetricEncryptionPadding);
                }
            }
</code></pre>

<p>but passing down my <code>PUBLIC KEY</code> rather than the <code>PRIVATE KEY</code>. At this point, I am getting an error ""Key does not exist"".</p>

<p>I'm presuming this is the case because the <code>PRIVATE KEY</code> contains the relevant key information for the <code>PUBLIC KEY</code> so it can decode this one-way.</p>

<p>How can I sign a block of text in this way that allows me to distribute a signature with it, that can be decrypted by anybody who knows my <code>PUBLIC KEY</code>? </p>
","<p>After much trawling, I found this page:
<a href=""http://juzzbott.com.au/blog/signing-and-verifying-data-within-csharp"" rel=""nofollow"">http://juzzbott.com.au/blog/signing-and-verifying-data-within-csharp</a></p>
","173","<public-key-encryption><signing><private-key><sha256><public-key>","0","0","1","2013-06-04 20:35:52","","0","","","","","2013-06-04 10:15:29",""
"30507158","How can I read private key with password?","<p>I would like to read private key in java which is with passphase </p>

<p>to create this private key I used a openssl with: </p>

<pre><code>genrsa -aes128 -out private.pem 
</code></pre>

<p>When I will try to open this file at the beginig I have: </p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,B01D36B426B8E9E8DFCDD8518D1A857F

dt3z+UEyeVarEL7mjEcRPXpUP3Zk/IbDJrwVhpYt95K5t4X+2+CIB/qsycp+d0Tr
NLhddUF0johgFMYfUnvNsJuo8PePE1bYH+Q1BYONoSqktHgmyR7BaZU2oQiWH6qI
</code></pre>

<p>and eof: </p>

<pre><code>-----END RSA PRIVATE KEY-----
</code></pre>

<p>Each my attempt finished fail. 
Most of the time I get:</p>

<pre><code>DerInputStream.getLength(): lengthTag=58, too big.
</code></pre>

<p>I don't know what to do with this issue :(
With private key withouth password I dont have any troubles but I stuck with this password :( </p>
","","172","<java><private-key>","0","","0","2015-05-28 12:54:46","","3","","744178","","2015-05-28 12:54:46","2015-05-28 12:53:16",""
"53643523","How to move file to other server in Laravel using ftp and private key?","<p>i want to move file from my site to other server using ftp in laravel.</p>

<p>i put this setting in config/filesystem.php and its works
<div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code> 'ftp' =&gt; [
            'driver'   =&gt; 'ftp',
            'host'     =&gt; 'ftp.xxx.my',
            'username' =&gt; 'xxx',
            'password' =&gt; 'xxx',
            'root' =&gt; '/tess',
        ],</code></pre>
</div>
</div>

But my client ask to use private key only without password and username, so i changed my setting</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>'ftp' =&gt; [
                'driver'   =&gt; 'ftp',
                'host'     =&gt; 'ftp.xxx.my',
               'privateKey' =&gt;storage_path('app/public/key/momuat.ppk'),
                'root' =&gt; '/tess',
            ],</code></pre>
</div>
</div>
</p>

<p>and i got error</p>

<pre><code>Could not login with username: anonymous, host: 192.168.0.123
</code></pre>

<p>Please help me</p>
","","171","<php><laravel><ftp><filesystems><private-key>","1","","0","2018-12-06 02:01:08","","2","","","","","2018-12-06 02:01:08",""
"45000748","Reconstructing KeyPair from OpenSSL PEM encoded key","<p>I have a key created with OpenSSL from a previous app with the commands:</p>

<pre class=""lang-bash prettyprint-override""><code>openssl req -nodes -newkey rsa:2048 -keyout root.key \
    -out root.csr -config ./openssl.cnf
</code></pre>

<p>I changed it to a PKCS8 key since I need to use that key in Java with:</p>

<pre class=""lang-bash prettyprint-override""><code>openssl pkcs8 -topk8 -nocrypt -in pkcs1_key_file -out pkcs8_key.pem
</code></pre>

<p>As far as I can tell, this works since I'm able to create a SSLContext with it.  I'm having trouble recreating a <code>KeyPair</code> object in order to perform other operations with it. I've tried:</p>

<pre class=""lang-java prettyprint-override""><code>Path privateKeyPath = Paths.get(""root.key.pem"");
File privateKeyFile = new File( System.getProperty(""user.dir"") + File.separator + ""ue.key.pem"");
byte[] bytes = Files.readAllBytes(privateKeyPath);
PKCS8EncodedKeySpec ks = new PKCS8EncodedKeySpec(bytes);
BufferedReader br = new BufferedReader(new FileReader(privateKeyPath.toFile()));
PEMParser pemParser = new PEMParser(new FileReader(privateKeyFile));
PrivateKeyInfo privateKeyInfo = (PrivateKeyInfo) pemParser.readObject(); // ?????
</code></pre>

<p>I've seen other code like <a href=""https://stackoverflow.com/q/22920131/608639"">Read an encrypted private key with bouncycastle/spongycastle</a>, where they do <code>pemParser.readObject</code>, the object is of type <code>PEMEncryptedKeyPair</code>, or they use the converter to <code>getKeyPair()</code>, but when I call <code>readObject</code>, my object is of type <code>PrivateKeyInfo</code> so I cannot call <code>getKeyPair</code> either.</p>

<p>Is there a step somewhere I'm missing in either the changing to PKCS8 key with the OpenSSL command, or in trying to reconstruct the <code>KeyPair</code>?  Thanks.</p>
","","171","<java><ssl><rsa><private-key><pkcs#8>","0","","0","2017-07-09 23:34:11","","3","1","608639","","2017-07-09 23:34:11","2017-07-09 20:30:13",""
"57038143","Trying to specify key for paramiko SSHClient, error: Could not deserialize key data","<p>First off, I want to clarify that I'm pretty new to the whole python world.</p>

<p>I'm trying to create a python script, to ssh to multiple servers and execute bash commands.</p>

<p>For this, I'm using Paramiko, and this has led to some problems.</p>

<ol>
<li><p>For some reason, my OpenSSH ssh key doesn't work, but this I have solved by creating a new one, with a different format.</p></li>
<li><p>This has led to me having to specify which key I want to use, to start with I tried to connect without a password specified, but then Paramiko couldn't decrypt the key.</p>

<pre><code>password = ""somepassword""
pkey_path = ""/Users/user1/.ssh/id_rsa_copy""
key = RSAKey.from_private_key_file(pkey_path,password=password)

c = SSHClient()
c.set_missing_host_key_policy(AutoAddPolicy())

c.connect('somesite.com',password=password,pkey=key,look_for_keys=False)
stdin, stdout, stderr = c.exec_command('uptime')
c.close()
</code></pre></li>
</ol>

<p>When executing the script, I receive the following error:</p>

<pre class=""lang-none prettyprint-override""><code>Traceback (most recent call last):
  File ""/Users/user1/projects/my_first_venv/lib/python3.7/site-packages/paramiko/rsakey.py"", line 185, in _decode_key
    data, password=None, backend=default_backend()
  File ""/Users/user1/projects/my_first_venv/lib/python3.7/site-packages/cryptography/hazmat/primitives/serialization/base.py"", line 28, in load_der_private_key
    return backend.load_der_private_key(data, password)
  File ""/Users/user1/projects/my_first_venv/lib/python3.7/site-packages/cryptography/hazmat/backends/openssl/backend.py"", line 1106, in load_der_private_key
    password,
  File ""/Users/user1/projects/my_first_venv/lib/python3.7/site-packages/cryptography/hazmat/backends/openssl/backend.py"", line 1277, in _load_key
    self._handle_key_loading_error()
  File ""/Users/user1/projects/my_first_venv/lib/python3.7/site-packages/cryptography/hazmat/backends/openssl/backend.py"", line 1335, in _handle_key_loading_error
    raise ValueError(""Could not deserialize key data."")
ValueError: Could not deserialize key data.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/Users/user1/projects/python/paramiko-puppet.py"", line 7, in &lt;module&gt;
    key = RSAKey.from_private_key_file(pkey_path,password=password)
  File ""/Users/user1/projects/my_first_venv/lib/python3.7/site-packages/paramiko/pkey.py"", line 206, in from_private_key_file
    key = cls(filename=filename, password=password)
  File ""/Users/user1/projects/my_first_venv/lib/python3.7/site-packages/paramiko/rsakey.py"", line 55, in __init__
    self._from_private_key_file(filename, password)
  File ""/Users/user1/projects/my_first_venv/lib/python3.7/site-packages/paramiko/rsakey.py"", line 176, in _from_private_key_file
    self._decode_key(data)
  File ""/Users/user1/projects/my_first_venv/lib/python3.7/site-packages/paramiko/rsakey.py"", line 188, in _decode_key
    raise SSHException(str(e))
paramiko.ssh_exception.SSHException: Could not deserialize key data.
</code></pre>

<hr>

<p><strong>EDIT:</strong>
As requested here is the command which I used to generate a new ssh key, and what a key looks like when generated.</p>

<p>First I copied my current ssh key and then ""transformed"" it.</p>

<pre class=""lang-none prettyprint-override""><code>ssh-keygen -p -m PEM -f ~/.ssh/id_rsa_copy
</code></pre>

<p>New key:</p>

<pre class=""lang-none prettyprint-override""><code>-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,E48A0313BF686BDA7EB6B7F26B10BCC0

jeMD8Eh4g5cpq5YkFKMN5EbquJEVwser2NV6QI/ysO7wPs0SVy3HzoRjaOT4Iox+
gOX90VX5pml3v8S7UmYNzvI+sJMIo/pNpG3qai9OkL9/Z0DJRbTOBXY0nJhkvSVl
W41ojZOot/KWlgrHfPkYZ/Q9L4JJbmP/ChEi1SKFhSByjI9oZnmIHPTEinPib8AZ
j7Wd8S5tF6rJtuapVBPEz8NZLDOsTIME9iql3AxURRbMdQz3IfbWMuSP69ZO8ibe
PFnlHC0u6CjYpZ01axegDSw09xDFuywe0tRfCb0eK7NJQxfeLL3IoKz36+74De2Y
QA5jrJ/Yz/HIIWoOYh+M3wXBIBMSQ5I9/K9twEtyJ/zVOLaXEbJlBiWRPcXzbPXf
NwbfUUNc5ylI729FMB+cE3NuPqen3Hw+FlyKAKu2+E8I56THJIjwsZy3xEY4qkdO
pFukD7UiubB11mJUdT2RkNlI8/0zKCfTjzhRD8lEXFtMu/1OSdPdmaNu62XsXMcq
StA+TqnzMFQ+20vde6NgrZagC/jK3yMJgYSTf9uMLhone+SLVXh0AqPNmuvbHPN7
DvGcYTFlNt340of2Pi9myeOPNdZniLZtq7Oz+Z+2hs/3NxciHbO6MbMpK1Uk2pZK
wovw7+nt71IYjWrzfpVbFI2F7Rw+0rTzmIpe56gv1CtlWZ6pXYbnSakyEKXtCTh8
7CJ4ofSChp4vkCtx6wwjZK/1ysLL1i6pY9Y7TMHumKLTjN+iK0oK//h0/EJIUVVn
3HzX/qwYyTLBJrsr/wvWK6AjYRbUjncDC6fyGVSa25tlcgbo7rsTUaEsiBzhxBK/
zolpRjlBiHU4W64niXJShdU9RGANvPe9jiL1dmg58ZpaKRD4mN6qzxfG8TTBxMLS
+VmMgIFwcFVg2PtQgnoaqqcGFUlRlkoZX8rZ7xktg7ghPTRKxoxaeu0WKYrQzowi
hatyNhQbQ6h8zWb0Mt1+EVcatjAPHp8N/wosTX8QkYtyC82/uFXiz3eQr7RBZl4Z
hd2GkGZLvPPgP6dtXwHeqgGabsDCuFAKYhqnvlXeB6TURqgN9z0uBrRf/JzQV3n2
QZkHCoLKxqK86dw5/yjT+gS/kH8QBvvk/qJEh2tLWRrntD2if6KUXWWaFenq3v/U
ZNb3+ZnJKQMm8ujOJ0gzJo+SC2xDNJFOUMJbi7YVZ2JJSOcZ/Tcfbl8/VriKv+wD
kt2Ksv2vtSYXAqmItUnKcZMPVwujmmr+zpO6Nya+v4+nTfb7lgYYlVR/SxipELm4
HCgTFkQ0bQHURz+WikvSP8EvYqc/DpuvBu4m7yTcbKoJk4iozxzG6K3ligo8QT5o
uF2AFcNLOImo4E3sFUAW6FsDxUV+AuOD16XckRUiz+jYIhh6pbXNhfsYLC0bDaSf
3bC5O9IH7vVWzj8FfcuVxRCzHOoMRROrtTa983KV96YHEAzhIzb9GKEAvFkCN6wE
7a2m3MpTszPa+wnFA4CVuXmLsB5jCmzq0CcPE4SKmX03buN9v+oEOTHDUoAyMebg
RPurPnPkZfJT9RH0MNZ2HaavhJ/eXfALveYgSZBdiY6YiseQr5kKZJItKRZWBwR+
-----END RSA PRIVATE KEY-----
</code></pre>
","<p>If I do exactly the same, it works for me.</p>

<p>But if I use a wrong passphrase in <code>password=password</code>, I get the same error as you get. So double check that you use the correct passphrase.</p>

<p>The password argument of <code>from_private_key_file</code> is your private key passphrase, not your account password.</p>

<hr>

<p><em>In general you should not even need any account password, if you use private key, so I'm not sure why you pass password in the connect call – but that's not the immediate issue now.</em></p>
","171","<python><python-3.x><ssh><paramiko><private-key>","2","2","1","2019-07-19 11:07:16","57111174","9","1","850848","","2019-07-19 11:07:16","2019-07-15 10:48:25",""
"27740131","How to pass argument inside forever while running nodejs in ubuntu for HTTPs private key passphrase","<p>I am running nodejs and using forever to forever run file.</p>

<p>Today i have changed code of node and introduced https module in it and given my private key path to it.</p>

<p>Now whenever i start nodejs it asks me for passphrase of private key.
But now my issue is how to pass this passphrase in forever process.</p>
","<p>this may be too late for you but it may be useful for anyone's reference in future.</p>

<p>you cannot pass an argument to provide a pass-phrase for your key file in forever but you can achieve that when creating the server. see the following example for more:</p>

<pre><code>https.createServer({
        key: privateKey.pem,
        passphrase:'your-passphrase',
        cert: publicCertificate.pem
    }, app);
</code></pre>

<p>node js will automatically enter the pass-phrase and run the server in secure mode. </p>
","170","<node.js><ubuntu><https><private-key><forever>","1","1","1","2015-05-18 09:08:02","","0","","","","","2015-01-02 09:44:05",""
"58081347","Windows service user account can't access the certificate store","<h1>Background</h1>

<p>I have a Windows 7 VM with two user accounts (condor_usr1 and condor_usr2) that is used for source code compiling.  The condor_usr[1|2] accounts are members of the administrators group.  I have an HTCondor master VM that periodically receives jobs and assigns each job to run on one of the condor_usr[1|2] accounts.  The condor service on the Win7 VM runs as the local system account, but jobs being executed actually run as the condor_usr[1|2] account.</p>

<p>I have a new requirement to sign the compiled executable.  I've imported the certificate with private key into the Current User\Personal key store in the Windows Certificate store.</p>

<h1>Problem</h1>

<p>If I'm logged into the Win7 VM (e.g. via remote desktop) as one of the condor_usr accounts, then compiles running as that account will successfully sign the executable, but compiles running as the other account will fail to sign the executable.  For example, if I'm logged in as condor_usr2, then compiles running under condor_usr2 will sign successfully and compiles running under condor_usr1 will fail to sign.  If I log out, both accounts fail to sign.</p>

<p>The specific error I receive is:</p>

<pre><code>C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\MSBuild\Microsoft\VisualStudio\v15.0\OfficeTools\Microsoft.VisualStudio.Tools.Office.targets(264,9): error MSB3482: An error occurred while signing: The system cannot find the file specified.
</code></pre>

<p>Turned on some audit logging and found the following log that occurred at the same time as a signing failure.</p>

<p><a href=""https://i.stack.imgur.com/SzQLr.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/SzQLr.png"" alt=""signing failure""></a></p>

<h1>Goal</h1>

<p>Sign the compiled executable successfully regardless of which account the compile is running as and without requiring a user to be logged in.</p>

<h1>What I've Figured Out So Far</h1>

<ul>
<li>The code/project being compiled is a Visual Studio 2017 solution.</li>
<li>The signing method is ClickOnce manifest signing (an option in the VS2017 project).</li>
<li>When a compile job is started, the job logs in as condor_usr[1|2] using logon type 2 (interactive logon).
<a href=""https://ss64.com/nt/syntax-logon-types.html"" rel=""nofollow noreferrer"">https://ss64.com/nt/syntax-logon-types.html</a></li>
</ul>

<p><a href=""https://i.stack.imgur.com/ZLT4V.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ZLT4V.png"" alt=""logon type""></a></p>

<h1>Things I've Tried</h1>

<p>Unless otherwise noted, these actions had no effect and were reverted.</p>

<ul>
<li>Adding the condor_usr accounts to the Cryptographic Operators group.</li>
<li>Importing the certificate w/ private key to the Local Computer\Personal key store.

<ul>
<li>Granting the Network Service account full control to the certificate/private key.
<a href=""https://community.dynamics.com/nav/b/technicaltipsandtricksfordynamicsnav/posts/how-to-grant-access-to-the-certificate-s-private-key-to-the-service-account-for-microsoft-dynamics-nav-server"" rel=""nofollow noreferrer"">https://community.dynamics.com/nav/b/technicaltipsandtricksfordynamicsnav/posts/how-to-grant-access-to-the-certificate-s-private-key-to-the-service-account-for-microsoft-dynamics-nav-server</a></li>
</ul></li>
<li>Using <code>PsExec -h make.bat</code> to obtain the account's elevated token.
<a href=""https://docs.microsoft.com/en-us/sysinternals/downloads/psexec"" rel=""nofollow noreferrer"">https://docs.microsoft.com/en-us/sysinternals/downloads/psexec</a></li>
<li>I considered that User Account Control (UAC) may be preventing the system account and/or condor_usr account from accessing the certificate store (or private keys in the cert store), but UAC is already disabled on the Win7 VM.</li>
<li>I placed the original .pfx certificate file in the VS2017 solution and targeted it instead of the certificate in the key store.  This had no effect, which leads me to believe that the issue is some sort of signing permission rather than (or perhaps in addition to) purely permissions around the actual certificate store.</li>
<li>I tried starting a job while logged in via remote desktop, and then logging out of the remote desktop session (actual logout, not disconnect) before the job got to the signing portion.  Signing failed.</li>
</ul>
","<p>Make sure all the accounts involved in the process has the ""Logon as service"" rights by ensuring they are present in the local policy ""Computer Configuration\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Log on as a service"". Note that this change becomes effective the next time the owner of the account(s) logs on.</p>

<p>Try running the HTCondor service directly as ""condor_usr1"" instead of the ""Local System"" account.</p>
","169","<windows><certificate><private-key><condor>","2","3","1","2019-10-04 17:16:23","58211683","4","","","","","2019-09-24 13:23:57",""
"46823951","Libssh2 with WinCNG unable to obtain public key from private key with passphrase","<p>I'm using libssh2 with WinCNG. It is failing to extract public key from a private key + passphrase pair. I see in wincng.c </p>

<pre><code>_libssh2_wincng_load_pem(LIBSSH2_SESSION *session,
                         const char *filename,
                         const char *passphrase,
                         const char *headerbegin,
                         const char *headerend,
                         unsigned char **data,
                         unsigned int *datalen)
{
    FILE *fp;
    int ret;

    (void)passphrase;

    fp = fopen(filename, ""r"");
    if (!fp) {
        return -1;
    }

    ret = _libssh2_pem_parse(session, headerbegin, headerend,
                             fp, data, datalen);

    fclose(fp);

    return ret;
}
</code></pre>

<p>passphrase is no where used when private key file is read. </p>

<p>Is it possible to use a private key + passphrase pair to extract publick key using libssh2 WinCNG?</p>

<p>Thanks in advance</p>
","","167","<private-key><libssh2>","1","","0","2017-10-19 06:32:49","","0","","","","","2017-10-19 06:32:49",""
"11731483","What are the standards for saving a private key?","<p>What the title says.</p>

<p>I am generating a private key in java using the Java.security.*</p>

<p>When use the RSA part I generate a public and a private key. The private key I assume from what I have read is encrypted in AES 256bit in order to help keep it secure. Then when it is used it is decrypted.</p>

<p>My question is how are private keys supposed to be stored on the disk?</p>

<p>This is what I think I found out so far...</p>

<ol>
<li>Generate Private Key</li>
<li>Encrypt Private Key with AES 256bit using SALT</li>
<li>Store Private Key in ASCII Armor Base 64</li>
</ol>

<p>I was wondering if you should salt anything and how you would store the salt in the key? Also, for encrypting the private key is AES 256bit the standard for most programs?</p>

<p>Thanks!</p>

<p><strong>Also, how do you store email info, picture... ect?</strong></p>
","","167","<java><base64><aes><rsa><private-key>","1","","0","2012-07-31 00:30:53","","2","","516664","","2012-07-31 00:30:53","2012-07-31 00:19:31",""
"52422892","Why X509Certificate2 error reading private key in Windows Server 2016, works on W10","<p>I have created a .pfx certificate, with openssl from a certificate file and a private key, on a Mac</p>

<p>I use it in a .Net Core 2.1 project and I read it with:</p>

<pre><code>var certificate = new X509Certificate2(fileName, password);
</code></pre>

<p>Then I use it in a function that signs a JWT token.
In windows 10 it works correctly.</p>

<p>But in Windows Server 2016, the certificate is not read correctly and an error occurs when trying to use it to sign (it reads from disk), if debug the program, when analyzing the PrivateKey property of the certificate, i see that it contains an exception (In Windows 10 contains a value).</p>

<p>And now comes the strangest:</p>

<p>If you import the certificate into the system (It appears correctly in the certificate store with the private key) and export it back to a new pfx file and use this file it works correctly.</p>

<p>Why does this happen, is it a bug in openssl or in windows?</p>

<p>Here information how get the certificate, it is from firebase project service account, here a python code for get .pem and .key, then use openssl for create the pfx</p>

<pre><code>import io
import urllib.request
import json,ssl
#Fix for no SSL Validation
ctx = ssl.create_default_context()
ctx.check_hostname = False
ctx.verify_mode = ssl.CERT_NONE
#Here the filename of service account w/o ext, downloaded from then Firebase project
service_account=""service_account""
with open(service_account+"".json"", encoding='utf-8') as data_file:
    data = json.loads(data_file.read())
#read the data must replace the literal \n    
private_key=data[""private_key""].replace(""\\n"", ""\n"")
#print(private_key)
#Get the url for get the cetificate data
client_x509_cert_url=data[""client_x509_cert_url""]
with urllib.request.urlopen(client_x509_cert_url, context=ctx) as url:
    clientData = json.loads(url.read())
#The private key id for get the certificate
private_key_id=data[""private_key_id""]
#read the certificate must replace the the literal \n
certificate=clientData[private_key_id].replace(""\\n"", ""\n"") 
#save then certificate
with open(service_account+"".pem"", ""w"") as pem_file:
    pem_file.write(certificate)  
#save the key
with open(service_account+"".key"", ""w"") as key_file:
    key_file.write(private_key)  
print(""Done."")
</code></pre>
","","164","<firebase><openssl><private-key><x509certificate2><service-accounts>","0","","0","2018-09-20 12:20:24","","4","","3666904","","2018-09-20 12:20:24","2018-09-20 10:23:53",""
"33626905","Converting String to Key for Encryption","<p>I'm tring to convert my private key in RSA into a Key from a string, but for some reason it's outputing an system error.</p>

<pre><code>static private Key privatekey;
try{
byte[] keyprivBytes = Base64.decode(KeypriString,0);
PKCS8EncodedKeySpec specpriv = new PKCS8EncodedKeySpec(keyprivBytes);
KeyFactory keyFactorypriv = KeyFactory.getInstance(""RSA"");
privatekey = keyFactorypriv.generatePrivate(specpriv);  &lt;--(here is where the logcat says the code is broken)
}catch(UnsupportedEncodingException | InvalidKeySpecException | NoSuchAlgorithmException e){
e.printStackTrace();
}
</code></pre>

<p>in which <code>keypriString</code> is the <code>String</code> where my private key is.</p>

<p>LogCat:</p>

<pre><code>11-12 11:11:20.066 15141-15141/&lt;pakage name&gt; W/System.err: java.security.spec.InvalidKeySpecException: java.lang.RuntimeException: error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag
11-12 11:11:20.066 15141-15141/&lt;pakage name&gt; W/System.err:     at com.android.org.conscrypt.OpenSSLKey.getPrivateKey(OpenSSLKey.java:180)
11-12 11:11:20.076 15141-15141/&lt;pakage name&gt; W/System.err:     at com.android.org.conscrypt.OpenSSLRSAKeyFactory.engineGeneratePrivate(OpenSSLRSAKeyFactory.java:64)
11-12 11:11:20.076 15141-15141/&lt;pakage name&gt; W/System.err:     at java.security.KeyFactory.generatePrivate(KeyFactory.java:187)
11-12 11:11:20.076 15141-15141/&lt;pakage name&gt; W/System.err:     at &lt;pakage name&gt;.Crypto.&lt;init&gt;(Crypto.java:62)
</code></pre>

<p>Can anybody tell me the problem??</p>
","<p>1 : verify step by step with encoding and then decoding, and trace each step to the output: you will see where it crashes</p>

<p>2 : possible errors: Base64.decode gives null because this is not a good base64 string</p>

<p>3 : or Are you confusing between PKCS and X509 ?</p>

<p>You should see 
<a href=""https://stackoverflow.com/questions/9755057/converting-strings-to-encryption-keys-and-vice-versa-java"">Converting Strings to encryption keys and vice versa java</a>
, this:
<a href=""https://stackoverflow.com/questions/3441501/java-asymmetric-encryption-preferred-way-to-store-public-private-keys"">Java asymmetric encryption: preferred way to store public/private keys</a>
, this:
<a href=""https://stackoverflow.com/questions/8454677/create-privatekey-and-publickey-from-a-string-base64-encoding-with-der-format"">Create PrivateKey and PublicKey from a String base64 encoding with DER format</a></p>
","164","<java><android><public-key-encryption><private-key>","1","1","1","2015-11-12 11:37:16","","6","1","4841706","","2015-11-12 11:37:16","2015-11-10 09:39:07",""
"6839331","What difference does key length make when signing a file?","<p>I've never taken any classes on encryption or security and I'm trying to teach myself some basics, so forgive me if this is a silly question (don't worry, I'm not working on anything sensitive)</p>

<p>So, I'm playing around with Crypto++ so that I can make a signature of a file to see if the file has been edited by someone other than me. The test application that comes with the library looks like it has options (rs and rv) that do exactly what I want to do in my own program (verify the integrity of the signature of a file). Of course, before doing that I need to generate a public and private key. When doing so with the test application's g option it asks me to specify the key length in bits. What difference does the key length make?</p>
","<p>The key length determines how hard it is for someone to break your cryptography. For digital signatures, that means how hard is it for someone to generate a fake signature.</p>

<p>For RSA a key length of 1024 bits is sufficient for non-sensitive information, but it should only be used for a few years and then replaced with a new key. 2048 bits is stronger and 4096 is stronger still.</p>

<p>For a naive brute-force attacker, adding a single bit to the key length doubles the amount of work they need to do to compromise your key. However, algorithms like RSA do not scale in this way: a 2048-bit RSA key is not 2^1024 times as hard to break as a 1024-bit key (unless the attacker is <strong>really</strong> stupid).</p>

<p>Generally <em>public key</em> algorithms (e.g. RSA) need much larger keys than <em>symmetric key</em> algorithms (e.g. AES) because they rely on different mathematical properties.</p>

<p>For a good primer on cryptography you should check out <a href=""http://www.cs.auckland.ac.nz/~pgut001/tutorial/index.html"" rel=""nofollow"">Peter Gutmann's godzilla crypto tutorial</a>. It's pretty readable and gives you a good overview of how crypto works in its various forms.</p>
","164","<rsa><public-key><private-key><crypto++>","0","2","1","2011-07-27 04:25:00","6839408","0","","","","","2011-07-27 04:07:51",""
"42860107","How to use erlang public_key:decrypt_private?","<p>I try to encrypt text with public RSA key and decrypt this text using a private RSA key. When I encrypt user public key it works.</p>

<p>encode public_key</p>

<pre><code>encrypt_public_key(PlainText, PublicKey) -&gt;
[ RSAEntry2 ] = public_key:pem_decode(PublicKey),
PubKey = public_key:pem_entry_decode( RSAEntry2 ),
public_key:encrypt_public(PlainText, PubKey).
</code></pre>

<p>But when I try to decrypt this text using a private key, it does not work, and I don't know why.</p>

<p>decode private key</p>

<pre><code>decrypt_private_key(CryptText,PrivateKey) -&gt;
[ RSAEntry2 ] = public_key:pem_decode(PrivateKey),
PrivKey = public_key:pem_entry_decode( RSAEntry2 ),
Result =  public_key:decrypt_private(CryptText, PrivKey, rsa_pkcs1_padding ),
Result.
</code></pre>

<p>How i encode and try to decode</p>

<pre><code>PublicKey = ems_util:open_file(?SSL_PATH ++  ""/"" ++ binary_to_list(&lt;&lt;""public_key.pem""&gt;&gt;)),

        CryptoText = ems_util:encrypt_public_key(ResponseData2,PublicKey),
        PrivateKey = ems_util:open_file(?SSL_PATH ++  ""/"" ++ binary_to_list(&lt;&lt;""private_key.pem""&gt;&gt;)),
      %erro in this line
       TextPlain = ems_util:decrypt_private_key(TextCrypt,PrivateKey).
</code></pre>

<p>Error</p>

<pre><code>=ERROR REPORT==== 17-Mar-2017::10:59:29 ===
Ranch listener ems_http_server1, connection process &lt;0.2159.0&gt;, stream 1 had its request process &lt;0.2160.0&gt; exit with reason function_clause and stacktrace [{public_key,decrypt_private,[&lt;&lt;55,66,78,123,456,2456&gt;&gt;,&lt;&lt;55,173,2367,140,71&gt;&gt;,asn1_NOVALUE}],[{file,""public_key.erl""},{line,313}]},{ems_util,decrypt_private_key,2,[{file,""src/util/ems_util.erl""},{line,614}]},{ems_auth_user,do_barer_authorization,1,[{file,""src/auth/ems_auth_user.erl""},{line,51}]},{ems_dispatcher,lookup_request,1,[{file,""src/distpatcher/ems_dispatcher.erl""},{line,70}]},{ems_http_handler,init,2,[{file,""src/http/ems_http_handler.erl""},{line,22}]},{cowboy_handler,execute,2,[{file,""src/cowboy_handler.erl""},{line,39}]},{cowboy_stream_h,execute,3,[{file,""src/cowboy_stream_h.erl""},{line,172}]},{cowboy_stream_h,proc_lib_hack,3,[{file,""src/cowboy_stream_h.erl""},{line,157}]}]
</code></pre>

<p>I don't know what's happening. </p>
","<p>I describle the solution for my problem. The problem is the public and the private keys are generated wrongly. The right way to generate a pair key rsa using openssl is:</p>

<pre><code> openssl genrsa -out private.pem 2048
 openssl rsa -in private.pem -out public.pem -outform PEM -pubout
</code></pre>

<p>These commands generate a correct key pair and the code now ir working correctly.</p>
","164","<erlang><rsa><public-key-encryption><private-key><public-key>","0","0","1","2017-03-17 18:03:49","","1","","1816580","","2017-03-17 18:03:49","2017-03-17 14:28:15",""
"19595518","Why an APK won't be signed?","<p>I have strange situation, where the unsigned version is built... but not the signed APK!</p>

<p>Here is some info about this:</p>

<p><strong>* I use ant, not eclipse.</strong></p>

<ul>
<li><p>I created the store key in command line by running the following:</p>

<p>keytool -genkey -v -keystore C:\my.keystore -alias my_alias.keystore -keyalg RSA -keysize 2048 -validity 10000</p></li>
</ul>

<p>This placed the keystore in C:\</p>

<p>Now, to sign the apk I use the following command (during the build process):</p>

<pre><code>jarsigner -storepass password -verbose -keystore ""C:\Android-Enviroment\my.keystore"" -signedjar ""C:\Documents and Settings\O\Desktop\Project\bin\project-signed.apk"" ""C:\Documents and Settings\O\Desktop\Project\bin\Project-release-unsigned.apk"" my_alias.keystore -digestalg SHA1 -sigalg MD5withRSA
</code></pre>

<p>This cause <em>ONLY</em> the unsigned apk to build: <strong>Project-release-unsigned.apk</strong>
<em>without</em> the Project-signed.apk</p>

<p>So... the questions:</p>

<p>1- Is there is anything wrong of creating the key and/or building the sources?</p>

<p>2- How to debug this? I mean how do I know why the generated key isn't working?!</p>

<p>I'm beginner, so may be the answer is so obvious but I really couldn't figure it out!</p>

<p>Thanks for your help...</p>
","<p>Make sure that you clean your project before you try and sign with a new type of key.</p>

<p>To do this you go to Projects > Clean.</p>

<p>Then rebuild.</p>
","163","<android><ant><apk><code-signing><private-key>","1","0","1","2013-10-28 18:32:07","19642425","6","","","","","2013-10-25 16:57:35",""
"52688325","Get private key from Heroku","<p>I was trying to update my certificate but I'm having issues. I issued</p>

<pre><code>heroku certs:add server.crt server.key
</code></pre>

<p>but this command is giving me the error </p>

<blockquote>
  <p>No key found that signs the certificate.</p>
</blockquote>

<p>I've tried to add the key from my previous certificate, but I got the same error. I unfortunately lost my private key while trying to get a certificate with GoDaddy.</p>
","","163","<heroku><private-key>","1","","0","2018-10-09 03:25:19","","2","","39791","","2018-10-09 03:25:19","2018-10-07 12:04:54",""
"26383069","Java PrivateKey differs from Android","<p>I actually have a problem with encryption in Android. For testing I created a program which generates a signature using RSA and SHA. </p>

<pre><code>public static byte[] generateKey(String privKeyModulus,  String privKeyD, String encryptCredentials)    throws NoSuchAlgorithmException, InvalidKeySpecException, InvalidKeyException,  UnsupportedEncodingException, SignatureException {

    byte[] modulusBytes = Base64.getDecoder().decode(privKeyModulus.getBytes());
    byte[] dBytes = Base64.getDecoder().decode(privKeyD.getBytes());


    BigInteger modulusInt = new BigInteger(1, modulusBytes);
    BigInteger dInt = new BigInteger(1, dBytes);

    RSAPrivateKeySpec rsaPrivKey = new RSAPrivateKeySpec(modulusInt, dInt);
    KeyFactory factory = KeyFactory.getInstance(""RSA"");

    PrivateKey privKey = factory.generatePrivate(rsaPrivKey);


    // Here is the problem: 
    System.out.println(Arrays.toString(privKey.getEncoded()));

    Signature sig = Signature.getInstance(""SHA1withRSA"");
    sig.initSign(privKey);
    sig.update((encryptCredentials).getBytes(""UTF-16LE""));          
    byte[] signature = sig.sign();

    return signature;
}
</code></pre>

<p>Now the problem is that I get different values as PrivateKey in Java and Android. That confuses me because the method is exactly the same in both programs and it is java.security which should work in both Java and Android. 
I also checked all of the other values (like the byte[] etc) but they are all the same.</p>

<p>Do you have any help?</p>
","<p>Encoding private key as PKCS#8 and Base64 to send it over and reconstruct private key:</p>

<pre><code>@Test
public void testKeyConversion() throws GeneralSecurityException {

    /* Generate random key pair */
    KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance(""RSA"");
    AlgorithmParameterSpec spec = new RSAKeyGenParameterSpec(1024, RSAKeyGenParameterSpec.F4);
    keyPairGenerator.initialize(spec, new SecureRandom());
    KeyPair keyPair = keyPairGenerator.generateKeyPair();

    /* Encode private key as PKCS#8 base64 string */
    byte[] privKeyBytes = keyPair.getPrivate().getEncoded();
    String privKeyStr = DatatypeConverter.printBase64Binary(privKeyBytes);

    /* Decode private key as PKCS#8 base64 string */
    byte[] privKeyBytes2 = DatatypeConverter.parseBase64Binary(privKeyStr);
    KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
    PKCS8EncodedKeySpec privSpec = new PKCS8EncodedKeySpec(privKeyBytes2);
    PrivateKey privateKey = keyFactory.generatePrivate(privSpec);

    /* Ensure key is the same */
    byte[] privKeyBytes3 = privateKey.getEncoded();
    assertEquals(
            DatatypeConverter.printHexBinary(privKeyBytes),
            DatatypeConverter.printHexBinary(privKeyBytes3));
}
</code></pre>

<p>Use <code>android.util.Base64</code> instead of <code>java.xml.bind.DatatypeConverter</code>, which is not available on Android platform.</p>
","162","<java><android><private-key>","2","0","1","2014-10-16 10:26:12","","4","1","","","","2014-10-15 12:49:15",""
"53644847","How to convert java OpenSSLRSAPrivateCrtKey to PKCS1 format","<p><strong>CipherText</strong></p>

<pre><code>i5SvmG2TbtZfkWdwJ5qeaYzvLlQknY3uMvZxSEwhBdRcXKHjgzrRk6XLDCEG9ZtZDGDA7iB3tFhLPMisfqGZvSSrcBfiV8b71+qzWVDNW9EedVShk6kaeEN6rw4UgVi6P5PvrDMn6pmYmLWCjtuFWrmboCvvYgI+FJurhlbsQESkA5oDYirjS8L0wnsQB/TnnQ5UPY2xfOBdY2MJpUSTyIjJPhI40GST8YWjXEMkJeDV/1zuKuK55RHCDF5AdTMEvgvvRnGhN2Fzh+rsDziHqVS9d8FmrtjdU445F6ki0d8DkaeFfrofptxGIncqfuukKSXpSp4cPLvM3LxtRvp+Aw==
</code></pre>

<p><strong>Code to decrypt</strong></p>

<pre><code>KeyPairGenerator kpg = KeyPairGenerator.getInstance(""RSA"");
            kpg.initialize(2048);
KeyPair kp2 = kpg.generateKeyPair();
            generatedPub = kp2.getPublic();
            generatedPvt = kp2.getPrivate();

public String rsaDecrypt(String encrypted) {
        try {
            Cipher cipher = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
            cipher.init(Cipher.DECRYPT_MODE, generatedPvt);
            byte[] original = cipher.doFinal(Base64.decodeBase64(encrypted.getBytes()));
            return new String(original);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return null;
    }
</code></pre>

<p><strong>Error</strong></p>

<blockquote>
  <p>javax.crypto.BadPaddingException: error:04000089:RSA routines:OPENSSL_internal:PKCS_DECODING_ERROR</p>
</blockquote>

<p>Also, if I try printing the private key as :</p>

<pre><code>generatedPvt.toString()
</code></pre>

<p>I get the following :</p>

<pre><code>OpenSSLRSAPrivateCrtKey{modulus=c7544bf521bbdd7db52dd28bd3c6f694214dc2356b905edd2730b631d11be9aea703692c2db690e6725da65737b5ec511c13668d1735bfbbc2519e0d33a67b41b289bae6ea71903af91e4f12c6e8660614ef12cd439293a0a38f564fd8f19a3e38f9e2defa269d0bcf0f53159bba1b4fd539ad934fb691e860113be53901de5a10d0c0e3ceaec3715841bc6e56b7738336e8df95a989b61175b06d70d349dcb4a031acf5b25647a1d77f6e6e11efc66e98bb321430f148a63c103a0a59e94b147a4fb49a9ecb0b23603a6ceed6e6e298650667cd61de71455bd4f95767444d89bcf485cc47a297b5306a60a14f77a3fbc19552c5fddfa5cfa2e68020e245ad91,publicExponent=10001}
</code></pre>

<p>While I was expecting the PKCS#8 formatted key to be printed. How do i get the key printed in the PKCS#8 format ?</p>

<p>And why am i getting the padding error as shown above ?</p>
","<pre><code>byte[] original = cipher.doFinal(encrypted.getBytes());
</code></pre>

<p>remove Base64.decodeBase64 from both encrypt and decrypt methods</p>

<p>if you want to convert key to string then use</p>

<pre><code>String keyString= Base64.encodeBase64String(key.getEncoded());
</code></pre>

<p>RSA Implementation</p>

<pre><code> public static void main(String[] args) {
    try {
        KeyPairGenerator kpg = KeyPairGenerator.getInstance(""RSA"");
        kpg.initialize(2048);
        KeyPair kp2 = kpg.generateKeyPair();
        PublicKey publicKey = kp2.getPublic();
        PrivateKey privateKey = kp2.getPrivate();
        NewClass nc = new NewClass();
        byte[] encrypt=nc.rsaEncrypt(""hi"",publicKey);
        byte[] decrypt=nc.rsaDecrypt(encrypt,privateKey);
        String decryptString = new String(decrypt);
        System.out.println(""decryptString = "" + decryptString);
    } catch (NoSuchAlgorithmException ex) {
        Logger.getLogger(NewClass.class.getName()).log(Level.SEVERE, null, ex);
    }

}

public byte[] rsaDecrypt(byte[] encrypted,PrivateKey privateKey) {
    try {

        Cipher cipher = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
        cipher.init(Cipher.DECRYPT_MODE, privateKey);
        byte[] original = cipher.doFinal(encrypted);
        return original;
    } catch (Exception ex) {
        ex.printStackTrace();
    }
    return null;
}

public byte[] rsaEncrypt(String message,PublicKey publicKey) {
    try {

        Cipher cipher = Cipher.getInstance(""RSA/ECB/PKCS1Padding"");
        cipher.init(Cipher.ENCRYPT_MODE, publicKey);
        byte[] original = cipher.doFinal(message.getBytes());
        return original;
    } catch (Exception ex) {
        ex.printStackTrace();
    }
    return null;
}
</code></pre>

<p>When encoding and decoding is done along with encrypt and decrypt the order must be</p>

<p>Encryption        </p>

<pre><code>cipher.doFinal(Base64.encodeBase64(message.getBytes()));
</code></pre>

<p>Decryption</p>

<pre><code>Base64.decodeBase64(cipher.doFinal(cipher.getBytes()));
</code></pre>
","162","<java><encryption><private-key><pkcs#8><pkcs#1>","-4","-2","1","2018-12-08 06:36:49","","1","","980153","","2018-12-06 07:26:32","2018-12-06 04:50:33",""
"55919221","ssh using private-key without password","<p>I have two servers A and B , i am trying to ssh from A to B using private-key and i don't want to provide password of server B.</p>

<p>I am trying below command for ssh ::</p>

<pre><code>ssh -i &lt;generated_private_key&gt;  &lt;user&gt;@&lt;host name&gt;
</code></pre>

<p>the private-key is perfectly fine. but still this command asking for password.</p>
","<p>In order to use ssh passwordless connection you need to place the contents of <code>~/.ssh/id_rsa.pub</code> (id_rsa.pub is just an example could be anything you used durring generation) of the user@local_machine to the <code>~/.ssh/authorized_keys</code> of the some_user@remote_machine. 
Further if other issues exist then you should check <code>/var/log/</code> for the error.</p>

<p><strong>Edit1:</strong>
Based on comments (thanks to @Crazy) if you used passphrase durring creation of the key then you need to recreate the key without the passphrase.</p>
","161","<linux><ssh><server><private-key>","-1","0","1","2019-04-30 11:52:11","55919739","0","","","","","2019-04-30 10:41:24",""
"14481655","Android private key issues.","<p>i developed a app in android and released a first version. but now i lost my previous (private key)debug.keystore . Now im going to release a second version with a different private key. but this second version didn't install in phone. how can i resolve this problem? thanks in advance. </p>
","<p>Just change your <code>Package Name</code> and change that in <code>androidManifest</code> file also and Upload with new <code>KeyStore</code>. No other way. Because google won't allow you to upload another application having same <code>Package name</code>.</p>
","157","<android><private-key>","1","1","2","2013-01-23 14:11:49","14481765","0","","","","","2013-01-23 14:06:53",""
"14481655","Android private key issues.","<p>i developed a app in android and released a first version. but now i lost my previous (private key)debug.keystore . Now im going to release a second version with a different private key. but this second version didn't install in phone. how can i resolve this problem? thanks in advance. </p>
","<p>You will have to uninstall the old version and then install the new one, as Android doesn't allow updates to be installed if they have a different signature.</p>

<p>Additionally, all of your users will have to do the same, and App stores like Google Play won't allow you to use an update signed with a different key. You will have to publish your app again under a different package name.</p>
","157","<android><private-key>","1","6","2","2013-01-23 14:11:49","14481765","0","","","","","2013-01-23 14:06:53",""
"49821371","I am trying to Access the private Poloniex trading API in Unity C# but am getting the error ""invalid command""","<p>I am trying to Access the private Poloniex trading API in Unity C# but        am getting the error ""invalid command"" I have my API Key and Secret authorized on Poloniex for the Trading API but can't seem to get access with my current code:</p>

<pre><code> using System.Collections;
    using System.Collections.Generic;
    using UnityEngine;
    using System;
    using System.Security.Cryptography;


    public class PolonScript : MonoBehaviour {


        public TextMesh OutputText;

        const string _apiKey = ""---Key---"";
        const string _apiSecret = ""---secret---"";


        void Start () {

            string nonce = DateTime.Now.ToString(""HHmmss"");

            string myParam = ""command=returnBalances&amp;nonce="" + nonce;


            const string WEBSERVICE_URL = ""https://poloniex.com/tradingApi"";
            try
            {
            var webRequest = System.Net.WebRequest.Create(WEBSERVICE_URL);
                if (webRequest != null)
                {
                    webRequest.Method = ""POST"";
                    webRequest.Timeout = 12000;
                webRequest.ContentType = ""application/x-www-form-urlencoded"";
                    webRequest.Headers.Add(""Key"", _apiKey);
                    webRequest.Headers.Add(""Sign"", genHMAC(myParam));
                    webRequest.Headers.Add(""command"", ""returnBalances"");
                    webRequest.Headers.Add(""nonce"", nonce.ToString());


    using (System.IO.Stream s = webRequest.GetResponse().GetResponseStream())
                    {
                        using (System.IO.StreamReader sr = new System.IO.StreamReader(s))
                        {
                            var jsonResponse = sr.ReadToEnd();
                            OutputText.text = jsonResponse.ToString();
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                OutputText.text = ex.ToString();
            }




        } //end-of-start()
</code></pre>

<p>Here is my current signing method which I am quite sure has a mistake (Human error) within, am I doing something wrong obliviously here?</p>

<pre><code>        private string genHMAC(string message)
        {
            byte [] APISecret_Bytes = System.Text.Encoding.UTF8.GetBytes(_apiSecret);
            byte [] MESSAGE_Bytes = System.Text.Encoding.UTF8.GetBytes(message);

            var hmac = new HMACSHA512(APISecret_Bytes);
            var hashmessage = hmac.ComputeHash(MESSAGE_Bytes);

            var sign = BitConverter.ToString(hashmessage).Replace(""-"", """").ToLower();
            return sign;
        }




    }
</code></pre>
","<p>Poloniex Command should not be sent in the header, you should send it as a POST parameter, that's why it's responding ""invalid command"". Take a look at this answer to see how you send POST parameters in c#:<a href=""https://stackoverflow.com/questions/3279888/how-to-add-parameters-into-a-webrequest"">How to add parameters into a WebRequest?</a></p>

<p>Here's an example of how your Start method should look like:</p>

<pre><code>void Start()
{

    string nonce = DateTime.Now.ToString(""HHmmss"");

    string myParam = ""command=returnBalances&amp;nonce="" + nonce;


    const string WEBSERVICE_URL = ""https://poloniex.com/tradingApi"";
    try
    {
        var webRequest = System.Net.WebRequest.Create(WEBSERVICE_URL);
        if (webRequest != null)
        {
            webRequest.Method = ""POST"";
            webRequest.Timeout = 12000;
            webRequest.ContentType = ""application/x-www-form-urlencoded"";
            webRequest.Headers.Add(""Key"", _apiKey);
            webRequest.Headers.Add(""Sign"", genHMAC(myParam));

            byte[] dataStream = Encoding.UTF8.GetBytes($""command=returnBalances&amp;nonce={nonce.ToString()}"");
            webRequest.ContentLength = dataStream.Length;

            Stream newStream = webRequest.GetRequestStream();
            newStream.Write(dataStream, 0, dataStream.Length);
            newStream.Close();

            using (System.IO.Stream s = webRequest.GetResponse().GetResponseStream())
            {
                using (System.IO.StreamReader sr = new System.IO.StreamReader(s))
                {
                    var jsonResponse = sr.ReadToEnd();
                    OutputText.text = jsonResponse.ToString();
                }
            }
        }
    }
    catch (Exception ex)
    {
        OutputText.text = ex.ToString();
    }
}
</code></pre>
","157","<c#><private-key><trading><poloniex>","1","1","1","2018-04-13 21:05:20","49821877","0","","","","","2018-04-13 16:22:12",""
"45032829","Python RSA decryption is throwing error","<pre><code>from Crypto.PublicKey import RSA
from Crypto.Signature import PKCS1_v1_5
from Crypto.Hash import SHA
from base64 import b64decode
def wesocket_Data_Receive(request):
    Data=request.GET.get('ContentData')
    key =open('D:\\WithOldDjango\\AssetManagment\\AssetManagment
    \\blog\\templates\\private.key', 'rb')
    rsakey = RSA.importKey(key.read())
    return HttpResponse(Data)
</code></pre>

<p>I am getting the following error while reading the private key using python 3.5 error:""RSA key format is not supported""
above is my code</p>
","","156","<python><encryption><python-3.5><private-key><pycrypto>","0","","0","2017-07-11 18:09:39","","3","","1816580","","2017-07-11 18:09:39","2017-07-11 11:08:00",""
"49254392","Sending encrypted message through RSA over a local network using socket programming","<p>I'm trying to send an encrypted message over a network using tcp/ip communication but an error occurred at the last step i.e the message is being send and after receiving at private decrypt the error occurred.</p>

<p>Also this code runs completely ok when the key is being used for the first time after generation but after first use the error occurs every time:</p>

<blockquote>
  <p>0407109F:rsa routines:RSA_padding_check_PKCS1_type_2:pkcs decoding error</p>
</blockquote>

<p>I'm sharing the code:</p>

<pre><code>server side-


#include &lt;stdio.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;string.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;unistd.h&gt;
#include &lt;pthread.h&gt;
//openssl headers
#include &lt;openssl/pem.h&gt;
#include &lt;openssl/ssl.h&gt;
#include &lt;openssl/rsa.h&gt;
#include &lt;openssl/evp.h&gt;
#include &lt;openssl/bio.h&gt;
#include &lt;openssl/err.h&gt;
//int padding = RSA_SSLV23_PADDING;
//int padding = RSA_PKCS1_OAEP_PADDING;

int padding = RSA_PKCS1_PADDING;

RSA * createRSA(unsigned char * key,int public)
{
    RSA *rsa= NULL;
    BIO *keybio ;
    keybio = BIO_new_mem_buf(key, -1);
    if (keybio==NULL)
    {
        printf( ""Failed to create key BIO"");
        return 0;
    }
    if(public)
    {
        rsa = PEM_read_bio_RSA_PUBKEY(keybio, &amp;rsa,NULL, NULL);
    }
    else
    {
        rsa = PEM_read_bio_RSAPrivateKey(keybio, &amp;rsa,NULL, NULL);
    }
    if(rsa == NULL)
    {
        printf( ""Failed to create RSA"");
    }

    return rsa;
}

int public_encrypt(unsigned char * data,int data_len,unsigned char * key, unsigned char *encrypted)
{
    RSA * rsa = createRSA(key,1);
    int result = RSA_public_encrypt(data_len,data,encrypted,rsa,padding);               //fun for encrypting
    return result;
}



void printLastError(char *msg)
{
    char * err = malloc(130);;
//    ERR_load_crypto_strings();
    ERR_error_string(ERR_get_error(), err);
    printf(""%s ERROR: %s\n"",msg, err);
    free(err);
}


//////////////////////////////////////////////////////////////////////////////////////////////////////////////
int  main()
{
        int eof=0;
        char plainText[2048/8] = ""Hello this is AMIT""; //key length : 2048
        char publicKey[4098];
        char privatekey[4098];

        FILE *fd=fopen(""public.pem"",""r"");
        while(!feof(fd))
        {
                eof=fread(&amp;publicKey,sizeof(publicKey),1,fd);
//              perror(""public key fread"");
                if(eof==0)
                {
                        fclose(fd);
                        break;
                }
        }
//printf(""public key---%s\n"",publicKey);

        unsigned char  encrypted[4098]={};

        int encrypted_length= public_encrypt(plainText,strlen(plainText),publicKey,encrypted);
//      perror(""public encryption"");
        if(encrypted_length == -1)
        {
                printLastError(""Public Encrypt failed "");
                exit(0);
        }
        printf(""Encrypted length =%d\n"",encrypted_length);
//      printf(""Encrypted DATA =%s\n"",encrypted);

/*------------------SOCKET---------------------------*/
        struct sockaddr_in server , client;
        char buf[10];
        memset(buf,'\0',sizeof(buf));

        int socket_id = socket(AF_INET, SOCK_STREAM, 0);
        server.sin_family=AF_INET;
        server.sin_port=htons(5000);
        server.sin_addr.s_addr=inet_addr(""127.0.0.1"");

        bind(socket_id, (struct sockaddr *)&amp;server,sizeof(server));
        perror(""bind"");
        listen(socket_id,5);

        int addrlen=sizeof(struct sockaddr);
        int client_sock=accept(socket_id,(struct sockaddr *)&amp;client,(socklen_t*)&amp;addrlen);
        perror(""accept"");
/*      while(9)
        {
                printf(""write data for client\n"");
                scanf(""%s"",buf);
                write(client_sock,&amp;buf,strlen(buf));
                perror(""write"");
        }
*/
        printf(""sending encryptd data\n"");
        write(client_sock,&amp;encrypted_length,sizeof(encrypted_length));
        perror(""write"");
        sleep(1);
        write(client_sock,&amp;encrypted,strlen(encrypted));
        perror(""write"");
/*-----------------END-----------------------------*/
}
</code></pre>

<p>client side-</p>

<pre><code>#include &lt;stdio.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;string.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;unistd.h&gt;
#include &lt;pthread.h&gt;
//openssl headers
#include &lt;openssl/pem.h&gt;
#include &lt;openssl/ssl.h&gt;
#include &lt;openssl/rsa.h&gt;
#include &lt;openssl/evp.h&gt;
#include &lt;openssl/bio.h&gt;
#include &lt;openssl/err.h&gt;
int padding = RSA_PKCS1_PADDING;
//int padding = RSA_SSLV23_PADDING;
//int padding = RSA_PKCS1_OAEP_PADDING;

RSA * createRSA(unsigned char * key,int public)
{
    RSA *rsa= NULL;
    BIO *keybio ;
    keybio = BIO_new_mem_buf(key, -1);
    if (keybio==NULL)
    {
        printf( ""Failed to create key BIO"");
        return 0;
    }
    if(public)
    {
        rsa = PEM_read_bio_RSA_PUBKEY(keybio, &amp;rsa,NULL, NULL);
    }
    else
    {
        rsa = PEM_read_bio_RSAPrivateKey(keybio, &amp;rsa,NULL, NULL);
    }
    if(rsa == NULL)
    {
        printf( ""Failed to create RSA"");
    }

    return rsa;
}


int private_decrypt(unsigned char * enc_data,int data_len,unsigned char * key, unsigned char *decrypted)
{
printf(""len = %d\n"",data_len);
    RSA * rsa = createRSA(key,0);
    int  result = RSA_private_decrypt(data_len,enc_data,decrypted,rsa,padding);         //fun for decrypting
perror(""RSA"");
printf(""Resut = %d\n"",result);
    return result;
}


void printLastError(char *msg)
{
    char * err = malloc(130);;
//    ERR_load_crypto_strings();
    ERR_error_string(ERR_get_error(), err);
    printf(""\n%s ERROR: %s\n"",msg, err);
    free(err);
}


//////////////////////////////////////////////////////////////////////////////////////////////////////////////
int  main()
{
        int eof=0;
//      char plainText[2048/8] = ""Hello this is AMIT""; //key length : 2048
        char publicKey[4098];
        char privateKey[4098];
        unsigned char decrypted[4099]={};
        unsigned char encrypted[4098]={};
        int encrypted_length=0;

        FILE *fd=fopen(""private.pem"",""r"");
        while(!feof(fd))
        {
                eof=fread(&amp;privateKey,sizeof(privateKey),1,fd);
                perror(""private key fread"");
                if(eof==0)
                {
                        fclose(fd);
                        break;
                }
        }

//      printf(""private key---&gt;\n%s\n"",privateKey);

/*------------------SOCKET---------------------------*/

        struct sockaddr_in server , client;
//      char buf[10];
        memset(encrypted,'\0',sizeof(encrypted));
        int socket_id = socket(AF_INET, SOCK_STREAM, 0);

        client.sin_family=AF_INET;
        client.sin_port=htons(5000);
        client.sin_addr.s_addr=inet_addr(""127.0.0.1"");


        connect(socket_id,(struct sockaddr *)&amp;client,sizeof(client));
        perror(""connect"");
        printf(""\nWAITING TO RECEIVE DATA LENGTH...\n"");
        read(socket_id,&amp;encrypted_length,sizeof(encrypted_length));
        //printf(""\nENCRYPTED DATA= %s\n"",encrypted);

        printf(""WAITING TO RECEIVE DATA...\n"");
        read(socket_id,&amp;encrypted,sizeof(encrypted));
perror(""read"");
        printf(""ENCRYPTED LENGTH= %d\n"",encrypted_length);
/*----------------------------END-----------------------------*/

        int decrypted_length = private_decrypt(encrypted,encrypted_length,privateKey, decrypted);
        //int decrypted_length = private_decrypt(encrypted,512,privateKey, decrypted);
        printf(""\nDecrypted Length =%d\n"",decrypted_length);
        if(decrypted_length == -1)
        {
                printLastError(""Private Decrypt failed "");
                //exit(0);
        }
        printf(""\nDecrypted Text =%s\n"",decrypted);
}
</code></pre>
","","155","<openssl><rsa><public-key-encryption><tcp-ip><private-key>","0","","0","2018-03-13 12:27:59","","2","","472495","","2018-03-13 12:27:59","2018-03-13 10:57:28",""
"49686800","Create CSR in Secure Enclave on macOS with Swift 4","<p>I need a secured stored key pair in the Secure Enclave for an CSR on MBP with TouchID. I tried a few ways in the xCode Playground, but the documentation and resources for macOS are quite not so good as the documentation for iOS.</p>

<p>Does anyone has used the Secure Enclave to create a key pair on macOS? Or had even create a CSR with the public-key?</p>
","","155","<macos><private-key><csr>","1","","0","2018-04-06 06:36:01","","0","","","","","2018-04-06 06:36:01",""
"55338988","Unable to encrypt private key using openssl","<p>I have generate Rsa Key pairs using openssh. I want to encrypt private key with passphrase using openssl.</p>

<p>I tried to encrypt private key using openssl , but unable to do that as it is giving error message.</p>

<p>Used the below command to generate rsa key pair</p>

<p><code>ssh-keygen -t rsa -b 4096 -P ''-f ./Test-key</code></p>

<p>used below command to encrypt private key using openssl.</p>

<p><code>rsa -des3 -in C:\Users\vkode200\Test-key -out C:\Users\vkode200\Test-key-encrypted -passout pass:""${pass}""</code></p>

<p>I am getting below error message :</p>

<pre><code>15764:error:0906D06C:PEM routines:PEM_read_bio:no start line:crypto\pem\pem_lib.c:686:Expecting: ANY PRIVATE KEY
error in rsa```

Below is the header of my generated private key
```-----BEGIN OPENSSH PRIVATE KEY-----```
I have no clue and i spent lot of time to figure out the issue, but no luck. 
</code></pre>
","<p>You can generate keys in old format by passing <code>-m PEM</code>:</p>

<p><code>ssh-keygen -t rsa -b 4096 -P '' -f ./Test-key -m PEM</code></p>

<p>Those should work fine with that openssl command.</p>

<p>If you need them in new format, you can make a copy a convert it in place with:</p>

<p><code>ssh-keygen -p -P '' -N '' -f ./Test-key -m PEM</code></p>
","155","<encryption><openssl><private-key><openssh>","0","1","1","2019-03-26 01:03:48","55348453","2","","","","","2019-03-25 13:32:05",""
"29948083","API Authentication Method - am I doing it correctly?","<p>I'm incredibly new to building API authentication - so wanted to ensure I'm going about this the correct way as there could be major security flaws that I'm not aware of.</p>

<p>It's based on a secret/private key pair, where both the client and the server know the secret key, but it's obviously never passed along the wire.</p>

<p>Any feedback, insights or holes in this method would be greatly appreciated.</p>

<p><br /></p>

<p><strong>Step 1:</strong></p>

<hr>

<p>The client wants to make a request to the API, so asks for a nonce from the server - passing their public key.</p>

<p><br /><br />
<strong>Step 2:</strong></p>

<hr>

<p>The server lookups the users private key (using the provided public key) and hashes it (sha256) with a random 32 character string (the nonce).</p>

<p>The hashed nonce and public key are then stored to a local array.</p>

<p>The server then responds to the client with the un-hashed version of the nonce.</p>

<p><br /><br />
<strong>Step 3:</strong></p>

<hr>

<p>The client takes the nonce from the response and also hashes it with it's private key (which the client has locally).</p>

<p>It then makes a request to the server (along with the API task it wants to perform) and sends its version of the hashed nonce and public key. </p>

<p><br /><br />
<strong>Step 4:</strong></p>

<hr>

<p>The server takes the clients public key and hashed nonce, then checks the local array to see if the public key/nonce pair exist.</p>

<p>If the pair exist; authentication is passed, the request is allowed and the public key/nonce pair is removed from the local array.</p>
","<p>Let me start by saying I don't have any credentials in the security world. Please take everything I say with a grain of salt.</p>

<h2>A couple of general thoughts</h2>

<p>It seems like you want to roll your own which is <strong>a bad idea</strong> in any security-related area. Even more so when there are several alternatives in the wild that have been battle-tested.</p>

<p>Off the top of my head, I can name three ways for API authentication that are in wide use:</p>

<ol>
<li><p><strong>Basic authentication.</strong> Github provides this as a <a href=""https://developer.github.com/v3/auth/"" rel=""nofollow"">fall-back</a>: “intended to be used for scripts or testing (i.e., cases where full OAuth would be overkill).”</p></li>
<li><p><strong>OAuth.</strong> Github, Twitter, Facebook, LinkedIn, Google all use this. This protocol is well-specified but might be overkill for smaller projects. Thanks to widespread client library, it's fairly easy to implement.</p></li>
<li><p><strong>Hash-based message authentication code (HMAC).</strong> All Amazon Webservices use this. This might be the most under-appreciated solution since it's conceptually easier than OAuth: The client uses its private key to sign requests and send the signature + public key in the request. The server looks up the private key using the public key sent by the client and in turn creates a signature of the request. If the signatures match, the request is valid. Public and private keys have to be exchanged beforehand (AWS lets you download the private key once).</p></li>
</ol>

<p>From what you describe, HMAC is the closest candidate to what you want.</p>

<h2>A couple of thoughts specific to what you suggested</h2>

<ol>
<li><p>Your algorithm requires you to <strong>keep state on the server</strong> (cue “local array”). This is fine for a single server, but what do you do when you scale? When step #2 hits one server and step #3 another, the state has to be shared. You can of course use a shared DB (or cache) or whatever, but you have to think about this.</p></li>
<li><p><strong>Roundtrips.</strong> Requiring a 2-step authentication like you suggested, every client has to either send an additional request (to get the nonce) for each (payload) request or you have think about when to invalidate your pairs on the server. <strong>HMAC essentially does the same thing without request overhead.</strong></p></li>
<li><p><strong>Possible attack:</strong> I can flood your servers with client requests for nonces. Depending on your public key length, I might come up with valid public keys and I can tie up resources that are never used for the second request. Depending on how you handle that (see also point #1), I might bring your server down.</p></li>
</ol>
","154","<rest><authentication><authorization><private-key><public-key>","1","1","1","2015-05-02 12:01:46","30002040","0","1","","","","2015-04-29 15:23:17",""
"20396172","Obtain Private Key from inside app","<p>Is there any way to get the private key that current APK was signed with?</p>

<p>The operation is completely safe, since any modification (injection) to app would need a new signing and new key pair. So if private key (that developer is aware of that) is accessible to the running code, it's only accessible to the original code not a malicious one.</p>

<p><code>X509Certificate</code> allows access to PublicKey, but I need access to PrivateKey.</p>

<pre><code>public static X509Certificate GetCertificate(Context context) {

    PackageManager pm = context.getPackageManager();
    String packageName = context.getPackageName();
    PackageInfo packageInfo = null;
    try {
        packageInfo = pm.getPackageInfo(packageName, PackageManager.GET_SIGNATURES);
    } catch (PackageManager.NameNotFoundException e) {
        e.printStackTrace();
    }

    Signature[] signatures = packageInfo.signatures;

    byte[] cert = signatures[0].toByteArray();

    InputStream input = new ByteArrayInputStream(cert);


    CertificateFactory cf = null;
    try {
        cf = CertificateFactory.getInstance(""X509"");
    } catch(CertificateException e) {
        e.printStackTrace();
    }
    X509Certificate c = null;

    try {
        c  = (X509Certificate) cf.generateCertificate(input);
    } catch(CertificateException e) {

    }

    return c;
}
</code></pre>

<p><strong>Edit:</strong>
A side question can be:</p>

<p>Is there any way to ensure that currently running code is running inside the APK with the original certificate? 
(Everybody have access to public key, so it's not a good candidate to check against, but private key is only known by original developer which can protect it (in some way) and check package certification against that.)</p>
","<p>The private key is used only for signing the APK and never (in theory) leaves the place of signing. So it's not possible to recover it from the APK. </p>

<p>Update: and no, the code itself can't check the validity of its own image. If the image has been altered, it's trivial to remove the check as well. </p>
","153","<android><certificate><x509certificate><private-key>","1","1","1","2013-12-05 19:19:45","","0","1","191148","","2013-12-05 12:48:07","2013-12-05 09:30:23",""
"46544652","Poynt Creating a JWT from private key in JAVA","<p>I am trying to create a JWT from private key in java. The private key is in a file.</p>

<p>Here is my method.</p>

<pre><code>protected String prepareJWT() throws NoSuchAlgorithmException, InvalidKeySpecException, JOSEException {

    String poyntPrivateKey = this.getPoyntPrivateKey();
    byte[] privateBytes = poyntPrivateKey.getBytes();
    PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(privateBytes);
    KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");

    PrivateKey privateKey = keyFactory.generatePrivate(keySpec);

    JWSSigner signer = new RSASSASigner((RSAPrivateKey) privateKey);
    ...

}
</code></pre>

<p>I get an Exception at <code>keyFactory.generatePrivate(keySpec);</code> with message: </p>

<blockquote>
  <p>java.security.InvalidKeyException: invalid key format</p>
</blockquote>

<p>and here is <code>getPoyntPrivateKey()</code></p>

<pre><code>protected String getPoyntPrivateKey() {
    File file = new File(""resources/poynt_api_private_key.txt"");
    StringBuilder privateKeyBuilder = new StringBuilder();
    String privateKey = privateKeyBuilder.toString();
    try {
        FileReader fr = new FileReader(file);
        Scanner scanner = new Scanner(fr);
        while(scanner.hasNextLine()) {
            privateKeyBuilder.append(scanner.nextLine() + ""\r"");
        }
        scanner.close();
        privateKey = privateKeyBuilder.toString();
    } catch (Exception e) {
        privateKey = ""Error"";

    } finally {

    }

    return privateKey;

}
</code></pre>
","<p>Here you go (using com.nimbusds.jwt.* and org.bouncycastle.openssl.*):</p>

<pre><code>    private static String getJWT() throws Exception{

    File f = new File(privateKeyFile);
    InputStreamReader isr = new InputStreamReader(new FileInputStream(f));

    PEMParser pemParser = new PEMParser(isr);
    Object object = pemParser.readObject();
    PEMKeyPair kp = (PEMKeyPair) object;
    Security.addProvider(new org.bouncycastle.jce.provider.BouncyCastleProvider());
    JcaPEMKeyConverter converter = new JcaPEMKeyConverter().setProvider(""BC"");
    RSAPrivateKey privateKey = (RSAPrivateKey) converter.getPrivateKey(kp.getPrivateKeyInfo());
    pemParser.close();


    // Create RSA-signer with the private key
    JWSSigner signer = new RSASSASigner(privateKey);

    // Prepare JWT with claims set
    JWTClaimsSet claimsSet = new JWTClaimsSet();
    claimsSet.setSubject(applicationId);
    claimsSet.setAudience(Arrays.asList(apiEndpoint));
    claimsSet.setIssuer(applicationId);
    claimsSet.setExpirationTime(new Date(new Date().getTime() + 360 * 1000));

    claimsSet.setIssueTime(new Date(new Date().getTime()));
    claimsSet.setJWTID(UUID.randomUUID().toString());

    SignedJWT signedJWT = new SignedJWT(new JWSHeader(JWSAlgorithm.RS256), claimsSet);

    // Compute the RSA signature
    signedJWT.sign(signer);

    String s = signedJWT.serialize();
    return s;
}
</code></pre>
","153","<java><jwt><private-key>","0","2","1","2017-10-12 17:28:40","46701161","0","","5765795","","2017-10-12 17:28:40","2017-10-03 12:30:52",""
"53974190","How do I decrypt the ciphertext given the private key with RSA?","<p>I have this private key and I am trying to decrypt the ciphertext:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAkfmJTVkwbRXOtWN76j2MAmbwCMReCkV3hWG+23zEmivwVEUtlUNvmFkSx9fFSRgGLMW+TPleLybU629fYDTXSPmIzLM3faxIyzyI2LJdRAaQMWo1FUcVI8ME5/BX9T5Ebu6D2dA8zJzJ68dGkHmhSxhOC97vLQfjj3tNCAL1IulyVk/ZyV6BVPxpiD3WB4rfo+SBe8H7019+dnaR/DcTcCsxF+oj7KOunfPPqBZBGMRe7ADj/vPYqgpoTWyA8m0juJyVNjqBnFUeyZEPwjqYUKEXpw64YXDZH/hbJI6VaFmj/KpMzBv/gIowE+yOu1V5tsOSCqDsd6EgDfQU92FhpwIDAQABAoIBAEkkZb3SAMfH84lDzeUy7aKOfZuG+S/gWuEEdyN3QvOVLJitCQgPgC0wBI8J+JqFZSKt+oqLMLwjkvBdH8cO8whnsDoRWq6n0tmy/UbHKKBbQYjhFLQSp+8BWsX00b3ac2O6M2rCQpSrwylW8m6V41HDXefozqMbntRYDeMDyFyzJnto2nBJ4sM7esiSIhERUeXlz8QHmxn0Ay3j8LnSBtCKdZ3nAQ19No6naRu7IbrMGbqWnzxiWa5PqJa1gF9wMMHI0Vfz6lT6x/qT5nYPORRxakuuUg9BmwJmhElOZqf/tC3YCcrGOfq04u+AS+S2GE7C2yOAfhX15HgP8FeiEdECgYEAu1vMVNMRrjbkLF4wBJ4tOVDylDEU9/quuzK21JVKEePZJP/gK2O+1nO9xGGfFRtnBeDnz7mgLuD04lnRZnSFfE+S3WDcb94hkJl0K00Z2sGIPvSR7S5853kua591QT6QNhTDP8PUdIGrSZBFJ+DyZgdBdlcxOiNh0nWzIFbWnx0CgYEAx3RiM3ySvsb7ZOg3/RMWD4r33rb3DRiDoa5PObNtqesbqYU5BOUl3IQY86kYwLQttgrcgb9xtTmBXS0rcWSAa3ndXdULujRIwK3IaJTz98Pu9iAzj8RNIFk9Sw9kUzmAHaSzXgZcjf9c5lL7jgrwjEfYeKvgkW1VoIb9lKng1JMCgYBE8AgFBgyxX30hXh6o9FKLjl9Ta6Pdgp2cP5LKMYwpfP6/AG9JR9BGNBwVEB5qs8R6g0CITDLGTPuN9aJ44lLjZJwTXLp/ZupOvEfkTuA+f4tULsUq0jofKZWNAAUy1oRVgdo9sh6QJ84QqUbo33oRVIYftwFj9PTfbXNVaN5beQKBgC/vudZT/1TYr/ztjt9FIg00QiSF5tR/6ssGAMaGaDnpZqmUekLB7BqWqQSOxIM0CrRw4dRRNbvviTbir0k+dVrfXCO8G2hyPnYIjl0MR6JptdnznVDVRhAbQo7ysRMLg84cEnvrnX0HPcWhdhIKcQvWDKHb9Uoec/Dz4KhFN+L/AoGATnaM4pl/tv735KcNn+qpgyB2Qd01qasRahecchPZqujH0+roS3llDJFN09NG9BzmAQFi2yH7Asx5KmIHqyWiYqyMXGUcsauT3u+xsDYWxObqAW7q7sMCKlfRtsnEWli3FOWNufO0TBwGeL9xVjL3nXXIsD9J5/iq1cH/RuIVoX4=
-----END RSA PRIVATE KEY-----
</code></pre>

<p>The ciphertext:</p>

<pre><code>M8zhAvxu/lkEcH42Eoe/cPjL6WJwPo1FZOK8Ta4SmigoHl9omd5Dol84vY3GfyzIZ0hHHp5gO3A4MjktImsLnT3Xx/myUearG/Ii24C+6irFapMqghziuMDYpeh7rs8G8ggE/rkjZaAAPSb/FgEDQkknL2qr4kxwyQybsnfmDDUqJ3q3lf0gRBDJ/2yr+aQyUcw3nK/zewbZjwlUeSyTvs76HhFtUDTyAlhB37961j9qfu+cxX34PtJlHWlF7k0WAuxQ4w7aCwkuQIvBOk/FUK3Ta1TrGEXg9iczPj6QacLI2DSjEPbODHsje82Fw+1ylcD1tF2mZ7GnnqtUw/9YoQ==
</code></pre>

<p>I tried to use these commands but without sucess:</p>

<pre><code>openssl rsautl -decrypt -in ciphertext -out plaintext -inkey private_key
</code></pre>

<p>In this case I get the fallowing error:</p>

<p>rsa routines:RSA_EAY_PRIVATE_DECRYPT:data greater than mod len:rsa_eay.c:518</p>

<pre><code>openssl enc -in ciphertext -out binarytext -d -a
openssl rsautl -decrypt -in binarytext -out plaintext -inkey private_key
</code></pre>

<p>If I try these 2 commands I get this error:</p>

<p>rsa routines: RA_padding_check_PKCS1_type_2:pkcs decoding error</p>

<p>rsa routines: RSA_EAY_PRIVATE_DECRYPT:padding check failed</p>
","","152","<encryption><rsa><private-key>","0","","0","2018-12-29 23:40:16","","4","","","","","2018-12-29 23:40:16",""
"52361073","Can we encrypt data that must be decrypted with any private key plus a server generate bits?","<p>I have come up with a scenario to make a secure data. Suppose I have a public encrypted file that anybody can download. But whenever anyone want to decrypt that data they need to get a key from server</p>

<p>To make the key cannot be shared. The key from server will not be able to decrypt the data directly. But the data <strong>must be</strong> decrypted with the <strong>client's private key</strong> after, without server knowing those client's privateKey</p>

<p>I hope below diagram could explain it clearly</p>

<p><a href=""https://i.stack.imgur.com/49lrP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/49lrP.png"" alt=""enter image description here""></a></p>

<p>Is it possible? What is the algorithm that could do this?</p>
","<blockquote>
  <p>the data must be decrypted with the client's private key after, without server knowing those client's privateKey <br/>
  the original file can be decrypted only by a specific client, using their own private key,</p>
</blockquote>

<p>There's a commonly used cryptosystem called <a href=""https://en.wikipedia.org/wiki/Hybrid_cryptosystem"" rel=""nofollow noreferrer"">hybrid cryptosystem</a>. <br/></p>

<p>The steps are:</p>

<ol>
<li>The original data are encrypted with a random unique key. </li>
<li>The data encryption key is encrypted by a client's public key (the client's public key needs to be know to the server). </li>
<li>The client needs to use its private key to decrypt the file encryption key and decrypt the file </li>
</ol>
","151","<security><encryption><private-key>","4","0","3","2018-09-28 18:08:49","52559252","3","","","","","2018-09-17 05:08:19",""
"52361073","Can we encrypt data that must be decrypted with any private key plus a server generate bits?","<p>I have come up with a scenario to make a secure data. Suppose I have a public encrypted file that anybody can download. But whenever anyone want to decrypt that data they need to get a key from server</p>

<p>To make the key cannot be shared. The key from server will not be able to decrypt the data directly. But the data <strong>must be</strong> decrypted with the <strong>client's private key</strong> after, without server knowing those client's privateKey</p>

<p>I hope below diagram could explain it clearly</p>

<p><a href=""https://i.stack.imgur.com/49lrP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/49lrP.png"" alt=""enter image description here""></a></p>

<p>Is it possible? What is the algorithm that could do this?</p>
","<p>you can use any asymmetric cryptography algorithms.</p>

<p>A <strong>public</strong> and a <strong>private</strong> <strong>key pairs</strong> are used. The public key is used to encrypt data that can only be decrypted with the private key.  There are a lot of resources on this, for example the article form <a href=""https://resources.infosecinstitute.com/review-asymmetric-cryptography/"" rel=""nofollow noreferrer"">InfoSec Institute</a>.</p>

<p>There are several proven good asymmetric algorithms such as RSA, DSA, Elliptic Curve Crytography (used by Ethereum blockchain). There are many Python libraries too.</p>
","151","<security><encryption><private-key>","4","-1","3","2018-09-28 18:08:49","52559252","3","","","","","2018-09-17 05:08:19",""
"52361073","Can we encrypt data that must be decrypted with any private key plus a server generate bits?","<p>I have come up with a scenario to make a secure data. Suppose I have a public encrypted file that anybody can download. But whenever anyone want to decrypt that data they need to get a key from server</p>

<p>To make the key cannot be shared. The key from server will not be able to decrypt the data directly. But the data <strong>must be</strong> decrypted with the <strong>client's private key</strong> after, without server knowing those client's privateKey</p>

<p>I hope below diagram could explain it clearly</p>

<p><a href=""https://i.stack.imgur.com/49lrP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/49lrP.png"" alt=""enter image description here""></a></p>

<p>Is it possible? What is the algorithm that could do this?</p>
","<blockquote>
  <p>I have come up with a scenario to make a secure data. Suppose I have a public encrypted
  file that anybody can download. But whenever anyone want to decrypt that data they need to get a key from server</p>
  
  <p>To make the key cannot be shared. The key from server will not be able to decrypt the
  data directly. But the data must be decrypted with the client's
  private key after, without server knowing those client's privateKey</p>
</blockquote>

<p>Make it so <strong>each time the file is downloaded, a random string is appended</strong>. The file is then encrypted with the user's <strong>public</strong> key, and symmetrically with an appropriate hash generated by that same string. For example a GPG file inside a password-protected ZIP file.</p>

<p>So Alice downloads <code>Financial_Report_201809_d8a1b2e6.pdf.zip</code> while Bob downloads <code>Financial_Report_201809_ff2a91c3.pdf.zip</code>.</p>

<p>If they want to decrypt the file, they need to send the server back the random string, and the server will supply them with the password for the outer ZIP. Then they're left with an encrypted file that only their private key can decode.</p>

<p>Note that <strong>once they have decrypted the file</strong>, nothing stops them from forwarding the file in the clear to someone else. On the other hand, sharing the encrypted PDF avails them nothing, as they would also need to share their private key.</p>

<p>Also note that since they need to be online to get the outer password, and they're left with a cleartext file at the end, <strong>this is (almost) functionally equivalent to the file being downloaded in the clear once user identity has been established</strong>.</p>

<p>The main differences are:</p>

<ul>
<li>the ciphered file (PDF in the above example) might not have been encrypted by the server at all. It might have been supplied by the user, who is then satisfied that only he can read the file back (it makes little sense for anyone else to download it, though).</li>
<li>the transmitted file is <em>very</em> securely transmitted. An attacker with full access to the datastream would not be able to decode the file (but this is no more than could be gained by just encrypting with the user's public key - no extra ZIP stage required).</li>
</ul>

<h1>UPDATE</h1>

<p>You want to encrypt the whole file <em>only once</em> (for all users), and then send the same file to Alice and Bob, and have them require <em>two different keys</em> at decryption time. The problem here is that Alice's key will also work on Bob's file, since <strong>it is the same file</strong>. There's no magic that's going to work here, unless you can hide some detail of the decryption process (e.g. use a program that you control and that can't be debugged and that will always connect to your server: a proposition that has <strong>consistently shown to be losing</strong>).</p>

<p>If you want to <strong>limit</strong> the encryption cost, you can send the massive file with both a symmetrically encrypted data payload (always the same) and a very short, asymmetrically encrypted key payload (always different), but <strong>still</strong> you will be vulnerable to the decrypted key being captured:</p>

<pre><code>[ RSA(ALICE.PUB, ""SQUEAMISH OSSIFRAGE"" ][ RIJNDAEL(""SQUEAMISH OSSIFRAGE"", LARGE FILE) ]
</code></pre>

<p>In the above scenario some program has to read the encryption header and decrypt the 'Squeamish Ossifrage' password, then go on decrypting (e.g. playing) the extra payload without the password being intercepted. This means that you need to supply the program yourself.</p>

<p>This is functionally equivalent to the program connecting to the server and downloading a ""yes"" or ""no"" to the question (appropriately encrypted, signed and secured) <em>""I am Alice's player. Can I decrypt and play 'Never Wanna Give You Up.avi'?""</em> , with no passwords or public keys being known or exchanged apart from the secret shared by Alice's player and the server.</p>

<h1>UPDATE II</h1>

<p>If the goal is to save encryption resources, the encryption could be made client side as hinted in the comment:</p>

<ul>
<li>the file is encrypted the once, with a purpose-generated private key.</li>
<li>the private key is stored inside a binary (we must assume it to be unhackable).</li>
<li>the user has to supply his public key for the decryption to work</li>
<li>the program can verify the public key from a repository (or, alternately, the user can supply the public key to the server, which will generate and send the binary file for download)</li>
<li>the program then runs both the decryption and reencryption</li>
<li>the user is left with a file encrypted with his public key, that he alone can decrypt.</li>
</ul>

<h1>UPDATE III</h1>

<p>In order for the cleartext file to never be exposed (i.e., it does not matter whether the algorithm gets leaked), you could devise the following scheme. Keep in mind that I'm not a cryptographer and there could be all sort of side channels left uncovered.</p>

<ul>
<li>You prepare a conversion table that maps each 16-bit word into another 16-bit word. This is a flavour of symmetrical encryption, even if you use two reciprocal matrices for encoding and decoding. Each matrix holds all possible 16-bit words, which means 65536 values, and is therefore 128 Kb in size.</li>
<li>You encrypt the file, once, with the encryption matrix. Without the decryption matrix, the file is unusable.</li>
<li>The user has to send you his public key.</li>
<li>You prepare a transmogrification matrix by encrypting each word with that key, and use the decryption value as an index.</li>
</ul>

<p>So, for example, say the first word of the cleartext file is A18B. In the encryption matrix, after the scramble, the A18B-th position will contain say 701C, and the decryption matrix, therefore, in the 701Cth position, will hold a18b.</p>

<p>The user has a file starting with 701c... which is of no use.</p>

<p>The user sends you his public key and you run 65536 encryptions on all words from 0000 to ffff. You then determine that the encryption of a18b is 791c. You prepare a re-encoding matrix that has 791c in the 701cth position.</p>

<p>You then send the user this matrix, which has 128K bytes, where the 701cth position is 791c.</p>

<p>The user runs the transmogrification, which is very fast, and is left with a file starting with 791c (as the 701c became 791c - I mistakenly chose two similar values in my example, that is of no significance). This value, <em>once decrypted with his private key</em>, will yield a18b which is the ""readable"" value.</p>

<p>The user has now a file that's been encrypted by his public key. The a18b value never appeared anywhere.</p>

<p>All that's left is for the user to decrypt the file using his private key and a code block size of 16 bits. <em>This operation will be run by the client and be quite slow</em>, and it's the reason why usually a large random quick symmetric key is RSA-encoded, and used to symmetrically quickly encrypt the large file, which can be quickly decrypted after the private key has unlocked the symmetric key.</p>

<p>The user cannot send the 128K to anyone, for they're useless without the private key.</p>

<p>(The problem here is still that the user can now decrypt the file with his private key, and send it around, even if it's unwieldy as it's a very large file).</p>
","151","<security><encryption><private-key>","4","1","3","2018-09-28 18:08:49","52559252","3","","","","","2018-09-17 05:08:19",""
"45972722","How to sign with private Key in X509certificate by RSA","<p>Newbie here. I am tasked to handle <code>x509certificate</code> in swift. It seems this <code>x509</code> thing sounds scary. I try my best to describe what I want to achieve. Hope you can guide me.</p>

<p><strong>Below is what I try to achieve:</strong></p>

<blockquote>
  <p>1) I would like to know, what I need in Swift to handle the
  x509certificate p12 file and private Key <br/> 2) How to Sign with
  private key by RSA <br/></p>
</blockquote>

<p><strong>In C#, below code is to get a private Key</strong></p>

<pre><code>public static RSACryptoServiceProvider UsePrivateKeyFromP12(string certFileName, string pwd)
{

var privateCert = new X509Certificate2(System.IO.File.ReadAllBytes(certificateFileName), password);

 return (RSACryptoServiceProvider)privateCert.PrivateKey;
}
</code></pre>

<p>How would I do in Swift? The private key will be on the client side.</p>

<p>Thanks</p>
","","150","<swift3><rsa><private-key>","4","","0","2017-08-31 09:24:38","","2","1","208348","","2017-08-31 09:24:38","2017-08-31 03:25:35",""
"22143225","I wont to get private key from SSL Certificate","<p>I have SSL Certificate file but I not have private key file that is previously used for enable HTTPS. so how can I able to get back my private key from that SSL Certificate and csr file.</p>

<p>Please help me is there any way to get back my private key.</p>

<p>Thanks.</p>
","<p>refer this</p>

<p><a href=""http://www.entrust.net/knowledge-base/technote.cfm?tn=7905"" rel=""nofollow"">http://www.entrust.net/knowledge-base/technote.cfm?tn=7905</a> it may be useful for you</p>
","149","<security><openssl><ssl-certificate><private-key>","-1","0","2","2014-06-30 05:46:29","","0","","653116","","2014-06-30 05:46:29","2014-03-03 09:42:14",""
"22143225","I wont to get private key from SSL Certificate","<p>I have SSL Certificate file but I not have private key file that is previously used for enable HTTPS. so how can I able to get back my private key from that SSL Certificate and csr file.</p>

<p>Please help me is there any way to get back my private key.</p>

<p>Thanks.</p>
","<p>You can't. By design, if the private key has been lost, there is no way to recover it from either the SSL certificate or the CSR.</p>
","149","<security><openssl><ssl-certificate><private-key>","-1","1","2","2014-06-30 05:46:29","","0","","653116","","2014-06-30 05:46:29","2014-03-03 09:42:14",""
"55333924","Decrypt the encrypted private key: data isn't an object ID","<p>I try to decrypt the encrypted private key string which like this
</p>

<pre><code>-----BEGIN ENCRYPTED PRIVATE KEY-----
MIIFHDBO...
-----END ENCRYPTED PRIVATE KEY-----
</code></pre>

<p>And I also remove the head and the foot. But it throws the exception:</p>

<pre><code>Exception in thread ""main"" java.io.IOException: ObjectIdentifier() -- data isn't an object ID (tag = 48)
    at sun.security.util.ObjectIdentifier.&lt;init&gt;(ObjectIdentifier.java:257)
    at sun.security.util.DerInputStream.getOID(DerInputStream.java:314)
    at com.sun.crypto.provider.PBES2Parameters.engineInit(PBES2Parameters.java:267)
    at java.security.AlgorithmParameters.init(AlgorithmParameters.java:293)
    at sun.security.x509.AlgorithmId.decodeParams(AlgorithmId.java:132)
    at sun.security.x509.AlgorithmId.&lt;init&gt;(AlgorithmId.java:114)
    at sun.security.x509.AlgorithmId.parse(AlgorithmId.java:372)
    at javax.crypto.EncryptedPrivateKeyInfo.&lt;init&gt;(EncryptedPrivateKeyInfo.java:95)
    at com.cargosmart.mci3.as2.process.as2control.KeystoreController.decryptKey(KeystoreController.java:162)
    at com.cargosmart.mci3.as2.process.as2control.KeystoreController.main(KeystoreController.java:147)
</code></pre>

<p>Here is the code </p>

<pre><code>import org.bouncycastle.util.encoders.Base64;

String key = ""-----BEGIN ENCRYPTED PRIVATE KEY-----MIII-----END ENCRYPTED PRIVATE KEY-----"";
key = standardizePem(key);
key = key.replace(""-----BEGIN ENCRYPTED PRIVATE KEY-----\n"", """").replace(""\n-----END ENCRYPTED PRIVATE KEY-----"", """");
byte[] b = Base64.decode(key);

// here is the exception line
EncryptedPrivateKeyInfo pkinfo = new EncryptedPrivateKeyInfo(b);
</code></pre>

<p>And the function standardizePem is aim to format the key string</p>

<pre><code>public static String standardizePem(String cert) {
        String SEPARATOR = ""-----"";
        String LINE_SEPERATOR = ""\n"";
        String temp[] = cert.split(SEPARATOR);
        String certHead = temp[1];
        String certEnd = temp[3];
        String certContent = temp[2];
        String regex = ""(.{64})"";
        certContent = certContent.replaceAll(regex,""$1\n"");
        final String pem = SEPARATOR + certHead + SEPARATOR + LINE_SEPARATOR +  certContent + LINE_SEPARATOR + SEPARATOR + certEnd + SEPARATOR;
        return pem;
    }
</code></pre>

<p>Could anyone have solutions?</p>

<p>Thanks for your help.</p>
","","149","<java><encryption><private-key>","0","","0","2019-03-25 09:17:42","","3","","11253357","","2019-03-25 09:17:42","2019-03-25 08:39:28",""
"31065133","Convert key and certificate","<p>I am using Mac OS X. I have the following files</p>

<ul>
<li>key.rtf</li>
<li>cert.rtf</li>
</ul>

<p>These files are PEM encoded and contain the key and the certificate in text form (<code>-----BEGIN RSA PRIVATE KEY-----</code> and <code>-----END RSA PRIVATE KEY-----</code>).</p>

<p>How can I:</p>

<ol>
<li>decrypt the private key with the passphrase I used to encrypt it and get it back in text form?</li>
<li>get both files in PEM format as text (!) back?</li>
</ol>

<p>The PEM encoding makes problems - if the files are stored as .key, .cert or anything like this, it works properly. But I need the text.</p>

<p>Thanks!</p>
","<p>It is possible with this command: <code>openssl rsa -in cert.pem -out server.key</code> (I converted the files to a cert.pem file before).</p>
","148","<macos><ssl-certificate><private-key>","0","0","1","2015-06-26 16:17:14","31066350","1","","608639","","2015-06-26 16:17:14","2015-06-26 04:48:15",""
"45405962","ssh key forward without ssh-add","<p>I have couple of hosts <code>HostA</code>, <code>HostB</code> and a key <code>KeyX</code> used to ssh to both the hosts. I am trying to ssh to <code>HostA</code> first and then ssh to <code>HostB</code> from <code>HostA</code>.</p>

<p>Following steps do not work:</p>

<pre><code>localhost :&gt; ssh -i KeyX HostA
hosta :&gt; ssh -A HostB
</code></pre>

<p>SSH to <code>HostB</code> fails with error complaining about ""Permission denied (publickey).""</p>

<p>Following steps work:</p>

<pre><code>localhost:&gt; ssh-add KeyX
localhost:&gt; ssh -i KeyX HostA
hostA:&gt; ssh -A HostB
</code></pre>

<p>Works. I understand that <code>ssh-add</code> adds key to the ssh-agent but don't understand why the first process does not works and why adding the key to the agent make a difference. Can someone explain what was required for key forward that is satisfied by ssh-add, wasn't clear from available public documents.</p>
","<blockquote>
  <p>I understand that ssh-add adds key to the ssh-agent</p>
</blockquote>

<p>Yes</p>

<blockquote>
  <p>but don't understand why the first process does not works and why adding the key to the agent make a difference.</p>
</blockquote>

<p>The key is on your machine. If you do not add it to the agent and do not forward this agent to the <code>hostA</code> (probably specified in configuration?), it will not see the key and will not be able to authenticate you.</p>

<blockquote>
  <p>Can someone explain what was required for key forward that is satisfied by <code>ssh-add</code>, wasn't clear from available public documents.</p>
</blockquote>

<p>Use <code>ssh-add -l</code>. It will list the keys you have in your agent. At first it does not list your key, after <code>ssh-add</code> it does. You should be able to run the same command on the <code>hostA</code>, where you should see the same key forwarded from your local machine.</p>
","148","<ssh><private-key><ssh-agent>","2","1","1","2017-07-31 19:30:50","45416513","0","","2196426","","2017-07-31 19:30:50","2017-07-31 00:16:27",""
"13874547","google service account get key","<p>I want to get private key from google api console .</p>

<p>I can do it manually but I  want to do it programmatically in JAVA. </p>

<p>Following references uses the private key file for authentication to google apis.</p>

<p>1) <a href=""https://stackoverflow.com/questions/10112939/login-required-401-unauthorized-message-when-calling-the-v3-google-calendar-ap"">&quot;Login Required&quot; 401 Unauthorized message when calling the v3 Google Calendar API using a Service Account via OAuth 2.0</a></p>

<p>2) <a href=""https://stackoverflow.com/questions/11827817/authenticating-google-api-with-a-service-account-with-java-api"">Authenticating Google API with a service account with Java API</a></p>

<p>Once I'll export private key file from google console , I will use it for authentication as mentioned in above links.</p>

<p>I am using google api version 2.0 with Oauth 2.0 in JAVA.</p>
","","147","<java><service><console><private-key>","1","","0","2012-12-14 07:42:37","","0","","-1","","2017-05-23 12:06:07","2012-12-14 07:42:37",""
"9064974","Authorize permanently by remote machine with SSH","<p>I have remote machine which I connect with ssh like this:</p>

<pre><code>ssh -i /path/to/private_key loginName@my.remote.machine.com -L 5901:localhost:5901
</code></pre>

<p>Each time I connect I receive:</p>

<pre><code>Enter passphrase for key '/path/to/private_key':
</code></pre>

<p>I wonder how to prevent entering password each time? I.e. is that possible to permanently explain to remote machine that I am authorized user and it can trust me? </p>

<p><strong>P.S.</strong> When I issue <code>cat ~/.ssh/authorized_keys</code> on the remote machine I can see my public key content. But it looks like remote machine always ignore it or something like that...</p>
","<p>Your SSH key is passphrase protected. The server isn't prompting you for a password, your local machine is asking for the passphrase to use the SSH key you provided.</p>

<p>Information to remove the passphase can be found here: <a href=""https://stackoverflow.com/questions/112396/how-do-i-remove-the-passphrase-for-the-ssh-key-without-having-to-create-a-new-ke"">How do I remove the passphrase for the SSH key without having to create a new key?</a></p>

<p>Edit: The best answer for the above question is: <a href=""https://stackoverflow.com/a/112409/965648"">https://stackoverflow.com/a/112409/965648</a></p>
","143","<https><ssh><public-key><private-key>","1","1","1","2012-01-30 14:29:09","9065000","0","","445517","","2012-01-30 14:29:09","2012-01-30 13:58:16",""
"47956449","how to get export wallet from remix JS vm ethereum?","<p>When using Etherum <a href=""http://remix.ethereum.org/"" rel=""nofollow noreferrer"">remix</a> to develop smart contract, they have 5 accounts. </p>

<p>How can I export them, or get private key?</p>
","","143","<private-key><ethereum><remix>","0","","0","2018-02-03 04:11:01","","2","","5031762","","2018-02-03 04:11:01","2017-12-23 22:15:09",""
"51888110","How to make PKCS12 (PKCS#12) contain more than one private key in .p12 container?","<p>I used Openssl to create a PKCS12 .p12 container storing a private key, server certificate and a CACertificate (Self signed) and I was able to export/parse the same successfully. </p>

<p>But I want to know <strong>how I can add more than one Private key to the same container</strong>. For example - I have 2 sets of server certificate and 2 private keys that I need add to the single .p12 container. From that .p12 container I want to parse and extract both private keys separately along with 2 server certificates. </p>

<p>In <a href=""https://stackoverflow.com/questions/29694110/may-pfx-file-contain-more-than-one-private-key"">this</a> link, it is mentioned that it is possible to do so but there are no answers on how to achieve it.</p>

<p>How can I achieve this? How can I save private keys(PK1 and PK2) and Server certs (C1, C2) into .p12 and extract them using OpenSsl?</p>
","","142","<openssl><private-key><pkcs#12><key-management>","3","","0","2018-08-18 23:09:33","","0","","238704","","2018-08-18 23:09:33","2018-08-17 03:46:53",""
"38100472","How to generate passphrase protected RSA keys in Perl","<p>I'm trying to generate a public and private key with passphrase protection in Perl but I haven't found anything useful.</p>

<p>Until now I have found this link <a href=""http://search.cpan.org/~vipul/Crypt-RSA-1.57/lib/Crypt/RSA.pm"" rel=""nofollow"">http://search.cpan.org/~vipul/Crypt-RSA-1.57/lib/Crypt/RSA.pm</a> which seems very promising. However, I can decrypt my message without any passphrase although I have created them with a passphrase.</p>

<p>The other link was this <a href=""http://www.perlmonks.org/?node_id=903458"" rel=""nofollow"">http://www.perlmonks.org/?node_id=903458</a> but when I create my keys (in order to store them in the DB) I still can decrypt without using a passphrase.</p>

<p>In summary, I need a library which allows me to encrypt text using private keys using a passphrase for both.</p>

<p>Thanks for your help!</p>

<p>PD: Please no PGP encryption. </p>

<p>UPDATE</p>

<p>Here is a pice of code that does not work as expected:</p>

<pre><code>use strict;
use warnings;
use Data::Dumper;
use 5.010;
use Crypt::RSA;

my $rsa = new Crypt::RSA;

my ($master_public, $master_private) = $rsa-&gt;keygen(
   Identity =&gt; ""Someone"",
   Size     =&gt; 1024,
   Password =&gt; ""this is a password or passphare"",
) or die $rsa-&gt;errstr();

my $cyphertext = $rsa-&gt;encrypt (
   Message    =&gt; ""My Message that I want to encrypt"",
   Key        =&gt; $master_public,
   Armour     =&gt; 1,
) or die $rsa-&gt;errstr();

my $text = $rsa-&gt;decrypt (
    Cyphertext =&gt; $cyphertext,
    Key        =&gt; $master_private,
    Armour     =&gt; 1,
    # Here I expect to add the user's passphrase
) or die $rsa-&gt;errstr();

say $text;
</code></pre>
","<p>The passphrase for RSA is only used in regards to saving or reading the key on disk. At no point in your operation did you save the private key to disk so it is already unencrypted in memory.</p>

<p>From the private key documentation, you can see how to hide and save it to disc (the $master_private object you have is already an object of that type)</p>

<p><a href=""https://metacpan.org/pod/Crypt::RSA::Key::Private"" rel=""nofollow"">https://metacpan.org/pod/Crypt::RSA::Key::Private</a></p>
","142","<perl><rsa><private-key><public-key><passphrase>","0","2","1","2016-06-29 14:44:34","38102969","2","1","3359563","","2016-06-29 13:23:48","2016-06-29 13:05:44",""
"55541601","OpenSSL: A problem with Field Name abbreviations?","<p>I am trying to create a new private key and CSR file for a colleague with some provided details:</p>

<pre><code>C                      = US
S                      = Florida
L                      = XXXXX
O                      = Foo Inc.
OU                     = IT
</code></pre>

<p>I read up on generating keys and CSR using OpenSSL and used a command to create it normally:</p>

<pre><code>openssl req -new -nodes -keyout mydomain.key -out mydomain.csr -subj ""/C=US/S=Florida/L=XXXXX/O=Foo Inc./OU=IT/CN=""
</code></pre>

<p>but this returns an error:</p>

<pre><code>Generating a 2048 bit RSA private key
..................+++
..+++
writing new private key to 'mydomain.key'
-----
req: Skipping unknown attribute ""S""
problems making Certificate Request
139945692307904:error:0D06407A:asn1 encoding routines:a2d_ASN1_OBJECT:first num too large:../crypto/asn1/a_object.c:61:
139945692307904:error:0D07A098:asn1 encoding routines:ASN1_mbstring_ncopy:string too short:../crypto/asn1/a_mbstr.c:102:minsize=1
</code></pre>

<p>Am I missing something obvious here?  originally gave him a CSR generated normally without the -subj argument (filled in using ubuntu terminal) but he says the inclusion of the ""ST"" abbreviation is causing a rejection from his CA. The state argument has to be ""S"". I don't work with SSL very often so Google has not really been helpful in telling me where to look.</p>
","<p>Look at <code>man req</code> (from openssl) and specifically the example at end:</p>

<pre><code>    [ req_distinguished_name ]
    C                      = GB
    ST                     = Test State or Province
    L                      = Test Locality
    O                      = Organization Name
    OU                     = Organizational Unit Name
    CN                     = Common Name
    emailAddress           = test@email.address
</code></pre>

<p>The short version of <code>stateOrProvinceName</code> is <code>ST</code> not <code>S</code>.</p>

<p>I do not know where ""but he says the inclusion of the ""ST"" abbreviation is causing a rejection from his CA."" comes from, but that is certainly wrong, and you should get the actual error from the CA directly.</p>

<p>The reference is the X.520 standard, you can download it from <a href=""https://www.itu.int/rec/dologin_pub.asp?lang=e&amp;id=T-REC-X.520-201610-I!!PDF-E&amp;type=items"" rel=""nofollow noreferrer"">https://www.itu.int/rec/dologin_pub.asp?lang=e&amp;id=T-REC-X.520-201610-I!!PDF-E&amp;type=items</a></p>

<p>In it you can see:</p>

<pre><code>stateOrProvinceName ATTRIBUTE ::= {
SUBTYPE OF  name
WITH SYNTAX UnboundedDirectoryString
LDAP-SYNTAX directoryString.&amp;id
LDAP-NAME   {""st""}
ID.         id-at-stateOrProvinceName }
</code></pre>

<p>You can clearly see that the abbreviation is ""st"" and not ""s"".
It is impossible for a public CA to do things otherwise.</p>
","142","<ssl><openssl><private-key><csr>","0","0","1","2019-04-05 19:15:50","","0","","","","","2019-04-05 18:42:29",""
"23402095","Connecting to remote server using Putty, Windows 7","<p>I am trying to connect to a remote host using Putty, with a pre-generated key from Git. 
I have a few questions:</p>

<ol>
<li>I copied the private key and created a .ppk file, which I supply to Putty. Is that the right way to do this?</li>
<li>The key generated by Git is of which type? SSH-1 or SSH-2?</li>
<li>I keep getting the error: Disconnected: No supported authentication methods available (server sent: public key). What could cause this?</li>
</ol>

<p>I googled around but didn't find anything helpful.</p>

<p>Thank you.</p>
","","142","<git><ssh><putty><private-key>","0","","0","2014-05-01 04:39:27","","2","","","","","2014-05-01 04:39:27",""
"23693955","Rapid SSL private key in to setup https with my apache sever","<p>I bought <strong>SSL certificate</strong> to apply it to my site which is hosted in <strong>Digitalocean  VPS</strong>,</p>

<p>When I bought SSL , Rapid SSL emailed the keys with that email.</p>

<p>In that mail they mentioned </p>

<p><strong>public.crt</strong> and <strong>intermediate.crt</strong> but they did not provide me any <strong>private.key.</strong></p>

<p>But in their installation guide they wrote like this</p>

<pre><code>           SSLCertificateFile /usr/local/ssl/crt/public.crt  
           This will need to point to the your SSL certificate itself that we issued to you

           SSLCertificateKeyFile /usr/local/ssl/private/private.key 
           This will need to point to the private key file associated with your certificate.

           SSLCertificateChainFile /usr/local/ssl/crt/intermediate.crt  
           This will need to point to the the intermediate file
</code></pre>

<p>Now how can I get this <strong>private.key</strong> file</p>

<p>Thanks in advance...</p>
","<p>You must have started with a private key of your own. The process goes like this:</p>

<ol>
<li>You create a keypair.</li>
<li>You create a Certificate Signing Request (CSR) which wraps the public key.</li>
<li>You submit the CSR.</li>
<li>They sign it and send back the signed certificate and their own certificate chain.</li>
</ol>

<p>You couldn't have got to first base without a private key.</p>
","141","<apache><ssl><https><ssl-certificate><private-key>","0","2","1","2016-07-15 12:01:15","23694021","0","","","","","2014-05-16 06:30:43",""
"16720369","Securely store and share a secret with ServiceStack across different logins","<p>Given is a ServiceStack REST Service that can sign documents with one of the public/private key algorithm. The prvate key is encrypted using a passphrase only the admin of this privat/public key pair knows.</p>

<p>Know it should be possible that other logins then the admin can sign documents (authorized by roles, permissions, etc.)</p>

<p>Currently they need to provide the passphrase for the private key in every signature request as the service needs to decrypt the private key and sign the document.</p>

<p>But i dont want to give the private key passphrase to other users and i also don't like to send it on every request over the wire.</p>

<p>So what is the best way to store the passphrase on the service side so that authorized logins can sign documents without knowing and sending the passphrase.</p>

<p>Is there a possibility to store it (automatically encrypted/decrypted from ServiceStack) in the user's session/UserAuth object?</p>

<p>Or is there are any other solution? It should work on .net and mono.</p>
","<p>I'd recommend you look at Microsoft's guidance on encrypting/decrypting config sections. This way you can store it encrypted in web.config and your back end service can have access to it.</p>

<p>See <a href=""http://msdn.microsoft.com/en-us/library/zhhddkxy(v=vs.100).aspx"" rel=""nofollow"">http://msdn.microsoft.com/en-us/library/zhhddkxy(v=vs.100).aspx</a></p>
","140","<asp.net><security><store><servicestack><private-key>","3","3","1","2013-05-23 18:36:05","","0","","","","","2013-05-23 17:34:14",""
"55665312","How to convert EVP_PKEY into DER format bytes","<p>Using the openssl library I need to convert the certificate and private key obtained from a pkcs12 file into DER format certificate and private key.</p>

<p>DER is Distinguished Encoding Rules, a form of BER encoding described here: <a href=""https://wiki.openssl.org/index.php/DER"" rel=""nofollow noreferrer"">https://wiki.openssl.org/index.php/DER</a></p>

<p>I have used the code below which I think extracts the certificate.  But how do I extract the privatekey in to DER.  i2d_EVP?  I cannot find any function with a name like that?</p>

<p>Here is my code so far:</p>

<pre><code>PKCS12* p12_cert = NULL;
const uint8_t* p = NULL;  // ptr to actual pkcs12 bytes
int binsize = 3200;  // size of pkcs12 data
if(d2i_PKCS12(&amp;p12_cert, &amp;p, binsize) != NULL) {
  EVP_PKEY *privatekey = NULL;
  X509 *x509_cert = NULL;
  STACK_OF(X509) *additional_certs = NULL;
  if(PKCS12_parse(p12_cert, m_password.c_str(), &amp;privatekey, &amp;x509_cert, &amp;additional_certs) != 0) {
    int data_length = i2d_X509(x509_cert, NULL);

    uint8_t* der_cert = malloc(data_length);
    i2d_X509(x509_cert, &amp;der_cert);

    // but how to get privateKey in DER format?

    }
 }
</code></pre>
","","140","<c++><openssl><private-key><pkcs#12><der>","0","","0","2019-04-13 12:18:42","","3","","1413395","","2019-04-13 12:18:42","2019-04-13 12:13:39",""
"45684142","Two Private keys on Weblogic","<p>How to access two private keys on Web logic server or via Java code.
Any pointers would help.
Below is the piece of code, but it throws key is tampered or password is wrong.</p>

<p>Similar code works if i pass the the truststore or keystore location as direct location like .trustStoreFile(""C:\Test\XYZTrust.jks"")</p>

<p>If i change the code like below it throws</p>

<pre><code>/* Get the JKS contents */
        final KeyStore keyStore = KeyStore.getInstance(""JKS"");
        try (final InputStream is = new FileInputStream(fullPathOfKeyStore())) {
            keyStore.load(is, JKS_PASSWORD);
        }
        final KeyManagerFactory kmf = KeyManagerFactory.getInstance(KeyManagerFactory
                .getDefaultAlgorithm());
        kmf.init(keyStore, KEY_PASSWORD);
        final TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory
                .getDefaultAlgorithm());
        tmf.init(keyStore);

        /*
         * Creates a socket factory for HttpsURLConnection using JKS
         * contents
         */
        final SSLContext sc = SSLContext.getInstance(""TLS"");
        sc.init(kmf.getKeyManagers(), tmf.getTrustManagers(), new java.security.SecureRandom());
        final SSLSocketFactory socketFactory = sc.getSocketFactory();
        HttpsURLConnection.setDefaultSSLSocketFactory(socketFactory);
</code></pre>

<p>Error :- Keystore was tampered with, or password was incorrect</p>

<p>Note:- Password and keystore are 1000 % correct.</p>
","<p>You can find your Keystore using Admin-console.
Got to Environment -> Servers -> AdminServer.
You should see something like this:
<a href=""https://i.stack.imgur.com/iqvLK.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/iqvLK.png"" alt=""enter image description here""></a></p>

<p>In the field ""Custom identity Keystore""is the path to your Keystore file,
and in the field ""Custom Trust Keystore"" is the path to your Trust key.</p>

<p>In case you don't have the correct Password you can use the following link to decrypt them.</p>

<p><a href=""http://techtapas.blogspot.de/2011/05/how-to-decrypt-weblogic-passwords-with.html?m=1"" rel=""nofollow noreferrer"">http://techtapas.blogspot.de/2011/05/how-to-decrypt-weblogic-passwords-with.html?m=1</a></p>

<p>If you are using default passwords then most of the chances that this is one of those:
<a href=""https://itguykelly.wordpress.com/2010/05/20/default-weblogic-keystore-passwordpassphrase/"" rel=""nofollow noreferrer"">https://itguykelly.wordpress.com/2010/05/20/default-weblogic-keystore-passwordpassphrase/</a></p>
","139","<web-services><weblogic><private-key>","0","0","1","2017-08-15 06:44:55","","0","2","","","","2017-08-14 22:49:31",""
"14044783","private key protection for Online signatures","<p>Let's say we have a group of id/signature pairs like:</p>

<pre><code>https://picasaweb.google.com/${ID1}?authkey=${SIGNATURE1}
https://picasaweb.google.com/${ID2}?authkey=${SIGNATURE2}
https://picasaweb.google.com/${ID3}?authkey=${SIGNATURE3}
https://picasaweb.google.com/${ID4}?authkey=${SIGNATURE4}
....
</code></pre>

<p>It is one way picasa shares the links, so they are all persistent.</p>

<p>If we can collect thousands or millions of those id/signature pairs, does it make the private key vulnerable? That we can generate signature for any new ID?</p>

<p>( Assuming the encryption method is sha1 or sha256. What if there is a salt or not?)</p>

<p>( picasa is just an example, please don't target at picasa. It is a general question as we saw many sites are using this method. )</p>

<p>( Let's say the signature is generated by this method: <a href=""https://stackoverflow.com/questions/10859526/hmac-sha1-signature-in-java"">HMAC SHA1 Signature in Java</a> )</p>
","<p>So what the question really boils down to is whether or not a signed hash actually ""leaks"" any information about the key that was used to sign the hash.  Assuming a strong key and a good hash function, no information about the key should be leaked by an HMAC, even if the plaintext is known.</p>

<p>Here's a link to a similar question on the cryptography stackexchange with a good answer:</p>

<p><a href=""https://crypto.stackexchange.com/questions/2538/is-my-hmac-secure-if-i-have-a-complete-series-of-hmacd-prefix-strings"">https://crypto.stackexchange.com/questions/2538/is-my-hmac-secure-if-i-have-a-complete-series-of-hmacd-prefix-strings</a></p>
","139","<digital-signature><sha1><sha><private-key><sha256>","0","0","1","2012-12-26 19:13:05","","4","","-1","","2017-05-23 12:09:49","2012-12-26 18:44:38",""
"42648322","SpongyCastle private key extraction very slow","<p>I am using following method to extract private key from secret key using Spongy Castle:</p>

<pre><code>public static PGPPrivateKey findPrivateKey(PGPSecretKey pgpSecKey, char[] pass)
    throws PGPException
{
    if (pgpSecKey == null) return null;

    PBESecretKeyDecryptor decryptor = new BcPBESecretKeyDecryptorBuilder(new BcPGPDigestCalculatorProvider()).build(pass);
    return pgpSecKey.extractPrivateKey(decryptor);
}
</code></pre>

<p>however the last line of code runs very slow (aproximately 90 secs) on Android. Is there any better way on how to extract PGPPrivateKey from encrypted secret keys? Maybe I am doing some mistake when exporting secret key from linux but I dont think that this is the problem since I use simple command <code>gpg --export-secret-keys &gt; key.skr</code>. Any ideas on what could be causing this problem?</p>
","<p>I noticed a similar slow performance at the PKCS8 private key decryption after upgrading the Android Gradle plugin from 2.2.1 to 3.3.0.</p>

<p>The slow performance is caused by Instant Run. When Instant Run is deactivated, the decryption needs ~1 second.</p>
","138","<android><bouncycastle><private-key><pgp><spongycastle>","0","2","1","2017-07-04 17:21:24","","0","","","","","2017-03-07 12:27:42",""
"54590588","Migrate existing key container for strong naming","<p>How can I migrate a key container from one machine to another?</p>

<p>I have a key container on an old machine that is used for strong naming assemblies.<br>
Currently I am in the process of migrating the project to a newer machine.<br>
Unfortunately the key container on the old machine is marked as non-exportable, but I managed to export it using <a href=""https://github.com/gentilkiwi/mimikatz"" rel=""nofollow noreferrer"">mimikatz</a>.<br>
The result was a PVK file (private key), that I converted to an XML file (RSAKeyValue) using the <a href=""https://www.nuget.org/packages/chilkat-x64/"" rel=""nofollow noreferrer"">Chilkat library</a>.<br>
The xml file could then be imported to a key container on the new machine using aspnet_regiis.<br>
However, when building the project on the new machine, I get this Linker error:</p>

<blockquote>
  <p>LINK : fatal error LNK1256: ALINK operation failed (80040405) : The
  key container name '...' does not exist</p>
</blockquote>

<p>I noticed that there's a difference between key containers that are created with aspnet_regiis and sn.exe.<br>
Key containers generated with sn.exe can be found by the Linker, but key containers generated with aspnet_regiis are not found (LNK1256 error from above).<br>
But in order to install the same key container with sn.exe, it needs to be a .snk file, which I didn't manage to convert yet.<br>
If I can convert it to a .snk file, it doesn't necessarily have to be imported to a key container, because I could use the strong name key file for signing as well.  </p>
","","136","<assemblies><private-key><strongname><snk><sn>","2","","0","2019-02-21 19:12:19","","0","1","4579504","","2019-02-21 19:12:19","2019-02-08 10:37:47",""
"30658113","Secure way of storing Private key in google oauth 2.0 server application","<p>I'm a newbie to OAuth 2.0. Currently I am in the process of implementing OAuth 2.0 for the server to server application as mentioned in this <a href=""https://developers.google.com/identity/protocols/OAuth2ServiceAccount"" rel=""nofollow"">link</a> . As per the link, it says to generate a Public/Private key pair. After generating the pair, the message box says that </p>

<blockquote>
  <p>""The Private Key has been downloaded to your machine and serves as the
  only copy of this key. <strong>You are responsible for storing it securely</strong> "".</p>
</blockquote>

<p>Can anybody suggest me what are the different ways to store this private key securely and/or any reference materials to go through?
Please let me know if you need additional information.
Thanks in advance.</p>
","<p>I did it by storing in the database. We have a production database in which we had introduced two more columns to store the Client_ID and Private Key. They will not be stored as is rather, we are encrypting them and then storing. It is the applications responsibility to decrypt and use it. Please let me know if any one has a better idea. </p>
","136","<security><google-oauth><private-key><google-oauth2>","0","0","1","2015-11-27 06:16:25","","0","","3843624","","2015-06-16 07:38:38","2015-06-05 03:57:54",""
"43409851","I am using Yii2 framework and i want to get value of user_id, which is 6, how can i store it in a variable from following object","<p>I am using Yii2 framework and i want to get value of <code>user_id</code>, which is 6, how can i store it in a variable from following object.    </p>

<pre><code>yii\db\ActiveQuery Object
    (
        [sql] =&gt; 
        [on] =&gt; `enter code here`
        [joinWith] =&gt; 
        [select] =&gt; 
        [selectOption] =&gt; 
        [distinct] =&gt; 
        [from] =&gt; 
        [groupBy] =&gt; 
        [join] =&gt; 
        [having] =&gt; 
        [union] =&gt; 
        [params] =&gt; Array()

    [_events:yii\base\Component:private] =&gt; Array
        (
        )

    [_behaviors:yii\base\Component:private] =&gt; Array
        (
        )

    [where] =&gt; 
    [limit] =&gt; 
    [offset] =&gt; 
    [orderBy] =&gt; 
    [indexBy] =&gt; 
    [emulateExecution] =&gt; 
    [modelClass] =&gt; backend\models\User
    [with] =&gt; 
    [asArray] =&gt; 
    [multiple] =&gt; 
    [primaryModel] =&gt; backend\models\Vendors Object
        (
            [_attributes:yii\db\BaseActiveRecord:private] =&gt; Array
                (
                    [id] =&gt; 0
                    [user_id] =&gt; 6
                )

            [_oldAttributes:yii\db\BaseActiveRecord:private] =&gt; Array
                (
                    [id] =&gt; 0
                    [user_id] =&gt; 6
                )

            [_related:yii\db\BaseActiveRecord:private] =&gt; Array
                (
                )

            [_errors:yii\base\Model:private] =&gt; 
            [_validators:yii\base\Model:private] =&gt; 
            [_scenario:yii\base\Model:private] =&gt; default
            [_events:yii\base\Component:private] =&gt; Array
                (
                )

            [_behaviors:yii\base\Component:private] =&gt; Array
                (
                )

        )

    [link] =&gt; Array
        (
            [id] =&gt; user_id
        )

    [via] =&gt; 
    [inverseOf] =&gt; 
)
</code></pre>
","<p>the value can be retrieved by this code.
$user_id = $myreturn->primaryModel->attributes['user_id'];</p>
","130","<object><yii2><private-key>","0","0","1","2017-04-14 13:05:37","43412122","2","","2436306","","2017-04-14 13:05:37","2017-04-14 10:35:30",""
"38477603","Can't SSH into Vagrant (Ubuntu 12.04.5)","<p>I just installed Vagrant into host - Ubuntu 12.04.5
The thing is that i am able to start the virtual machine but can't ssh into the machine
everytime i trying ssh'ng into the virtual machine it just can't login.</p>

<p>Now, I am sure that it has something to do with the Vagrant file configuration and the ssh keys but i don't know what i am doing wrong. Please take a look at the Vagrantfile.</p>

<pre><code># -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = ""2""

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
# All Vagrant configuration is done here. The most common configuration
# options are documented and commented below. For a complete reference,
# please see the online documentation at vagrantup.com.

# Every Vagrant virtual environment requires a box to build off of.
config.vm.box = ""ubuntu/precise64""

# Disable automatic box update checking. If you disable this, then
# boxes will only be checked for updates when the user runs
# `vagrant box outdated`. This is not recommended.
# config.vm.box_check_update = false

# Create a forwarded port mapping which allows access to a specific port
# within the machine from a port on the host machine. In the example below,
# accessing ""localhost:8080"" will access port 80 on the guest machine.
 config.vm.network ""forwarded_port"", guest: 80, host: 8080

# Create a private network, which allows host-only access to the machine
# using a specific IP.
# config.vm.network ""private_network"", ip: ""192.168.33.10""

# Create a public network, which generally matched to bridged network.
# Bridged networks make the machine appear as another physical device on
# your network.
# config.vm.network ""public_network""

# If true, then any SSH connections made will enable agent forwarding.
# Default value: false
 config.ssh.forward_agent = true

# Share an additional folder to the guest VM. The first argument is
# the path on the host to the actual folder. The second argument is
# argument is a set of non-required options.
# config.vm.synced_folder ""../data"", ""/vagrant_data""

# Provider-specific configuration so you can fine-tune various
# backing providers for Vagrant. These expose provider-specific options.
# Example for VirtualBox:
#
# config.vm.provider ""virtualbox"" do |vb|
#   # Don't boot with headless mode
#   vb.gui = true
#
#   # Use VBoxManage to customize the VM. For example to change memory:
#   vb.customize [""modifyvm"", :id, ""--memory"", ""1024""]
# end
#
# View the documentation for the provider you're using for more
# information on available options.

# Enable provisioning with CFEngine. CFEngine Community packages are
# automatically installed. For example, configure the host as a
# policy server and optionally a policy file to run:
#
# config.vm.provision ""cfengine"" do |cf|
#   cf.am_policy_hub = true
#   # cf.run_file = ""motd.cf""
# end
#
# You can also configure and bootstrap a client to an existing
# policy server:
#
# config.vm.provision ""cfengine"" do |cf|
#   cf.policy_server_address = ""10.0.2.15""
# end

# Enable provisioning with Puppet stand alone.  Puppet manifests
# are contained in a directory path relative to this Vagrantfile.
# You will need to create the manifests directory and a manifest in
# the file default.pp in the manifests_path directory.
#
# the file default.pp in the manifests_path directory.
#
# config.vm.provision ""puppet"" do |puppet|
#   puppet.manifests_path = ""manifests""
#   puppet.manifest_file  = ""site.pp""
# end

# Enable provisioning with chef solo, specifying a cookbooks path, roles
# path, and data_bags path (all relative to this Vagrantfile), and adding
# some recipes and/or roles.
#
# config.vm.provision ""chef_solo"" do |chef|
#   chef.cookbooks_path = ""../my-recipes/cookbooks""
#   chef.roles_path = ""../my-recipes/roles""
#   chef.data_bags_path = ""../my-recipes/data_bags""
#   chef.add_recipe ""mysql""
#   chef.add_role ""web""
#
#   # You may also specify custom JSON attributes:
#   chef.json = { :mysql_password =&gt; ""foo"" }
# end

# Enable provisioning with chef server, specifying the chef server URL,
# and the path to the validation key (relative to this Vagrantfile).
#
# The Opscode Platform uses HTTPS. Substitute your organization for
# ORGNAME in the URL and validation key.
#
# If you have your own Chef Server, use the appropriate URL, which may be
# HTTP instead of HTTPS depending on your configuration. Also change the
# validation key to validation.pem.
#
# config.vm.provision ""chef_client"" do |chef|
#   chef.chef_server_url = ""https://api.opscode.com/organizations/ORGNAME""
#   chef.validation_key_path = ""ORGNAME-validator.pem""
# end
#
# If you're using the Opscode platform, your validator client is
# ORGNAME-validator, replacing ORGNAME with your organization name.
#
# If you have your own Chef Server, the default validation client name is
# chef-validator, unless you changed the configuration.
#
#   chef.validation_client_name = ""ORGNAME-validator""
  config.vm.provider :virtualbox do |vb|
      vb.customize ['modifyvm', :'11b4ce4e-f322-4d2e-affb-d31f306bdd53', '--pae', 'on']
      vb.customize ['modifyvm', :'11b4ce4e-f322-4d2e-affb-d31f306bdd53', '--hwvirtex', 'off']
      vb.customize ['modifyvm', :'11b4ce4e-f322-4d2e-affb-d31f306bdd53', '--vtxvpid', 'off']
  end
  Vagrant.configure(""2"") do |config|
      config.ssh.private_key_path = ""~/.ssh/id_rsa""
      config.ssh.forward_agent = true
  end
</code></pre>

<p>end</p>
","","129","<ssh><vagrant><virtualbox><ssh-keys><private-key>","0","","0","2016-07-20 09:37:10","","2","","","","","2016-07-20 09:37:10",""
"34994926","Are hashes and MACs vulnerable to bit-flipping attacks?","<p>Suppose there is an encrypted communication between A and B, through an <strong>unsecure</strong> medium, such that A and B shared a secret key with DH protocol.</p>

<p>If A sends an encrypted message and the hash/MAC/HMAC of this message to B, wouldn't it be easy for an eavesdropper to just intercept the hash/MAC/HMAC, change some bits in it, and send it to B?</p>

<p>B wouldn't be able to check the integrity of all messages sent by A and thus will destroy them everytime he gets a message from A, right?</p>

<p>B will then become non available ???</p>

<p>Thank you</p>
","<p>The process you describe is just a very specific form of corrupting the data. If an attacker can corrupt the data, then of course the attacker can prevent A from speaking to B. The attacker could just drop the packets on the ground. That would also prevent A from speaking to B.</p>

<p>Any data corruption, not just modifying the HMAC, will cause this same situation. If I modify the authenticated stream, then the (unmodified) HMAC won't match and it will be discarded.</p>

<p>The point of an HMAC is to ensure integrity. It has nothing to do with availability. Any Man-in-the-Middle can always trivially destroy availability in any system as long as the connection goes through them. (If they can't, they're not a MitM.)</p>
","128","<encryption><aes><private-key><diffie-hellman>","1","1","1","2016-01-25 14:39:16","34995203","2","","","","","2016-01-25 14:24:06",""
"55348537","Cannot parse privateKey: Unsupported key format AWS Lambda NodeJS Serverless","<p>I'm trying to create an AWS Lambda function that uploads a file to a remote storage using sftp, and I'm using NodeJS and Serverless. The problem is my nodejs code works on my local machine, but when I put it in lambda, I'm getting <b>Error: Cannot parse privateKey: Unsupported key format</b> </p>

<p>I've tried putting the key as a string like</p>

<pre>
`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEApCvyjE7gdLlRnvDwS24YuISjfvTUwNXzRPgSB/zkZQvYjNQL
.......................
q0jjb7UFNPS9rP5XIQOvcFVlGUPWulFXZQeFeAqpLeI6+SE0iUKi2g==
-----END RSA PRIVATE KEY-----`
</pre>

<p>and of course putting the file path of the key, but both have the same error.</p>

<p>anyone experienced this? and does this have a solution?</p>

<p>Thanks</p>
","","128","<node.js><aws-lambda><private-key><ssh2>","0","","0","2019-03-26 01:16:20","","1","","","","","2019-03-26 01:16:20",""
"31596663","How is the process of signing and verifying a release and why apache says that the signature file signed by a public key?","<p>I have started learning GPG and I am a bit confused about the infos I have found. The <a href=""https://www.gnupg.org/gph/en/manual/x135.html"" rel=""nofollow"">GnuPG documentation</a> says that</p>

<blockquote>
  <p>A signature is created using the <strong>private key</strong> of the signer</p>
</blockquote>

<p>But at the <a href=""http://www.apache.org/dev/release-signing#verifying-signature"" rel=""nofollow"">Apache's site</a>, they say:</p>

<blockquote>
  <p>The signature file is a digest of the original file signed by a <strong>public key</strong>...</p>
</blockquote>

<p>And on the <a href=""http://www.apache.org/dev/release-signing#detach-sig"" rel=""nofollow"">same site, in another section</a>, they say the following:</p>

<blockquote>
  <p>A digital signature is created from an original document using a <strong>private key</strong>.</p>
</blockquote>

<p>Now I suppose that the process of signing involves signing the hash of a release using the private key of the holder and not the public one like Apache says in the second link I have posted, or am I wrong? Otherwise, how could someone be ever able to decrypt the hash of a release signed with a public key if he/she doesn't have the private key of the holder? </p>

<p>Then, could someone simply explain in what the processes of signing and verifying a signature consist and what are the passages, e.g. for a software release like <a href=""https://maven.apache.org/download.cgi?Preferred=ftp://apache.mirrors.tds.net/pub/apache.org/"" rel=""nofollow"">Apache Maven</a>?</p>
","<p><strong>TL;DR</strong>: There is a mistake in the documentation, your understanding of signatures is right.</p>

<blockquote>
  <p>The signature file is a digest of the original file signed by a public [sic, this is should be private] key...</p>
</blockquote>

<p>Signing a document usually is performed by calculating the hash sum of the document (asymmetric cryptography is very slow for large amounts of data), which finally is <em>encrypted</em> using the private key, so anybody can <em>decrypt</em> it using the public key. If the decryption process results in the same hash sum as is calculated from the original document, it must have been encrypted using the private key - which is only known to the signer; thus the authorship is verified.</p>

<p>Encryption (leaving apart the aspect of hybrid cryptosystems like OpenPGP is, but the general concept stays the same) works the other way round; the public key is used for encryption, so only the private key can be used to decrypt the information.</p>

<p>I added a <a href=""https://issues.apache.org/jira/browse/INFRA-10040"" rel=""nofollow"">bug report for the documentation issue</a> (closed/fixed since 2015-07-29).</p>

<blockquote>
  <p>Then, could someone simply explain in what the processes of signing and verifying a signature consist and what are the passages?, e.g. for a software release like Apache Maven -> <a href=""https://maven.apache.org/download.cgi?Preferred=ftp://apache.mirrors.tds.net/pub/apache.org/"" rel=""nofollow"">https://maven.apache.org/download.cgi?Preferred=ftp://apache.mirrors.tds.net/pub/apache.org/</a> ?</p>
</blockquote>

<ol>
<li>You need to fetch the public key used for signing the software (usually, you will download it from a keyserver using <code>gpg --recv-key [key-id]</code>.</li>
<li>Verify the key's integrity, for example by speaking with the developers, your web of trust, the products HTTPs-encrypted website (depending on how paranoid you're at verifying the authorship).</li>
<li>Issue a signature to certify the key if it is not already verified through your web of trust, if you don't want to create a public one, there are also local signatures which are never transmitted to the key server network.</li>
<li>Finally, use <code>gpg --verify</code> to check that the signature was indeed issued by the product maintainer's key.</li>
</ol>
","128","<apache><gnupg><public-key><software-release><private-key>","1","1","1","2015-07-29 15:41:43","31598532","0","","1252759","","2015-07-24 14:20:24","2015-07-23 19:40:19",""
"28408920","iOS Developer/Product Keys/Certificates Starting Again","<p>Our iOS development and distribution iMac fried and we lost all of our iOS certificates and keys for development and releasing apps.</p>

<p>All the Apple documentation I can find either relates to using a machine thats already got the details within it - however we've got nothing.</p>

<p>Using our developer account how can we generate the CSRs/Private Keys/Public Keys/Certificates etc again without needing anything from the old install?</p>

<p>Thanks</p>
","<p>You can't generate the same CSRs/Private keys/Public etc.</p>

<p>You need to revoke all the certificates and profiles, generate new certificates from you new mac KeyChain Access. This should not harm any thing either published apps or in development. </p>
","127","<ios><private-key><public-key><csr>","0","2","1","2015-02-09 11:49:54","","7","","","","","2015-02-09 11:40:27",""
"13799909","confusion in public and private key","<p>in Encryption and decryption same key is use to to convert plan text to cipher and cipher to plan text. so why in public key cryptograpy method sender Encrypt using receiver public key and receiver decrypt using his own private key ? </p>
","<p>Because it wouldn't be secure the other way around, or feasible either. Only the recipient has his private key, so nobody else can use it.</p>
","125","<encryption><private-key><pki><public-key>","-2","0","2","2012-12-10 21:00:39","","0","","207421","","2012-12-10 20:48:32","2012-12-10 11:17:45","2012-12-11 06:28:48"
"13799909","confusion in public and private key","<p>in Encryption and decryption same key is use to to convert plan text to cipher and cipher to plan text. so why in public key cryptograpy method sender Encrypt using receiver public key and receiver decrypt using his own private key ? </p>
","<p>What you initially refer to is symmetric encryption (shared key), which allows 2 entities to communicate securely based on a single shared key that is only known to the two entities.  This key can be exchanged several ways, but can't be publicized for obvious reasons.</p>

<p>Asymmetric encryption (public/private key) allows 2 entities to communicate securely as follows:</p>

<p>If one party wants to accept secure (encrypted) information, they need a key that isn't visible to the world (private), but they also have to be able to provide a key to anyone who wants to send encrypted information (public).</p>

<p>So I can give my public key out to the whole world and know the data is secure since only I have the private key, therefore I'm the only one who can decrypt it.</p>

<p>See Asymmetric Encryption in this Microsoft article: <a href=""http://support.microsoft.com/kb/246071"" rel=""nofollow"">http://support.microsoft.com/kb/246071</a></p>
","125","<encryption><private-key><pki><public-key>","-2","2","2","2012-12-10 21:00:39","","0","","207421","","2012-12-10 20:48:32","2012-12-10 11:17:45","2012-12-11 06:28:48"
"33479597","Private and public key separately","<p>οκ!I want to establish a client server communication oves SSL/TLS in java. The server is multithreaded. With openssl I acted as my own CA (created private key and self-signed certificate for the authority). Now I want to create keys and certs for my server and clients which are signed from the CA I created.</p>

<p>1)Do I have to create certs and keys from the prompt for every single client? Or is it another ""automated"" way eg with a script?</p>

<p>2) I have seen that this code for setting up keystores</p>

<pre>private void setupClientKeyStore() throws GeneralSecurityException, IOException 
    {
    clientKeyStore = KeyStore.getInstance( ""JKS"" );
    clientKeyStore.load( new FileInputStream( ""client1publickey.jks"" ),
                       ""password"".toCharArray() );
    }

    private void setupServerKeystore() throws GeneralSecurityException, IOException
    {
    InputStream keyStoreResource = new FileInputStream(""serverprivatekey.jks"");
    char[] keyStorePassphrase = ""password"".toCharArray();
    serverKeyStore = KeyStore.getInstance(""JKS"");
    serverKeyStore.load(keyStoreResource, keyStorePassphrase);
}
</pre>

<p>I have run the command to see what type of entries are these and client1publickey is a TrustedCert entry while serverprivatekey is a PrivateKey entry. This code is on my server class. I have this code on my client class <pre> private void setupServerKeystore() throws GeneralSecurityException, IOException {
    serverKeyStore = KeyStore.getInstance( ""JKS"" );
    serverKeyStore.load( new FileInputStream(""serverpublickwy.jks""), 
                        ""university"".toCharArray() );
  } 
   private void setupClientKeyStore() throws GeneralSecurityException, IOException {
    clientKeyStore = KeyStore.getInstance( ""JKS"" );
    clientKeyStore.load( new FileInputStream( ""client1privatekey.jks"" ),
                       ""university"".toCharArray() );}</pre>
The question is that how can I create these jks files separately? The publickey.jks file is cert, right? How can I have it in another file from the private key and be signed from CA? Or is it another way I can estabvlish connections between client/server? 
Firstly I had created the CA with openssl and then the two jks files for server and client included the certs and the key. Sorry for the english.</p>
","","125","<java><openssl><keystore><private-key><public-key>","1","","0","2016-12-24 15:02:30","","2","1","1033581","","2016-12-24 15:02:30","2015-11-02 14:12:08",""
"54758001","how to work with private keys and public keys in react app","<p>I am building an app where I need to decrypt messages using private keys.  The messages are encrypted with public keys that are previously communicated.  My question is, in a react type app environment (or more generic web app environment) what is the best practices in working with public/private keys?  I don't really want to store keys on behalf of the user, or is this something that is done by web apps?  Do I ask them to submit the private key every time there is data to be decrypted?  Is there a way to access the os key store from a react app?  Any recommendation is greatly appreciated.</p>
","","124","<reactjs><private-key><public-key>","0","","0","2019-02-19 02:26:03","","0","","","","","2019-02-19 02:26:03",""
"49653232","How to sign and verify string using ssh key using java","<p>I know this issue may be duplicated somewhere else, but i wasted a lot of time to fix this issue.</p>

<p>I need to use third party API and as per their documentation i have to generate private/public key using the command <code>ssh-keygen -t rsa</code>, send to them the public key and for every request i must sign the request body using my private key</p>

<p>i found many code sample to read private/public key of formats like <code>pem</code> or <code>der</code>, but not the format generated using <code>ssh-keygen -t rsa</code></p>

<p>my private key now is </p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,07E3CD04C0D5E7AEC5BFB3660C389A79

iP+UVOT9UUma638HRLzyd9hLeZGbs2NxTakIWCB5Inpvd5+O4vcdjNhmV3zxSyDY
JpHlU8417Fyn3qHjHbG2Tj86qgFeexcZ83pjXxFU8JnXfqutSe6Zpa4sDuZYKve6
Xv2oxF64pVqEesH+C9XOkyYiWVqr09vpKBlIM2GcI2WqQwLuDYhj/AAWJhpKGVJu
+fwiQj7VS+tzBE1QW4Kva5xwEE4z/XZHkYMNDHUXBPeifsYXwkz8ZcXlcVZ+CAql
jwKh4ORXkBO/Ok2wva3dFfU7no2YSNIDhgHFGK6C9n5igbstYbTEPEH/YeSbqz1L
SucLiftfdvL9UdFb1/NQfcFhusNPHctGybvfAzttQEfSU/W5OYcN25SKF5pHUtHZ
Widu5M3JFCJ5Gw0P2sjANZVN/+8p0alT61dy6OqLckJmJfixpkvRQqdEP8ucUlTe
r+X5Fe2xH+cYh2MLq9IXxrK4g0sUZKoZw4AGKq24CfvD2K7UqHlXVO1hocyhlq+m
rRCVvRLJc7mpvpBtIQ6qXbr1chMa3zgkf6jW9thJ40jt4Giarj5s80fSC3Dk3lQN
ENV7nnhmd2uzz5yXx4sITnoDnItYDcJZk5pcOR4FAjUR2wRaLokae0pdEbS4heMa
KPOGOZGJNxs2CpwFUZL3CKIVMOmh14pzjZ4DNb9yzVhyd6wag5HlN9JNB1322eDO
lzfEnyki45wVGnB6ChthOnDRdgP5CUK+eaGqO8BSS+wttR25+MbZEwyljoQXc59h
XbGL5qqxpzrIT9+wDrEq8QNUaIg5OEXvBLa3NVOWSStgx+q5gqb5mzwJVdJiqSfL
xGG0CcyKuDPi6Vt/GKx5SGYi0gHFBs3QlYwzvvBxb5xKTc/meQSCM2ALXuJrFjBT
hXCBRBQ4F6i3pnyqkPJ36hsQ/mv6AWtsNhkMs2LrMjic0Fl5OhU6m1YA1nx8qz8k
ZQBhSWxLaTVwQsYnkH6SApPSo0t+FIzQfpnyYj4A9o6uK3dOiXPZndKqKx4mwqwM
uszlfMobhZUn2+ZcILXSZb1nNrwHKANRsp+I4j8bjG7qYKS5dfPaeIxRVQnpCkK+
SVznB0x8/EtIb8mLvuFtQap9KQ1S5UQxF3HhFoHdKjbDlEhMI3KPzURgYpis8K0y
M6jUbBnFQog9rSRCM79qE/cK6FX/QHrZt1Ijb9sPo54Y1TJQhbTempQ8N8SLnJFE
SY7W9wqOjyjrIKJ1NAWVSAHKu3ctUZHqWqijykkGa/t09BmtKoaHJ3RTJmQ7r/Z2
nxnARy9lDBSXgp8ErcYcf1eeRtCeRMZY+22F8gD7jJ/uKeEj6k8oUITt/dYSJWeA
LI9rPYydva8cNi0RtcB8Vgddi+GnhnGnhIXs3swk4AiVhBAPlAEfMdp3MjARrkJI
2UuMHStfht96aD3x3mL4fP0o6fJ5jSj/aCepwuR18xUHgtCCO8Sj81NBwPTSv654
XzIngNY3OPAOqo3RmS+xSnH8sCwE/wJxVu2sa/Ue8XszsjrzO4plYKh344MdR6g3
ISWyjPnFsdL1gBxoiPGfM/EF0bd4a1iGHDk4Ih4AcPgpgMwgN2VYDvGcxHEkQ0Y9
-----END RSA PRIVATE KEY-----
</code></pre>

<p>my public key</p>

<pre><code>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDZ98gmTkAoteabP96SmMDWAsPYIj5tV4iovMC9IEeWtiV1DbOIYVYpp27YM2DezoEuBwbccG9+A2wygyYKAVJurfmQTTL4h2WxJ5UIRJtwKrc2UKZNA6amUfIEcQHt0qJeTk6t5Havte2eTU3P6p15J7sHonLdeVBqybjeUMTOc8g41uUtTtmgTSp3BORkY/qwYzC7bICWZuuoklathRgj0CATkfkz25kggV/cNiWo8Ngr2mM8qB3EZxidF6FYwGROYRFq9jPfn1K3EvgOWWsPeHwd/bJn109sTqaLY5TsKuatxZAE+3CHNoQsEGaAVtEz505Oa8IRJYp9LERuBHx1 melad@pcwrk005.bovc.dk
</code></pre>

<p>how to read these files using java and <code>sign,verify</code> strings using them </p>
","","122","<java><ssh><rsa><private-key><public-key>","2","","0","2018-04-04 14:09:19","","0","0","","","","2018-04-04 14:09:19",""
"48228077","How to create private key from SSL certificate?","<p>I want to create private for ssl certificate which is in CER format. I have CER format certificate and PKCS #7 certificate with that.</p>

<p>are private key available on-server only or do we get them  with certificate separately? 
 i am working with Apache on windows </p>
","<p>Based on your description you have only the certificate. This certificate contains the public key. You cannot create a private key from it because of how <a href=""https://en.wikipedia.org/wiki/Public-key_cryptography"" rel=""nofollow noreferrer"">Public Key Cryptography</a> works. </p>

<p>If you could create the private key from any certificate you could essentially authenticate yourself as an arbitrary server on the internet and man in the middle attacks would be easy. Thus, it is good that you cannot get a private key from a certificate.</p>
","122","<windows><apache><ssl><certificate><private-key>","0","3","1","2018-01-12 15:03:26","","0","","","","","2018-01-12 14:16:49",""
"50880677","How can I create an acceptable private key file for WinSCP assembly to authenticate with?","<p>I'm trying to use the WinSCP assembly to upload to our FTP server. We have a common private key stored in our DB that we retrieve and use for authentication (this is currently working for our Java upload usith <code>JSch</code>). However WinSCP needs a file path name.</p>

<p>I'm trying to write our private key to a file for WinSCP to take for authentication but I'm getting the following error:</p>

<blockquote>
  <p>""C:\[..path..].\key.txt (not a recognised key file format)""</p>
</blockquote>

<p><strong>Upload Code:</strong></p>

<pre><code>String host = token.hostName;
String user = token.userID;
String sshKey = token.sshKey;

//write key to temp file
String keyFile = AppDomain.CurrentDomain.BaseDirectory+@"".\key.txt"";
FileStream temp = new FileStream(keyFile, FileMode.Create);
temp.Write(Encoding.ASCII.GetBytes(sshKey), 0 , 0);
temp.Close();

try {
    // Setup session options
    SessionOptions sessionOptions = new SessionOptions {
        Protocol = Protocol.Sftp,
        HostName = host,
        UserName = user,
        SshPrivateKeyPath = keyFile,
        GiveUpSecurityAndAcceptAnySshHostKey = true
    };

    using (Session session = new Session()) {
        // Connect
        session.Open(sessionOptions);
        session.DisableVersionCheck = true;

        // Upload files
        TransferOptions transferOptions = new TransferOptions();
        transferOptions.TransferMode = TransferMode.Binary;

        TransferOperationResult transferResult;
        transferResult = session.PutFiles(@resultsFolder+""*"", depthDir, false, transferOptions);

        // Throw on any error
        transferResult.Check();

        // Print results
        foreach (TransferEventArgs transfer in transferResult.Transfers) {
            Console.WriteLine(""Upload of {0} succeeded"", transfer.FileName);
        }
    }               
} catch (Exception e) {
    Console.WriteLine(""Error: {0}"", e);
} finally {
    // delete file with key
    File.Delete(keyFile);
}
</code></pre>
","<p>If I am assuming correctly you will need to adjust your code from this </p>

<pre><code>String keyFile = AppDomain.CurrentDomain.BaseDirectory+@"".\key.txt"";
</code></pre>

<p>to this </p>

<pre><code>var keyFilePath = $""{AppDomain.CurrentDomain.BaseDirectory} \\key.txt"";
var keyText = File.ReadAllText(keyFilePath);
</code></pre>

<p>I have split it across two variables here so that you have a clear understanding, but you can do it all in the one line. </p>
","122","<c#><private-key><winscp><winscp-net>","1","0","2","2019-09-18 13:46:53","","4","1","","","","2018-06-15 18:04:56",""
"50880677","How can I create an acceptable private key file for WinSCP assembly to authenticate with?","<p>I'm trying to use the WinSCP assembly to upload to our FTP server. We have a common private key stored in our DB that we retrieve and use for authentication (this is currently working for our Java upload usith <code>JSch</code>). However WinSCP needs a file path name.</p>

<p>I'm trying to write our private key to a file for WinSCP to take for authentication but I'm getting the following error:</p>

<blockquote>
  <p>""C:\[..path..].\key.txt (not a recognised key file format)""</p>
</blockquote>

<p><strong>Upload Code:</strong></p>

<pre><code>String host = token.hostName;
String user = token.userID;
String sshKey = token.sshKey;

//write key to temp file
String keyFile = AppDomain.CurrentDomain.BaseDirectory+@"".\key.txt"";
FileStream temp = new FileStream(keyFile, FileMode.Create);
temp.Write(Encoding.ASCII.GetBytes(sshKey), 0 , 0);
temp.Close();

try {
    // Setup session options
    SessionOptions sessionOptions = new SessionOptions {
        Protocol = Protocol.Sftp,
        HostName = host,
        UserName = user,
        SshPrivateKeyPath = keyFile,
        GiveUpSecurityAndAcceptAnySshHostKey = true
    };

    using (Session session = new Session()) {
        // Connect
        session.Open(sessionOptions);
        session.DisableVersionCheck = true;

        // Upload files
        TransferOptions transferOptions = new TransferOptions();
        transferOptions.TransferMode = TransferMode.Binary;

        TransferOperationResult transferResult;
        transferResult = session.PutFiles(@resultsFolder+""*"", depthDir, false, transferOptions);

        // Throw on any error
        transferResult.Check();

        // Print results
        foreach (TransferEventArgs transfer in transferResult.Transfers) {
            Console.WriteLine(""Upload of {0} succeeded"", transfer.FileName);
        }
    }               
} catch (Exception e) {
    Console.WriteLine(""Error: {0}"", e);
} finally {
    // delete file with key
    File.Delete(keyFile);
}
</code></pre>
","<p>It's a bit late but your winscp code works. I just needed to convert my private key to PuTTY standard. To do that just convert your key by using</p>

<p>winscp.exe /keygen oldformat.key /output=newformat.key</p>

<p>You can use PuTTY but I found winscp much simpler as you already have it.</p>
","122","<c#><private-key><winscp><winscp-net>","1","1","2","2019-09-18 13:46:53","","4","1","","","","2018-06-15 18:04:56",""
"9957562","openssl phishing : V claims to be A","<p>there are several components of my application, needs their communication secure in the sense Origin Verified. these components cannot share a common secret. So I have to opt for asymmetric key encryption. assuming I've two components <code>A</code> and <code>B</code> A sends some data <code>F</code> to <code>B</code> and <code>B</code> has to verify that it really came from <code>A</code></p>

<p><code>A</code> generates digest <code>H</code> of <code>F</code> with its private Key<br />
<code>A</code> attaches <code>A_pub</code>, <code>H</code> to its request Parameters, sends <code>F</code> and declares origin/sender as <code>A</code> <br />
<code>B</code> verifies the digest <code>H</code> with the <code>A_pub</code> provided against <code>F</code></p>

<p>apparently it looks Okay But if some other component <code>V</code> does the same with <code>V_pub</code> and claims itself as <code>A</code>, <code>B</code> still thinks the request came from <code>A</code> as this <code>H</code> is made with <code>V_prv</code> openssl verifies Okay.</p>

<p>I want to give protection against this attack of <code>V</code></p>

<p>I am using <code>ecparam</code> <code>secp112r1</code> to minimize key length. and keys are repeatedly changed.</p>

<p>-- <strong>EDIT</strong> --</p>

<p><code>A</code>, <code>B</code> and <code>V</code> are application components identified by unique <code>URI</code>. Its currently intended to constraint secure page flow. e.g. you can assume <code>A</code>, <code>B</code>, <code>V</code> be urls What I want is Only <code>A</code> can procced to <code>B</code> and only <code>B</code> can proceed to <code>C</code> .... and I don't want to maintain a global/application wide session for that. so If <code>B</code> can just verify the origin of this link based on the special parameters <code>A</code> have passed to it in a state/session-less manner. and the more generic it can be the more reusable it will be to implement in other scenarios too.</p>

<p>Once I thought to maintain a checksums of <code>A_pub</code> in a trusted global storage. however I am afraid wouldn't that be an over engineering ?</p>

<p>another way comes in my mind is to query back the origin url regarding the public key. However I want to avoid that.</p>
","<p>This technique cannot verify the identity of the sender, only that the keys are a matching pair.  </p>

<p>Typically, <code>B</code> would already possess some piece of trusted information that it can use to validate <code>A</code>'s identity.  The information is generally a copy of <code>A_pub</code> that it had previously validated, or that has been signed by a trusted third party, in which case <code>B</code> must have access to that third party's public key.</p>

<p>Without this additional information, <code>B</code> cannot verify the identity of <code>A</code>.</p>
","120","<openssl><public-key-encryption><private-key><encryption-asymmetric><digest>","0","0","1","2012-04-01 08:31:10","","2","","256007","","2012-04-01 08:31:10","2012-03-31 16:14:44",""
"51366793",".Net SFTP Public/Private Key Authentication","<p>Looking for some insight into how I could implement my own public key authentication method in .Net. I'm using CompleteFTP Server which does handle this type of authentication but requires manual intervention. I'm extending an API to handle the authentication as part of an automated process</p>
","<p>My suggestion (as I did exactly this on a project a couple of months ago), would be to shell out to the OS/command line tools to do this.  </p>

<p>It's a bit of a pain to parse the output of the tools, but as it's a fairly limited set of results you need to handle, not impossible.</p>
","118","<c#><.net><sftp><private-key><public-key>","-1","0","1","2018-07-16 17:44:01","","1","","","","","2018-07-16 17:01:37",""
"55925084","Private Key in RequestContext.ClientCertificate always NULL","<p>We like to implement the authentication by certificate on our Web API Application which is sitting on our IIS server. </p>

<p>Our client just gave us their private key and they will access our Web API with SSL Client Certificate which included their private key in PEM format. We need to extract the private key from the SSL Client Certificate which included on Web API request and check whether it matched with the private key provided by them.</p>

<p>I implemented the code below</p>

<pre><code>        string fileLocation = @""E:\\pem_file_in computer.pem"";

        string privateKeyFromFile = System.IO.File.ReadAllText(@""E:\\private_key_file.key"");

        StreamReader sr = new StreamReader(fileLocation);

        PemReader pr = new PemReader(sr);

        AsymmetricCipherKeyPair KeyPair = (AsymmetricCipherKeyPair)pr.ReadObject();

        var writer = new StringWriter();
        var pemWriter = new PemWriter(writer);
        pemWriter.WriteObject(KeyPair.Private);

        string extractedKey = writer.ToString();

        if (extractedKey == privateKeyFromFile))
            Console.Write(""matched"");
        else
            Console.Write(""not matched"");
</code></pre>

<p>And <strong>it works :)</strong> </p>

<p>But, when I tried to do the same things on Web API, it does not work. The private key which we tried to extract, <strong>it is always NULL</strong>. The code is exactly the same as above and the <strong>ONLY</strong> difference for below is the PEM is sent via Web API. 
Note: We tried to send the PEM via API tool (Paw / Postman)</p>

<p>The code for Web API to extract the private key as below:</p>

<pre><code>        X509Certificate2 clientCertInRequest = RequestContext.ClientCertificate; 

        StreamReader sr = new StreamReader(new MemoryStream(clientCertInRequest.RawData));

        PemReader pr = new PemReader(sr);

        AsymmetricCipherKeyPair KeyPair = (AsymmetricCipherKeyPair)pr.ReadObject();

        var writer = new StringWriter();
        var pemWriter = new PemWriter(writer);
        pemWriter.WriteObject(KeyPair.Private);

        string extractedKey = writer.ToString();

        if (extractedKey == privateKeyFromFile))
            Console.Write(""matched"");
        else
            Console.Write(""not matched"");
</code></pre>

<p>Any idea?</p>
","","115","<c#><asp.net-web-api><ssl-certificate><private-key><client-certificates>","0","","0","2019-04-30 16:20:16","","0","","","","","2019-04-30 16:20:16",""
"21675536","TortoiseGit - Change putty key for all remotes","<p>Just having a bit of a reshuffle whilst moving off my laptop onto a new Windows PC at work now that I have stopped being freelance and gone full time.</p>

<p>I can't seem to find anything, but is there a setting or something which will enable me to tell ToroiseGit to use my new private key for ALL my existing remotes?</p>
","<p>TortoiseGit -> Settings -> Git -> Remote</p>

<p>For each remote, enter putty key</p>
","115","<private-key><tortoisegit>","0","0","1","2014-03-17 13:05:19","","0","","","","","2014-02-10 11:09:34",""
"55260550","Parsing new openssh-key-v1 format using openssl libcrypto","<p>I need to parse an SSH private key <code>~/.ssh/id_rsa</code> with openssl (libcrypto) into a <code>EVP_PKEY*</code> or <code>RSA*</code> key. Until recently this file would be stored in standard PEM or PKCS1 format which is easy to parse. However openssh has switched to a new format which is more complicated.</p>

<p>The structure is <a href=""https://cvsweb.openbsd.org/src/usr.bin/ssh/PROTOCOL.key?annotate=HEAD"" rel=""nofollow noreferrer"">defined here</a> and PEM encoded it looks like this (generated with <code>ssh-keygen</code>)</p>

<pre><code>-----BEGIN OPENSSH PRIVATE KEY-----
b3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jdHIAAAAGYmNyeXB0AAAAGAAAABAnG3jyNb
SKSG19wHPhx2U1AAAAEAAAAAEAAAEXAAAAB3NzaC1yc2EAAAADAQABAAABAQDtmnNl2AFg
9faMuZ/U38tY3+pDrOa2yoiOLeXQI3044xNiMiGrRW03wzWsaNCcI8ZnEeSvzr2HUq0YFQ
QQ6MaQp8cZmoGkOSnwhLAscocZOaoZwoj85w2hybuSy9fc99FqKbJ201a0++2BhTw4Syhs
LT3AOs+Z0hHXZEVWAfBsOd4icLnChBdEAsIBzEObdGsZXHiOcVgvcbJ7UOuQCkiJV3RX+P
IvTzivPQ8IGmsgYUj5KSPjZg03/tr3ePItuFQZH2p85dQlbOLyhtMpx6M5ErCAesxuTN6z
kHKtfRNfYXoDOgd5EBIc9hLnmQtpn2EjfIk+yW+yTiv0pwNUhoeFAAAD0BHcM21NrYK7Pu
C4m79CfD3ZRMdKzG+hUqrV6bRC8qK/iTnt/E4GvEOIOqqoQMQp7PLRP5CkeWRp4Y0nmpsP
zoSlVLvpJ1o36pSSpF6ClmsviAXjujB4wqOp+vq9KqfQfJT+khq4u2EaKwzclpfwaUe2lT
t/UdUok4n8BGVZl6Hw3vF+a8XWpM3ZWxFJXNaQ1bklfYraKDR483I2KJX/hT1Y+Shrl7hd
faqfI8A71lV7qYwqyEMBgwsbNzDYUpICwAEGp00pbX7ahBgo3OIL8Ay1LTbVRyZqMZGGSy
Ay4+WD5cgzU1sb7Z7XnKeRdEWyYUezvzDLpwYsx5RjXIDECBOwbRexh0X0taJw9MIS1YtV
dXz+8PRelQSn7jMHTLa1ILhF95KQBBnqN8EAZEXPnX50b6tz1y7/U1PR/+OxaEGX960m25
2WoXfSRraA6lA2b28r4NT2/BWfYg+6RVu9AQOwdZNWs1fU4ZwnN3yf2w+xEJvvnrXFJrIv
Hy6riJOIB9kSFI314vqmipsMpm7eJK7S3TCi8O6npfkhKTsU1rK4MW+gYp3LKTa2/eUy9r
Rfdgg3dZfq4e51th/9g6SCfrLaDhqTVf7AThOSlmqIpW2A1+4WmuSqhplZhZV5QA0Dyg26
mPHMFTIKs6P2dzgqTkfFxpEici6BeTiSBuMjeKau2HI8r6VD8fcpkvcARPHncoZAdQbars
+e9FhyNMY+EVzun95FUjlbSAFCjGUN81/XPAd+PERTtg+Z1h+QEb1jlZO6l+L62SYXZQO7
jZa3euvFTUxh4GAuWMF4SM7HibTrnY3POD4y8pIWWFsS6xbDQPcy1BdgS4A4IeAXNFbFsX
U7xAwiA0QOnF2Qwc6rTIfR8KiDJ2pMPuSF3CsvuX1VuJZ4EvUFXImBAmet5ChXA2Gw2Gkf
vItgB70xjRVJUjqOE1FE8Qb61BWEvH9pQMIHt59ldrcnLycOFmBIvWiCLyEb5s+asMsqui
GoMowxdmaM+tkNsJIWFqKviaqHL51ZxzWfZ5C8RIrC1bBjCPdHd+T6iQifNS1vJhgEPuG/
iI9R2aFMdz69CVnWJzhtTEvJFsBNiM1rKTXXFm00rCZozKM6xVaiDodgL5s3FxVr17WTMH
FaFMCH7JNAJMCR7080IuABHFubE2UyeCV6WxUgDpeGzLGOLXmLlrpyB5DHbkuNa8OohIDm
qW5yZcK4RoN1Foi4+tAs7qCJQAJBKFmwTc+5y6mQnq9s9jHQqBbyweHmK8VTHwiRpHbBv/
BQ3FL3t8pTZxv6msYq0+PUUZ3L8+k=
-----END OPENSSH PRIVATE KEY-----
</code></pre>

<p>The first step is to parse the text with <code>PEM_read_bio</code> which will strip off the PEM header and base64-decode the data. But it is unclear how to parse the struct from the spec.</p>

<p>The first 15 bytes are fixed as <code>openssh-key-v1\0</code> but from there it is unclear.</p>
","<p>The simplest way to parse these is to avoid parsing them yourself, and instead use <code>ssh-keygen -p -m PEM -f ~/.ssh/id_rsa</code> to convert the key into PEM format, and then parse that using OpenSSL as per normal.</p>

<p>If you have a serious desire to get your hands dirty, though, the protocol description you linked to does, in fact, give you <em>most</em> of what you need to know.  The (crucial) pieces of missing information are:</p>

<ul>
<li>All integers are network byte order;</li>
<li><code>int</code> is 32 bits;</li>
<li>Most crucially, the <code>string</code> type is a length-value tuple, where <code>length</code> is a <code>uint32</code> indicating how many of the next octets make up the string; and</li>
<li>The formats of the various public key types (<code>ssh-dss</code>, <code>ssh-rsa</code>, <code>ecdsa-sha2-*</code>, etc) are documented in various RFCs that you can find referenced in the <a href=""https://www.iana.org/assignments/ssh-parameters/ssh-parameters.xhtml#ssh-parameters-19"" rel=""nofollow noreferrer"">IANA registry for SSH Public Key Algorithm Names</a>.</li>
</ul>

<p>Extrapolation of the private key portions of various key types is left as an exercise for the reader, because I haven't figured it out yet.  In the (near) future, my <a href=""https://rubygems.org/gems/openssl-additions"" rel=""nofollow noreferrer"">openssl-additions gem</a> will have a Ruby-based implementation of <a href=""https://github.com/pwnedkeys/openssl-additions/blob/master/lib/openssl/pkey.rb"" rel=""nofollow noreferrer"">SSH private key parsing</a>, because I need to figure it out for my own project, so you could take the parameter ordering from that.</p>
","114","<ssh><openssl><private-key><openssh><libcrypto>","0","0","1","2019-05-25 01:16:38","","0","","318752","","2019-03-20 12:21:26","2019-03-20 12:14:40",""
"5059180","When publishing official releases of open source .NET projects, should I use one signing key for all libraries, or one key per library?","<p>I have a few open source libraries on CodePlex, and I intend to publish more when I have them at a stable and useful state.</p>

<p>I add a development signing key to the projects repository so that anyone can build and use those libraries from source, but for the official release, I use a different key, one that I do not publish.</p>

<p>Question is this:</p>

<p><strong>Should I</strong></p>

<ol>
<li>Use a common key for all official releases I make of all my libraries? ie. library A and B would both be signed by the same private key, even though the libraries have nothing in common except the author (me)</li>
<li>Use a unique key for all libraries, ie. library A has its own key and library B has a different key</li>
</ol>

<p>I'm looking for definite reasons to do one or the other. If you have an opinion but not a hard reason for why that is, please leave a comment and I'll see if I should migrate it to Programmers.SE instead.</p>
","<p>If you have many signatures people will doubt your identity. </p>

<p>The key belongs to the publisher, not to any project/binary.</p>

<blockquote>
  <p>the libraries have nothing in common except the author </p>
</blockquote>

<p>Which is the deciding factor to use 1 key.</p>

<p>But that is the basic principle. If you want to express: This Project1.DLL is published by the Project1-Team you could use a key per library.  That would not add any value, but might be practical when you start to co-operate on projects with different sets of people. </p>
","113","<.net><open-source><private-key><assembly-signing>","1","2","1","2011-02-20 19:35:42","5059404","2","2","","","","2011-02-20 18:52:55",""
"39539543","send an asset with private key (colored coins, Colu SDK)","<p>In accordance with Colored Coins documentation I have sent an asset on <code>testnet</code> like this:</p>

<pre><code>var issuance_address = 'n2t19a46cBs2DdHs2sqfRwPGhoQjvqmefR';
var key = bitcoin.ECKey.makeRandom();
var wif = key.toWIF();
var to_address = key.pub.getAddress(bitcoin.networks.testnet).toString();
// to_address = 'mhLbuNgefJer5HFpq1UeW2PTq9RyttwghL'
console.log('new TESTNET address: ['+to_address+']');

var send_asset = {
    'from': [issuance_address],
    'to': [{
        'address': to_address,
        'amount': 5,
        'assetId': 'LKXjG9uMSFoDj2Z6NrEJ6nkcRGVtjUmC4zrtH'
    }]
};

colu.sendAsset(send_asset, function (err, body) {
        if (err){
            return console.error(err);
        }
        console.log('success',body);
}
</code></pre>

<p>And it works properly. But how can I transfer coins back from <code>to_address</code> to <code>issuance_address</code>?</p>

<p>I suppose it is possible with generated <code>WIF</code> private key for <code>to_address</code></p>

<pre><code>wif = 'Kyn7ihNLyTXKjWBAD99AY3LDJL4DeLapt4wWwFa4MMjirZe2QbEf'
</code></pre>

<p>What the code should be then for this purpose?</p>

<p>If I just replace the <code>issuance_address</code> with <code>to_address</code> it throws error:</p>

<pre><code>Addresss mhLbuNgefJer5HFpq1UeW2PTq9RyttwghL privateKey not found
</code></pre>

<p>How to use given private key (WIF?) for such transfer? I found nothing about this in documentation from both Colored Coins and Colu SDK.</p>
","<p>This error becoz u try to send to address that have different PrivateSeed or PrivateKey. </p>

<p>From Colu SDK document</p>

<blockquote>
  <p>since obviously we shouldn't be able to issue an asset on an address
  that we don't control.</p>
</blockquote>
","112","<private-key><bitcoin><blockchain><bitcoin-testnet>","0","0","1","2017-01-10 10:50:10","","1","","","","","2016-09-16 20:20:42",""
"43081393","Java SecretKeyFactory not availale","<p>I am trying to generate a private key with a password using a SecretKeyFactory and when I start the program I have a runtime exception that says algorithm not available. But in others PCs it works fine! Any help ? </p>

<pre><code>private static void generatePrivateKey(String pwd) {

    try {
        PBEKeySpec keySpec = new PBEKeySpec(pwd.toCharArray());
        SecretKeyFactory kf = SecretKeyFactory.getInstance(""PBEWithHmacSHA256AndAES_128"");
        PRIVATE_KEY = kf.generateSecret(keySpec);
    } catch (NoSuchAlgorithmException | InvalidKeySpecException e) {
        e.printStackTrace();
    }
}
</code></pre>

<p>Runtime exception:
<a href=""https://i.stack.imgur.com/Hdbfk.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Hdbfk.png"" alt=""enter image description here""></a></p>
","<p>There are multiple possibilities:</p>

<ol>
<li>May be the JRE has been modified</li>
<li>An additional crypto provider has been installed. As you don't specify the provider in your ScretKeyFactory creation you don't know which provider is used. In Oracle JRE the algorithm you want is provided by the SunJCE. hence the following should work: <code>SecretKeyFactory.getInstance(""PBEWithHmacSHA256AndAES_128"", ""SunJCE"");</code></li>
</ol>
","112","<java><security><private-key><java-security>","0","0","1","2017-03-29 09:57:49","","2","","","","","2017-03-28 22:59:12",""
"12567434","How to store a file on server?","<p>I have access to a SOAP web service, and I have a file for the Android app I am making that needs to be stored on my server. I do not need to upload a new one for every user of the app or anything; there is just the one file and it needs to be uploaded just once, but will need to be read by each user's app.</p>

<p>How do I add it to the web service? Do I need to contact the person who wrote the web service and have them add it in, or am I able to upload it on my own? If applicable, Android/Java code or links to tutorials would be appreciated.</p>
","<p>I think your question is quite loaded. You ask three different questions</p>

<p>1) How do I upload something to the server? Should I ask developer to modify it for that?</p>

<p>The answer is: The server should support accepting and storing a thing which you try to upload. If it's capable of that now, you don't need to server developer to add anything. If the server isn't capable, you will need to ask to provide some UI, API for this</p>

<p>2) How should I store securely P12 on my server</p>

<p>Do you want to protect this file against somebody who can legally access server or somebody who can hack the server?</p>

<p>P12 file is encrypted. So, it's not a matter of securely storing file itself, but rather who knows the password. So, the main question is should you upload the password, should only user know the password, should you upload hash of the password? It's hard to answer it without better understanding of what you are trying to do.</p>

<p>3) How to upload something to the server from Android?</p>

<p>I think  you may be interested to look at kSOAP (http://code.google.com/p/ksoap2-android/). It allows you to work with the server.</p>

<p>However, since you need it once, may be just FTP upload of the file will be ok for you?</p>

<p>I would recommend to edit your questions and describe what is the overall problem you are trying to solve.</p>
","112","<android><web-services><soap><webserver><private-key>","0","1","1","2012-09-24 15:26:28","12567966","0","","794243","","2012-09-24 15:26:28","2012-09-24 14:46:53",""
"55535775","How to wrap a RSA Key with AESWRAP mode","<p>I am suppose to wrap my RSA Private Key with AESWrap mode(following RFC 3394).
However I am getting exception saying ""length of the to be wrapped key should be multiples of 8 bytes"". I believe this is majorly because RSA PrivateKey is in DER format and hence the exception is being thrown. Please suggest how to resolve this.</p>

<pre><code>
    SecretKey swkKeySpec = new SecretKeySpec(KEK, 0, swkKey.length, ""AES"");///KEK is a 256 bit AES key used for wrapping.
    cipher = Cipher.getInstance(""AESWrap"", ""SunJCE"");
    cipher.init(Cipher.WRAP_MODE, swkKeySpec);

    byte[] key = keyAttributes.getPrivateKey() ///This returns private key in encoded format which is to be wrapped.
    KeyFactory factory = KeyFactory.getInstance(""RSA""); // throws NoSuchAlgorithmException
    PrivateKey privateKey  = factory.generatePrivate(new PKCS8EncodedKeySpec(privateKeyBytes));
    log.debug(""key.length: {}"", key.length); ///this gives 634.
    wrappedAppKey = cipher.wrap(privateKey); ///exception thrown at this point`
</code></pre>
","<p><a href=""https://tools.ietf.org/html/rfc5649"" rel=""nofollow noreferrer"">RFC-5649</a> (Advanced Encryption Standard (AES) Key Wrap with Padding Algorithm) has been published to handle cases for which the key material is not a multiple of 64 bits.</p>

<p><a href=""http://javadox.com/org.bouncycastle/bcprov-jdk15on/1.51/org/bouncycastle/crypto/engines/RFC5649WrapEngine.html"" rel=""nofollow noreferrer"">BouncyCastle</a>, a free Java library implementing many cryptographic algorithms, offers a wrap engine that supports the RFC-5649 key wrapping algorithm. Therefore, you may use this library to avoid the Java exception you encounter.</p>

<p>Note that what we commonly call <em>an RSA
 key of 2048 bits</em>, for instance, is not simply made of an array of 256 bytes. It is made of two prime numbers such that their product can be stored in a array of 256 bytes, it is also made of a private exponent that is lower than the aforementioned product. Depending on the way the private key material is stored in a file, some other public data may be encapsulated  in the file, such as the public exponent. So the private key material of an RSA key of 2048 bits may not be stored with 256 bytes.</p>
","112","<java><encryption><aes><rsa><private-key>","1","2","1","2019-04-08 20:35:21","","1","0","238704","","2019-04-05 15:16:01","2019-04-05 12:47:44",""
"53881606","How can i get the iphone Device Identity certificate's private key","<p>The problem has to do with a file on the iphone:
/private/var/root/Library/Lockdown/activation_records/activation_record.plist.
The plist file contain a deviceCertificate.</p>

<p>There are two files in the folder :/private/var/root/Library/Lockdown:
device_public_key.pem,
device_private_key.pem,</p>

<p>but they are not the key of the deviceCertificate.</p>

<p>where is the deviceCertificate's private key?
what dose device_public_key.pem use for?</p>

<p>Which kind person can help me? Thank you very mush!</p>
","","111","<ios><iphone><certificate><jailbreak><private-key>","0","","0","2018-12-21 08:44:17","","0","","","","","2018-12-21 08:44:17",""
"44904849","Identity server 4 .net core InvalidOperationException: RSA key does not have a private key","<p>i am using Identity server package to build custom Identity provider
when running the server project locally every things OK but when publishing in windows server 2008 R2 i get the below error message</p>

<p><a href=""https://i.stack.imgur.com/QKPkb.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/QKPkb.png"" alt=""enter image description here""></a></p>
","","109","<rsa><.net-core><windows-server-2008><private-key><identityserver4>","0","","0","2017-07-04 11:32:39","","3","","","","","2017-07-04 11:32:39",""
"21618941","SVN checkout to directory I don't own (via SSH)","<p>I'm using SVN+SSH to authenticate to my SVN server. I'm trying to checkout a repo on another server. The directory to which I want to checkout is not owned by my, so I wanted to <code>sudo</code> it up.</p>

<p>When I try <code>svn co svn+ssh://me@myserver.com/svn/MyRepo</code>, naturally, I can't write to the directory and the checkout fails.</p>

<p>When I try <code>sudo svn co svn+ssh://me@myserver.com/svn/MyRepo</code>, my SSH key can't seem to be accessed - I get the error: ""Permission denied (publickey)""</p>

<p>So I want to have sudo run as myself, yet give me extra privileges (I think). How do I do that? E.g. I need permission to write to the directory but also need to be able to access my SSH key.</p>
","<p>When you <code>sudo</code>, you try to authenticate himself on remote host not as current-local user (obviously) and thus - doesn't provide <em>needed</em> public key (ieven if can provide <em>any</em>)</p>

<p>I think, you have to re-read SVN Book, ""svnserve, a Custom Server"" chapter and <a href=""http://svnbook.red-bean.com/en/1.7/svn.serverconfig.svnserve.html#svn.serverconfig.svnserve.sshauth"" rel=""nofollow"">""Tunneling over SSH""</a> section most carefully, and create ""custom tunnel"", in which you (at least) will use your correct, predefined key: <code>ssh -i ...</code> in tunnel definition</p>
","108","<svn><ssh><sudo><private-key>","1","1","1","2014-02-07 05:25:04","21620002","1","","","","","2014-02-07 03:47:33",""
"34045480","Encryption game","<p>I would like to write a series of encrypted questions and answers. Everything is encrypted except the first question. The user of the game must guess the answer to the question, perform some encryption method using a public key, and if the answer they guessed when encrypted is the same as the encrypted answer then they got it right.</p>

<p>Here's the tricky part, when the user gets the right answer, they must also get the private key to decrypt the next question.   Is this possible or am I totally off base? </p>

<p>Ps I know that keys must be random</p>
","<p>From my point of view 2 comments:</p>

<blockquote>
  <p>perform some encryption method using a public key, and if the answer they guessed when encrypted is the same as the encrypted answer then they got it right.</p>
</blockquote>

<p>When you crypt something with a key (RSA) there are a part that is random so each time that you crypt a message can get a different value, so you have to check if there are in the library that you are going to use (openSSL?) to force this random part. </p>

<p>You can use a hashing algorithm (<strong>MD5, SHA1</strong>) that is a common way to achieve your goal</p>

<blockquote>
  <p>when the user gets the right answer, they must also get the private key to decrypt the next question</p>
</blockquote>

<p>I guess that you try that question are not accessible unless you answer the prior question right. So you need to keep a key as secret, so it must be crypted maybe you can use the answer as a key (depending of algorithm that you use to crypt)</p>
","107","<public-key-encryption><private-key>","-1","0","1","2017-03-10 21:43:14","34045854","1","","","","","2015-12-02 14:40:22",""
"11972761","Access client certificates installed on a device from within an application","<p>I want to encrypt some data (NSData for instance)in my iOS application using the certificate installed on the my iOS device.I may only need the private key to encrypt the hash but is there a way to grab the private key from the global keychain.Any help would be very much appreciated</p>
","<p>Best (in my opinion) you put the private key and certificate that you want to use on the keychain (or keychains of other 3rd party apps that share the same provisioning certificate). </p>

<p>As for the actual loading of the p12 we do use openssl (we did write a obj-c wrapper around it) to decode the .p12 that we send to the app.</p>
","106","<ios><certificate><private-key>","2","0","1","2012-10-06 14:21:45","","0","","","","","2012-08-15 15:57:48",""
"25425894","dnssec-keygen outputfile with DSA private key","<p>I've been trying to crack this for several days now and I don't seem to get it working.</p>

<p>Basically I got a .private file which is the result of the following command:</p>

<pre><code>dnssec-keygen -C -a DSA -b 1024 -n HOST -T KEY Hostmame
</code></pre>

<p>The file is in a certain format ( I removed the values for security reasons)</p>

<pre><code>Private-key-format: v1.2
Algorithm: 3 (DSA)
Prime(p):   $value
Subprime(q): $value
Base(g): $value
Private_value(x): $value
Public_value(y): $value
</code></pre>

<p>So my question is does anybody knows how to read this file and get a PrivateKey object form it to sign a message to send towards the secured DNS Server ?</p>

<p>I've tried several things already, but I don't seem to get the right decoding for the values...</p>

<p>things tried :
The readDSAPrivateKey method of this link on github: <a href=""https://github.com/bitsai/courses/blob/master/Network%20Security/A3/Honoroff-Tsai/src/DNSSEC.java"" rel=""nofollow"">https://github.com/bitsai/courses/blob/master/Network%20Security/A3/Honoroff-Tsai/src/DNSSEC.java</a></p>

<p>Also tried this one:</p>

<pre><code>ObjectInputStream keyIn = new ObjectInputStream(new FileInputStream(args[3]));
PrivateKey privkey = (PrivateKey) keyIn.readObject();
keyIn.close();
</code></pre>

<p>Any help or point outs would be appreciated...</p>
","<p>Seems the values are Encoded in Base64 Encoding.</p>

<p>The right way to decode is this :</p>

<pre><code>byte[] data = base64.fromString(val);
if (line.startsWith(""Prime(p): "")){
   p = new BigInteger(1, data);
}
</code></pre>

<p>as mentioned here:
<a href=""https://github.com/dblacka/jdnssec-tools/blob/master/src/com/verisignlabs/dnssec/security/DnsKeyConverter.java"" rel=""nofollow"">https://github.com/dblacka/jdnssec-tools/blob/master/src/com/verisignlabs/dnssec/security/DnsKeyConverter.java</a></p>
","106","<java><private-key><dsa><network-security><dnssec>","1","1","1","2015-07-25 07:41:18","25484954","0","","2548320","","2014-08-21 12:34:03","2014-08-21 12:03:10",""
"47059705","Swift 3 - Heimdall Public key Padding","<p>i am using Heimdall framework for creating and using public keys from:</p>

<p><a href=""https://github.com/henrinormak/Heimdall"" rel=""nofollow noreferrer"">https://github.com/henrinormak/Heimdall</a></p>

<p>Now i got the requirement to use 1024 bit RSA zero padding for my keys and i have absolutely no idea how to set the padding during:</p>

<pre><code>self.heimdall = Heimdall(publicTag: tag, privateTag: tag, keySize: 1024)
</code></pre>

<p>Could anybody help out here?</p>

<p>Thanks and Greetings!</p>
","","105","<swift><rsa><padding><private-key><public-key>","2","","0","2017-11-01 16:44:38","","0","","","","","2017-11-01 16:44:38",""
"48474642","how to convert this java pkcs7gen data signing method to javascript?","<p>I am confused with how to convert this java code to javascript this is for signing data. i am confused with what this bouncycastle and i havent found any replacement for this code in javascript nodejs.</p>

<p>It is working fine in java but this process of creating this is to sign my data and the pass it to 3rd party API but my system is in javascript but they have this method of signing the data which i am not able to find the replacement.</p>

<pre><code>package pkcs7gen;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.security.KeyStore;
import java.security.PrivateKey;
import java.security.Security;
import java.security.cert.CertStore;
import java.security.cert.Certificate;
import java.security.cert.CollectionCertStoreParameters;
import java.security.cert.X509Certificate;
import java.util.ArrayList;
import java.util.Enumeration;

import org.bouncycastle.cms.CMSProcessableByteArray;
import org.bouncycastle.cms.CMSSignedData;
import org.bouncycastle.cms.CMSSignedDataGenerator;
import org.bouncycastle.cms.CMSTypedData;
import org.bouncycastle.util.encoders.Base64;
import org.springframework.stereotype.Service;

@Service
public class Pkcs7gen {


    final String SIGNATUREALGO = ""SHA1withRSA"";

    byte[] signPkcs7(final byte[] content, final CMSSignedDataGenerator generator) throws Exception {

        CMSTypedData cmsdata = new CMSProcessableByteArray(content);
        CMSSignedData signeddata = generator.generate(cmsdata, true);
        return signeddata.getEncoded();
    }

    public static void main(String[] args) {
        try {
            String data = getSignature(args[0]);
            System.out.println(data);
        }
        catch (Exception exc) {
            // TODO: handle exception
        }
    }

    public static String getSignature (String content) throws Exception{

        KeyStore keystore = KeyStore.getInstance(""jks"");
        InputStream input = new FileInputStream(""./keystore.jks"");
        try {
            char[] password= ""password"".toCharArray();
            keystore.load(input, password);
        } catch (IOException e) {
        } finally {


        Enumeration e = keystore.aliases();
        String alias = """";

        if(e!=null)
        {
            while (e.hasMoreElements())
            {
                String  n = (String)e.nextElement();
                if (keystore.isKeyEntry(n))
                {
                    alias = n;
                }
            }
        }
        PrivateKey privateKey=(PrivateKey) keystore.getKey(alias, ""password"".toCharArray());

        X509Certificate myPubCert=(X509Certificate) keystore.getCertificate(alias);
        byte[] dataToSign=content.getBytes();
        CMSSignedDataGenerator sgen = new CMSSignedDataGenerator();
        Security.addProvider(new org.bouncycastle.jce.provider.BouncyCastleProvider ());
        sgen.addSigner(privateKey, myPubCert,CMSSignedDataGenerator.DIGEST_SHA1);
        Certificate[] certChain =keystore.getCertificateChain(alias);
        ArrayList certList = new ArrayList();
        CertStore certs = null;
        for (int i=0; i &lt; certChain.length; i++)
            certList.add(certChain[i]);
        sgen.addCertificatesAndCRLs(CertStore.getInstance(""Collection"", new CollectionCertStoreParameters(certList), ""BC""));
        CMSSignedData csd = sgen.generate(new CMSProcessableByteArray(dataToSign),true, ""BC"");
        byte[] signedData = csd.getEncoded();
        byte[] signedData64 = Base64.encode(signedData);
        return new String(signedData64);
    }

}
}
</code></pre>
","","105","<rsa><sha1><private-key><sign><pkcs#7>","0","","0","2018-01-27 10:03:26","","3","","","","","2018-01-27 10:03:26",""
"47378821","How do I use an already given private key as a private key resource in PHP?","<p>I am working on integrating the Walmart API. They require a digital signature with each API call. My code seems to be working up until I have to deal with the private key. Here is my function to generate a digital signature:</p>

<pre><code>//Most of this code is from a Walmart API sample
function _GetWalmartAuthSignature($URL, $RequestMethod, $TimeStamp, $ConsumerId) {
    $WalmartPrivateKey = {given PEM formatted string};
    //Construct the authentication data we need to sign
    $AuthData = $ConsumerId.""\n"";
    $AuthData .= $URL.""\n"";
    $AuthData .= $RequestMethod.""\n"";
    $AuthData .= $TimeStamp.""\n"";

//THIS METHOD IS RETURNING FALSE!!!!
$PrivateKey = openssl_pkey_get_private($WalmartPrivateKey);

//Sign the data using sha256 hash
defined(""OPENSSL_ALGO_SHA256"") ? $Hash = OPENSSL_ALGO_SHA256 : $Hash = ""sha256"";
if (!openssl_sign($AuthData, $Signature, $privKey, $Hash)) {
    return null;
}

//Encode the signature and return
return base64_encode($Signature);
</code></pre>

<p>}</p>

<p>The openssl_pkey_get_private() func keeps returning false. So then my openssl_sign() func gives me the error: openssl_sign(): supplied key param cannot be coerced into a private key </p>

<p>I tried first creating a new key resource, using </p>

<pre><code>$res = openssl_pkey_new(); 
openssl_pkey_export($res, $privKey);
</code></pre>

<p>and then saving my $WalmartPrivateKey to $privKey, but I got the same error. I tried using openssl_get_private_key(), but again- nothing worked.</p>

<p>I only know the very basics of public/private key encryption, and this is my first time using these functions. </p>

<p>Can anyone help me out? </p>
","<p>I had a similar issue, and it was because the PEM format was wrong. Make sure you have the correct beginning and ending markers:
""-----BEGIN PRIVATE KEY-----"", ""-----END PRIVATE KEY-----"".
Both markers must have exactly 5 dashes before and after the words, and the words must be all caps.
Good luck!</p>
","104","<php><encryption><public-key-encryption><private-key><php-openssl>","0","0","1","2018-01-21 10:03:38","48365665","0","","","","","2017-11-19 15:56:27",""
"51211096","How to use svn+ssh in PhpStorm Linux?","<p>I'm not able to update my SVN project, which is only accessible via SSH using private key.</p>

<p>In my project settings (Version Control > Subversion > SSH) <strong><code>Subversion config</code></strong> is enabled and I entered <strong><code>ssh -i /home/user/privateKey -p 222</code></strong></p>

<p>This is not going to work, I'm always prompted for username and password. I can connect via <strong><code>ssh host</code></strong> and I'm connected.</p>

<p>So what do I have to to now? I read something about setting up the <code>SVN_SSH</code> Variable but I found only help for this when using windows... (see <a href=""https://stackoverflow.com/questions/44911174/how-to-use-svnssh-in-intellij-windows"">this question</a>).</p>

<p>In <a href=""https://youtrack.jetbrains.com/issue/IDEA-118615"" rel=""nofollow noreferrer"">this post</a> the <code>svn config</code> file is mentioned. There I have this line</p>

<p><code>ssh = ssh -i /home/user/privateKey -p 222</code></p>

<p>But it still not working.</p>
","<p>Works for me with the described settings - <a href=""https://i.stack.imgur.com/Z2wvu.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Z2wvu.png"" alt=""enter image description here""></a></p>

<p>Make sure Interactive mode is enabled and URL you are connecting to includes username.</p>

<p><a href=""https://i.stack.imgur.com/vLXXv.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vLXXv.png"" alt=""enter image description here""></a></p>
","103","<svn><ssh><phpstorm><private-key>","1","0","1","2018-07-09 14:41:44","","0","","783119","","2018-07-06 13:35:47","2018-07-06 13:06:18",""
"52680043","Cant authenticate to remote vps using ssh in gitlab","<p>I connected before to vps using below gitlab ci/cd configuration. But in recent server I can't.</p>

<p>my .yml file is like below:</p>

<pre><code>deploy:
  environment:
    name: production
    url: http://erfantahvieh.com/
  image: php:7.1.1
  stage: deploy
  only:
    - master
  before_script:
    - apt-get update -yqq
    - 'which ssh-agent || ( apt-get update -y &amp;&amp; apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - echo -e ""$SSH_PRIVATE_KEY"" &gt; ~/.ssh/id_rsa
    - chmod 700 ~/.ssh
    - chmod 700 ~/.ssh/id_rsa
    - eval ""$(ssh-agent -s)""
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H $HOST &gt;&gt; ~/.ssh/known_hosts
    - '[[ -f /.dockerenv ]] &amp;&amp; echo -e ""Host *\n\tStrictHostKeyChecking no\n\n"" &gt; ~/.ssh/config'

  script:
    - ssh $USER@$HOST ""ls -la""
</code></pre>

<p>Know when I run my pipe line the output is like below:</p>

<pre><code>$ mkdir -p ~/.ssh
$ echo -e ""$SSH_PRIVATE_KEY"" &gt; ~/.ssh/id_rsa
$ chmod 700 ~/.ssh
$ chmod 700 ~/.ssh/id_rsa
$ eval ""$(ssh-agent -s)""
Agent pid 201
$ ssh-add ~/.ssh/id_rsa
Identity added: /root/.ssh/id_rsa (rsa w/o comment)
$ ssh-keyscan -H $HOST &gt;&gt; ~/.ssh/known_hosts
# xxx.xxx.xxx.xxx SSH-2.0-OpenSSH_7.4
# xxx.xxx.xxx.xxx SSH-2.0-OpenSSH_7.4
# xxx.xxx.xxx.xxx SSH-2.0-OpenSSH_7.4
$ [[ -f /.dockerenv ]] &amp;&amp; echo -e ""Host *\n\tStrictHostKeyChecking no\n\n"" &gt; ~/.ssh/config
$ ssh $USER@$HOST ""ls -la""
Permission denied, please try again.
Permission denied, please try again.
Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).
ERROR: Job failed: exit code 1
</code></pre>

<p>What is wrong?
Why I connected before by exactly same code but now I can't?
Is there any thing that I missed?</p>

<p>Note: I create ssh private key in my vps and put it in secret var in
gitlab ci/cd settings like $HOST and $USER.</p>
","<p>The problem happen because you should have <code>authorized_keys</code> file in your <code>.ssh</code> folder to let other machines to login you server using <code>ssh private key</code>.</p>

<p>You can create this file if there isn't by below commands.</p>

<pre><code>cd ~/.ss
cp id_rsa.pub authorized_keys
systmctl restart sshd
</code></pre>
","102","<ssh><gitlab><gitlab-ci><vps><private-key>","0","0","1","2018-10-19 10:34:52","52890641","0","","13317","","2018-10-06 22:23:19","2018-10-06 14:30:11",""
"41119987","Sign document using RSA","<p>I haven't done anything similar before and after reading about this I'm still not sure on how to progress.</p>

<p>I have a RSA private key which is protected using a password, stored as text in the local database, and this is my fist problem, how to get the orginal RSA private key.</p>

<p>The second part, relates to signing a document. Basically I have the following method signature which I have to implement:</p>

<pre><code>string GenerateDocumentSignature(string privateKey, string password, string documentId)
</code></pre>

<p>So within this methods I will have to reverse the private key and thena apply a RSA encryption.</p>

<p>Can you guys shed some light on how to archive this? Thanks</p>
","<p>I was able to get it working using BouncyCastle:</p>

<pre><code>public class SignDocsProvider : ISignDocsProvider
{
    public string GenerateSignature(string privateKey, string password, string documentId)
    {
        var keyPair = ReadPrivateKey(privateKey, password);
        var sha1Digest = new Sha1Digest();
        var rsaDigestSigner = new RsaDigestSigner(sha1Digest);

        rsaDigestSigner.Init(true, keyPair);

        var documentIdToSign = Encoding.ASCII.GetBytes(documentId);

        rsaDigestSigner.BlockUpdate(documentIdToSign, 0, documentIdToSign.Length);

        return Convert.ToBase64String(rsaDigestSigner.GenerateSignature());
    }

    private static AsymmetricKeyParameter ReadPrivateKey(string privateKey, string password)
    {
        AsymmetricCipherKeyPair keyPair;

        using (var reader = new StringReader(privateKey))
            keyPair = (AsymmetricCipherKeyPair)new PemReader(reader, new PasswordFinder(password)).ReadObject();

        return keyPair.Private;
    }
}

internal class PasswordFinder : IPasswordFinder
{
    private readonly string _password;


    public PasswordFinder(string password)
    {
        _password = password;
    }


    public char[] GetPassword()
    {
        return _password.ToCharArray();
    }
}
</code></pre>
","102","<c#><encryption><rsa><sha1><private-key>","0","1","1","2016-12-13 17:11:16","41126219","11","","1319512","","2016-12-13 17:11:16","2016-12-13 11:27:57",""
"56649410","Is it possible to sign signature to HEX?","<p>I am trying to create a digital signature. when i console log this signature i get weird characters like this : </p>

<p><code>1��N�U]*������gڇ��Xр��ӶhR���1��q</code></p>

<p>My friend is making the backend to check this digital signature only his signatures are hexadecimal. His signature looks like:</p>

<p><code>3BFC368C044C932FB62746765A84F3C3ABE7913CC8FDDB32DDF94607D99BE754D8761FAC1E9314B80E1E5EB14D936E137CB44954F245E1D38A6F4FDC80DB00B5D953DDF0A9E533FADD574F116DDA36AF517217753AA98F284BE946739641EE26933DC8E72B10CAA0D75984D5B1561A3B84815D1BFC9910F2316E0A0773F2CFE9F139D7C9A5D0CE45256055A63A80BDE6B5DF7F433AFE803E251E7F19964F93F008A7B7AA4A488BD4FB4968AE82D1D6DF6EBB2DA000F6F798808888D040EC84FB285095387EB8AA9397CB2FAC0248D2D5277386432D99E55AAAD5C3E79048C64713A695B575FD89D3B4218FA784F2116A80B359D4FF62F0391F1EFAC7968DAAA</code></p>

<p>Is it possible to Sign a signature in java  as a hexadecimal?</p>

<p>Android:</p>

<pre><code>            KeyFactory kf = KeyFactory.getInstance(""RSA"");
            PrivateKey privKey = kf.generatePrivate(keySpec);
            System.out.println(privKey);
            Signature signer = Signature.getInstance(""SHA256withRSA"");
            signer.initSign(privKey);
            signer.update(hash.getBytes());
            byte[] signature = signer.sign();
            String encryptHash = new String(signature);
</code></pre>
","<p>You have an array of Byte, you need to convert each byte to their hexadecimal representation, you can do something like:</p>

<pre><code>byte[] signature = signer.sign();
StringBuilder hexBuilder = new StringBuilder();
for(b: signature){
    hexBuilder.append(String.format(""%02x"", b));
}
String hexSignature = hexBuilder.toString();
</code></pre>
","101","<java><android><encryption><hex><private-key>","1","1","1","2019-06-18 12:54:47","56649659","1","","","","","2019-06-18 12:40:21",""
"51124465","Wrong RSA PrivateKey KeyStore","<p>My app generates a <code>KeyPair</code> when it's opened. I can encrypt text with the <code>PublicKey</code> but when I try to decrypt it with the <code>PrivateKey</code> it throws <code>InvalidKeyException</code>.</p>

<p>Some <code>Log.v</code> debug:</p>

<pre><code>(...) V/Aliases: The public key created is [android.security.keystore.AndroidKeyStoreRSAPublicKey@1840131a]
(...) V/Aliases: The private key created is [android.security.keystore.AndroidKeyStoreRSAPrivateKey@37ad0430]
(...) V/Aliases: The public key used is [android.security.keystore.AndroidKeyStoreRSAPublicKey@1840131a]
(...) V/Aliases: The private key used is [android.security.keystore.AndroidKeyStoreRSAPrivateKey@37ad0430]
(...) V/Aliases: The private key [android.security.keystore.AndroidKeyStoreRSAPrivateKey@37ad0430] is incorrect
</code></pre>

<p><code>KeyPair</code> generation:</p>

<pre><code>try {
    //Load KeyStore  
    keystore = KeyStore.getInstance(""AndroidKeyStore"");
    keystore.load(null);

} catch (KeyStoreException | IOException | NoSuchAlgorithmException | CertificateException e) {
        e.printStackTrace();
    }

    //KeyPair generation
    KeyPairGenerator kpg = null;
    try {
        kpg = KeyPairGenerator.getInstance(""RSA"", ""AndroidKeyStore"");
        kpg.initialize(new KeyGenParameterSpec.Builder(""Test"",KeyProperties.PURPOSE_DECRYPT | KeyProperties.PURPOSE_ENCRYPT | KeyProperties.PURPOSE_SIGN)
                .setDigests(KeyProperties.DIGEST_SHA256, KeyProperties.DIGEST_SHA512)
                .build());
        kp = kpg.generateKeyPair();
        Log.v(""Aliases"", ""The public key created is ["" + kp.getPublic() + ""]"");
        Log.v(""Aliases"", ""The private key created is ["" + kp.getPrivate()+ ""]"");

    } catch (NoSuchAlgorithmException | NoSuchProviderException | InvalidAlgorithmParameterException e) {
        e.printStackTrace();
    }
</code></pre>

<p><code>Encryption</code> function:</p>

<pre><code>//Removed try/catch
KeyStore.PrivateKeyEntry privateKeyEntry = (KeyStore.PrivateKeyEntry) keystore.getEntry(""Test"", null);
PublicKey publicKey = privateKeyEntry.getCertificate().getPublicKey();

Log.v(""Aliases"", ""The public key used is ["" + publicKey + ""]"");

Cipher cipher = Cipher.getInstance(""RSA"");
cipher.init(Cipher.ENCRYPT_MODE, publicKey);
[] bytes = cipher.doFinal(edittext.getText().toString().getBytes());
edittext.setText(Base64.encodeToString(bytes, Base64.DEFAULT));
</code></pre>

<p><code>Decryption</code> function:</p>

<pre><code>//Removed try/catch
KeyStore.PrivateKeyEntry privateKeyEntry = (KeyStore.PrivateKeyEntry) keystore.getEntry(""Test"", null);
PrivateKey privateKey = privateKeyEntry.getPrivateKey();

Log.v(""Aliases"", ""The private key used is ["" + privateKey + ""]"");

Cipher cipher = Cipher.getInstance(""RSA"");
cipher.init(Cipher.DECRYPT_MODE, privateKey);
String decrypted = new String(cipher.doFinal(Base64.decode(edittext.getText().toString(), Base64.DEFAULT)));
edittext.setText(decrypted);

//Removed the ""try"" part. This gets executed when cipher.init returns InvalidKeyException
catch (InvalidKeyException e) {
            KeyStore.PrivateKeyEntry privateKeyEntry = null;
            privateKeyEntry = (KeyStore.PrivateKeyEntry) keystore.getEntry(""Test"", null);
            PrivateKey privateKey = privateKeyEntry.getPrivateKey();
            Log.v(""Aliases"", ""The private key ["" + privateKey + ""] is incorrect"");
            e.printStackTrace();
}
</code></pre>
","<p>Don't do this:</p>

<pre><code>Cipher cipher = Cipher.getInstance(""RSA"");
</code></pre>

<p>Always specify the full <em>""algorithm/mode/padding""</em> specification. For example,</p>

<pre><code>Cipher cipher = Cipher.getInstance(""RSA/ECB/OAEPwithSHA-256andMGF1Padding"");
</code></pre>

<p>Now you also need to tell AndroidKeyStore what encryption paddings you are permitting for your key. So add a <code>setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_RSA_OAEP)</code> call in your call chain for <code>KeyGenParameterSpec.Builder(...)</code>, i.e.</p>

<pre><code>kpg.initialize(new KeyGenParameterSpec.Builder(""Test"",
                KeyProperties.PURPOSE_DECRYPT | KeyProperties.PURPOSE_ENCRYPT |
                        KeyProperties.PURPOSE_SIGN)
                .setDigests(KeyProperties.DIGEST_SHA256, KeyProperties.DIGEST_SHA512)
                .setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_RSA_OAEP)
                .build());
</code></pre>
","101","<android><rsa><private-key><public-key><android-keystore>","0","0","1","2018-07-01 17:21:51","51125419","0","","2649012","","2018-07-01 16:46:14","2018-07-01 15:06:06",""
"56181924","CSSMERR_DL_DATASTORE_DOESNOT_EXIST while trying to import a private key to the keychain","<p>With my application, I am trying to import a private key into the login keychain.
For this, I create a all the attributes in a dictionary. </p>

<pre><code>NSMutableDictionary *attributes = [[NSMutableDictionary alloc] init];
[attributes setObject:(__bridge id)kSecAttrKeyTypeRSA
               forKey:(__bridge id)kSecAttrKeyType];
[attributes setObject:(__bridge id)kSecAttrKeyClassPrivate
               forKey:(__bridge id)kSecAttrKeyClass];
[attributes setObject:[NSNumber numberWithLong:(2048)]
               forKey:(__bridge id)kSecAttrKeySizeInBits];
</code></pre>

<p>Then create a SecKeyRef for the key using </p>

<pre><code>SecKeyRef privateKey = SecKeyCreateFromData((CFDictionaryRef)attributes, (CFDataRef)encodedPrivateKeyData, &amp;error);
</code></pre>

<p>Since I am adding the key to the login keychain, I derive the path to the login keychain and create a SecKeyChainRef for the same using SecKeychainOpen.</p>

<pre><code>NSArray *path = [NSHomeDirectory() pathComponents];
//returns /Users/&lt;username&gt;/Library/...
NSString *keychainPath = [NSString stringWithFormat:@""%@%@/%@%@"",path[0],path[1],path[2],@""/Library/Keychains/login.keychain""];
SecKeychainRef keychain = NULL;
OSStatus status = SecKeychainOpen([keychainPath UTF8String],&amp;keychain);
</code></pre>

<p>Once we have the privateKey as well as the keychainRef, we can actually create a representation of the privateKey using </p>

<pre><code>CFDataRef exportData = NULL;
status = SecItemExport(privateKey, kSecFormatWrappedPKCS8, 0, &amp;keyParams, &amp;exportData);
</code></pre>

<p>To finally add the privateKey that was stored in <code>exportData</code>, I use </p>

<pre><code>CFArrayRef outItems = NULL;
status = SecItemImport(exportData, NULL, &amp;dataFormat, &amp;actualType, 0, &amp;keyParams, keychain, &amp;outItems);
</code></pre>

<p>The problem occurs with the SecItemImport where I get an OSStatus of
<code>-25294 errSecNoSuchKeychain - ""The specified keychain could not be found""
CSSM Error: Keychain Access CSSM Exception: -2147413737 CSSMERR_DL_DATASTORE_DOESNOT_EXIST</code> 
The odd thing is that both the SecKeychainOpen and SecItemImport functions use the same SecKeychainRef of the login keychain, but the application can successfully find the keychain only during the SecKeychainOpen function. It fails only during the SecItemImport operation. Since it is the login keychain that has a lot of passwords saved, I'd like to figure out a solution without having to reset the keychain if possible. </p>

<p>This is an isolated incident that I've only seen on one Mac and would like to figure out why this happens. Trying to research this issue, I came across threads that mention a <a href=""https://github.com/rsms/fb-mac-messenger/issues/324#issuecomment-274601055"" rel=""nofollow noreferrer"">ghosted keychain</a> but I've confirmed that it's not the case this time.</p>
","","100","<objective-c><macos><keychain><private-key>","1","","0","2019-05-17 07:47:33","","0","","","","","2019-05-17 07:47:33",""
"31717923","Where to keep private keys in web deployments?","<p>I am writing a web application which is exchanging signed xml over the web. My question is where to securely store my private keys and how to access them in my Java code? I am deploying on Google app engine cloud and my application can auto scale based on server load.</p>

<p>What are the industry best practices for doing this?</p>
","<p>Secure from whom? The NSA? Google admins? Script kiddies?</p>

<p>Ideally you buy an HSM and store them there. I don't know if GAE has an HSM. AWS does but it's not cheap. </p>

<p>You could also create a simple server with a very limited and locked down API and store your keys in it and get that server to sign stuff for you, without revealing your key.</p>

<p>Your next best option is to store your keys in a file or envar that can only be read by the user that your app is running as.</p>
","100","<java><security><google-app-engine><private-key><xml-signature>","2","2","1","2015-07-30 18:34:23","31731509","0","","","","","2015-07-30 07:43:29",""
"33072590","Digital Signature - Signing Cab File - validation for Auto installation","<p>I got this scenario for one of my projects.
I wanted to my program to be auto-run to be installed once after the mobile device being hard-reset. (Mobile device 6.5)
It should be auto-ran if i put the installation file (.cab file) in the startup folder according to the manufacturer.
However, the device's manufacturer have built some security mechanism on validate the cab file.(Only the signed .exe file zipped in a signed cab file can be ran automatically). Both digital signature are different.</p>

<ol>
<li>I have .cert and .pvk for signing the cab file.</li>
<li>I have only .cert for signing exe file but do not have the .pvk file.</li>
</ol>

<p>By any meaning, is there any other walk-around method to make the happening of the auto installation after hard-reset?</p>

<p>Please advise and thanks.</p>
","","100","<digital-signature><bluebird><private-key><windows-mobile-6.5><cab>","0","","0","2015-10-12 02:56:11","","3","","","","","2015-10-12 02:56:11",""
"47044011","How to Load puttygen RSA keys using Cryptolib in C++?","<p>I have API's to load the Private and public keys, developed using Cryptolib.</p>

<pre><code>    CryptoPP::RSA::PrivateKey
    CryptoPP::RSA::PublicKey
</code></pre>

<p>When I try to load the RSA(Private and Public) keys generated by puttygen , load functions crashes. Is it possible load the keys generated by Puttygen, in Cryptolib?</p>
","<p>Crypto++ uses the PCKS #8 Private Key Information Standard for private keys and the X.509 Public key standard format as specified in <a href=""https://cryptopp.com/wiki/Keys_and_Formats#Private_Key_Format"" rel=""nofollow noreferrer"">their documentation</a>. Puttygen uses the PuTTY format. These are not easily converted using C++, but it is possible. It's a lot easier just to export to OpenSSH format from within puttygen though.</p>

<p>If you still want to do it programmatically, you can use the <a href=""https://www.example-code.com/vcpp/ssh_ppk_to_pem.asp"" rel=""nofollow noreferrer"">Chilkat CKSshKey library</a> which was developed for just this purpose. You can see an example of converting a PuTTY private key to OpenSSH PEM (which is what Crypto++ will read) <a href=""https://www.example-code.com/vcpp/ssh_ppk_to_pem.asp"" rel=""nofollow noreferrer"">here</a>.</p>
","99","<c++><private-key><public-key>","0","1","1","2017-11-01 01:07:27","47046780","0","0","","","","2017-10-31 20:27:24",""
"55549291","Is there a way to represent all types of private keys as regex? (It doesnt matter if they are valid or not)","<p>I am writing a program to check through an array of strings to see if it has one of the following in it;
1. Private Keys
2. BIP 39 Seeds (12, 18 and 24 words)</p>

<p>I already can check for a WIF private key but I have no Idea how to represent anything that remotely looks like a private key (WIF, Extended Format/ECDSA, Mini, Parent Private Key) with Regex.
If you don't think Regex is the way to go, you can suggest something else to me, keep in mind that I don't need to verify that it actually exists and I don't need something overly complicated.</p>

<p>For checking for BIP 39 Seeds, I have a function below that slices the string list in turns of 12,18 and 24 and compares each slice to a string list of all 2048 words in BIP39 but it doesn't seem to work.</p>

<p>Code for checking for WIF looks like this and it works, the code has a larger part but I don't want to complicate things, just bringing out what is needed.</p>

<pre><code>z = ""5HpHagT65TZzG1PH3CSu63k8DbpvD8s5ip4nEB3kEsreAbuatmU""

exp = bool(re.match(r""^[5KL][1-9A-HJ-NP-Za-km-z]{48,51}$"", z))
   if exp == True:
      print (""Found Private Key with regex"")
   else
      print (""Didnt find a WIF but other keys might still be in it"")
</code></pre>

<p>Here is the code for verifying it contains a bip39 seed</p>

<pre><code>for m in (global_array):

    try:
      new_array = global_array[m:12]
      if set(new_array).issubset(set(bip39_list)) == True:
         print(""Possible 12 - Word BIP 39 seed found!"")
         print(new_array)
      except:
         continue
     continue

     try:
       new_array = global_array[m:18]
       if set(new_array).issubset(set(bip39_list)) == True:
         print(""Possible 18 - Word BIP 39 seed found!"")
         print(new_array)
      except:
         continue
       continue

      try:
        new_array = global_array[m:24]
        if set(new_array).issubset(set(bip39_list)) == True:
          print(""Possible 24 - Word BIP 39 seed found!"")
          print(new_array)
       except:
         continue
  continue
</code></pre>

<p>A sample data that contains everything im looking for would be;</p>

<pre><code>global_array = [""5HpHagT65TZzG1PH3CSu63k8DbpvD8s5ip4nEB3kEsreAbuatmU"", ""KziXBfNy2eZEKHdZeBZQ3ZyW3joXcv2k66yHuKPaDgNwEX76wMPU"", ""await"", ""abandon"", ""actress"", ""actual"", ""adapt"", ""satoshi"", ""advance"", ""advice"", ""aerobic"", ""admit"",""afraid"",""again"",""age"",""zola"", ""zolof"", ""yada"", ""yada""]
</code></pre>

<p>I would like a way to be able to correctly check for <code>bip39</code> as the one I have done above does not work.
I would like a way to check for all types of private keys, not just wif.</p>

<p>I would also like if anyone can add a way to rewrite this as a multi-threaded with a long list of about 10,000 files.</p>
","","98","<python><regex><encryption><private-key>","0","","0","2019-04-06 13:50:45","","3","","6700019","","2019-04-06 13:50:45","2019-04-06 12:58:41",""
"43788870","Unable to git clone on Mac while works on Windows using my private keys","<p>I'm currently migrating my files from windows to mac. One of them is all my git repositories. What I did on Windows is I have my .ppk and public keys generated from PuttyGen then use Pageant to add the .ppk file while cloning from git repo. I use GitExtension in Windows. </p>

<p>Now on Mac, I create a local repo folder where all the cloned repo will be stored. put my public and private keys to ~/.ssh/. and edited ~/.ssh/config and added something like this:</p>

<pre><code>     Host 192.168.20.4
        User git
        HostName 192.168.20.4
        IdentityFile ~/.ssh/user_git.ppk
</code></pre>

<p>I'm thinking that all was set up but still im getting a:</p>

<pre><code>    MACBOOKs-MacBook-Pro:.ssh username$ git clone 
    git@192.168.20.4:repositories/project-repo.git
    Cloning into 'project-repo'...
    Enter passphrase for key '/Users/username/.ssh/user_git.ppk': 
    git@192.168.20.4's password: 
    Permission denied, please try again.
    git@192.168.20.4's password: 
    Permission denied, please try again.
    git@192.168.20.4's password: 
    Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).
    fatal: Could not read from remote repository.
    Please make sure you have the correct access rights
    and the repository exists.
</code></pre>

<p>Every time I clone from windows with the private key, it doesn't ask password or passphrase. </p>

<p>I have also used GitKraken and used the private_key there but still Permission denied</p>

<p>I already copied the keys from windows to mac multiple time but still doesn't work at all. </p>

<p>What set up was still missing?</p>

<p>Thank you!</p>
","<p>PPK is a PuTTY-specific format for private keys. You have to convert it to an OpenSSH format key.</p>

<pre><code>$ puttygen user_git.ppk -O private-openssh -o user_git
</code></pre>

<p><a href=""https://superuser.com/a/232365"">See this answer for more details</a>.</p>
","97","<git><macos><private-key>","0","1","2","2017-05-04 17:13:36","43788996","0","","","","","2017-05-04 17:04:39",""
"43788870","Unable to git clone on Mac while works on Windows using my private keys","<p>I'm currently migrating my files from windows to mac. One of them is all my git repositories. What I did on Windows is I have my .ppk and public keys generated from PuttyGen then use Pageant to add the .ppk file while cloning from git repo. I use GitExtension in Windows. </p>

<p>Now on Mac, I create a local repo folder where all the cloned repo will be stored. put my public and private keys to ~/.ssh/. and edited ~/.ssh/config and added something like this:</p>

<pre><code>     Host 192.168.20.4
        User git
        HostName 192.168.20.4
        IdentityFile ~/.ssh/user_git.ppk
</code></pre>

<p>I'm thinking that all was set up but still im getting a:</p>

<pre><code>    MACBOOKs-MacBook-Pro:.ssh username$ git clone 
    git@192.168.20.4:repositories/project-repo.git
    Cloning into 'project-repo'...
    Enter passphrase for key '/Users/username/.ssh/user_git.ppk': 
    git@192.168.20.4's password: 
    Permission denied, please try again.
    git@192.168.20.4's password: 
    Permission denied, please try again.
    git@192.168.20.4's password: 
    Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).
    fatal: Could not read from remote repository.
    Please make sure you have the correct access rights
    and the repository exists.
</code></pre>

<p>Every time I clone from windows with the private key, it doesn't ask password or passphrase. </p>

<p>I have also used GitKraken and used the private_key there but still Permission denied</p>

<p>I already copied the keys from windows to mac multiple time but still doesn't work at all. </p>

<p>What set up was still missing?</p>

<p>Thank you!</p>
","<p>Looks like your Host and Hostname are the same IP. I think the Host should be your project specific IP, and the Hostname should be github's IP, like: </p>

<pre><code># Foo Account
Host github.com-foo
  HostName github.com
  User git
  IdentityFile ~/.ssh/foo.pem
</code></pre>
","97","<git><macos><private-key>","0","0","2","2017-05-04 17:13:36","43788996","0","","","","","2017-05-04 17:04:39",""
"8731764","How to use Hudson to securely request/receive an Android private key from another server?","<p>I would like to store the Android private key on a server different from my Hudson build server. Let's call it the Private Key server, or PK server for short. After receiving the private key, the .apk can be signed, and then the private key will be deleted.</p>

<p>More specifically:</p>

<ul>
<li><p>What kind of implementation is required on the PK server to do this?</p></li>
<li><p>On the build server, what is needed in the Hudson build script to initiate the sending of the Android private key?</p></li>
</ul>

<p>I assume this involves some sort of encryption protocol but I am unsure of how to implement it between these 2 systems.</p>
","<p>As you will be running this unattended in the CI server you will need a way of retrieving the keystore from your PK server without manually entering a password which will defeat your intention.</p>

<p>I would suggest you to keep the <strong>keystore</strong> in your PK server and create a service that takes an <strong>unsigned APK</strong> as argument and returns the <strong>signed APK</strong>. In this way your keystore never leaves the PK server.
This service can be invoked as a build step in your CI server.</p>
","97","<android><encryption><hudson><code-signing><private-key>","0","0","1","2012-01-04 18:22:59","","0","","","","","2012-01-04 18:11:16",""
"26010267","private/public key ssh-keygen -t rsa","<p>I created a public key with the command ""ssh-keygen -t rsa"" without a passcode, I was going to use this for github but I sent both the public and the private key by mistake....</p>

<p>what are the implications exactly? </p>
","<p>The implications are that your private key is no longer private, so it can no longer uniquely identify you, so you can now be impersonated.</p>

<p>Throw it away and start again.</p>
","97","<public-key-encryption><private-key><ssh-keygen>","2","2","1","2014-09-24 08:37:00","","0","","","","","2014-09-24 06:43:59",""
"47310159","pybitcointools pushtx TypeError: expected string or buffer","<p>I am in the process of creating a raw transaction using pybitcointools, however when I tried to push the transaction into the network using <code>pushtx(tx)</code></p>

<p>I got the ff. error:</p>

<pre><code>Traceback (most recent call last):
File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
File ""/usr/local/lib/python2.7/site-packages/bitcoin-1.1.42-py2.7.egg/bitcoin/bci.py"", line 311, in pushtx
return f(*args)
File ""/usr/local/lib/python2.7/site-packages/bitcoin-1.1.42-py2.7.egg/bitcoin/bci.py"", line 261, in bci_pushtx
  if not re.match('^[0-9a-fA-F]*$', tx):
File ""/usr/local/lib/python2.7/re.py"", line 141, in match
return _compile(pattern, flags).match(string)
TypeError: expected string or buffer
</code></pre>

<p>by the way my privatekey is in base58 (51 characters) format</p>

<p>Here's the code:</p>

<pre><code>from bitcoin.main import *
from bitcoin.transactions import *
from bitcoin.bci import *
&gt;&gt;&gt; addr
'1CXW5bqMNQZ3sftXCtiRf3HGTPJmpd2xvq' #I just edited the address for security purpose

&gt;&gt;&gt; unspent(addr)
[{'output': '23e81960ba8bb95c33c2336c84c126e378e4d1123921f881da9287c25f624161:1', 'value': 300000}] 

&gt;&gt;&gt; source = '32GkPB9XjMAELR4Q2Hr31Jdz2tntY18zCe'
&gt;&gt;&gt; unspent(source)
[{'output': '8602122a7044b8795b5829b6b48fb1960a124f42ab1c003e769bbaad31cb2afd:0', 'value': 677200}, {'output': 'bd992789fd8cff1a2e515ce2c3473f510df933e1f44b3da6a8737630b82d0786:0', 'value': 5000000}]

&gt;&gt;&gt; ins = unspent(addr) + unspent(target)
&gt;&gt;&gt; amount = 300000 + 5000000 + 677200
&gt;&gt;&gt; amount -= 10000

&gt;&gt;&gt; outs = [{'address': addr, 'value': value}]

&gt;&gt;&gt; tx = mktx(ins, outs)
&gt;&gt;&gt; tx = sign(tx, 0, priv)
&gt;&gt;&gt; tx = deserialize(tx)

&gt;&gt;&gt; tx['ins'][1]['script'] = '00483045022100dfcfafcea73d83e1c54d444a19fb30d17317f922c19e2ff92dcda65ad09cba24022001e7a805c5672c49b222c5f2f1e67bb01f87215fb69df184e7c16f66c1f87c290347304402204a657ab8358a2edb8fd5ed8a45f846989a43655d2e8f80566b385b8f5a70dab402207362f870ce40f942437d43b6b99343419b14fb18fa69bee801d696a39b3410b8034c695221023927b5cd7facefa7b85d02f73d1e1632b3aaf8dd15d4f9f359e37e39f05611962103d2c0e82979b8aba4591fe39cffbf255b3b9c67b3d24f94de79c5013420c67b802103ec010970aae2e3d75eef0b44eaa31d7a0d13392513cd0614ff1c136b3b1020df53ae'
&gt;&gt;&gt; tx['ins'][2]['script'] = '00483045022100dfcfafcea73d83e1c54d444a19fb30d17317f922c19e2ff92dcda65ad09cba24022001e7a805c5672c49b222c5f2f1e67bb01f87215fb69df184e7c16f66c1f87c290347304402204a657ab8358a2edb8fd5ed8a45f846989a43655d2e8f80566b385b8f5a70dab402207362f870ce40f942437d43b6b99343419b14fb18fa69bee801d696a39b3410b8034c695221023927b5cd7facefa7b85d02f73d1e1632b3aaf8dd15d4f9f359e37e39f05611962103d2c0e82979b8aba4591fe39cffbf255b3b9c67b3d24f94de79c5013420c67b802103ec010970aae2e3d75eef0b44eaa31d7a0d13392513cd0614ff1c136b3b1020df53ae'
&gt;&gt;&gt; serialize(tx)
'01000000036141525fc24792da81f8213912d1e478e326c18...'
&gt;&gt;&gt; pushtx(tx)
</code></pre>
","<p>From the looks of it, you need to pass <code>tx</code> to <code>pushtx()</code> in serialized form.</p>

<p>The <code>re.match('^[0-9a-fA-F]*$', tx)</code> test accepts a hex string, exactly what <code>serialize()</code> returns.</p>

<p>This is all the more likely considering that <code>mktx()</code> and <code>sign()</code> produce the result in serialized form.</p>
","95","<python><push><bitcoin><private-key>","0","0","1","2017-11-15 20:06:25","","2","","648265","","2017-11-15 20:06:25","2017-11-15 14:36:42",""
"37513105","Is there any way to lock down an ssh private key so that it can be used, but not read/copied?","<p>I need to make a private key (.pem file) available for a user to connect via ssh (they're using a Mac), however we need to prevent the key from being physically readable by that user. Is this possible?</p>
","<p>Store them on the Smart Card or some equivalent (Yubikey, HSM, or so). You can safely generate the key on the card, protect usage by PIN and do not allow reading it. OpenSSH supports using authentication keys from smart cards using PKCS#11 interface. OpenSC library to access them works fine on both linux and OSX.</p>
","95","<macos><unix><ssh><private-key>","0","0","1","2016-05-29 18:57:28","37513703","2","","","","","2016-05-29 17:55:03",""
"17997292","Sharing Private keys in application development","<p>How do large corporations manage to share Private keys? i.e. An application is in the building stage, there is one group of developers with a private key, this gives them access to develop the application. It is a large application, that requires to reach out to multiple groups of developers to help build on it. Please assist me in a way where I can get that same private key to the other groups, or is that not possible and each group would need a separate private key?</p>
","<p>You don't want to share your private keys with your developers...you should restrict access to the private key to a very small group of trusted people.</p>

<p>To allow developers to work on code you can use Delay Signing/Test Key signing:</p>

<ul>
<li><a href=""http://blogs.msdn.com/b/shawnfa/archive/2004/03/17/91575.aspx"" rel=""nofollow noreferrer"">http://blogs.msdn.com/b/shawnfa/archive/2004/03/17/91575.aspx</a></li>
</ul>

<p>On your secured CI/Build Server that generates your ""releases""...you would allow it access to the production private key and then use that in the build process during a ""Release"" build (which doesn't use Delay Signing) to sign everything properly.</p>

<ul>
<li><p><a href=""https://stackoverflow.com/questions/8394357/what-exactly-are-delay-signing-and-strong-names-in-net"">What exactly are Delay signing and strong names in .net?</a></p></li>
<li><p><a href=""http://blogs.msdn.com/b/shawnfa/archive/2005/10/24/484170.aspx"" rel=""nofollow noreferrer"">http://blogs.msdn.com/b/shawnfa/archive/2005/10/24/484170.aspx</a></p></li>
<li><p><a href=""http://blogs.msdn.com/b/shawnfa/archive/2006/06/23/644648.aspx"" rel=""nofollow noreferrer"">http://blogs.msdn.com/b/shawnfa/archive/2006/06/23/644648.aspx</a></p></li>
</ul>
","94","<java><private-key><pki><jks>","0","0","1","2013-08-06 14:44:22","","0","","","","","2013-08-01 14:47:22",""
"55754050","Why Does My Java Private Key Signature Not Match My Openssl Signature?","<p>So the signature that I'm getting from Java doesn't match what I'm getting in openssl.  Here's an example of what I'm doing:</p>

<p>In a terminal using openssl I'm doing this.</p>

<pre><code>    echo +pkCdYME5SzI7A2PV0r8/8FqYGZyvTp+4DoGkdaMYRs= hash
    openssl dgst -sha256 -sign ""private.key"" -out hash.sha256 hash
    base64 &lt; hash.sha256 &gt; hash.bin
    cat hash.bin
    results posted below
</code></pre>

<p>Java Code: (hash matches the one I'm using for openssl)</p>

<pre><code>    private String createSignature(String hash) throws ProductException {
      try {
        Signature privateSignature = Signature.getInstance(""SHA256withRSA"");
        privateSignature.initSign(getPrivateKey());
        privateSignature.update(hash.getBytes(UTF_8));
        byte[] signature = privateSignature.sign();
        String result = Base64.encodeBase64String(signature);
        System.out.println(result); //THIS RESULT SHOULD MATCH BUT DOESN'T
        return result;
      } catch (NoSuchAlgorithmException | SignatureException | InvalidKeyException e) {
        throw new ProductException(Codes.AUTHENTICATION_ERROR, e);
      }
    }   
    private PrivateKey getPrivateKey() throws ProductException {
      try {
        String key = IOUtils.toString(this.getClass().getResourceAsStream(""private.key""));
        PemObject pem = new PemReader(new StringReader(key)).readPemObject();
        byte[] content = pem.getContent();
        KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
        PKCS8EncodedKeySpec ks = new PKCS8EncodedKeySpec(content);
        return keyFactory.generatePrivate(ks);
      } catch (IOException | NoSuchAlgorithmException | InvalidKeySpecException e) {
        throw new ProductException(Codes.AUTHENTICATION_ERROR, e);
      }
    }
</code></pre>

<p>PLEASE HELP!  I've scoured the interwebs and I don't know what I'm doing wrong.</p>

<p>My openssl signature = 
O8DRek17ySzz+p2N8brH/9CdY3b+GN5bnyaTtn+ZP3SDIBvtqkk/lp+zb1BZ80a6xCIID8CTjNU+/svrV/q/rXEqEQc3jk3ZVUo0RJB52rgW26EQWyieAdqRlIbQqPhaCIrpWrs+WImGk7cPnkTEueIm+EzxG8ptjF5cAZH3lustVLt8SM9sXjQJzxzMgF2g0XN+1GQniAdWT/oNJXv0ZG7PSFACfcoSTSdN4wHkVAG4/PF/d6H+M5eTkEu6NhXfbfBBtavGmBiDgM6FPFDJ4r+2Rzvc/vpSiglUUQgxD58PTH47Y8xMc4t4/yahrchi2if2cJ7e89RBb1IHNus+eB8zPS0MHBn2OWDUM66P1KRanwzebDfg08VhRbW8zVnmNUNzXxAdCWa3kwsDe7hx+36oHfJwoyqIFwjJi8TKZm0JLKMf0SaLh/6zK0bIdgoXw23AfJni1ewmUqZbpE6Q4A0TgxaJg1aozb06l7Nb523FqV6ScRZ0wJK3s51Dduy5j1V1jt0+YYd+0zACyYfr5a+vypEygzsZ2Rzu3Q/l4VoPlZF2dr50TLnbhTvFnyK9mvc0zaTmsuHI5UJAbcpFBTXiDWb0DoWo4PkHRVFPvIMai37UxW4c5V0ybchlQHrEKYQ8NigYHGX5j8GsFhZJgg73Het1YwoWdsz1PksoYTY=</p>

<p>My Java Signature = 
8dKc1otqL+thKQ7yTPeHX7T5fuOgv6PmHvlP5QyEHEXZILwD/234polMSs20i4na9wCuUdcSA+mHEKpY7Dkyd8VLTcZZ8RC8AlPE5bvzXc/uZhyPpBuSA7mDDOARbg3mx5usq4ythdqxj6OvdOBAJXXFB6Jc/c1XVd8IxDnRJoz5MlwxZIp94TAyW11QbMGNZuzcbsdEdsBuXU1MR4gzVfMLJjMcIM3YTtsP3bktsPAs5W2Asp9lDg5GuIOgWgXpTlj3VY6NF64SCI1tY4LhE7zq16YXQ6ykJ490YSVX5J9z+cDvZcVgfvgKCZuk4wgnXo6PbE4Wm4FDuzu35DEQi9Y5EEHzXlb5aNFQP3S6lumyfqOCmZlQcNVS53ur1fY4P8cnOuHZelyYS1Dw54q0SDCjFuANK2Ltl8rIZOZQWbg6jo45HbpaHUgt1NMkmj/UC/rLSnofa/YYbcJ2YZbqUdyX/yTBlzEuLR0/4Bgv9zvBw8HI0h3icv7/1NYaKo/eBSki6HNyDh2pDWX6IHQTFMzdFKeoXVAQLfaJREIpMPu+rDExI6Ozl0r9D61fY+XtMrptGNTFzf1h4cwUAZAC737Ahc6qsr+jQkDWDJt6oJbgziNE4C2JZriRtvRDACpryt6MGH1QnYPGYfCVs/xSxaYEtGJsjRRkG+lkpojcJ+A=</p>
","<p>Most likely your issue comes from using <code>echo</code> for preparing an input to your signature function.
By default, <code>echo</code> appends a newline to whatever its output is, and the byte representing it messes up the signature.</p>

<p>Try <code>echo -n</code> that skips the newline and see if it works.</p>
","93","<java><openssl><signature><sha256><private-key>","0","1","1","2019-05-31 12:42:28","","2","","","","","2019-04-18 21:39:44",""
"35344005","How to create dual control java keystore file","<p>Want to create java key-store file and create secret key using multiple users/user passwords.</p>

<p>generally we can create key-store file in this way,</p>

<pre><code>keytool -genseckey -keystore &lt;filename&gt;.jceks -storetype jceks -storepass &lt;passwrod&gt; -keyalg AES -keysize 256 -alias &lt;alias name&gt; -keypass &lt;key password&gt;
</code></pre>

<p>here, only one person has access to key-store file and keys, also that person can access that file without getting any others support. So only one have full permission. </p>

<p>Requirement is to distribute this permissions within 2 or 3 peoples.</p>

<p>Is there any way to overcome this problem in java key-store(jceks) file ?</p>
","<p>I try to find solution in various ways. Finally I find out this <a href=""https://github.com/evanx/vellum/wiki/DualControl"" rel=""nofollow"">https://github.com/evanx/vellum/wiki/DualControl</a>
. Could get a solution from this source.</p>
","93","<java><keystore><keytool><private-key><jce>","0","0","1","2016-02-17 10:30:24","","1","","207421","","2016-02-14 19:31:00","2016-02-11 15:56:21",""
"55332684","How to convert encrypted private key string to java object","<p>I have a encrypted private key string like this</p>

<pre class=""lang-none prettyprint-override""><code>-----BEGIN ENCRYPTED PRIVATE KEY-----
content
-----END ENCRYPTED PRIVATE KEY-----
</code></pre>

<p>I want to store the private key into my keystore file with certificate chain.</p>

<p>And I found that here is two functions in KeyStore.class.</p>

<ol>
<li><code>KeyStore.setKeyEntry(String alias, Key key, Char[] password, Certificate[] chain)</code></li>
<li><code>KeyStore.setKeyEntry(String alias, byte[] key, Certificate[] chain)</code></li>
</ol>

<p>What should I do in java code?</p>

<p>Or how to change the encrypted private key String to a java object?</p>

<p>Or how to change the encrypted private key String to a byte array which can be used for point 2 function?</p>
","","93","<java><private-key><pem>","0","","0","2019-03-25 07:22:00","","6","1","11253357","","2019-03-25 07:22:00","2019-03-25 07:04:54",""
"33515886","Why should we add public key to authorized keys, when private key is used as identity file for SFTP transfer using JSch","<p>When we need to add public key to authorized keys, why is that we are using identity file authentication with private key for sftp transfer</p>

<pre class=""lang-java prettyprint-override""><code>Session session = null;
ChannelSftp sftpChannel = null;
JSch jsch = new JSch();        
try
{
    session = jsch.getSession( targetUserId, targetHost, targetPort );
    session.setConfig( ""StrictHostKeyChecking"", ""no"" );

    if( identityFile != null )
    {
        jsch.addIdentity( identityFile );
    }

    if( targetPassword != null )
    {
        session.setPassword( targetPassword );
    }

    session.connect();
</code></pre>
","<p>SSH public key authentication is uses asymmetric encryption.</p>

<p>You have a key pair, where one of the keys is called private (identity) and the other public. What you encrypt with the private key can be decrypted with the public key and vice versa. So the server needs to posses your public key to be able to decrypt the SSH traffic coming from you (the JSch SSH client).</p>

<p>Read about <a href=""https://en.wikipedia.org/wiki/Public-key_cryptography"" rel=""nofollow"">Public-key cryptography</a>.</p>
","92","<ssh><jsch><private-key><public-key>","0","0","1","2015-11-04 09:17:25","","0","","850848","","2015-11-04 09:17:25","2015-11-04 07:20:01",""
"17008143","Generating public-private key pairs where determining the public key is also hard to calculate if unknown","<p>I'd like to know how one would go about generating a private-public key pair where the public key is as hard to deduce from the private key as visa versa?</p>

<p>As I understand it presently the exponent part of the public key is left deliberately simple so that the private key can be used to generate the public key. </p>

<p>My interest in this is to create no-trusted-third party escrow execution using Bitcoin. This raises the second question of whether this is possible using the Bitcoin protocol?</p>
","","92","<encryption><public-key-encryption><private-key><bitcoin>","0","","0","2013-06-09 09:10:29","","2","","","","","2013-06-09 09:10:29",""
"48342557","Technical Guidance to resolve WAS / Java - Private Key Issue","<p>Goal : </p>

<p>Retrieve private key from the WAS Keystore (custom private key imported in WAS Console) in our java application to sign data.    Signed Data would be decrypted using the Public key which is been shared to the other applications. </p>

<p>How we have done in our current (which is NOT working,  Unable to generate or convert the Key to PrivateKey ) </p>

<p>We were retrieving the Websphere KeyPair Object with help of KeyHelper API and got the <code>java.security.Key</code> Object from the KeyPair. </p>

<p>Link which we used to develop the code referring Knowledge Center 
<a href=""https://www.ibm.com/support/knowledgecenter/SSAW57_8.5.5/com.ibm.websphere.nd.doc/ae/rsec_sslretgenkeysetgrp.html"" rel=""nofollow noreferrer"">https://www.ibm.com/support/knowledgecenter/SSAW57_8.5.5/com.ibm.websphere.nd.doc/ae/rsec_sslretgenkeysetgrp.html</a></p>

<p>Code Snippet : </p>

<pre><code>String keySetGroupName = ""CMODSSOKeySet"";
com.ibm.websphere.crypto.KeySetHelper ksh =     com.ibm.websphere.crypto.KeySetHelper.getInstance();
Map generationKeys = ksh.getAllKeysForKeySet(keySetGroupName);

Iterator iKeySet = generationKeys.keySet().iterator();

String keyAlias = (String)iKeySet.next();
Object keyObject = generationKeys.get(keyAlias);
</code></pre>

<p>Now after we got the <code>keyObject</code> as instance of <code>com.ibm.websphere.crypto.KeyPair</code> and when we retrieve the Private key from the <code>keyObject</code> as mentioned below we get <code>java.security.Key</code> Object but not the PrivateKey object. </p>

<pre><code>java.security.Key privateKeyAsSecret = ((com.ibm.websphere.crypto.KeyPair)key).getPrivateKey();
</code></pre>

<p>We need to convert privateKeyAsSecret to PrivateKey and we tried in different ways which doesnt work. </p>

<p>Option 1 : </p>

<pre><code>PKCS8EncodedKeySpec keySpecPKCS8 = new PKCS8EncodedKeySpec(Base64.decodeBase64(privateKeyContent.getEncoded()));
 PrivateKey privKey = kf.generatePrivate(keySpecPKCS8);
</code></pre>

<p>Option 2 : </p>

<pre><code>X509EncodedKeySpec keySpecPKCS8 = new X509EncodedKeySpec(Base64.decodeBase64(privateKeyAsSecret.getEncoded()));
PrivateKey tempPrivateKey = kf.generatePrivate(keySpecPKCS8);
</code></pre>

<p>Option 3 : </p>

<pre><code>PrivateKey tempPrivateKey = (PrivateKey) ((com.ibm.websphere.crypto.KeyPair) key).getPrivateKey();
</code></pre>

<p>Option 4 : </p>

<pre><code>String privateKeyContent = new String(privateKeyAsSecret.getEncoded());
privateKeyContent = privateKeyContent.replaceAll(""\\n"", """").replace(""-----BEGIN PRIVATE KEY-----"", """").replace(""-----END PRIVATE KEY-----"", """");
PKCS8EncodedKeySpec keySpecPKCS8 = new PKCS8EncodedKeySpec(DatatypeConverter.parseBase64Binary(privateKeyContent));
PrivateKey privKey = kf.generatePrivate(keySpecPKCS8);
</code></pre>

<p>We were not able to generate or convert the Key to PrivateKey by the all above mentioned options. </p>
","","91","<java><websphere><keystore><websphere-8><private-key>","1","","0","2018-01-19 14:09:10","","0","","4294969","","2018-01-19 14:09:10","2018-01-19 13:47:12",""
"38272295","How can I get digest with android?","<p>I need to sign a <code>String</code> and send both. I have a <code>.pem</code> file as private key, and I'm trying to convert this file into a <code>PrivateKey</code>.</p>

<p>This is my code:</p>

<pre><code>try {
            File privateKeyFile = new File(""path to .pem file"");

            //TODO: HOW CAN I CONVERT THAT FILE INTO PRIVATE KEY?

            Signature signature = Signature.getInstance(""SHA1withRSA"");
            signature.initSign(privateKey);
            signature.update(data.getBytes());

            byte[] sign = signature.sign();
        } catch (NoSuchAlgorithmException | SignatureException e) {
            e.printStackTrace();
        }
</code></pre>

<p>Have you any suggestion to give me about this?</p>
","<p>I solved in this way:
Instead used a <code>.pem</code> file I saved directly the <code>String</code> obtained from <code>PrivateKey</code> and then when I need to sign datas, I get that <code>String</code> and the convert it into <code>PrivateKey</code>. </p>

<p>This is my code:</p>

<pre><code>public String signData(final String data, final String privateKeyString) throws NoSuchAlgorithmException, InvalidKeySpecException, InvalidKeyException, SignatureException {

        X509EncodedKeySpec keySpec = new X509EncodedKeySpec(privateKeyString.getBytes());
        KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
        PrivateKey privateKey = keyFactory.generatePrivate(keySpec);


        Signature signature = Signature.getInstance(""SHA256withRSA"");
        signature.initSign(privateKey);
        signature.update(data.getBytes());
        byte[] sign = signature.sign();
        return new String(sign);
    }
</code></pre>
","91","<java><android><security><private-key><sign>","2","0","1","2016-07-10 18:38:06","38295252","0","1","1108064","","2016-07-08 23:11:19","2016-07-08 17:23:00",""
"52373196","How encrypt message node.js sendmail?","<p>I am using <strong>sendmail</strong> in <strong>node.js</strong> to send Emails. my mail server is <strong>postfix</strong>.
my TLS parameters in postfix config file is like this:</p>

<pre><code># TLS parameters
smtpd_tls_cert_file = /home/avanel/CMS/Render/ipeccongress_com.crt
smtpd_tls_key_file = /home/avanel/CMS/Render/capk.txt
smtpd_use_tls=yes
smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache
smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache

# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for
# information on enabling SSL in the smtp client.
</code></pre>

<p>BTW i used my SSL certificate and key (I mean same as https).</p>

<p>but when receive gmail says is not encrypted. what is wrong?</p>
","","90","<email><encryption><rsa><private-key><postfix-mta>","1","","0","2018-09-17 17:45:00","","2","","","","","2018-09-17 17:45:00",""
"16239100","What type of Reader to use when generating a Private Key in Go?","<p>I need to generate a private key in Go. I am using the rsa package (<a href=""http://golang.org/pkg/crypto/rsa/"" rel=""nofollow"">http://golang.org/pkg/crypto/rsa/</a>). In particular, it seems that I would like to use the GenerateKey method. One of the parameters for this method is of type io.Reader (<a href=""http://golang.org/pkg/io/#Reader"" rel=""nofollow"">http://golang.org/pkg/io/#Reader</a>), but it seems like there are many different types of readers. Is there any advantage to using one type of Reader over another? Thanks!</p>
","<p>I believe that in this particular case the suitable io.Reader would be, for example, <a href=""http://golang.org/pkg/crypto/rand/#pkg-variables"">crypto/rand.Reader</a>.</p>

<blockquote>
  <p>var Reader io.Reader</p>
  
  <p>Reader is a global, shared instance of a cryptographically strong pseudo-random generator. On Unix-like systems, Reader reads from /dev/urandom. On Windows systems, Reader uses the CryptGenRandom API.</p>
</blockquote>
","90","<go><rsa><private-key>","3","5","1","2013-04-26 14:42:22","16239179","0","","","","","2013-04-26 14:38:46",""
"29856857","Export certificate as .p12 on OS X Mountain Lion?","<p>I am trying to export an apple distribution code signing certificate into a .p12 format on a Mac OS X Mountain Lion. I have the certificate in my keychain and am unable to find the private key. All of the documentation I have read are from newer versions of OS X. Does anyone know how to find the private key on Mountain Lion?</p>
","<p>You should be able to export it with the Keychain Access utility. Select ""My Certificates"" from the Category section of its sidebar, and it'll show your certificates with their private keys associated. If you select the certificate in this mode and choose File menu > Export Items, it'll have the option to export it as a .p12 file.</p>

<p>If it doesn't appear in this mode, I'm pretty sure that means the keychain doesn't contain the corresponding private key.</p>
","89","<macos><osx-mountain-lion><private-key>","0","0","1","2015-04-25 04:48:26","","0","","","","","2015-04-24 20:26:07",""
"53069295","What Prevents Hackers from Pretending To Be A Server/Client With Public Keys In Asymmetric Encryption?","<p>In asymmetric encryption, public keys can be used to encrypt messages sent to a device with the matching private key. I understand that this prevents sniffers from knowing the content of a message, but consider this: <br>
What keeps a hacker from using the public key to encrypt messages and pretend to be someone he\she is not? Say I am shopping on Amazon, and a hacker managed to capture amazon's public key when Amazon exchanged it with me. Couldn't this hacker pretend to be me by simply modifying the headers of his packets to look like they came from my computer? I know this doesn't happen, so what am I missing? </p>
","<p>Please have a look at the TLS Handshake protocol which states clearly what is happening in TLS: <a href=""https://de.wikipedia.org/wiki/Transport_Layer_Security#TLS_Handshake_Protocol"" rel=""nofollow noreferrer"">https://de.wikipedia.org/wiki/Transport_Layer_Security#TLS_Handshake_Protocol</a></p>

<ol>
<li><p>You don't have a private or public key when connecting to amazon, because you're not authenticating with a client certificate.</p></li>
<li><p>If a hacker steals your public key that is not a problem because your public key can only be used to send encrypted messages to <strong>you</strong>. Only <strong>you</strong> can decrypt these messages, because only <strong>you</strong> have the matching private key. That's what asymmetric cryptography is all about!</p></li>
</ol>
","86","<security><private-key><public-key>","1","0","4","2018-11-01 21:37:45","53109314","3","","7228860","","2018-11-01 20:20:41","2018-10-30 16:54:21",""
"53069295","What Prevents Hackers from Pretending To Be A Server/Client With Public Keys In Asymmetric Encryption?","<p>In asymmetric encryption, public keys can be used to encrypt messages sent to a device with the matching private key. I understand that this prevents sniffers from knowing the content of a message, but consider this: <br>
What keeps a hacker from using the public key to encrypt messages and pretend to be someone he\she is not? Say I am shopping on Amazon, and a hacker managed to capture amazon's public key when Amazon exchanged it with me. Couldn't this hacker pretend to be me by simply modifying the headers of his packets to look like they came from my computer? I know this doesn't happen, so what am I missing? </p>
","<blockquote>
  <p>Say I am shopping on Amazon, and a hacker managed to capture amazon's public key when Amazon exchanged it with me. </p>
</blockquote>

<p>Data encrypted with Amazon's public key can only be decrypted with Amazon's private key.</p>
","86","<security><private-key><public-key>","1","0","4","2018-11-01 21:37:45","53109314","3","","7228860","","2018-11-01 20:20:41","2018-10-30 16:54:21",""
"53069295","What Prevents Hackers from Pretending To Be A Server/Client With Public Keys In Asymmetric Encryption?","<p>In asymmetric encryption, public keys can be used to encrypt messages sent to a device with the matching private key. I understand that this prevents sniffers from knowing the content of a message, but consider this: <br>
What keeps a hacker from using the public key to encrypt messages and pretend to be someone he\she is not? Say I am shopping on Amazon, and a hacker managed to capture amazon's public key when Amazon exchanged it with me. Couldn't this hacker pretend to be me by simply modifying the headers of his packets to look like they came from my computer? I know this doesn't happen, so what am I missing? </p>
","<blockquote>
  <p>a hacker managed to capture amazon's public key</p>
</blockquote>

<p>Amazon's public key is public. Everyone knows it. The one that was issued May 3, 2018 begins ""A9 F4 4A 9B 29 84 20 A7 53 FF BA 01 B5 1E 0C 2A A7 53"". The whole point of public/private key cryptography is that the public key is not a secret. So capturing the public key is not important.</p>

<p>Your question isn't about masquerading as Amazon to you (i.e. having to do with Amazon's keys). It's about masquerading as you to Amazon. That's a completely different situation. You don't identify yourself to Amazon with a certificate (called a ""client certificate""), so certificates and public/private key cryptography have nothing to do with this. Yes; anyone could send a message to Amazon encrypted with their public key, but that's not how you prove you are who you say you are.</p>

<p>Instead, you identify yourself to Amazon with credentials, typically a user name and a password. When you do that, Amazon hands you back a session token, which is just a big random number that is mapped to you in a database table (or sometimes the session token is encrypted information about the session so that the database isn't needed). Once you're authenticated, you keep passing your session token back to Amazon to say ""you already know and trust who I am.""</p>

<p>So what if someone captures the session token? That would be a big deal. That would absolutely allow exactly what you're describing. The session token has to be protected for as long as it's valid. We protect it when we pass it to Amazon using TLS which ""prevents sniffers from knowing the content of a message"" so attackers hopefully can't discover the session id.</p>

<p>There are many attacks to steal the session id, broadly called ""session hijacking."" One of the more famous was <a href=""https://en.wikipedia.org/wiki/Firesheep"" rel=""nofollow noreferrer"">Firesheep</a>, which relied on unsecured (HTTP) sessions. However, there are more advanced attacks against HTTPS, such as <a href=""https://en.wikipedia.org/wiki/CRIME"" rel=""nofollow noreferrer"">CRIME</a> and <a href=""https://en.wikipedia.org/wiki/BREACH"" rel=""nofollow noreferrer"">BREACH</a>. Improvements in TLS have mitigated against various known attacks, but it is always possible that new ones will emerge.</p>
","86","<security><private-key><public-key>","1","4","4","2018-11-01 21:37:45","53109314","3","","7228860","","2018-11-01 20:20:41","2018-10-30 16:54:21",""
"53069295","What Prevents Hackers from Pretending To Be A Server/Client With Public Keys In Asymmetric Encryption?","<p>In asymmetric encryption, public keys can be used to encrypt messages sent to a device with the matching private key. I understand that this prevents sniffers from knowing the content of a message, but consider this: <br>
What keeps a hacker from using the public key to encrypt messages and pretend to be someone he\she is not? Say I am shopping on Amazon, and a hacker managed to capture amazon's public key when Amazon exchanged it with me. Couldn't this hacker pretend to be me by simply modifying the headers of his packets to look like they came from my computer? I know this doesn't happen, so what am I missing? </p>
","<blockquote>
  <p>What keeps a hacker from using the public key to encrypt messages and pretend to be someone he\she is not? Say I am shopping on Amazon, and a hacker managed to capture amazon's public key when Amazon exchanged it with me. Couldn't this hacker pretend to be me by simply modifying the headers of his packets to look like they came from my computer?</p>
</blockquote>

<p>Very good question.  TLS prevents this by creating sessions keys between the client and server during the handshake protocol.  There are two types of keys: one for encryption (typically AES) and one for <a href=""https://en.wikipedia.org/wiki/Message_authentication_code"" rel=""nofollow noreferrer"">message integrity / message authentication</a> (MAC) (typically HMAC).  All comms during the session are encrypted with the symmetric encryption key and MAC'ed with the MAC key.  Any data that is not properly signed with the MAC key is not accepted by the server.  Thus, only one who has these keys can communicate with the server for that session.</p>

<p>So the question then reduces to how an attacker can determine the encryption and MAC keys which are set up during the initial TLS handshake.  Note during the handshake, the server provides its public key via the certificate to the client, and the client verifies that the certificate is valid -- including that it belongs to the domain that is claimed in the certificate.  This allows the client to verify that it is talking to the right server assuming nobody can bypass PKI (i.e. cert authorities are doing the right thing and nobody can break the public key crypto).  Now different clients can set up different sessions with the server, but they all are done using a private key generated by each client and uniquely known by each client.  Therefore, each client sets up its session in a unique way using a key that is known only to them and nobody else.</p>

<p>There is more to the whole design if you want to dig deep, including how sequence numbers are used to prevent replay attacks.  But I hope you get the general idea.</p>
","86","<security><private-key><public-key>","1","2","4","2018-11-01 21:37:45","53109314","3","","7228860","","2018-11-01 20:20:41","2018-10-30 16:54:21",""
"57230243","How to get JSON data from the API key when the owner has given you the public and private key as well?","<p>I was practicing on API's but when I asked my senior to assign me a different task he gave me a PRIVATE KEY, PUBLIC KEY, SECURITY KEY, and a link! 
Actually my senior is also stuck on that so he asked me to search solution for this. 
Now I don't know where I have to start, simple parse I can but I've never used or even seen private, public, security type API. 
please answer the followings :
1) why we encrypt in the form of private-public
2) how to get data from private-public security type API key in android studio
thanks in advance !!
I could not try because even I don't know where to get started !!! below I have shown simple parsing </p>

<pre><code>package com.example.apitest1;

import android.app.ProgressDialog;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;        
import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;        
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;        
import java.util.ArrayList;
import java.util.List;
public class MainActivity extends AppCompatActivity {      
private static final String URL_link=""https://www.api.simplifiedcoding.in/course-apis/recyclerview/movies"";
private RecyclerView recyclerView;
private RecyclerView.Adapter adapter;
private List&lt;dataModel&gt; listitems;
@Override
protected void onCreate(Bundle savedInstanceState) {super.onCreate(savedInstanceState);setContentView(R.layout.activity_main);
recyclerView=findViewById(R.id.recyclerview);
recyclerView.setHasFixedSize(true);
recyclerView.setLayoutManager(new LinearLayoutManager(this));
listitems=new ArrayList&lt;&gt;();
loadRecyclerViewData();
adapter=new dataAdapter(listitems,this);
recyclerView.setAdapter(adapter);}
private void loadRecyclerViewData() {
final ProgressDialog progressDialog=new ProgressDialog(this);
progressDialog.setMessage(""loading data"");
progressDialog.show();
StringRequest stringRequest=new StringRequest(Request.Method.GET, URL_link,
new Response.Listener&lt;String&gt;() {
@Override
public void onResponse(String response) {
progressDialog.dismiss();
try {
JSONObject jsonObject=new JSONObject(response);
JSONArray jsonArray=jsonObject.getJSONArray(""movies"");
for (int i=0;i&lt;jsonArray.length();i++)
{
JSONObject object=jsonArray.getJSONObject(i);
dataModel list=new dataModel(object.getString(""title""),                                                object.getString(""language""));
listitems.add(list);                                    }
adapter=new dataAdapter(listitems,getApplicationContext());
recyclerView.setAdapter(adapter);
}
catch (JSONException e) {
e.printStackTrace();
}
}
}, new Response.ErrorListener() {
@Override
public void onErrorResponse(VolleyError error) {
}});
RequestQueue requestQueue= Volley.newRequestQueue(this);
requestQueue.add(stringRequest);
}
}
</code></pre>
","<p>For authentication, IMHO, you should override getHeaders , please try the following:</p>

<pre><code>@Override
public Map&lt;String, String&gt; getHeaders() throws AuthFailureError {
       Map&lt;String, String&gt; headers = new HashMap&lt;&gt;();                
       String credentials = ""username:password"";
       String auth = ""Basic ""+ Base64.encodeToString(credentials.getBytes(), Base64.NO_WRAP);
       headers.put(""Content-Type"", ""application/json"");
       headers.put(""Authorization"", auth);
       headers.put(""consumer_key"", oauth_consumer_key);
       headers.put(""consumer_secret"", oauth_consumer_secret);
       return headers;
}
</code></pre>
","85","<android><api><private><private-key>","0","0","1","2019-07-27 09:09:43","","0","","2649012","","2019-07-27 09:09:43","2019-07-27 07:53:01",""
"56237880","How to sign a xml document with a smartcard's private key using nodejs","<p>I want to digitaly sign a xml document. The problem is that I can't do it in the server side, since the certificate is read from a smart card reader. When the smart card is inserted, we can also access the certificates through the windows certificates store. I thought of using the nodejs packages <a href=""https://www.npmjs.com/package/win-ca"" rel=""nofollow noreferrer"">win-ca</a> to access the certificates and the <a href=""https://www.npmjs.com/package/xml-crypto"" rel=""nofollow noreferrer"">xml-crypto</a> to sign my xml document with the <a href=""https://en.wikipedia.org/wiki/XML_Signature"" rel=""nofollow noreferrer"">correct syntax</a>.</p>

<p>I'm able to access the user certificates with the following code:</p>

<pre><code>const ca = require('win-ca')
certsPem = []

ca({
  format: ca.der2.pem,
  store: ""MY"",
  ondata: cert =&gt; certsPem.push(cert)
})
</code></pre>

<p>But I also need to access the private key. If I could export the private key to a file, all I needed to do to read it and sign the xml with it is:</p>

<pre><code>var fs = require('fs')
var xml = fs.readFileSync(""xmlFile.xml"")
var key = fs.readFileSync(""privateKey.key"")

var SignedXml = require('xml-crypto').SignedXml
var sig = new SignedXml()
...
sig.signingKey = key
sig.computeSignature(xml)
...
</code></pre>

<p>But its impossible to export the private key from the smart card and store it in a file, the smart card simply doesn't allow it. Is there a way in nodejs for me to sign with the private key without having to read a private key from a file?</p>
","","83","<node.js><certificate><digital-signature><private-key><xml-signature>","0","","0","2019-05-23 16:32:17","","1","","11533497","","2019-05-23 16:32:17","2019-05-21 12:02:20",""
"27793441","Git: which key do I use (may not be by default)?","<p>In my local environment (Mac OS X) I have at my home folder the .ssh folder, where there are two keys: github_rsa and id_rsa; in addition, there is a known_hosts file saying some like:</p>

<pre><code>github.com,192.30.252.131 ssh-rsa blahblah
192.30.252.129 ssh-rsa blahlllblahhhh
...
</code></pre>

<p>Is there a way (command line preferred) for me to know which key my git command is using when interacting with Github or Bitbucket? If so, how?</p>

<p>Thanks.</p>
","<p>The <code>id_rsa.pub</code> file contains the RSA public key for your user (generally the key used for connecting to GitHub, if you follow their <a href=""https://help.github.com/articles/generating-ssh-keys/"" rel=""nofollow noreferrer"">tutorial</a>).  If you want to use the <code>github_rsa</code> key, you can change the key used to connect to GitHub by creating a new host definition in the <code>~/.ssh/config</code> file:</p>

<pre><code>Host github.com
    HostName github.com
    User git
    IdentityFile ~/.ssh/github_rsa
</code></pre>

<p>By the way, the <code>known-hosts</code> file contains the servers you have connected to and their public keys.</p>

<p>See also this SO question: <a href=""https://stackoverflow.com/questions/10455974/setting-up-ssh-keys-for-gibhub"">Setting up ssh keys for GibHub</a></p>
","83","<git><ssh><private-key><public-key>","1","1","2","2016-01-28 07:50:34","27793710","0","","2889276","","2016-01-28 07:50:34","2015-01-06 06:42:19",""
"27793441","Git: which key do I use (may not be by default)?","<p>In my local environment (Mac OS X) I have at my home folder the .ssh folder, where there are two keys: github_rsa and id_rsa; in addition, there is a known_hosts file saying some like:</p>

<pre><code>github.com,192.30.252.131 ssh-rsa blahblah
192.30.252.129 ssh-rsa blahlllblahhhh
...
</code></pre>

<p>Is there a way (command line preferred) for me to know which key my git command is using when interacting with Github or Bitbucket? If so, how?</p>

<p>Thanks.</p>
","<p>The known-host file that you have given in the question has the public ssh-keys of the respective servers.</p>

<p>The private-public key pair are supposed to be for authentication!</p>

<p>Your .ssh folder is supposed to have two keys 1. Private key and 2. Public key. Public key has extension .pub and private key dosen't have any! </p>

<p>So most probably the two files that you have are one is Public (Which will also be there on github) and private.</p>

<p>Anyhow To know which key your github is using you can do this:</p>

<ol>
<li>Find the public key in your github account and find its pair in your .ssh folder (i.e if you have maintained a proper nomenclature).</li>
<li>OR else Take your private key and run the command <code>ssh-keygen -y -f &lt;private key file&gt;</code>, it will create a public key. Compare the generated pub-key with your github!</li>
</ol>

<p>Hope this explains a lot more than the question for your future use! :)</p>
","83","<git><ssh><private-key><public-key>","1","1","2","2016-01-28 07:50:34","27793710","0","","2889276","","2016-01-28 07:50:34","2015-01-06 06:42:19",""
"16821569","MVC 4 - PK-Restriction insulted with derived classes","<p>This is my setup:</p>

<ul>
<li>Base class ""Asset"" with property ""ID""</li>
<li>Derived classes ""Bond"", ""Future"".</li>
</ul>

<p>I'm using table per type. Now, I when creating the 2nd Bond / Future, this exception is thrown on db.SaveChanges():</p>

<pre><code>An error occurred while saving entities that do not expose foreign key properties for their relationships. 
</code></pre>

<p>with detailed description stating that the Primary-Key restriction of table Bond was insulted (the key exists already).</p>

<p>The first entry in table bond has an ID of 0, so something is obviously wrong with the Primary Key.</p>

<p>I've tried the following:</p>

<ul>
<li><p>Base class ""Asset"" with property ID, Derived classes ""Bond"" &amp; ""Future"" without extra property IDs.</p></li>
<li><p>Base class ""Asset"" with property ID, Derived classes ""Bond"" &amp; ""Future"" with extra property IDs.</p></li>
<li><p>Base class ""Asset"" without property ID, Derived classes ""Bond"" &amp; ""Future"" with extra property IDs.</p></li>
<li><p>adding ""[KEY]""</p></li>
<li><p>naming they ID not ID but BondID, FutureID</p></li>
</ul>

<p>and have dropped and setup the database before testing each of these, but the exception is the same.</p>

<p>Other entities in my setup successfully get automatic and correct primary keys. I dont see what is wrong here.. <strong>How do I get correct primary keys?</strong> Thank you for any advice!</p>
","","83","<asp.net-mvc><asp.net-mvc-4><private-key>","1","","0","2013-06-02 05:56:41","","2","","727208","","2013-06-02 05:56:41","2013-05-29 18:44:21",""
"27403249","Is there any fast and simple cryption algorithm with public/private keys?","<p>RSA is not suitable for fast cryption. It is also hard to implement.</p>

<p>I want a fast and simple cryption algorithm with public and private keys, instead of using RSA algorithm.</p>

<p>Something like XOR cryption but a public key for encryption and a private key for decryption.</p>

<p>Is there any fast and simple cryption algorithm with public/private keys?</p>
","<p>ElGamal, RSA, Rabin and GM are the asymmetric encryption/decryption algorithms that I'm aware of.</p>

<p>All of these algorithms are pretty much equally hard to implement.</p>

<p>There are probably better places to post your question, as it doesn't deal with any specific coding issue.</p>

<p>Nevertheless, here is a short summary of the differences between these algorithms:</p>

<p><img src=""https://i.stack.imgur.com/9THek.png"" alt=""enter image description here""></p>
","83","<algorithm><private-key><public-key><crypt>","0","1","1","2014-12-10 14:43:26","","2","","","","","2014-12-10 14:15:54",""
"56000057","How to use RSA?","<p>I trying to use RSA to encrypt my data in Python.</p>

<p>I created two small (private and public) keys</p>

<pre><code>e : 14918179  N : 15372757
D : 7495819   N : 15372757
</code></pre>

<p>I tried to encrypt a small value (10) with those keys, and it worked. But the problem is that it takes a long time to do.
For example, I compared it to openssl by using a big key and long string and it worked under a second.
And I know there is a third library for using RSA (not a big fan of them).
I am trying to use this method to encrypt my data that is going to be sent to the server and it should do it under a second
How can I do it?</p>
","<p>I think in general your questions on performance are answered here. <a href=""https://en.m.wikipedia.org/wiki/Modular_exponentiation"" rel=""nofollow noreferrer"">wikipedia : modular exponentiation</a></p>

<p>The article describes</p>

<ul>
<li>Direct exponentiation</li>
<li>Memory efficient exponentiation</li>
<li>Binary exponentiation</li>
</ul>

<h2>Direct Exponentiation</h2>

<p>raise to the power e and take the modulo.
This is straight forward, but the size of the number pre modulo is extermely large.</p>

<h2>Memory efficient exponentiation</h2>

<p>Replacing the power operation with a multiply e times, allows the accumulated result to always be within the modulo range.  This limits the size of the <code>bignum</code> and speeds up the operation.</p>

<h2>Binary exponentiation</h2>

<p>If you convert the power to a binary number </p>

<p>if e = 13  => 1101
pow(n, 13) = pow( n, 8) * pow(n,4) * pow(n, 1)
So for an m bit exponent, then only about m operations need to be done.</p>

<p>Combining the memory efficient and binary exponentiation solves most of the performance.</p>

<p>Python offers an implementation of these improvements using the 3 argument power function e.g. </p>

<pre><code>&gt;&gt;&gt; import timeit
&gt;&gt;&gt; t = timeit.Timer( 'print(pow( 10,14918179, 15372757))' )
&gt;&gt;&gt; t.timeit(1)
10140931
0.06365180000000237

&gt;&gt;&gt; u = timeit.Timer( 'print(pow( 10,14918179) % 15372757)' )
&gt;&gt;&gt; u.timeit(1)
10140931
15.021656000000007
</code></pre>

<p>The 3 parameter of <code>pow</code> takes .06s whilst the 2 parameter version of <code>pow</code> takes 15 seconds.</p>
","82","<python><encryption><rsa><public-key-encryption><private-key>","1","1","1","2019-05-06 08:41:12","56000626","3","","1726797","","2019-05-06 07:02:31","2019-05-06 06:46:30",""
"38694381","Beanstalk private keys","<p>I have managed to lock myself out of ssh access to one of our boxes. I do know that one of our Beanstalk deployment public keys is in the authorised_keys file, so if I could just get the matching private key from Beanstalk I could get back on and avoid the long winded alternative.
Is there a way? There is nothing obvious in the admin login.</p>
","<p>From <a href=""http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html"" rel=""nofollow"">http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html</a></p>

<blockquote>
  <p>Note Amazon EC2 doesn't keep a copy of your private key; therefore, if
  you lose a private key, there is no way to recover it. If you lose the
  private key for an instance store-backed instance, you can't access
  the instance; you should terminate the instance and launch another
  instance using a new key pair. If you lose the private key for an
  EBS-backed Linux instance, you can regain access to your instance. For
  more information, see Connecting to Your Linux Instance if You Lose
  Your Private Key.</p>
</blockquote>
","82","<ssh><private-key><elastic-beanstalk>","0","0","1","2016-08-10 00:54:18","","0","","","","","2016-08-01 08:38:22",""
"52089541","Difficulty while using Python Paramiko to execute command on remote server","<p>Was trying to SSH from one linux server to another using Paramiko library but getting the </p>

<pre><code>    import sys
    import paramiko

    hostname =""****""
    password=""no password provided""
    source=""""
    username=""***""
    port=22

    key_file_path=""/root/.ssh/id_rsa""

    #printing key
    file=open(key_file_path,""r"")
    print file.read()



    try:
            ssh=paramiko.SSHClient()
            ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())





 ssh.connect(hostname,port,username,password,key_filename=key_file_path,passphrase=None)
            #ssh_session=ssh.get_transport().open_session()
            stdin,stdout,stderr = ssh.exec_command('uptime')
            output=stdout.readlines()
            error=stderr.readlines()

            print(""STDOUT output"")
            print(output)
            print(""output object type"")
            type(output)
            print(""STDERR output"")
            print(error)

    except Exception, e:
            print e
            print ""exception occoured""
</code></pre>

<p>Output :-</p>

<pre><code>STDOUT output :- []
output object type :- 
STDERR output [u'Connecting to **.**.**.***:****\r\n']
</code></pre>

<p>As I am new so i have searched all over the net and have build till this point but I'm stuck at this point and not finding as to why is the error please can anyone help me.....</p>

<p>And also have viewed all related questions but couldn't find as to why the error is occouring...</p>
","","81","<python><ssh><paramiko><private-key>","0","","0","2018-08-30 05:03:31","","9","1","","","","2018-08-30 05:03:31",""
"32975864","Is there way to programmatically determine if a private key is in encoded in DER or PEM?","<p>I was wondering if there is a way in javascript to determine if a key is encoded in DER or PEM without using the file extension (because it could  be misleading)?</p>
","<p>If simplify: DER is binary key data, PEM is base64 encoded DER + header like '-----BEGIN RSA PUBLIC KEY-----'. So, you can check, if you file starts with something like '-----BEGIN' it most likely PEM key.</p>
","81","<javascript><private-key>","0","1","1","2016-01-26 09:06:36","","3","","","","","2015-10-06 17:21:27",""
"55541714","How to access system private keys from a virtual service account?","<p>I'm working on a NT service that uses SChannel to support client TLS connections. Certificates are installed manually via Local Machine Certificate Manager (certlm.msc) into a custom cert store, called ""Public Hub Interface"". The service has already been in production for several months now and, apart from the issue below, is running smoothly.</p>

<p>Although everything works fine under LocalSystem, to maximize security, I'm trying to use a virtual service account, such as ""NT Service\Public Hub Interface"". However, because the account is so heavily restricted, the service no longer has access to the system's private keys, which, consequently, causes AcquireCredentialsHandle to return SEC_E_UNKNOWN_CREDENTIALS. I've tried manually and programmatically granting access to various file and registry objects, as outlined in the following links, but with partial success - CAPI certificates work, but not CNG.</p>

<p><a href=""https://social.msdn.microsoft.com/Forums/windowsdesktop/en-US/d2a477c4-c366-4a68-8014-83632651bc91/how-to-grant-an-account-access-to-the-certificate-in-a-service-store-programmatically?forum=windowssecurity"" rel=""nofollow noreferrer"">https://social.msdn.microsoft.com/Forums/windowsdesktop/en-US/d2a477c4-c366-4a68-8014-83632651bc91/how-to-grant-an-account-access-to-the-certificate-in-a-service-store-programmatically?forum=windowssecurity</a></p>

<p><a href=""https://docs.microsoft.com/en-us/windows/desktop/seccng/key-storage-and-retrieval"" rel=""nofollow noreferrer"">https://docs.microsoft.com/en-us/windows/desktop/seccng/key-storage-and-retrieval</a></p>

<p><a href=""https://docs.microsoft.com/en-us/windows/desktop/SecCrypto/modifying-key-container-access"" rel=""nofollow noreferrer"">https://docs.microsoft.com/en-us/windows/desktop/SecCrypto/modifying-key-container-access</a></p>

<p><a href=""https://www.codeguru.com/cpp/i-n/internet/security/article.php/c6211/Security-Certificates-Treatment-with-CryptoAPI.htm"" rel=""nofollow noreferrer"">https://www.codeguru.com/cpp/i-n/internet/security/article.php/c6211/Security-Certificates-Treatment-with-CryptoAPI.htm</a></p>

<p>There are others, but they all pretty much say the same things. Additionally, many of the solutions work on individual certs and assume direct access to them or, at least, knowledge of their locations. Unfortunately, this isn't the case for me, as the certs are installed externally via certlm, and, a separate, custom cert installation app is not in the game plan. Indeed, I'm more interested in accessing the containers, as opposed to working on their specific contents, if possible. Furthermore, there are many certs, of which none are known ahead of time and most are usually installed well after the service is in operation.</p>

<p>I'd rather not switch from the local machine's store provider to the service's (i.e. current user's) store provider, especially since I'm very close to release and don't have the time to modify/retest already working code, let alone re-import the certs as well as retrain operators on a new procedure. As such, I'm hoping there's a simple and reliable way to grant the service the same access to the system private keys that the LocalSystem account has.</p>

<p>Please note that the service is installed via a MSI package that uses an unmanaged C++ custom action DLL to perform advanced operations, such as configuring service recovery options and creating the cert store; I'm planning on using this same DLL to set up the required access during installation. That said, I'd prefer a programmatic solution to one that uses an external program (e.g. WinHttpCertCfg.exe or CertUtil.exe), which might not even work on the target system, or, would have to be included in the package if it doesn't yet exist.</p>

<p>Many thanks for any assistance.</p>
","","80","<winapi><visual-c++><windows-services><private-key><schannel>","1","","0","2019-04-06 04:44:16","","2","","10974588","","2019-04-06 04:44:16","2019-04-05 18:50:31",""
"56906764","JSch is unable to find the private key using addIdentity when using HTTP URL","<p>I have been using JSch to make SFTP connection to OpenSSH server and in this process when I am trying to add the privatekey as identity in the form of URI, the private key is not getting recognized.</p>

<p>When I try to run the URL from browsers, it is working properly.</p>

<p>I have tried all the way of using escape characters but did not work.</p>

<pre><code>Session session = null;
ChannelSftp channelSftp = null;

log.info(file.getOriginalFilename());
log.info(privatekey);
JSch jsch = new JSch();
jsch.addIdentity(this.privatekey);
log.info(""identity added "");
session = jsch.getSession(username,hostname,portno);
log.info(""Session Created"");
session.setPassword(password);

Properties config = new Properties();
config.put(""StrictHostKeyChecking"", ""no"");
session.setConfig(config);
session.setTimeout(60000);
session.connect();
log.info(""session connected....."");
channelSftp = (ChannelSftp) session.openChannel(""sftp"");
log.info(""Channel Opened....."");
log.info(channelSftp.toString());

channelSftp.setInputStream(System.in);
channelSftp.setOutputStream(System.out);
channelSftp.connect();
log.info(""Channel connected....."");
//channelSftp.cd(destination);
log.info(file.getOriginalFilename());
channelSftp.put(file.getInputStream(), file.getOriginalFilename(), ChannelSftp.OVERWRITE);
channelSftp.put(file.getInputStream(),file.getOriginalFilename());


channelSftp.disconnect();
session.disconnect();
</code></pre>

<p>I expect the key has to be added using add identity but unfortunately I get the below error</p>

<blockquote>
  <p>[https-jsse-nio-10443-exec-10] c.d.a.l.r.s.BlkCounterpartyServiceImpl   : Error Encountered is:com.jcraft.jsch.JSchException: java.io.FileNotFoundException: http:/staging.fileserver.com/properties/xyz/xyz/xyz.ppk (No such file or directory).</p>
</blockquote>

<p>The file is available in this location <a href=""http://staging.fileserver.com/properties/xyz/xyz/xyz.ppk"" rel=""nofollow noreferrer"">http://staging.fileserver.com/properties/xyz/xyz/xyz.ppk</a></p>
","<p>Documentation for <a href=""https://epaul.github.io/jsch-documentation/javadoc/com/jcraft/jsch/JSch.html#addIdentity-java.lang.String-"" rel=""nofollow noreferrer""><code>JSch.addIdentity</code> method</a> says:</p>

<blockquote>
  <p><code>prvkey</code> - the <strong>file name</strong> of the private key file. ...</p>
</blockquote>

<p><em>""file name""</em> = path to a <em>local file name</em>, not <em>HTTP URL</em>.</p>

<p>If you want to download a file from an <strong>HTTP</strong> server (what is a terrible idea from a security point of view), you have to code that.</p>
","80","<java><ssh><jsch><private-key>","0","0","1","2019-07-10 08:25:47","","0","1","850848","","2019-07-10 08:25:47","2019-07-05 16:50:20",""
"37225107","How to add SSL to opensift","<p>Hello I finally got my ssl certificate from wosign (namely: 1_root_bundle.crt and 2_mydomain.com.crt)</p>

<p>I don't know how to add them to openshift. I went to the applications and edited mydomain.com 
There I upload in <em>SSL Certificate the second crt (file2_mydomain.com.crt), on Certificate Private Key</em> I upload my private key (I tried .ppk and .key) and on Private Key Pass Phrase I type the password used for the private key.</p>

<p>The probelm is that after saving these I get an error at the Certificate Private Key: ""Invalid private key or pass phrase: Could not parse PKey: no start line.""</p>

<p>I simply wasted 4 hours and don't know how to make it work and couldn't find anything on the internet about this error.</p>

<p>I also tried to upload the CSR file in the certificate private key field without success and I used the Apache cert files.</p>

<p>Please help</p>
","","80","<ssl><ssl-certificate><openshift><redhat><private-key>","4","","0","2016-05-14 09:43:39","","1","2","","","","2016-05-14 09:43:39",""
"56351683","Gitlab SSH: Permission Denied, Despite correct key setup","<p>I'm trying to use Gitlab for the first time, and have been trying to set up my account to automatically ssh in. I've followed instructions and tried many different times, but no matter what, I can't ssh to gitlab properly.</p>

<p>I've tried deleting my id_rsa and id_rsa.pub files and regenerating keys, using the command line to copy the contents of id_rsa.pub to my Gitlab user settings (both with a newline and no newline at the end of the paste). I added my key using ssh-add. I'm running ssh -vvvv git@gitlab.com for verbosity and I just cannot connect succesfully for the life of me.</p>

<pre><code>OpenSSH_7.2p2 Ubuntu-4ubuntu2.8, OpenSSL 1.0.2g  1 Mar 2016
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: /etc/ssh/ssh_config line 19: Applying options for *
debug2: resolving ""gitlab.com"" port 22
debug2: ssh_connect_direct: needpriv 0
debug1: Connecting to gitlab.com [35.231.145.151] port 22.
debug1: Connection established.
debug1: identity file /home/jihan/.ssh/id_rsa type 1
debug1: key_load_public: No such file or directory
debug1: identity file /home/jihan/.ssh/id_rsa-cert type -1
debug1: key_load_public: No such file or directory
debug1: identity file /home/jihan/.ssh/id_dsa type -1
debug1: key_load_public: No such file or directory
debug1: identity file /home/jihan/.ssh/id_dsa-cert type -1
debug1: key_load_public: No such file or directory
debug1: identity file /home/jihan/.ssh/id_ecdsa type -1
debug1: key_load_public: No such file or directory
debug1: identity file /home/jihan/.ssh/id_ecdsa-cert type -1
debug1: key_load_public: No such file or directory
debug1: identity file /home/jihan/.ssh/id_ed25519 type -1
debug1: key_load_public: No such file or directory
debug1: identity file /home/jihan/.ssh/id_ed25519-cert type -1
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_7.2p2 Ubuntu-4ubuntu2.8
debug1: Remote protocol version 2.0, remote software version OpenSSH_7.2p2 Ubuntu-4ubuntu2.8
debug1: match: OpenSSH_7.2p2 Ubuntu-4ubuntu2.8 pat OpenSSH* compat 0x04000000
debug2: fd 3 setting O_NONBLOCK
debug1: Authenticating to gitlab.com:22 as 'git'
debug3: hostkeys_foreach: reading file ""/home/jihan/.ssh/known_hosts""
debug3: record_hostkey: found key type ECDSA in file /home/jihan/.ssh/known_hosts:3
debug3: load_hostkeys: loaded 1 keys from gitlab.com
debug3: order_hostkeyalgs: prefer hostkeyalgs: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521
debug3: send packet: type 20
debug1: SSH2_MSG_KEXINIT sent
debug3: receive packet: type 20
debug1: SSH2_MSG_KEXINIT received
debug2: local client KEXINIT proposal
debug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,ext-info-c
debug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa
debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc
debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc
debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1
debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1
debug2: compression ctos: none,zlib@openssh.com,zlib
debug2: compression stoc: none,zlib@openssh.com,zlib
debug2: languages ctos: 
debug2: languages stoc: 
debug2: first_kex_follows 0 
debug2: reserved 0 
debug2: peer server KEXINIT proposal
debug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1
debug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519
debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com
debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com
debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1
debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1
debug2: compression ctos: none,zlib@openssh.com
debug2: compression stoc: none,zlib@openssh.com
debug2: languages ctos: 
debug2: languages stoc: 
debug2: first_kex_follows 0 
debug2: reserved 0 
debug1: kex: algorithm: curve25519-sha256@libssh.org
debug1: kex: host key algorithm: ecdsa-sha2-nistp256
debug1: kex: server-&gt;client cipher: chacha20-poly1305@openssh.com MAC: &lt;implicit&gt; compression: none
debug1: kex: client-&gt;server cipher: chacha20-poly1305@openssh.com MAC: &lt;implicit&gt; compression: none
debug3: send packet: type 30
debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
debug3: receive packet: type 31
debug1: Server host key: ecdsa-sha2-nistp256 SHA256:HbW3g8zUjNSksFbqTiUWPWg2Bq1x8xdGUrliXFzSnUw
debug3: hostkeys_foreach: reading file ""/home/jihan/.ssh/known_hosts""
debug3: record_hostkey: found key type ECDSA in file /home/jihan/.ssh/known_hosts:3
debug3: load_hostkeys: loaded 1 keys from gitlab.com
debug3: hostkeys_foreach: reading file ""/home/jihan/.ssh/known_hosts""
debug3: record_hostkey: found key type ECDSA in file /home/jihan/.ssh/known_hosts:4
debug3: load_hostkeys: loaded 1 keys from 35.231.145.151
debug1: Host 'gitlab.com' is known and matches the ECDSA host key.
debug1: Found key in /home/jihan/.ssh/known_hosts:3
debug3: send packet: type 21
debug2: set_newkeys: mode 1
debug1: rekey after 134217728 blocks
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug3: receive packet: type 21
debug1: SSH2_MSG_NEWKEYS received
debug2: set_newkeys: mode 0
debug1: rekey after 134217728 blocks
debug2: key: /home/jihan/.ssh/id_rsa (0x55e032d43000), agent
debug2: key: jihany@nvidia.com (0x55e032d363a0), agent
debug2: key: /home/jihan/.ssh/id_dsa ((nil))
debug2: key: /home/jihan/.ssh/id_ecdsa ((nil))
debug2: key: /home/jihan/.ssh/id_ed25519 ((nil))
debug3: send packet: type 5
debug3: receive packet: type 7
debug1: SSH2_MSG_EXT_INFO received
debug1: kex_input_ext_info: server-sig-algs=&lt;rsa-sha2-256,rsa-sha2-512&gt;
debug3: receive packet: type 6
debug2: service_accept: ssh-userauth
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug3: send packet: type 50
debug3: receive packet: type 51
debug1: Authentications that can continue: publickey
debug3: start over, passed a different list publickey
debug3: preferred gssapi-keyex,gssapi-with-mic,publickey,keyboard-interactive,password
debug3: authmethod_lookup publickey
debug3: remaining preferred: keyboard-interactive,password
debug3: authmethod_is_enabled publickey
debug1: Next authentication method: publickey
debug1: Offering RSA public key: /home/jihan/.ssh/id_rsa
debug3: send_pubkey_test
debug3: send packet: type 50
debug2: we sent a publickey packet, wait for reply
debug3: receive packet: type 51
debug1: Authentications that can continue: publickey
debug1: Offering RSA public key: jihany@nvidia.com
debug3: send_pubkey_test
debug3: send packet: type 50
debug2: we sent a publickey packet, wait for reply
debug3: receive packet: type 51
debug1: Authentications that can continue: publickey
debug1: Trying private key: /home/jihan/.ssh/id_dsa
debug3: no such identity: /home/jihan/.ssh/id_dsa: No such file or directory
debug1: Trying private key: /home/jihan/.ssh/id_ecdsa
debug3: no such identity: /home/jihan/.ssh/id_ecdsa: No such file or directory
debug1: Trying private key: /home/jihan/.ssh/id_ed25519
debug3: no such identity: /home/jihan/.ssh/id_ed25519: No such file or directory
debug2: we did not send a packet, disable method
debug1: No more authentication methods to try.
Permission denied (publickey).
</code></pre>

<p>It has to be some small dumb mistake somewhere, but I just can't figure it out. If it helps, when I do ssh-add -l, my fingerprints look like a hash for some reason.</p>
","<p>Do check that:</p>

<ul>
<li>when you <a href=""https://docs.gitlab.com/ee/gitlab-basics/create-your-ssh-keys.html#creating-your-ssh-keys"" rel=""nofollow noreferrer"">copy the public key in your GitLab settings profile</a>, it is copied as <em>one</em> line</li>
<li>when you <a href=""https://docs.gitlab.com/ee/ssh/README.html#rsa-ssh-keys"" rel=""nofollow noreferrer"">generate your RSA SSH key</a>, you use the <a href=""https://stackoverflow.com/a/53645530/6309"">old legacy profile (in case the new OPENSSH one with 70 chars per line is not well interpreted)</a></li>
</ul>

<p>That is</p>

<pre><code>ssh-keygen -m PEM -t rsa -P ""
</code></pre>
","80","<ssh><gitlab><rsa><private-key><public-key>","1","0","1","2019-07-03 20:20:09","","0","1","7351393","","2019-05-29 16:57:13","2019-05-29 00:42:09",""
"10297749","Digital Certificate Security","<p>I've been google'ing about the security of the digital certificates and I wasn't able to find an answer to my question: is it secure to use one private key for the signing of multiple certificates? Thanks.</p>
","<p>That is exactly what all Certificate Authorities do. SSL servers do the same all the time, and individuals that sign multiple documents with one certificate's private key do this. 
So of course this is secure. </p>
","80","<security><private-key><digital-certificate>","0","3","1","2012-04-24 12:55:30","10298275","0","","","","","2012-04-24 12:23:41",""
"49956262","How to put a point on an elliptic curve using javascript","<p>So i m trying to send a message from server to client and i m trying to put that message on the elliptic curve as a point and then make the addition of that point to itself K times ! i couldn't find a library in javascript that make the addition of one point to itself !so i m trying to find some solutions in javascript please ! </p>

<pre><code>i need library in javascript thats can :

-put a ""message"" on the elliptic curve as a point
-make the addition of two points(or the addition of the same point to itself) on the elliptic curve to get another Point P+P=Q
</code></pre>
","","79","<javascript><encryption><point><private-key><elliptic-curve>","0","","0","2018-04-21 13:27:12","","2","","","","","2018-04-21 13:27:12",""
"48399389","Does wrapping a line affect the private/public key in PHP?","<p>I received a public key in the following format:</p>

<pre><code>$publicKey = '-----BEGIN PUBLIC KEY
MIGfMA0GCSqGSIb3DQEBAQUAAASDF4QKBgQCMuZSztSi6iBLLxHquRomOXLW4WVtoovj8QqbUR8Bp1EiPsvN9Z9o4gCStacMAGWdvxH+V2vCZ7C66S+h2GTG45VBMfUeIfpc+Ta2593R10J34Vv+uKhPmTYNXASDH4howZMc0SK18ol7be63VtlwXGakNkLXsucGlTnfkWwGoQIDAQAB
-----END PUBLIC KEY-----';


$publicKey = '-----BEGIN PUBLIC KEY-----
MIGfMA0GCSqGSIb3DQEBAQUAAASDF4QKBgQCMuZSztSi6iBLLx
HquRomOXLW4WVtoovj8QqbUR8Bp1EiPsvN9Z9o4gCStacMAGWd
vxH+V2vCZ7C66S+h2GTG45VBMfUeIfpc+Ta2593R10J34Vv+uK
hPmTYNXASDH4howZMc0SK18ol7be63VtlwXGakNkLXsucGlTnf
kWwGoQIDAQAB
-----END PUBLIC KEY-----';
</code></pre>

<p>The difference is that the first one is not wrapped, otherwise, both strings are the same.</p>

<p>Both of them can do the encryption, but I am not sure if they are the same ones because of the line breaks.<br>
I don't have the private key.</p>

<p>Does wrapping the key affect the value of the key?</p>
","","79","<php><rsa><private-key><public-key>","1","","0","2018-01-23 11:00:07","","2","1","3578036","","2018-01-23 11:00:07","2018-01-23 10:25:20",""
"49814943","Access keystore files in a JAR file","<p>I have created a keystore(.jks) and I was accessing it in my IDE using the following code </p>

<pre><code>KeyStore ks = KeyStore.getInstance(""JKS"");
FileInputStream ksfis = new FileInputStream(keyStorePath);
BufferedInputStream ksbufin = new BufferedInputStream(ksfis);
ks.load(ksbufin, spass.toCharArray());
</code></pre>

<p>but when I made the JAR file it gave an error. After searching for issue I came to know that I had to use         </p>

<pre><code>InputStream is = this.getClass().getClassLoader().getResourceAsStream(FilePath);
</code></pre>

<p>But this code gives me <code>InputStream</code> and my code expects <code>ksfis</code> to be <code>FileInputStream</code>. Can someone suggest me alternative to the code that expects <code>FileInputStream</code>.</p>

<p><strong>UPDATE - MCVE</strong></p>

<pre><code>package com.token;

import java.io.BufferedInputStream;
import java.io.InputStream;
import java.security.KeyPair;
import java.security.KeyStore;
import java.security.PrivateKey;
import java.security.PublicKey;

public class test {

   static final String keyStorePath = ""Keys/keystore_pkcs8.jks"";
   static final String alias = ""mykey"";
   static final String spass = ""passwordhere"";
   static final String kpass = ""passwordhere"";

   private static KeyPair getKeyPairFromKeyStore() throws Exception {

      KeyStore ks = KeyStore.getInstance(""JKS"");

    //problem with this part of code
    Config conf = new Config();
    InputStream ksfis = conf.getFileInputStream(keyStorePath);
    BufferedInputStream ksbufin = new BufferedInputStream(ksfis);
    ks.load(ksbufin, spass.toCharArray());

    PrivateKey privateKey = (PrivateKey) ks.getKey(alias, kpass.toCharArray());
    java.security.cert.Certificate cert = ks.getCertificate(alias);
    PublicKey publicKey = cert.getPublicKey();

    return new KeyPair(publicKey, privateKey);
}

public static void main(String[] args) {
    try {
        KeyPair ks = getKeyPairFromKeyStore();
    }
    catch(Exception e) {
        System.out.println(e.toString());
    }
  } 
}
</code></pre>

<p>Config class - </p>

<pre><code>package com.token;

import java.io.InputStream;

class Config {
    public InputStream getFileInputStream(String FilePath) throws Exception{
        InputStream is = this.getClass().getClassLoader().getResourceAsStream(FilePath);
        return is;
    }
}
</code></pre>

<p><strong>UPDATE - Error with stackTrace</strong></p>

<pre><code>java.io.IOException: Stream closed
java.io.IOException: Stream closed
at java.io.BufferedInputStream.getInIfOpen(BufferedInputStream.java:159)
at java.io.BufferedInputStream.read1(BufferedInputStream.java:284)
at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
at java.io.BufferedInputStream.read(BufferedInputStream.java:265)
at java.security.DigestInputStream.read(DigestInputStream.java:124)
at java.io.DataInputStream.readInt(DataInputStream.java:387)
at sun.security.provider.JavaKeyStore.engineLoad(JavaKeyStore.java:653)
at sun.security.provider.JavaKeyStore$JKS.engineLoad(JavaKeyStore.java:56)
at sun.security.provider.KeyStoreDelegator.engineLoad(KeyStoreDelegator.java:224)
at sun.security.provider.JavaKeyStore$DualFormatJKS.engineLoad(JavaKeyStore.java:70)
at java.security.KeyStore.load(KeyStore.java:1445)
at com.token.test.getKeyPairFromKeyStore(test.java:25)
at com.token.test.main(test.java:36)
</code></pre>
","","78","<java><inputstream><keystore><private-key><fileinputstream>","0","","0","2018-04-13 11:27:21","","22","1","9474408","","2018-04-13 11:27:21","2018-04-13 10:31:43","2018-04-13 10:36:46"
"42278974","How do I stop using rsa key for git pull?","<p>The repository was cloned using a key, but now I need to do a pull using user and password authentication, and doing the git pull won't ask for credentials.</p>

<p>How do I force the pull to ask me for credentials?</p>
","<p>I found the solution:</p>

<pre><code>git remote set-url origin https://github.com/USERNAME/OTHERREPOSITORY.git
</code></pre>

<p>Found it here:
<a href=""https://help.github.com/articles/changing-a-remote-s-url/"" rel=""nofollow noreferrer"">https://help.github.com/articles/changing-a-remote-s-url/</a></p>
","77","<git><credentials><private-key><git-pull>","0","0","1","2017-02-16 18:35:18","42278975","0","","1816580","","2017-02-16 18:35:03","2017-02-16 16:05:43",""
"57403322","How to Decrypt private key(String) with passphrase - java","<p>I am trying to decrypt the private key in a string. The key also has a passphrase. My Private key file has the following header and footer:</p>

<pre><code>-----BEGIN ENCRYPTED PRIVATE KEY-----\n
-----END ENCRYPTED PRIVATE KEY-----\n
</code></pre>

<p>I could see more <code>'\n'</code> new line inside the private key. I hope it's in pem format.</p>

<p>The last line of the following code gives me this error:</p>

<blockquote>
  <p>PBE parameter parsing error: expecting the object identifier for AES
  cipher</p>
</blockquote>

<p>This is the code I tried:</p>

<pre><code>String privateKeyPEM = a;
privateKeyPEM = privateKeyPEM.replace(""-----BEGIN ENCRYPTED PRIVATE KEY-----\n"", """");
privateKeyPEM = privateKeyPEM.replace(""-----END ENCRYPTED PRIVATE KEY-----\n"", """");
byte[] encoded = Base64.getMimeDecoder().decode(privateKeyPEM);
EncryptedPrivateKeyInfo pkinfo = new EncryptedPrivateKeyInfo(encoded);
</code></pre>

<p>I have also tried using <strong>bouncy castle</strong> but I am getting the following error</p>

<blockquote>
  <p>class ""org.bouncycastle.asn1.pkcs.RSAPublicKey""'s signer information
  does not match signer information of other classes in the same package</p>
</blockquote>

<p>Note: I'm using jdk11</p>

<p>I would appreciate the help. Thanks</p>
","","77","<java><encryption><bouncycastle><private-key>","0","","0","2019-08-08 01:24:13","","4","","1563833","","2019-08-08 01:24:13","2019-08-07 23:18:23",""
"55774709","HyperLedger Composer 0.19 How to encrypt/decrypt data using private/public key?","<p>I have a usecase where I have to encrypt data using a participant's public key before adding the data to the chain.</p>

<p>I have already implemented issuing identity and creating cards through following the example here.
<a href=""https://github.com/hyperledger/composer-knowledge-wiki/blob/latest/knowledge.md#card-api-errors--resolutions"" rel=""nofollow noreferrer"">https://github.com/hyperledger/composer-knowledge-wiki/blob/latest/knowledge.md#card-api-errors--resolutions</a></p>

<p>The problem is the example only returns certificate and private key.</p>

<p>However, I need public key to encrypt data before adding to the chain so I can decrypt it with the private key later (when retrieving).</p>

<p>Can anyone please help me out? Am I missing something here?</p>

<p>Thanks!</p>
","","77","<encryption><hyperledger><hyperledger-composer><private-key><public-key>","0","","0","2019-04-20 14:56:53","","3","","","","","2019-04-20 14:56:53",""
"52697333","org.bitcoinj.core.AddressFormatException: Illegal character 0 at position 0 when converting 66 characters long private key to ECKey","<p>I have a <code>bitcoin</code> private key which is 66 characters long, including a <code>0x</code> prefix and I need to convert it to a <code>ECKey</code>. I tried this: </p>

<pre><code>String private = ""0x...""; // 66 characters total
DumpedPrivateKey dpk = DumpedPrivateKey.fromBase58(null, wif);
ECKey key = dpk.getKey();
</code></pre>

<p>it throws </p>

<pre><code>org.bitcoinj.core.AddressFormatException: Illegal character 0 at position 0
</code></pre>

<p>If I remove the <code>0x</code> the same error is thrown for any other <code>0</code> in the <code>private</code> string. </p>

<p>The 66 characters long key is something that comes from outside of our system, so out of my control. What am I missing here? How do I convert it so I could use the <code>ECKey</code> to sign transactions? </p>
","","76","<bitcoin><private-key><java-security><bitcoinj>","0","","0","2018-10-08 07:25:53","","2","","","","","2018-10-08 07:25:53",""
"53550952","How to configure JWT token from openam?","<p>I am trying to call the /oauth2/authorize endpoint with parameter jwt, such as:
<a href=""https://openam.example.com:8443/openam/oauth2/realms/root/authorize?response_type=code&amp;client_id=myClient&amp;scope=profile&amp;redirect_uri=http://www.example.net&amp;request="" rel=""nofollow noreferrer"">https://openam.example.com:8443/openam/oauth2/realms/root/authorize?response_type=code&amp;client_id=myClient&amp;scope=profile&amp;redirect_uri=http://www.example.net&amp;request=</a>${jwt_value}
but i don’t know how to use&amp;generate the public key and private key. Does anyone have this setup or know how to set it up? I shall be much obliged if you tell me more details about it. thanks very much anyhow.
If you need more info on this please let me know.</p>

<p>Thanks in Advance!
Wiliy</p>
","","74","<jwt><private-key><public-key><openam>","0","","0","2018-11-30 03:54:04","","1","","10725855","","2018-11-30 03:54:04","2018-11-30 03:48:26",""
"26304028","Error in Registering Recaptcha Key for Website From Google.com","<p>I wanted a public and private key for our Website but I m not able to register it from Google Site for Recaptcha 
After I registering my Website I get an Error </p>

<blockquote>
  <p>We are having a problem processing your request. Please try again
  later.</p>
</blockquote>

<p>How Should i get Public and Private Key pair for the website ?</p>
","","73","<recaptcha><private-key><public-key>","0","","0","2014-10-10 16:32:55","","2","","","","","2014-10-10 16:32:55",""
"55630354","How to import key pair to keystore in java and make key not exportable","<p>I'm adding a key pair (private key and certificate) to windows key store in java. I need to make private key not exportable. Java code which does this makes private key exportable. How can I change this?</p>

<p>I didn't find any properties or attributes in which this can be changed. Keystore.store method gets LoadStoreParameter but it looks like it's about setting password for private key.</p>

<pre><code>PrivateKey privateKey=...;
Certificate certificate=...;

KeyStore keyStore = KeyStore.getInstance(""Windows-MY"");
keyStore.load(null);
keyStore.setKeyEntry(""alias"",privateKey,"""".toCharArray(),new java.security.cert.Certificate[]{certificate});
</code></pre>
","<p>Access to windows cryptographic services is managed by the SunMSCAPI provider. It provides a bridge between java JCE API and windows services. See <a href=""https://docs.oracle.com/javase/7/docs/technotes/guides/security/SunProviders.html#SunMSCAPI"" rel=""nofollow noreferrer"">documentation</a> </p>

<blockquote>
  <p>The SunMSCAPI provider enables applications to use the standard JCA/JCE APIs to access the native cryptographic libraries, certificates stores and key containers on the Microsoft Windows platform. The SunMSCAPI provider itself does not contain cryptographic functionality, it is simply a conduit between the Java environment and the native cryptographic services on Windows.</p>
</blockquote>

<p>The <code>WINDOWS-MY</code> keystore in SunMSCAPI uses the standard Java <a href=""https://docs.oracle.com/javase/7/docs/api/java/security/KeyStore.html"" rel=""nofollow noreferrer"">KeyStore</a> API, and it does not define any type of ""extractable"" property, so I'm afraid you will not be able to establish it.</p>
","72","<java><keystore><private-key>","1","1","1","2019-04-11 13:07:34","55632400","0","","","","","2019-04-11 10:30:35",""
"36326376","How to prevent other from tampering response msg in HTTPS?","<p>In HTTPS, only server hold the private key and is able to decode the message. 
My doubt is whether server will encode the response before sending it to client?<br>
If so, how does the client decode it, since it does not have the private key?<br>
If not, how does it prevent others from tampering the response message?</p>
","<p>I think I can answer my question by myself. The server will encrypt the response with public-key and send it to client. Other than that, the server will send a checksum as well, which acts as the signature. The checksum is generated based on the private-key that only server knows, therefore it is hard for others to fabricate it. Thus, if anyone trying tampering the message, it won't match the checksum. </p>
","72","<https><private-key>","1","0","1","2016-03-31 07:49:46","","1","1","1796503","","2016-03-31 07:20:46","2016-03-31 07:05:19",""
"46624816","How to keep checking if a calculated number is an integer or not?","<p>I would like to keep calculating <code>d</code> until it's an integer, if it is not an integer then increment a number by 1, if it is then return the integer. I have tried this but I keep getting the float number returned as an integer. (e.g. 19.4 will be returned as 19 but i just want to keep calculating it until i get an integer). I have tried the following code:</p>

<pre><code>int calcD(int tn, int e){
    int z;
    float d;
    z = 1;
    while (true){
        d = (1+(z*tn))/e;
        if (fmodf(d, 1)!= 0){
            z++;
        }else{
            break;
        }
    } 
    return d;
}
</code></pre>

<p>Thank you for any help!</p>
","<p>Just compare the value against the value you get when you round it.</p>

<pre><code>float f = ...
float precision = 0.00001;

if (fabsf(f - roundf(f)) &lt; precision) {
    printf(""integer\n"");
} else {
    printf(""not integer\n"");
}
</code></pre>
","72","<c><rsa><private-key>","-2","0","2","2019-02-06 16:03:15","46625033","6","0","5106545","","2019-02-06 16:03:15","2017-10-07 20:30:10",""
"46624816","How to keep checking if a calculated number is an integer or not?","<p>I would like to keep calculating <code>d</code> until it's an integer, if it is not an integer then increment a number by 1, if it is then return the integer. I have tried this but I keep getting the float number returned as an integer. (e.g. 19.4 will be returned as 19 but i just want to keep calculating it until i get an integer). I have tried the following code:</p>

<pre><code>int calcD(int tn, int e){
    int z;
    float d;
    z = 1;
    while (true){
        d = (1+(z*tn))/e;
        if (fmodf(d, 1)!= 0){
            z++;
        }else{
            break;
        }
    } 
    return d;
}
</code></pre>

<p>Thank you for any help!</p>
","<p>Your question is how to tell if the result of division is an integer. That means checking if the numerator is a multiple of the denominator. That's pretty simple -- find the closest multiplier, multiply the denominator by it, and see if you get the numerator.</p>

<p>So:</p>

<pre><code>while (true){
    num = 1 + (z * tn);
    d = num / e;
    if (d * e != num)
        z++;
    }else{
        break;
    }
</code></pre>
","72","<c><rsa><private-key>","-2","2","2","2019-02-06 16:03:15","46625033","6","0","5106545","","2019-02-06 16:03:15","2017-10-07 20:30:10",""
"56215058","How can I convert .csr into .pem file format as I have to submit csr in pem format","<p>I have to submit CSR in pem format.</p>

<p>I have generated CSR using OpenSSL but got stuck in converting it into PEM format.</p>

<p>I have to obtain example - <code>csr.pem</code> from <code>example.csr</code>. How it can be done?</p>
","<p>OpenSSL creates CSRs in PEM format by default.</p>

<p>If you generated the CSR <em>without</em> the <code>-outform</code> option, the CSR will already be in PEM format.</p>

<p>If you did use the <code>-outform DER</code> option, you can convert with:</p>

<pre><code>openssl req -inform DER -in &lt;original CSR file&gt; -out &lt;converted CSR file&gt;
</code></pre>

<p>The <code>.pem</code> file extension is just a name.  If the file is in PEM format, simply change the extension on the file from <code>.csr</code> to <code>.pem</code>.</p>
","71","<private-key><pem><csr>","0","0","1","2019-05-20 10:43:25","","1","","1925616","","2019-05-20 10:43:25","2019-05-20 05:58:11",""
"25359917","test if a specific key was used to sign an .apk file","<p>I have a .key file and a signed .apk file (android phongap application built using phonegap build).</p>

<p>How can I check if the .apk was signed using that key?</p>
","<p>You could retrieve and compare the fingerprints of the public keys included in the apk file and your key file.</p>

<p>For the apk:</p>

<ol>
<li>Unpack the file <code>/META-INF/CERT.RSA</code> from the apk.</li>
<li>Use <code>keytool -printcert -file CERT.RSA</code> to compute the SHA1 + MD5 fingerprints.</li>
</ol>

<p>For the key file:</p>

<ol>
<li>Run <code>keytool -list -v -keystore &lt;keystore file&gt; -alias &lt;key alias&gt;</code>.</li>
<li>Input your keystore password.</li>
<li>This will output the SHA1 + MD5 fingerprints. If you omit the <code>-v</code> only the MD5 fingerprint will be printed.</li>
</ol>
","70","<android><apk><private-key>","0","1","1","2014-08-18 18:36:05","25369892","0","","2367849","","2014-08-18 18:25:30","2014-08-18 09:20:14",""
"46612471","Newly created file becomes 0 kb (data gets overwritten to nothing) on reboot in Linux","<p>I'm having a strange problem that's driving me crazy!
The task in hand is to start one set of files during the first login of ""root"" user and another set of files during the second login of the same user. I decided to use the "".profile"" and "".bashrc"" files and to reload the "".bashrc"" file towards the end of the task happening during the first login. </p>

<p>During the first login, I create a private key and certificate signing request, and call an API to get the certificate. I store this certificate and private key in a file location and then modify the "".bashrc"" to invoke the second set of files, which make use of this certificate and key to authenticate an application to run.</p>

<p>The problem is that the certificate and key are overwritten and become null randomly after the first boot. I've attached the code below for your review.</p>

<p><strong>FIRST SET OF FILES</strong></p>

<p><em>"".profile"" script</em></p>

<pre><code># .bash_profile
umask 022
if [ -f ~/.bashrc ]; then
    source ~/.bashrc
fi
</code></pre>

<p><em>"".bashrc"" script</em></p>

<pre><code>/myFolder/backgroundTask1.sh &amp;
/myFolder/certificateGenerator.sh
</code></pre>

<p><em>backgroundTask1.sh script</em></p>

<pre><code>pipe=/myFolder/testpipe
if [[ ! -p $pipe ]]; then
    mkfifo $pipe
fi

while true
do
    ## Do some status LED blinking task here
done &amp;

while true
do
    if read line &lt; $pipe; then
        if [[ ""$line"" == 'success' ]]; then
           ## Kill the background LED blinking task created in the above while loop
           kill $!
           rm $pipe
           exit
        elif [[ ""$line"" == 'failed' ]]; then
           kill $!
           rm $pipe
           exit
        fi
    fi
done
</code></pre>

<p><em>certificateGenerator.sh script</em> </p>

<p><strong>PLEASE NOTE THE LAST FEW LINES WHERE I MODIFY THE BASHRC SCRIPT</strong></p>

<p><strong>Please also note the files /anotherFolder/myKey.key and /anotherFolder/myCert.crt</strong></p>

<pre><code>#!/bin/bash
## Named pipe location for communicating to backgroundTask1
pipe=/myFolder/testpipe
openssl req -new -newkey rsa:2048 -nodes -out certificateSigningRequest.csr -keyout /anotherFolder/myKey.key -subj ""/C=myCountry/ST=myState/L=myCity/O=myCompany/OU=myOU/CN=myDevice""
cert_req=$(&lt;$certificateSigningRequest.csr)

## Get AD token from Azure for talking to my custom API hosted on Azure
response=$(curl -o - -s -w ""%{http_code}\n"" -X POST \
    https://login.microsoftonline.com/myCompany.onmicrosoft.com/oauth2/token \
    -H 'content-type: application/x-www-form-urlencoded' \
    -d 'grant_type=client_credentials&amp;resource=https%3A%2F%2Fmanagement.core.windows.net%2F&amp;client_id=myClientID&amp;client_secret=mySecret')
if [ $?==0 ]; then
    status=$(echo $response | tail -c 4)
    body=${response::-3}
    token=$(echo $body | jq -r '.access_token')
fi

## Send CSR to my custom API to get certificate
response=$(jq -n --arg csr ""$cert_req"" \
             '{
                 cert: {
                     csr: $csr
                 }
             }' |
         curl -o - -s -w ""%{http_code}\n"" -X POST \
             https://myCustomAPI.azurewebsites.net/api/v1/customEndpoint \
             -H ""authorization: Bearer $token"" \
             -H ""content-type: application/json"" \
             -d @-
)        

## Parse the response to find out if the request succeeded
if [ $?==0 ]; then
    destCertDir=/anotherFolder/myCert.crt
    status=$(echo $response | tail -c 4)
    body=${response::-3}
    cert=$(echo $body | jq -r '.certificate')
    if [ ""$status"" == ""$http_success"" ]; then
        echo ""$cert"" &gt; ""$destCertDir""
        ## Change .bashrc for next boot
        echo '/myFolder/backgroundTask2.sh &amp;' &gt; ~/.bashrc
        echo '/myFolder/applicationAuthenticator.sh' &gt;&gt; ~/.bashrc
        echo ""success"" &gt; $pipe
        exit
    fi
fi
</code></pre>

<p><strong>SECOND SET OF FILES</strong></p>

<p><em>"".profile"" script</em></p>

<pre><code># .bash_profile
umask 022
if [ -f ~/.bashrc ]; then
    source ~/.bashrc
fi
</code></pre>

<p><em>"".bashrc"" script</em></p>

<pre><code>/myFolder/backgroundTask2.sh &amp;
/myFolder/applicationAuthenticator.sh
</code></pre>

<p><em>backgroundTask2.sh script</em></p>

<pre><code>pipe=/myFolder/testpipe2
if [[ ! -p $pipe ]]; then
    mkfifo $pipe
fi

while true
do
    ## Do some status LED blinking task here
done &amp;

while true
do
    if read line &lt; $pipe; then
        if [[ ""$line"" == 'success' ]]; then
           ## Kill the background LED blinking task created in the above while loop
           kill $!
           rm $pipe
           exit
        elif [[ ""$line"" == 'failed' ]]; then
           kill $!
           rm $pipe
           exit
        fi
    fi
done
</code></pre>

<p><em>applicationAuthenticator.sh script</em></p>

<p><strong>PLEASE NOTE HOW I MODIFY BASHRC TO STARTUP NORMAL FROM NEXT REBOOT TOWARDS THE END OF THIS SCRIPT</strong></p>

<pre><code>#!/bin/bash
## Named pipe location for communicating to backgroundTask2
pipe=/myFolder/testpipe2

response=$(curl https://myProduct/myCustomAPI.com \
           --cert /anotherFoler/myCert.crt --key /anotherFolder/myKey.key \
           -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8' \
           -d 'data=xxx')
if [[ $response == 204 ]; then
    echo '' &gt; ~/.bashrc
    echo ""success"" &gt; $pipe
    exit
else
    echo ""failed"" &gt; $pipe
    exit
fi
</code></pre>

<p><strong>Problem</strong>
Even thought the first set of files create the key and certificate, they are overwritten to NULL after the first reboot.</p>

<p>To make sure that they exist before reboot, I go to the location ""/anotherFolder"" and check the files physically. They have the full key and certificate before reboot. When I reboot and see that the script fails, the same key and certificate files (which had actual data before reboot) now have NULL values.</p>
","","70","<linux><shell><certificate><private-key><pki>","0","","0","2017-10-09 15:56:49","","2","","3649345","","2017-10-09 15:56:49","2017-10-06 19:13:19",""
"56290483","calculate public key from private key is not correct","<p>I am using EC curve P-256. I generate a key pair.
Then, form the private key, I calculate the public key.</p>

<p>For some reason, the two public key values do not correspond.</p>

<p>See included code with the function to generate a key pair:</p>

<pre><code>public static AsymmetricCipherKeyPair  Generate_EC_P256_Key_Pair(SecureRandom random)
    {
        // Select the curve P-256 //
        string curveName = ""P-256"";
        X9ECParameters ecP = NistNamedCurves.GetByName(curveName);
        ECDomainParameters dom_parameters = new ECDomainParameters(ecP.Curve, ecP.G, ecP.N);

        // Generate EC Key Pair //
        ECKeyPairGenerator pGen = new ECKeyPairGenerator();
        ECKeyGenerationParameters genParam = new ECKeyGenerationParameters(dom_parameters, random);
        pGen.Init(genParam);
        AsymmetricCipherKeyPair keypair = pGen.GenerateKeyPair();

        AsymmetricKeyParameter Priv_key = keypair.Private;
        AsymmetricKeyParameter Pub_key = keypair.Public;

        ECPrivateKeyParameters private_key = (ECPrivateKeyParameters)keypair.Private;
        ECPublicKeyParameters public_key = (ECPublicKeyParameters)keypair.Public;

        BigInteger priv_key_exp = private_key.D;
        BigInteger test2 = public_key.Q.XCoord.ToBigInteger();
        BigInteger test3 = public_key.Q.YCoord.ToBigInteger();

        ECPoint pub_key_1 = dom_parameters.G.Multiply(priv_key_exp);
        BigInteger test4 = pub_key_1.XCoord.ToBigInteger();
        BigInteger test5 = pub_key_1.YCoord.ToBigInteger();

        Console.WriteLine(""Exponent: "" + priv_key_exp.ToString(16));
        Console.WriteLine(""X-Coord: "" + test2.ToString(16));
        Console.WriteLine(""X-Coord: "" + test4.ToString(16));
        Console.WriteLine(""\n"");
        Console.WriteLine(""Y-Coord: "" + test3.ToString(16));
        Console.WriteLine(""Y-Coord: "" + test5.ToString(16));

        return keypair;
    }
</code></pre>

<p>If you compare the (X,Y) coordinates of both the generated public key and the calculated pubic key. You will get a different value.
I would expect the same value!!
What is wrong?</p>
","<p>You are getting the wrong X and Y coordinates. Internally, points are stored in an alternate representation (X, Y, Z) involving something called projective coordinates. You want the affine coordinates. The equivalent (X, Y) affine coordinates are retrieved via the properties <code>AffineXCoord</code> and <code>AffineYCoord</code>.</p>
","70","<c#><bouncycastle><private-key><public-key><elliptic-curve>","0","0","2","2019-05-24 15:33:50","","0","","","","","2019-05-24 10:09:08",""
"56290483","calculate public key from private key is not correct","<p>I am using EC curve P-256. I generate a key pair.
Then, form the private key, I calculate the public key.</p>

<p>For some reason, the two public key values do not correspond.</p>

<p>See included code with the function to generate a key pair:</p>

<pre><code>public static AsymmetricCipherKeyPair  Generate_EC_P256_Key_Pair(SecureRandom random)
    {
        // Select the curve P-256 //
        string curveName = ""P-256"";
        X9ECParameters ecP = NistNamedCurves.GetByName(curveName);
        ECDomainParameters dom_parameters = new ECDomainParameters(ecP.Curve, ecP.G, ecP.N);

        // Generate EC Key Pair //
        ECKeyPairGenerator pGen = new ECKeyPairGenerator();
        ECKeyGenerationParameters genParam = new ECKeyGenerationParameters(dom_parameters, random);
        pGen.Init(genParam);
        AsymmetricCipherKeyPair keypair = pGen.GenerateKeyPair();

        AsymmetricKeyParameter Priv_key = keypair.Private;
        AsymmetricKeyParameter Pub_key = keypair.Public;

        ECPrivateKeyParameters private_key = (ECPrivateKeyParameters)keypair.Private;
        ECPublicKeyParameters public_key = (ECPublicKeyParameters)keypair.Public;

        BigInteger priv_key_exp = private_key.D;
        BigInteger test2 = public_key.Q.XCoord.ToBigInteger();
        BigInteger test3 = public_key.Q.YCoord.ToBigInteger();

        ECPoint pub_key_1 = dom_parameters.G.Multiply(priv_key_exp);
        BigInteger test4 = pub_key_1.XCoord.ToBigInteger();
        BigInteger test5 = pub_key_1.YCoord.ToBigInteger();

        Console.WriteLine(""Exponent: "" + priv_key_exp.ToString(16));
        Console.WriteLine(""X-Coord: "" + test2.ToString(16));
        Console.WriteLine(""X-Coord: "" + test4.ToString(16));
        Console.WriteLine(""\n"");
        Console.WriteLine(""Y-Coord: "" + test3.ToString(16));
        Console.WriteLine(""Y-Coord: "" + test5.ToString(16));

        return keypair;
    }
</code></pre>

<p>If you compare the (X,Y) coordinates of both the generated public key and the calculated pubic key. You will get a different value.
I would expect the same value!!
What is wrong?</p>
","<p>James K Polk pointed me into the right direction.
I had to Normalize the point first (""pub_key_1 =pub_key_1.Normalize()"") before I could obtain the coordinates.
I changed the code accordingly and now it gives me the correct results.</p>

<p>Thanks!</p>

<pre><code>public static AsymmetricCipherKeyPair  Generate_EC_P256_Key_Pair(SecureRandom random)
    {
        // Select the curve P-256 //
        string curveName = ""P-256"";
        X9ECParameters ecP = NistNamedCurves.GetByName(curveName);
        ECDomainParameters dom_parameters = new ECDomainParameters(ecP.Curve, ecP.G, ecP.N);

        // Generate EC Key Pair //
        ECKeyPairGenerator pGen = new ECKeyPairGenerator();
        ECKeyGenerationParameters genParam = new ECKeyGenerationParameters(dom_parameters, random);
        pGen.Init(genParam);
        AsymmetricCipherKeyPair keypair = pGen.GenerateKeyPair();


        ECPrivateKeyParameters private_key = (ECPrivateKeyParameters)keypair.Private;
        ECPublicKeyParameters public_key = (ECPublicKeyParameters)keypair.Public;

        BigInteger priv_key_exp = private_key.D;

        BigInteger genx = public_key.Q.XCoord.ToBigInteger();
        BigInteger geny = public_key.Q.YCoord.ToBigInteger();
        BigInteger genx_aff = public_key.Q.AffineXCoord.ToBigInteger();
        BigInteger geny_aff = public_key.Q.AffineYCoord.ToBigInteger();

        ECPoint pub_key_1 = dom_parameters.G.Multiply(priv_key_exp);

        pub_key_1 =pub_key_1.Normalize();

        BigInteger calcx = pub_key_1.XCoord.ToBigInteger();
        BigInteger calcy = pub_key_1.YCoord.ToBigInteger();

        Console.WriteLine(""Exponent: "" + priv_key_exp.ToString(16));
        Console.WriteLine(""Generated X-Coord        : "" + genx.ToString(16));
        Console.WriteLine(""Generated X-Coord Affine : "" + genx_aff.ToString(16));
        Console.WriteLine(""Calculated X-Coord Affine: "" + calcx.ToString(16));
        Console.WriteLine(""\n"");
        Console.WriteLine(""Generated Y-Coord        : "" + geny.ToString(16));
        Console.WriteLine(""Generated Y-Coord Affine : "" + geny_aff.ToString(16));
        Console.WriteLine(""Calculated Y-Coord Affine: "" + calcy.ToString(16));


        return keypair;
    }
</code></pre>
","70","<c#><bouncycastle><private-key><public-key><elliptic-curve>","0","1","2","2019-05-24 15:33:50","","0","","","","","2019-05-24 10:09:08",""
"34409845","What is correct way of authenticating and authorizing using cookie MVC asp.net?","<p>I am making a custom login module for my application. I am using cookies to set the authentication and check cookie for authorization.</p>

<p>Now i want to set cookie, details are given below:</p>

<ul>
<li>I will create a cookie with http only</li>
<li>Next i will use private and public key concept, public key will be encoded and added to cookie <code>Values</code> with a time stamp and username all encoded.</li>
<li><p>I think i will encode like below:</p>

<pre><code>private static byte[] GenerateDigitalSignature(byte[] data,RSAParameters asymmetricKey)
{
    using (var rcsp = new RSACryptoServiceProvider())
    using (var cp = new SHA1CryptoServiceProvider())
    {
        rcsp.ImportParameters(asymmetricKey);

        return rcsp.SignData(data, cp);
    }
}
</code></pre></li>
<li><p>And then upon login request i will decode it using the Private key and if the user is Authorize then i will allow the user to show the page.</p></li>
<li><p>Right Now i am thinking to put my private and public key in web.config.</p></li>
</ul>

<p>Can you please guide me is this correct implementation for login and setting cookie.</p>

<p>Also can you put an example to <strong><em>set cookie</em></strong> with three parameters viz. Public key, Datetime and UserName and <strong><em>decode</em></strong> it using private key</p>

<p>I am setting my cookie like below:</p>

<pre><code>System.Web.HttpCookie loginCookie1 = new System.Web.HttpCookie(""loginCookie"");
    Response.Cookies[""loginCookie1""].Values = new Dictionary&lt;String, String&gt;()
                        {
                            {""PublicKey"", ""Abc""},
                            {""DateTime"", DateTime.Now.ToString()}
                        };
</code></pre>

<p>It is giving me error though, it is conversion error.</p>

<pre><code>Dictionaty&lt;string,string&gt; to NameValueCollection
</code></pre>

<p>Thank you</p>
","","69","<asp.net-mvc><cookies><encryption><public-key-encryption><private-key>","0","","0","2015-12-22 07:30:04","","8","","5429775","","2015-12-22 07:30:04","2015-12-22 06:37:24",""
"54212538","How to fix : java.lang.RuntimeException: error:0c0000af:ASN.1 encoding routines:OPENSSL_internal:TOO_LONG in generate sharedKey","<p><strong>I try to create sharedKey with other public key and my private key but i faced to exception.</strong></p>

<pre><code>byte[] otherPublicKey = mOtherPublic.getBytes();

        X509EncodedKeySpec pkSpec = new X509EncodedKeySpec(otherPublicKey);
        KeyFactory keyFactory = KeyFactory.getInstance(""EC"");

        PublicKey otherPublicKey = keyFactory.generatePublic(pkSpec);//in this line i faced to exception

        // Perform key agreement
        KeyAgreement keyAgreement = KeyAgreement.getInstance(""ECDH"");
        keyAgreement.init(mkeyPair.getPrivate());
        keyAgreement.doPhase(otherPublicKey, true);

        // Read shared secret
        byte[] sharedSecret = keyAgreement.generateSecret();
</code></pre>
","","67","<java><android><encryption><public-key-encryption><private-key>","0","","0","2019-01-16 07:57:20","","0","","","","","2019-01-16 07:57:20",""
"37414417","How to store and display asymmetrical encrypted customer data without keeping the private key","<p>Here are the requirements:
 1. Receive data and store it encrypted data with public key
 2. Private key is not supplied and not stored
 3. Return encrypted data through the APIs
 4. Display decrypted data in the web client with the private key supplied (but never sent over the wire)</p>

<ol>
<li>Is this standard mode of operation?</li>
<li>I was thinking the client would supply the private key on demand and it will be stored in memory, so every new session the key would need to be supplied again. that way the client can decrypt these fields to display.</li>
<li>Any better suggestion on how to handle customer sensitive data, where only the customer can see that decrupted data, and not even the admin on our service can decrypt the data?</li>
</ol>
","<p>Encrypt the data on the client and send the encrypted data to the server. This eliminate the need for the server to have a public key per client. Since only the client has the key a symmetric key algorithm such as AES is a better solution.</p>

<p>Generally even when using PKI the data is actually encrypted with a symmetric key. Asymmetric key encryption has several limitations such as being exceptionally slow and limited in data size to the key size. There needs to be a compelling reason to need a public/private key pair.</p>
","67","<security><encryption><private-key><encryption-asymmetric><pii>","-1","0","1","2016-05-24 13:48:21","","6","1","","","","2016-05-24 13:00:45",""
"56876965","Unable do client authentication with PKCS#1 private key with java keyStore","<p>I have public key and private key (PKCS#1 : i.e having ""BEGIN RSA PRIVATE KEY"") as separate String inputs.
These keys are created using below commands:</p>

<pre><code>openssl req -new -x509 -keyout ca-key.pem -out ca-cert.pem -days 365 -passout pass:abcd123 -subj ""/C=IN/ST=KAD/L=CAT/O=MIN/OU=OPQ/CN=*.xyz.com/emailAddress=xxx.xxxx@xyz.com""
openssl genrsa -out client_private.key 2048
openssl req -new -sha256 -key client_private.key -subj ""/C=IN/ST=KAD/L=CAT/O=MIN/OU=OPQ/CN=client.xyx.com"" -out client.csr
openssl x509 -req -in client.csr -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -out client.crt -days 365 -sha256
openssl x509 -in client.crt -out client.pem -outform PEM
</code></pre>

<p>where the content of client.csr is provided as public key string
and the content of client_private.key is provided as private key string </p>

<p>Now I have to create java keystore, add these keys and export as JKS file pragmatically.
I have gone through multiple links and tried bouncy castle example but I am getting below error.</p>

<pre><code>javax.net.ssl.SSLProtocolException: Handshake message sequence violation, 2
</code></pre>

<p>I am writing a kafka client with SSL and client auth enabled and sever is set will all required parameters. 
creating trust store and keystore commandline works fine.
But using java program I am unable to do client auth (SSL works fine).
Below is code snip:</p>

<pre><code>public void initClientAuthStore(String certString, String keyString)
        throws GeneralSecurityException, IOException {
    clientAuthStore = KeyStore.getInstance(getType());
    clientAuthStore.load(null, getPassword().toCharArray());

    Certificate clientCert = CertificateHandler.getCertificate(certString);
    Certificate[] certificateChain = {trustStoreCertificate, clientCert};

    log.debug(""initClientAuthStore: Certificate is created"");
    // keyString.getBytes(StandardCharsets.UTF_8);
    //    clientAuthStore.setKeyEntry(
    //        keyStoreAlias, getPrivateKey(keyString), getPassword().toCharArray(), certificate);
    PrivateKey privateKey = getPrivateKey(keyString);
    clientAuthStore.setKeyEntry(
            keyStoreAlias,
            privateKey,
            getPassword().toCharArray(),
            certificateChain);

    log.debug(""initClientAuthStore: setting certificate and private key is success."");
}

public PrivateKey getPrivateKey(String key) throws IOException {
    PemObject privateKeyObject;
    PemReader pemReader =
            new PemReader(
                    new InputStreamReader(
                            new ByteArrayInputStream(key.getBytes(Charset.forName(""UTF-8""))),
                            StandardCharsets.UTF_8));
    privateKeyObject = pemReader.readPemObject();
    RSAPrivateCrtKeyParameters privateKeyParameter;
    if (privateKeyObject.getType().endsWith(""RSA PRIVATE KEY"")) {
        log.info(""PRIVATE KEY TYPE: pkcs#1"");
        // PKCS#1 key
        RSAPrivateKey rsa = RSAPrivateKey.getInstance(privateKeyObject.getContent());
        privateKeyParameter =
                new RSAPrivateCrtKeyParameters(
                        rsa.getModulus(),
                        rsa.getPublicExponent(),
                        rsa.getPrivateExponent(),
                        rsa.getPrime1(),
                        rsa.getPrime2(),
                        rsa.getExponent1(),
                        rsa.getExponent2(),
                        rsa.getCoefficient());
    } else if (privateKeyObject.getType().endsWith(""PRIVATE KEY"")) {
        log.info(""PRIVATE KEY TYPE: pkcs#8"");
        // PKCS#8 key
        privateKeyParameter =
                (RSAPrivateCrtKeyParameters) PrivateKeyFactory.createKey(privateKeyObject.getContent());
    } else {
        throw new RuntimeException(""Unsupported key type: "" + privateKeyObject.getType());
    }

    JcaPEMKeyConverter jcaPemKeyConverter = new JcaPEMKeyConverter();
    PrivateKey privateKey =
            jcaPemKeyConverter.getPrivateKey(
                    PrivateKeyInfoFactory.createPrivateKeyInfo(privateKeyParameter));
    log.info(""PRIVATE KEY generated. {}"", privateKey.getFormat());
    return privateKey;
}
</code></pre>

<p>Getting below error:</p>

<pre><code>javax.net.ssl.SSLProtocolException: Handshake message sequence violation, 2
</code></pre>

<p>Not sure what is the wrong and if I am missing any encode/decode etc..
I get PKCS#1 private key as String input and I have to use bouncy castle to convert to PKCS#8 and generate privatekey and add to store.
Note: private key is content of client_private.key</p>
","<p>(Not an answer but too much for comments.)</p>

<blockquote>
  <p>where the content of client.csr is provided as public key string  ...</p>
</blockquote>

<p>The CSR is not a public key, it is a CSR. But the code you show clearly doesn't use it. It does apparently use the certificate, which also is not a public key, it is a certficate -- which <em>contains</em> a public key. However, a certificate, and NOT a public key OR a CSR, is the correct thing to use for SSL/TLS authentication.</p>

<blockquote>
  <p>I get PKCS#1 private key as String input and I have to use bouncy castle to convert to PKCS#8 and generate privatekey and add to store ....</p>
</blockquote>

<p>You don't actually need to convert to PKCS8; PEMParser plus JcaPEMKeyConvertor can convert PKCS1 directly to a KeyPair containing a usable (RSA)PrivateKey, which is much simpler. Or OpenSSL can easily create PKCS8 key which standard JCE (without BouncyCastle) can read -- or for that matter PKCS12 which is already a Java keystore without any conversion of any kind. But what you have does work.</p>

<blockquote>
  <p>Now I have to create java keystore, add these keys and export as JKS file pragmatically. </p>
</blockquote>

<p>Aside: you probably mean programmatically, not pragmatically. Your code doesn't export any keystore file, and doesn't need to; and you don't need to use a JKS keystore specifically, any supported in-memory keystore should work, although you don't show the code doing the connection and using the keystore. Starting with Java 9 (almost two years ago) Oracle <em>recommends</em> people stop using JKS and use PKCS12 instead, although I doubt they will actually drop JKS anytime soon.</p>

<blockquote>
  <p>javax.net.ssl.SSLProtocolException: Handshake message sequence violation, 2</p>
</blockquote>

<p>That's your actual problem, and it's not the keystore, or key, and shouldn't be the cert. Even if you are sending a key and cert it doesn't like, the server should respond by rejecting the authentication <em>within</em> the protocol(s), not violating protocol. And 2 is ServerHello, which should occur only <em>before</em> the certificate is sent or checked in <em>either</em> direction. Do at least one of the following:</p>

<ul>
<li><p><a href=""https://docs.oracle.com/en/java/javase/11/security/java-secure-socket-extension-jsse-reference-guide.html#GUID-31B7E142-B874-46E9-8DD0-4E18EC0EB2CF"" rel=""nofollow noreferrer"">standard Java SSL/TLS debugging</a>: run with sysprop <code>javax.net.debug=ssl,handshake</code> and capture/log the output. (Below Java 11 you can actually use just <code>ssl</code> and it automatically includes <code>handshake</code>.) This will show exactly what your system is sending and receiving, and allow determining how it is wrong, which should at least help determine why.</p></li>
<li><p>capture the handshake with a network trace like wireshark, tcpdump, or similar, and look at it. This works even if there is something seriously wrong in Java (which there shouldn't be) but is at least a little harder to decode, and if you aren't quite careful risks including other data on the network during the same time period that may be sensitive and unshareable. </p></li>
<li><p>try to connect with another tool (or tools), using the same key+cert and from the same machine if at all possible -- this might be a network-related problem that depends on where you connect from. Since you have <code>openssl</code> and already have the files in OpenSSL formats, simplest is to use</p>

<p><code>openssl s_client -connect $host:$port -key keyfile -cert certfile [see text]</code></p>

<p><code>s_client</code> is also unusual (unique AFAIK) in that you can control whether or not SNI (the Server Name Indication extension) is sent, and with many servers nowadays that may well affect the server's behavior (possibly triggering or suppressing a bug). Whether Java (JSSE) sends SNI depends on a combination of usually several factors you did not tell us: always the version of Java, and usually some details of the code making the connection attempt, especially whether it uses <code>HttpsURLConnection</code>, the new-j11+ <code>HttpClient</code>, third-party code like Apache or google, or custom code. For OpenSSL releases through 1.1.0, SNI is not sent by default and you must add <code>-servername $host</code> to send it. For 1.1.1, it is sent by default but is not sent if you add <code>-noservername</code>. </p>

<p>In this example I did not specify a truststore. <code>s_client</code> by default will verify against its default truststore, which may or may be correct for your server, but will ignore any error and proceed anyway. If you were debugging a certificate trust problem then it would be important to match OpenSSL's truststore with the one used by your Java, but not for your problem.</p></li>
<li><p>check with the server operator(s) how this problem is perceived at their end: do they think there is something wrong with your handshake, and if so what? What software (or usually more relevant middleware) are they running, with what config or options? </p></li>
</ul>

<p>If you add (some/enough of) this information to your Q, I will try to update this to be an actual answer.</p>
","67","<java><keystore><private-key><java-10><pkcs#1>","0","1","1","2019-07-04 14:31:22","","0","","238704","","2019-07-04 14:31:22","2019-07-03 19:42:09",""
"54732579","How to create an authentication token for Github API?","<p>I want to create an auth token so I can make authenticated API calls the Github API as a Github app. All I want is to be able to get a list of users for an organisation or team.</p>

<p><a href=""https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#generating-a-private-key"" rel=""nofollow noreferrer"">This link</a> suggests I need to download a PEM file, use openssl to convert it to a private key and the create a JWT out of it. </p>

<p>Is this actually required? Can I not just use a simple access token provided from Github like every other API I have ever used?</p>

<p>If I do have to use this method, can I just create the JWT once or do I need to create it for every API request?</p>
","","66","<authentication><github><jwt><github-api><private-key>","0","","0","2019-02-17 11:04:36","","0","","","","","2019-02-17 11:04:36",""
"57919324","""Permission denied (publickey) lost connection"" when using scp to copy files from local machine to ec2 instance","<p>I am trying to copy a file from my local machine (MAC) to my ec2 instance.</p>

<p>I followed <a href=""https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstancesLinux.html"" rel=""nofollow noreferrer"">Amazon's documentation</a> and this is what my command looks like:</p>

<pre><code>ssh -i /path/my-key-pair.pem ec2-user@ec2-198-51-100-1.compute-1.amazonaws.com  &lt;-- Works

scp -i /path/my-key-pair.pem /path/SampleFile.txt ec2-user@ec2-198-51-100-1.compute-1.amazonaws.com:~  &lt;-- Error shown below
</code></pre>

<ul>
<li>The key I am using is the correct key I used to connect to the
instance successfully.</li>
<li>Permissions 400: <code>chmod 400 /path/my-key-pair.pem</code></li>
<li>ssh traffic is enabled on port 22</li>
</ul>

<p>The full logs are:</p>

<pre><code>The authenticity of host 'public dns.eu-central-1.compute.amazonaws.com (public dns)' can't be established.
ECDSA key fingerprint is SHA256:w+...
ECDSA key fingerprint is MD5:..
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'ec2-public-dns.eu-central-1.compute.amazonaws.com' (ECDSA) to the list of known hosts.
</code></pre>

<hr>

<pre><code>Executing: program /usr/bin/ssh host public-dns.eu-central-1.compute.amazonaws.com, user ec2-user, command scp -v -t ~
Warning: Identity file /path/my-key-pair.pem not accessible: No such file or directory.
OpenSSH_7.4p1, OpenSSL 1.0.2k-fips  26 Jan 2017
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: /etc/ssh/ssh_config line 58: Applying options for *
debug1: Connecting to ec2-public-dns.eu-central-1.compute.amazonaws.com [public-dns] port 22.
debug1: Connection established.
debug1: key_load_public: No such file or directory
debug1: identity file /home/ec2-user/.ssh/id_rsa type -1
debug1: key_load_public: No such file or directory
debug1: identity file /home/ec2-user/.ssh/id_rsa-cert type -1
debug1: key_load_public: No such file or directory
debug1: identity file /home/ec2-user/.ssh/id_dsa type -1
debug1: key_load_public: No such file or directory
debug1: identity file /home/ec2-user/.ssh/id_dsa-cert type -1
debug1: key_load_public: No such file or directory
debug1: identity file /home/ec2-user/.ssh/id_ecdsa type -1
debug1: key_load_public: No such file or directory
debug1: identity file /home/ec2-user/.ssh/id_ecdsa-cert type -1
debug1: key_load_public: No such file or directory
debug1: identity file /home/ec2-user/.ssh/id_ed25519 type -1
debug1: key_load_public: No such file or directory
debug1: identity file /home/ec2-user/.ssh/id_ed25519-cert type -1
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_7.4
debug1: Remote protocol version 2.0, remote software version OpenSSH_7.4
debug1: match: OpenSSH_7.4 pat OpenSSH* compat 0x04000000
debug1: Authenticating to ec2-public-dns.eu-central-1.compute.amazonaws.com:22 as 'ec2-user'
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: algorithm: curve25519-sha256
debug1: kex: host key algorithm: ecdsa-sha2-nistp256
debug1: kex: server-&gt;client cipher: chacha20-poly1305@openssh.com MAC: &lt;implicit&gt; compression: none
debug1: kex: client-&gt;server cipher: chacha20-poly1305@openssh.com MAC: &lt;implicit&gt; compression: none
debug1: kex: curve25519-sha256 need=64 dh_need=64
debug1: kex: curve25519-sha256 need=64 dh_need=64
debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
debug1: Server host key: ecdsa-sha2-nistp256 SHA256:w+2eNNYg99E8tXX0cWuz0RYbmovKMirlUTeay32KYd8
debug1: Host 'ec2-public-dns.eu-central-1.compute.amazonaws.com' is known and matches the ECDSA host key.
debug1: Found key in /home/ec2-user/.ssh/known_hosts:4
debug1: rekey after 134217728 blocks
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: rekey after 134217728 blocks
debug1: SSH2_MSG_EXT_INFO received
debug1: kex_input_ext_info: server-sig-algs=&lt;rsa-sha2-256,rsa-sha2-512&gt;
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: publickey
debug1: Next authentication method: publickey
debug1: Trying private key: /home/ec2-user/.ssh/id_rsa
debug1: Trying private key: /home/ec2-user/.ssh/id_dsa
debug1: Trying private key: /home/ec2-user/.ssh/id_ecdsa
debug1: Trying private key: /home/ec2-user/.ssh/id_ed25519
debug1: No more authentication methods to try.
Permission denied (publickey).
lost connection
</code></pre>

<hr>

<p>Following this <a href=""https://stackoverflow.com/questions/3834526/changing-permission-for-files-and-folder-recursively-using-shell-command-in-mac"">question</a>, The file I am trying to copy over to my ec2 instance hould have all the necessary permissions after I use <code>chmod -R 777 Documents/[the file's location]</code>. </p>

<p><em>How do I  transfer the public key to the server?</em></p>

<p>I have been stuck on this for many hours, any suggestions would be greatly appreciated.</p>
","","66","<amazon-web-services><amazon-ec2><scp><private-key><permission-denied>","1","","0","2019-09-13 08:32:22","","3","","8625760","","2019-09-13 08:32:22","2019-09-13 07:43:15",""
"44314062","Tcl pki::pkcs::parse_key error Using Google Auth Service Account Key","<p>I'm trying to create a small script where I am able to use google's ""OAuth 2.0 for Server to Server Applications"" with Tcl. After setting up my service account and making a private key in the format of JSON, I copy and pasted the private key that was within that JSON file. (i.e. <a href=""https://i.stack.imgur.com/hb8Vt.png)"" rel=""nofollow noreferrer"">screen shot of a part of the private key)</a></p>

<p>Then I placed the private key within my Tcl script which looks like this: </p>

<pre><code>set keydata ""PRIVATEKEY""
set key [::pki::pkcs::parse_key $keydata]
</code></pre>

<p>After doing that, I get the following error: </p>

<pre><code>    Expected Integer (0x02), but got 30
    while executing
""::asn::asnGetBigInteger key ret(n)""
    (procedure ""::pki::pkcs::parse_key"" line 8)
    invoked from within
""::pki::pkcs::parse_key $keydata""
    (""uplevel"" body line 45)
    invoked from within
</code></pre>

<p>I believe I am doing everything correctly. I cannot figure out what I am doing wrong. . </p>
","<p>I found that the problem was the key that Google gave me was in PEM format rather than the RSA format that ""::pki::pkcs::parse_key"" requires. Therefore, I just ran the following to convert my PEM key into RSA format and then ran the code shown above and everything works. </p>

<pre><code>openssl rsa -in domain.key -out domain-rsa.key
</code></pre>
","66","<tcl><rsa><x509><private-key><pki>","2","1","1","2017-06-02 19:13:15","44335937","0","","8066883","","2017-06-02 18:21:14","2017-06-01 17:49:07",""
"33467664","How i can use cer with private key or ( PKCS#12 ) for connect with special server","<p>I have a certificate file(cer) sent in response to my request for a certificate and my private key . How can I use it for authentication and encryption for the connection. If I do not have , you can add to it. Sorry if this is a stupid question . I want to understand the principle . Language is not important , but if it is important I use ruby</p>
","<p>If HTTPS is an option, you can get both server and client authentication.</p>

<p>There are a lot libraries for this just check <a href=""http://www.rubydoc.info/gems/httpclient/2.1.5.2/HTTPClient"" rel=""nofollow noreferrer"">httpclient gem</a>:</p>

<pre><code># Configuring OpenSSL options. See HTTPClient::SSLConfig for more details.
user_cert_file = 'cert.pem'
user_key_file = 'privkey.pem'
clnt.ssl_config.set_client_cert_file(user_cert_file, user_key_file)
clnt.get_content(https_url)
</code></pre>

<p>and this topic <a href=""https://stackoverflow.com/questions/18886501/http-library-for-ruby-with-https-ssl-client-certificate-and-keep-alive-support"">HTTP library for Ruby with HTTPS, SSL Client Certificate and Keep-Alive support?</a></p>
","66","<ruby-on-rails><ruby><certificate><private-key><server-to-server>","0","0","1","2015-11-02 10:52:37","","4","","","","","2015-11-01 21:54:56",""
"22422125","Have done an Android App Update - But don't have original private key","<p>We built an app for Android 3 years ago.  We need to submit the update to the app, but we don't have the private key that was used in the original app (the one that we're updating. Our original developer is nowhere to be found).</p>

<p>How can we get around this?!  I don't want to submit the app through a separate developer account and I really need this new version to be accessible to the thousands of people who have downloaded version 1.0.</p>

<p>Anything you can do to help would be appreciated SA compadres.  </p>

<p>Thanks in advance for your help.</p>

<p>Ben</p>
","<p>No you cannot make it unless RSA is cracked.</p>
","66","<android><updates><private-key><submission><codesignkey>","1","0","2","2014-03-15 09:55:25","","1","","","","","2014-03-15 09:47:48",""
"22422125","Have done an Android App Update - But don't have original private key","<p>We built an app for Android 3 years ago.  We need to submit the update to the app, but we don't have the private key that was used in the original app (the one that we're updating. Our original developer is nowhere to be found).</p>

<p>How can we get around this?!  I don't want to submit the app through a separate developer account and I really need this new version to be accessible to the thousands of people who have downloaded version 1.0.</p>

<p>Anything you can do to help would be appreciated SA compadres.  </p>

<p>Thanks in advance for your help.</p>

<p>Ben</p>
","<p>I think what you need to do:</p>

<ul>
<li>Change package name</li>
<li>Create your new keystore and sign it</li>
<li>Send it as new application (with the same name)</li>
<li>Hide previous application</li>
</ul>

<p>There is no other way. If you've lost your key there is no real way to identify you as a developer of this app.</p>
","66","<android><updates><private-key><submission><codesignkey>","1","1","2","2014-03-15 09:55:25","","1","","","","","2014-03-15 09:47:48",""
"52919233","IllegalBlockSize Exception when using asymmetric encryption (Public Private Key Enc)","<p>I have set up public and private key encryption in Java, and distributed the public keys of the two users (communication is between two users). I now want the users to exchange a symmetric key. What I am supposed to do:</p>

<ol>
<li>User A generates a key.</li>
<li>User A encrypts the key with his private key and then encrypts it with B's public key.</li>
<li>User A sends the encrypted key.</li>
<li>User B receives the encrypted key.</li>
<li>User B decrypts the key with his private key and then A's public key.</li>
</ol>

<p>My code for user A to generate the key:</p>

<pre><code>1. KeyGenerator keyGenerator = KeyGenerator.getInstance(ENCMETHOD);
2. SecureRandom secureRandom = new SecureRandom();
3. int keyBitSize = 128;
4. keyGenerator.init(keyBitSize, secureRandom);
5. secretKey = keyGenerator.generateKey();
6. encodedKey = Base64.getEncoder().encodeToString(secretKey.getEncoded());

// encrypt with public key of B and then my private key
7. String encryptedMessage = encodedKey;
8. encryptedMessage = ac.encryptText
               (
                        ac.encryptText(encryptedMessage, otherUserPublickey),
                        privateKey
                );
</code></pre>

<p>Line 8 throws the following error:</p>

<pre><code>javax.crypto.IllegalBlockSizeException: Data must not be longer than 117 bytes
    at com.sun.crypto.provider.RSACipher.doFinal(RSACipher.java:344)
    at com.sun.crypto.provider.RSACipher.engineDoFinal(RSACipher.java:389)
    at javax.crypto.Cipher.doFinal(Cipher.java:2165)
    at driver.AsymmetricCryptography.encryptText(AsymmetricCryptography.java:73) // please refer to the code section below for this method
    at driver.ClientOne.main(ClientOne.java:158) // this is line 8 in the above code
</code></pre>

<p>The method AsymmetricCryptography.encryptText(String message, PrivateKey key):</p>

<pre><code>public String encryptText(String msg, PrivateKey key)
        throws
        UnsupportedEncodingException, IllegalBlockSizeException,
        BadPaddingException, InvalidKeyException {
        this.cipher.init(Cipher.ENCRYPT_MODE, key);
        return Base64.encodeBase64String(cipher.doFinal(msg.getBytes(""UTF-8"")));
}

// this.cipher = Cipher.getInstance(""RSA"");
</code></pre>

<p>Any help is much appreciated. Thanks.</p>
","<p>Looks like you are exceeding the amount of data you can encrypt with RSA (see here <a href=""https://security.stackexchange.com/questions/44702/whats-the-limit-on-the-size-of-the-data-that-public-key-cryptos-can-handle"">https://security.stackexchange.com/questions/44702/whats-the-limit-on-the-size-of-the-data-that-public-key-cryptos-can-handle</a>) which essentially is the modulus size, possibly due to Base 64 encoding.</p>
","65","<java><encryption><rsa><private-key><encryption-asymmetric>","1","1","1","2018-10-21 22:30:51","","3","","","","","2018-10-21 19:48:42",""
"54349597","Do I need private key during transaction in web3js (NodeJS)","<p>I currently operate an e-commerce website that sales for shoes.
At this time, I'd like to implement an ethereum transaction payment system. Users send their ethereum to our ethereum address.</p>

<p>I really wondering if our visitors try to send ethereum transaction,
users have to submit their private key of their ethereum, but what I think that this method is really dangerous situation in our e-commerce website.</p>

<p>Of course we do not save any of private key into our db.
However I don't want to use the method to collect users personal keys.</p>

<p>Is there any way users can make a payment without their private key?</p>
","<p>So, all transactions in Ethereum or in similar cryptocurrency made with private key. I don’t think so that users would agree to send you a private key, since you will be able to manage their wallet and send as many transactions as you want.
I think in order to implement payment functionality with Ethereum you should use <a href=""https://metamask.io"" rel=""nofollow noreferrer"">MetaMask</a>. User should have a MetaMask account and linked wallet in it. It is trusted application that users can insert private keys their. So when they make transaction with MetaMask you simply get Transaction ID (hash) and check the validity of transaction and transferred Ether. If transaction successful, so user transfer enough Ether to your wallet, you just accept payment.
You can just read an article, <a href=""https://medium.com/crowdbotics/building-ethereum-dapps-with-meta-mask-9bd0685dfd57"" rel=""nofollow noreferrer"">Building-Ethereum Dapps with MetaMask</a></p>
","64","<transactions><nodes><private-key><web3js><wallet>","0","3","1","2019-01-24 16:34:58","54351376","0","","","","","2019-01-24 15:02:32",""
"40486378","android: how to obtain a user trusted private key from app","<p>i was wondering if there's any chance to read programmatically the private key from android's <code>keystore/keychain</code> (installed by user via <em>Settings–security–install from SD card</em>) by app itself?</p>

<p>the purpose is to sign a data by this key to serve it to server afterwards.</p>
","","64","<android><sdk><keystore><private-key>","0","","0","2016-11-08 13:33:51","","2","","3350906","","2016-11-08 13:33:51","2016-11-08 11:58:35",""
"15787691","Client sent me distribution certificate and login username passwords to the development portal, but no private key","<p>The distribution certificate is actually downloaded from Apple's development portal. Is there a way for me to generate the private key for the distribution certificate? Or the private key has to be generated by the computer that created the distribution certificate?</p>
","<p>If you want to code-sign your app for distribution, you're going to need that private key.</p>

<p>Either you can create a <strong><em>new</em></strong> private/public key and distribution certificate (which your client will likely not be happy with, since that invalidates all his certificates), or you need to have him send you that private key so you can do your code-signing and building for distribution.</p>
","64","<ios><testing><certificate><private-key>","0","2","1","2013-04-03 12:49:18","15787807","0","","","","","2013-04-03 12:43:52",""
"30014776","Is it possible to extract/generate private key from captured SSL traffic?","<p>I'm quite new so there's a deal and If anyone could help me with this i would be so grateful, 'cause I have been looking for answer since Thursday and didn't find anything : I have captured SSL traffic with several valid handshakes, containing, Server Hello, Client Hello, Certificates, Key Exchange etc. and what I tried to do was extract the SSL cert and check if I can made a valid SSL connection, ok I figured out that apparently I can't without Private Key, right? And this is my question, is it anyway to get this key from my captured traffic?</p>
","<p>The private key should never be transmitted anywhere through an SSL channel, so no - collecting data through an SSL stream will never produce the private key.</p>
","64","<ssl><https><private-key>","0","0","2","2015-05-05 09:43:32","","5","","687887","","2015-05-05 08:52:51","2015-05-03 14:10:06",""
"30014776","Is it possible to extract/generate private key from captured SSL traffic?","<p>I'm quite new so there's a deal and If anyone could help me with this i would be so grateful, 'cause I have been looking for answer since Thursday and didn't find anything : I have captured SSL traffic with several valid handshakes, containing, Server Hello, Client Hello, Certificates, Key Exchange etc. and what I tried to do was extract the SSL cert and check if I can made a valid SSL connection, ok I figured out that apparently I can't without Private Key, right? And this is my question, is it anyway to get this key from my captured traffic?</p>
","<blockquote>
  <p>Is it possible to extract/generate private key from captured SSL traffic?</p>
</blockquote>

<p>No. It isn't in the captured traffic, or deducible from it.</p>

<blockquote>
  <p>I can't without Private Key, right?</p>
</blockquote>

<p>Right. If you could, anybody on the planet could trivially mount man-in-the-middle attacks on SSL.</p>

<blockquote>
  <p>And this is my question, is it anyway to get this key from my captured traffic?</p>
</blockquote>

<p>No, because it is neither in the captured traffic nor deducible from it. Neither is the session key used for encryption.</p>

<blockquote>
  <p>is it anyway i can do a valid SSL connection with that data?</p>
</blockquote>

<p>No.If you could, anybody on the planet could trivially mount a man-in-the-middle or replay attack on SSL.</p>

<blockquote>
  <p>Can i do anything with it?</p>
</blockquote>

<p>No.</p>

<blockquote>
  <p>And where the key is stored If i decide to retrieve it from a client?</p>
</blockquote>

<p>None of your business, but the private key is on the server. Most SSL connections don't use a client certificate/public-private key pair.</p>
","64","<ssl><https><private-key>","0","0","2","2015-05-05 09:43:32","","5","","687887","","2015-05-05 08:52:51","2015-05-03 14:10:06",""
"45656987","Using Service Account (Protected by Private Key) to call Spring Service in Google Cloud","<p>I am kind of new to Google Cloud Platform.<br>
I have deployed my Spring REST Services.<br>
I am able to call the REST services them from a browser.  </p>

<p>These services needs to be accessed only by a Service Account, and the access needs to be secured by the API Private Key.  </p>

<p>Is there any sample code to do this?</p>

<pre><code>String resourceURL = ""lucky-curve-175103.appspot.com/myService?input={s1}"";  
RestTemplate restTemplate = new RestTemplate(); 
String testValue = ""098-98-0987""; 
CwResult cwResult = restTemplate.getForObject(resourceURL, CwResult.class, testValue ); 
System.out.println(""Result "" + cwResult.getResult());
</code></pre>

<p>This code works and I get the Result printed on the console.<br>
How do I make this call using the service account and privatekey ?</p>
","","64","<spring><rest><client><private-key><gcp>","0","","0","2018-05-17 15:46:55","","2","0","5411817","","2017-08-14 16:39:14","2017-08-13 04:12:40",""
"39007528","'PrivateKey' does not have a definition for 'CreateFromFile'","<p>I am trying to implement a solution into my application that mirrors the answer <a href=""https://stackoverflow.com/questions/13379963/httplistener-with-https-on-monotouch/13385734#13385734"">in this post</a></p>

<p>I have a similar scenario where I have an <code>HttpListener</code> and <code>Grapevine</code> based application running on an Ubuntu server that I need to get working with <code>HTTPS</code> using <code>Mono</code> and I am trying to create and include the relevant keys to allow <code>HTTPS</code></p>

<p>The problem I am having is the last line of the solution,</p>

<p><code>key = PrivateKey.CreateFromFile (pvk_file).RSA;</code></p>

<p>When I try the same Visual Studio shows an error/text highlighted red, <code>'PrivateKey' does not have a definition for 'CreateFromFile'</code></p>

<p>Am I using the wrong libraries or is something else the issue with my code itself?</p>

<p>My code, cut down to the relevant method.</p>

<pre><code>using System;
using System.IO;
using System.Security.Cryptography.X509Certificates;
using System.Threading;
using java.security;

public class ConfigureCertificates
    {
        private readonly string _dirName;
        private readonly string _path;
        private readonly string _port;
        private readonly string _certFile;
        public ConfigureCertificates(string port)
        {
            _dirName = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
            _path = Path.Combine(_dirName, "".mono"");
            _path = Path.Combine(_path, ""httplistener"");
            _port = port;
            _certFile = Path.Combine(_path, String.Format(""{0}.cer"", _port));
        }

        public void SetUpCerts()
        {
            if (!File.Exists(_certFile))
               throw new Exception(""Certificate file not found"");

            string pvkFile = Path.Combine(_path, String.Format(""{0}.pvk"", _port));

            if (!File.Exists(pvkFile))
                throw new Exception(""Private key not found"");

            var cert = new X509Certificate2(_certFile);
            var key = PrivateKey.CreateFromFile(pvkFile).RSA; // Error occurs here
        }
    }
</code></pre>
","<p>You have a naming clash - in other words there is another class called <code>PrivateKey</code> that doesn't have the method you require. <a href=""https://github.com/mono/mono/blob/master/mcs/class/Mono.Security/Mono.Security.Authenticode/PrivateKey.cs"" rel=""nofollow"">A quick Google hunt</a> indicates the correct class is in the <code>Mono.Security.Authenticode</code> namespace. So you will need to reference the full path:</p>

<pre><code>Mono.Security.Authenticode.PrivateKey.CreateFromFile(...)
</code></pre>

<p>You may also need to add the <code>Mono.Security</code> package if you don't already have it.</p>
","63","<c#><mono><private-key><httplistener>","0","1","1","2016-08-17 23:51:36","39007945","2","","","","","2016-08-17 23:02:11",""
"38041543","Signing every file created in a folder","<p>I wrote a program in Java that creates an AVI file but i need help detecting every new AVI file that drops in the folder. For every new AVI file created it should be signed with a private key and an Hash should be created over it. I appreciate any assistance. Thanks in advance</p>
","","63","<java><hash><private-key><sha>","0","","0","2016-06-26 18:42:30","","3","","6497307","","2016-06-26 18:37:00","2016-06-26 18:04:49",""
"57847312","Where to store .pem file (private key) android java","<p>I'm trying to create a JWT using a private key stored in a .PEM file. I understand private keys shouldn't be stored in the code and you can add keys to the global gradle.properties file to avoid exposing them but if I have a .PEM file how do I access it, in my code. from my local drive.  </p>

<p>The yodlee documentation tells me to add the path below but how does this work?</p>

<pre><code>public class ConfigurationParams {

        public static final String iss = ""135143514315321"";

        public static final String privateKeyFile = ""/Users/bob/token/priv.pem"";

    }
</code></pre>

<p>The privateKeyFile path is passed through the file variable.</p>

<pre><code>public class TokenManagement {
        @RequiresApi(api = Build.VERSION_CODES.O)
        static private String getKey(String file) {
            String privKey;
            try {
                privKey = new String(Files.readAllBytes((Paths.get(file))));
            } catch (IOException ex) {
                privKey = null;
            }
            return privKey;
        }
    }
</code></pre>
","<p>It seems more of an android related question. But if you are planning to have the key on the user's device then you should not do that.</p>

<p>All Yodlee APIs are IP restricted in production environment, and all API calls should be made from your server to Yodlee. Hence, you should store it at your server side not at the client side, if that's what you are trying to do.</p>
","62","<java><android><api><private-key><yodlee>","0","0","1","2019-09-20 17:47:22","58033036","3","","","","","2019-09-09 02:53:35",""
"27201250","How to make Google endpoints secure with private and public key pair?","<p>I generated <code>Endpoints</code> for <code>Android</code> and need to make them secure using <code>private/public</code> key pair. 
Any reference on it?</p>
","<p>Did you read this ? : <a href=""https://developers.google.com/accounts/docs/OAuth2ServiceAccount"" rel=""nofollow"">https://developers.google.com/accounts/docs/OAuth2ServiceAccount</a></p>

<p>But I recommend to you to use oauth2 authentication with login/password Google with the button Google Sign-In: <a href=""https://developers.google.com/+/mobile/android/sign-in"" rel=""nofollow"">https://developers.google.com/+/mobile/android/sign-in</a></p>

<p>Be carefull, on Android project, you can't store anything because it's too  easy to decompile an Android apk and get back private information.. (Like your private key)</p>
","62","<java><android><google-cloud-endpoints><private-key>","0","1","1","2014-12-19 06:51:19","","0","0","","","","2014-11-29 10:32:41","2015-10-27 15:56:41"
"24625160","Out of date AWS Tutorial; How to set up Elastic Beanstalk TVM Access & Private Keys","<p>On one of the last steps here on the Beanstalk TVM tutorial for mobile...</p>

<p><a href=""http://aws.amazon.com/code/7351543942956566"" rel=""nofollow"">http://aws.amazon.com/code/7351543942956566</a></p>

<p>It goes through how to setup Access/Private keys at the end. However, there is no 'Edit Configuration' in the UI, only Save &amp; Load options, and the load option doesn't have any fields for Access/Private keys. How do I set up those for a Beanstalk based TVM?</p>
","<p>Would indeed be nice if that tutorial could be updated for the new <a href=""http://aws.amazon.com/elasticbeanstalk/"" rel=""nofollow"">Elastic Beanstalk</a> UI - you can edit the configuration after clicking the cog icon in the top right of the <em>Software Configuration</em> tile in section <em>Web Tier</em> of tab <em>Configuration</em> within the dashboard (I currently seem to be unable to drag and drop a screenshot, sorry).</p>

<p>There you'll find section <em>Environment Properties</em> which lists all property names including <code>AWS_ACCESS_KEY_ID</code> and <code>AWS_SECRET_KEY</code>.</p>
","62","<amazon-web-services><elastic-beanstalk><private-key><access-keys>","2","1","1","2014-07-08 15:40:21","24630977","0","","45773","","2014-07-08 11:44:57","2014-07-08 06:37:04",""
"46611613","does changing the md5 hash change the outcome of a digital signature?","<p>From my understanding you need a hash in order to generate a digital signature, so if you change the hash of a EXE or program using a hash changer(not encrypter) of some sort, the digital signature will change?</p>

<p>my head: DATA/SOURCE --> HASH --> SOME KIND OF KEY --> SIGNATURE</p>

<p>correct me if i'm wrong</p>
","<p>Yes, the point of code signing is encrypting file hash of some sort using private key. You then distribute encrypted hash alongside public key (embedded in EXE) so that user's OS can verify if the file has not been tampered with.</p>

<p>Therefore, changing executable's hash will fail the authentication.</p>
","61","<hash><exe><digital-signature><public-key-encryption><private-key>","0","1","1","2017-10-06 18:14:08","46611673","2","","","","","2017-10-06 18:09:29",""
"32874863","Do I need to add new public key to the server after converting private key from PuTTY to OpenSSH format?","<p>I'm using JSch connect to a server. I'm converting my private key to the OpenSSH because this is what is needed (so I'm told). My two questions are:</p>

<ol>
<li>How should I name this OpenSSH file?</li>
<li>Does this converted file also have to be added to the server similar to when adding the private key generated  when connecting using PuTTY?</li>
</ol>
","<p>The name of the key pair file does not matter, as you explicitly tell JSch the path to the file. All the JSch cares for is the contents.</p>

<p>Though a convention is to use <code>id_dsa</code> or <code>id_rsa</code>.</p>

<hr>

<p>If you convert the key pair file from one format (e.g. PuTTY/.ppk) to another (e.g. OpenSSH) and you can authenticate using the key in the original format, you do not need to add a new public key to the server. Because there's no new public key. The key pair (both the private key and the public key) is still the same. All that changes is the format how the key is stored in the file.</p>
","61","<java><ssh><putty><jsch><private-key>","0","2","1","2015-10-02 20:18:28","32881445","0","","850848","","2015-10-01 07:11:54","2015-09-30 20:18:01",""
"52017922","Log in with SSH with a private key","<p>I've been given by someone a private key to log into their machine with SSH. I got no public key, and the password authentication works. I added the key to /root/.ssh/id_rsa, but it still doesn't work. What am I missing? I thought I would have to get the public key from the private one, but I have no idea how to do that.
I cannot generate a new key pair, because I don't have writing permissions to that remote machine. I have to do it just with the private key.</p>
","<p>Found the answer:</p>

<ol>
<li><p>First check if what you have is a private key (you will need the passcode for that):</p>

<p><code>ssh-keygen -lf ~/.ssh/id_rsa</code></p></li>
<li><p>Then generate the public side of the key and output it to id_rsa.pub</p>

<p><code>ssh-keygen -y -f ~/.ssh/id_rsa &gt; ~/.ssh/id_rsa.pub</code></p></li>
</ol>
","60","<ssh><private-key><openssh>","-1","-1","1","2018-08-25 20:59:56","52021180","4","","","","","2018-08-25 13:48:01","2018-08-26 20:31:36"
"50832639","How to generate a pem format privateKey with Java?","<p>I hava a <code>private key</code> is raw <code>byte[]</code> type, <strong>need to be transform to a pem style</strong>.</p>

<p><em>So my question is</em>: </p>

<p>How to generate a pem format with Java?</p>
","<p>PEM format Keys are written to files in Base 64 encoding.</p>

<p>So, you will need to convert your bytes into that format and then save it.</p>

<hr>

<p>Hope this helps!</p>
","60","<java><encryption><private-key><pem>","0","1","1","2018-06-13 09:10:13","","1","1","7911776","","2018-06-13 09:10:13","2018-06-13 08:35:32",""
"30377417","Using RSA with my private key by C#","<p>I'm provided a private key (a string). I have to generate a public key by that private key to encrypt data.
I don't know how to do. Please help me. Thank you.</p>
","<p>Simply by having the private key you can not generate a public key.
Private and public keys are generated in pair and should be provided to you for encrypting data.</p>

<p>However you still can sign data using private key alone.</p>
","60","<c#><rsa><private-key>","-6","1","2","2015-05-21 15:38:09","","1","","","","","2015-05-21 14:57:26",""
"30377417","Using RSA with my private key by C#","<p>I'm provided a private key (a string). I have to generate a public key by that private key to encrypt data.
I don't know how to do. Please help me. Thank you.</p>
","<pre><code>  var keypair = ""Your keypair in xml format"";
  using (var rsa = new RSACryptoServiceProvider()) {
    rsa.FromXmlString(keypair);
    var publicKeyInXmlFormat = rsa.ToXmlString(false);
  }
</code></pre>
","60","<c#><rsa><private-key>","-6","0","2","2015-05-21 15:38:09","","1","","","","","2015-05-21 14:57:26",""
"47323517","Private Key Update at TFS Build Server","<p>I am facing signing issue once i try to build the project from TFS build Definition. Few Days back Private key .pfx was got expired &amp; dll's are not getting digitally signed through build tempplate. Getting this error. </p>

<p>SignTool Error: The signer's certificate is not valid for signing.
SignTool Error: An error occurred while attempting to sign:
Code Signing failed for DLL Path..</p>

<p>Although i have received new private key &amp; have installed this at build server but still getting error. however through command line i can do digitally sign. But using build definition at build server it's failing &amp; build is getting partially succeeded.
Can anyone help me to tell about the location at build server where we can update the private key so that it's get signed through build template.</p>

<p>Please suggest your thoughts.</p>

<p>Thanks,</p>
","","59","<tfs><build><private-key>","0","","0","2017-11-16 07:03:06","","2","","","","","2017-11-16 07:03:06",""
"53465038","Can keypair be changed for every message on end-to-end encryption?","<p>I am thinking of security in an encrypted app, and was wondering if it would be feasible and if it would in any way add any security to the app if the keypair created for a user could change with each message sent, so every message is encrypted with a different private key? I understand there would a tremendous need for syncing between user's keys, but this is just a hypothesis I am thinking of.
thanks</p>
","<p>Of course, you can use only one key for each message and we called this <a href=""https://en.wikipedia.org/wiki/Forward_secrecy"" rel=""nofollow noreferrer"">forward security</a>. To achieve this you need to use a key exchange protocol as <a href=""https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange"" rel=""nofollow noreferrer"">Diffie-Hellman Key exchange protocol</a>. This will increase communication, but security is not cheap and it is used in <a href=""https://blogs.cisco.com/security/tls-1-3-and-forward-secrecy-count-us-in-and-heres-why"" rel=""nofollow noreferrer"">TLS 1.3</a> </p>

<p>With forward secrecy, even successful attacks in of the parties, the attacker can at most access the current key if there is an encryption operation. The previous keys are not stored once the message was sent so there is no key compromise.</p>
","59","<encryption><public-key-encryption><private-key>","4","2","3","2018-12-20 19:56:44","","0","","","","","2018-11-25 05:54:55",""
"53465038","Can keypair be changed for every message on end-to-end encryption?","<p>I am thinking of security in an encrypted app, and was wondering if it would be feasible and if it would in any way add any security to the app if the keypair created for a user could change with each message sent, so every message is encrypted with a different private key? I understand there would a tremendous need for syncing between user's keys, but this is just a hypothesis I am thinking of.
thanks</p>
","<p>It is well possible, but feasibility may depend on how you use your keys.</p>

<p>As already answered - ephemeral (one-time temporary) keys are used in TLS for achieving forward-secrecy in the key-excange to derive symmetric session encryption keys. So it's not really a new keypair for every message, but rather for establishig a session. Generating a new good key may needs some performance and time.</p>

<p>Even so your app needs to maintain a long-time key to sign the ephemeral public key to ensure integrity so the recceiving party can be sure the ephemeral keys are really from party it claims to be. That is as well part of te TLS key exchange.</p>

<p>If you are not using direct (session) communication, but sending the messages asynchronously, I see no point to generate a new keypair. You can just create a new random encryption key (assuming hybrid encryption). To ensure integrity the message needs to be signed by the sender as well, so a long-lived persistent key is necessary.  </p>
","59","<encryption><public-key-encryption><private-key>","4","2","3","2018-12-20 19:56:44","","0","","","","","2018-11-25 05:54:55",""
"53465038","Can keypair be changed for every message on end-to-end encryption?","<p>I am thinking of security in an encrypted app, and was wondering if it would be feasible and if it would in any way add any security to the app if the keypair created for a user could change with each message sent, so every message is encrypted with a different private key? I understand there would a tremendous need for syncing between user's keys, but this is just a hypothesis I am thinking of.
thanks</p>
","<p>For encryption, the message receiver could generate a new public/private key pair and send the public key to the message sender.  The sender could then encrypt using this public key.  This decreases the risk due to a compromised key pair.  You lose just one message if the ephemeral key is compromised instead of all of them if a long-term key is compromised.<br></p>

<p>However, encrypting alone does not provide security.  You also need to authenticate the sender and receiver and provide integrity.  </p>

<p>For authentication, you either need a large set of pre-generated keys that are mapped to particular identities in a secure way (e.g., certificate signed by trusted certificate authority, as in PKI), or some other way to prove who generated each key pair.  This is the tremendous syncing effort you mention.  </p>

<p>The PKI method introduces many ways to authenticate as a user due to their many keys, so it actually reduces security by increasing the attack surface.  If you do things right, the bigger attack surface is balanced by the fact that an attack on an ephemeral key limits damage to a single message.  However, to enforce this limit, you have to have a secure, public place where a list of valid/used keys is maintained in real-time.  Otherwise the single-use keys could be re-used.</p>

<p>If you don't pre-generate keys, you need a long-term public/private key pair to establish ownership of the temporary pair through a method such as a signature.  You may reduce the risk of compromise to the long-term key pair by using it just for signing ephemeral key pairs.  However, this just reduces one type of risk associated with the long-term key pair.  You still have risks associated with generation, distribution, storage, and binding the long-term key pair to a particular user, and the ephemeral key pairs are dependent on the long-term key pair for their security.</p>

<p>For integrity, you can use digital signatures.  Many digital signature methods are similar to authentication methods, where a private key operation is the key security operation.</p>

<p>Bottom line: you may be able to increase security by using ephemeral key pairs for each message, but performance will be impacted, you have to be careful about implementation, and the security benefits are minimal.</p>
","59","<encryption><public-key-encryption><private-key>","4","0","3","2018-12-20 19:56:44","","0","","","","","2018-11-25 05:54:55",""
"11821219","xcode refuse to run application on iphone something about private key","<p>I spent one full week trying to get over this problem but nothing appears to help me.</p>

<p>I use to have a MacBook Pro, and I used it to connect my iphone devices and deploy my iOS applications on it. Now I have bought an new Mac Book pro, when I try to test some applications on my new iPhone using my new Mac, it just refuse to accept it or accept any of my old devices I registered on my old MAC. </p>

<p>It just report : ""Code Signature error"". I found in the device organizer >> iphone >> Provisioning profile in the status of ""valid singing identity is not found""</p>

<p>From my reading and trying, I think the problem is that my new Mac seems to not bet able to get the private key of my team. However, I don't know how to get this key from my old Mac, and I don't know - if it possible - how to get new key for my new Mac.</p>

<p>Thank you in advance for your answer.</p>
","<p>Did you verify that your certificates are present in the new Mac's keyChain ? (should if you initialized from a time machine). If they are not, export the certificates on the old mac with the keychain utility. Later import them in the new mac's keychain.</p>

<p>Look for certificates whose name begins with iPhone developer and iPhone distribution.</p>
","58","<xcode4><private-key>","0","0","2","2012-08-21 09:50:35","11883361","0","","","","","2012-08-06 00:09:54",""
"11821219","xcode refuse to run application on iphone something about private key","<p>I spent one full week trying to get over this problem but nothing appears to help me.</p>

<p>I use to have a MacBook Pro, and I used it to connect my iphone devices and deploy my iOS applications on it. Now I have bought an new Mac Book pro, when I try to test some applications on my new iPhone using my new Mac, it just refuse to accept it or accept any of my old devices I registered on my old MAC. </p>

<p>It just report : ""Code Signature error"". I found in the device organizer >> iphone >> Provisioning profile in the status of ""valid singing identity is not found""</p>

<p>From my reading and trying, I think the problem is that my new Mac seems to not bet able to get the private key of my team. However, I don't know how to get this key from my old Mac, and I don't know - if it possible - how to get new key for my new Mac.</p>

<p>Thank you in advance for your answer.</p>
","<p>Ok, I found the solution in this link:
<a href=""http://www.iphonedevsdk.com/forum/iphone-sdk-tutorials/90538-critical-back-up-your-developer-key.htm"" rel=""nofollow"">http://www.iphonedevsdk.com/forum/iphone-sdk-tutorials/90538-critical-back-up-your-developer-key.htm</a></p>

<p>I manage to archive my old Private key from my old Mac and installed it again on my new one and everything went perfect :)</p>

<p>Thank you.</p>
","58","<xcode4><private-key>","0","0","2","2012-08-21 09:50:35","11883361","0","","","","","2012-08-06 00:09:54",""
"54032122","How to do ""Client Authentification"" if I'm not able to provide private key","<p>I want to set up my local server to communicate with my client. They build TLS connection using Openssl. I try to implement double side authentication, like server would verify client and client also needs to verify server.</p>

<p>When I use certificates generated by my self, everything works fine. The code is as following. It's C++ code in client. I set up client cert, private key and intermediate cert. In server side I saved a CA cert.</p>

<p>The relationship is: CA signs intermediate cert, intermediate cert signs client cert.</p>

<p>As we know, the reason that we need to provide client private key is the client will signature a ""challenge"" then send to server. Server could get client public key by certificate chain and use it to decode the encrypt ""challenge"" to see if they matched. You could see this link for detailed process:
<a href=""https://en.wikipedia.org/wiki/Transport_Layer_Security#TLS_handshake"" rel=""nofollow noreferrer"">https://en.wikipedia.org/wiki/Transport_Layer_Security#TLS_handshake</a></p>

<p>However in my scenario, I have no permission to get the private key. I only have an API to call, which takes the digest or anything we want to encode as input and return a string encoded by client private key.</p>

<p>Therefore I'm not able to pass any ""ClientPrivateKeyFileTest"" to TLS.</p>

<p>I searched openssl source code but all handshakes were done in this function: SSL_do_handshake() and I'm not allowed to modify this function.</p>

<pre><code>// load client-side cert and key
SSL_CTX_use_certificate_file(m_ctx, ClientCertificateFileTest, SSL_FILETYPE_PEM);
SSL_CTX_use_PrivateKey_file(m_ctx, ClientPrivateKeyFileTest, SSL_FILETYPE_PEM);

// load intermediate cert
X509* chaincert = X509_new();
BIO* bio_cert = BIO_new_file(SignerCertificateFileTest, ""rb"");
PEM_read_bio_X509(bio_cert, &amp;chaincert, NULL, NULL);
SSL_CTX_add1_chain_cert(m_ctx, chaincert)

m_ssl = SSL_new(m_ctx);

// get_seocket is my own API
m_sock = get_socket();

SSL_set_fd(m_ssl, m_sock)

// doing handshake and build connection
auto r = SSL_connect(m_ssl);
</code></pre>

<p>I think all handshake processes would be done after I call SSL_connect(). So I wonder is there other way I can do to complete the client-authentication?</p>

<p>For example, I could skip adding private key step but set up a callback function somewhere which can handle all cases when SSL needs to use private key to calculate something.</p>

<p>PS: The API is a black box in the client machine.</p>

<blockquote>
  <p>One more thing, these days I found that openssl engine may help this problem. But does anybody know what kind of engine is useful for this problem? The EC sign, verification or others?</p>
  
  <p>Final update: I implemented a OpenSSL engine to reload EC_KEY_METHOD so that I'm able to use my own sign function. </p>
</blockquote>

<p>Thanks a lot!</p>
","","58","<c++><openssl><private-key><client-certificates>","0","","0","2019-01-09 01:34:40","","10","1","10864540","","2019-01-09 01:34:40","2019-01-04 01:37:07",""
"55658026","BIP39 - Trying to understand how to derive keys from seed in python3","<p>I'm trying to understand how to derive keys from the seeds in Python3.</p>

<p>I found out how to program from Entropy bytes to Mnemonic to Seeds.</p>

<p>But I'm having trouble understanding how to exactly derive BIP32 Root Key, Account Extended Private Key, Account Extended Public Key, BIP32 Extended Private Key, and BIP32 Extended Public Key from Seeds in Python3.</p>

<p>I used the website, <a href=""https://iancoleman.io/bip39/#english"" rel=""nofollow noreferrer"">https://iancoleman.io/bip39/#english</a>,</p>

<p>Can anyone help me with what function/algorithm I have to use?</p>

<p>Thanks</p>
","","57","<python><bitcoin><private-key><public-key>","0","","0","2019-04-13 01:21:26","","1","","1068283","","2019-04-13 01:21:26","2019-04-12 19:04:25",""
"26381917","Asymmetric unique pair algorithm","<p>This is a fast question. I know about asymmetric encryption and I know that you can use the private key to decrypt whatever is encrypted with the public key. I know too that having the Private key I can generate the public one associated to it. </p>

<p>Here is my question: Is there any crypto algorithm to generate a pair of keys so I can't generate the public one having the private? </p>

<p>I would like to know if there is something like </p>

<p>Private(ciphertext) = Encrypted </p>

<p>Public(Encrypted) = ciphertext</p>

<p>Public(ciphertext) = Encrypted2</p>

<p>Private(Encrypted2)= ciphertext</p>

<p>And without generating the public from the private.</p>

<p>Thank you very much</p>
","<p>The RSA algorithm relies on the difficulty of factoring the product of two prime numbers. 
Two large, arbitrary, prime numbers <code>p</code> and <code>q</code> are used generate each private-public key pair. Given either only the private key or the public key, it is computationally difficult to find the other key without the prime numbers <code>p</code> and <code>q</code>. However, we do not <code>p</code> and <code>q</code> in order to apply either the public or the private key to a text.</p>
","57","<algorithm><encryption><public-key-encryption><private-key><encryption-asymmetric>","0","0","2","2014-10-15 15:27:26","","0","","","","","2014-10-15 11:54:14",""
"26381917","Asymmetric unique pair algorithm","<p>This is a fast question. I know about asymmetric encryption and I know that you can use the private key to decrypt whatever is encrypted with the public key. I know too that having the Private key I can generate the public one associated to it. </p>

<p>Here is my question: Is there any crypto algorithm to generate a pair of keys so I can't generate the public one having the private? </p>

<p>I would like to know if there is something like </p>

<p>Private(ciphertext) = Encrypted </p>

<p>Public(Encrypted) = ciphertext</p>

<p>Public(ciphertext) = Encrypted2</p>

<p>Private(Encrypted2)= ciphertext</p>

<p>And without generating the public from the private.</p>

<p>Thank you very much</p>
","<p>You can't conclude that because you have a private key then you can generate the public key. Take <strong>RSA</strong> as an example - here you can't deduct one of the keys in a key pair from the other - and which one is picked as the private key, and which is picked as the public key is random.</p>

<p>However, when storing the keys the private key file usually includes a copy of the public key as well (or enough information to recreate it). </p>
","57","<algorithm><encryption><public-key-encryption><private-key><encryption-asymmetric>","0","0","2","2014-10-15 15:27:26","","0","","","","","2014-10-15 11:54:14",""
"44834151","Android's Fingerprint Scanner as gateway to enrol multiple fingerprints and generate Asymmetric Keys","<p>Is it possible to use the Android's Fingerprint Scanner as gateway for generating Asymmetric Keys. </p>

<p>The phone is used to enrol multiple fingerprints, generate the Asymmetric Keys and send the public key to an online database (if possible via sms).</p>

<p>All the private key are destroyed or saved by the user as an mnemonic password.   </p>
","<p>For a GMS certified device, you won't be able to access any fingerprint-specific info on Android 6.0+. So I don't believe you can generate an asymmetric key from it as no unique information can be obtained from the TEE.</p>

<p>See: <a href=""https://source.android.com/compatibility/7.1/android-7.1-cdd.pdf"" rel=""nofollow noreferrer"">https://source.android.com/compatibility/7.1/android-7.1-cdd.pdf</a></p>

<p>Section: 7.3.10</p>

<p>Highlights:</p>

<ul>
<li>MUST have a hardware-backed keystore implementation, and perform the
fingerprint matching in a Trusted Execution Environment (TEE) or on a
chip with a secure channel to the TEE.</li>
<li>MUST have all identifiable fingerprint data encrypted and
cryptographically authenticated such that they cannot be acquired,
read or altered outside of the Trusted Execution Environment (TEE) as
documented in the implementation guidelines on the Android Open
Source Project site.</li>
<li>MUST NOT enable 3rd-party applications to distinguish between
individual fingerprints.</li>
</ul>

<p>The fingerprint API seems to only be able to authenticate the fingerprint and little else: <a href=""https://developer.android.com/reference/android/hardware/fingerprint/FingerprintManager.html"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/hardware/fingerprint/FingerprintManager.html</a></p>
","56","<android><encryption><private-key><fingerprint><encryption-asymmetric>","0","0","1","2017-08-08 23:08:15","","0","","","","","2017-06-29 20:11:19",""
"57490675","How to fix ""undefined is not an object (evaluating 'Transform.call')"" for ethereumjs-tx","<p>I am want to develop a mobile application which will send a transaction to interact with my smart contract.</p>

<p>When execute ""ethereumjs-tx.sign(..)"" , it throw exception.
(FYR: I am using web3@0.19, ethereumjs-util@4.4 and ethereumjs-tx@1.3 include my app.)</p>

<p>I tried to execute other function in ethereumjs-tx, such as toCreationAddress() and getChainId(). They are work.
Also, I tried the latest version of web3, ethereumjs-tx and ethereumjs-util, but not helpful.</p>

<pre><code>import React from 'react';
import { StyleSheet, Text, View, Button } from 'react-native';

import './global';

var Web3 = require('web3');
var web3 = new Web3(new Web3.providers.HttpProvider('https://ropsten.infura.io/'));
var util = require('ethereumjs-util');
var tx = require('ethereumjs-tx');

export default function App() {

  pressMe = () =&gt; {
    var rawTx = {
        nonce: '0x002D',
        gasPrice: '0x3B9ACA00',
        gasLimit: '0xC20A',
        to: &lt;&lt;..smart contract address..&gt;&gt;
        value: '0x00',
        data: '0x...',
        chainId:""0x03""
    }
    console.log(rawTx);
    var p = new Buffer(&lt;&lt;..privateKey..&gt;&gt;, 'hex');
    var transaction = new tx(rawTx);

    transaction.sign(p) ;

  }

  return (
    &lt;View style={styles.container}&gt;
      &lt;Text&gt;Open up App.js to start working on your app!&lt;/Text&gt;
      &lt;Button onPress={this.pressMe} title=""Click""&gt;&lt;/Button&gt;
    &lt;/View&gt;
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center',
  },
});
</code></pre>

<p>When run ""pressMe"" function, and execute ""transaction.sign(p)"", it throw exception.</p>

<p><img src=""https://i.stack.imgur.com/kFKjl.jpg"" alt=""Error capture screen""></p>

<p>Please help.</p>
","","56","<react-native><private-key><sign><smartcontracts>","0","","0","2019-08-14 08:46:23","","0","","8926905","","2019-08-14 08:46:23","2019-08-14 08:09:22",""
"36835911","How do I establish an HTTPS connection from client by the server public key to that specific server?","<p>I have a client-server model.</p>

<p>The server generated a key pair and shipped public keys to all the clients.
In order to confirm the server is the real server I gonna to make connection to, I want to establish an HTTPS connection by the server public key to that specific server.</p>

<p>How can I do that? Or is there any better way to authenticate the server?</p>

<p>This is the first time I ask at stackoverflow. So, if you have any suggestion please don't hesitate to tell me. Thank you.</p>

<p>PS: Source code is written in C#.</p>
","<p>I think what I need is the term ""Certificate and Public Key Pinning"".</p>

<p><a href=""https://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning"" rel=""nofollow"">https://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning</a></p>
","56","<c#><https><openssl><private-key><public-key>","-1","0","1","2016-05-02 06:01:01","","0","1","5465167","","2016-04-26 01:48:59","2016-04-25 08:55:09",""
"57272743","Get private key out of a .pfx file in c#","<p>I am needing the private key of a key-pair generated for digital signature using EC algorithm. I need it in <code>byte[]</code> to sign data inside a specific method in C++ that only accepts <code>byte[]</code> format. 
The private key is contained in a <code>.pfx</code> file that has both, public and private. 
Despite that, I am not able to extract the <code>byte[]</code> out of the file. </p>

<pre class=""lang-cs prettyprint-override""><code>var certificate = new X509Certificate2(fileName, password);
ECDsa privateKey = certificate.GetECDsaPrivateKey();
// TODO: how to extract byte[] from privateKey?
</code></pre>

<p>Is there a way of doing it or is it impossible and the private key should be stored elsewhere and not in a <code>.pfx</code> file?</p>
","","55","<c#><certificate><private-key><pfx>","1","","0","2019-07-30 13:41:59","","2","","4416750","","2019-07-30 13:41:59","2019-07-30 13:20:09",""
"51471267","Can someone obtain the private key from the public key?","<p>I know the keys are random but have been linked together. This is proven by visiting ethereum database found <a href=""http://ethdir.io/2"" rel=""nofollow noreferrer"">here</a> and <a href=""http://www.ethersecret.com/3"" rel=""nofollow noreferrer"">here</a>. I have confirmed several public and private keys at myetherwallet.com (with and without balance, including my own -- all are a match). </p>

<p>So my next question is.... if you <em>cannot</em> obtain a private key by only the public key, how was the database type websites created above? Why is the info on the site accurate? I have noticed the only thing searchable is private keys, not public key. </p>
","<p>You can (easily) derive a public key from a private key. Going the other way is practically impossible.</p>

<p>The pages you link to are just showing possible private keys in numerical order, and next to each, they're showing the derived public key.</p>
","55","<database><ethereum><private-key><wallet>","-2","0","1","2018-07-23 06:45:50","","2","","","","","2018-07-23 03:34:49",""
"23368007","SSL certificate install on hosting, generating key","<p>I have SSL certificate, which i upload on my hosting. I need to generate private key, how i can generate it without ssh access.
Thanks.</p>
","<p>Run the commands provided in the instructions for the tool you are using, but on your local machine. For example, if you are using OpenSSL on your hosting server, generate your private key file using your local command prompt, and upload that through the tools provided by your provider.</p>
","55","<ssl><private-key>","0","0","2","2014-04-30 00:20:00","23377550","1","","","","","2014-04-29 14:46:21","2014-04-30 05:06:02"
"23368007","SSL certificate install on hosting, generating key","<p>I have SSL certificate, which i upload on my hosting. I need to generate private key, how i can generate it without ssh access.
Thanks.</p>
","<p>You can't generate a private key from a certificate (that's the point).</p>

<p>If you already have your certificate, you must have generated a certificate request (CSR) (or perhaps its in-browser equivalent) and generated a private key at that time. This is the file you want, since other re-generated keys won't match the public key in the certificate you now have.</p>
","55","<ssl><private-key>","0","1","2","2014-04-30 00:20:00","23377550","1","","","","","2014-04-29 14:46:21","2014-04-30 05:06:02"
"54388216","Permission denied (publickey) when fetching PUBLIC GitHub repository with Jenkins; private repos fetch fine","<p>I have a CI setup which goes like so:</p>

<ul>
<li><p>A private main repository (<code>shoot-for-the-moon</code>)</p></li>
<li><p>A private submodule (<code>ShooterBase</code>)</p></li>
<li><p>A public submodule (<code>UnrealUtilityAI</code>)</p></li>
</ul>

<p>Everything is hosted on GitHub. Jenkins is able to clone <em>both</em> the private repos, but fails when cloning the public repo -- the exact <em>opposite</em> of what you think would happen. I'm running Jenkins on Windows, with Jenkins running as a Windows service (no dedicated Jenkins user). The private key does not have a passphrase associated with it; it's one I generated fresh when I first started running into this issue.</p>

<p>Here's the log:</p>

<pre><code>04:23:05  &gt; C:\Program Files\Git\cmd\git.exe rev-parse --is-inside-work-tree # timeout=10
04:23:05 Fetching changes from the remote Git repository
04:23:05  &gt; C:\Program Files\Git\cmd\git.exe config remote.origin.url git@github.com:Jay2645/shoot-for-the-moon.git # timeout=10
04:23:06 Fetching upstream changes from git@github.com:Jay2645/shoot-for-the-moon.git
04:23:06  &gt; C:\Program Files\Git\cmd\git.exe --version # timeout=10
04:23:06 using GIT_SSH to set credentials A private key with no passphrase.
04:23:06  &gt; C:\Program Files\Git\cmd\git.exe fetch --tags --force --progress git@github.com:Jay2645/shoot-for-the-moon.git +refs/heads/*:refs/remotes/origin/* # timeout=180
04:23:07  &gt; C:\Program Files\Git\cmd\git.exe rev-parse ""refs/remotes/origin/master^{commit}"" # timeout=10
04:23:07  &gt; C:\Program Files\Git\cmd\git.exe rev-parse ""refs/remotes/origin/origin/master^{commit}"" # timeout=10
04:23:07 Checking out Revision da16645fd46e977a876986f4005f5e7b8d5be57e (refs/remotes/origin/master)
04:23:07  &gt; C:\Program Files\Git\cmd\git.exe config core.sparsecheckout # timeout=10
04:23:08  &gt; C:\Program Files\Git\cmd\git.exe checkout -f da16645fd46e977a876986f4005f5e7b8d5be57e
04:23:09 Commit message: ""Updated packaging settings.""
04:23:09  &gt; C:\Program Files\Git\cmd\git.exe rev-list --no-walk da16645fd46e977a876986f4005f5e7b8d5be57e # timeout=10
04:23:09  &gt; C:\Program Files\Git\cmd\git.exe remote # timeout=10
04:23:09  &gt; C:\Program Files\Git\cmd\git.exe submodule init # timeout=10
04:23:10  &gt; C:\Program Files\Git\cmd\git.exe submodule sync # timeout=10
04:23:11  &gt; C:\Program Files\Git\cmd\git.exe config --get remote.origin.url # timeout=10
04:23:11  &gt; C:\Program Files\Git\cmd\git.exe submodule init # timeout=10
04:23:12  &gt; C:\Program Files\Git\cmd\git.exe config -f .gitmodules --get-regexp ^submodule\.(.+)\.url # timeout=10
04:23:12  &gt; C:\Program Files\Git\cmd\git.exe config --get submodule.Plugins/ShooterBase.url # timeout=10
04:23:12  &gt; C:\Program Files\Git\cmd\git.exe config -f .gitmodules --get submodule.Plugins/ShooterBase.path # timeout=10
04:23:12  &gt; C:\Program Files\Git\cmd\git.exe submodule update Plugins/ShooterBase # timeout=180
04:23:14  &gt; C:\Program Files\Git\cmd\git.exe config --get submodule.Plugins/UnrealUtilityAI.url # timeout=10
04:23:14  &gt; C:\Program Files\Git\cmd\git.exe config -f .gitmodules --get submodule.Plugins/UnrealUtilityAI.path # timeout=10
04:23:14  &gt; C:\Program Files\Git\cmd\git.exe submodule update Plugins/UnrealUtilityAI # timeout=180
04:23:17 hudson.plugins.git.GitException: Command ""C:\Program Files\Git\cmd\git.exe submodule update Plugins/UnrealUtilityAI"" returned status code 1:
04:23:17 stdout: 
04:23:17 stderr: Cloning into 'D:/CI/Plugins/UnrealUtilityAI'...
04:23:17 git@github.com: Permission denied (publickey).
04:23:17 fatal: Could not read from remote repository.
04:23:17 
04:23:17 Please make sure you have the correct access rights
04:23:17 and the repository exists.
04:23:17 fatal: clone of 'git@github.com:Jay2645/UnrealUtilityAI.git' into submodule path 'D:/CI/Plugins/UnrealUtilityAI' failed
</code></pre>

<p>At first I thought it was just something funny going on with permissions or something weird, so I tried running the <em>exact same command</em> in a generic Windows command prompt, only adding quotes and removing the comment:</p>

<pre><code>C:\Users\jayst&gt;cd /d D:\CI

D:\CI&gt;""C:\Program Files\Git\cmd\git.exe"" submodule update Plugins/UnrealUtilityAI
Cloning into 'D:/CI/Plugins/UnrealUtilityAI'...
Submodule path 'Plugins/UnrealUtilityAI': checked out '1fbb5cea8a3485c902e4e159b410fb921e3e89a7'
</code></pre>

<p>It works fine in regular command prompt! The only difference is me lacking the Git config commands (<code>C:\Program Files\Git\cmd\git.exe config -f .gitmodules --get submodule.Plugins/ShooterBase.path</code>, etc.), which I didn't even notice until I made this post -- but even then, I don't know if they're causing the problem or how to disable them even if they were what was causing the issue.</p>

<p>I'm honestly puzzled -- it feels like I'm in backwards-land. My only guess is that Jenkins somehow sets an environment variable when switching from the private to the public repo, and that's messing with something. I've tried setting the <code>GIT_SSH</code> Environment Variable to <code>&lt;PATH_TO_SSH_EXE&gt; -i &lt;PATH_TO_MY_PRIVATE_KEY&gt;</code>, but I'm not sure if I configured it right, as I get a message saying it can't find my private key (I've tried both Windows and Unix-style paths).</p>

<p>This is driving me nuts; I can easily fix it by just going into the command prompt, but it's a real pain having a build fail until I manually go in and fix it. I'm at a loss as to what to do. Any help?</p>
","","55","<git><jenkins><ssh><private-key>","0","","0","2019-01-27 12:47:49","","1","","4362221","","2019-01-27 12:47:49","2019-01-27 12:42:24",""
"31489608","How to Place exported files in Secure File Transfer Protocol(SFTP) location using Mysql Stored Procedure","<p>Is it possible to create a Stored Procedure in MySQL to read values from some tables and dump the data set in <code>.csv</code> or <code>.txt</code> file to some Secure File Transfer Protocol locations using the <code>.ppk</code> (PuTTY Private Key) file for authentication. If yes, what are the steps to achieve this.</p>
","<p>No, you cannot do that in MySQL. Two feature to access a filesystem, the <a href=""https://dev.mysql.com/doc/refman/5.6/en/load-data.html"" rel=""nofollow"">LOAD DATA INFILE</a> syntax and the <a href=""https://dev.mysql.com/doc/refman/5.6/en/string-functions.html#function_load-file"" rel=""nofollow"">LOAD_FILE()</a> function, are both readonly and both limited to files that are <em>local to either the server or the client machine</em>. The MySQL server cannot directly access filesystems hosted by other servers. </p>
","54","<mysql><authentication><stored-procedures><sftp><private-key>","0","0","1","2015-07-20 10:00:08","","0","","4186297","","2015-07-20 10:00:08","2015-07-18 09:12:11",""
"37537151","How to verify a file using a public key in Android?","<p>My app is large, so it uses an expansion file. I want my app to verify that the expansion file it's about to load, was generated by me and not someone else.</p>

<p>I could zip up the expansion file using a password, but that would require me to embed the password into the source code of the app. This is not very effective since anyone could decompile the app and retrieve the password.</p>

<p>What I want is three things:
<br/>
1- A tool that allows me to sign the file using a private key (a random string).
<br/>
2- A Java library that allows me to verify the signed file using...
<br/>
3- The corresponding public key (another random string) that I can embed into the source code of the app.</p>

<p>Can someone point me in the right direction?</p>
","","53","<android><private-key><public-key><apk-expansion-files>","1","","0","2016-05-31 04:58:34","","2","1","","","","2016-05-31 04:58:34",""
"47987718","Is Private key generate during CSR Creation for Signing Certificate?","<p>I have created the CSR for my Signing Certificate. During CSR creation, the CSR file saved on my system. But i couldn't find where is the Private key file. I am following the below URL instruction to create CSR file. Anyone help me with these how to check and find Private key file.
<a href=""https://in.godaddy.com/help/windows-generate-csr-for-code-or-driver-signing-certificate-7282"" rel=""nofollow noreferrer"">https://in.godaddy.com/help/windows-generate-csr-for-code-or-driver-signing-certificate-7282</a></p>

<p>Thanks for your help.</p>
","<p>In Windows the private key is generated when you use the snap-in to generate the CSR.  The private key is stored (encrypted) at:</p>

<pre><code>%APPDATA%\Microsoft\Crypto\RSA\Your SID
</code></pre>

<p>or</p>

<pre><code>%APPDATA%\Microsoft\Crypto\Keys
</code></pre>

<p>If there are multiple files in that folder, look for one with a date and time close to when you generated your CSR.</p>
","53","<private-key><csr><code-signing-certificate>","0","0","1","2017-12-27 07:58:34","","1","","","","","2017-12-27 06:56:08",""
"36739918","How to get the message from the signature as a receiver","<p>If I use server-client method, the client update signature using data(message).
And send to server. How does the server get the message from this signature?</p>

<pre><code>final String message = ""Hello world is a stupid message to be signed"";

final KeyPair keyPair = KeyPairGenerator.getInstance(""RSA"").generateKeyPair();

final Signature privSig = Signature.getInstance(""SHA1withRSA"");

privSig.initSign(keyPair.getPrivate());

privSig.update(message.getBytes());

byte[] signature = privSig.sign();

final Signature pubSig = Signature.getInstance(""SHA1withRSA"");

pubSig.initVerify(keyPair.getPublic());
pubSig.update(message.getBytes());

System.out.println(pubSig.verify(signature));
</code></pre>
","<p>The signature contains the message in a mangled or digested form. You cannot extract the message from it. You need to send the plain message along with the signature to the receiver. Otherwise, they cannot verify the validity.</p>
","53","<java><digital-signature><public-key-encryption><private-key><java-security>","-1","0","1","2016-04-20 10:19:46","36740727","0","","1816580","","2016-04-20 10:19:46","2016-04-20 09:46:21",""
"57159227","RSA decryption error with PKCS#1: javax.crypto.IllegalBlockSizeException: Data must not be longer than 256 bytes","<p>I am running into this problem when trying to decrypt a message.</p>

<h2>Error</h2>

<pre><code>An exception or error caused a run to abort: Data must not be longer than 256 bytes 
javax.crypto.IllegalBlockSizeException: Data must not be longer than 256 bytes
</code></pre>

<p>My code is as follows.</p>

<pre><code>package com.smth.what.api

import java.security.spec.X509EncodedKeySpec
import java.security.{KeyFactory, PrivateKey, PublicKey}

import javax.crypto.Cipher
import org.apache.commons.codec.binary.Base64

object Encryptor {
  private val publicKeyString: String = System.getenv(""PUB_KEY"")
  private val privateKeyString: String = System.getenv(""PRIV_KEY"")

  private val publicKey = readPemPublicKey(publicKeyString)
  private val privateKey = readPemPrivateKey(privateKeyString)

  private def readPemPublicKey(publicKey: String): PublicKey = {
    val pemPublicKey = publicKey.replace(""\n"", """")
      .replace(""-----BEGIN PUBLIC KEY-----"", """")
      .replace(""-----END PUBLIC KEY-----"", """")
      .replace("" "", """")

    val publicKeyBytes: Array[Byte] = Base64.decodeBase64(pemPublicKey)
    val publicKeySpec = new X509EncodedKeySpec(publicKeyBytes)

    val keyFactory = KeyFactory.getInstance(""RSA"")

    keyFactory.generatePublic(publicKeySpec)
  }

  private def readPemPrivateKey (privateKey: String): PrivateKey = {
    val pemPrivateKey = privateKey.replace(""\n"", """")
      .replace(""-----BEGIN RSA PRIVATE KEY-----"", """")
      .replace(""-----END RSA PRIVATE KEY-----"", """")
      .replace("" "", """")

    val privateKeyBytes: Array[Byte] = Base64.decodeBase64(pemPrivateKey)

    val keyFactory = KeyFactory.getInstance(""RSA"")

    import java.security.spec.RSAPrivateCrtKeySpec

    import sun.security.util.DerInputStream

    val derReader = new DerInputStream(privateKeyBytes)
    val seq = derReader.getSequence(0)
    val modulus = seq(1).getBigInteger
    val publicExp = seq(2).getBigInteger
    val privateExp = seq(3).getBigInteger
    val prime1 = seq(4).getBigInteger
    val prime2 = seq(5).getBigInteger
    val exp1 = seq(6).getBigInteger
    val exp2 = seq(7).getBigInteger
    val crtCoef = seq(8).getBigInteger

    val keySpec = new RSAPrivateCrtKeySpec(modulus, publicExp, privateExp, prime1, prime2, exp1, exp2, crtCoef)

    keyFactory.generatePrivate(keySpec)
  }

  def encrypt(inputString: String, key: PublicKey = publicKey): String = {
    val cipher: Cipher = Cipher.getInstance(""RSA"")
    cipher.init(Cipher.ENCRYPT_MODE, key)

    new String(cipher.doFinal(inputString.getBytes(""UTF-8"")))
  }

  def decrypt(inputString: String, key: PrivateKey = privateKey): String = {
    val cipher: Cipher = Cipher.getInstance(""RSA"")
    cipher.init(Cipher.DECRYPT_MODE, key)

    val inputStringBytes = inputString.getBytes(""UTF-8"")

    new String(cipher.doFinal(inputStringBytes))

  }
}
</code></pre>

<p>My key's size is <code>2048</code>. It was generated via <code>openssl genrsa</code> with <code>.pem</code> output.</p>

<p>I use IntelliJ's environment variable to provide both public and private keys (via the Edit Configurations, copying and pasting them).</p>

<p>The error came from this line
<code>new String(cipher.doFinal(inputStringBytes))</code> from <code>decrypt</code> function.</p>

<p>I have been reading a few stackoverflow's posts (such as this <a href=""https://stackoverflow.com/questions/20262878/how-to-encrypt-aes-keys-using-rsa-without-running-into-javax-crypto-illegalbloc"">one</a>), however, I still do not understand what is going on.</p>

<p>If possible, I would like a very basic explanation, as encryption/ decryption is a new area for me.</p>
","<p>After attempting different things, what works is to apply <code>Base64</code> encoding to the encrypted message and then use <code>Base64</code> decoding when decrypting the encrypted message. This is aligned with what @James K Polk comment is saying.</p>

<p>See the updated code (only for the functions <code>encrypt</code> and <code>decrypt</code> as the rest remains the same)</p>

<pre><code>  def encrypt(inputString: String, key: PublicKey = publicKey): String = {

    cipher.init(Cipher.ENCRYPT_MODE, key)

    val encrypted: Array[Byte] = cipher.doFinal(inputString.getBytes())

    Base64.encodeBase64String(encrypted)
  }

  def decrypt(inputString: String, key: PrivateKey = privateKey): String = {

    cipher.init(Cipher.DECRYPT_MODE, key)

    val decodedInputString: Array[Byte] = Base64.decodeBase64(inputString)

    val decrypted: Array[Byte] = cipher.doFinal(decodedInputString)

    new String(decrypted)
  }
</code></pre>
","53","<java><scala><encryption><private-key><public-key>","0","1","1","2019-07-23 23:20:29","","2","","","","","2019-07-23 07:51:10",""
"56795716","Cannot re-import private key with NCryptExportKey and NCryptImportKey","<p>I'm trying to reload a certificate private key with different export policies to fix this <a href=""https://stackoverflow.com/questions/54483371/cannot-export-rsa-private-key-parameters-the-requested-operation-is-not-support"">issue</a>. I reused the code from this <a href=""https://stackoverflow.com/questions/55236230/export-private-key-pkcs8-of-cng-rsa-certificate-with-oldschool-net"">answer</a> to export the private key, and then import it and set the export policy to AllowPlainTextExport. With that I should be able to reconstruct the original certificate with reimported private key and export its parameters if necessary. Here is the code that I have now:</p>

<pre><code>using Microsoft.Win32.SafeHandles;
using System;
using System.ComponentModel;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using System.Text;

namespace TestRsaCngExportImport
{
    class Program
    {
        internal const string NcryptPkcs8PrivateKeyBlob = ""PKCS8_PRIVATEKEY"";
        private const int NcryptDoNotFinalizeFlag = 0x00000400;
        public const string MicrosoftSoftwareKeyStorageProvider = ""Microsoft Software Key Storage Provider"";
        private static readonly byte[] pkcs12TripleDesOidBytes = Encoding.ASCII.GetBytes(""1.2.840.113549.1.12.1.3\0"");

        static void Main(string[] args)
        {
            var certificate = CreateCertificate();
            FixPrivateKey(certificate);
        }        

        public static void FixPrivateKey(X509Certificate2 certificate)
        {
            var cngKey = (RSACng)RSACertificateExtensions.GetRSAPrivateKey(certificate);
            var exported = ExportPkcs8KeyBlob(cngKey.Key.Handle, """", 1);
            var importedKeyName = ImportPkcs8KeyBlob(exported, """", 1);

            // Attempt #1

            CspParameters parameters = new CspParameters();
            parameters.KeyContainerName = importedKeyName;
            var rsaKey = new RSACryptoServiceProvider(parameters);
            certificate.PrivateKey = rsaKey; // public key doesn't match the private key

            // Attempt #2

            var rsaCngKey = new RSACng(CngKey.Open(importedKeyName));
            certificate.PrivateKey = rsaCngKey; // Only asymmetric keys that implement ICspAsymmetricAlgorithm are supported.

            // Attempt #3
            certificate.PrivateKey = null;
            X509Certificate2 certWithKey = certificate.CopyWithPrivateKey(rsaKey); // The provided key does not match the public key for this certificate.
        }

        private static X509Certificate2 CreateCertificate()
        {
            var keyParams = new CngKeyCreationParameters();
            keyParams.KeyUsage = CngKeyUsages.Signing;
            keyParams.Provider = CngProvider.MicrosoftSoftwareKeyStorageProvider;
            keyParams.ExportPolicy = CngExportPolicies.AllowExport; // here I don't have AllowPlaintextExport
            keyParams.Parameters.Add(new CngProperty(""Length"", BitConverter.GetBytes(2048), CngPropertyOptions.None));
            var cngKey = CngKey.Create(CngAlgorithm.Rsa, Guid.NewGuid().ToString(), keyParams);
            var rsaKey = new RSACng(cngKey);
            var req = new CertificateRequest(""cn=mah_cert"", rsaKey, HashAlgorithmName.SHA256, RSASignaturePadding.Pss); // requires .net 4.7.2
            var cert = req.CreateSelfSigned(DateTimeOffset.Now, DateTimeOffset.Now.AddYears(5));
            return cert;
        }

        private unsafe static string ImportPkcs8KeyBlob(byte[] exported, string password, int kdfCount)
        {
            var pbeParams = new NativeMethods.NCrypt.PbeParams();
            var pbeParamsPtr = &amp;pbeParams;
            var salt = new byte[NativeMethods.NCrypt.PbeParams.RgbSaltSize];
            using (RandomNumberGenerator rng = RandomNumberGenerator.Create())
                rng.GetBytes(salt);
            pbeParams.Params.cbSalt = salt.Length;
            Marshal.Copy(salt, 0, (IntPtr)pbeParams.rgbSalt, salt.Length);
            pbeParams.Params.iIterations = kdfCount;

            var keyName = Guid.NewGuid().ToString(""D"");
            fixed (char* passwordPtr = password)
            fixed (char* keyNamePtr = keyName)
            fixed (byte* oidPtr = pkcs12TripleDesOidBytes)
            {
                NativeMethods.NCrypt.NCryptOpenStorageProvider(out var safeNCryptProviderHandle, MicrosoftSoftwareKeyStorageProvider, 0);
                NativeMethods.NCrypt.NCryptBuffer* buffers = stackalloc NativeMethods.NCrypt.NCryptBuffer[4];

                buffers[0] = new NativeMethods.NCrypt.NCryptBuffer
                {
                    BufferType = NativeMethods.NCrypt.BufferType.PkcsSecret,
                    cbBuffer = checked(2 * (password.Length + 1)),
                    pvBuffer = (IntPtr)passwordPtr,
                };

                if (buffers[0].pvBuffer == IntPtr.Zero)
                {
                    buffers[0].cbBuffer = 0;
                }

                buffers[1] = new NativeMethods.NCrypt.NCryptBuffer
                {
                    BufferType = NativeMethods.NCrypt.BufferType.PkcsAlgOid,
                    cbBuffer = pkcs12TripleDesOidBytes.Length,
                    pvBuffer = (IntPtr)oidPtr,
                };

                buffers[2] = new NativeMethods.NCrypt.NCryptBuffer
                {
                    BufferType = NativeMethods.NCrypt.BufferType.PkcsAlgParam,
                    cbBuffer = sizeof(NativeMethods.NCrypt.PbeParams),
                    pvBuffer = (IntPtr)pbeParamsPtr,
                };

                buffers[3] = new NativeMethods.NCrypt.NCryptBuffer
                {
                    BufferType = NativeMethods.NCrypt.BufferType.PkcsKeyName,
                    cbBuffer = checked(2 * (keyName.Length + 1)),
                    pvBuffer = (IntPtr)keyNamePtr,
                };

                var desc2 = new NativeMethods.NCrypt.NCryptBufferDesc
                {
                    cBuffers = 4,
                    pBuffers = (IntPtr)buffers,
                    ulVersion = 0,
                };

                var result = NativeMethods.NCrypt.NCryptImportKey(safeNCryptProviderHandle, IntPtr.Zero, NcryptPkcs8PrivateKeyBlob, ref desc2, out var safeNCryptKeyHandle, exported, exported.Length, NcryptDoNotFinalizeFlag);
                if (result != 0)
                    throw new Win32Exception(result);

                var exportPolicyBytes = BitConverter.GetBytes(
                  (int)(CngExportPolicies.AllowExport |
                        CngExportPolicies.AllowPlaintextExport |
                        CngExportPolicies.AllowArchiving |
                        CngExportPolicies.AllowPlaintextArchiving));

                NativeMethods.NCrypt.NCryptSetProperty(safeNCryptKeyHandle, ""Export Policy"", exportPolicyBytes, exportPolicyBytes.Length, CngPropertyOptions.Persist);
                NativeMethods.NCrypt.NCryptFinalizeKey(safeNCryptKeyHandle, 0);

                return keyName;
            }
        }

        private static unsafe byte[] ExportPkcs8KeyBlob(SafeNCryptKeyHandle keyHandle, string password, int kdfCount)
        {
            var pbeParams = new NativeMethods.NCrypt.PbeParams();
            var pbeParamsPtr = &amp;pbeParams;
            var salt = new byte[NativeMethods.NCrypt.PbeParams.RgbSaltSize];
            using (RandomNumberGenerator rng = RandomNumberGenerator.Create())
                rng.GetBytes(salt);
            pbeParams.Params.cbSalt = salt.Length;
            Marshal.Copy(salt, 0, (IntPtr)pbeParams.rgbSalt, salt.Length);
            pbeParams.Params.iIterations = kdfCount;

            fixed (char* stringPtr = password)
            fixed (byte* oidPtr = pkcs12TripleDesOidBytes)
            {
                NativeMethods.NCrypt.NCryptBuffer* buffers =
                    stackalloc NativeMethods.NCrypt.NCryptBuffer[3];

                buffers[0] = new NativeMethods.NCrypt.NCryptBuffer
                {
                    BufferType = NativeMethods.NCrypt.BufferType.PkcsSecret,
                    cbBuffer = checked(2 * (password.Length + 1)),
                    pvBuffer = (IntPtr)stringPtr,
                };

                if (buffers[0].pvBuffer == IntPtr.Zero)
                {
                    buffers[0].cbBuffer = 0;
                }

                buffers[1] = new NativeMethods.NCrypt.NCryptBuffer
                {
                    BufferType = NativeMethods.NCrypt.BufferType.PkcsAlgOid,
                    cbBuffer = pkcs12TripleDesOidBytes.Length,
                    pvBuffer = (IntPtr)oidPtr,
                };

                buffers[2] = new NativeMethods.NCrypt.NCryptBuffer
                {
                    BufferType = NativeMethods.NCrypt.BufferType.PkcsAlgParam,
                    cbBuffer = sizeof(NativeMethods.NCrypt.PbeParams),
                    pvBuffer = (IntPtr)pbeParamsPtr,
                };

                var desc = new NativeMethods.NCrypt.NCryptBufferDesc
                {
                    cBuffers = 3,
                    pBuffers = (IntPtr)buffers,
                    ulVersion = 0,
                };

                int result = NativeMethods.NCrypt.NCryptExportKey(keyHandle, IntPtr.Zero, NcryptPkcs8PrivateKeyBlob, ref desc, null, 0, out int bytesNeeded, 0);
                if (result != 0)
                    throw new Win32Exception(result);

                byte[] exported = new byte[bytesNeeded];
                result = NativeMethods.NCrypt.NCryptExportKey(keyHandle, IntPtr.Zero, NcryptPkcs8PrivateKeyBlob, ref desc, exported, exported.Length, out bytesNeeded, 0);

                if (result != 0)
                    throw new Win32Exception(result);

                if (bytesNeeded != exported.Length)
                    Array.Resize(ref exported, bytesNeeded);
                return exported;
            }
        }

        private static class NativeMethods
        {
            internal static class NCrypt
            {
                public const string NCryptLibraryName = ""ncrypt.dll"";

                [DllImport(NCryptLibraryName, CharSet = CharSet.Unicode)]
                internal static extern int NCryptCreatePersistedKey(SafeNCryptProviderHandle hProvider, [Out] out SafeNCryptKeyHandle phKey, string pszAlgId, string pszKeyName, int dwLegacyKeySpec, CngKeyCreationOptions dwFlags);
                [DllImport(NCryptLibraryName, CharSet = CharSet.Unicode)]
                internal static extern int NCryptOpenStorageProvider([Out] out SafeNCryptProviderHandle phProvider, [MarshalAs(UnmanagedType.LPWStr)] string pszProviderName, int dwFlags);
                [DllImport(NCryptLibraryName, CharSet = CharSet.Unicode)]
                internal static extern int NCryptExportKey(SafeNCryptKeyHandle hKey, IntPtr hExportKey, string pszBlobType, ref NCryptBufferDesc pParameterList, byte[] pbOutput, int cbOutput, [Out] out int pcbResult, int dwFlags);
                [DllImport(NCryptLibraryName, CharSet = CharSet.Unicode)]
                internal static extern int NCryptImportKey(SafeNCryptProviderHandle hProvider, IntPtr hImportKey, string pszBlobType, ref NCryptBufferDesc pParameterList, [Out] out SafeNCryptKeyHandle phKey, [MarshalAs(UnmanagedType.LPArray)] byte[] pbData, int cbData, int dwFlags);
                [DllImport(NCryptLibraryName, CharSet = CharSet.Unicode)]
                internal static extern int NCryptSetProperty(SafeNCryptHandle hObject, string pszProperty, [MarshalAs(UnmanagedType.LPArray)] byte[] pbInput, int cbInput, CngPropertyOptions dwFlags);
                [DllImport(NCryptLibraryName, CharSet = CharSet.Unicode)]
                internal static extern int NCryptSetProperty(SafeNCryptHandle hObject, string pszProperty, string pbInput, int cbInput, CngPropertyOptions dwFlags);
                [DllImport(NCryptLibraryName, CharSet = CharSet.Unicode)]
                internal static extern int NCryptSetProperty(SafeNCryptHandle hObject, string pszProperty, IntPtr pbInput, int cbInput, CngPropertyOptions dwFlags);
                [DllImport(NCryptLibraryName, CharSet = CharSet.Unicode)]
                internal static extern int NCryptFinalizeKey(SafeNCryptKeyHandle hKey, int dwFlags);
                [DllImport(NCryptLibraryName, CharSet = CharSet.Unicode)]
                internal static extern int NCryptExportKey(SafeNCryptKeyHandle hKey, IntPtr hExportKey, string pszBlobType, IntPtr pParameterList, byte[] pbOutput, int cbOutput, [Out] out int pcbResult, int dwFlags);

                [StructLayout(LayoutKind.Sequential)]
                internal unsafe struct PbeParams
                {
                    internal const int RgbSaltSize = 8;
                    internal CryptPkcs12PbeParams Params;
                    internal fixed byte rgbSalt[RgbSaltSize];
                }

                [StructLayout(LayoutKind.Sequential)]
                internal struct CryptPkcs12PbeParams
                {
                    internal int iIterations;
                    internal int cbSalt;
                }

                [StructLayout(LayoutKind.Sequential)]
                internal struct NCryptBufferDesc
                {
                    public int ulVersion;
                    public int cBuffers;
                    public IntPtr pBuffers;
                }

                [StructLayout(LayoutKind.Sequential)]
                internal struct NCryptBuffer
                {
                    public int cbBuffer;
                    public BufferType BufferType;
                    public IntPtr pvBuffer;
                }

                internal enum BufferType
                {
                    PkcsAlgOid = 41,
                    PkcsAlgParam = 42,
                    PkcsAlgId = 43,
                    PkcsKeyName = 45,
                    PkcsSecret = 46,
                }
            }
        }
    }
}
</code></pre>

<p>The certificate gets exported and then imported. However, the imported private key cannot be reassigned to the original certificate. I'm getting either ""The provided key does not match the public key for this certificate"" or ""Only asymmetric keys that implement ICspAsymmetricAlgorithm are supported"". Is there anything I'm doing wrong?</p>
","<pre><code>// Attempt #1

CspParameters parameters = new CspParameters();
parameters.KeyContainerName = importedKeyName;
var rsaKey = new RSACryptoServiceProvider(parameters);
certificate.PrivateKey = rsaKey; // public key doesn't match the private key
</code></pre>

<p>CAPI (the library behind CspParameters) can't understand keys in CNG at all on Windows 7 or 8.1; it (theoretically) has support for it on 10, but you definitely have to tell it that the key lives in CNG (CspParameters.ProviderName).</p>

<p>The code here made a new CAPI key in ""Microsoft RSA and AES Enhanced Cryptographic Service Provider"" with ProviderType 24 that just happened to have the same local key name as your CNG key.</p>

<p>You didn't specify the flag UseExistingOnly, and the key didn't exist, so it made a new one... and that's why the public key didn't match what's in the certificate.</p>

<pre><code>// Attempt #2

var rsaCngKey = new RSACng(CngKey.Open(importedKeyName));
certificate.PrivateKey = rsaCngKey; // Only asymmetric keys that implement ICspAsymmetricAlgorithm are supported.
</code></pre>

<p>The <code>PrivateKey</code> property only supports CAPI, either in get or set.  The set is really dangerous to ever use, because it doesn't modify the cert object, it modifies the state of the cert in the Windows Certificate Store system... which means it also affects any other now or future objects operating on the same (Windows) cert.</p>

<pre><code>// Attempt #3
certificate.PrivateKey = null;
X509Certificate2 certWithKey = certificate.CopyWithPrivateKey(rsaKey); // The provided key does not match the public key for this certificate.
</code></pre>

<p>This is the same new random key created from Attempt 1.</p>

<hr>

<p>If you remove Attempt 1, then merge 2 and 3, you should end up with</p>

<pre><code>var rsaCngKey = new RSACng(CngKey.Open(importedKeyName));
X509Certificate2 certWithKey = certificate.CopyWithPrivateKey(rsaCngKey);
</code></pre>

<p>And that should work.  (If you've already imported the cert into the cert store, you can just add <code>certWithKey</code> into the cert store, which will have the same ""everyone suddenly knows about this"" updating change as <code>cert.set_PrivateKey</code>, except it's way more obvious that you asked the cert store to take a change)</p>
","52","<c#><certificate><pinvoke><private-key>","0","1","1","2019-06-27 17:32:24","56796087","1","","","","","2019-06-27 17:01:21",""
"46382093","Get my private key","<p>I've just recieved a certificate from Commodo. The ZIP file contains a xxx.crt and xxx.pb7b</p>

<p>I need to convert the xxx.pb7b file in to a xxx.pfx so that I can import it in IIS. I'm using OpenSSL for the conversion, but I need a private.KEY file.</p>

<p>Is there away to get\extract this file??</p>
","<p>Export the current certificate (PFX) that is about to expire. This file contains your certificate and public key. Then use OpenSSL to extract the private key from the PFX file.</p>

<p><strong>openssl pkcs12 -in  myfile.pfx -nocerts -out private_key.pem -nodes</strong></p>
","52","<private-key><pfx><crt>","0","1","1","2017-09-23 17:45:51","46382556","2","","","","","2017-09-23 16:59:20",""
"6488286","securing amazon access keys in code","<p>Amazon web service requires us to provide both id and an secret key for making requests with our web applications. While creating several key pairs with different authorization to different services is possible, this still means we must store our keys in the web app or in DB. </p>

<p>Is there a standard safe way or best way of storing the keys for your webapp? What are you using now?</p>

<p>I don't want other developers accessing the Keys that may give privileged access to stuff they are not supposed to be accessing. So committing the keys to repository is an issue.</p>
","","50","<amazon><code-access-security><private-key>","1","","0","2011-06-27 03:18:16","","0","","","","","2011-06-27 03:18:16",""
"52943096","Getting results from promise - Nodejs","<p>I am using nodejs with this library node-jose, to get allow me to do get my private key and using it to sign and/or decript. </p>

<p>So the problem now is this. I am trying to return a signature from result after generating it by is unable to do so.</p>

<p>At <strong>Point A</strong>, when I do a console.log, i am to actually see my result.
Beyond that, i.e. at <strong>Point B</strong>, i am unable to see my result. All i get is this.</p>

<pre><code>2018-10-23T15:04:23.553 signature1: null //Point B
</code></pre>

<p>Am i doing things the right way?</p>

<hr>

<p><strong>main.js:</strong></p>

<pre><code>let jose = require('node-jose');

function sendRequest(id, keystore, kid1, kid2) {
    let result;

    ... 

    let baseString1 = generateBaseString(baseUrl1);
    let signature1 = null;
    jose.JWS.createSign(keystore.get(kid1)).update(baseString1).final().then(function(result) {

        signature1 = result;
        //Point A
        console.log(result);
    });

    //Point B
    console.log(""signature1: "" + signature1);

    ...

    return result;
}
</code></pre>
","<p>try to use the async/await features </p>

<pre><code>async function sendRequest(id, keystore, kid1, kid2) {
    let result;

    ... 

    let baseString1 = generateBaseString(baseUrl1);
    let signature1 = await jose.JWS.createSign(keystore.get(kid1)).update(baseString1).final();

    //Point B
    console.log(""signature1: "" + signature1);

    ...

    return result;
}
</code></pre>

<p>Your point A doesn't mean it will be executed first than your point B
the <code>.then()</code> in promise only executed if the operation/promise is already resolve. </p>

<p>Maybe this will help you to understand <code>Promise</code>
<a href=""https://codeburst.io/javascript-promises-explained-with-simple-real-life-analogies-dd6908092138"" rel=""nofollow noreferrer"">https://codeburst.io/javascript-promises-explained-with-simple-real-life-analogies-dd6908092138</a></p>
","50","<node.js><promise><private-key><jose>","-1","0","1","2018-10-23 08:05:56","","4","0","7103694","","2018-10-23 07:58:45","2018-10-23 07:08:20",""
"31921160","Storing Private Key for scp into Jar","<p>I need to update this class to make it retrieve the public key file (keyfile) from within the Jar I'm currently running.</p>

<p>For now the private-key file is in the same directory as the Jar, it's specified into a properties and passed by variable keyfile.</p>

<pre><code>public static void download(String username, String keyfile, String ipAddress, String absoluteFileName, String destinationPath){

    Scp scpTask = createScpTask(22);
    scpTask.setKeyfile(keyfile);
    String passphrase = """";
    scpTask.setPassphrase(passphrase);
    scpTask.setFile(username + ""@"" + ipAddress+ "":"" + absoluteFileName);
    scpTask.setTodir(destinationPath);
    scpTask.setTrust(true);
    scpTask.execute();

}
</code></pre>

<p>Have you got any idea?</p>

<p>Many thanks
--Alessandro</p>
","","48","<java><jar><scp><private-key>","0","","0","2015-08-10 13:42:01","","4","","","","","2015-08-10 13:42:01",""
"40456723","How to recreate private key signature for generating APK?","<p>I am working on an app, it is under development yet, it has not been uploaded to store. I had a key on an old HardDrive, and it worked. Now, I changed my HD and when I configured the key again, I realized that I made it under configurations that I didn't wanted (like where it is and alias).</p>

<p>I tried to create a new one, but it just dont do it, returns error.</p>

<p>How can I delete this wrong key? or how can I reconfigure the one that is wrong?</p>
","<p>In the end, it was my mistake of not adding the file name ""keyname.keystore"", as folder\keyname.keystore.</p>
","48","<android><cordova><apk><private-key>","0","0","1","2016-12-27 18:56:01","41350661","1","","52160","","2016-11-07 04:06:29","2016-11-07 01:52:20",""
"52860252","Javascript Signing a message using an Eth address as public key","<p>as far as I understood, on Ethereum every wallet has a private and a public key.</p>

<p>the public key is the address. What I want to achieve is to SIGN a ""string"" with a public address, so that only that address (with the private key) can ""read"" the message.</p>

<p>I'm struggling in finding the best library to do this: i've seen openpgp and JEncrypt but both requires to have ""public / private"" keys specified in some particular format.</p>

<p>Is there any sdk that can help? With web3 is possible only to sign with private key..</p>
","<p>The term ""sign"" in public-key cryptography has a <a href=""https://en.wikipedia.org/wiki/Pretty_Good_Privacy#Digital_signatures"" rel=""nofollow noreferrer"">very specific meaning</a>: it generally means the generation of a digital signature to verify the content and sender of a given message.</p>

<p>It sounds like what you're describing when you say ""SIGN"" is that you want to <strong>encrypt</strong> a message with the ETH address / public key, and <strong>decrypt</strong> the message with the wallet private key.</p>

<p>In public key cryptography, you encrypt with the public key and decrypt with the private key.</p>

<blockquote>
  <p>I'm struggling in finding the best library to do this: i've seen openpgp and JEncrypt but both requires to have ""public / private"" keys specified in some particular format.</p>
</blockquote>

<p>Public and private keys will need to be in the proper format for any pgp implementation, and this is likely the problem with ETH addresses, because the ETH address is derived from the underlying key pair. <a href=""https://etherworld.co/2017/11/17/understanding-the-concept-of-private-key-public-key-and-address-in-ethereum-blockchain/"" rel=""nofollow noreferrer"">This blog post</a> contains a detailed explanation of the relationship between ETH addresses and key pairs.</p>
","48","<encryption><public-key-encryption><private-key><web3><web3js>","0","1","1","2018-10-17 19:05:38","52861954","0","","","","","2018-10-17 17:10:59",""
"54298999","Python - Spur giving : Original error: Authentication failed. and failing to connect to computer using private keys","<p>Recently I have been trying to make a function that logs in to a computer using the private keys for a project. So far I have not been able to log in using the keys. I am trying to connect to my own computer for testing purposes. I tried the same code in paramiko and got a similar error. Is it just my computer?</p>

<p>I am using the python module spur, and am getting the error (Last line of error):</p>

<pre><code>Original error: Authentication failed.
</code></pre>

<p>This is my code :</p>

<pre><code>import spur
shell = spur.SshShell(
    hostname=""192.168.1.1"",
    username=""User1"",
    private_key_file=""/Users/User1/.ssh/id_dsa"",
    missing_host_key=spur.ssh.MissingHostKey.accept
)
with shell:
    result = shell.run([""echo"", ""hello""])
</code></pre>

<p>I expect to get the output 'hello' on my screen (echo hello) but instead, I get the error (The whole error) :</p>

<pre><code>Traceback (most recent call last):
  File ""/Users/User1/ssh_tests/ssh_key_test.py"", line 9, in &lt;module&gt;
result = shell.run([""echo"", ""hello""])
  File ""/Library/Python/2.7/site-packages/spur/ssh.py"", line 166, in run
return self.spawn(*args, **kwargs).wait_for_result()
  File ""/Library/Python/2.7/site-packages/spur/ssh.py"", line 178, in spawn
channel = self._get_ssh_transport().open_session()
  File ""/Library/Python/2.7/site-packages/spur/ssh.py"", line 268, in _get_ssh_transport
raise self._connection_error(error)
spur.ssh.ConnectionError: Error creating SSH connection
Original error: Authentication failed.
</code></pre>
","","47","<python><ssh><ssh-keys><private-key>","0","","0","2019-01-22 00:51:12","","1","0","","user8396116","2019-01-22 00:51:12","2019-01-21 23:07:44",""
"53836042","AWS restrict end user to connect to my instance from SSH","<p>For AWS, when generate an instance you can either generate a new .pem or use previous .pem. </p>

<p>But how can i restrict that <strong>only me</strong> can connect to the instance through SSH. I know that I can set up security group and set inbound rules to allow only my IP address to do SSH. However, whoever has my private key can still SSH my instance. So what exactly does the security group restrict?</p>

<p>I am now using Windows 7 and putty to connect to my instance through SSH, it seems like the only way that I can connect to my instance is by using the .ppk file. Or maybe this is a question for using terminal to SSH the instance?</p>
","<p>This topic is unrelated to Amazon EC2. It is purely a Linux configuration, the same as any Linux computer.</p>

<p>When you SSH to a Linux computer, you provide a private key. The server will look in the <code>/home/&lt;username&gt;/.ssh/authorized_keys</code> file to find a matching public key. If the keys match, then the SSH session is permitted.</p>

<p>You can add add/remove keys in that file.</p>

<p>If you wish to be the only person who can SSH into the server, then:</p>

<ul>
<li>Create a new keypair</li>
<li>Put the public half of the keypair in <code>/home/&lt;username&gt;/.ssh/authorized_keys</code></li>
<li>Remove any other keys from that file</li>
<li>Repeat for all users you have defined on the server</li>
</ul>

<p>By default, EC2 creates the <code>ec2-user</code>, so if you haven't created any more users, you will only need to edit: <code>/home/ec2-user/.ssh/authorized_keys</code></p>
","47","<amazon-web-services><amazon-ec2><ssh><private-key>","-1","1","2","2018-12-18 17:59:05","","1","","","","","2018-12-18 15:16:02",""
"53836042","AWS restrict end user to connect to my instance from SSH","<p>For AWS, when generate an instance you can either generate a new .pem or use previous .pem. </p>

<p>But how can i restrict that <strong>only me</strong> can connect to the instance through SSH. I know that I can set up security group and set inbound rules to allow only my IP address to do SSH. However, whoever has my private key can still SSH my instance. So what exactly does the security group restrict?</p>

<p>I am now using Windows 7 and putty to connect to my instance through SSH, it seems like the only way that I can connect to my instance is by using the .ppk file. Or maybe this is a question for using terminal to SSH the instance?</p>
","<p>Setting up a rule in the security groups to restrict access to you instance is essential.
This way not the whole internet can try to access the instance.</p>

<p>But you are right. You can still login with the SSH-Private-Key and have full access.</p>

<p>To avoid this you can remove rights from the login user and transfer this rights to another user.</p>

<p>So you can login but you cannot do anything and need to change user first.</p>

<pre><code>su privileged
</code></pre>

<p>The privileged user is secured by another password you need to know.
That way you should have pretty solid access control.</p>

<p>I hope that helps!</p>

<p>Dominik</p>
","47","<amazon-web-services><amazon-ec2><ssh><private-key>","-1","1","2","2018-12-18 17:59:05","","1","","","","","2018-12-18 15:16:02",""
"49133327","PrivateKey not invalidated on enrollment","<p>have you experienced the case when Android Fingerprint APIs are behaving in the not expected way? The issue I have is when I generate <code>PrivateKey</code> with given <code>attestationChallenge</code> and <code>userAuthenticationValidityDurationSeconds</code> for data signing. Everything works as expected if I don't enroll new fingerprints however after enrollment of a new fingerprint I expect for that key to be permanently invalidated but this is not the case. Have you experienced the similar?</p>

<p>Below is the code I'm using to generate the <code>PrivateKey</code>.</p>

<pre><code>val keyStore = KeyStore.getInstance(""AndroidKeystore"")
keyStore.load(null)
val keyPairGenerator = KeyPairGenerator.getInstance(algorithm, ""AndroidKeyStore"")
val builder = KeyGenParameterSpec.Builder(""alias"", KeyProperties.PURPOSE_SIGN)
builder.apply {
    setDigests(digests)
    setSignaturePaddings(paddings)
    setUserAuthenticationRequired(true)
    setInvalidatedByBiometricEnrollment(true)
    setAttestationChallenge(attestationChallenge)
    setUserAuthenticationValidityDurationSeconds(userAuthenticationValidityDurationSeconds)
}

keyPairGenerator.initialize(builder.build())
keyPairGenerator.generateKeyPair()
</code></pre>

<p>Am I doing something wrong or missing something? Thanks!</p>
","<p>To answer my own question. <code>PrivateKey</code> will not be invalidated by OS if <code>userAuthenticationValidityDurationSeconds</code> is set to a positive value. The key will only be invalidated on the enrolment of new fingerprint if its purpose is to be used only when authenticated with fingerprint.</p>
","46","<android><private-key><android-fingerprint-api>","0","0","1","2018-03-09 12:41:37","","0","","2649012","","2018-03-06 15:04:36","2018-03-06 14:35:44",""
"39991917","different ssh login methods","<p>Could you please help me to understand bellow authentication methods</p>

<ol>
<li><code>ssh -i PrivateKey.pem ec2-user@52.48.32.12</code></li>
<li>Password less athentication</li>
</ol>

<p>As per the my understanding in both above cases we use private key and public key. In both methods pubic keys are stored in <code>~/.ssh/authorized_keys</code> file in the server which need to login.</p>

<ol>
<li><p>In first method user provides corresponding private key. But in second method how authentication mechanism know what is the corresponding private key as user not supply the private key.</p></li>
<li><p>Can we arrange pass wordless authentication like <code>ssh -i id_rsa ec2-user@52.48.32.12</code></p></li>
<li><p>Can we use two public keys and two private keys to authenticate to the same server from same client.</p></li>
</ol>
","<blockquote>
  <p>In first method user provides corresponding private key. But in second method how authentication mechanism know what is the corresponding private key as user not supply the private key.</p>
</blockquote>

<p>The client is using private keys in default location (<code>~/.ssh/id_{rsa,dsa,ecdsa,ed25519}</code>).</p>

<blockquote>
  <p>Can we arrange pass wordless authentication like ssh -i id_rsa ec2-user@52.48.32.12</p>
</blockquote>

<p>Yes, the filename does not matter. But of course it has to be a valid private key.</p>

<blockquote>
  <p>Can we use two public keys and two private keys to authenticate to the same server from same client.</p>
</blockquote>

<p>Yes. But servers are usually fine with accepting single key, so there is no need to do that.</p>
","46","<ssh><amazon-ec2><private-key><public-key>","-1","1","1","2016-10-12 06:49:24","","0","","2196426","","2016-10-12 06:45:53","2016-10-12 06:33:42",""
"34148702","Why Don't Windows 10 Apps Require Key-Signing?","<p>In both iOS and Android I noticed there is a process to privately sign apps before publishing it to their respective stores.</p>

<p>However, in the Windows 10 Universal App Process I haven't found this to be the case. How does Microsoft get away without requiring the developer to sign their app? Or does Visual Studio / dev.windows.com somehow take care of this behind the scenes?</p>
","<p>When you generate an app package to upload to the Windows Store (typically via Visual Studio, I'm not actually sure if there's a command line alternative), it is signed by VS. The key is linked to your Windows Store Developer account, which is why you have to sign in to the correct dev account when building a release.</p>

<p>Edit: This is somewhat out of date (VS2012/Windows 8 era), but it goes into more detail (and talks about the alternatives to VS that do seem to exist - MakeCert and Pvk2Pfx): <a href=""https://msdn.microsoft.com/en-us/library/windows/desktop/jj835832%28v=vs.85%29.aspx?f=255&amp;MSPPError=-2147217396"" rel=""nofollow"">https://msdn.microsoft.com/en-us/library/windows/desktop/jj835832%28v=vs.85%29.aspx?f=255&amp;MSPPError=-2147217396</a></p>
","46","<windows><windows-10><private-key>","0","0","1","2015-12-08 07:16:29","","1","","","","","2015-12-08 05:31:16",""
"55363375","What is the most appropriated and secure way to encrypt files using private/public keys in Node.js","<p>I was wondering in which use case i should use these methods when encrypting and decrypting files in my node.js application.</p>

<h1>The Problem</h1>

<p>I want to encrypt some files in my server, after asking other people, i realized that the most recommended method is encrypt those files (larges) using a private key.</p>

<p>Now, i was looking for the <a href=""https://nodejs.org/api/crypto.html#crypto_crypto_privateencrypt_privatekey_buffer"" rel=""nofollow noreferrer"">docs</a> and saw these methods</p>

<ul>
<li><code>crypto.publicEncrypt(pubKey, buffer)</code></li>
<li><code>crypto.publicDecrypt(pubKey, buffer)</code></li>
<li><code>crypto.privateEncrypt(privKey, buffer)</code></li>
<li><code>crypo.privateDecrypt(privKey, buffer)</code></li>
</ul>

<p>this is very confusing because i don't know what of them i must to use now, ahm... i don't know what is the most appropriate way to do this securely.</p>
","<p><strong>tl;dr</strong> encrypt with the public key. Keep your private key safe.</p>

<p>Unfortunately, these methods are poorly named. <code>privateEncrypt</code> should be called something like <code>sign</code> and <code>publicDecrypt</code> should be called something like <code>verify</code>.</p>

<p>When using public-key encryption (also known as asymmetric encryption), one key can be used to write a cipher and the other key can undo that operation. Your public key is potentially known to everyone, and your private key is secret.</p>

<p>If you want to keep something secret, except from the owner of a certain key, you want to encrypt a message with <em>their</em> public key. So if Alice wants to receive encrypted messages, she'll share her public key <code>A_pub</code> and her secret key <code>A_priv</code>, she'll keep to herself.. You'll encrypt your message <code>crypto.publicEncrypt(A_pub, buffer)</code>. She'll then decrypt that message with <code>crypto.privateDecrypt(A_priv, buffer)</code>.</p>

<p>Doing it the other way is known as a <a href=""https://en.wikipedia.org/wiki/Digital_signature"" rel=""nofollow noreferrer""><strong>digitial signature</strong></a>. </p>
","46","<node.js><encryption><public-key-encryption><private-key><public-key>","2","2","1","2019-03-26 17:58:53","","1","","6885387","","2019-03-26 17:50:11","2019-03-26 17:48:00",""
"28638507","don't understand these directions - ssl","<p>I was sent these directions: Export the Public Key (.p7b or .cer) and the Private Key (.pfx) from the certificate. Set a password for your Private Key (.pfx).Use your private key as your signing certificate. When you send a submission you will be prompted to enter in your signing certificate password, this will be the password you set for your Private Key (.pfx).. After you have exported both files successfully, send us a copy of your new Public Key (.p7b or .cer) to: [] </p>

<p>I understand that .p7b or .cer  and .pfx would have the certificate included. So -- are they calling the public key plus the certificate, and the private key plus certificate, ""public key"" and ""private key""? </p>

<p>Is this the usual way this is done?</p>

<p>Thanks.</p>
","<p>Certificate is structure which includes the public key plus additional info (owner/domain,possible use,expiration date,issuer,etc.).</p>
","46","<x509certificate><digital-signature><private-key><public-key>","0","-2","2","2015-02-20 22:48:16","","1","","207421","","2015-02-20 22:46:15","2015-02-20 21:26:12",""
"28638507","don't understand these directions - ssl","<p>I was sent these directions: Export the Public Key (.p7b or .cer) and the Private Key (.pfx) from the certificate. Set a password for your Private Key (.pfx).Use your private key as your signing certificate. When you send a submission you will be prompted to enter in your signing certificate password, this will be the password you set for your Private Key (.pfx).. After you have exported both files successfully, send us a copy of your new Public Key (.p7b or .cer) to: [] </p>

<p>I understand that .p7b or .cer  and .pfx would have the certificate included. So -- are they calling the public key plus the certificate, and the private key plus certificate, ""public key"" and ""private key""? </p>

<p>Is this the usual way this is done?</p>

<p>Thanks.</p>
","<blockquote>
  <p>I was sent these directions:</p>
</blockquote>

<p>Hmm, let's see.</p>

<blockquote>
  <p>Export the Public Key (.p7b or .cer) and the Private Key (.pfx) from the certificate.</p>
</blockquote>

<p>Impossible. The private key isn't <em>in</em> the certificate. And there is no reason to export the public key. It's of no use without the certificate.</p>

<blockquote>
  <p>Set a password for your Private Key (.pfx).</p>
</blockquote>

<p>Good.</p>

<blockquote>
  <p>Use your private key as your signing certificate.</p>
</blockquote>

<p>This is completed and utter nonsense. A private key cannot be used as a certificate. It isn't a certificate. [It can however be used to <em>sign</em> things: if that's what they're talking about they should have said so, clearly.]</p>

<blockquote>
  <p>When you send a submission you will be prompted to enter in your signing certificate password, this will be the password you set for your Private Key (.pfx).</p>
</blockquote>

<p>More nonsense, see above.</p>

<blockquote>
  <p>After you have exported both files successfully, send us a copy of your new Public Key (.p7b or .cer) to: [] </p>
</blockquote>

<p>Yet more nonsense. Sending the public key accomplishes nothing, and a .cer file isn't a key file, it's a certificate file.</p>

<blockquote>
  <p>I understand that .p7b or .cer  and .pfx would have the certificate included. So -- are they calling the public key plus the certificate, and the private key plus certificate, ""public key"" and ""private key""? </p>
</blockquote>

<p>They are talking rank nonsense. If those are really the directions you were sent, tell them so, send them back, get your money back, and start all over again with somebody that actually knows what they're talking about. These instructions cannot possibly have been even tested.</p>

<blockquote>
  <p>Is this the usual way this is done?</p>
</blockquote>

<p>It is drivel.</p>

<p>But what exactly is 'this' that is supposed to be getting done here?</p>
","46","<x509certificate><digital-signature><private-key><public-key>","0","0","2","2015-02-20 22:48:16","","1","","207421","","2015-02-20 22:46:15","2015-02-20 21:26:12",""
"36517353","Javacard security design: all smartcards the same public and private key a good idea?","<p>I am designing a concept where a system should communicate securely with a smartcard. 
The design is like this:<br>
[smartcard] <strong>&lt;-></strong> [software on a pc in a store] <strong>&lt;-></strong> [server in the cloud]<br>
The smartcard should communicate securely with the cloud and should prevent eavesdropping on the connection, as well the software on the pc in the store.<br>
My question: is it a good idea to use the same public/private key for all smartcards? Or should I use a new one for each card?
Of course it's easy to implement one card so the cloud knows which public keys it should use for the various encryption schemes.</p>
","<p>Using the same public key on all of the cards is a <strong>terrible</strong> idea; if someone compromises one (through theft or other means) then <strong><em>all</em></strong> of the transactions for <strong><em>all stores</em></strong> are compromised. If each store uses a unique key, a compromised key is limited in scope to one store.</p>

<p><strong>tl;dr</strong> Use a unique public/private key per store.</p>
","46","<java><security><private-key>","1","4","1","2016-04-09 13:27:05","36517387","3","","","","","2016-04-09 13:23:35",""
"45447847","Sign Document with own RSA parameters which are Hex-encoded","<p>I wanna ask question about RSA sign on C#.</p>

<p>I have one document for sign. I have plain hex values of modulus, private exponent and public exponent. I dont' t want to signing with random generated keys. When I try with sign with sign tool, i have got result perfectly. But i can' t do it with C#. I am new for this kind of problem. So i am really stucked.</p>

<p>I looked a lot of sites and arcticles but i couldn't find any solution. Maybe there is but i can' t get it, i don' t know.</p>

<p>If you could explain to me with details(step-step), i will really be grateful.</p>
","<p>In .NET you need the full set of CRT parameters for the private key, so if you have D you'll also need P, Q, DP, DQ, and InverseQ.</p>

<pre><code>RSAParameters rsaParams = new RSAParameters();
rsaParams.Modulus = ParseHex(modulus);
rsaParams.Exponent = ParseHex(exponent);
rsaParams.D = ParseHex(d, rsaParams.Modulus.Length);
rsaParams.P = ParseHex(p, (rsaParams.Modulus.Length + 1) / 2);
rsaParams.Q = ParseHex(q, rsaParams.P.Length);
rsaParams.DP = ParseHex(dp, rsaParams.P.Length);
rsaParams.DQ = ParseHex(dq, rsaParams.P.Length);
rsaParams.InverseQ = ParseHex(inverseQ, rsaParams.P.Length);

RSA rsa = RSA.Create();
rsa.ImportParameters(rsaParams);
</code></pre>

<p>Where <code>ParseHex(string str, int len=-1)</code> is a routine which parses your hex strings to a fixed length array (if the hex string is short, the array should be left-padded with 0-byte values).</p>
","45","<c#><encoding><rsa><digital-signature><private-key>","0","0","1","2017-08-03 14:47:14","","0","","1816580","","2017-08-01 21:22:55","2017-08-01 21:18:24",""
"37823243","How is the private key used for the keygen HTML element?","<p>When I use a <strong>keygen</strong> tag the browser generates a key pair. The public key is sent to the server, it creates a certificate and returns this certificate to the browser, but where is a private key and why does the browser seem to store it? Does browser compare private key with public key before accepting certificate? There are another reasons?</p>
","","45","<encryption><private-key><html5-keygen>","5","","0","2016-06-14 22:42:19","","0","1","1816580","","2016-06-14 22:42:19","2016-06-14 22:36:32",""
"54445627","How to extract private key from Azure key vault without certificate or secret (only key)","<p>How to extract private key from azure key vault RSA key pair. I know there is a way to extract private key from certificate but in my case I need to store a RSA key pair on Azure Key Vault Keys. When I'm using GetKey(), only public key is accessible.</p>

<p><a href=""https://i.stack.imgur.com/fas8s.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/fas8s.png"" alt=""enter image description here""></a></p>
","","45","<c#><azure><rsa><private-key><azure-keyvault>","0","","0","2019-01-30 17:32:29","","1","","1379440","","2019-01-30 17:32:29","2019-01-30 16:53:14","2019-01-30 20:49:15"
"26724157","How To Allow Build & Distribute On Two Different Development Macs For iOS?","<p>My colleague has created a Ad Hoc Distribution Certificate and a Provisioning Profile under my login for the Apple Developer Portal.  We are trying to build and archive an iOS app for internal enterprise distribution on a set number of devices. </p>

<p>She has then downloaded the distribution cert and the provisioning profile on her mac and she can build and install the app on an iPad air via iTunes.</p>

<p>I have now also downloaded and installed the distribution cert and provisioning profile from the developer portal to my mac but I get the error message saying the following:</p>

<blockquote>
  <p>No provisioning profiles with a valid signing identity (i.e. certificate and private key pair) were found. Fix Issue</p>
</blockquote>

<p>What am I missing in this process?  Do I need to copy some files from her mac to my mac in order for this to work?</p>

<p>Is there now an easier way to do this because this process is extremely frustrating?  i.e. should I now be using TestFlight for this process?</p>
","<p>Yes, you need to copy some files.  You need to export these certificates, with their private keys in .p12 format, using the Keychain Access Utility app, from the Mac where certificates were originally generated, to the 2nd Mac you want to use to codesign iOS apps.</p>

<p>Any developer certificates you download from ITC are missing their private key, and are thus fairly useless, except on the originating Mac.</p>
","45","<ios8><certificate><provisioning-profile><private-key><xcode6.1>","0","1","1","2014-11-04 00:00:29","26725487","0","","","","","2014-11-03 22:08:03",""
"54912030","How to export private key with simple s2k in GnuPG?","<p>I am trying to export a secret key out of GPG for testing purpose and to facilitate the decryption of the private key, I'd like to export it with a simple s2k (s2k-mode 0) but all my attempt seem to fail. Here's how I proceed:</p>

<p>First export the key with GPG</p>

<pre><code>$ gpg --export-secret-key --rfc4880bis --s2k-mode 0 --output privkey.bin D753C0F6
gpg: WARNING: using experimental features from RFC4880bis!
gpg: Note: simple S2K mode (0) is strongly discouraged

</code></pre>

<p>And then parse it with Julia with a code of my own</p>

<pre><code>julia&gt; bin2packet(""privkey.bin"")[1]
Secret-Key Packet
 Length : 162, partial : false
 ----------------
  Version : 4, Time : 2019-02-13T17:37:37
 Algorithm : ECDSA public key algorithm [FIPS186] using scep256k1
 scep256k1 Point(𝑥,𝑦):
f05314566c9bfc8d8cf463a7a01e7735245d588a60dd874f09a9636620abb314,
6bda245d43cbbe019ab1ad74316d675dd858cdd776820969bcc21bbccbd3a661
 Specifics : Any[0xfe, ""AES with 128-bit key [AES]"", Any[3, ""SHA1"", ""d6c9d217d64fb4ad"", 31457296], ""d0c6dd2e6320d5c4be5414161a7ef660806c531ff0c2a8e762a7b7898ce5e96c78708461c0f6777cc4c20a1ae9cd5f076c62120291d96306101d5e0e0386bac3b285fe0f8747""]
</code></pre>

<p>Be it with s2k-mode option set or not, I do get the same output, with an s2k specifier set to 3 (Iterate and Salt) <code>[3, ""SHA1"", ""d6c9d217d64fb4ad"", 31457296]</code> for mode, hash algorithm, salt and bit count respectively.</p>

<p>First of all, am I exporting the key correctly with GnuPG ?<br>
Is GPG forcing s2k-mode 3 in some way and can it by bypassed?</p>

<p>GPG version for the record</p>

<pre><code>$ gpg --version
gpg (GnuPG) 2.2.12
libgcrypt 1.8.4
</code></pre>
","","44","<gnupg><private-key>","1","","0","2019-02-28 11:09:06","","1","","9993184","","2019-02-28 11:09:06","2019-02-27 18:16:31",""
"55109785","Micro-ECC value possible?","<p>I've created a ecc public/private key pair on a stm32f767zi with 216mhz clock speed. For the generation step it took me only about 0.002449ms on average.
I've used the following command to generate both keys <code>uECC_make_key(public1, private1, curves[c])</code></p>

<p>Is it possible that just such a little amount of time is needed to generate a public and private key pair?</p>

<p>Thank you very much.</p>
","","44","<c><stm32><private-key>","0","","0","2019-03-11 20:21:57","","6","","","","","2019-03-11 20:21:57",""
"54934168","How to calculate a signature with uECC?","<p>I've already tried to use the example in <code>micro-ecc/test_ecdsa.c</code> (<a href=""https://github.com/kmackay/micro-ecc/blob/master/test/test_ecdsa.c"" rel=""nofollow noreferrer"">micro-ecc</a>). My platform is a stm32 nucleo board. I can create a key pair, but the resulting signature is 64 Bytes of zero values.</p>

<pre><code>uint8_t private[32] = {0};
uint8_t public[64] = {0};
uint8_t hash[32] = {0};
uint8_t sig[64] = {0};
const struct uECC_Curve_t * curve = uECC_secp256r1();
uECC_make_key(public, private, curve);
memcpy(hash, public, sizeof(hash));
uECC_sign(private, hash, sizeof(hash), sig, curve);
uECC_verify(public, hash, sizeof(hash), sig, curve);
</code></pre>

<p>Maybe someone has a solution for this. Thank you very much. I run this code on a windows system.</p>
","","44","<c><digital-signature><private-key><public-key>","0","","0","2019-02-28 20:59:17","","0","","","","","2019-02-28 20:59:17",""
"57840195","Using Ruby to verify Web Crypto SubtleCrypto key signature","<p>I am struggling to verify a message in Ruby that has been encrypted using a RSASSA-PKCS1-v1_5 private key.</p>

<p>The key pair is generated using the SubtleCrypto (Web Crypto) API. The public key is then sent to the server.  </p>

<pre><code>const usage = [""sign"", ""verify""];
const exponent = new Uint8Array([0x01, 0x00, 0x01]);
const encryption = {name: 'RSASSA-PKCS1-v1_5', modulusLength: 2048, publicExponent: exponent, hash: {name: ""SHA-256""}};
const keys = await window.crypto.subtle.generateKey(encryption, true, usage);
const exportedKey = await window.crypto.subtle.exportKey(""spki"", keys.publicKey);
let body = window.btoa(String.fromCharCode(...new Uint8Array(exportedKey)));
body = body.match(/.{1,64}/g).join('\n');
const publicKey `-----BEGIN PUBLIC KEY-----\n${body}\n-----END PUBLIC KEY-----`;

uploadToServer(publicKey);
</code></pre>

<p>I use the private key to encrypt the message</p>

<pre><code>const message = ""My Message"";
const messageData = message.toArrayBuffer();
const signature = await window.crypto.subtle.sign({name: 'RSASSA-PKCS1-v1_5'}, keys.privateKey, messageData);

sendSignatureToServer(signature.toString());
</code></pre>

<p>I can verify the signature successfully using JS, however, my Ruby logic always returns false.</p>

<pre><code>publicKeyString = ""-----BEGIN PUBLIC KEY-----\n...\n-----END PUBLIC KEY-----""; # Sent to server in a previous request
signature = params[:signature]
message = ""My Message""

publicKey = OpenSSL::PKey::RSA.new(publicKeyString)
verified = publicKey.verify(OpenSSL::Digest::SHA256.new, signature, message)
</code></pre>

<p>Any guidance would be highly appreciated.</p>
","<p>I can't reproduce the problem! </p>

<p>I used the code you posted (with a few changes regarding required output and some missing parts) to generate the RSA key pair and the signature:</p>

<pre><code>const usage = [""sign"", ""verify""];
const exponent = new Uint8Array([0x01, 0x00, 0x01]);
const encryption = {name: 'RSASSA-PKCS1-v1_5', modulusLength: 2048, publicExponent: exponent, hash: {name: ""SHA-256""}};
window.crypto.subtle.generateKey(encryption, true, usage).then(function (key){
    const message = ""My Message"";
    const messageData = new TextEncoder().encode(message);
    window.crypto.subtle.sign({name: 'RSASSA-PKCS1-v1_5'}, key.privateKey, messageData).then(function (signature){
        console.log(""Signature: "" + buf2hex(signature));                    
        window.crypto.subtle.exportKey(""spki"", key.publicKey).then(function(publicKey){
            console.log(""Public key: "" + buf2hex(publicKey));
            let publicKeyBase64 = window.btoa(String.fromCharCode.apply(null, new Uint8Array(publicKey)));
            publicKeyBase64 = publicKeyBase64.match(/.{1,64}/g).join('\n');
            publicKeyBase64 = `-----BEGIN PUBLIC KEY-----\n${publicKeyBase64}\n-----END PUBLIC KEY-----`;
            console.log(""Public key (base64): "" + publicKeyBase64);
        });             
    });
});

// https://stackoverflow.com/a/40031979/9014097
function buf2hex(buffer) { // buffer is an ArrayBuffer
    return Array.prototype.map.call(new Uint8Array(buffer), x =&gt; ('00' + x.toString(16)).slice(-2)).join('');
}
</code></pre>

<p>Since the verification on the JavaScript-side works for you, the issue should not be in this part, so that the changes should be unproblematic. A typical output of the JavaScript-code for the public key (Base64) is:</p>

<pre><code>-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2txHYgsCGfS9eZfys/m1
P1rhi7x1frM02QbgdR1oXjP6qyarvPHJSbOnpZR7FkuZ4Y1q+DLb98iNDw+AlP0z
HxE6Q2qsRHIfjeperJTtKXLNfrBtdVrp+UbtpiyU6HOXyXt/8joIE1s4+AMNIK47
XghXB1RXKzt/WO4ykldSYAcx00Hfjf5i1ABc16jF0dSfSDDEmWj6WCYn64K9yBOO
I1s8ijmwDyadK5Mgs1YPaPGHtuRMatHn02jXUyhyYWMRdd6evlan1MhHYv1z517M
Wq+Blx/+5vJw58SYn4/i9Pn5VbscQhhwJVxLW8BWQUEl9zeTXmMSWMxGT8+yP69f
hwIDAQAB
-----END PUBLIC KEY-----
</code></pre>

<p>and for the corresponding signature (hexadecimal):</p>

<pre><code>10461ea36a99495d4e1b1ec066a79cb5270c6dca3c0b2e700d2d5d6eed111328841611135d46b1d09e82906a93d8cb423d5daf4bfd8be4d0b90314103d2bbb89e506a4b84d8a36ac39b2f50e576d7cdbd1d50ec0f71c47ccfbf3309b7cbf0b2f9f0b1eef65b0848de1a1801b5cc5e41438487d9a32c0428de3acfdab41dd83bffdccc5ebfc7e03ae35343139eb7faaab3493b33e9d585e64e677e8d5f6afd37a190a3a86dc0059131c31d8881c58ef2572a13609e0e7884d65b12fe83dfc16d446eca4df4913b94d78103ed90b779d75ded5993e0fd1fac5f11455ae97d11a4d92e8868087f44ee337e522455b452907456ca54d600df97d09df6839e61c8952
</code></pre>

<p>Now to the interesting part: The code on the Ruby-side is with these data:</p>

<pre><code>require 'openssl'

def hex2bin(s)
    s.scan(/../).map { |x| x.hex }.pack('c*')
end

publicKeyString = '-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2txHYgsCGfS9eZfys/m1
P1rhi7x1frM02QbgdR1oXjP6qyarvPHJSbOnpZR7FkuZ4Y1q+DLb98iNDw+AlP0z
HxE6Q2qsRHIfjeperJTtKXLNfrBtdVrp+UbtpiyU6HOXyXt/8joIE1s4+AMNIK47
XghXB1RXKzt/WO4ykldSYAcx00Hfjf5i1ABc16jF0dSfSDDEmWj6WCYn64K9yBOO
I1s8ijmwDyadK5Mgs1YPaPGHtuRMatHn02jXUyhyYWMRdd6evlan1MhHYv1z517M
Wq+Blx/+5vJw58SYn4/i9Pn5VbscQhhwJVxLW8BWQUEl9zeTXmMSWMxGT8+yP69f
hwIDAQAB
-----END PUBLIC KEY-----' 

signature = hex2bin('10461ea36a99495d4e1b1ec066a79cb5270c6dca3c0b2e700d2d5d6eed111328841611135d46b1d09e82906a93d8cb423d5daf4bfd8be4d0b90314103d2bbb89e506a4b84d8a36ac39b2f50e576d7cdbd1d50ec0f71c47ccfbf3309b7cbf0b2f9f0b1eef65b0848de1a1801b5cc5e41438487d9a32c0428de3acfdab41dd83bffdccc5ebfc7e03ae35343139eb7faaab3493b33e9d585e64e677e8d5f6afd37a190a3a86dc0059131c31d8881c58ef2572a13609e0e7884d65b12fe83dfc16d446eca4df4913b94d78103ed90b779d75ded5993e0fd1fac5f11455ae97d11a4d92e8868087f44ee337e522455b452907456ca54d600df97d09df6839e61c8952')

message = ""My Message""

publicKey = OpenSSL::PKey::RSA.new(publicKeyString)
puts publicKey.verify(OpenSSL::Digest::SHA256.new, signature, message) # provides true
</code></pre>

<p>The verification is successful, as can be easily checked on <a href=""https://repl.it/languages/ruby"" rel=""nofollow noreferrer"">https://repl.it/languages/ruby</a>! </p>

<p>Since the verification on the Ruby-side principally works, I can only guess that your data (key and/or signature) might be changed during sending 
or reconstruction on the Ruby-side, so that the verification fails. A byte-wise comparison of the public keys and the signatures on both sides 
could clarify this.</p>
","43","<ruby-on-rails><openssl><rsa><private-key><webcrypto-api>","1","1","1","2019-09-08 15:31:06","57843302","0","1","","","","2019-09-08 08:10:13",""
"47875088","Playing with public/private keys on the command line","<p>I want to play with public/private keys just for fun.
I want to use shorter strings, just to see the magic in front of my eyes.
Example:</p>

<p>""Text_merry_X-mas"" + small_key1 -> ""any_small_unreadable_string""</p>

<p>""any_small_unreadable_string"" + key2 -> ""Text_merry_X-mas""</p>

<p>I do not care if the algorithm is RSA or anything else.
I just want to give this inputs and get outputs on the command line.
I do not want to encrypt files and let RSA calculate that long keys,
because again it is just for fun.</p>

<p>And i would like to be able to define key1, as we do for passwords.
Than let key2 be calculated from key1.</p>

<p>Can you guys give me some tips?
Thx a los!</p>
","<p>Broadly:</p>

<p>For Asymmetric encryption you must first generate your private key and extract the public key.</p>

<pre><code>openssl genrsa -aes256 -out private.key 8912
openssl rsa -in private.key -pubout -out public.key
</code></pre>

<p>To encrypt:</p>

<pre><code>openssl rsautl -encrypt -pubin -inkey public.key -in plaintext.txt -out encrypted.txt
</code></pre>

<p>To decrypt:</p>

<pre><code>openssl rsautl -decrypt -inkey private.key -in encrypted.txt -out plaintext.txt
</code></pre>

<p>This and more nicely summarized here: <a href=""https://gist.github.com/dreikanter/c7e85598664901afae03fedff308736b"" rel=""nofollow noreferrer"">https://gist.github.com/dreikanter/c7e85598664901afae03fedff308736b</a></p>
","43","<public-key-encryption><private-key>","-4","0","1","2017-12-20 13:37:35","","2","","","","","2017-12-18 19:22:54",""
"45117155","Compressing a private key to fit into fixed size byte array","<p>I'm trying to compress a private key in the format of this <a href=""http://phpseclib.sourceforge.net/rsa/examples.html"" rel=""nofollow noreferrer"">private key example</a> as I need to fit it into a fixed size byte array (768 bytes to be exact). This is for a project with an RFID reader I'm working on.</p>

<p>Is there a way I can compress the private key as shown in the example down from around 820 bytes currently (removing the header and footer)?</p>

<p>I thought encoding it with base64 or something would help but it actually made it longer.</p>
","<p>It is already encoded in base64, so you can make it smaller by <em>decoding</em> the base64 to produce the original binary key. That key is 608 bytes.</p>
","43","<arrays><compression><private-key>","0","1","1","2017-07-15 14:47:14","45119436","0","","","","","2017-07-15 10:29:21",""
"31101800","Securing data in PHP using OpenSSL","<p>I'm working on a PHP based project. I want to secure passwords using my machine's private key - something one shouldn't be giving away anyway. So I thought it might be a good idea. However, the OpenSSL API within PHP is a bit confusing.</p>

<p>Can someone point out a way I can store and later validate a user's password? With ""store"", I mean that during the user's registration, the password entry is created and stored, and with ""validate"" I was meaning to pick up the password and validate it against the entered string.</p>

<p>I tried to find a Composer library, but my installation of PHP is missing <code>ext-mcrypt</code> since I did not compile it in.</p>
","","43","<php><security><openssl><private-key>","0","","0","2015-06-28 21:54:55","","5","1","608639","","2015-06-28 21:54:55","2015-06-28 15:59:49",""
"40906142","Using SSL with IIS","<p>I have .crt file and .key file and I want to use SSL for my web application. I have tried with option ""Complete Certificate Request"" to import certificate in IIS, but it show certificate imported and actually it is, but when I edit binding, it won't display in selection in IIS.</p>

<p>My certificate does not have private key, I have it separately, in a .key file.</p>

<p>Can you help me to fix this? Is there any way to combine key and certificate? </p>
","<p>You need to make p12 (pfx) file from .key and .crt. You can use openssl do make it.</p>

<pre><code>openssl pkcs12 -export -out certificate.pfx -inkey privateKey.key -in certificate.crt -name ""friendlyname_for_certificate""
</code></pre>

<p>Then import certificate.pfx into LocalMachine\My store. It should be available in IIS.</p>
","42","<ssl><iis><ssl-certificate><private-key>","0","0","2","2016-12-02 08:59:47","40909122","0","","4602209","","2016-12-01 09:54:14","2016-12-01 08:49:40",""
"40906142","Using SSL with IIS","<p>I have .crt file and .key file and I want to use SSL for my web application. I have tried with option ""Complete Certificate Request"" to import certificate in IIS, but it show certificate imported and actually it is, but when I edit binding, it won't display in selection in IIS.</p>

<p>My certificate does not have private key, I have it separately, in a .key file.</p>

<p>Can you help me to fix this? Is there any way to combine key and certificate? </p>
","<p>IIS display certificate in selection if certificate has private but my certificate doesn't contain it and I have it in separate file. So I combined both using OpenSSL given below command. It creates new pfx file and we need to import it in IIS and it display that certificate in selection.</p>

<pre><code>    openssl pkcs12 -export -in cert.crt -inkey privatekey.key -out mycert.pfx
</code></pre>
","42","<ssl><iis><ssl-certificate><private-key>","0","0","2","2016-12-02 08:59:47","40909122","0","","4602209","","2016-12-01 09:54:14","2016-12-01 08:49:40",""
"20911747","Integrity of gpg communication after sending the private key by email","<p>My collegue has sent me by email his gpg private key generated by:</p>

<pre><code>gpg --export-secret-keys --armor &lt;id&gt; &gt; private_key.asc
</code></pre>

<p>instead of his gpg public key as (I supposed) recoverable by:</p>

<pre><code>gpg --armor --output public_key.gpg --export
</code></pre>

<p>Is now his gpg key ""corrupted"", in the sense that having sent it by email its integrity is no more trusted?</p>

<p>Should he revoke that key?</p>
","<p>The worst case assumption is that someone listened to the mail and is right now trying to guess the passphrase chosen by your colleague. The safest (and imho correct) thing to do is to revoke the key and generate a new one.</p>
","42","<public-key-encryption><private-key><gnupg>","-1","1","1","2014-01-04 13:45:02","","0","","","","","2014-01-03 20:00:39",""
"44204679","What happens to the private key when you ssh from machine C into an ssh tunnel B->A?","<p>I have some doubts on what happens to the private keys in my current setup.</p>

<p><strong>Setup:</strong></p>

<p>I have 3 machines: A, B, C. A and C don't have public IPs, B has a public IP. I want to access machine A from machine C: A &lt;-- B &lt;-- C.</p>

<p>I have a reverse tunnel connecting A &lt;== B, which is done by running on machine A:</p>

<pre><code>ssh [options] -R PORT_B:localhost:PORT_A USER_B@B_PUBLIC_IP -i user_B_private_key.pem
</code></pre>

<p>So, with this tunnel I can ssh from machine B into machine A using:</p>

<pre><code>ssh -p PORT_B USER_A@localhost -i user_A_private_key
</code></pre>

<p>(Note: I don't use this and I don't have user_A_private_key on machine B)</p>

<p>And with this tunnel I can ssh from machine C into machine A using:</p>

<pre><code>ssh -p PORT_B USER_A@localhost -i user_A_private_key
</code></pre>

<p><strong>Question:</strong></p>

<p>I want to know what happens to user_A_private_key on the last case (ssh to A from C using the tunnel A &lt;== B, i.e., ssh on machine C to access machine A through machine B). Machine C is a server and it is safe. Machine B is a sort of Jump Box; it is safe, but I don't want it to know any private keys for security reasons.</p>

<p>Does the key in clear text ever leave machine C? Is user_A_private_key safe in this approach? Is this approach safe and/or recommended?</p>

<hr>

<p>Note: on the SSH Server on machine B I am allowing TCP Forwarding and using GatewayPorts (clientspecified)</p>
","<p>In SSH, the private key never leaves the client machine. The servers are getting only the signatures and public key, which proves the possession of the private key.</p>
","42","<linux><ssh><ssh-keys><private-key><ssh-tunnel>","0","0","1","2017-05-29 11:02:57","44240939","0","","","","","2017-05-26 14:58:36",""
"27652018","Let an app sign documents, but don't let it see the keys","<p>I want to digitally sign documents and messages on a Linux server. How do I securely store the private key and a passphrase if any?</p>

<p>The problem is, if an application gets compromised, keys would also become compromised. If I could <a href=""https://stackoverflow.com/questions/5672005/where-to-store-the-private-key-on-a-digital-signing-server?rq=1"">somehow let an app sign something</a>, but don't let it touch actual keys, that wouldn't completely solve my problem (as an attacker would still be able to sign anything for some time), but reduce the impact (like, we won't have to revoke the keys).</p>

<p>For example, in case of SSL servers there's no such problem because usually there's no practical need for an application to access the keys. Hence, they can be semi-securely stored in a separate location. E.g. a webserver (like nginx) would be able to read the keys, but not the application.</p>

<p>Am I overthinking it? Is it even worthy thinking of?</p>
","<p>If you have very high security needs you could consider moving the keys to a completely independent server, or better yet a hardware security module (but those are expensive). Like you mention it can help prevent the loss of keys, but if the app is compromised the attacker could still sign whatever they wanted.</p>

<p>The main reason to go through the trouble then is auditing. That is if you have your signing server or device keep logs of everything it signs, then if only your app is compromised you will be better able to assess the extent of the damage (assuming you're signing server has not been compromised).</p>

<p>So yes there are benefits, but your first focus should be on securing your main application properly, because once that's compromised you're already having a very bad no good day, even if you have moved your keys to a sperate service.</p>
","42","<linux><security><digital-signature><private-key>","0","1","2","2014-12-26 06:47:23","27652249","3","","-1","","2017-05-23 12:06:07","2014-12-26 01:22:39",""
"27652018","Let an app sign documents, but don't let it see the keys","<p>I want to digitally sign documents and messages on a Linux server. How do I securely store the private key and a passphrase if any?</p>

<p>The problem is, if an application gets compromised, keys would also become compromised. If I could <a href=""https://stackoverflow.com/questions/5672005/where-to-store-the-private-key-on-a-digital-signing-server?rq=1"">somehow let an app sign something</a>, but don't let it touch actual keys, that wouldn't completely solve my problem (as an attacker would still be able to sign anything for some time), but reduce the impact (like, we won't have to revoke the keys).</p>

<p>For example, in case of SSL servers there's no such problem because usually there's no practical need for an application to access the keys. Hence, they can be semi-securely stored in a separate location. E.g. a webserver (like nginx) would be able to read the keys, but not the application.</p>

<p>Am I overthinking it? Is it even worthy thinking of?</p>
","<p>Create a separate, lightweight signing application that listens on an UNIX socket and runs as a separate user from the main app; when your app wants to sign something it throws the file and any additional info down that socket, and gets back the signed file.</p>

<p>If the application ever gets compromised the attacker will still be able to sign files as long as he is still on the server, but unless he uses a privilege escalation exploit to get root privileges and copy the signing app's key, he won't he able to steal the key and then sign at will without being connected to the server.</p>

<p>You can replace the UNIX socket with a standard TCP socket and put the signing app on a separate server for extra security; make sure to implement some basic access control on the signing app and of course use proper firewall rules to make sure the signing server is never exposed to the internet, or simplify things a bit by <a href=""https://stackoverflow.com/a/5676729/2629998"">using a ""setuid"" binary for signing</a> that gets invoked by your app, in that case the signing binary will run as a different user with additional privileges to access the keys, while the webapp itself doesn't have such privileges.</p>

<p>Basically you should implement a rudimentary software HSM.</p>
","42","<linux><security><digital-signature><private-key>","0","1","2","2014-12-26 06:47:23","27652249","3","","-1","","2017-05-23 12:06:07","2014-12-26 01:22:39",""
"56671277","Importing DER encoded private key using GnuTLS library fails","<p>I need to import a private key (.der format) to the gnutls_x509_privkey_t structure. For that, I first parsed the DER private key file into char[] using file operations. Then I have used gnutls_x509_privkey_import2 API to import the private key (char[]). </p>

<p>While importing, it returns with an error ""<strong>ASN1 parser: Error in DER parsing</strong>"". </p>

<p><strong><em>Note:</em></strong> When I try to parse the PEM encoded private key instead of using DER, the import API works fine. Am I making any mistake at the parsing of a DER file to char[] or is there a way to parse DER file? </p>

<p>Also, I <strong>don't want to use gnutls_load_file API</strong> to load the DER private key.</p>

<p>I have attached the sample code below:</p>

<pre><code>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

#include &lt;gnutls/gnutls.h&gt;
#include &lt;gnutls/x509.h&gt;
#include &lt;gnutls/abstract.h&gt;

int main()
{
char key_der[1675];
char file_to_char;
FILE *fptr;
int length;
gnutls_x509_privkey_t pkey;
int ret;
gnutls_datum_t key;

ret = gnutls_x509_privkey_init(&amp;pkey);
if (ret &lt; 0) {
    printf(""gnutls_x509_privkey_init: %d\n"", ret);
}

if ((fptr = fopen(""&lt;privatekey_filename&gt;.der"", ""r"")) == NULL)
{
    printf(""Error! opening file\n"");
    // Program exits if file pointer returns NULL.
    exit(1);
}

int i = 0;
file_to_char = fgetc(fptr);
while (file_to_char != EOF)
{
    key_der[i] = file_to_char;
    i++;
    file_to_char = fgetc(fptr);
}
key_der[i] = EOF;

key.data = (void *) key_der;
key.size = i;

ret = gnutls_x509_privkey_import2(pkey, &amp;key, GNUTLS_X509_FMT_DER, NULL, 0);
if (ret &lt; 0) {
    printf(""\nret value = %d\n"", ret);
    printf(""gnutls_x509_privkey_import2: %s\n"", gnutls_strerror(ret));
}

fclose(fptr);

return 0;
}
</code></pre>
","","42","<c><file><private-key><der><gnutls>","0","","0","2019-06-19 15:29:41","","2","","","","","2019-06-19 15:29:41",""
"57878450","C# DTLS Certificate Verify Message","<p>I need to start using <code>SNMPv3</code> over <code>DTLS</code> with certificates from the windows certificate store in c# and from what I've seen so far, this isn't used very often at all. Unfortunately, I have no choice in the matter.</p>

<p>I'm working on using <code>DTLS.NET</code> to do the handshake. One trick is that <code>DTLS.NET</code>seems to want a <code>pem</code> file instead of an <code>X509 Certificate</code> from the Windows Certificate Store. I believe I've figured out how to load the cert, except the private key. The private key is not exportable, and I don't believe I can change that.</p>

<pre><code>public void LoadX509Certificate(X509Certificate2 certificate)
{
    if (certificate == null)
    {
        throw new ArgumentNullException(nameof(certificate));
    }

    this._PrivateKey = DotNetUtilities.GetKeyPair(certificate.PrivateKey).Private;

    this._Certificate = new Certificate
    {
        CertChain = new List&lt;byte[]&gt;() { certificate.RawData },
        CertificateType = TCertificateType.X509
    };
}
</code></pre>

<p>I believe I've figured out up to the certificate verify message and that's where it appears to need the private key. </p>

<pre><code>CertificateVerify certificateVerify = new CertificateVerify();
byte[] signatureHash = _HandshakeInfo.GetHash();
certificateVerify.SignatureHashAlgorithm = new SignatureHashAlgorithm() { Signature = TSignatureAlgorithm.ECDSA, Hash = THashAlgorithm.SHA256 };
certificateVerify.Signature = TLSUtils.Sign(_PrivateKey, true, _Version, _HandshakeInfo, certificateVerify.SignatureHashAlgorithm, signatureHash);
SendHandshakeMessage(certificateVerify, false);
</code></pre>

<p>I can't seem to find much information in the RFCs or elsewhere that describe exactly what needs to happen here. I do know that the server can handle <code>RSA</code>, <code>DSS</code>, or <code>ECDSA</code>, so I left it with <code>ECDSA</code> since that's what <code>DTLS.NET</code> is using.</p>

<p>Do I actually need the private key to create the <code>CertificateVerify</code> message?</p>

<p>Thanks in advance!</p>
","<p>The handshake may authenticate the client by it's certificate. 
Though the certificate on it's own is ""public"", everyone would be able to send it and the authentication could not be granted.
Therefore the client has to proof, that he has access to the private key as well. That's why the ""Certificate Verify"" message is used.</p>

<p>If you don't have access to the private key of your public key of your certificate, a client certificate handshake is not possible.</p>

<p>Maybe the keystore doesn't export that private key, but offer instead a ""signing"" function, where that privte key is applied.</p>
","41","<c#><x509certificate><private-key><dtls>","0","0","1","2019-09-16 06:25:44","57951390","0","","","","","2019-09-10 21:30:21",""
"57477728","How to store Private Key in state ledger Hyperledger Fabric","<p>I have a problem storing a generated ecdsa Private Key in the database of Hyperledger Fabric. </p>

<p>What I am doing is using the ecdsa.GenerateKey(elliptic.P224(), rand.Reader) function that ecdsa provides and trying to store that key in the ledger with the PutState() function of shim. The type of variable that is in struct is ecdsa.PrivateKey but when I try that the chaincode seems to stop and get the following error:</p>

<p>Error: could not assemble transaction: ProposalResponsePayloads do not match - proposal response: version:1 response:</p>

<p>Of course this indicates that the chaincode is not installed in both Organization peers. But I have. Then I tried to convert the ecdsa.PrivateKey into bytes and then to string but nothing seems to work. I will attach the code bellow.</p>

<pre><code>    type UserDetails struct {
ObjectType string          `json:""docType""`
FirstName  string          `json:""firstName""`
LastName   string          `json:""lastName""`
PublicKey  ecdsa.PublicKey `json:""publicKey""`
PrivateKey []byte          `json:""privateKey""`
    }
</code></pre>

<p>This above is my structure</p>

<pre><code>    priv, err := ecdsa.GenerateKey(elliptic.P224(), rand.Reader)
if err != nil {
    fmt.Println(err)
}

enc_key := priv.D.Bytes()
fmt.Println(enc_key)

bytesPrivK := string(enc_key)



objectType := ""userDetails""
userDetailsReg := &amp;UserDetails{objectType, firstName, lastName, *ecdsaPublicKey, enc_key}
userDetailsJSONasBytes, err := json.Marshal(userDetailsReg)
if err != nil {
    return shim.Error(err.Error())
}
fmt.Println(userDetailsReg)
// === Save userDetails to state ===
err = stub.PutState(lastName, userDetailsJSONasBytes)
if err != nil {
    return shim.Error(err.Error())
}
</code></pre>

<p>I also tried with the ecies package to generate an ecies private key then convert it to ecdsa and store it but still same error. I used ecies cause I need to encrypt message with the ecies encryption.</p>

<pre><code>prv, err := ecies.GenerateKey(rand.Reader, ecies.DefaultCurve, nil)
if err != nil {
    fmt.Println(err.Error())
}

eciesPrivatePem, err1 := ecies.MarshalPrivate(prv)
if err1 != nil {
    fmt.Println(err1)
}
encodedToStr := string(eciesPrivatePem)

ecdsaPrivate := prv.ExportECDSA()
</code></pre>

<p>Here I tried either to store in an ecies.PrivateKey type or in string or even ecdsa.PrivateKey but always getting the same error.</p>

<p>I am using the Hyperledger Fabric and CouchDB for this. Does anyone know why I cant store that even as a string? It seems really strange that even as a string a cant store it although the other 2 variables are strings and 1 ecdsa.PublicKey types. I cant find any other error in logs that indicates something more here. </p>

<p>Any help or recommendation would be appreciated.</p>

<p>Thank you</p>
","<p>I found out that the problem was truly been generated from the peers. The endorsement policy error that I was getting has to do with the peers and I had difficult times to find the solution. </p>

<p>So, the problem was that in my chaincode I was storing a key in the ledger that was generated through  a function that I had to pass as a parameter a random variable : rand io.Reader</p>

<p>That random variable was created each time in each peer differently so that was causing a conflict in the peers. </p>

<p>To conclude, keep in mind that each time you are creating a chaincode and you run it, you install it in 2 or more peers and each peer runs the chaincode differently! Very important. </p>

<p>Thank you.</p>
","41","<go><storage><blockchain><private-key><chaincode>","0","0","1","2019-08-14 12:07:19","","0","","","","","2019-08-13 12:27:05",""
"54220366","How to give IIS (6.1) in Windows 7 access to certificate in LocalMachine (storeLocation) and My (storeName)?","<p>I have installed a cert. In Manage Private Keys I have added everything. Even then a web app hosted in IIS can't request successfully. The request was aborted: Could not create SSL/TLS secure channel error. This is only in Windows 7. Adding IIS_USRS in private key access works fine in Windows Server 2008. Any leads please?</p>

<p>I have seen almost everything about this and still can't figure it out. </p>

<p>Update: It is x.509 .p12 file.</p>
","<p>Look <a href=""https://stackoverflow.com/questions/2609859/how-to-give-asp-net-access-to-a-private-key-in-a-certificate-in-the-certificate"">here</a> for thames' answer. He is a legend. Certs are more complex than they should be</p>
","41","<iis><certificate><private-key><application-pool>","0","0","1","2019-01-24 11:21:15","54345452","3","","9044051","","2019-01-16 15:47:13","2019-01-16 15:29:48","2019-01-24 11:21:49"
"56374598","Is it possible to generate a keystore entry from a private key using keytool utility?","<p>I have a private key file (<code>PKCS8.key</code>) and is used in a java application to generate JWT token. I would like to generate a key-store file from it. Is it possible?</p>

<p>I like to generate a key-store file because its an input to generate a JWT token in Pega BPM tool.</p>

<p>My private key content looks as follows</p>

<pre><code>-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC4ZRR1O66dBo0P
..................
-----END PRIVATE KEY-----
</code></pre>

<p>I seen commands of java keytool but I cannot find a way to just construct a new keystore just using private key alone. It is also expecting some certificate. If certificate is mandatory, can I generate an attach a self-signed certificate using private key above?</p>
","","41","<java><keystore><private-key>","0","","0","2019-05-30 08:48:06","","0","","6949178","","2019-05-30 08:46:32","2019-05-30 08:38:01",""
"30856253","How to create a private certificate for connecting to a website","<p>My apologies if this is a duplicate, I may just not be using the correct terminology in my queries to find what I am looking for.</p>

<p>I have a vendor that sent me a certificate to install in my browser so that we can access their website. We cannot get to their pages otherwise.</p>

<p>We similarly have a server for our distributors that has a self signed certificate currently, but we would like to implement the same private certificate system.</p>

<p>What is this process even called? Where do I get started?
Is it just more options when creating the self signed certificate?</p>
","<p>It sounds like you want to use client-side SSL certificates for authentication.  <a href=""http://httpd.apache.org/docs/2.4/ssl/ssl_howto.html#accesscontrol"" rel=""nofollow"">The Apache documentation</a> covers this use case in some detail (that's for version 2.4; see <a href=""http://httpd.apache.org/docs/2.2/ssl/ssl_howto.html#accesscontrol"" rel=""nofollow"">here</a> for version 2.2).</p>
","40","<apache><ssl><private-key><digital-certificate><self-signed>","0","0","1","2015-06-17 01:15:34","30880797","3","","147356","","2015-06-17 01:15:34","2015-06-15 22:52:17",""
"56526038","Android: Decryption process is taking lot of time","<p>When we create the set of keys with following code:</p>

<pre><code>val generator = KeyPairGenerator.getInstance(RSA)
generator.initialize(KEY_SIZE)
val keyPair = generator.genKeyPair()
</code></pre>

<p>Then when we call following:</p>

<pre><code>val cipher = Cipher.getInstance(RSA_TRANSFORMATION)
cipher.init(Cipher.DECRYPT_MODE, privateKey)
</code></pre>

<p>The init method execution is done within 0-2 milliseconds.</p>

<p>But when we try to create the key with following as we need to store the private key in keystore :</p>

<pre><code>val keyPairGenerator = KeyPairGenerator.getInstance(""RSA"", ""AndroidKeyStore"")
        keyPairGenerator.initialize(keyGenParameterSpecBuilder.getProvider()
                .setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_RSA_OAEP)
                .setDigests(KeyProperties.DIGEST_SHA1)
                .setKeySize(KEY_SIZE)
                .build())

        keyPairGenerator.genKeyPair()
</code></pre>

<p>The same init method takes more than 35-40 milliseconds for execution. Also if we comment setEncryptionPaddings and setDigest the init method throws exception.</p>

<p>Expected Output: 
To be able to store the private key in KeyStore and execution of init method in 0-2 milliseconds as it does without provider generator.</p>
","<p>AndroidKeyStore is always going to be significantly slower than in-process key operations.</p>

<p>What happens when you do an in-process key generation is a JNI call to the BoringSSL crypto library.  No IPC calls, no context switches, etc.  BoringSSL will make some syscalls to the kernel to get random bits (from /dev/random) and there's a small chance that could trigger some calls into the hardware true random number generator, but not much.</p>

<p>What happens when you do a key generation in AndroidKeyStore is (roughly; everything below the hardware binder call is implementation-dependent so you'd have to talk to your device maker to learn the details):</p>

<ul>
<li>Your process makes a binder call to the Keystore process, which may spin up a thread to process your request.</li>
<li>Keystore gets some random bits from /dev/random.</li>
<li>Keystore makes a hardware binder call to the Keymaster HAL service.</li>
<li>The service formats the key generation request into a message and writes it to a character device node, which invokes a kernel driver.</li>
<li>The kernel driver copies the request into a buffer along with some control data and invokes the SMC instruction.</li>
<li>The processor suspends Linux and jumps into the secure monitor handler, which checks a bunch of stuff, then switches the processor into secure mode.</li>
<li>The trusted OS kernel starts executing, reads the control data from the transfer buffer, identifies the trusted app which is supposed to receive it and calls it.</li>
<li>The trusted app parses the request message and generates your key, obtaining necessary random bits by reading from the hardware true random number generator and securely mixing that entropy with the bits provided by keystore (from /dev/random).</li>
<li>The trusted app then encrypts the key with a hardware-bound key and writes the result into a response buffer and returns control to the trusted OS.</li>
<li>The trusted OS writes some control data and invokes the SMC instruction.</li>
<li>The processor suspends the trusted OS and jumps into the secure monitor handler, which checks a bunch of stuff, then switches the processor out of secure mode.</li>
<li>The Linux kernel starts executing and the kernel driver returns data through the character device node.</li>
<li>The HAL service reads the data from the character device node.</li>
<li>The HAL service parses data the and returns it via hardware binder.</li>
<li>Keystore receives the encrypted key bundle and writes it into a file (associated with the alias you provided).</li>
<li>Keystore generates a self-signed certificate and writes it into another file.</li>
<li>Keystore returns the result status via binder.</li>
</ul>

<p>I think the performance of AndroidKeyStore could be improved, but fundamentally it has to do a <em>lot</em> more than an in-process key generation does, and all of this IPC takes time.</p>

<p>What you get in exchange for the additional time is much greater security.  With in-process crypto, an attacker who compromises your app can get a copy of the private key and can then do anything they like with it.  With AndroidKeyStore, an attacker who compromises your app may be able to use the key the same way your app could, but they can't extract it from the device so they can't use it anywhere else.  Also, if you add some constraints on how it can be used (e.g. only when the user authenticates), then the attacker can't violate those constraints.</p>

<p>Those security guarantees hold even if the attacker compromises not just your app, but the keystore daemon, the HAL service, and even the Linux kernel itself.  To actually extract the key, the attacker has to compromise the trusted app or trusted OS.  That's not impossible (nothing is), but it's much, much harder.</p>

<p>For completeness, I should also mention <code>KeyGenParameterSpec.Builder.setIsStrongBoxBacked(true)</code>, available in API level 28.  On devices that support StrongBox (currently not many, but this will change) your key won't be generated in a trusted OS running in the secure mode of the main CPU, it will be generated in a purpose-built security processor -- an embedded Secure Element, or similar -- called a ""StrongBox"".  StrongBoxes must share no processor, RAM or other significant resources with the main CPU, and must be formally evaluated for security against direct penetration, side channels, glitching and more by an accredited testing laboratory.</p>

<p>StrongBox devices are typically much smaller, slower processors than mobile CPUs. Usually around two orders of magnitude slower in raw speed, though they partially offset that with dedicated crypto accelerator hardware.  This means that if you use <code>KeyGenParameterSpec.Builder.setIsStrongBoxBacked(true)</code> you can expect not 40 ms, but 400 ms, or maybe 1000 ms.  On the other hand, extracting any secrets from StrongBox devices is extraordinarily difficult.  National intelligence agencies can probably do it, with effort, if they care enough.  Anyone less capable than that is likely to have a very tough time indeed.</p>

<p>(As an aside:  If you want to improve performance, you should consider dumping old, slow RSA.  EC is much faster.  Unfortunately, if you need asymmetric encryption, AndroidKeyStore doesn't yet support encryption/decryption with EC, only signing/verification.  However, if you can get by with symmetric crypto, AES and HMAC are much faster than both EC and RSA.)</p>

<p>(Aside:  I'm the Google engineer who has been responsible for AndroidKeyStore since API level 23.)</p>
","37","<android><encryption><private-key>","1","1","1","2019-08-24 03:54:08","57634958","2","","","","","2019-06-10 12:03:22",""
"55771416","How to determine the full private key(d) of RSA from partially exposed private key, public key, and a plain text-cipher sample?","<p>To be exact, I search google and couldn't find a solution for 3 days of the problem I am working with. Suppose we have the following data:</p>

<pre><code>n = 982596486168164533679068138587450785169755353624059289415533430269902156543301980948452346231423154225707198230814993348325199962226568104628565333075845055110102001513777733822186085910101000971046266247429174698114691926560611342709382763139596083197537103114770536908672391590105944592251557906143423217780862508367523890586749066935355289953519893896713070059149756252671523659055578969907046141090712181640128224480409352033671783234281312447922211039322683639827785375953048086752423328929034805397916713370525669627143719501631537708814980908413840526128966499935897121680247985318025315384432533966964970611
e = 775190819167897631176142663411710999205806087066006443944461953857164338723429823393075674707262963522955617554826880616304988501826679958870898278895792058663197079023581172699525499730454631775015710961671445041794828644629497864625721929989036131201919514003587819878166711621561908547096468667207449797364848789764697856316618498498262452131344181751100590894300580042093702563188859707307216778764928603993071688639278368716846438563956083192844147422032192904730022839373187650224028121273760154048735208506631714555638879414307491200334008651297901472141550888866381591119048114628581521511748434670177461179


partial_d = '-95565380254798212446005426258216042596447135211594111758298376905772484520767625755935413800669744238121798572594037451626724012931827766106358351478966798584005019009384238898207884272864530665811386839587882471633582853938828186423489977-9459392793578-40967083934080473816647050888832190567572370521068219500490996231305841427576808669937665219704595531248268617-5599327544524071502796886348357733378359580273401775-675875610000035372696866273647137752244631988192623168740165719-026394435253643-803573379032337236455340563330139187876245576753031434070779821311882343039420232356-695651945321825753034064267619'
# Where '-' indicated that there is a missing digit. ( 8 digits to be exact)

# 1 sample
plaintext = 174596092887654220987999701151903265828974992233780278786639791235060519357446652195813
cipher = 260977107293095133032309663678665608543832656460900996720257468374788017140947614258160916323627264388927881981964653682851857258414365923694922215834257866016746133459164584766333741801333836289264940490770115570246717428812182110996286021561959704431405293135763955578136678340591578529145822533102991723988404068808248644828190915120779197049355084277184754391753499206475581581888976149876298335630332113681471472312538242128023259706503821080332553580167351146645606566285812912942045955359708168832979660560414335437348485330250971110555548644448362107391181731840051573148892882755700853070019719373415171351
</code></pre>

<p>How do I get the full private key?</p>
","","37","<rsa><private-key><public-key><modular-arithmetic>","0","","0","2019-04-20 07:45:00","","6","","","","","2019-04-20 07:45:00",""
"57402832","Convert String to RSA Private key in Android","<p>in Android i use below code  to convert String to RSA private key. this code work when i use this site for String private key</p>

<p><a href=""https://www.devglan.com/online-tools/rsa-encryption-decryption"" rel=""nofollow noreferrer"">https://www.devglan.com/online-tools/rsa-encryption-decryption</a></p>

<p>but when i use this site , my code dose not work.</p>

<p><a href=""https://8gwifi.org/RSAFunctionality?keysize=1024"" rel=""nofollow noreferrer"">https://8gwifi.org/RSAFunctionality?keysize=1024</a></p>

<p>my code in Android studio is :</p>

<pre><code>public static PrivateKey stringToPrivateKey(String privateKeyString)
    {
        try {
            if (privateKeyString.contains(""-----BEGIN PRIVATE KEY-----"") || privateKeyString.contains(""-----END PRIVATE KEY-----""))
                privateKeyString = privateKeyString.replace(""-----BEGIN PRIVATE KEY-----"", """").replace(""-----END PRIVATE KEY-----"", """");


            if (privateKeyString.contains(""-----BEGIN RSA PRIVATE KEY-----"") || privateKeyString.contains(""-----END RSA PRIVATE KEY-----""))
                privateKeyString = privateKeyString.replace(""-----BEGIN RSA PRIVATE KEY-----"", """").replace(""-----END RSA PRIVATE KEY-----"", """");

            privateKeyString.trim();
            privateKeyString = privateKeyString.replaceAll(""\\s+"","""");
            privateKeyString = privateKeyString.replaceAll(""\\r+"","""");
            privateKeyString = privateKeyString.replaceAll(""^ | $|\\n "", """");


            byte[] keyBytes = Base64.decode(privateKeyString, Base64.DEFAULT);
            PKCS8EncodedKeySpec spec = new PKCS8EncodedKeySpec(keyBytes);
            KeyFactory keyFactory = KeyFactory.getInstance(RSA);
            return keyFactory.generatePrivate( spec);

        } catch (NoSuchAlgorithmException | InvalidKeySpecException e) {
            e.printStackTrace();
        }
    }
</code></pre>

<p>with second link Error is in this line</p>

<blockquote>
  <p>keyFactory.generatePrivate( spec);</p>
</blockquote>
","<p>This code solve my problem:</p>

<pre><code>void dear(String publicKeyB64)  throws NoSuchAlgorithmException, InvalidKeySpecException{

        if (publicKeyB64.contains(""-----BEGIN PUBLIC KEY-----"") || publicKeyB64.contains(""-----END PUBLIC KEY-----""))
            publicKeyB64 = publicKeyB64.replace(""-----BEGIN PUBLIC KEY-----"", """").replace(""-----END PUBLIC KEY-----"", """");
        if (publicKeyB64.contains(""-----BEGIN RSA PUBLIC KEY-----"") || publicKeyB64.contains(""-----END RSA PUBLIC KEY-----""))
            publicKeyB64 = publicKeyB64.replace(""-----BEGIN RSA PUBLIC KEY-----"", """").replace(""-----END RSA PUBLIC KEY-----"", """");

        // ok, you may need to use the Base64 decoder of bouncy or Android instead
        try{
            byte[] decoded = Base64.decode(publicKeyB64, Base64.DEFAULT);
            org.bouncycastle.asn1.pkcs.RSAPublicKey pkcs1PublicKey = org.bouncycastle.asn1.pkcs.RSAPublicKey.getInstance(decoded);
            BigInteger modulus = pkcs1PublicKey.getModulus();
            BigInteger publicExponent = pkcs1PublicKey.getPublicExponent();
            RSAPublicKeySpec keySpec = new RSAPublicKeySpec(modulus, publicExponent);
            KeyFactory kf = KeyFactory.getInstance(""RSA"");
            PublicKey generatedPublic = kf.generatePublic(keySpec);
            uk =generatedPublic;
           //uk is public variable in class and means public key
        }
        catch (Exception e){
            Log.i(""your log"",""errro in dear function"");
        }

    }
</code></pre>

<p>And this is my library:</p>

<blockquote>
  <p>compile ""org.bouncycastle:bcprov-jdk15on:1.58""</p>
  
  <p>compile ""org.bouncycastle:bcpkix-jdk15on:1.58""</p>
</blockquote>
","36","<android><encryption><rsa><private-key>","0","0","1","2019-08-10 20:05:53","57445353","5","","","","","2019-08-07 22:05:34",""
"57058149","JSch: Create public key from private key file","<p>I like to transmit a private key via QR code (best security practices aside) that was created as part of a <code>KeyPair</code> and need to recover the <code>KeyPair</code> afterwards. Thus </p>

<pre><code>JSch jsch = new JSch();
KeyPair keypair = KeyPair.genKeyPair(jsch, KeyPair.RSA, 4096);

ByteArrayOutputStream prvstream = new ByteArrayOutputStream();
keypair.writePrivateKey(prvstream);
prvstream.close();

ByteArrayOutputStream pubstream = new ByteArrayOutputStream();
keypair.writePublicKey(pubstream, null /* key comment */);
pubstream.close();

byte[] prv_data = prvstream.toByteArray();
byte[] pub_data = pubstream.toByteArray();

// prv_data is transferred via QR-Code here

KeyPair keypair2 = KeyPair.load(jsch, prv_data, null);

ByteArrayOutputStream prvstream2 = new ByteArrayOutputStream();
keypair2.writePrivateKey(prvstream2);
prvstream2.close();

ByteArrayOutputStream pubstream2 = new ByteArrayOutputStream();
keypair2.writePublicKey(pubstream2, null /* key comment */));
pubstream2.close();

byte[] prv_data2 = prvstream2.toByteArray();
byte[] pub_data2 = pubstream2.toByteArray();

if (pub_data.equals(pub_data2) {
    // success
} else {
    // we hit failure here every time.
}
</code></pre>
","<p><code>pub_data.equals(pub_data2)</code> does not do what you think. It compares the references, not the array contents. You want to use <code>Arrays.equals(pub_data, pub_data2)</code>.</p>

<p>See <a href=""https://stackoverflow.com/q/8777257/850848"">equals vs Arrays.equals in Java</a>.</p>

<hr>

<p>Btw, technically you cannot create <em>a public key from a private key</em>. But as <code>KeyPair.writePrivateKey</code> actually writes <em>a whole key pair</em>, not the private key only, it naturally contains the public key too.</p>
","36","<java><jsch><private-key><public-key>","1","1","1","2019-07-16 14:30:44","57059626","1","1","850848","","2019-07-16 14:30:44","2019-07-16 13:15:21",""
"22418300","Logging in linux server with ssh keys","<p>I have two servers <code>A</code> and <code>B</code>.</p>

<p>Is it possible to do password less logins to <code>B</code> without chnaging anything on <code>B</code>.</p>

<p>I mean i want to configure <code>A</code> with whatever setting so that i can login to <code>B</code> like copying private/public keys etc.</p>

<p>Currently i am adding <code>A</code> public key to <code>B</code> 's <code>authorized_keys</code>.</p>

<p>Is there any other way of doing without editing file on <code>B</code></p>
","<blockquote>
  <p>Currently i am adding A public key to B 's authorized_keys</p>
</blockquote>

<p>This is problematic because anyone - friend of foe - who has access to A's private key, implicitly has access to B.</p>

<p>What I suggest involves a simple setup <strong>with a single key pair</strong></p>

<ul>
<li>You have your own key pair</li>
<li>You copy your public key - and only that - to every server you want to access</li>
<li><p>On your box you add this to <code>.ssh/config</code>:</p>

<pre><code>Host A
  ForwardAgent yes
</code></pre></li>
<li><p>You run <code>ssh-add</code></p></li>
</ul>

<p>At this point you can connect to A. Big woop, so what ? Well, if from A you connect to B, it will just work. This is very secure and there is a single key you have to worry about: your own.</p>

<p>Read more about <a href=""https://help.github.com/articles/using-ssh-agent-forwarding"" rel=""nofollow"">SSH agent forwarding at github</a>.</p>
","36","<linux><ssh><key><public-key-encryption><private-key>","-1","1","2","2014-03-15 02:35:25","22418375","0","","","","","2014-03-15 01:05:39",""
"22418300","Logging in linux server with ssh keys","<p>I have two servers <code>A</code> and <code>B</code>.</p>

<p>Is it possible to do password less logins to <code>B</code> without chnaging anything on <code>B</code>.</p>

<p>I mean i want to configure <code>A</code> with whatever setting so that i can login to <code>B</code> like copying private/public keys etc.</p>

<p>Currently i am adding <code>A</code> public key to <code>B</code> 's <code>authorized_keys</code>.</p>

<p>Is there any other way of doing without editing file on <code>B</code></p>
","<p>On A &amp; B you firstly must already have generated your pubkeys with (assume you already have):</p>

<pre><code>sudo ssh-keygen
</code></pre>

<p>Then use the command from machine A:</p>

<pre><code>ssh-copy-id user@machineB -p &lt;port #&gt;
</code></pre>

<p>If you have generated a password for host B's private key you will have to enter that once and machine A's id_pub.rsa contents will be copied into machine B's authorized_keys. </p>
","36","<linux><ssh><key><public-key-encryption><private-key>","-1","0","2","2014-03-15 02:35:25","22418375","0","","","","","2014-03-15 01:05:39",""
"57333790","Decrypt an encrypted private key file with passphrase - java","<p>I have an encrypted private key file lib below.</p>

<pre><code>String privateKey = ""-----BEGIN RSA PRIVATE KEY-----
                     Proc-Type: 4,ENCRYPTED
                     DEK-Info: DES-EDE3-CBC,XXXX 
                     ..................
                     ..............""
</code></pre>

<p>I want to decrypt this private key using a decryption password, i have the password. In openssl something like this helps me decrypt</p>

<pre><code>openssl rsa -aes256 -in encrypted_private.key -out /tmp/mydecrptyedkey.key -passin pass:decryption_passphrase
</code></pre>

<p>How do i do this in Java, found some posts which had used BountyCastle but am i do see there are known CVE with the library. Any help would be great. Thanks.</p>
","","35","<java><spring-boot><encryption><ssl-certificate><private-key>","0","","0","2019-08-02 21:46:16","","2","","","","","2019-08-02 21:46:16","2019-08-03 00:46:34"
"54126606","Is it possible for Facebook or Google login to return some constant and secret value for each user if login is successful?","<p>We have web application which has user's data encrypted with RSA public key. And for a user to access data he needs to decrypt his private key. User can decrypt his private key with his password.</p>

<p>Is there a way with Facebook or Google login, which will return some value that can be used as password to decrypt the private key ?</p>

<p>Normal Facebook or Google login only return access tokens which are not constant.</p>
","","35","<security><rsa><facebook-login><private-key><google-login>","2","","0","2019-01-11 08:07:11","","0","","6389737","","2019-01-11 08:07:11","2019-01-10 10:26:26",""
"54213758","Imported by PS script certificate has broken Private Key","<p>I'm running CI integration tests in Azure DevOps, running happens on a dedicated Azure VM with installed build agent. Those tests require client SSL certificate to be installed on that VM. As a build step in CI I have a PS script that consumes the Azure KeyVault certificate and imports that into LocalMachine/My store of VM. While the cert is imported and I can see it in VM, tests from CI fail using the cert. Note that the cert, when trying to manually export in VM, has a <strong>Export with Private Key</strong> option grayed out.</p>

<p>When I run the same PS script manually withing VM and then run CI tests (with PS step disabled), tests successfully consumer certificate and pass.</p>

<p>What should I change in my PS script below, so it (being running remotely) would import a certificate with <strong>Export with Private Key</strong> option enabled?</p>

<pre><code>$vaultName = ""MyKeyVault-stest""
$secretName = ""MyCertificate""

$kvSecret = Get-AzureKeyVaultSecret -VaultName $vaultName -Name $secretName
$kvSecretBytes = [System.Convert]::FromBase64String($kvSecret.SecretValueText)

$kvSecretPass = 'myPass'

#-----------------------------------------------------------------------------


$pfxCertObject=New-Object System.Security.Cryptography.X509Certificates.X509Certificate2 -ArgumentList @($kvSecretBytes, """", [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable)

$newcertbytes = $pfxCertObject.Export([System.Security.Cryptography.X509Certificates.X509ContentType]::Pkcs12, $kvSecretPass)

$newCert=New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
$newCert.Import($newcertbytes,$kvSecretPass,[System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable)

#-------------------------------------------------------------------------------

$certStore = Get-Item ""Cert:\LocalMachine\My""
$openFlags = [System.Security.Cryptography.X509Certificates.OpenFlags]::ReadWrite
$certStore.Open($openFlags) 
$certStore.Add($newCert) 

Write-host $env:USERNAME
Write-host $(whoami)
</code></pre>
","<p>If you are importing a PFX to add it to a persisted store you want to specify the <code>X509KeyStorageFlags.PersistKeySet</code> flag.  If you don't, at some undetermined point later the garbage collector notices no one cares about the key and then asks Windows to delete it... and then the version added to the X509Store can no longer find its key.</p>

<p>Other reading:</p>

<ul>
<li><a href=""https://stackoverflow.com/q/36867243/6535399"">What is the impact of the `PersistKeySet`-StorageFlag when importing a Certificate in C#</a></li>
<li><a href=""https://stackoverflow.com/q/52750160/6535399"">What is the rationale for all the different X509KeyStorageFlags?</a></li>
</ul>
","35","<azure-devops><ssl-certificate><private-key>","0","0","1","2019-01-16 17:46:50","54222635","0","","","","","2019-01-16 09:18:19",""
"54553073","Export KeyStore/PrivateKey logic in JavaScript","<p>I have a certificate on my Web Server that create an <strong>authorization bearer</strong> used to sent REST api from FE to BE in authorization header.</p>

<p>Now, I want create this authorization bearer on a little <strong>JS</strong> project (no node) only for DEV purpose so I don't need to start a Java program.</p>

<p>How can I implement what the keystore does or simulete in my js code? I need to <strong>extract the private key/signature</strong> and <strong>convert my data</strong> with the extracted signature from my JKS file and use it for generate my Bearer Token, like this:</p>

<pre><code>    myKeyStore.load(myByteArrayInputStream, myPassword.toCharArray());
    myPrivateKeyEntry = (KeyStore.PrivateKeyEntry) myKeyStore.getEntry(alias, new KeyStore.PasswordProtection(myPpassword.toCharArray()));
    myPrivateKey: PrivateKey = myPrivateKeyEntry.getPrivateKey();
</code></pre>

<p>And then:</p>

<pre><code>    Signature myPrivateSignature = Signature.getInstance(""xxx"");
    myPrivateSignature.initSign(myPrivateKey);
    myPrivateSignature.update(data.getBytes());
    mySign = myPrivateSignature.sign();

    return Base64.encodeBase64URLSafeString(mySign);
</code></pre>
","","34","<javascript><rest><authorization><private-key><bearer-token>","0","","0","2019-02-06 11:54:28","","0","","","","","2019-02-06 11:54:28",""
"58051530","Generate rsa private.key having all needed args","<p>I have all needed data to recover my private rsa key. I am using this <a href=""https://github.com/ius/rsatool/blob/master/rsatool.py"" rel=""nofollow noreferrer"">utility</a>:</p>

<pre><code> python rsatool.py -n 14276913577324824871 -p 3710291693 -q 3847922147 -e 0x10001 -v DER -o privkey.key
</code></pre>

<p>And my key is looking like:</p>

<pre><code>-----BEGIN RSA PRIVATE KEY-----
MAcCBQDU6Kxw
-----END RSA PRIVATE KEY-----
</code></pre>

<p>However when I try to validate it using openssl, </p>

<pre><code>openssl rsa -inform PEM -text -noout &lt; privkey.key
</code></pre>

<p>I get following:</p>

<pre><code>unable to load Private Key
140532488451200:error:0D0690DF:asn1 encoding routines:uint32_c2i:too large:../crypto/asn1/x_int64.c:212:
140532488451200:error:0D08303A:asn1 encoding routines:asn1_template_noexp_d2i:nested asn1 error:../crypto/asn1/tasn_dec.c:627:Field=version, Type=RSAPrivateKey
140532488451200:error:04093004:rsa routines:old_rsa_priv_decode:RSA lib:../crypto/rsa/rsa_ameth.c:133:
140532488451200:error:0D078079:asn1 encoding routines:asn1_item_embed_d2i:field missing:../crypto/asn1/tasn_dec.c:406:Field=pkeyalg, Type=PKCS8_PRIV_KEY_INFO
140532488451200:error:0907B00D:PEM routines:PEM_read_bio_PrivateKey:ASN1 lib:../crypto/pem/pem_pkey.c:88:
</code></pre>

<p>When I follow <a href=""https://0day.work/how-i-recovered-your-private-key-or-why-small-keys-are-bad/"" rel=""nofollow noreferrer"">this tutorial</a>, using data from its examples - I am getting the same error. What is wrong? How can I get private key? </p>
","","34","<encryption><openssl><rsa><private-key><key-generator>","0","","0","2019-09-22 17:04:59","","1","","","","","2019-09-22 17:04:59",""
"53229641","How can I tell if given data is encrypted with a public key","<p>I'm going to re-phrase my question completely so it makes more general sense (and correct my blunder with AES/RSA).</p>

<p>Alice has a large block of data to send to Bob via a local mailbox that isn't secure.  To keep her data from prying eyes, she does this:</p>

<ul>
<li>She generates a random 256-bit key</li>
<li>She uses AES-256 encryption to encrypt the data using the key</li>
<li>She uses Bob's public key to encrypt the key she's used</li>
<li>She puts the encrypted data and the encrypted key in the mailbox addressed to Bob</li>
</ul>

<p>Mike the mailman picks up the mail from the mailbox.  However, he doesn't want to lug the data all the way across the internet to Bob's place if bob isn't going to be able to decrypt it.</p>

<p>The question is, how can Mike ascertain whether the key has actually been encrypted using Bob's public key?</p>

<p>In my application I need to transport sensitive data to a data centre.  To achieve this, I have an upload process that accepts files (that have already been AES-encrypted with a key, then the key is encrypted with the recipient's public key) and sends them to the data centre.  The corresponding private key is held at the data centre and used to decrypt the files on receipt.  This is currently in the design stage so there is some flexibility on the public/private key technology to be used but it's likely to be a C# application that's doing the work.</p>

<p>I would like to protect against uploading files that have NOT been encrypted using the public key (because I may waste significant bandwidth and the receiving application at the datacentre will fail to decrypt them).</p>

<p>So, what I want to know is how can I tell at the sending end whether a file has been encrypted using a given public key?</p>

<p>In a nutshell, I have an encrypted file and a public key.  Has the file been encrypted with that key?</p>

<p>Thanks in advance etc.!</p>
","","34","<encryption><public-key-encryption><private-key><public-key>","0","","0","2018-12-20 08:49:23","","3","0","3208573","","2018-12-20 08:49:23","2018-11-09 16:27:35",""
"41140159","ssh connection with privatekey on apple","<p>I am trying to connect to my VPS, but the problem is I recently bought a macbook and don't know how to setup a ssh connection with privatekey.ppk as authentication.</p>

<p>It worked before on my windows with putty, but apple has no putty?</p>

<p>Can someone explain me how to set this up?</p>
","<p>In Mac computers you use ssh through the terminal. you'll need to generate an ssh key, and copy it to your VPS. you have two options to copy your ssh-key to the VPS - via <code>ssh-copy-id</code> command or manually.</p>

<p>this tutorial shows how to copy your key to the VPS - it's by Digital Ocean, so I recommend you to read and follow it: <a href=""https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-14-04"" rel=""nofollow noreferrer"">https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-14-04</a>. </p>

<p>Your relevent part is Part 4.</p>
","33","<macos><authentication><vps><private-key>","0","0","1","2016-12-14 13:27:01","","0","","","","","2016-12-14 10:23:34",""
"1859410","Is there a way to check with calls into my web-application API came from my distributed client?","<p>Is there a way to check with calls into my web-application API came from my distributed client???</p>

<p>That is if I have both a thick client (windows forms client say) and the server side web application that exposes a HTTPS interface (assume user puts username/passwork into the client configuration for authentication), is there a way to ensure the web application interface is ONLY used by my client?  That is, prevent uses 'playing the system' and developing their own scripts/apps to use the API (and hence potentially misuse the service).</p>

<p>If I bury an private key into the WinForms client somehow so it can sign the payloads, the implication would be it could be decompiled by a user???  Just be curious to know if it is possible to solve this one....</p>

<p>thanks</p>
","<p>You can make it harder to ""play the system"", but you cannot hide any secrets on your client's computer.</p>

<p>As soon as the code is the ""bad guy"" has direct access to the program that makes the web service calls, he will be able to disassemble it, or by other means reverse engineer it, to obtain the secret of how to make authenticated calls to the service.</p>
","33","<winforms><security><encryption><code-signing><private-key>","0","1","1","2009-12-07 11:28:42","","0","","","","","2009-12-07 11:22:19",""
"55039527","How to read encoded private key in to buffer?","<p>I have a private Key which is in encoded format. I want to read this key into a buffer within my code. I have path of the key. So i used d2i_x509 and PEM_read_X509. </p>

<p>Also i tried,
<code>fp=fopen(keypath,""r"");
PEM_read_PrivateKey(fp, pKey, NULL, NULL);
rsakey=EVP_PKEY_get1_RSA(pkey); // Here i get rsakey as null</code></p>

<p>But its not working.</p>

<p>My key is in DER format but am getting it as key.pem means in PEM format</p>
","","32","<private-key><pem><der>","0","","0","2019-03-07 09:33:42","","1","","9450506","","2019-03-07 09:33:42","2019-03-07 08:48:41",""
"57817315","TypeError: Object of type '_RSAPrivateKey' is not JSON serializable","<p>I was trying decrypt my private key for jwt assertion. when i am encoding it i am getting json serialization error.</p>

<p>I am using </p>

<pre><code>key = serialization.load_pem_private_key(
  data=privateKey.encode('utf8'),
  password=passphrase.encode('utf8'),
  backend=default_backend()
)
</code></pre>

<p>but i am getting an error while encoding it using jwt.JWT.encode()
TypeError: Object of type '_RSAPrivateKey' is not JSON serializable</p>

<pre><code>Full code:

import jwt
import json
import os
import time
import binascii
from cryptography.hazmat.backends import default_backend
from cryptography.hazmat.primitives import serialization

config = json.load(open('245883597_swrdgywm_config.json'))
appAuth = config[""boxAppSettings""][""appAuth""]
privateKey = appAuth[""privateKey""]
passphrase = appAuth[""passphrase""]

# To decrypt the private key we use the cryptography library
# (https://cryptography.io/en/latest/)
key = serialization.load_pem_private_key(
data=privateKey.encode('utf8'),
password=passphrase.encode('utf8'),
backend=default_backend()
)


# We will need the authentication_url  again later,
# so it is handy to define here
authentication_url = 'https://api.box.com/oauth2/token'

claims = {
'iss': config['boxAppSettings']['clientID'],
'sub': config['enterpriseID'],
'box_sub_type': 'enterprise',
'aud': authentication_url,
 # This is an identifier that helps protect against
 # replay attacks
 'jti': binascii.hexlify(os.urandom(64)),
 #  We give the assertion a lifetime of 45 seconds 
 # before it expires
 'exp': int(round(time.time(), 0) + 45)
 }

 keyId = config['boxAppSettings']['appAuth']['publicKeyID']
 # Rather than constructing the JWT assertion manually, we are 
 # using the pyjwt library.
 assertion = jwt.JWT.encode(
 claims, 
 key, alg='RS512',
 # The API support ""RS256"", ""RS384"", and ""RS512"" encryption

 optional_headers={
 'kid': keyId
 }
 ) 
</code></pre>
","","32","<python><encryption><private-key>","0","","0","2019-09-06 07:18:49","","0","","10612089","","2019-09-06 07:18:49","2019-09-06 07:11:02",""
"55593094","Hyperledger Composer REST Server: Why does multi-user setup need the private keys and not only the public keys?","<p>In Hyperledger Fabric, the recommended way to setup the composer REST server is to use multi-user setup.</p>

<p>This is being taught in the <a href=""https://www.udemy.com/hyperledger"" rel=""nofollow noreferrer"">udemy hyperledger fabric course</a>.</p>

<p>This means that even if all users use the same network card to access the REST server, they use their own blockchain identity to access the blockchain application.</p>

<p>However, it also warned that the REST server should be secure enough to manage the <em>private keys</em>.</p>

<p>My question then is: Should the REST not only manage the <em>public</em> keys to verify the signatures, like in PGP setup? This sounds a bit off to me ... </p>
","","31","<rest><hyperledger-fabric><private-key><public-key>","0","","0","2019-04-09 12:52:41","","0","","3961495","","2019-04-09 12:52:41","2019-04-09 12:38:26",""
"56420527","Information regarding TLS connection and certificates","<p>I am new to this TLS connection , certificates area. 
I have certificates and private key to make connection with server;i am trying it with openssl. I am confused if i have to encrypt private key before sending to the server or use directly? Also,do i have to encrypt all the messages further with this private key?
I have 2 certificates;which api in openssl take 2 certificates for handshake?</p>
","","30","<c++><openssl><ssl-certificate><tls1.2><private-key>","0","","0","2019-06-03 02:33:58","","3","","","","","2019-06-03 02:33:58",""
"57034319","Decryption issue with private key and passphrase","<p>can you people please help with below problem.</p>

<p>I am new t encryption and decryption things in python.</p>

<p>I was provided both pgp private.key and public.key files to do a simple encryption and decryption on a text file.</p>

<pre><code>import gnupg as g
import os
from datetime import datetime

#Home directory
gpg = g.GPG('/key/')
date1 =datetime.today().strftime('%Y%m%d')
file1_combined_faia_csv='test_file.txt'
file1_combined_faia='test_encry.pgp'
key_data = None

print 'pen the public key file.'

with open('priv.key','rb') as f:
    Key_data = f.read()

print 'Importing Key data from the keydata'

key = gpg.import_keys(Key_data)

#List the Keys from the data 

pub_key = gpg.list_keys()

key_data = pub_key[2]

with open(file1_combined_faia_csv,'rb') as file:
    file_data= file.read()

data = gpg.encrypt(file_data,key_data[""keyid""])

with open(file1_combined_faia,'w+') as dec:
    dec.write(str(data))

print 'for PIC Encryption done!!!'

print 'OK: ' + str(data.ok)
print 'Msg: ' + str(data.status)
print 'Error: ' + str(data.stderr) 
</code></pre>

<p>Blow is my original string.</p>

<pre><code>Hi this is tharun from data team.
</code></pre>

<p>And it encrypted successfully.
Please look below of my decryption code. I was provided passphrase also by my client.</p>

<pre><code>import gnupg as g
import os
from datetime import datetime

#Home directory
gpg = g.GPG('/key/')
date1 =datetime.today().strftime('%Y%m%d')
file1_combined_faia_csv='test_encry.pgp'
file1_combined_faia='test_decryped.txt'
key_data = None

print 'pen the private key file.'

with open('priv.key','rb') as f:
    Key_data = f.read()

key = gpg.import_keys(Key_data)

pub_key = gpg.list_keys(True)
key_data = pub_key[0]

file_data = None


print 'for FAIA Encrypting.........'
with open(file1_combined_faia_csv,'rb') as file:
    file_data= file.read()


data = gpg.decrypt(str(file_data),passphrase=""*************""
with open(file1_combined_faia,'w+') as dec:
    dec.write(str(data))

print 'for PIC Decryption done!!!'

print 'OK: ' + str(data.ok)
print 'Msg: ' + str(data.status)
print 'Error: ' + str(data.stderr) 
</code></pre>

<p>Below is the error message</p>

<pre><code>[GNUPG:] NO_SECKEY D43DA661974C8582
[GNUPG:] BEGIN_DECRYPTION
[GNUPG:] DECRYPTION_FAILED
gpg: decryption failed: No secret key
[GNUPG:] END_DECRYPTION
</code></pre>

<p>I am doing above things based on some sample tutorials. I think i am missng some thing while decrypting. I may use both private key and passphrase but not sure how.</p>

<p>can you please help me on the decryption part.</p>

<p>Please let me know if any further info needed.</p>

<p>Thanks</p>
","","30","<python><python-2.7><public-key-encryption><gnupg><private-key>","1","","0","2019-07-15 06:34:28","","1","","","","","2019-07-15 06:34:28",""
"57551872","While Running Fastlane via CronTab it says, Signing Error: No signing certificate ""iOS Distribution"" found","<p>we are trying automate app deployment, almost all works have been completed when we run the bash script via normal terminal it runs fine but however when we try to run the same script under crontab of the mac it says it could not access private key of the certificates inside gym function of fastlane.</p>

<p>The error thrown from cron tab is given below:
Code Signing Error: No signing certificate ""iOS Distribution"" found:  No ""iOS Distribution"" signing certificate matching team ID ""*******"" with a private key was found.</p>
","","30","<cron><keychain><private-key><fastlane>","0","","0","2019-08-19 10:43:08","","0","","10818513","","2019-08-19 10:43:08","2019-08-19 07:04:35",""
"34684295","Is it possible to generate a private key with one file in de- and encrypted version?","<p>Is it possible to generate a private key out of a decrypted file and a encrypted file. For example, if I have an encrypted image and I have the original one, can I generate the private key out of them?</p>
","<p>No, this is not possible with RSA. It's called a known plain text attack. </p>

<p>It's important to use proper (OAEP) padding with RSA, or an <a href=""https://en.wikipedia.org/wiki/Adaptive_chosen-ciphertext_attack#Practical_attacks"" rel=""nofollow"">attacker might be able to trick you into decrypting a message.</a> But, this takes millions of attempts, and it only decrypts one message, it doesn't recover the key.</p>
","29","<encryption><rsa><public-key-encryption><private-key><pgp>","0","1","1","2016-01-08 19:18:04","34684361","1","","15754","","2016-01-08 19:12:25","2016-01-08 19:07:51","2016-01-08 20:22:19"
"56700814","Minimising the risk of deploying Firebase Private Key","<p>The Firebase Admin SDK setup  (<a href=""https://firebase.google.com/docs/admin/setup"" rel=""nofollow noreferrer"">https://firebase.google.com/docs/admin/setup</a>) requires that a Private Key File is generated form the Firebase Console.</p>

<p>In order for the server application to use this file requires that it has access to it on a deployed system (DotNetCore/Ubuntu in our case).</p>

<p>Can anyone suggest whether deploying this private key file like this creates a significant security risk, and if so what steps should be taken to mimimise any such risk.</p>

<p>Thanks.</p>
","","29","<firebase><google-authentication><private-key>","0","","0","2019-07-12 08:15:06","","0","","6922055","","2019-07-12 08:15:06","2019-06-21 09:41:32",""
"47583075","Managing ssh private key","<p>I have a project on the private bitbucket repo, and I am planning access MongoDB via ssh tunnel.</p>

<p>What is the best practice of storing ssh private keys?</p>
","","29","<ssh><project><private-key>","0","","0","2018-05-31 19:27:30","","6","","2482441","","2018-05-31 19:27:30","2017-11-30 21:41:17",""
"21990725","iDeal tokenCode too long","<p>I need to make a connection with Rabobank Professional. Before that I have a <code>RSA private key</code> created with 2048 bits. When I try to connect I get the error that the token code is too long. The token code is made with <code>base64_encode ($ message)</code>. </p>

<pre><code>$message = $timestamp.$merchantID.$subid; 
</code></pre>

<p>How can this be solved?</p>
","","28","<base64><rsa><private-key>","1","","0","2014-02-24 14:41:22","","1","","1740715","","2014-02-24 14:41:22","2014-02-24 14:34:10",""
"53643672","how ensure a public key sender/owner has its private key too?","<p>when we want to encrypt a message by a public key, how we can ensure the public key owner has its private key too?</p>

<p>the rules are:</p>

<ol>
<li>we do not want to have any information about private key that makes a security issue.</li>
</ol>

<p>2.the verifying have to be done in a single request and not in a promise.</p>

<p>3.do not use any way that needs to store some data on the key receiver.</p>

<p>the only way that i can see is sending a random message that encrypted by the public key and ask from the key owner the decrypted message to compare them and ensure the public key sender have its private key too; but this way needs a promise like and two steps to verifying and storing some data:</p>

<ol>
<li><p>receive a public key and send the encrypted random string and wait</p></li>
<li><p>receive the decrypted data and compare them with original string</p></li>
</ol>

<p>now do you know any way to do this verifying without need to storing any data 
and just do it with a single request may be by some extra data to send by the public key or some thing else?
or is there any other public key encryption algorithm that has this feature built-in?</p>
","<p>Using S/MIME as an example, one pre-requisite of encrypting a message to the recipient is to have their Public Certificate. </p>

<p>Now, of course, the recipient can first send you their certificate as an attachment, however, it is more common for the recipient to first send you a signed email. </p>

<p>This signed email would prove that the recipient has access to their private key as they would hash the contents of the email and then sign the hash with their private key. </p>

<p>You would then verify the hash with their public key (the certificate is sent along side the email) and comparing that hash to the hash of the MIME content of the email.</p>
","28","<rsa><private-key><public-key><elgamal>","1","1","1","2018-12-06 06:05:08","53643724","0","","3690259","","2018-12-06 02:26:21","2018-12-06 02:20:42",""
"53266258","Service Account key labels?","<p>I'm setting up service accounts and users/groups under them. If I want to generate a different key for each group/user I attach to the service account, I also want to keep track of this in the situations that someone I assigned a key to gets hacked or decides to break stuff. I want to tie the actions back to the service user, and the key, and then the user.</p>

<p>Is there a way to list key usage? Like a log? Or may label the keys?</p>
","<p>You can use <a href=""https://cloud.google.com/logging/docs/audit/"" rel=""nofollow noreferrer"">Cloud Audit Logging</a> to generate logs for the operations that you want to monitor/control. Also, you can configure who has access to these <a href=""https://cloud.google.com/iam/docs/roles-audit-logging"" rel=""nofollow noreferrer"">audit logs</a>. These settings are in the <a href=""https://cloud.google.com/resource-manager/reference/rest/Shared.Types/AuditConfig"" rel=""nofollow noreferrer"">auditConfig file</a>. </p>

<p>For the keys, If you want further control and management, you can use the <a href=""https://cloud.google.com/kms/docs/logging"" rel=""nofollow noreferrer"">Cloud Key Management Service</a> and also configure Cloud Audit Logging for this service. <a href=""https://cloud.google.com/kms/docs/labeling-keys"" rel=""nofollow noreferrer"">Key labeling</a> can help to order and track this information.</p>
","27","<gcloud><private-key><service-accounts>","0","0","1","2019-01-22 18:10:57","","0","","","","","2018-11-12 16:25:12",""
"55264132","Python paramiko - Connect with Linux server using public-private key pair (PuTTY)","<p>I'm trying to connect to a Linux server using Python's <code>paramiko</code> library. I've generated public-private key pair using PuTTYGEN (type of the key - in the Key dropdown list - 'SSH-2 RSA Key'; in the Parameters field - 'RSA'). I added the output of the public key in the <code>~/.ssh/authorized_keys2</code>. In order to connect to the server I need to decrypt the private key (<code>private_key.ppk</code>) with the password in the PAGEANT.</p>

<p>When logging manually (start Putty, double click on the saved connection) everything works well - I get connected to the server without using my password.</p>

<p>My Python code:</p>

<pre><code>import paramiko
import os
from credentials import * # password file

private_key = ""path\\to\\the\\private\\key.ppk""
k = paramiko.RSAKey.from_private_key_file(private_key, password=password)
c = paramiko.SSHClient()
c.set_missing_host_key_policy(paramiko.AutoAddPolicy())
c.connect(hostname = 'server_ip_address', port=port, username = username, pkey=k)
</code></pre>

<p>I get the following error:</p>

<pre><code>paramiko.ssh_exception.SSHException: not a valid RSA private key file
</code></pre>

<p>I suspect that <code>.ppk</code> extension might not be handled by <code>paramiko</code>. </p>
","","27","<python><ssh><paramiko><private-key>","0","","0","2019-03-20 15:18:12","","3","","8201676","","2019-03-20 15:18:12","2019-03-20 15:10:55","2019-03-20 16:07:13"
"23776495","Clarification on public key decryption","<p>I have a key pair and I use private key to encrypt the data, public key for decryption. Is it possible to provide confidentiality in this setup ?</p>
","<p>No, it's not. You must encrypt data using recipient's public key to have confidentiality. Now all you have are integrity and authenticity (you've got a variation of digital signature, actually)</p>
","27","<public-key-encryption><private-key>","0","3","2","2015-05-16 02:50:52","","2","","207421","","2015-05-16 01:18:06","2014-05-21 07:18:46",""
"23776495","Clarification on public key decryption","<p>I have a key pair and I use private key to encrypt the data, public key for decryption. Is it possible to provide confidentiality in this setup ?</p>
","<p>In the setup that you're asking about, anyone who had access to the recipient's public key (which could be a lot of people if it's truly <em>public</em>) could then decrypt the message, so no, there is no real confidentiality.</p>

<p>If you want to provide both authenticity <em>and</em> confidentiality, you might try encrypting the data with the recipient's public key in order to provide confidentiality, then encrypting (or signing) that with your private key. The recipient would then decrypt (or verify) that data by decrypting it with your public key, thus indicating that the data really came from you, and then decrypting that data using their private key thus helping to ensure confidentiality.</p>
","27","<public-key-encryption><private-key>","0","0","2","2015-05-16 02:50:52","","2","","207421","","2015-05-16 01:18:06","2014-05-21 07:18:46",""
"57913317","How to generate private key in live environment","<p>In yodlee deveopment environment, I can't see the private key I need to signed the generated jwt, i see the private key in sandbox, but can't see it in development</p>

<p>Someway I have a private key that isn't working (can't remember how i have this private key, as this is a development that i started time ago, and it stop and now i'm getting it again)</p>
","<p>In the yodlee sandbox, you are issued your RSA keypair.  This is to speed things along for you.</p>

<p>Once you get out of the sandbox environment, you need to generate your own RSA key pair, and upload your public key with Yodlee while keeping your private key secure, confidential, secret, and not in any mobile devices.</p>

<p>Google ""How do I generate an RSA keypair"" for info on the command line tools and other sources.</p>
","27","<private-key><yodlee>","0","0","1","2019-09-16 16:01:23","","0","","","","","2019-09-12 19:25:06",""
"43974758","Is the private key inside a cert encrytped?","<p>I'm wondering if the private key inside a cert encrypted so that even someone somehow exported my private key, it still cannot be used without decryption?</p>
","","26","<security><certificate><private-key>","0","","0","2017-05-15 08:33:51","","3","","","","","2017-05-15 08:33:51",""
"57095553","Need to assign gpg decrypted filename to a variable","<p>I'm using below command(non -interactive mode of gpg) to decrypt my file:</p>

<pre><code>    gpg --yes  --batch --passphrase=Abcdefgh1$ kbc.text.gpg
</code></pre>

<p>The file it will decrypt will be kbc.text. Now, in my script I need to assign name of this decrypted file to a variable which I need to use further. For that, I'm using below command:</p>

<pre><code>    tmp=gpg --yes  --batch --passphrase=Abcdefgh1$ kbc.text.gpg
</code></pre>

<p>However, when I run this, I get below error:</p>

<pre><code>    script2.sh: line 2: --yes: command not found
</code></pre>

<p>Any way to implement this and avoid this error. Any help will be appreciated.</p>
","","26","<bash><encryption><centos><gnupg><private-key>","0","","0","2019-07-18 13:23:43","","2","","","","","2019-07-18 13:23:43",""
"51959205","Python / SSL - what user should the process run as if they have read on the private key?","<p>There's a nice example in Python here <a href=""https://speakerdeck.com/markush/ssl-all-the-things-pycon-nz-2016?slide=18"" rel=""nofollow noreferrer"">https://speakerdeck.com/markush/ssl-all-the-things-pycon-nz-2016?slide=18</a> of a server which uses SSL.</p>

<p>At this point ...</p>

<p><a href=""https://i.stack.imgur.com/ttIXN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ttIXN.png"" alt=""enter image description here""></a></p>

<p>... the process reads a file which contains the private key.</p>

<p>So whatever user the process is running as needs read permission on the private key.</p>

<p>What is the best way to do this from a security point of view ?</p>

<p>Would it be considered bad practice to run the process as 'foo' and give foo read permissions to the PK ? That doesn't sound ideal to me but I just can't see how the type of code in the example can run otherwise ?</p>

<p>I know Apache, for instance, starts as root and then spawns a process under a user with lesser rights. Is that the type of thing that might be done in this circumstance ? Is there a good example of doing that pythonically ?</p>

<hr>

<p><strong>EDIT</strong>: OK well it seems as if this <a href=""https://docs.python.org/3.5/library/os.html#os.setuid"" rel=""nofollow noreferrer"">https://docs.python.org/3.5/library/os.html#os.setuid</a> would allow the process to start as root and then run under a different owner (if that was considered necessary where access to PK is needed like here). Would be interested in any examples of it being done in Python ... as well as any other approaches which might be valid.</p>

<hr>

<p><strong>EDIT</strong>: Just to add to the comment about the use of <code>os.setuid</code> having read this <a href=""https://unix.stackexchange.com/questions/166817/using-the-setuid-bit-properly"">https://unix.stackexchange.com/questions/166817/using-the-setuid-bit-properly</a> there do seem to be a number of risks which are difficult to mitigate in my case . I would be interested in any suggestions in how others have managed to write Python scripts which access Private Keys without running as root.</p>
","","26","<python><python-3.x><ssl><permissions><private-key>","0","","0","2018-08-22 04:01:58","","7","","364088","","2018-08-22 04:01:58","2018-08-22 02:44:00",""
"58666581","How to find the private key from Elliptic Curve Digital Signature Algorithm","<p>I am trying to figure out how to find the private key using the forumula on wikipedia.</p>

<p>I read some articles on <a href=""https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm"" rel=""nofollow noreferrer"">https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm</a>
like this one.</p>

<p>My task is to find the private key :
I have given two messages and their according signatures. To save on randomness, only
the first nonce is generated randomly. The nonce for the second signature is derived from the previous
nonce as k = a · k + b mod n, with (a = 2, b = 1). Recover the private key d .</p>

<pre><code>    (r1, s1) = sigdecode_string(sig1, curve.order)
    (r2, s2) = sigdecode_string(sig2, curve.order)


    z1 = int.from_bytes(hashfunc(f1).digest(), 'big')
    z2 = int.from_bytes(hashfunc(f2).digest(), 'big')

    n = curve.order
</code></pre>

<p>I tried to recover my two k's first with:</p>

<pre><code>k1 = (z1-z2) * inverse_mod(s1-s2,n) %n
k2 = (2*k1+1) % n
d = (k1 * k2) % n   
</code></pre>

<p>I dont know where my mistake are... Can someone point it out?</p>
","","26","<python><encryption><private-key>","0","","0","2019-11-01 22:29:24","","3","","","","","2019-11-01 22:29:24",""
"57662055","How to recover the private key of a user certificate?","<p>I want to retrieve the private key of a user certificate under Windows.
I use the CertOpenSystemStore and CertEnumCertificatesInStore methods to retrieve the user certificate.
Then the CryptAcquireCertificatePrivateKey method to retrieve the private key but there is a problem with the access rights.
Is this the right way to proceed?</p>
","<p>The Certificate of a User Account is not stored in the 'Computer Store', if you need permissions on a key stored in the Computer store, you need to: </p>

<ol>
<li>run <code>certlm.msc</code></li>
<li>navigate to the certificate</li>
<li>right click > 'all Tasks' > 'Manage Private Keys ...'</li>
<li>set your desired permissions</li>
</ol>

<p>If the certificate is in a user store, you must impersonate that user and access its personal store. In this case, you can export the key if the key is marked as exportable.</p>

<p>If the key is generated by a PKI, there is also the possibility that the key is available at the PKI but this depends strong on the configuration of the PKI</p>
","25","<windows><certificate><private-key>","0","0","1","2019-08-29 17:27:46","","0","","1413395","","2019-08-26 17:02:59","2019-08-26 17:01:09",""
"58753399","How to create a java keystore only with a private key file?","<p>I only have a private key as a .key file, no other .crt or ca stuff.
I need to create a java keystore with that. How to convert it?</p>

<p>What I tried so far: <br>
I renamed my .key file to .pem.<br>
I used openssl to create a .p12 file out the .pem.</p>

<p>And lastly I use this command to create the java keystore:</p>

<pre><code>keytool -importkeystore -srckeystore [MY_FILE.p12] -srcstoretype pkcs12
-srcalias [ALIAS_SRC] -destkeystore [MY_KEYSTORE.jks]
-deststoretype jks -deststorepass [PASSWORD_JKS] -destalias [ALIAS_DEST]
</code></pre>

<p>I am asked to give the passwords, which I enter and then I get an error:</p>

<pre><code>PEM_read_bio:no start line: ...... Expecting: TRUSTED CERTIFICATE
</code></pre>

<p>I already checked for missing spaces and that the file starts with the ""-----"" and ends with it as well.</p>

<p>Does anyone know a way to do it?</p>
","<p>You didn't show the openssl command you used, but it's probably wrong, since the error you quote comes from openssl and <em>not</em> keytool, and as a result your keytool command couldn't possibly work.</p>

<p>However, <strong>your goal is unwise</strong>. The Java <code>KeyStore</code> API is designed to store a privatekey <em>with a certificate (or chain) for it</em>, and both keytool and most other programs won't work right or at all for a privatekey with no certificate. The usual practice in Java -- and mostly in OpenSSL as well -- when you have no real certificate(s) for a privatekey is to <strong>create a 'dummy' self-signed certificate</strong>; this does not extend trust as a real certificate does, but it fills the certificate-shaped hole(s) and allows programs to work at least up to the point they need valid trust.</p>

<p>There are two ways to do this. OpenSSL is easier, but not programming and hence not really ontopic:</p>

<pre><code>openssl req -new -x509 -inkey privkey.pem [-days N] [-subj name] -out dummy.pem
# -subj name has the form /attr=value/attr=value/...
# where commonly used attrs are C (Country), ST (State/Province), 
# L (Locality), O (Organization), OU (Org Unit), CN (CommonName).
# if you omit -subj name you will be prompted for these (assuming normal config)
# -days defaults to 30
# if you modify the default config file or create and specify your own 
# you can configure a variety of X.509 extensions, but for a dummy cert 
# this is only rarely helpful, depending how you (will) use it

openssl pkcs12 -export -in dummy.pem -inkey privkey.pem -out keystore.p12 [-name alias]

# Java can use the PKCS12, but if you really want JKS for some reason
keytool -importkeystore -srckeystore keystore.p12 -destkeystore keystore.jks -deststoretype JKS \
  [-srcstorepass p] [-deststorepass p] [-srcalias x [-destalias y]]
# most j8 can read PKCS12 without specifying it (due to a compatibility setting) 
# and all j9 up autodetect the source type;
# j8 defaults dest type to JKS but j9 up do not
</code></pre>

<p>Alternatively you can program this in Java. OOTB Java doesn't directly handle PEM format for keys, and more importantly handles only one of the eight formats used by OpenSSL -- and you carefully avoided telling us which you have. Also OOTB Java has no documented way to create a certificate; there are internal classes used by keytool, but after j8 it is increasingly difficult to use internal classes. Both of these are solved by <a href=""https://www.bouncycastle.org"" rel=""nofollow noreferrer"">BouncyCastle</a> (bcpkix+bcprov) which supports OpenSSL PEM keys and generating X.509 certificates among other things.</p>

<p>To read OpenSSL's 'traditional' format unencrypted privatekey file see<br>
<a href=""https://stackoverflow.com/questions/41934846/read-rsa-private-key-of-format-pkcs1-in-java"">Read RSA private key of format PKCS1 in JAVA</a><br>
<a href=""https://stackoverflow.com/questions/3243018/how-to-load-rsa-private-key-from-file"">How to Load RSA Private Key From File</a><br>
<a href=""https://stackoverflow.com/questions/7216969/getting-rsa-private-key-from-pem-base64-encoded-private-key-file"">Getting RSA private key from PEM BASE64 Encoded private key file</a>  </p>

<p>or traditional encrypted<br>
<a href=""https://stackoverflow.com/questions/44681737/get-a-privatekey-from-a-rsa-pem-file"">Get a PrivateKey from a RSA .pem file</a><br>
<a href=""https://stackoverflow.com/questions/35276820/decrypting-an-openssl-pem-encoded-rsa-private-key-with-java"">Decrypting an OpenSSL PEM Encoded RSA private key with Java?</a>  </p>

<p>For PKCS8 encrypted<br>
<a href=""https://stackoverflow.com/questions/46767281/reading-pkcs8-in-pem-format-cannot-find-provider"">Reading PKCS8 in PEM format: Cannot find provider</a><br>
<a href=""https://stackoverflow.com/questions/31706488/decrypt-pem-private-rsa-key-with-bouncy-castle"">Decrypt PEM private (RSA) key with Bouncy Castle</a><br>
and since you actually need the publickey also, which 'traditional' formats give you (as <code>PEMKeyPair</code> -> <code>KeyPair</code>) but PKCS8 doesn't<br>
<a href=""https://stackoverflow.com/questions/57043669/bouncy-castle-how-to-get-public-key-info-from-jceopensslpkcs8decryptorprovider"">Bouncy Castle - how to get Public Key Info from JceOpenSSLPKCS8DecryptorProviderBuilder</a> (mine)  </p>

<p>For generating a selfsigned cert with Bouncy<br>
<a href=""https://stackoverflow.com/questions/29852290/self-signed-x509-certificate-with-bouncy-castle-in-java"">Self signed X509 Certificate with Bouncy Castle in Java</a><br>
<a href=""https://stackoverflow.com/questions/14930381/generating-x509-certificate-using-bouncy-castle-java"">Generating X509 Certificate using Bouncy Castle Java</a> (but don't use SHA1)<br>
maybe <a href=""https://stackoverflow.com/questions/9938079/generating-x509certificate-using-bouncycastle-x509v3certificatebuilder"">Generating X509Certificate using bouncycastle X509v3CertificateBuilder</a>  </p>
","25","<java><keystore><private-key>","-1","1","1","2019-11-09 00:11:32","","1","","","","","2019-11-07 16:43:40",""
"53281993","Best way to reference a keyfile in nodejs","<p>I did some searching, but my terms ""keyfile reference secure"" and various others turned up too many results, so here I am. If this has been asked before, I'd be happy to reference that. </p>

<p>I have a nodejs project that uses the <a href=""https://github.com/googleapis/nodejs-vision#readme"" rel=""nofollow noreferrer"">Google Vision API/SDK</a> and that sample project uses the <code>google-cloud</code> module and then uses this kind of structure to get the key file (reference <a href=""https://github.com/googlecodelabs/cloud-nodejs/blob/8d2578696549ccc4b2cf84cdae83bed6b23fda3e/step-3-book-cover-images/books.js"" rel=""nofollow noreferrer"">here</a></p>

<pre><code>  var gcloud = require('google-cloud');

  var datastore = gcloud.datastore({
    projectId: config.projectId,
    keyFilename: config.keyFilename
  });
</code></pre>

<p>However, when using the <code>@google-cloud/vision</code> module directly, you can also use the <code>GOOGLE_APPLICATION_CREDENTIALS</code> environment variable pointing to a file containing the key file and it ""just works"" as long as you export the environment variable or set the variable and initiate the command like so:</p>

<pre><code>GOOGLE_APPLICATION_CREDENTIALS=/home/jomama/somefolder/keyfile.json node
</code></pre>

<p>So, considering the project will be tracked with git, my questions are:</p>

<ol>
<li>What is the code level advantage of using either approach in the above?</li>
<li>What security issues need to be addressed in either approach?</li>
<li>Any other considerations I'm missing?</li>
</ol>

<p>Granted I don't want my keyfile stored in git but I still want the project tracked there. </p>
","","24","<git><google-cloud-platform><private-key>","1","","0","2018-11-13 13:23:06","","0","","","","","2018-11-13 13:23:06",""
"57792344","Where can I find a script that can generate every private key possible?","<p>How do I make a script that generates every private key (bitcoin) possible? </p>

<p>I found one code but that didn’t worked.</p>
","<p>In Bitcoin, a private key is just a 256-bit number, and can be represented in many, many different ways. The simplest way is to represent it with hexadecimal.</p>

<p>Here is a C program that prints out all the keys:</p>

<pre><code>#include &lt;inttypes.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdint.h&gt;

int
main()
{
    uint64_t parts[4] = {0, 0, 0, 1};

    while (!(parts[0] == 0xFFFFFFFFFFFFFFFF &amp;&amp; parts[1] == 0xFFFFFFFFFFFFFFFE &amp;&amp; parts[2] == 0xBAAEDCE6AF48A03B &amp;&amp; parts[3] == 0xBFD25E8CD0364140)) {
        printf(""%016""PRIX64""%016""PRIX64""%016""PRIX64""%016""PRIX64""\n"", parts[0], parts[1], parts[2], parts[3]);
        if (++parts[3] == 0)
            if (++parts[2] == 0)
                if (++parts[1] == 0)
                    ++parts[0];
    }
}
</code></pre>

<p>However, generating every single private key would take millions and millions of years; and it is basically impossible.</p>

<p>There are over 10^77 possible private key combinations, which is about the number of atoms in the entire universe.</p>
","22","<private-key>","0","1","1","2019-09-04 19:27:31","","1","","","","","2019-09-04 16:17:02",""
"58545687","RSA private key decrypt function returning garbage values","<p>I'am trying to decrypt the encrypted message with below code, basically reading the private key file inorder to decrypt. </p>

<hr>

<pre><code>from Crypto import Random
from Crypto.PublicKey import RSA
import base64


def decrypt_message(encoded_encrypted_msg, privatekey):
        decoded_encrypted_msg = base64.b64decode(encoded_encrypted_msg)
        private_key_object = RSA.importKey(privatekey)
        decoded_decrypted_msg = private_key_object.decrypt(decoded_encrypted_msg)
        return decoded_decrypted_msg

def get_private_key(PRIVATE_KEY_FILE_PATH):
    with open(PRIVATE_KEY_FILE_PATH, 'rb') as file:
        pkf = file.read()
        return pkf

PRIVATE_KEY_FILE_PATH = ""/file/path/xyz.pem""


privatekey = get_private_key(PRIVATE_KEY_FILE_PATH)

encrypted_msg = b'uVdNiaQoivUxRglJ9iAIsfqGlRVJV1IvZaDGIhZpDBlGgmsIzhWmAnIzXD1DQHUEGj5947mxHRTUhPgWlUit7CZDeP2KWD1SgvI6ZZda3OxwaK4y0Ao0cX1G+jgaY5x8hKNo5f03t565lYbq3dt9gj+haqNfy0d7fa8ZoFHlNfQwk/7RHJow1DtymuYyzELJ91nkY4eo6NHG2cQDXWPul/WEyWX1XhrlwGGrc+CClHUZqvVRiUSDQBo0YDnUD2DIkSm3ovGEI+DR/RVpFBEsG1DycsD0k63WqWMF12+Sdz2qIeX0WLQ5Mxfk017uzUpi+LlGPZLp4oYBr1vNmDZglg=='
decrypted_msg = decrypt_message(encrypted_msg, privatekey)

print ""Decrypted message: %s"" % (decrypted_msg)
</code></pre>

<hr>

<p>Output:</p>

<pre><code>ڋ�;�jU�e�a�d҃|�Ｚ�pN����qm��Lb""Z6�(�);�0�d��.*#�%ט�H&lt;��XI��Lj����I#�P2��E����&gt;�����x��ᚴ2��_�&gt;��p%Rej�&lt;B0U{�+;��b
</code></pre>

<p>However, i'am getting the decrpyted output with junk characters? How can i get the right string without junk characters?</p>
","","22","<python><rsa><private-key>","0","","0","2019-10-24 16:38:35","","5","","","","","2019-10-24 16:38:35",""
"54880359","How to find user in gitlab on premise using his key","<p>My company has <code>gitlab</code> on-premise. And I takes over the former project from the previous team. To secure my system from unattended login. I blocks the accounts which are not active members. Unfortunately, I block one access and my <code>buddy.works</code> does not work since that account has been block my me.</p>

<p><strong>Questions:</strong><br>
How to search the user from given gitlab private key?</p>
","<p>You can use that private key to push a commit to a project and check on the web interface who is associated to that key.</p>
","22","<authentication><gitlab><private-key>","0","0","1","2019-02-26 12:59:07","","0","","","","","2019-02-26 07:27:47",""
"56607951","Unable to generate server.csr for self-signed certificate","<p>I'm trying to generate a self-signed certificate for my website. I was able to generate the server.key file but when I try to execute the command for generating server.csr file to proceed further, I don't receive any error but the csr file isn't generated either. I don't find the file anywhere on my machine. Here's the command I'm using</p>

<p>I've tried saving the file to a known location. I've even tried giving full permission to the folder containing openssl application and even tried running in admin mode.</p>

<p>Here's the point from which I'm unable to move forward:</p>

<pre><code>C:\Program Files (x86)\GnuWin32\bin&gt;openssl req -config ""C:\Program Files 
(x86)\GnuWin32\share\openssl.cnf"" -new -key server.key -sha256 -out 
server.csr
Loading 'screen' into random state - done
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a 
DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:IN
State or Province Name (full name) [Some-State]:Delhi
Locality Name (eg, city) []:Delhi
Organization Name (eg, company) [Internet Widgits Pty Ltd]:CT
Organizational Unit Name (eg, section) []:IT
Common Name (eg, YOUR name) []:flyingtreat.com
Email Address []:hello@flyingtreat.com
</code></pre>

<p>gives no error. Following is the last thing it'll and all I see is the prompt again.</p>

<pre><code>Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:killpir@cy

C:\Program Files (x86)\GnuWin32\bin&gt;
</code></pre>

<p>I don't understand if the server.csr file is generated or not. Please help!</p>
","","22","<https><openssl><private-key><csr>","0","","0","2019-06-15 06:31:11","","3","","","","","2019-06-15 06:31:11",""
"37689679","It can be deleted a git ssh private key?","<p>I set my git configuration a year ago since that time I haven't used it.
Now that I need to use it I've forgotten the private ssh key.
I have tried by deleting git but the config still stay somewhere in my computer  when I re-install git.
I need to clone a repository but I can't because, git still requesting the key.
Can somebody help me?</p>
","<p>If you never used the key before there is no problem to remove it. You will need to create another one to use while trying to communicate with sites light <a href=""http://github.com"" rel=""nofollow"">Github</a> or trying to clone from a <code>ssh</code> repository server.</p>

<p>Also, if you are using git on Linux the key might be stored on <code>.ssh/</code> directory inside your home. Even if you remove git, the config file will still be in your home directory too (<code>.gitconfig</code>).</p>
","22","<git><ssh><command><private-key>","0","0","1","2016-06-07 21:41:15","","0","","","","","2016-06-07 21:27:05",""
"58744855","Hybrid content encryption for multiple authorized users (FE and BE)","<p>At the moment I want to implement a method that stores certain data server-side only encrypted. For this procedure is provided that each authorized user receives a private key, with which he can store and read encrypted data. Now it is so that several authorized persons are allowed to look at the same encrypted content. This means that if person A stores data encrypted with his private key, person B (if authorized) can also read this data with his private key.</p>

<p><strong>The idea of ​​implementation:</strong>
For all authorized persons, a single symmetric key is generated on the server side. The key is used to encrypt and decrypt plain text data. Now, for each individual claimant, a key pair is generated (public and private). With the public key, the symmetric key is encrypted and stored for the user and there are several of these asymmetrically encrypted symmetric keys on the server. The private key is given to the user (as a file download, HTTPS), which later can be used to decrypt the encrypted symmetric key. Therefore He can upload his private key before writing or reading encrypted data, in a web application (client side) and send it to the server. The Server uses the private Key to encrypt the content of the user and save it, or decrypt older content and send it in plain text to the user.</p>

<p>My problem now is that the weak point is the server, where the private key of the user must first be sent to encrypt and decrypt. There might be someone with access this private key secretly intercept and save.</p>

<p><strong>My question now:</strong> Is there an alternative to the approach or does one have to do so if he wants to implement such a procedure? It is important that the data is stored only encrypted. And also this must be implemented with a client web-application and a backend.</p>
","","21","<rest><encryption><rsa><backend><private-key>","0","","0","2019-11-07 08:40:23","","4","","","","","2019-11-07 08:40:23",""
"54653977","how to find private key in gpg in binary format(and not certificate)?","<p>We want to catch raw private key from gnugp with below code:</p>

<pre><code>gpg --export-secret-keys
</code></pre>

<p>but it is something like certificate, how can we catch raw private key?</p>
","","21","<security><key><rsa><gnupg><private-key>","0","","0","2019-02-12 16:00:12","","0","","3104974","","2019-02-12 16:00:12","2019-02-12 15:54:28",""
"57615743","gcr-viewer not opening encrypted private key file","<p>I've created a self-signed certificate with OpenSSL in pem format. I have the certificate file in one file and in another the private key that is password protected. Tried this a couple of times and I'm not able to open it with this program.</p>

<p>I have signed some pdfs with a PHP library using this keypair so I'm using the correct password :P</p>

<p>I'm using Linux Mint Cinammon 18.1 and gcr-viewer 3.18. Any thoughts on this?</p>
","","21","<private-key><gnome><pem>","0","","0","2019-08-22 19:09:53","","0","","","","","2019-08-22 19:09:53",""
"53452614","How to extract the fields (Country, State, ... E-mail) from a p12 file without password","<p>I have a file.p12 which contains the private key protected  with a password (that i have not) and the public certificate.</p>

<p>I have tried the following commands in the cmd of windows:</p>

<pre><code>pkcs12 -in file.p12 -clcerts -nokeys -out publicCert.pe
</code></pre>

<p>But it require the private passwords.</p>
","<p>Generally speaking, you can't.</p>

<p>While a PFX supports many different configurations, the default is to encrypt the private keys with 3DES-CBC and the certificates with RC2/40-CBC; each encrypted segment uses the password as input into a formula to produce a different cryptographic key.</p>

<p>So your two easiest options are to know the password, or to try to crack the RC2 payloads.</p>
","21","<security><certificate><key><public-key-encryption><private-key>","0","0","1","2018-11-24 16:07:10","","0","","","","","2018-11-23 20:28:49",""
"57329367","Hyperledger Fabric Users Private Key export","<p>I am currently working on a blockchain platform based on the hyperledger fabric framework and I am trying to find a way to get the private key of the user. </p>

<p>I have implemented the ecies package which is a way of encryption using the elliptic curve cryptography and what I need is to get the private key of the user in order to decrypt the message. </p>

<p>Is there a way to retrieve it? 
Is it generated every time I run a chaincode? </p>

<p>Can someone please inform me about the whole topic? Because I am very confused about the process and every time I am finding different answers. First of all the private key is smothering that is being generated once and is stored? And if yes how can I retrieve it? </p>

<p>Thanks</p>
","","21","<hyperledger-fabric><blockchain><private-key>","0","","0","2019-08-02 15:19:30","","0","","","","","2019-08-02 15:19:30",""
"58685732","echo privatekey makes key invalid","<p>I need to copy an ssh private key to a Linux machine from a different Linux VM over ssh. I used echo <code>$privateKey &gt;&gt; ~/.ssh/id_rsa</code>. Echo does not understand the line breaks and add the content into one line and the key becomes invalid.</p>

<pre><code>ssh-add ~/.ssh/id_rsa
Error loading key ""/home/mobileapp/.ssh/id_rsa"": invalid format
</code></pre>

<p>if i use vi to edit the file and hit enter after every line breaks then the key becomes valid and stars working. How can i make echo to copy the key properly in the file.</p>

<pre><code>echo $privateKey &gt;&gt; ~/.ssh/id_rsa
</code></pre>
","<blockquote>
  <p>How can i make echo to copy the key properly in the file.</p>
</blockquote>

<p>Change your script to:</p>

<pre><code>echo $privateKey | fold -w 64 &gt;&gt; ~/.ssh/id_rsa
</code></pre>

<p><code>fold</code> is available on a number of platforms, like Apple BSD and Linux. The command should work just about everywhere.</p>

<p>RFC 1421, Privacy Enhancement for Internet Electronic Mail, says 64-characters is the limit to use. Most software can handle any line length, but some software is still sensitive to the 64-character limit.</p>
","20","<ubuntu><ssh><echo><private-key>","-1","0","1","2019-11-05 01:09:21","","2","","608639","","2019-11-05 01:08:47","2019-11-04 00:01:59",""
"40978834","Generate separate private key for ssh on remote server","<p>Does the remote machine that I will be ssh'ing into require it's own private key to be generated so that I can ssh into it from a local machine.</p>
","<p>Yes. It is called <strong>Host Key</strong> and it needs to exists before you ssh into the machine. It is used to validate the identity of the server and prevent Man in the Middle Attacks.</p>
","19","<ssh><private-key>","0","0","1","2016-12-05 16:58:54","","0","","","","","2016-12-05 16:28:11",""
"58741304","Create customized private and public keys with key size in JAVA and iOS","<p>Needs to use RSA concept in both Android (Java) and iOS. Both platforms results should be same.</p>

<p>In Android created Private and public Keys with the help of KeyFactory, X509EncodedKeySpec, PKCS8EncodedKeySpec classes.</p>

<p>""RSA/ECB/PKCS1Padding""</p>

<p>KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");</p>

<pre><code>public static PrivateKey getPrivateKey(String base64PrivateKey) {

        PrivateKey privateKey = null;
        PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(Base64.getDecoder().decode(base64PrivateKey.getBytes()));

        KeyFactory keyFactory = null;
        try {

            keyFactory = KeyFactory.getInstance(""RSA"");

        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }
        try {
            privateKey = keyFactory.generatePrivate(keySpec);
        } catch (InvalidKeySpecException e) {
            e.printStackTrace();
        }
        return privateKey;
    }

---------------------------

 public static PublicKey getPublicKey(String base64PublicKey) {
        PublicKey publicKey = null;
        try {
            X509EncodedKeySpec keySpec = new X509EncodedKeySpec(Base64.getDecoder().decode(base64PublicKey.getBytes()));
            KeyFactory keyFactory = KeyFactory.getInstance(""RSA"");
            publicKey = keyFactory.generatePublic(keySpec);
            return publicKey;
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        } catch (InvalidKeySpecException e) {
            e.printStackTrace();
        }
        return publicKey;
    }
</code></pre>

<p>Exactly What i need is, Need to use same private key in android and ios once encrypted the string in android means, with the help of private key need to decrypt in iOS it should be exact result. I tried so many ways its not working. </p>

<p>Didn't get any crashes. But When using Android private key in iOS i'm getting following error.. "" unable to decrypt"".</p>

<p>I'm waiting for Good result from you guys..</p>
","","19","<android><ios><rsa><customization><private-key>","0","","0","2019-11-07 02:55:22","","1","","","","","2019-11-07 02:55:22",""
"58625727","Adding private key as an encoded text to keychain","<p>I received the private key for iOS distribution certificate as an encoded text. </p>

<p>-----BEGIN PRIVATE KEY-----</p>

<pre><code>****ENCODED TEXT****
</code></pre>

<p>-----END PRIVATE KEY-----</p>

<p>Usually I receive this as a p12 file and add it to keychain. How can I add this encoded key to the keychain.</p>
","","19","<ios><keychain><private-key>","0","","0","2019-10-30 12:47:18","","0","","","","","2019-10-30 12:47:18",""
"52607231","Signing Xml from ""es-staging.crt"" certicate before sending via httpClient to service provider","<p>I have got <code>es-staging.crt</code> file from service provider whose service I am using.
I need to send signed xml with this <code>es-staging.crt</code> certificate. I do not know how to achieve it.</p>

<p>How to solve this in java language?</p>

<p>I have read certificate information by java code, given below.</p>

<pre><code>String cerPath = ""E:/configDirectory/es-staging.crt"";
fileInputStream = new FileInputStream(new File(cerPath));
CertificateFactory certificateFactory = CertificateFactory.getInstance(""X.509"");
x509Certificate = (X509Certificate) certificateFactory.generateCertificate(fileInputStream);
publicKey = x509Certificate.getPublicKey();
expiryDate = x509Certificate.getNotAfter();

System.out.println(""public key : ""+publicKey);
System.out.println(""expiryDate : ""+expiryDate);

System.out.println(""--&gt; Subject: "" + x509Certificate.getSubjectDN().getName());

System.out.println(""--&gt; Issuer: "" + x509Certificate.getIssuerDN().getName());
</code></pre>

<p>I have only this <code>es-staging.crt</code> certificate.</p>
","<p>You cannot sign a document with an X509 Public Key. You require access to the Private Key.</p>
","18","<java><algorithm><public-key-encryption><private-key><sign>","0","1","1","2018-10-02 16:06:28","","0","","4420967","","2018-10-02 16:06:28","2018-10-02 11:14:48",""
"56339685","CRT file does not contain a privatekey","<p>I am preparing for a demo of a suite of apps on a private lan (not connected to anything but the machines involved).   There is no DNS, so all URLs are based on IP address.</p>

<p>Because of the validations done on the ssl certs, the cert cannot be a self-signed cert.   I have therefore used the following commands with openssl (for windows) to create a CA, and derived crt.   I have successfully done this several years ago, and I think I ran into this issue before, but I cannot remember how I solved it.   Nor can I find another post that solve the issue or reminds me what the solution was.</p>

<p>I am using the following commands:</p>

<pre><code>openssl genrsa -des3 -out myCA.key 2048
openssl req -x509 -new -nodes -key myCA.key -sha256 -days 1825 -out myCA.pem
openssl genrsa -out derived.key 2048
openssl req -new -key derived.key -out derived.csr
openssl x509 -req -in derived.csr -CA myCA.pem -CAkey myCA.key -CAcreateserial -out derived.crt -days 1825 -sha256 -extfile derived.ext


[derived.ext file contents]
authorityKeyIdentifier=keyid,issuer
basicConstraints=CA:FALSE
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
subjectAltName = @alt_names

[alt_names]
DNS.1 = %%DOMAIN%%
</code></pre>

<p>The CA cert (myCA.PEM file] installs fine into the trusted roots folder. The derived.crt installs fine into the personal store, and validates properly with the CA.  However, the derived.crt does not show a private key and cannot be used for SSL. Can anyone tell me what step I got wrong or am missing?</p>
","<p>I seem to have solved the issue finally.   Apparently a .crt file cannot contain a private key.   Using the following command, I merged the .crt and key into a .pfx file, which imported and now shows a private key:</p>

<pre><code>openssl pkcs12 -export -in derived.crt -inkey derived.key -out derived.pfx  
</code></pre>
","18","<windows><openssl><private-key>","1","1","1","2019-05-28 10:38:23","","0","","","","","2019-05-28 10:01:57","2019-05-29 01:43:35"
"55560024","Distribute private key to remote server so it can access another remote server","<p>I need a remote server to be able to ssh into another remote server. It goes like this:</p>

<p>My Laptop (L) > Remote Server 1 (R1) > Remote Server 2 (R2)</p>

<p>Remote Server 1 needs to be able to ssh to Remote Server 2 so I'm wondering how to distribute keys.</p>

<p>I have 2 ideas:</p>

<ol>
<li><p>Generate a private/public pair on L, then authorize that key on R1 and R2, then also securely copy the private key to R1 (so that R1 can ssh to R2)</p></li>
<li><p>Actually generate the key on R1, then authorize that key on R2. </p></li>
</ol>

<p>Or maybe there is another way?</p>
","","16","<private-key>","0","","0","2019-04-07 14:28:11","","1","","","","","2019-04-07 14:28:11",""
"58274174","Java Code to convert OpenSSH(.pem) to Private Key (.ppk)","<p>I need to convert my private key from .pem file to .ppk file. My file contains the RSA format:</p>

<p><code>-----BEGIN RSA PRIVATE KEY-----</code></p>

<p><code>-----END RSA PRIVATE KEY-----</code></p>

<p>I specifically need to do it in java. Any help in java code snippets would be great!</p>
","","16","<ssh><private-key><pem><key-pair>","0","","0","2019-10-07 17:07:56","","0","","","","","2019-10-07 17:07:56",""
"56450442","Where store PrivateKey and CSR files in JAVA EE","<p>I'm working with JAVA EE, and I got privateKey and csr files to sign my XMLs.<br>
Actually, my structure project is:
<br><br></p>

<pre><code>myproject
  -myproject-ear
  -myproject-ejb
  -myproject-jpa
  -myproject-rest (generate my XML files)
  -myproject-web
</code></pre>

<p>Where would be the correct and secure path to store my keys?
<br></p>

<p>Actually I set it into <code>rest/src/main/resources/</code></p>
","","15","<security><java-ee><private-key><csr>","0","","0","2019-06-04 20:23:12","","0","","6467492","","2019-06-04 20:23:12","2019-06-04 19:50:39",""
"55918052","Client-side payload encryption - securing the private key","<p>I am trying to achieve end-to-end encryption.
How to I set client-side private key which is different for different customers?
Is it fine to store the client-side private key in cookies in login call from server-side? Can it be hacked while in transit? 
Please suggest if there is another way to securely achieve this.</p>
","","15","<encryption><client-side><private-key><payload>","0","","0","2019-04-30 09:38:31","","0","","","","","2019-04-30 09:38:31",""
"58201147","HSM - RSA Key Coefficient with one byte less","<p>I'm generating some RSA Key pair in an HSM (PKCS#11) and retrieving some of the atributes of the private key, like the Modulus, Exponent, etc. But, sometimes the Coefficient comes with one byte less than expected (in my case, I'm generating a 1024 bits key - 128 bytes). I suspect it is skiping the first byte if it's ""00"", since I had this problem when using RSA in software with BigInt, but I thought that the HSM wouldn't had this problem.</p>

<p>Do you know if it's a behaviour of the HSM and if I have a configuration to fix this instead of adding a ""00"" to my bytearray, since I'm not sure it's the solution?</p>
","","15","<rsa><private-key><pkcs#11><hsm>","0","","0","2019-10-02 12:04:45","","0","","","","","2019-10-02 12:04:45",""
"58726344","Authenticate using a public key","<p>So in short, I am trying to login to the remote server using PHP's ""ssh2_auth_pubkey_file"" function. And it never passes authentification. My keys are PuTTYgen generated and I am trying to access them localy but I can not make it work.</p>

<p>I have read multiple StackOverflow articles and other forums but I can not find any solution for this</p>

<pre><code>ssh2_auth_pubkey_file(
    $conn,
    $sftpUsername,
    'C:/my/path/public_key.pub',
    'C:/my/path/private_key.ppk'
);
</code></pre>

<p>When I use ""ssh2_auth_password"" I can connect to server without any problems, but public-private key authentification is giving me a lot problems...</p>
","","15","<php><private-key><public-key><libssh2>","0","","0","2019-11-06 08:58:12","","2","","","","","2019-11-06 08:58:12",""
"53621294","What if someone steal the private keys from a DKMS entity?","<p>Researching about Decentralized Key Management and how DIDs are created (which basically pretends get rid of the Central Authorities, CAs, to generate trusted digital IDs by our own, generating one single cryptographic relationship with every entity that we are ""talking"" with, so we will own one DID per entity ""relationship"" and that communication will be encrypted per-to-per) I was wondering, what if: </p>

<p><strong>Someone (hacker/cracker) steal (somehow), from a entity (let´s say, Google) all the private keys that they have stored.</strong></p>

<ul>
<li>How the end users will notice that the entity that they are talking with is not a trusted entity anymore (or at least until they get back or regenerate their own private keys)?</li>
</ul>

<p>Since the thief has all private keys, the end users will establish a new communication with the ""trusted"" entity, both of them they will need to confirm that they are the people that they say they are (using private key) and, unless some security mechanism avoid this (automatic or manual) we will not avoid fraud or tampered data, am I correct?</p>

<ul>
<li>Or is the Agent-Agent communication more complex, so even whether someone steal thousands of private keys, will be useless to him/her, and will need more data/components to perform some man-in-the-middle or similar, in order to success?</li>
</ul>
","","14","<private-key><agent><pki><dkms>","0","","0","2018-12-04 20:56:58","","1","","","","","2018-12-04 20:56:58",""
"44682283","Windows Phone 8 X509Certificate with private key data format","<p>I'd like to import a certificate and private key into a Windows Phone 8 app. The X509Certificate <a href=""https://msdn.microsoft.com/en-us/library/windows/apps/ms148393(v=vs.105).aspx"" rel=""nofollow noreferrer"">documentation</a> says ""...does not accept input data formatted in the PKCS #12 format..."". Can anyone tell me what data format it does accept? Barring that, can you tell me the easiest way to get a certificate and private key into a Windows Phone 8 app via a resource? </p>

<p>Thanks.</p>
","","14","<windows-phone-8><x509certificate><private-key>","0","","0","2017-06-21 17:09:16","","2","","","","","2017-06-21 17:09:16",""
"53776496","Using Private Key of a client certificate in the browser","<p>I have a string encrypted using the public key of a client certificate.</p>

<p>The encrypted string is then stored inside a database and it is accessible through a web page.</p>

<p>Is there a way to <strong>decrypt</strong> the string in this web page, using the <strong>client certificate</strong> of the user?</p>

<p>I know that it should be possible by using an applet, but it's such an old technology and I hate them. I'd like to understand if there is a modern alternative.</p>

<p><em>Please note that I don't want to read the private key of the client certificate, as it is a security non-sense, but I'd like to use a sort of ""browser functions"" to run a decrypt function...</em></p>
","","14","<html5><encryption><private-key><client-certificates>","0","","0","2018-12-14 09:08:04","","0","","","","","2018-12-14 09:08:04",""
"58782078","How to sign some data using public/private RSA key?","<p>I have a RSA public/private key xml file. And I want to use it to sign some data, with the following classes and here is how I use the class:</p>

<pre><code>$processor = new RSAProcessor(""certificate.xml"", RSAKeyType:: XMLFile);
$data =  $processor-&gt;sign($data); 
print(base64_encode($data));
</code></pre>

<p>but I get the error: <code>WARNING: str_repeat(): Second argument has to be greater than or equal to 0 in RSA.php on line 81</code>. How to fix it? I guess something is outdated for php 7.2? I appreciate your help what changes should I do in my class to avoid this error?</p>

<p>Rsa class:</p>

<pre><code>define(""BCCOMP_LARGER"", 1);
class RSA {
 static function rsa_encrypt($message, $public_key, $modulus, $keylength) {
  $padded = RSA::add_PKCS1_padding($message, true, $keylength / 8);
  $number = RSA::binary_to_number($padded);
  $encrypted = RSA::pow_mod($number, $public_key, $modulus);
  $result = RSA::number_to_binary($encrypted, $keylength / 8);
  return $result;
 }
 static function rsa_decrypt($message, $private_key, $modulus, $keylength) {
  $number = RSA::binary_to_number($message);
  $decrypted = RSA::pow_mod($number, $private_key, $modulus);
  $result = RSA::number_to_binary($decrypted, $keylength / 8);
  return RSA::remove_PKCS1_padding($result, $keylength / 8);
 }
 static function rsa_sign($message, $private_key, $modulus, $keylength) {
  $padded = RSA::add_PKCS1_padding($message, false, $keylength / 8);
  $number = RSA::binary_to_number($padded);
  $signed = RSA::pow_mod($number, $private_key, $modulus);
  $result = RSA::number_to_binary($signed, $keylength / 8);
  return $result;
 }
 static function rsa_verify($message, $public_key, $modulus, $keylength) {
  return RSA::rsa_decrypt($message, $public_key, $modulus, $keylength);
 }
 static function rsa_kyp_verify($message, $public_key, $modulus, $keylength) {
  $number = RSA::binary_to_number($message);
  $decrypted = RSA::pow_mod($number, $public_key, $modulus);
  $result = RSA::number_to_binary($decrypted, $keylength / 8);
  return RSA::remove_KYP_padding($result, $keylength / 8);
 }
 static function pow_mod($p, $q, $r) {
  $factors = array();
  $div = $q;
  $power_of_two = 0;
while(bccomp($div, ""0"") == BCCOMP_LARGER)  {
   $rem = bcmod($div, 2);
   $div = bcdiv($div, 2);
   if($rem) array_push($factors, $power_of_two);
   $power_of_two++;
  }
  $partial_results = array();
  $part_res = $p;
  $idx = 0;
  foreach($factors as $factor)  {
   while($idx &lt; $factor)
   {
    $part_res = bcpow($part_res, ""2"");
    $part_res = bcmod($part_res, $r);
    $idx++;
   }
   array_push($partial_results, $part_res);
  }
  $result = ""1"";
  foreach($partial_results as $part_res)
  {
   $result = bcmul($result, $part_res);
   $result = bcmod($result, $r);
  }
  return $result;
 }
 static  function add_PKCS1_padding($data, $isPublicKey, $blocksize)
 {
  $pad_length = $blocksize - 3 - strlen($data);
  if($isPublicKey)
  {
   $block_type = ""\x02"";
   $padding = """";
   for($i = 0; $i &lt; $pad_length; $i++)
   {
    $rnd = mt_rand(1, 255);
    $padding .= chr($rnd);
   }
  }
  else
  {
   $block_type = ""\x01"";
   $padding = str_repeat(""\xFF"", $pad_length);
  }
  return ""\x00"" . $block_type . $padding . ""\x00"" . $data;
 }
  static function remove_PKCS1_padding($data, $blocksize)
 {
  assert(strlen($data) == $blocksize);
  $data = substr($data, 1);
  if($data{0} == '\0')
  die(""Block type 0 not implemented."");
  assert(($data{0} == ""\x01"") || ($data{0} == ""\x02""));
  $offset = strpos($data, ""\0"", 1);
  return substr($data, $offset + 1);
 }
  static function remove_KYP_padding($data, $blocksize)
 {
  assert(strlen($data) == $blocksize);
  $offset = strpos($data, ""\0"");
  return substr($data, 0, $offset);
 }
 static function binary_to_number($data)
 {
  $base = ""256"";
  $radix = ""1"";
  $result = ""0"";
  for($i = strlen($data) - 1; $i &gt;= 0; $i--)
  {
   $digit = ord($data{$i});
   $part_res = bcmul($digit, $radix);
   $result = bcadd($result, $part_res);
   $radix = bcmul($radix, $base);
  }
  return $result;
  }
 static  function number_to_binary($number, $blocksize)
 {
  $base = ""256"";
  $result = """";
  $div = $number;
  while($div &gt; 0)
  {
   $mod = bcmod($div, $base);
   $div = bcdiv($div, $base);
   $result = chr($mod) . $result;
  }
  return str_pad($result, $blocksize, ""\x00"", STR_PAD_LEFT);
 }
}
</code></pre>

<p>RSAProcessor class:</p>

<pre><code>class RSAProcessor
{
 private $public_key = null;
 private $private_key = null;
 private $modulus = null;
 private $key_length = ""1024"";
 public function __construct($xmlRsakey=null,$type=null)
 {
         $xmlObj = null;
         if ($xmlRsakey==null) {
             $xmlObj = simplexml_load_file(""xmlfile/RSAKey.xml"");
          } elseif ($type==RSAKeyType::XMLFile) {
             $xmlObj = simplexml_load_file($xmlRsakey);
          } else {
             $xmlObj = simplexml_load_string($xmlRsakey);
          }
         $this-&gt;modulus = RSA::binary_to_number(base64_decode($xmlObj-&gt;Modulus));
         $this-&gt;public_key = RSA::binary_to_number(base64_decode($xmlObj-&gt;Exponent));
         $this-&gt;private_key = RSA::binary_to_number(base64_decode($xmlObj-&gt;D));
         $this-&gt;key_length = strlen(base64_decode($xmlObj-&gt;Modulus))*8;
 }
 public function getPublicKey() {
  return $this-&gt;public_key;
 }
 public function getPrivateKey() {
  return $this-&gt;private_key;
 }
 public function getKeyLength() {
  return $this-&gt;key_length;
 }
 public function getModulus() {
  return $this-&gt;modulus;
 }
 public function encrypt($data) {
  return base64_encode(RSA::rsa_encrypt($data,$this-&gt;public_key,$this-&gt;modulus,$this-&gt;key_length));
 }
  public function dencrypt($data) {
  return RSA::rsa_decrypt($data,$this-&gt;private_key,$this-&gt;modulus,$this-&gt;key_length);
 }
  public function sign($data) {
  return RSA::rsa_sign($data,$this-&gt;private_key,$this-&gt;modulus,$this-&gt;key_length);
 }
  public function verify($data) {
  return RSA::rsa_verify($data,$this-&gt;public_key,$this-&gt;modulus,$this-&gt;key_length);
 }
}


class RSAKeyType{
 const XMLFile = 0;
 const XMLString = 1;
}
</code></pre>

<p>certificate.xml:</p>

<pre><code>&lt;RSAKeyValue&gt;
&lt;Modulus&gt;tCZiqDS5BVQQZDBUYbyeoP4rENN4mX5FZJjjMNfGbyzfzH45RY2/YsMaY0yI1jMCOpukvkUyl153tcn0LXhMCDdsEhhZPoKbPUGMniKtFGjs18rv/b5FFUUW1utgwoL8+WJqjOqhQGgvbja63X9+WMFP0nM3d8yudn9C/X55KyM=&lt;/Modulus&gt;
    &lt;Exponent&gt;AQAB&lt;/Exponent&gt;
    &lt;P&gt;5HXvmU4IfqUG2jFLSqi/BMEQ3x1NsUDvx3zN5O1p9yLLspJ4sqAt4RUkxzcGodYgBSdXsR9IGcPwjQfbx3a7nQ==&lt;/P&gt;
    &lt;Q&gt;yd2hDCF/5Zqtz9DXjY1NRYGvBjTS4AQn83ERR46Y5eBSnLjpVjv6gPfARuhsUP44nikrQPvwPnjxQcOhJaOlvw==&lt;/Q&gt;
    &lt;DP&gt;ztuqUplBP8qU5cN0dOlN7DQT3rFdw30Unv/2Pa5qIAc1gT72YmZ+pCrM3kSIkMicvY3d7NZyJkIv8MKI0ZZEUQ==&lt;/DP&gt;
    &lt;DQ&gt;QFLJ5YarLWubZPQEK4vSCornTY/5ff51CIKH4ghTOjS/vkbBu4PDL+NCNpYLJcfMHMG7kap2BEIfhjgjGk5KGw==&lt;/DQ&gt;
    &lt;InverseQ&gt;WE6TqpcexQJwt9Mnp1FbeLtarBcFkXVdBauouFKHcbHCfQjA3IjUrGTxgSO74O/4QSKqaF2gnlL6GI7gKuGbzQ==&lt;/InverseQ&gt;  &lt;D&gt;czYtWDfHsFGv3fNOs+cGaB3E+xDTiw7HYGuquJz2qjk/s69x/zqFEKuIH8Ndq+eZYFQUCx+EGGxxENDkmYPa0z8wbfFI6JEHpxaLmQfpkkbSL1BJIp9Z5BNM2gy6jJqgbWwQPcN/4jpiMefHZWAqhMKqenUu1KIq1ZX6Bz5xKYk=&lt;/D&gt;
&lt;/RSAKeyValue&gt;
</code></pre>

<p>I appreciate your help what changes should I do in my class to avoid this error?</p>
","","13","<php><encryption><rsa><public-key-encryption><private-key>","0","","0","2019-11-09 18:04:06","","3","","","","","2019-11-09 18:04:06",""
"58724750","Read privateKey from .pfx","<p>I'm trying to read the private key from .pfx certificate, but I get an error on the privateKey: ""Operation is not supported on this platform."". I don't know how I can solve it. I think it's a .NET Core version problem.</p>

<pre><code>SigningCredentials credentials;
using (RSA privateRsa = RSA.Create())
{
  X509Certificate2 certificate = new X509Certificate2(""C:/Certificate/certificate.pfx"", ""pass123"", X509KeyStorageFlags.Exportable | X509KeyStorageFlags.PersistKeySet);
string privateKey;
try
{
  privateKey = certificate.PrivateKey.ToXmlString(false);
}
catch(Exception e)
{
  throw new Exception(e.Message);
}

privateRsa.FromXmlString(privateKey);
var signingKey = new RsaSecurityKey(privateRsa);
credentials = new SigningCredentials(signingKey, SecurityAlgorithms.RsaSha512Signature);
}
</code></pre>
","","13","<c#><private-key><pfx>","0","","0","2019-11-06 07:06:17","","0","","","","","2019-11-06 07:06:17",""
"57887994","How to get x509 Certificate and private key from USB token using Fortify","<p>Im using <a href=""https://github.com/PeculiarVentures/fortify/issues/239"" rel=""nofollow noreferrer"">Fortify</a> tool, and i want to generate all x509 Certificates and private key, in the USB Token (who uses only the <strong><em>Windows CryptoAPI</em></strong>), with json format using javascript.</p>

<p>Thank you for help. </p>
","","12","<x509certificate><private-key><fortify>","0","","0","2019-09-11 11:24:56","","0","","11889575","","2019-09-11 11:24:56","2019-09-11 11:19:32",""
"54809817","Not able to pass updated keyfile name inside fab command","<p>I am having a new ssh private key which i want to override with key file_name present in env.json file. I am passing it in my fab command , but the new key_filename is not getting overriden with old file.</p>

<pre><code>Command used:
fab -i key_filename=""prod.dsa"" env:app=test target=sys deploy:file_target=sys.tar

env.json:
""hosts"":[""10.1.1.123""],
""user"":""webadmin"",
""key_filename"":""home/.ssh/prodold.dsa

Error:
""home/.ssh/**** I/O error no Such file or directory

SO please help in passing the new Key_filename via fabric command and proceed with build and deployment
</code></pre>
","","12","<jenkins><ssh><io><fabric><private-key>","0","","0","2019-02-21 14:48:29","","0","","","","","2019-02-21 14:48:29",""
"55259002","Giving permission to application to ssl key And prevent User to access to this key","<p>I developed a Qt c ++ application with a client and a server that communicate using QSslSockets with a /etc/ssl/private/server.key key and a self-signed certificate /etc/ssl/certs/server.crt</p>

<p>Now I want to deploy this application, is there a way to allow the application
launched without sudo by the user to use the private key without giving permission to the user who launched the application to access the server.key file?</p>

<p>Thank you</p>
","","11","<deployment><permissions><private-key><user-permissions><qsslsocket>","0","","0","2019-03-20 10:51:08","","0","","","","","2019-03-20 10:51:08",""
"58732254","why is a token's bad pin saved by system on macOS","<p>I'm trying to acces an RSA private key on a physical token on macOS.</p>

<p>For this, I'm developping a Xamarin.mac Application.
The code is similar to this one :</p>

<pre><code>    SecKey key = ((SecIdentity)identity).PrivateKey; 
    string signedData = key.CreateSignature(SecKeyAlgorithm.somealgoenum, dataToSign, out error);
</code></pre>

<p>This call is accessing the private key of a physical token, as a member of the <strong>keychain</strong>.
The token is accessible in the keychain because its drivers are using <strong>TokenD</strong>. 
I know that tokenD is depreciated but I've got no choice but to use this for the moment.</p>

<p>The code is working : in my application, when I use the private key, the system automatically display me a dialog where I enter the token's PIN. It works ! I can use the private key and sign my data.</p>

<p>My problem is this one :  <strong>if I enter a wrong PIN, the system remembers it , and (I think) tries to use this bad PIN every time I try to access the private key</strong>, which automatically result in failure every time, of course.</p>

<p>To have the chance to enter the token's PIN again, I need to manually unplug and plug again the physical token .This is a problem.</p>

<p>I think this is a macOS (tested on mojave and catalina) bug because in the <strong>Keychain Access</strong> application, I see the same problem : if I try to access the ""Access Control"" of a private key's information, the application ask me for the PIN one time only, then probably try to use it forever automatically whether it's the a good or bad PIN.</p>

<p>My question is : Is there a fix for this ? What could I do to force the OS to ask me for the password again when I fail to enter it correctly ?</p>

<p>Is this even known ? Couldn't find anything on the net.</p>
","","11","<macos><security><keychain><smartcard><private-key>","0","","0","2019-11-07 08:32:30","","0","1","3627550","","2019-11-07 08:32:30","2019-11-06 14:21:48",""